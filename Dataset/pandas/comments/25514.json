[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469073962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25514#issuecomment-469073962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25514",
    "id": 469073962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA3Mzk2Mg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-03T22:54:08Z",
    "updated_at": "2019-03-03T22:54:08Z",
    "author_association": "MEMBER",
    "body": "Agreed. Investigations and PR's welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472495305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25514#issuecomment-472495305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25514",
    "id": 472495305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjQ5NTMwNQ==",
    "user": {
      "login": "sakarpanta",
      "id": 1752659,
      "node_id": "MDQ6VXNlcjE3NTI2NTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1752659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sakarpanta",
      "html_url": "https://github.com/sakarpanta",
      "followers_url": "https://api.github.com/users/sakarpanta/followers",
      "following_url": "https://api.github.com/users/sakarpanta/following{/other_user}",
      "gists_url": "https://api.github.com/users/sakarpanta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sakarpanta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sakarpanta/subscriptions",
      "organizations_url": "https://api.github.com/users/sakarpanta/orgs",
      "repos_url": "https://api.github.com/users/sakarpanta/repos",
      "events_url": "https://api.github.com/users/sakarpanta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sakarpanta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T16:18:41Z",
    "updated_at": "2019-03-13T16:18:41Z",
    "author_association": "NONE",
    "body": "I'm relatively new to the project but here is what I found:\r\nCurrently `format.py` doesn't handle complex values formatting properly. For integers there is an `IntArrayFormatter`, for floats a `FloatArrayFormatter` and so on. The complex numbers are `complex128` data types and are fed into a `GenericArrayFormatter` which just outputs the values however Numpy generates them. We need something like a `ComplexArrayFormatter`.\r\n\r\nThis `ComplexArrayFormatter` needs to distinguish between a complex float array and a complex int array, and for this, an `is_complex_float` type checker is needed in the util library. It would then need to apply the display.precision for complex floats (as is done for floats) and the return the proper formatted output."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472514891",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25514#issuecomment-472514891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25514",
    "id": 472514891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjUxNDg5MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T17:03:59Z",
    "updated_at": "2019-03-13T17:03:59Z",
    "author_association": "MEMBER",
    "body": "Maybe we can just dispatch the complex formatting to the `FloatArrayFormatter`? pandas only (somewhat) supports Numpy's complex dtypes which are all float based AFAICT.  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472554509",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25514#issuecomment-472554509",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25514",
    "id": 472554509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjU1NDUwOQ==",
    "user": {
      "login": "sakarpanta",
      "id": 1752659,
      "node_id": "MDQ6VXNlcjE3NTI2NTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1752659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sakarpanta",
      "html_url": "https://github.com/sakarpanta",
      "followers_url": "https://api.github.com/users/sakarpanta/followers",
      "following_url": "https://api.github.com/users/sakarpanta/following{/other_user}",
      "gists_url": "https://api.github.com/users/sakarpanta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sakarpanta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sakarpanta/subscriptions",
      "organizations_url": "https://api.github.com/users/sakarpanta/orgs",
      "repos_url": "https://api.github.com/users/sakarpanta/repos",
      "events_url": "https://api.github.com/users/sakarpanta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sakarpanta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T18:43:01Z",
    "updated_at": "2019-03-13T18:43:16Z",
    "author_association": "NONE",
    "body": "Yes, the `FloatArrayFormatter` will format to the `display.precision` properly, but after that all complex numbers will have the format of `1.0+2.0j` instead of `(1+2j)`. Is this something we might be okay with?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/473044646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25514#issuecomment-473044646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25514",
    "id": 473044646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzA0NDY0Ng==",
    "user": {
      "login": "jay-pee",
      "id": 9380980,
      "node_id": "MDQ6VXNlcjkzODA5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9380980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jay-pee",
      "html_url": "https://github.com/jay-pee",
      "followers_url": "https://api.github.com/users/jay-pee/followers",
      "following_url": "https://api.github.com/users/jay-pee/following{/other_user}",
      "gists_url": "https://api.github.com/users/jay-pee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jay-pee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jay-pee/subscriptions",
      "organizations_url": "https://api.github.com/users/jay-pee/orgs",
      "repos_url": "https://api.github.com/users/jay-pee/repos",
      "events_url": "https://api.github.com/users/jay-pee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jay-pee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T20:19:48Z",
    "updated_at": "2019-03-15T09:13:35Z",
    "author_association": "NONE",
    "body": "I think this would be perfectly fine, after all the complex numbers is still a float (in this case) and when you have the dot zero format you immediately know that it is a float and not an integer complex number. Its the same reason why you have the dot zero format for plain float numbers."
  }
]
