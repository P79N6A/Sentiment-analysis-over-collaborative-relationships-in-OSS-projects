[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108626847",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-108626847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 108626847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODYyNjg0Nw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T21:55:34Z",
    "updated_at": "2015-06-03T21:55:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Definitely not ready, but close enough to begin discussing the changes in behavior I am proposing.\n\nEssentially I am suggesting that if one of the flags is 'coerce' that the other must not be 'coerce' and that when 'coerce' is used then the returned array will always have the target type.\n\nIf other combinations of the keyword arguments are set to `True` (and no `'coerce'`), then the behavior is the same.  \n\nThe big change is that if `'coerce'` is passed, then no other attempts are made to convert to other types in the event that all converted values are null-types.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108865808",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-108865808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 108865808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg2NTgwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T12:13:07Z",
    "updated_at": "2015-06-04T12:13:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls rebase on master and repush had an issue with some builds\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108918769",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-108918769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 108918769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODkxODc2OQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T14:39:13Z",
    "updated_at": "2015-06-04T14:39:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had addressed all the points raised, and have two issues remaining.\n1. I am using `asanyarray` since the returned type is TimedeltaIndex which is not what is expected from this function, and causes errors in other places it is called since it doesn't have all methods of an `ndarray`.  Maybe I shoudl just use `np.array`\n2. The behavior in the current version is different for `convert_dates`/`convert_timestamps` and `convert_numeric`.  `c_d` and `c_ts` both will do nothing if given a mixed series -- that is, one which has some datetimes/timestamps but some non-convertibles.  `convert_numeric` will return `nan` for non-convertibles and numbers when convertible.  I am proposing to alter the behavior so that `True` will always return object-dtype when faxing mixed arrays.  Is this reasonable?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108920057",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-108920057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 108920057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODkyMDA1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T14:42:18Z",
    "updated_at": "2015-06-04T14:42:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "1. pass `box=False` to `to_timedelta` rather than coercing (as this will simply not box it into a `TimedeltaIndex`).\n2. can you give an example (current and proposed?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108927532",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-108927532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 108927532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODkyNzUzMg==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T15:05:18Z",
    "updated_at": "2015-06-04T15:05:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "The flags are dates, numeric, timestamps.  When it is `True, False, False` or `False,False,True` then the returned series is essentially not converted since many of the objects can't be converted to datetimes or timestamps.\n\nHowever, when it is `False,True,False` then the returned type is `float64` with `NaN`s for the not-convertible types.\n\n``` python\nimport pandas as pd\nimport datetime as dt\ndt = dt.datetime.now()\ntd = dt - dt\ns = pd.Series([1.0,'1.0',dt,td])\n\ns\nOut[6]: \n0                             1\n1                           1.0\n2    2015-06-04 10:56:04.421566\n3                       0:00:00\ndtype: object\n\ns.convert_objects(True,False,False)\nOut[7]: \n0                             1\n1                           1.0\n2    2015-06-04 10:56:04.421566\n3                       0:00:00\ndtype: object\n\ns.convert_objects(False,True,False)\nOut[8]: \n0     1\n1     1\n2   NaN\n3   NaN\ndtype: float64\n\ns.convert_objects(False,False,True)\nOut[9]: \n0                             1\n1                           1.0\n2    2015-06-04 10:56:04.421566\n3                       0:00:00\ndtype: object\n```\n\nProposed correct output would not be converted -- not even the string '1.0'. **Not sure if the string should be converted or not here**\n\n``` python\ns.convert_objects(False,True, False)\nOut[9]: \n0                           1\n1                           1.0\n2    2015-06-04 10:56:04.421566\n3                       0:00:00\ndtype: object\n```\n\nThe reason this happens in 0.16.x is that the conversion is made wiht \n\n``` python\nnew_values = lib.maybe_convert_numeric(values, set()), coerce_numeric=True)\n```\n\nin all cases, so that `coerce_numeric=True` is always passed.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108954033",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-108954033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 108954033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODk1NDAzMw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T16:14:19Z",
    "updated_at": "2015-06-04T16:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some further thoughts:\n\nThe `'coerce'` options are fine -- that it `'coerce'` will always return the expected type irrespective of what is given.\n\nThe `True`/`False` options should have the following behavior:\n1. For dates or timestamps, only convert if all objects are dates/timestamps\n2. For numeric types, convert if _anything_ is numeric-like -- either a number or a string convertible to a number.\n\nThis means that for numeric types, the only difference between `'coerce'` and `True` is when all values are `NaN` - in which case `True` will return the original array while `'coerce'` will return an array with all `NaN`s.\n\nThis still leaves the functions having a bit of _magic_, but I think being stricter would create a lot of headaches.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/109054406",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-109054406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 109054406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA1NDQwNg==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T21:16:12Z",
    "updated_at": "2015-06-04T21:16:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It should be close now.  I had to fix an issue in `groupby` so this needs some checking.  Still need to document things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/109067730",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-109067730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 109067730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA2NzczMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T21:56:35Z",
    "updated_at": "2015-06-04T21:56:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage looks pretty good.\n\nbtw, I think now might be a good time to change the actual argument names as well. ( and deprecate the originals).\n\nso instead of:\n\n`convert_objects(self, convert_dates=True, convert_numeric=False, convert_timedeltas=True, copy=True)`\n\nmaybe?\n`convert_objects(self, datetime=True, numeric=False, timedelta=True, copy=True)`\n\n or _maybe_ we just add to directly to `.astype(....)` instead? (in effect make the `dtype` arg optional if the others are passed)\n\nfurther I would not object to additional args `floating=False,integer=False` (to be cooperative with `numeric`, and would clearly have to have a precedence order), unless that is MORE confusing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/109325352",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-109325352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 109325352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTMyNTM1Mg==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T15:18:25Z",
    "updated_at": "2015-06-05T15:18:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose my ideal API would look like\n\n`convert_objects(datetime=True, numeric=False, timedelta=False, coerce=False, copy=True)`\n\nso that the values for the keywords would always be `bool` and coercions would happen if `coerce` was set.\n\nThe behavior would be as follows:\n1. If `coerce=True` then at most one of `datetime`, `numeric` or `timedelta` must be `True`, and the returned type will always have the correct type with all non-convertable values set to null-types.\n2. If `coerce=False`, then soft conversions will be attempted where a conversion is successful if **all** values can be converted to a particular type.  If any values are not-convertible, then the original object array is returned.\n\nThe current version satisfies 1 but not 2 since the behavior of `convert_numeric=True` is to always convert if at least one value is convertible to numeric, while `convert_dates` and `convert_timedelta` will only convert if all are convertible.\n\nI'm also not so sure about the `copy` flag since any conversion will be changing the underlying blocks since a columns will be changing from object to another type.  What would `copy=False` be expected to do?  Replace \"inplace\"?  Return the same object with different blocks?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/109329464",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-109329464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 109329464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTMyOTQ2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T15:30:30Z",
    "updated_at": "2015-06-05T15:30:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "`copy=True` is the default and in reality should always be `True`. Only in very very specific circumstances (and internally only) do I support `copy=False`. Its not really 'public' in that sense, so maybe should be `_copy=True` to mark it as an internal option (or could just dispense with flag, and make another func for internal consumption).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110098546",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-110098546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 110098546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDA5ODU0Ng==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-08T18:26:45Z",
    "updated_at": "2015-06-08T18:26:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "LMK what you think of this version of the API.  It is not\n\n``` python\ndf.convert_objects(datetime=True, numeric=False, timedelta=True, coerce=False, copy=True)\n```\n\nand if `coerce=True`, then only one of the three options can be `True`.  Right now using `coerce` is a little tedious since it require setting one of `datetime` or `timedelta` to be `False`.  Have though about making `timedelta=False` as a default.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110125269",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-110125269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 110125269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDEyNTI2OQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-08T20:19:02Z",
    "updated_at": "2015-06-08T20:19:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback It is green now so the major question is whether the API change is reasonable or not?  Will hold off on doc changes until then.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110186672",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-110186672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 110186672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE4NjY3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T01:01:21Z",
    "updated_at": "2015-06-09T01:01:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage I am ok with the API change (small typo on the `timedeltas` should be `timedelta`). This will have to be in 0.17.0 as we will deprecate the old. (0.16.2 coming later this week).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110759429",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-110759429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 110759429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDc1OTQyOQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T13:46:09Z",
    "updated_at": "2015-06-10T13:46:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Should the `@deprecated` be in a separate PR so it can be merged before this one?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110763017",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-110763017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 110763017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDc2MzAxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T13:55:14Z",
    "updated_at": "2015-06-10T13:55:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage no, in this PR. It doesn't make sense to deprecate something w/o replacing it. (unless its complete vestige), in this case you are renaming things, the canonical reason to use deprecate\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114521676",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114521676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114521676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDUyMTY3Ng==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-23T14:21:18Z",
    "updated_at": "2015-06-23T14:21:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I think this is ready when you are.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114842315",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114842315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114842315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg0MjMxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T11:49:53Z",
    "updated_at": "2015-06-24T12:10:33Z",
    "author_association": "MEMBER",
    "body": "Some other questions:\n1. Now, the `convert_numeric` set to True or 'coerce' does not seem to differ (it always coerces?)\n   \n   ```\n   In [30]: s = Series(['a', 'b', '1'])\n   \n   In [31]: s.convert_objects(convert_numeric=True)\n   Out[31]:\n   0   NaN\n   1   NaN\n   2     1\n   dtype: float64\n   \n   In [32]: s.convert_objects(convert_numeric='coerce')\n   Out[32]:\n   0   NaN\n   1   NaN\n   2     1\n   dtype: float64\n   ```\n   \n   Is this still the same? (I assume so from the tests) If so, this should maybe be more clear from the docs?\n2. The fact that you now have to do `df.convert_objects(datetime=False, numeric=True, coerce=True)` (as only one of the datetime, numeric or timedelta can be True when coerce=True). Is there nothing we can do about this? (because it is rather ugly?) \n   Maybe we could set `datetime=False` as the default? (we can detect this case if all three are False, and then use `datetime=True` (and possibly raise a warning))\n3. Currenly, when having no convertible values, that original is always returned, also when specifying 'coerce':\n   \n   ```\n   In [26]: s = Series(['a', 'b', 'c'])\n   \n   In [27]: s.convert_objects(convert_numeric=True)\n   Out[27]:\n   0    a\n   1    b\n   2    c\n   dtype: object\n   \n   In [28]: s.convert_objects(convert_numeric='coerce')\n   Out[28]:\n   0    a\n   1    b\n   2    c\n   dtype: object\n   ```\n   \n   With this PR, from the tests it seems that this now gives all NaNs? I think this is a reasonable change, but this should then also be listed in the API changes in whatsnew? \n   EDIT: Ah, I see this was the original issue .. :-) But it should then be mentioned in the whatsnew as well I think\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114843533",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114843533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114843533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg0MzUzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T11:57:57Z",
    "updated_at": "2015-06-24T11:57:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche `.convert_objects` generally is not used very much as almost all coercion is already done automatically, or via explicit converters like `to_datetime/to_timedelta`. Aside from some internal use, the main use is the `to_numeric` which is basically an `.astype` with that handles non-convertibles.\n\nI suppose another option is to make `.convert_objects` private, and add `pd.to_numeric` to keep things clear; a third option is to add a `coerce` argument to `.astype` to allow have a nicer API.\n\nLastly, I suppose there is a need for a function to just 'take this object series and type it correctly'. Hence having all of these in one function. I don't think this actually a common case, but at times I suppose could be useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114845503",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114845503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114845503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg0NTUwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T12:08:45Z",
    "updated_at": "2015-06-24T12:08:45Z",
    "author_association": "MEMBER",
    "body": "@jreback Although maybe not that much, but it _is_ used (for example, StackOverflow gives quite some results if you search for that) \nAnd for the case you have (for whatever reason) mixed numeric and strings, this is a useful function no? (more flexible as `astype`)\n\nI agree that eg adding `coerce` to `astype` would be a useful enhancement, but nonetheless, we should take care at `convert_objects` as well. And even it is regarded as internal, it should be clear what it does, and so my questions above should be answered :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114847605",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114847605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114847605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg0NzYwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T12:16:08Z",
    "updated_at": "2015-06-24T12:16:08Z",
    "author_association": "MEMBER",
    "body": "@bashtage BTW, you have a failing test because \"3.1415\" seems to be parsed as a timedelta. With master:\n\n```\nIn [5]: pd.to_timedelta('3.1415')\nOut[5]: Timedelta('0 days 00:00:00.141500')\n```\n\nwhich seems wrong in any case (@jreback maybe related to the changes there #10396 ?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114851103",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114851103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114851103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg1MTEwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T12:34:27Z",
    "updated_at": "2015-06-24T12:34:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche you are looking at old posts on SO, this WAS used quite a but should not be necessary in quite a few versions, except in a small number of cases.\n\nSince we have a proposed API change (to make a better naming convention), though which is back-compat. I think it might be nicer to simply move this to `.astype` as that is the use case. \n\nwould be also ok with renaming with to `.convert`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114851958",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114851958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114851958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg1MTk1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T12:38:12Z",
    "updated_at": "2015-06-24T12:38:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "`Timedelta('3.1415')` is wrong in 0.16.2 and master. So will open a separate issue for this. Was ok with accepting single integers e.g. `Timedelta('3')` which is 3ns. But now that I think about it these should raise (I don't reallly remember why I originally did that). They don't have units in this case (different story when you are explicity passing to `to_timedelta`). So its ambiguous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114861727",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114861727",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114861727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg2MTcyNw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T13:05:54Z",
    "updated_at": "2015-06-24T13:05:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche This failure is my reward for religously rebasing :-/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114863795",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114863795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114863795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg2Mzc5NQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T13:14:39Z",
    "updated_at": "2015-06-24T13:14:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "## API Design\n\n### The reason for `convert_objects`\n\nInside pandas, convert objects is frequently used to re-convert columns back to datetime after some aggregation operation, for example a `grouby`.  \n\nThis is why the proposed API is so ugly: I wanted to minimize internal refactoring of `convert_objects` and having defaults `datetime=True` with everything else `False` achieved this goal.\n\nExternally the main reason to use `convert_objects` **without** `coerce=True` is to magically convert a DataFrame of string values to one of the three supported formats.  The logic is as follows:\n\n```\nfor col in data:\n    if all of data[col] is convertable to datetime:\n        convert data[col]) to datetime\n    elif any of data[col] is convertable to numeric\n        convert data[col] to numeric (int, float as appropriate)\n   elif all of data[col] is convertible to timedelta:\n       convert data([col]) to timedelta\n```\n\nThis is strange since the behavior of partially convertable columns is different depending on the type.  This is how is is in 0.16 and I didn't want to alter this behavior since this magic is used in various places.\n\n### What should the API look like\n\nFor single type conversions, `Series` and `DataFrame` should use `astype(*,coerce=True)` which would do exactly as told - no magic, no guessing, just 100% consistent.\n\nThis would mean `convert_objects` could have the `coerce` keyword **removed** and so would only be for soft conversions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114864954",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114864954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114864954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg2NDk1NA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T13:19:52Z",
    "updated_at": "2015-06-24T13:19:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Now, the convert_numeric set to True or 'coerce' does not seem to differ (it always coerces?)\n\nI think this is correct - if the column is all strings not parsable to numbers, this will return the original data irrespective of `coerce`.  More-or-less the logic of `convert_objects` in 0.16 is deeply flawed (there are some errors in the code).  For example\n\nhttps://github.com/pydata/pandas/pull/10265/files#diff-21cb6655a9828d526610249e3d6cb16eL1921\n\ncannot do anything since new_values isn't even set.  \n\nCoverage of this internal function is not great so no wonder this slipped through.\n\n> The fact that you now have to do df.convert_objects(datetime=False, numeric=True, coerce=True) (as only one of the datetime, numeric or timedelta can be True when coerce=True). Is there nothing we can do about this? (because it is rather ugly?)\n> Maybe we could set datetime=False as the default? (we can detect this case if all three are False, and then use datetime=True (and possibly raise a warning))\n\nI am hesitant to do this since there are lots of internal places it is assumed `convert_dates=True` in 0.16.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114864974",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114864974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114864974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg2NDk3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T13:19:55Z",
    "updated_at": "2015-06-24T13:19:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, then let's deprecate `raise_on_error` in `.astype` and replace it with `coerce` (you may need to slightly adjust the logic in `core/internals/_astype`).\n\nThen `convert_objects` is much simpler (only does soft conversions).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114865310",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114865310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114865310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg2NTMxMA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T13:20:38Z",
    "updated_at": "2015-06-24T13:20:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, will work on this in the next few days\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114866750",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114866750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114866750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg2Njc1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T13:25:44Z",
    "updated_at": "2015-06-24T13:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The fact that you now have to do df.convert_objects(datetime=False, numeric=True, coerce=True) (as only one of the datetime, numeric or timedelta can be True when coerce=True). Is there nothing we can do about this? (because it is rather ugly?)\n> Maybe we could set datetime=False as the default? (we can detect this case if all three are False, and then use datetime=True (and possibly raise a warning))\n> \n> > I am hesitant to do this since there are lots of internal places it is assumed convert_dates=True in 0.16.\n\nThis is simply not possible, nor desired. `.convert_objects` is NOT meant for public consumption except in a very special case (naming safe-astyping). If this is moved to `.astype` then no reason to have this public anymore. \n\nSo should deprecate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114904637",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114904637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114904637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDkwNDYzNw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T15:18:10Z",
    "updated_at": "2015-06-24T15:18:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Having started looking at `astype` I'm less sure about what I shoudl expect to happen.\n\nFor example, what should happen if I have \n\n```\ndf = pd.DataFrame({'a':[1.3,3.1415]})\ndf.astype(np.int, coerce=True)\n```\n\nConverting object dtype to other things makes sense, but `coerce` doesn't seem to be generally applicable without lots of arbitrary choices (like how to change floats to integers).\n\nI suppose the big advantage of `convert_objects` is that it is only for object columns, and not for anything else.  \n\nMaybe `astype(*,coerce_object=True)` as a special case, or just `coerce` but with a note/warning that `coerce` is only applicable when when the input `dtype` is `object`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114913559",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10265#issuecomment-114913559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10265",
    "id": 114913559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDkxMzU1OQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T15:36:48Z",
    "updated_at": "2015-06-24T15:36:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "My previous example isn't useful.  This is maybe clearer:\n\n```\ndf = pd.DataFrame({'a':['2015-01-01','2015-01-02']}).astype(np.datetime64)\ndf.astype(np.float64, coerce=True)\n```\n\nor similarly\n\n```\ndf = pd.DataFrame({'a':[1.0,np.nan]})\n df.astype(np.int64, coerce=True)\n```\n\nWhat would be expected?  It seems a general dtype to dtype conversion with coercion might be very difficult and complex.\n"
  }
]
