[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3403865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/395#issuecomment-3403865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/395",
    "id": 3403865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM4NjU=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-08T19:22:15Z",
    "updated_at": "2012-01-08T19:22:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now that formatting always uses same number of digits, one can wonder what does _precision_ mean?\nOne gets more or less precision depending on the columns content.\n\n``` python\nIn [1]: import numpy as np\n\nIn [2]: import pandas\n\nIn [3]: df = pandas.DataFrame({'A': [-1, 1e-2, 123456789, np.pi, np.sqrt(2)]})\n\nIn [4]: df\nOut[4]: \n   A        \n0 -1.0000000\n1  0.0100000\n2  1.235e+08\n3  3.1415927\n4  1.4142136\n```\n\nBy the way _precision_ seems to be one digit off target when using the default float formatter, ok when using the eng one.\n\n``` python\nIn [5]: df = pandas.DataFrame({'A': [np.pi, np.sqrt(2)]})\n\nIn [6]: df\nOut[6]: \n   A    \n0  3.142\n1  1.414\n\nIn [7]: pandas.core.common._precision\nOut[7]: 4\n\nIn [8]: pandas.set_printoptions(precision=3)\n\nIn [9]: pandas.core.common._precision\nOut[9]: 3\n\nIn [10]: df\nOut[10]: \n   A   \n0  3.14\n1  1.41\n\nIn [11]: pandas.set_eng_float_format(use_eng_prefix=False, precision=3)\n\nIn [12]: df\nOut[12]: \n   A        \n0  3.142E+00\n1  1.414E+00\n\nIn [13]: df = pandas.DataFrame({'A': [-1, 1e-2, 123456789, np.pi, np.sqrt(2)]})\n\nIn [14]: df\nOut[14]: \n   A          \n0 -1.000E+00  \n1  10.000E-03 \n2  123.457E+06\n3  3.142E+00  \n4  1.414E+00  \n\nIn [15]: pandas.core.common._precision\nOut[15]: 3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3404529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/395#issuecomment-3404529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/395",
    "id": 3404529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ1Mjk=",
    "user": {
      "login": "adamklein",
      "id": 869232,
      "node_id": "MDQ6VXNlcjg2OTIzMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/869232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamklein",
      "html_url": "https://github.com/adamklein",
      "followers_url": "https://api.github.com/users/adamklein/followers",
      "following_url": "https://api.github.com/users/adamklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamklein/subscriptions",
      "organizations_url": "https://api.github.com/users/adamklein/orgs",
      "repos_url": "https://api.github.com/users/adamklein/repos",
      "events_url": "https://api.github.com/users/adamklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-08T20:53:56Z",
    "updated_at": "2012-01-08T20:53:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I took precision to be number of significant digits, in which case to\nme it looks like the default float formatter is actually the right\nnumber of digits here, vs the eng one. It will be good to resolve this\nambiguity.\n\nOn Jan 8, 2012, at 2:22 PM, Wouter Overmeire\nreply@reply.github.com\nwrote:\n\n> Now that formatting always uses same number of digits, one can wonder what does _precision_ mean?\n> One gets more or less precision depending on the columns content.\n> \n> ``` python\n> In [1]: import numpy as np\n> \n> In [2]: import pandas\n> \n> In [3]: df = pandas.DataFrame({'A': [-1, 1e-2, 123456789, np.pi, np.sqrt(2)]})\n> \n> In [4]: df\n> Out[4]:\n>   A\n> 0 -1.0000000\n> 1  0.0100000\n> 2  1.235e+08\n> 3  3.1415927\n> 4  1.4142136\n> ```\n> \n> By the way _precision_ seems to be one digit off target when using the default float formatter, ok when using the eng one.\n> \n> ``` python\n> In [5]: df = pandas.DataFrame({'A': [np.pi, np.sqrt(2)]})\n> \n> In [6]: df\n> Out[6]:\n>   A\n> 0  3.142\n> 1  1.414\n> \n> In [7]: pandas.core.common._precision\n> Out[7]: 4\n> \n> In [8]: pandas.set_printoptions(precision=3)\n> \n> In [9]: pandas.core.common._precision\n> Out[9]: 3\n> \n> In [10]: df\n> Out[10]:\n>   A\n> 0  3.14\n> 1  1.41\n> \n> In [11]: pandas.set_eng_float_format(use_eng_prefix=False, precision=3)\n> \n> In [12]: df\n> Out[12]:\n>   A\n> 0  3.142E+00\n> 1  1.414E+00\n> \n> In [13]: df = pandas.DataFrame({'A': [-1, 1e-2, 123456789, np.pi, np.sqrt(2)]})\n> \n> In [14]: df\n> Out[14]:\n>   A\n> 0 -1.000E+00\n> 1  10.000E-03\n> 2  123.457E+06\n> 3  3.142E+00\n> 4  1.414E+00\n> \n> In [15]: pandas.core.common._precision\n> Out[15]: 3\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/wesm/pandas/issues/395#issuecomment-3403865\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3404903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/395#issuecomment-3404903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/395",
    "id": 3404903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ5MDM=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-08T21:40:54Z",
    "updated_at": "2012-01-08T21:40:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, so it's a matter of definition.\n\nI think definitions are:\nprecision = the effective number of decimal digits\naccuracy = is the effective number of these digits which appear to the right of the decimal point\nBut i see precision often used when one means accuracy.\n\nThen eng float formatter uses _precision_ argument to indicate the effective number of digits which appear to the right of the decimal point. So for pandas maybe better to use _accuracy_ for eng formatter iso _precision_ (as matplotlib does).\n\nWhat pandas means by _precision_ is the minimum number of digits, since the actual precision (as defined above) depends on the column content, see my example in previous comment.\n"
  }
]
