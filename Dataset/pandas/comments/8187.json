[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54712850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8187#issuecomment-54712850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8187",
    "id": 54712850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzEyODUw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T13:54:33Z",
    "updated_at": "2014-09-06T13:54:33Z",
    "author_association": "MEMBER",
    "body": "The only thing is that the result is no longer a `datetime64` column (but maybe we could just warn for that in the docstring?). But of course this is the same with the round-trip through DatetimeIndex.\n\nFurthermore, I think `to_pydatetime` and `to_period` would also be useful to add to `.dt`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54734573",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8187#issuecomment-54734573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8187",
    "id": 54734573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzM0NTcz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-07T01:48:42Z",
    "updated_at": "2014-09-07T01:48:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "so datetime columns with tz become object _even_ if they share tz info (I'd never noticed that!)... is this another case of wanting Series meta data or is there some way we can have dti behaviour here?\n\n```\nIn [11]: s = pd.Series(pd.date_range(start='2014-01-01', periods=30, freq='d'));\n\nIn [12]: pd.Series(pd.DatetimeIndex(s).tz_localize('US/Central')).head()\nOut[12]:\n0    2014-01-01 00:00:00-06:00\n1    2014-01-02 00:00:00-06:00\n2    2014-01-03 00:00:00-06:00\n3    2014-01-04 00:00:00-06:00\n4    2014-01-05 00:00:00-06:00\ndtype: object\n```\n\n+1 on method parity between dti & dt.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54734626",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8187#issuecomment-54734626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8187",
    "id": 54734626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzM0NjI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-07T01:51:44Z",
    "updated_at": "2014-09-07T01:51:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "it IS possible to fix this and make datetime tz aware columns \n\nneed a subclass of the DatetimeBlock internally that keeps the tz (would need to be a uniform tz for the block)\n\nnot sure how tricky his would be \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54844726",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8187#issuecomment-54844726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8187",
    "id": 54844726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQ0NzI2",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T16:11:26Z",
    "updated_at": "2014-09-08T16:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "The vast majority of the friction I've experienced using pandas has come from the fact that `Timestamp`s are Good and `datetime64`s are Evil, and which representation my data have at a given time is a pandas sort-of-internal that leaks all over the place.  Anything that reduces that friction gets a +1 from me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54869172",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8187#issuecomment-54869172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8187",
    "id": 54869172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODY5MTcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T18:55:05Z",
    "updated_at": "2014-09-08T18:58:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep sort of trivial, going to add as part of #8184 (as well as `to_period/to_pydatetime`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54874674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8187#issuecomment-54874674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8187",
    "id": 54874674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODc0Njc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T19:35:06Z",
    "updated_at": "2014-09-08T19:35:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [5]: s = Series(date_range('20130101',periods=3))\n\nIn [6]: s\nOut[6]: \n0   2013-01-01\n1   2013-01-02\n2   2013-01-03\ndtype: datetime64[ns]\n\nIn [7]: s.dt.\ns.dt.date              s.dt.dayofyear         s.dt.is_month_start    s.dt.is_year_end       s.dt.minute            s.dt.quarter           s.dt.to_period         s.dt.tz_localize       s.dt.weekofyear        \ns.dt.day               s.dt.hour              s.dt.is_quarter_end    s.dt.is_year_start     s.dt.month             s.dt.second            s.dt.to_pydatetime     s.dt.week              s.dt.year              \ns.dt.dayofweek         s.dt.is_month_end      s.dt.is_quarter_start  s.dt.microsecond       s.dt.nanosecond        s.dt.time              s.dt.tz_convert        s.dt.weekday           \n\nIn [7]: s.dt.tz_localize('US/Eastern')\nOut[7]: \n0    2013-01-01 00:00:00-05:00\n1    2013-01-02 00:00:00-05:00\n2    2013-01-03 00:00:00-05:00\ndtype: object\n\n# this returns a scalar (as opposed to a Series)\nIn [4]: s.dt.tz_localize('US/Eastern').dt.tz\nOut[4]: <DstTzInfo 'US/Eastern' EST-1 day, 19:00:00 STD>\n```\n"
  }
]
