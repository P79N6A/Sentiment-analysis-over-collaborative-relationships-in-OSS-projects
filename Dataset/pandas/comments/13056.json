[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216255276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-216255276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 216255276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjI1NTI3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T14:47:19Z",
    "updated_at": "2016-05-02T14:47:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are trying to do too much inside an apply which is completely non-performant. `.apply` has to guess your return output. I suppose this is slightly confusing, in any event you should simply be doing this.\n\n```\nIn [14]: df.groupby('y').x.apply(lambda x: x)\nOut[14]: \n0    2.481148\n1   -1.324170\n2    0.783518\n3    0.869827\n4   -0.080157\n5    0.071685\n6    0.987246\n7    0.099149\n8   -0.159449\n9   -0.383200\nName: x, dtype: float64\n\nIn [15]: df2.groupby('y').x.apply(lambda x: x)\nOut[15]: \n0    2.481148\n1   -1.324170\n2    0.783518\n3    0.869827\n4   -0.080157\n5    0.071685\n6    0.987246\n7    0.099149\n8   -0.159449\n9   -0.383200\nName: x, dtype: float64\n```\n\nI'll mark it as an issue if you'd like to investigate whether this could be made consistent w/o breaking anything else (might not be possible).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216256361",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-216256361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 216256361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjI1NjM2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T14:51:18Z",
    "updated_at": "2016-05-02T14:51:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "this was changed by this: https://github.com/pydata/pandas/pull/3239\n\nsort of a special case was added I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216261843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-216261843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 216261843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjI2MTg0Mw==",
    "user": {
      "login": "edfall",
      "id": 12717769,
      "node_id": "MDQ6VXNlcjEyNzE3NzY5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12717769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edfall",
      "html_url": "https://github.com/edfall",
      "followers_url": "https://api.github.com/users/edfall/followers",
      "following_url": "https://api.github.com/users/edfall/following{/other_user}",
      "gists_url": "https://api.github.com/users/edfall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edfall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edfall/subscriptions",
      "organizations_url": "https://api.github.com/users/edfall/orgs",
      "repos_url": "https://api.github.com/users/edfall/repos",
      "events_url": "https://api.github.com/users/edfall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edfall/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T15:06:54Z",
    "updated_at": "2016-05-02T15:06:54Z",
    "author_association": "NONE",
    "body": "yep, I think the way you(@jreback) use do solve problem of inconsistent return format, However, sometimes it's important to keep the groupby variables as a label, which your method failed to. \n\nwhat's more, the function in `.apply`  formula can be more complicated as the aim and data changes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216262439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-216262439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 216262439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjI2MjQzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T15:09:20Z",
    "updated_at": "2016-05-02T15:09:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@edfall and so how would you reconcile this issue?\n\nI don't think you can infer what format the user wants and meet all users expectations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216265757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-216265757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 216265757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjI2NTc1Nw==",
    "user": {
      "login": "edfall",
      "id": 12717769,
      "node_id": "MDQ6VXNlcjEyNzE3NzY5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12717769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edfall",
      "html_url": "https://github.com/edfall",
      "followers_url": "https://api.github.com/users/edfall/followers",
      "following_url": "https://api.github.com/users/edfall/following{/other_user}",
      "gists_url": "https://api.github.com/users/edfall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edfall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edfall/subscriptions",
      "organizations_url": "https://api.github.com/users/edfall/orgs",
      "repos_url": "https://api.github.com/users/edfall/repos",
      "events_url": "https://api.github.com/users/edfall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edfall/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T15:21:52Z",
    "updated_at": "2016-05-02T15:29:44Z",
    "author_association": "NONE",
    "body": "@jreback\n\nof cause, it's really difficult to meet all users' satisfaction, but return format of any specific application should always keep the same. and I think the result should at least be something like:\n\n``` python\n df.groupby('y').apply(lambda x: x.x)\n#y\n#1 0    2.481148\n#  1   -1.324170\n#  2    0.783518\n#  3    0.869827\n#  4   -0.080157\n#  5    0.071685\n#  6    0.987246\n#  7    0.099149\n#  8   -0.159449\n#  9   -0.383200\n```\n\nMaybe I have use R package `data.table`, which can do similar things as '.groupby().apply' do, but all results of its' application is predictable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377527514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-377527514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 377527514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzUyNzUxNA==",
    "user": {
      "login": "xappppp",
      "id": 7443937,
      "node_id": "MDQ6VXNlcjc0NDM5Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7443937?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xappppp",
      "html_url": "https://github.com/xappppp",
      "followers_url": "https://api.github.com/users/xappppp/followers",
      "following_url": "https://api.github.com/users/xappppp/following{/other_user}",
      "gists_url": "https://api.github.com/users/xappppp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xappppp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xappppp/subscriptions",
      "organizations_url": "https://api.github.com/users/xappppp/orgs",
      "repos_url": "https://api.github.com/users/xappppp/repos",
      "events_url": "https://api.github.com/users/xappppp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xappppp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T13:47:07Z",
    "updated_at": "2018-03-30T13:47:07Z",
    "author_association": "NONE",
    "body": "It seems the trick is not the groupby-apply, but the what the lambda function return. if put a well defined function into apply() and return the result in a defined format you want, and it will solve the problem.\r\n\r\ndata.table in R seems have not issue as such though"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392131359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-392131359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 392131359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjEzMTM1OQ==",
    "user": {
      "login": "vss888",
      "id": 20497083,
      "node_id": "MDQ6VXNlcjIwNDk3MDgz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20497083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vss888",
      "html_url": "https://github.com/vss888",
      "followers_url": "https://api.github.com/users/vss888/followers",
      "following_url": "https://api.github.com/users/vss888/following{/other_user}",
      "gists_url": "https://api.github.com/users/vss888/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vss888/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vss888/subscriptions",
      "organizations_url": "https://api.github.com/users/vss888/orgs",
      "repos_url": "https://api.github.com/users/vss888/repos",
      "events_url": "https://api.github.com/users/vss888/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vss888/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-25T17:44:38Z",
    "updated_at": "2018-05-25T17:52:15Z",
    "author_association": "NONE",
    "body": "@xappppp : What should the function return to avoid the problem? For me, it normally returns either a Series or a DataFrame and I want all the outputs to be concatenated in the end (for any number of groups, including one)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403241032",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-403241032",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 403241032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI0MTAzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-07T20:27:54Z",
    "updated_at": "2018-07-07T20:27:54Z",
    "author_association": "MEMBER",
    "body": "Also related to this: https://github.com/pandas-dev/pandas/issues/14927 (about detecting mutating functions)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403300216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-403300216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 403300216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzMwMDIxNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-08T16:43:25Z",
    "updated_at": "2018-07-08T16:43:25Z",
    "author_association": "MEMBER",
    "body": "Here is a short notebook with an overview of the behaviours: http://nbviewer.jupyter.org/gist/jorisvandenbossche/16f511fe111a8b9fa0eac74e920c5251\r\n\r\nSome things to note:\r\n\r\n* We have the different code path depending on whether the original group (mutated or not) is returned (related to #14927 ). \r\n  * If the original object is returned, a \"transform\" behaviour is used (keep original index order, don't add groupby key to the index)\r\n  * I would personally deprecate this, and point users to `groupby().transform(..)`\r\n* Then for the \"normal\" apply behaviour, we have:\r\n  * In general, specification is:\r\n    * The `func` gets the full group (including the key column)\r\n    * The results of `func(group)` are stacked, the groupby key is added to the Index (creating a MultiIndex)\r\n  * Some specific things to note how things are stacked:\r\n    * If it is a Series, we make a distinction between:\r\n      * resulting Series that for each group has the same length as the index: stack vertically\r\n      * resulting Series has fixed size (or different to group size): stack horizontally\r\n    * scalars result in a final Series\r\n\r\nI think in gerenal the second bullet point above makes sense. Only the Series differentiation is a bit strange. Do we want to keep this?\r\n\r\nAdditional note:\r\n\r\n* Why do have both `as_index=True/False` and `group_keys=True/False` ?\r\n\r\ncc @WillAyd \r\n\r\n(the above is only for functions "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437366883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-437366883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 437366883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzM2Njg4Mw==",
    "user": {
      "login": "fred-xue",
      "id": 22796245,
      "node_id": "MDQ6VXNlcjIyNzk2MjQ1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22796245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fred-xue",
      "html_url": "https://github.com/fred-xue",
      "followers_url": "https://api.github.com/users/fred-xue/followers",
      "following_url": "https://api.github.com/users/fred-xue/following{/other_user}",
      "gists_url": "https://api.github.com/users/fred-xue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fred-xue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fred-xue/subscriptions",
      "organizations_url": "https://api.github.com/users/fred-xue/orgs",
      "repos_url": "https://api.github.com/users/fred-xue/repos",
      "events_url": "https://api.github.com/users/fred-xue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fred-xue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T13:57:27Z",
    "updated_at": "2018-11-09T13:57:27Z",
    "author_association": "NONE",
    "body": "I ran into the same issue. Need a consistent behavior for this. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/467839817",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13056#issuecomment-467839817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13056",
    "id": 467839817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzgzOTgxNw==",
    "user": {
      "login": "ratulbhadury",
      "id": 17718359,
      "node_id": "MDQ6VXNlcjE3NzE4MzU5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17718359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ratulbhadury",
      "html_url": "https://github.com/ratulbhadury",
      "followers_url": "https://api.github.com/users/ratulbhadury/followers",
      "following_url": "https://api.github.com/users/ratulbhadury/following{/other_user}",
      "gists_url": "https://api.github.com/users/ratulbhadury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ratulbhadury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ratulbhadury/subscriptions",
      "organizations_url": "https://api.github.com/users/ratulbhadury/orgs",
      "repos_url": "https://api.github.com/users/ratulbhadury/repos",
      "events_url": "https://api.github.com/users/ratulbhadury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ratulbhadury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T12:14:19Z",
    "updated_at": "2019-02-27T12:14:19Z",
    "author_association": "NONE",
    "body": "Also hitting a problem because of the inconsistent shape of what apply returns. +1 for fix please!"
  }
]
