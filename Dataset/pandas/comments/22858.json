[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426453118",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22858#issuecomment-426453118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22858",
    "id": 426453118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ1MzExOA==",
    "user": {
      "login": "JustinZhengBC",
      "id": 29615021,
      "node_id": "MDQ6VXNlcjI5NjE1MDIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/29615021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinZhengBC",
      "html_url": "https://github.com/JustinZhengBC",
      "followers_url": "https://api.github.com/users/JustinZhengBC/followers",
      "following_url": "https://api.github.com/users/JustinZhengBC/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinZhengBC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinZhengBC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinZhengBC/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinZhengBC/orgs",
      "repos_url": "https://api.github.com/users/JustinZhengBC/repos",
      "events_url": "https://api.github.com/users/JustinZhengBC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinZhengBC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T22:34:41Z",
    "updated_at": "2018-10-02T22:34:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems to be intended behaviour, as demonstrated by the following test in pandas/tests/frame/test_constructor.py::TestDataFramConstructors::test_constructor_corner\r\n```\r\ndf = DataFrame(index=lrange(10), columns=['a', 'b'], dtype=int)\r\n    assert df.values.dtype == np.dtype('float64')\r\n```\r\n\r\nThe code responsible for this behaviour is found in pandas/core/dtypes/cast.py, on line 1223. Commenting out these two lines causes the above test, and no others, to fail in the pytest suite.\r\n```\r\nif is_integer_dtype(dtype) and isna(value):\r\n    dtype = np.float64\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426472540",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22858#issuecomment-426472540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22858",
    "id": 426472540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ3MjU0MA==",
    "user": {
      "login": "araraonline",
      "id": 19141454,
      "node_id": "MDQ6VXNlcjE5MTQxNDU0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19141454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/araraonline",
      "html_url": "https://github.com/araraonline",
      "followers_url": "https://api.github.com/users/araraonline/followers",
      "following_url": "https://api.github.com/users/araraonline/following{/other_user}",
      "gists_url": "https://api.github.com/users/araraonline/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/araraonline/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/araraonline/subscriptions",
      "organizations_url": "https://api.github.com/users/araraonline/orgs",
      "repos_url": "https://api.github.com/users/araraonline/repos",
      "events_url": "https://api.github.com/users/araraonline/events{/privacy}",
      "received_events_url": "https://api.github.com/users/araraonline/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T00:17:33Z",
    "updated_at": "2018-10-03T00:23:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't feel this is intended behavior, but it may be a rough corner produced by the code you mentioned.\r\n\r\nIn the issue sample, the columns are empty, therefore, no need to upcast to `float`:\r\n\r\n ```python\r\n>>> df = pd.DataFrame(columns=list('ABC'), dtype='int64')\r\n>>> df\r\nEmpty DataFrame\r\nColumns: [A, B, C]\r\nIndex: []\r\n```\r\n\r\nIn the test case you mentioned, though, the `DataFrame` must be filled with `NaN` and therefore `float` is needed:\r\n\r\n```python\r\n>>> df = pd.DataFrame(index=range(10), columns=['a', 'b'], dtype=int)\r\n>>> df\r\n    a   b\r\n0 NaN NaN\r\n1 NaN NaN\r\n2 NaN NaN\r\n3 NaN NaN\r\n4 NaN NaN\r\n5 NaN NaN\r\n6 NaN NaN\r\n7 NaN NaN\r\n8 NaN NaN\r\n9 NaN NaN\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426478086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22858#issuecomment-426478086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22858",
    "id": 426478086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ3ODA4Ng==",
    "user": {
      "login": "JustinZhengBC",
      "id": 29615021,
      "node_id": "MDQ6VXNlcjI5NjE1MDIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/29615021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JustinZhengBC",
      "html_url": "https://github.com/JustinZhengBC",
      "followers_url": "https://api.github.com/users/JustinZhengBC/followers",
      "following_url": "https://api.github.com/users/JustinZhengBC/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinZhengBC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JustinZhengBC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinZhengBC/subscriptions",
      "organizations_url": "https://api.github.com/users/JustinZhengBC/orgs",
      "repos_url": "https://api.github.com/users/JustinZhengBC/repos",
      "events_url": "https://api.github.com/users/JustinZhengBC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JustinZhengBC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T00:53:50Z",
    "updated_at": "2018-10-03T00:53:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point. Theoretically it could be fixed by making the int cast to float only if an lrange is specified. I can try it out later and submit a PR if the tests pass."
  }
]
