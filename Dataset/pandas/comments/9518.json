[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75191475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75191475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75191475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTkxNDc1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T05:23:46Z",
    "updated_at": "2015-02-20T05:23:46Z",
    "author_association": "MEMBER",
    "body": "I'll make a PR for this, which we can merge immediately before or after the release of v0.16.0. That way, dev versions will remain meaningfully ordered.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75192147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75192147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75192147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTkyMTQ3",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T05:35:38Z",
    "updated_at": "2015-02-20T05:35:38Z",
    "author_association": "NONE",
    "body": "if you actually read the PEP it makes it clear pandas itself is not allowed to use local version strings. just so you know. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75194455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75194455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75194455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTk0NDU1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T06:13:00Z",
    "updated_at": "2015-02-20T06:13:00Z",
    "author_association": "MEMBER",
    "body": "@kay1793  I did in fact read the PEP. My main intent here was to preserve the useful identifying nature of existing development versions. Git hashes are an important part of that.\n\nWe don't make or tag regular development releases of pandas (aside from release candidates), so the `.dev` and `.post` tags are not suitable for us. Because we don't distribute any releases with these versions, I think it's perfectly suitable to use local version identifiers in this context. If a user installs a development version of pandas, I think it is reasonable to consider that a \"downstream\" version of the upstream, released versions of pandas -- and in fact, this default format ensures that such downstream versions are sorted properly.\n\nThis usage is also exactly what versioneer settled on, and I think they provide a compelling justification in the PR adding this: https://github.com/warner/python-versioneer/pull/67\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75199116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75199116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75199116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTk5MTE2",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T07:18:31Z",
    "updated_at": "2015-02-20T08:58:02Z",
    "author_association": "NONE",
    "body": ">  Because we don't distribute any releases with these versions, I think it's perfectly suitable to use \n> local version identifiers in this context\n\nand the PEP says you're wrong.\n\n> If a user installs a development version of pandas, I think it is reasonable to consider that a \n> \"downstream\" version of the upstream, released versions of pandas\n\nno.\n\n> We don't make or tag regular development releases of pandas (aside from release candidates), \n> so the .dev and .post tags are not suitable for us\n\n\"developmental release\" is not clearly defined in the document, so .devN is probably what the PEP wants you to use. Otherwise,  the PEP only concerns itself with official release versions and because pandas makes no official dev releases it can do what it likes during development and still be compliant (and users should use `python setup.py`).\nIn any case, choosing to treat every commit as if it were a developmental relase  for versioning is far more reasonable then your claim that pandas is its own downstream (!) between releases.\n\n> Git hashes are an important part of that.\n\nsure, but not for the setuptools version (all you need there is sorting). git hashes matter in the internal version pandas keeps in `__version__`, mainly for bug reports. that doesn't need to be pep440 compliant and is actually fine right now.\n\n> This usage is also exactly what versioneer settled on, and I think they provide a compelling \n> justification in the PR adding this: warner/python-versioneer#67\n\nDo you mean:\n\n``` text\nSo in one sense, we're abusing this feature to add information that doesn't fit in the \nother part (which PEP440 calls the \"public version identifier\"). But in another \nsense, tagged sources are \"upstream\", and your development tree (e.g. \nbasically any source that isn't tagged) is a \"downstream\". \n```\n\n?? that's not compelling at all. a project can't be its own downstream just like a person can't be his/her own mother. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75201100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75201100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75201100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjAxMTAw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T07:46:03Z",
    "updated_at": "2015-02-20T07:46:03Z",
    "author_association": "MEMBER",
    "body": "Do you really think that pandas should use different version identifiers in `setup.py` and `__version__`? That seems like a terrible idea to me.\n\n> Otherwise, the PEP only concerns itself with official release versions, and since pandasd makes no dev release, it can do what it likes during development and still be compliant\n\nYes, this is my point exactly. This is not a literal interpretation of PEP 440 guidelines but a pragmatic choice for a gray area that it doesn't cover (unreleased development versions).\n\nThe only reasonable alternative I've seen is `'0.15.2.post.dev224+geadfd92'`, but that version string has a lot more noise.\n\nCan you think of any actual situations where such usage would be problematic?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75202185",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75202185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75202185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjAyMTg1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T07:59:24Z",
    "updated_at": "2015-02-20T07:59:24Z",
    "author_association": "MEMBER",
    "body": "You'll also notice:\n\n> Many build tools integrate with distributed version control systems like Git and Mercurial in order to add an identifying hash to the version identifier. As hashes cannot be ordered reliably such versions are not permitted in the public version field.\n> \n> As with semantic versioning, the public .devN suffix may be used to uniquely identify such releases for publication, while the original DVCS based label can be stored in the project metadata.\n> \n> **Identifying hash information may also be included in local version labels.** (emphasis mine)\n\nhttps://www.python.org/dev/peps/pep-0440/#dvcs-based-version-labels\n\nPandas does not actually use a build system for unreleased development versions, so I'm not convinced it even makes sense to have `.devN` in the public version identifier, given that `N` here does not refer to any particular version (e.g., tracking master), but just however many commits have been made since the last tagged release (which may be squashed away or whatever).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75204304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75204304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75204304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjA0MzA0",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T08:24:53Z",
    "updated_at": "2015-02-20T08:24:53Z",
    "author_association": "NONE",
    "body": "> Do you really think that pandas should use different version identifiers in setup.py \n> and  **version**? That seems like a terrible idea to me.\n\ndo you have a reason you'd like to share for thinking that?\n\nI was thinking  0.15.2.dev242 and 0.15.2-242-geadfd92 are practically interchangable.\n\n> Yes, this is my point exactly. <...> this a pragmatic choice for a gray area that it doesn't cover ...\n\nBut it does define what an upstream project is and says you should not use local version strings. Whether you violate that in order to handle some other undefined need is beside the point.\n\n> Can you think of any actual situations where such usage would be problematic? \n\nthat's not how standards are supposed to work. violating them because \"I don't see a problem\" is not how standards should be treated. can you think of a reason to abuse a PEP when you don't need to?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75205260",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75205260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75205260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjA1MjYw",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T08:35:26Z",
    "updated_at": "2015-02-20T08:55:04Z",
    "author_association": "NONE",
    "body": "> ```\n> Identifying hash information may also be included in local version labels. (emphasis mine)\n> ```\n\nyou're not allowed to use local version labels.\n\n``` text\nAn \"upstream project\" is a project that defines its own public versions. A \"downstream project\" is one which tracks and redistributes an upstream project, potentially backporting security and bug fixes from later versions of the upstream project.\n\nLocal version identifiers SHOULD NOT be used for upstream projects.\n```\n\n> Pandas does not actually use a build system for unreleased development versions\n\nwhat does that have to do with anything?\n\n```\n the public .devN suffix may be used to uniquely identify such releases\n```\n\n\"uniquely identify\" is what you care about, whether a \"build system\" is involved doesn't matter.\n\n>  but just however many commits have been made since the last tagged release (which may\n>  be squashed away or whatever).\n\nso you're squshing public history in master now??\n\nassuming you don't (you don't really) then the number of commits since the last tag is a unique (ordering) identifier of a commit and that's all you need for setuptools. The convenience of git tag can live in the (or in a) internal version string. setuptools doesn't need to know about it.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75207534",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75207534",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75207534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjA3NTM0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T08:58:44Z",
    "updated_at": "2015-02-20T08:58:44Z",
    "author_association": "MEMBER",
    "body": "> so you're squshing public history in master now??\n> \n> Assuming you don't (you don't really) then the number of commits since last tag can be used to uniquely identify a release, with sorting.\n\nYou can install development versions of pandas from source from any branch on any source, not just master. So IMO the number does not suffice.\n\nAlso, note that 0.15.2.devN < 0.15.2 as far as setup tools is concerned -- hence the need for .post.devN\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75215709",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75215709",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75215709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjE1NzA5",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T10:12:38Z",
    "updated_at": "2015-02-20T10:12:38Z",
    "author_association": "NONE",
    "body": "> You can install development versions of pandas from source from any branch on any source, \n> not just master. So IMO the number does not suffice.\n\nI don't understand. your goal is to control version sorting wrt to other commits in other forks and branches now? ok, well good luck with that.\n\n> Also, note that 0.15.2.devN < 0.15.2 as far as setup tools is concerned -- hence the need for .post.devN\n\nYes I did miss that and you actually need `.post0.devN` in that case I think.\n\nStill waiting to hear why you think having `pd.__version__` append \"-ga1b3cdf\" (or something) to the `.devN`  version string in setup.py is such a \"terrible idea\". unless you actually meant that \"all branches all sources\" bit that is.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75224467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75224467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75224467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI0NDY3",
    "user": {
      "login": "ncoghlan",
      "id": 1026649,
      "node_id": "MDQ6VXNlcjEwMjY2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncoghlan",
      "html_url": "https://github.com/ncoghlan",
      "followers_url": "https://api.github.com/users/ncoghlan/followers",
      "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
      "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
      "repos_url": "https://api.github.com/users/ncoghlan/repos",
      "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T11:29:31Z",
    "updated_at": "2015-02-20T11:29:31Z",
    "author_association": "NONE",
    "body": "I think using local versions for this is fine - the PEP 440 restriction is intended to be against uploading them to PyPI. Generating them when building directly from a source checkout seems fine to me - in that case, you're not relying on version specifiers, you're giving the VCS URL explicitly.\n\nHowever, you may still want to consider incrementing the version number and switching to \"commits since the last tag\" dev release numbering - once the previous release has been published, installing from source control is at least arguably a pre-release of the next version, rather than a post-release of the previous one.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75235962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75235962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75235962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjM1OTYy",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T13:15:02Z",
    "updated_at": "2015-02-20T13:29:44Z",
    "author_association": "NONE",
    "body": "@ncoghlan, The PEP (which you co-wrote... hi there) should say that then, because `Local version identifiers SHOULD NOT be used for upstream projects.` doesn't really. The PEP also strongly implies that local version strings are reserved for use by packagers and entities which distribute patched versions of an upstream package. The case of \"version strings for installations from upstream git master\" isn't covered which is why people are bending over backwards with silly arguments like \"upstream is its own downstream\" to work around what is written in there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75243076",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75243076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75243076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjQzMDc2",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T14:10:38Z",
    "updated_at": "2015-02-20T14:10:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think part of what is being lost here is that if a user is building from source then they _are_ their own packagers.  Using the down-stream post-fix (with the git hash) to make it easy for the upstream devs to understand exactly what version some one is using when they report an issue is a first order good (because 'master' is a moving target).\n\nAt my day-job we package and distribute internally a number of python packages (at this point _mostly_ our own stuff) and I am sure that we are not unique in this regard.  Having the upstream projects set up to emit sensible local patch numbering also seems like a first order good (because I am lazy).\n\n@ncoghlan As I understood the pep the `post` can take a number ex `X.X.X.postN+gHASH`.   If you do this with out a version bump you can get all of the information you need out of `git describe`  rather than having to introspect the python (which is nice for playing nice with tools like conda).\n\nThere is also existential discussion of what a 'release' _is_.  One can make the case that _every_ git commit that passes tests is a 'release', but this seems like the wrong place to start painting that bike shed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75257694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75257694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75257694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjU3Njk0",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T15:37:17Z",
    "updated_at": "2015-02-20T15:38:05Z",
    "author_association": "NONE",
    "body": "> make it easy for the upstream devs to understand exactly what version some one is using \n> ... is a first order good \n\nYes, but no one is actually saying the git hash is _not_ useful, only questioning what the PEP (as written) says about upstream using `+foo` to hold it. \n\n> if a user is building from source then they are their own packagers\n\nI'm not so sure - if they're packaging a version that is simply an upstream commit with a version string that upstream decided on? what would be the difference between upstream shipping tarballs and users doing it in this case? it's a de-facto dev release by upstream.\n\nI dislike the suggested `.preN` version string because semantic versioning means you're never sure what the next version will be and releasing 1.2.3.pre127 when you might never release 1.2.3 seems wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75297886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75297886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75297886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjk3ODg2",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T18:56:34Z",
    "updated_at": "2015-02-20T18:56:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm not so sure - if they're packaging a version that is simply an upstream commit with a version string that upstream decided on? what would be the difference between upstream shipping tarballs and users doing it in this case? it's a de-facto dev release by upstream.\n\nIf a user checks out a commit and builds it (turning source -> binary) and then installs it they are doing _exactly_ what a packager does.  If upstream suggests a version string, already localized, to be something sensible, they are just being good OSS citizens :smiling_imp: .\n\nIf upstream did a full 'release' with the rigamarole of rebuilding the docs, announcements to the mailing list etc etc that included the `+stuff` that would be a problem but no one is suggesting that.\n\nhttps://xkcd.com/386/\n\n![snapshot2](http://imgs.xkcd.com/comics/duty_calls.png)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75337334",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-75337334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 75337334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzM3MzM0",
    "user": {
      "login": "ncoghlan",
      "id": 1026649,
      "node_id": "MDQ6VXNlcjEwMjY2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncoghlan",
      "html_url": "https://github.com/ncoghlan",
      "followers_url": "https://api.github.com/users/ncoghlan/followers",
      "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
      "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
      "repos_url": "https://api.github.com/users/ncoghlan/repos",
      "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-20T23:17:28Z",
    "updated_at": "2015-02-20T23:17:28Z",
    "author_association": "NONE",
    "body": "If you're not touching PyPI (which is the case when installing directly from version control) then PEP 440's guidelines don't have to apply - we're specifically looking to control _published_ version identifiers that need to interact with version specifiers, and hence need to define an unambiguous total ordering.\n\nI've filed https://github.com/pypa/interoperability-peps/issues/25 to propose clarifying this directly in the PEP, but in the meantime, if a local version identifier solves your problem, feel free to go that way.  Don't tie yourselves in knots trying to stick to the letter of a PEP that doesn't currently cover your situation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76370356",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-76370356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 76370356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzcwMzU2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T10:18:22Z",
    "updated_at": "2015-02-27T10:18:22Z",
    "author_association": "MEMBER",
    "body": "@shoyer What is the exact format you propose?\n\nWe have now, depending on git being found or not, the formats `v0.15.2-226-ge1aaf8c` and `v0.15.2.dev`. Make this:\n- `v0.15.2+226.ge1aaf8c` (and `v0.15.2+dev`)\n- `v0.15.2.post.dev226+ge1aaf8c`\n- `v0.16.dev226+ge1aaf8c`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76393203",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-76393203",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 76393203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzkzMjAz",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T13:21:41Z",
    "updated_at": "2015-02-27T13:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would advocate for `v0.15.2.post226+ge1aaf8c` as it does not require you to guess the next next release number, is more-or-less a valid version (modulo the extra `+`) and easier to parse than a pre-release of a post-release.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76393838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-76393838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 76393838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzkzODM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T13:26:48Z",
    "updated_at": "2015-02-27T13:26:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "see here : https://github.com/ContinuumIO/blaze/blob/master/core.recipe/version.py\n\nwhich generates tags like\n\n0.15.2.post226.gelaaf8c\n\nwe use this now for conda recipes \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76449091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-76449091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 76449091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDQ5MDkx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T18:47:42Z",
    "updated_at": "2015-02-27T18:47:42Z",
    "author_association": "MEMBER",
    "body": "My thought was to do `v0.15.2+226.ge1aaf8c` and `v0.15.2+dev`. That seemed like a little less noise than adding `.post`, which could be a bit confusing given that these releases never make it on pypi or other distribution channels.\n\nOn the other hand, maybe including `.post` is a good idea given that that makes it clear this is a version _after_ rather than before `v0.15.2`. So I guess my vote is for @tacaswell's version: `v0.15.2.post226+ge1aaf8c`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76546794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-76546794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 76546794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTQ2Nzk0",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T21:23:15Z",
    "updated_at": "2015-02-28T21:23:15Z",
    "author_association": "NONE",
    "body": "I think @tacaswell's suggestion should work fine too, there's nothing confusing about adding .post and users installing these versions know where they came from anyway.\n\n@jreback's suggstion is invalid according to the PEP so that doesn't help anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77946541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-77946541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 77946541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTQ2NTQx",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T21:27:05Z",
    "updated_at": "2015-03-09T21:27:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Your link is dead, did you change your mind about using that method?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77948573",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-77948573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 77948573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTQ4NTcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T21:37:32Z",
    "updated_at": "2015-03-09T21:37:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/ContinuumIO/blaze/blob/master/core.recipe/meta.yaml\n\nthey r now doing it directly in the conda build (which is better)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77949045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-77949045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 77949045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTQ5MDQ1",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T21:40:08Z",
    "updated_at": "2015-03-09T21:40:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "This makes it more difficult to feed back into the `__version__`  string of the module though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77950230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-77950230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 77950230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTUwMjMw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T21:46:28Z",
    "updated_at": "2015-03-09T21:46:28Z",
    "author_association": "MEMBER",
    "body": "Here's a direct link to that `version.py` file: https://github.com/ContinuumIO/blaze/blob/9f225500e16ec021540fcbb949e73ae35eae4d8c/conda.recipe/version.py\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93519732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-93519732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 93519732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNTE5NzMy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T18:22:24Z",
    "updated_at": "2015-04-15T18:22:24Z",
    "author_association": "MEMBER",
    "body": "I tried implemented this change locally. Unfortunately, something about the new version format broke with the old version of pip I was using:\n\n```\n$ pip install -e .\nObtaining file:///Users/shoyer/dev/pandas\n  Running setup.py (path:/Users/shoyer/dev/pandas/setup.py) egg_info for package from file:///Users/shoyer/dev/pandas\n\n    warning: no files found matching 'README.rst'\n    warning: no directories found matching 'examples'\n    warning: no previously-included files matching '*.so' found anywhere in distribution\n    warning: no previously-included files matching '*.pyd' found anywhere in distribution\n    warning: no previously-included files matching '*~' found anywhere in distribution\n    warning: no previously-included files matching '#*' found anywhere in distribution\nCleaning up...\nException:\nTraceback (most recent call last):\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/commands/install.py\", line 278, in run\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/req.py\", line 1145, in prepare_files\n    req_to_install.run_egg_info()\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/req.py\", line 330, in run_egg_info\n    \"%(Name)s==%(Version)s\" % self.pkg_info())\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/_vendor/pkg_resources.py\", line 2667, in parse\n    reqs = list(parse_requirements(s))\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/_vendor/pkg_resources.py\", line 2605, in parse_requirements\n    line, p, specs = scan_list(VERSION,LINE_END,line,p,(1,2),\"version spec\")\n  File \"/Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages/pip/_vendor/pkg_resources.py\", line 2583, in scan_list\n    \"Expected ',' or end-of-list in\",line,\"at\",line[p:]\nValueError: (\"Expected ',' or end-of-list in\", u'pandas==0.16.0.post151+gcef3c85', 'at', u'+gcef3c85')\n```\n\nThen I upgraded to the newest pip and things worked fine:\n\n```\n$ pip install -e .\nDEPRECATION: --download-cache has been deprecated and will be removed in the future. Pip now automatically uses and configures its cache.\nObtaining file:///Users/shoyer/dev/pandas\nRequirement already satisfied (use --upgrade to upgrade): python-dateutil in /Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages (from pandas==0.16.0.post151+gcef3c85)\nRequirement already satisfied (use --upgrade to upgrade): pytz>=2011k in /Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages (from pandas==0.16.0.post151+gcef3c85)\nRequirement already satisfied (use --upgrade to upgrade): numpy>=1.7.0 in /Users/shoyer/miniconda/envs/pandas-dev/lib/python2.7/site-packages (from pandas==0.16.0.post151+gcef3c85)\nInstalling collected packages: pandas\n  Running setup.py develop for pandas\nSuccessfully installed pandas-0.16.0.post151+gcef3c85\n```\n\nBut the version I initially tested (1.5.6) was only released last May. I suspect we'll get some grief if we break lots of dev installs. Not sure if there is really any ideal solution here....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93593596",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-93593596",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 93593596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNTkzNTk2",
    "user": {
      "login": "ncoghlan",
      "id": 1026649,
      "node_id": "MDQ6VXNlcjEwMjY2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncoghlan",
      "html_url": "https://github.com/ncoghlan",
      "followers_url": "https://api.github.com/users/ncoghlan/followers",
      "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
      "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
      "repos_url": "https://api.github.com/users/ncoghlan/repos",
      "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T23:09:43Z",
    "updated_at": "2015-04-15T23:09:43Z",
    "author_association": "NONE",
    "body": "Just following up here to say https://github.com/pypa/interoperability-peps/issues/25 has been closed via this tweak to PEP 440: https://hg.python.org/peps/rev/bf4ffb364faf\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93598131",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-93598131",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 93598131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNTk4MTMx",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T23:35:33Z",
    "updated_at": "2015-04-15T23:35:33Z",
    "author_association": "NONE",
    "body": "Thanks @ncoghlan.\n\n@shoyer PEP440-compliant version strings make recent-ish pip versions croak? \nare you sure you were using a release and not some interim git version?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93608594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-93608594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 93608594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNjA4NTk0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-16T00:56:53Z",
    "updated_at": "2015-04-16T00:56:53Z",
    "author_association": "MEMBER",
    "body": "I definitely was not using a development version of pip. I can do some more experiments -- it's possible that there was something funny with the setup of that virtual environment...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93612567",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9518#issuecomment-93612567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9518",
    "id": 93612567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNjEyNTY3",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-16T01:31:19Z",
    "updated_at": "2015-04-16T01:31:19Z",
    "author_association": "NONE",
    "body": "I think you got it right. [PEP-386](https://www.python.org/dev/peps/pep-0386/) preceded 440 and sanctioned the form:\n\n`N.N[.N]+[{a|b|c|rc}N[.N]+][.postN][.devN]`\n\nalso included are specific regexps for parsing which include a terminating \"$\" and so you can't have anything following a `.postN`. That means PEP-440 local versions are not back-compatible with the tools which obey the previous version standard of python. \n\nWhile checking this I've discovered pip phones home without asking whenever you run an install to check for updates. that's always a bonus.\n"
  }
]
