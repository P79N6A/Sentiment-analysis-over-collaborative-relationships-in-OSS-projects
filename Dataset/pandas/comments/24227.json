[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446240689",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446240689",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446240689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI0MDY4OQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T15:22:05Z",
    "updated_at": "2018-12-28T17:40:42Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on December 28, 2018 at 17:40 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446244928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446244928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446244928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI0NDkyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T15:33:06Z",
    "updated_at": "2018-12-11T15:33:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is ultimately going to be pretty non-performant, meaning now columns are separated. but it is where we are going. let's not do this for 0.24 :<"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446248764",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446248764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446248764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI0ODc2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T15:43:21Z",
    "updated_at": "2018-12-12T03:57:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is about all we need to ensure that a numpy EA never ends up in a Series / index under normal conditions. Doing frame now.\r\n\r\n<details>\r\n\r\n```diff\r\ndiff --git a/pandas/core/arrays/numpy_.py b/pandas/core/arrays/numpy_.py\r\nindex f9b88b325..67314826e 100644\r\n--- a/pandas/core/arrays/numpy_.py\r\n+++ b/pandas/core/arrays/numpy_.py\r\n@@ -56,6 +56,7 @@ class NumPyExtensionDtype(ExtensionDtype):\r\n \r\n \r\n class NumPyExtensionArray(ExtensionArray, ExtensionOpsMixin):\r\n+    _typ = \"npy_extension\"\r\n     __array_priority__ = 1000\r\n \r\n     def __init__(self, values):\r\ndiff --git a/pandas/core/dtypes/generic.py b/pandas/core/dtypes/generic.py\r\nindex 7a3ff5d29..7bdcdabef 100644\r\n--- a/pandas/core/dtypes/generic.py\r\n+++ b/pandas/core/dtypes/generic.py\r\n@@ -67,7 +67,11 @@ ABCExtensionArray = create_pandas_abc_type(\"ABCExtensionArray\", \"_typ\",\r\n                                            (\"extension\",\r\n                                             \"categorical\",\r\n                                             \"periodarray\",\r\n+                                            \"npy_extension\",\r\n                                             ))\r\n+ABCNumPyExtensionArray = create_pandas_abc_type(\"ABCNumPyExtensionArray\",\r\n+                                                \"_typ\",\r\n+                                                (\"npy_extension\",))\r\n \r\n \r\n class _ABCGeneric(type):\r\ndiff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py\r\nindex 811d66c74..352c23189 100644\r\n--- a/pandas/core/indexes/base.py\r\n+++ b/pandas/core/indexes/base.py\r\n@@ -27,7 +27,7 @@ import pandas.core.dtypes.concat as _concat\r\n from pandas.core.dtypes.generic import (\r\n     ABCDataFrame, ABCDateOffset, ABCDatetimeIndex, ABCIndexClass,\r\n     ABCMultiIndex, ABCPeriodIndex, ABCSeries, ABCTimedeltaArray,\r\n-    ABCTimedeltaIndex)\r\n+    ABCTimedeltaIndex, ABCNumPyExtensionArray)\r\n from pandas.core.dtypes.missing import array_equivalent, isna\r\n \r\n from pandas.core import ops\r\n@@ -261,6 +261,9 @@ class Index(IndexOpsMixin, PandasObject):\r\n                 return cls._simple_new(data, name)\r\n \r\n         from .range import RangeIndex\r\n+        if isinstance(data, ABCNumPyExtensionArray):\r\n+            # ensure users don't accidentally put a NumPyEA in an index.\r\n+            data = data._ndarray\r\n \r\n         # range\r\n         if isinstance(data, RangeIndex):\r\ndiff --git a/pandas/core/internals/construction.py b/pandas/core/internals/construction.py\r\nindex c43745679..f08fbe2e7 100644\r\n--- a/pandas/core/internals/construction.py\r\n+++ b/pandas/core/internals/construction.py\r\n@@ -24,11 +24,13 @@ from pandas.core.dtypes.common import (\r\n     is_integer_dtype, is_iterator, is_list_like, is_object_dtype, pandas_dtype)\r\n from pandas.core.dtypes.generic import (\r\n     ABCDataFrame, ABCDatetimeIndex, ABCIndexClass, ABCPeriodIndex, ABCSeries,\r\n-    ABCTimedeltaIndex)\r\n+    ABCTimedeltaIndex, ABCNumPyExtensionArray)\r\n from pandas.core.dtypes.missing import isna\r\n \r\n from pandas.core import algorithms, common as com\r\n-from pandas.core.arrays import Categorical, ExtensionArray, period_array\r\n+from pandas.core.arrays import (\r\n+    Categorical, ExtensionArray, period_array,\r\n+)\r\n from pandas.core.index import (\r\n     Index, _get_objs_combined_axis, _union_indexes, ensure_index)\r\n from pandas.core.indexes import base as ibase\r\n@@ -577,6 +579,9 @@ def sanitize_array(data, index, dtype=None, copy=False,\r\n             # we will try to copy be-definition here\r\n             subarr = _try_cast(data, True, dtype, copy, raise_cast_failure)\r\n \r\n+    elif isinstance(data, ABCNumPyExtensionArray):\r\n+        # don't let people put NumPy EAs into Series.\r\n+        subarr = data._ndarray\r\n     elif isinstance(data, ExtensionArray):\r\n         subarr = data\r\n \r\ndiff --git a/pandas/tests/indexes/test_base.py b/pandas/tests/indexes/test_base.py\r\nindex 2580a47e8..7c52a8a3e 100644\r\n--- a/pandas/tests/indexes/test_base.py\r\n+++ b/pandas/tests/indexes/test_base.py\r\n@@ -260,6 +260,12 @@ class TestIndex(Base):\r\n         with pytest.raises(ValueError, match=msg):\r\n             Index(data, dtype=dtype)\r\n \r\n+    def test_constructor_no_numpy_backed_ea(self):\r\n+        ser = pd.Series([1, 2, 3])\r\n+        result = pd.Index(ser.array)\r\n+        expected = pd.Index([1, 2, 3])\r\n+        tm.assert_index_equal(result, expected)\r\n+\r\n     @pytest.mark.parametrize(\"klass,dtype,na_val\", [\r\n         (pd.Float64Index, np.float64, np.nan),\r\n         (pd.DatetimeIndex, 'datetime64[ns]', pd.NaT)\r\ndiff --git a/pandas/tests/series/test_constructors.py b/pandas/tests/series/test_constructors.py\r\nindex f5a445e2c..6b0f0b02e 100644\r\n--- a/pandas/tests/series/test_constructors.py\r\n+++ b/pandas/tests/series/test_constructors.py\r\n@@ -21,6 +21,7 @@ from pandas import (\r\n     Categorical, DataFrame, Index, IntervalIndex, MultiIndex, NaT, Series,\r\n     Timestamp, date_range, isna, period_range, timedelta_range)\r\n from pandas.api.types import CategoricalDtype\r\n+from pandas.core.internals.blocks import IntBlock\r\n from pandas.core.arrays import period_array\r\n import pandas.util.testing as tm\r\n from pandas.util.testing import assert_series_equal\r\n@@ -1238,3 +1239,9 @@ class TestSeriesConstructors():\r\n         result = Series(dt_list)\r\n         expected = Series(dt_list, dtype=object)\r\n         tm.assert_series_equal(result, expected)\r\n+\r\n+    def test_constructor_no_numpy_backed_ea(self):\r\n+        ser = pd.Series([1, 2, 3])\r\n+        result = pd.Series(ser.array)\r\n+        tm.assert_series_equal(ser, result)\r\n+        assert isinstance(result._data.blocks[0], IntBlock)\r\n```\r\n\r\n</details>\r\n\r\n> but it is where we are going. let's not do this for 0.24 :<\r\n\r\nDo you think it's likely to delay things? Since pandas isn't using `.array` in many places it's not touching that much.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446257495",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446257495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446257495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI1NzQ5NQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-11T16:04:37Z",
    "updated_at": "2018-12-11T16:04:37Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=h1) Report\n> Merging [#24227](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/c994e98c0e216622ad025c0c9e28421a4a3ee6af?src=pr&el=desc) will **decrease** coverage by `49.22%`.\n> The diff coverage is `38.17%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24227/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master   #24227       +/-   ##\n===========================================\n- Coverage   92.21%   42.99%   -49.23%     \n===========================================\n  Files         162      163        +1     \n  Lines       51763    51938      +175     \n===========================================\n- Hits        47733    22330    -25403     \n- Misses       4030    29608    +25578\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `?` | |\n| #single | `42.99% <38.17%> (-0.02%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/internals/blocks.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2Jsb2Nrcy5weQ==) | `52.07% <0%> (-41.74%)` | :arrow_down: |\n| [pandas/core/reshape/reshape.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9yZXNoYXBlLnB5) | `13.62% <0%> (-85.94%)` | :arrow_down: |\n| [pandas/core/arrays/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `41.8% <100%> (-53.51%)` | :arrow_down: |\n| [pandas/core/arrays/numpy\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL251bXB5Xy5weQ==) | `36.74% <36.74%> (ø)` | |\n| [pandas/core/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYmFzZS5weQ==) | `31.77% <60%> (-65.87%)` | :arrow_down: |\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `72.72% <71.42%> (-22.91%)` | :arrow_down: |\n| [pandas/io/formats/latex.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvbGF0ZXgucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/core/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY2F0ZWdvcmljYWwucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/io/sas/sas\\_constants.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3Nhcy9zYXNfY29uc3RhbnRzLnB5) | `0% <0%> (-100%)` | :arrow_down: |\n| ... and [127 more](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=footer). Last update [c994e98...a1fecf4](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446257517",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446257517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446257517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI1NzUxNw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-12-11T16:04:42Z",
    "updated_at": "2018-12-28T18:18:44Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=h1) Report\n> Merging [#24227](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/ab55d05e7a12ebbccfd71511d36efa075fcfa0dc?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `93.87%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24227/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24227      +/-   ##\n==========================================\n+ Coverage   92.29%    92.3%   +<.01%     \n==========================================\n  Files         163      165       +2     \n  Lines       51948    52181     +233     \n==========================================\n+ Hits        47945    48165     +220     \n- Misses       4003     4016      +13\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.72% <93.87%> (+0.01%)` | :arrow_up: |\n| #single | `42.96% <35.91%> (-0.03%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYmFzZS5weQ==) | `97.7% <100%> (+0.02%)` | :arrow_up: |\n| [pandas/core/internals/blocks.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2Jsb2Nrcy5weQ==) | `93.81% <100%> (-0.01%)` | :arrow_down: |\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `95.47% <100%> (+0.12%)` | :arrow_up: |\n| [pandas/core/reshape/reshape.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9yZXNoYXBlLnB5) | `99.56% <100%> (ø)` | :arrow_up: |\n| [pandas/core/internals/construction.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2NvbnN0cnVjdGlvbi5weQ==) | `96.66% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/arrays/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2dlbmVyaWMucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.28% <100%> (ø)` | :arrow_up: |\n| [pandas/core/internals/arrays.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2FycmF5cy5weQ==) | `100% <100%> (ø)` | |\n| [pandas/core/arrays/numpy\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL251bXB5Xy5weQ==) | `93.05% <93.05%> (ø)` | |\n| ... and [3 more](https://codecov.io/gh/pandas-dev/pandas/pull/24227/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=footer). Last update [ab55d05...35f50a5](https://codecov.io/gh/pandas-dev/pandas/pull/24227?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446257768",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446257768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446257768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI1Nzc2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T16:05:20Z",
    "updated_at": "2018-12-11T16:05:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "a1fecf4e912b601b56948397381ae4edbcc75752 has the changes that ensure these don't enter pandas by normal means (you can still create the block directly, or monekypatch as we do in the tests)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446450155",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446450155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446450155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjQ1MDE1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T03:35:33Z",
    "updated_at": "2018-12-12T03:35:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "On the name, what do people think about just `PandasArray`? That gives us more flexibility into the future, since we don't tie the name to the implementation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446453957",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446453957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446453957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjQ1Mzk1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T04:00:35Z",
    "updated_at": "2018-12-12T04:00:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "A few questions\r\n\r\n1. What downsides are we missing here? What can this break that we aren't expecting? On the one hand this feels like a large change for this late in the release cycle, but not much is using `Seires/Index.array` yet so very few changes were needed to pass the test suite.\r\n2. Should we intentionally limit the scope of `PandasArray` for now? (remove ops, reductions) in the spirit of keeping things small?\r\n3. Do we want to do this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446465276",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446465276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446465276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjQ2NTI3Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T05:18:17Z",
    "updated_at": "2018-12-12T05:18:17Z",
    "author_association": "MEMBER",
    "body": "I like the separate PandasArray. That makes it easier to understand that it\ngets unboxed as a special case, and we can save NumpyArray for the boxed\nversion. I don't think there are good reasons to limit its scope -- there\nare probably some use cases for wrapping the ExtensionArray interface\ndirectly.\nOn Tue, Dec 11, 2018 at 8:00 PM Tom Augspurger <notifications@github.com>\nwrote:\n\n> A few questions\n>\n>    1. What downsides are we missing here? What can this break that we\n>    aren't expecting? On the one hand this feels like a large change for this\n>    late in the release cycle, but not much is using Seires/Index.array\n>    yet so very few changes were needed to pass the test suite.\n>    2. Should we intentionally limit the scope of PandasArray for now?\n>    (remove ops, reductions) in the spirit of keeping things small?\n>    3. Do we want to do this?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446453957>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABKS1u9qm-kzqBhP0dpS2igb0i7_jwd5ks5u4H9pgaJpZM4ZNoQZ>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446573170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446573170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446573170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjU3MzE3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T12:36:24Z",
    "updated_at": "2018-12-12T12:36:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "``PandasArray`` sgtm. But I will say this needs much more integration into pandas proper. I don't think introducing this in 0.24.0 at this late date is a good idea. Rather finish DTA and release."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446574553",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446574553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446574553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjU3NDU1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T12:40:42Z",
    "updated_at": "2018-12-12T12:40:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think introducing this in 0.24.0 at this late date is a good idea.\r\n\r\nI share some of that sentiment, but I still thing this is good for 0.24. We have a new API in `.array`, and this really seems like something that we'll wish we had done.\r\n\r\nPlus... I think it's done :)\r\n\r\n> Rather finish DTA and release.\r\n\r\nI needed a break from staring out our JSON serializer :) But I'll get back to that now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446575041",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446575041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446575041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjU3NTA0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T12:42:37Z",
    "updated_at": "2018-12-12T12:42:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I needed a break from staring out our JSON serializer :) But I'll get back to that now.\r\n\r\nlol"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446580852",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446580852",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446580852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjU4MDg1Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T13:04:23Z",
    "updated_at": "2018-12-12T13:04:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "The light integration is intentional.\r\n\r\n> We store ExtensionArrays separately. So this is yet another break with the implementation. This makes understanding what is going on very confusing.\r\n\r\nThe catching of `PandasArray` specifically and unboxing it is indeed different, and confusing. No argument there. But, I think we also agree that these shouldn't actually end up inside a Series / DataFrame (IIRC @shoyer proposed that, not sure if @jorisvandenbossche weighed in).\r\n\r\nTo me, it comes down to balancing some additional maintenance burden (the checks for `ABCNumPyExtensionArray`) in order to not break user-code if / when we decide that re-writing the block manager is a good idea. I think that it's likely enough to happen that we should consider this.\r\n\r\nSo, my vote is for either\r\n\r\n1. Not doing this at all (and maybe having to break code in 2.x if that's when we re-do the block manager)\r\n2. Taking this PR roughly as is (`.array` returns a PandasArray, but it isn't allowed inside our containers under normal usage).\r\n\r\nThe 3rd option is adding `PandasArray` and allowing it in pandas (no `ABCNumPyExtensionArray` checks) but I don't think we should do that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446678190",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446678190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446678190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjY3ODE5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T17:45:42Z",
    "updated_at": "2018-12-12T17:45:42Z",
    "author_association": "MEMBER",
    "body": "> The catching of PandasArray specifically and unboxing it is indeed different, and confusing. No argument there. But, I think we also agree that these shouldn't actually end up inside a Series / DataFrame (IIRC @shoyer proposed that, not sure if @jorisvandenbossche weighed in).\r\n\r\nYes, that's what I more or less was commenting here: https://github.com/pandas-dev/pandas/pull/23581#issuecomment-445982660. If doing this, I was assuming that we would not actually store then as ExtensionBlocks, but still as consolidated blocks.\r\n\r\nIt's certainly an added complexity that `.array` is sometimes the actual stored data, or sometimes a PandasArray with a view on (a part of) the stored numpy array, and indeed breaks the model. But the current situation where `.array` returns an ExtensionArray or a numpy ndarray depending on the dtype is *also* not that clean and consistent.\r\n\r\nRegarding 0.24/0.25: if we want to do this, I think it is the most logical to do it now for 0.24, since it is now that we are adding the `Series.array` and `pd.array`. \r\nAnd I think the argument of it needing more time in master is equally valid for DatetimeArray (for which IMO we will also need at least a couple of weeks in master).\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446680041",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-446680041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 446680041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjY4MDA0MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T17:51:05Z",
    "updated_at": "2018-12-12T17:51:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> (for which IMO we will also need at least a couple of weeks in master)\r\n\r\nJust to verify, we should do a release candidate with DatetimeArray ASAP, right? And then 1-2 weeks on master while the RC is out?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447000682",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447000682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447000682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzAwMDY4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T15:05:15Z",
    "updated_at": "2018-12-13T15:05:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now that we've had some time to think on it, what are people's thoughts?\r\n\r\n@shoyer and @jorisvandenbossche are I think +1 (in broad terms. May disagree with certain parts of the implementation).\r\n\r\nI just think that\r\n\r\n1. Having `.array -> ExtensionArray` rather than `-> Union[ndarray, ExtensionArray]` is going to be more useful for people working with this.\r\n2. The basics of principal of \"inplace modification on `Series.array` will be reflected back in the Series\" is still true (and still probably a bad idea).\r\n3. We can swap out the underlying data backing the `.array` in the future without breaking user code (at least for users doing \"normal\" things).\r\n\r\nI think those benefits outweigh the costs of this PR (the checking for a `PandasArray` in the constructors).\r\n\r\nIt'd be nice to get a go / no go on this, so that I can update https://github.com/pandas-dev/pandas/pull/23581 accordingly. I've actually already done the work for `pd.array` to return a PandasArray, just haven't pushed it :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447013149",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447013149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447013149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzAxMzE0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T15:39:10Z",
    "updated_at": "2018-12-13T15:39:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not not against this idea generally at all. Rather this needs quite some integration. I worry that this will be implemented, then we just don't change anything else, leaving the internals just to rot. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447017788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447017788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447017788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzAxNzc4OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T15:51:03Z",
    "updated_at": "2018-12-13T15:51:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Rather this needs quite some integration. I worry that this will be implemented, then we just don't change anything else, leaving the internals just to rot.\r\n\r\nI guess I'm not sure how PandasArray changes that, other than us implementing PandasArray later, after internals starts using `.array`, causing us to have to rewrite the parts of pandas' internals that were expecting `.array` to be an ndarray. If anything, we should be doing PandasArray *before* we start using `.array` all over the place."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447582024",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447582024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447582024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzU4MjAyNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-15T16:54:30Z",
    "updated_at": "2018-12-15T16:54:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just because I was curious, I added support for `__array_ufunc__` to PandasArray. Not sure if we should go forward with it for 0.24, since we only require NumPy 1.12.\r\n\r\nThe main thing this required was changing the signature of methods that numpy dispatches to like `sum` to have the signature expected by NumPy.\r\n\r\nI'm really excited about the combination of `__array_ufunc__` and `ExtensionArray`. We should encourage EA authors to implement it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447837612",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447837612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447837612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzgzNzYxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:00:26Z",
    "updated_at": "2018-12-17T13:00:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Where do we stand here? I'll try to summarize some responses here.\r\n\r\n1. Why is there a `pandas.arrays` instead of `pandas.core.arrays`.\r\n\r\nWe shouldn't expose parts of `pandas.core` in the public API. We've claimed that `pandas.core` is private, and adding references to it from the public API docs confuses people. Most people won't be creating a `PandasArray` directly. Rather, they'll get them back from `pd.array` or from `Series/Index.array`. But the fact that they're getting this object means we need to document it.\r\n\r\n2. Why this ABCNumpyExtensionArray thing?\r\n\r\n(aside on the name: it's a leftover from when a called the new wrapper array NumPyExtensionArray. I'd be happy to change it to something that indicates \"this our thin wrapper around numpy arrays).\r\n\r\nAt this point, I don't think we want to users to be able to put a `PandasArray` inside a Series. IOW, the block for a `pd.Series(pd.Series([1, 2, 3]).array)`  should be an IntBlock, not an extension block. In theory, the two should be identical in results, if not performance. In practice there are differences (upcasting on setitem, for example).\r\n\r\n3. Implementing ufuncs via `__array_ufunc__`.\r\n\r\nI did it via `NDArrayOperatorMixin` because it was relatively easy. Don't really have a preference for whether or not we should do it. Since not all EAs will implement `__array_ufunc__`, users can't be assured that ufuncs will work correctly on EAs. But I think we should be a model for other EA authors here, by showing that `__array_ufunc__` should be implemented, and a (simple) example of how to do that.\r\n\r\nAnything else?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447838619",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447838619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447838619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzgzODYxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:04:29Z",
    "updated_at": "2018-12-17T13:04:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 1. Why is there a pandas.arrays instead of pandas.core.arrays.\r\n\r\nI think this is the wrong logic. why are you exposing ``PandasArray`` in any different way than other extension arrays? I dont' think this is any different, and as a consequence you should simply live in ``pandas.core.arrays``\r\n\r\n> 2. Why this ABCNumpyExtensionArray thing?\r\n\r\nWell then let's call it ``NumpyExtensionArray`` then, rather than ``PandasArray``. these should be consistent\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447841564",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447841564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447841564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg0MTU2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:15:14Z",
    "updated_at": "2018-12-17T13:15:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think this is the wrong logic. why are you exposing PandasArray in any different way than other extension arrays?\r\n\r\nTo be clear, this is collecting them in the same place as https://github.com/pandas-dev/pandas/pull/23581. We already have `Categorical` and `SparseArray` in the top-level, but in the issue for #23581 there was some pushback against putting these all in the top-level. We also didn't want to put them in `pandas.api.extensions` because that's reserved for EA authors.\r\n\r\nIn \r\nhttps://github.com/pandas-dev/pandas/pull/24227#issuecomment-446573170 and \r\nhttps://github.com/pandas-dev/pandas/pull/24227#issuecomment-446465276 @shoyer and @jreback agreed that PandasArray was better. That gives us more freedom to change the internals. We could easily have an Apache Arrow backed Series return a `PandasArray`. Having it return a thing called `NumPyExtensionArray` would be strange."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447845720",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447845720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447845720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg0NTcyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:30:08Z",
    "updated_at": "2018-12-17T13:30:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "If we use ``PandasArray.`` then call it ``ABCPandasArray``, the inconsistency is the problem.\r\n\r\n> To be clear, this is collecting them in the same place as #23581. We already have Categorical and SparseArray in the top-level, but in the issue for #23581 there was some pushback against putting these all in the top-level. We also didn't want to put them in pandas.api.extensions because that's reserved for EA authors.\r\n\r\nwhy is ``pandas.core.array`` a problem? creating *another* top-level, ``pandas.array`` is a huge -1. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447847021",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447847021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447847021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg0NzAyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:34:20Z",
    "updated_at": "2018-12-17T13:34:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> why is pandas.core.array a problem? creating another top-level, pandas.array is a huge -1.\r\n\r\n`pandas.core` is private. I don't think we should be adding references to it from our public API docs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447848473",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447848473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447848473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg0ODQ3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:38:58Z",
    "updated_at": "2018-12-17T13:38:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> pandas.core is private. \r\n\r\nsure. so what exactly is the problem?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447850441",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447850441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447850441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1MDQ0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:45:16Z",
    "updated_at": "2018-12-17T13:45:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger ok so you are doing the same thing as you did in #23581. ok I am -1 on that too then. why aren't you putting them in ``pandas.core.arrays`` and then simply exposing them in ``pandas.api.arrays``. new top-level api is -1."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447853258",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447853258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447853258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1MzI1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:53:49Z",
    "updated_at": "2018-12-17T13:53:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> sure. so what exactly is the problem?\r\n\r\nWe don't want people doing things like `if isinstance(thing, pd.core.arrays.PandasArray)`, so we need to expose it somewhere public.\r\n\r\nw.r.t. `pandas.arrays` vs. `pandas.api.arrays`, what does `.api` add? Python has a well-established convention of \"things that don't start with underscore are part of the public API\"."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447854712",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447854712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447854712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1NDcxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:58:06Z",
    "updated_at": "2018-12-17T13:58:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> w.r.t. pandas.arrays vs. pandas.api.arrays, what does .api add? Python has a well-established convention of \"things that don't start with underscore are part of the public API\".\r\n\r\nwe already have a well-established pattern. don't reinvent the wheel."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447855358",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447855358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447855358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1NTM1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T13:59:54Z",
    "updated_at": "2018-12-17T13:59:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "We also have `pandas.errors`, `pandas.plotting`, `pandas.io`, `pandas.tseries`, and `pandas.testing`. I think that `pandas.arrays` fits in nicely with those."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447859061",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24227#issuecomment-447859061",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24227",
    "id": 447859061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1OTA2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T14:11:22Z",
    "updated_at": "2018-12-17T14:11:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "all of these should not be public, this is a historical problem. don't exacerbate it."
  }
]
