[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274268034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15183#issuecomment-274268034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15183",
    "id": 274268034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI2ODAzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T15:24:20Z",
    "updated_at": "2017-01-21T15:24:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's not too friendly!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317809434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15183#issuecomment-317809434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15183",
    "id": 317809434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzgwOTQzNA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T17:25:46Z",
    "updated_at": "2017-07-25T17:25:46Z",
    "author_association": "MEMBER",
    "body": "I think the error I just hit is related.  In py 3.5.2 (pandas 0.20.2):\r\n\r\n\r\n```\r\n>>> periods = pd.Series([pd.Period('2018Q2', 'Q-DEC'), pd.Period('2021', '5A-DEC')], name='Period')\r\n>>> df = pd.DataFrame(periods)\r\n>>> df.set_index('Period', append=True)\r\npandas._libs.period.IncompatibleFrequency: Input has different freq=Q-DEC from Period(freq=5A-DEC)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/frame.py\", line 2836, in set_index\r\n    index = MultiIndex.from_arrays(arrays, names=names)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/indexes/multi.py\", line 1100, in from_arrays\r\n    labels, levels = _factorize_from_iterables(arrays)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/categorical.py\", line 2193, in _factorize_from_iterables\r\n    return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/categorical.py\", line 2193, in <listcomp>\r\n    return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/categorical.py\", line 2165, in _factorize_from_iterable\r\n    cat = Categorical(values, ordered=True)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/categorical.py\", line 298, in __init__\r\n    codes, categories = factorize(values, sort=True)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/algorithms.py\", line 567, in factorize\r\n    assume_unique=True)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/algorithms.py\", line 486, in safe_sort\r\n    sorter = values.argsort()\r\n  File \"pandas/_libs/period.pyx\", line 723, in pandas._libs.period._Period.__richcmp__ (pandas/_libs/period.c:11713)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/tseries/offsets.py\", line 375, in __ne__\r\n    return not self == other\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/tseries/offsets.py\", line 364, in __eq__\r\n    if isinstance(other, compat.string_types):\r\nSystemError: <built-in function isinstance> returned a result with an error set\r\n```\r\n\r\nIn the real-life version when the array of `pd.Period` objects is longer, the error message includes a ton of these:\r\n\r\n```\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nSystemError: <built-in function isinstance> returned a result with an error set\r\n```\r\n\r\nHalfway through the traceback is a call inside `Categorical.__init__` to `factorize(values, sort=True)`.  That call is in a try/except that catches a `TypeError` and falls back to `factorize(values, sort=False)`.  Trying that out directly, `factorize` with `sort=False` appears just fine, so it is the `sort=True` that is causing the problem.\r\n\r\n\r\nI don't do much with py3, so don't know what to make of the `returned a result with an error set` message.  In py2 we get a `NotImplementedError` from the original `set_index` call.  If we focus just on the `factorize(values, sort=True)` call, we get:\r\n\r\n```\r\n>>> values = periods\r\n>>> codes, categories = factorize(values, sort=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/algorithms.py\", line 567, in factorize\r\n    assume_unique=True)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/algorithms.py\", line 486, in safe_sort\r\n    sorter = values.argsort()\r\n  File \"pandas/_libs/period.pyx\", line 725, in pandas._libs.period._Period.__richcmp__ (pandas/_libs/period.c:11842)\r\npandas._libs.period.IncompatibleFrequency: Input has different freq=Q-DEC from Period(freq=5A-DEC)\r\n```\r\n\r\nI'll follow up on this later.  For the purposes of this and related `IncompatibleFrequency` errors, I think defining an ordering has been avoided because there is not One Obvious Way.  But for the purposes of making this Just Work, essentially *any* ordering would work."
  }
]
