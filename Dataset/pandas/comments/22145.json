[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409230542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22145#issuecomment-409230542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22145",
    "id": 409230542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTIzMDU0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T13:58:26Z",
    "updated_at": "2018-07-31T13:58:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "try in 0.23\r\n\r\nthere is a big note about this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409235155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22145#issuecomment-409235155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22145",
    "id": 409235155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTIzNTE1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T14:11:54Z",
    "updated_at": "2018-07-31T14:12:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is different, Python's late binding of closures: https://docs.python-guide.org/writing/gotchas/#late-binding-closures\r\n\r\nIIUC, in your dict-comprehension, `col` is always going to be bound to `B`. It's referred to in the `lambda`, but isn't an argument.\r\n\r\n```python\r\nIn [57]: funcs = {col + '_NEW': lambda x: x[col] * x['B'] for col in df.columns}\r\n\r\nIn [58]: funcs['A_NEW'](df)\r\nOut[58]:\r\n0    25\r\n1    36\r\nName: B, dtype: int64\r\n```\r\n\r\nYou might try something like\r\n\r\n```python\r\nIn [40]: def f(x):\r\n    ...:     return x * df.B\r\n    ...:\r\n    ...:\r\n\r\nIn [41]: df.assign(**{col.name +'_NEW': f(col) for _, col in df.items()})\r\nOut[41]:\r\n   A  B  A_NEW  B_NEW\r\n0  1  5      5     25\r\n1  2  6     12     36\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409235714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22145#issuecomment-409235714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22145",
    "id": 409235714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTIzNTcxNA==",
    "user": {
      "login": "geoffrey-eisenbarth",
      "id": 8428345,
      "node_id": "MDQ6VXNlcjg0MjgzNDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8428345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoffrey-eisenbarth",
      "html_url": "https://github.com/geoffrey-eisenbarth",
      "followers_url": "https://api.github.com/users/geoffrey-eisenbarth/followers",
      "following_url": "https://api.github.com/users/geoffrey-eisenbarth/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoffrey-eisenbarth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoffrey-eisenbarth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoffrey-eisenbarth/subscriptions",
      "organizations_url": "https://api.github.com/users/geoffrey-eisenbarth/orgs",
      "repos_url": "https://api.github.com/users/geoffrey-eisenbarth/repos",
      "events_url": "https://api.github.com/users/geoffrey-eisenbarth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoffrey-eisenbarth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T14:13:30Z",
    "updated_at": "2018-07-31T14:13:30Z",
    "author_association": "NONE",
    "body": "Should have done that first! New version (0.23.3)\r\n<details>\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.5.3.final.0\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 4.9.0-6-amd64\r\nmachine: x86_64\r\nprocessor:\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.23.3\r\npytest: None\r\npip: 10.0.1\r\nsetuptools: 40.0.0\r\nCython: None\r\nnumpy: 1.14.0\r\nscipy: 1.0.0\r\npyarrow: None\r\nxarray: None\r\nIPython: 6.1.0\r\nsphinx: 1.6.7\r\npatsy: None\r\ndateutil: 2.6.1\r\npytz: 2018.4\r\nblosc: None\r\nbottleneck: None\r\ntables: 3.4.3\r\nnumexpr: 2.6.5\r\nfeather: None\r\nmatplotlib: None\r\nopenpyxl: None\r\nxlrd: 1.0.0\r\nxlwt: None\r\nxlsxwriter: 1.0.2\r\nlxml: 4.1.1\r\nbs4: 4.6.0\r\nhtml5lib: None\r\nsqlalchemy: None\r\npymysql: None\r\npsycopg2: 2.7.1 (dt dec pq3 ext lo64)\r\njinja2: 2.10\r\ns3fs: None\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None\r\n</details>\r\n\r\n\r\nStill seems to give me the wrong results. I looked around the changelog, I'm assuming [the section on dependent arguments to assign](https://pandas.pydata.org/pandas-docs/stable/whatsnew.html#whatsnew-0230-enhancements-assign-dependent) is what you're referring to? If so, the example above doesn't depend on columns generated in the call to ``assign``, but rather columns that are already present.\r\n```\r\ndf.assign(A_NEW=lambda x: x['A'] * x['B'], B_NEW=lambda x: x['B'] * x['B'])\r\n```\r\nworks properly, but\r\n```\r\ncols = {col + '_NEW': lambda x: x[col] * x['B'] for col in df.columns}\r\ndf.assign(**cols)\r\n```\r\ndoesn't. Printing ``cols`` in shell gives\r\n```\r\n{'A_NEW': <function __main__.<dictcomp>.<lambda>,\r\n 'B_NEW': <function __main__.<dictcomp>.<lambda>}\r\n```\r\nso maybe it has to do with the scope of lambda functions in dictionary comprehensions?\r\n\r\nI see @TomAugspurger just replied, thanks to both of you for the quick responses!"
  }
]
