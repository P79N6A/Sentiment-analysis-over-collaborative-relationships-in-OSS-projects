[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249048847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14269#issuecomment-249048847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14269",
    "id": 249048847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTA0ODg0Nw==",
    "user": {
      "login": "yarikoptic",
      "id": 39889,
      "node_id": "MDQ6VXNlcjM5ODg5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarikoptic",
      "html_url": "https://github.com/yarikoptic",
      "followers_url": "https://api.github.com/users/yarikoptic/followers",
      "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions",
      "organizations_url": "https://api.github.com/users/yarikoptic/orgs",
      "repos_url": "https://api.github.com/users/yarikoptic/repos",
      "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarikoptic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T22:39:51Z",
    "updated_at": "2016-09-22T22:39:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "so noone observed it before and only I am that lucky?  ok then  , here are more detail bits:\n\n```\n(Pdb) np.unique(right.get_values()[np.where(left.get_values() != right.get_values())])\narray([437893890380859375], dtype=int64)\n(Pdb) np.unique(left.get_values()[np.where(left.get_values() != right.get_values())])\narray([437893890380859392])\n(Pdb) np.unique(left.get_values()[np.where(left.get_values() != right.get_values())]).dtype\ndtype('int64')\n(Pdb) np.unique(right.get_values()[np.where(left.get_values() != right.get_values())]).dtype\ndtype('int64')\n(Pdb) bt\n  /usr/lib/python3.5/unittest/case.py(58)testPartExecutor()\n-> yield\n  /usr/lib/python3.5/unittest/case.py(600)run()\n-> testMethod()\n  /build/pandas-0.18.1+git25-ga7469cf/build/lib.linux-x86_64-3.5/pandas/tests/test_expressions.py(107)test_integer_arithmetic()\n-> assert_frame_equal)\n  /build/pandas-0.18.1+git25-ga7469cf/build/lib.linux-x86_64-3.5/pandas/tests/test_expressions.py(100)run_arithmetic_test()\n-> assert_func(expected, result)\n  /build/pandas-0.18.1+git25-ga7469cf/build/lib.linux-x86_64-3.5/pandas/util/testing.py(1313)assert_frame_equal()\n-> obj='DataFrame.iloc[:, {0}]'.format(i))\n> /build/pandas-0.18.1+git25-ga7469cf/build/lib.linux-x86_64-3.5/pandas/util/testing.py(1181)assert_series_equal()\n-> obj='{0}'.format(obj))\n  /build/pandas-0.18.1+git25-ga7469cf/build/pandas/src/testing.pyx(59)pandas._testing.assert_almost_equal (pandas/src/testing.c:3783)()\n  /build/pandas-0.18.1+git25-ga7469cf/build/pandas/src/testing.pyx(173)pandas._testing.assert_almost_equal (pandas/src/testing.c:2987)()\n  /build/pandas-0.18.1+git25-ga7469cf/build/lib.linux-x86_64-3.5/pandas/util/testing.py(1018)raise_assert_detail()\n-> raise AssertionError(msg)\n```\n\nI didn't look in detail so my observation might be completely irrelevant but note that in one case numpy reports the dtype while printing array and in another doesn't... \n\n```\n(Pdb) runique = np.unique(right.get_values()[np.where(left.get_values() != right.get_values())])\n(Pdb) lunique = np.unique(left.get_values()[np.where(left.get_values() != right.get_values())])\n(Pdb) runique.dtype == lunique.dtype\nTrue\n(Pdb) runique.dtype is lunique.dtype\nFalse\n```\n\n... more later...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259471766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14269#issuecomment-259471766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14269",
    "id": 259471766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3MTc2Ng==",
    "user": {
      "login": "FRidh",
      "id": 2129135,
      "node_id": "MDQ6VXNlcjIxMjkxMzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FRidh",
      "html_url": "https://github.com/FRidh",
      "followers_url": "https://api.github.com/users/FRidh/followers",
      "following_url": "https://api.github.com/users/FRidh/following{/other_user}",
      "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions",
      "organizations_url": "https://api.github.com/users/FRidh/orgs",
      "repos_url": "https://api.github.com/users/FRidh/repos",
      "events_url": "https://api.github.com/users/FRidh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FRidh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:22:51Z",
    "updated_at": "2016-11-09T17:23:07Z",
    "author_association": "NONE",
    "body": "We have a failure here as well when using gcc 6.\nhttp://hydra.nixos.org/build/43371820/nixlog/11/raw\nThe problem does not seem to occur with gcc 5.4.0.\n\nDebian Testing/Sid also use gcc 6.\n"
  }
]
