[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65341912",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8968#issuecomment-65341912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8968",
    "id": 65341912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQxOTEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T02:15:34Z",
    "updated_at": "2014-12-03T02:15:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @bashtage\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65347982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8968#issuecomment-65347982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8968",
    "id": 65347982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ3OTgy",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T03:17:02Z",
    "updated_at": "2014-12-03T03:17:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Bizzare.  This is straight python\n\n``` python\nMISSING_VALUES = {}\nbases = (101, 32741, 2147483621)\nfor b in bases:\n    MISSING_VALUES[b] = '.'\n    for i in range(1, 27):\n        MISSING_VALUES[i + b] = '.' + chr(96 + i)\n```\n\nThis certainly appears to create `MISSING_VALUE[2147483621 + 26]` (2147483647).\n\nI don't have any 32 bit to test on - I suppose that is is a 32 bit issue since this is the largest 32-bit integer\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65349285",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8968#issuecomment-65349285",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8968",
    "id": 65349285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ5Mjg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T03:31:37Z",
    "updated_at": "2014-12-03T03:31:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "so on 32-bit\nthe max values i `np.iinfo(np.int32).max` (which is that number)\n\nyou cannot add to it (well you can, but it squelches the overflow) and its 'undefined' IIRC.\nhowever I have seen where the max value 'wraps' around, the the max values i one less that as show here.\n\nare these bases a stata thing? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65351002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8968#issuecomment-65351002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8968",
    "id": 65351002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzUxMDAy",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T03:51:53Z",
    "updated_at": "2014-12-03T03:51:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, these are a Stata choice to use the highest integer values of each type to represent missing values.  From what I can see, it should be perfectly fine since it is not adding anything to this value.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65398361",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8968#issuecomment-65398361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8968",
    "id": 65398361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk4MzYx",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T12:12:51Z",
    "updated_at": "2014-12-03T12:12:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just some thoughts - I am guessing that `hash(np.int32(2147483647))` is not the same as `hash(int(2147483647))` - perhaps numpy is treating it as  `2147483647L` which might have a different hash on 32 bit.  I suppose one way to workaround this would be to explicitly cast any integer values to int when looking up (any missing < 2147483647  must be an int).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65898917",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8968#issuecomment-65898917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8968",
    "id": 65898917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODk4OTE3",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T14:37:38Z",
    "updated_at": "2014-12-06T14:37:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Should be ready\n"
  }
]
