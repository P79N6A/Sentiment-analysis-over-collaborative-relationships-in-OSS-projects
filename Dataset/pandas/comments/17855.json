[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336330992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17855#issuecomment-336330992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17855",
    "id": 336330992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMzMDk5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T02:13:40Z",
    "updated_at": "2017-10-13T02:13:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "w/o a reproducible example you would have to debug this and see where things are going wrong.\r\nas we handle this case already. (not 100% sure that the implementation actually passes things thru properly though).\r\n```\r\nIn [10]: pd.to_datetime(20170101, format='%Y%m%d')\r\nOut[10]: Timestamp('2017-01-01 00:00:00')\r\n\r\nIn [11]: pd.to_datetime('20170101', format='%Y%m%d')\r\nOut[11]: Timestamp('2017-01-01 00:00:00')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336381929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17855#issuecomment-336381929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17855",
    "id": 336381929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjM4MTkyOQ==",
    "user": {
      "login": "drorata",
      "id": 2905978,
      "node_id": "MDQ6VXNlcjI5MDU5Nzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2905978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drorata",
      "html_url": "https://github.com/drorata",
      "followers_url": "https://api.github.com/users/drorata/followers",
      "following_url": "https://api.github.com/users/drorata/following{/other_user}",
      "gists_url": "https://api.github.com/users/drorata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drorata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drorata/subscriptions",
      "organizations_url": "https://api.github.com/users/drorata/orgs",
      "repos_url": "https://api.github.com/users/drorata/repos",
      "events_url": "https://api.github.com/users/drorata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drorata/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T08:09:48Z",
    "updated_at": "2017-10-13T08:09:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a reproducible example:\r\n\r\n```python\r\nimport sqlalchemy\r\nimport pymysql\r\nimport pandas as pd\r\n\r\neng = sqlalchemy.create_engine('mysql+pymysql://sql2199180:kI1*yG4%@sql2.freemysqlhosting.net/sql2199180')\r\ncon = eng.connect()\r\n\r\npd.read_sql('select d from foo', con) # Works\r\npd.read_sql('select d from foo', con, parse_dates={'d': '%Y%m%d'}) # Fails\r\npd.read_sql('select CONVERT(d, CHAR(10)) as d from foo', con, parse_dates={'d': '%Y%m%d'}) # Works\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336400192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17855#issuecomment-336400192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17855",
    "id": 336400192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQwMDE5Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T09:26:26Z",
    "updated_at": "2017-10-13T09:26:26Z",
    "author_association": "MEMBER",
    "body": "So this is the current code to handle the `parse_dates` keyword:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/c277cd76416d4e930b1f05da873b9eaf101139da/pandas/io/sql.py#L102-L119\r\n\r\nwhere it explicitly checks for numeric column, and then passes `format` as the `unit`, which then fails.\r\n\r\nI agree this is a bit inconvenient. \r\nAs a workaround for now, going from the code (didn't try), I *think* you can do `parse_dates={'d':dict(format='%Y%m%d')}` to force the use of the correct keyword.\r\n\r\nAn easy fix could also be to check whether '%' is contained in the format string, and in that case not pass it to `unit` (cleaner fix would be to not make this check on the data type, and always pass the format to `format` if it is not in the list of known units, but still parse it with `unit='s'` when no format is passed. I *think* this should not break any code).\r\n\r\n@drorata Would you like to do a PR?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336445980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17855#issuecomment-336445980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17855",
    "id": 336445980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ0NTk4MA==",
    "user": {
      "login": "drorata",
      "id": 2905978,
      "node_id": "MDQ6VXNlcjI5MDU5Nzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2905978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drorata",
      "html_url": "https://github.com/drorata",
      "followers_url": "https://api.github.com/users/drorata/followers",
      "following_url": "https://api.github.com/users/drorata/following{/other_user}",
      "gists_url": "https://api.github.com/users/drorata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drorata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drorata/subscriptions",
      "organizations_url": "https://api.github.com/users/drorata/orgs",
      "repos_url": "https://api.github.com/users/drorata/repos",
      "events_url": "https://api.github.com/users/drorata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drorata/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T13:01:31Z",
    "updated_at": "2017-10-13T13:01:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am missing something. Why `to_datetime` is not used directly and if there's a formatting available it should be passed and used by `to_datetime`? The code @jorisvandenbossche referred to is changing the expected behavior of converting a Series to `Timestamps`s using `to_datetime`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336548449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17855#issuecomment-336548449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17855",
    "id": 336548449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjU0ODQ0OQ==",
    "user": {
      "login": "drorata",
      "id": 2905978,
      "node_id": "MDQ6VXNlcjI5MDU5Nzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2905978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drorata",
      "html_url": "https://github.com/drorata",
      "followers_url": "https://api.github.com/users/drorata/followers",
      "following_url": "https://api.github.com/users/drorata/following{/other_user}",
      "gists_url": "https://api.github.com/users/drorata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drorata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drorata/subscriptions",
      "organizations_url": "https://api.github.com/users/drorata/orgs",
      "repos_url": "https://api.github.com/users/drorata/repos",
      "events_url": "https://api.github.com/users/drorata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drorata/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T19:39:07Z",
    "updated_at": "2017-10-13T19:39:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I just tried to run the test suite (`pytest` from the root directory of the repository) on my checked out copy and I get the following:\r\n\r\n<details>\r\n```\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/config.py:342: in _getconftestmodules\r\n    return self._path2confmods[path]\r\nE   KeyError: local('/Users/username/Dropbox/dev/pandas/pandas')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/config.py:373: in _importconftest\r\n    return self._conftestpath2mod[conftestpath]\r\nE   KeyError: local('/Users/username/Dropbox/dev/pandas/pandas/conftest.py')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/config.py:379: in _importconftest\r\n    mod = conftestpath.pyimport()\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/py/_path/local.py:662: in pyimport\r\n    __import__(modname)\r\npandas/pandas/__init__.py:40: in <module>\r\n    import pandas.core.config_init\r\npandas/pandas/core/config_init.py:12: in <module>\r\n    import pandas.core.config as cf\r\npandas/pandas/core/config.py:820: in <module>\r\n    is_text = is_instance_factory((str, bytes))\r\npandas/pandas/core/config.py:781: in is_instance_factory\r\n    from pandas.io.formats.printing import pprint_thing\r\npandas/pandas/io/formats/printing.py:6: in <module>\r\n    from pandas.core.dtypes.inference import is_sequence\r\npandas/pandas/core/dtypes/inference.py:24: in <module>\r\n    is_interval = lib.is_interval\r\nE   AttributeError: module 'pandas._libs.lib' has no attribute 'is_interval'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/py/_path/common.py:372: in visit\r\n    for x in Visitor(fil, rec, ignore, bf, sort).gen(self):\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/py/_path/common.py:410: in gen\r\n    dirs = self.optsort([p for p in entries\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/py/_path/common.py:411: in <listcomp>\r\n    if p.check(dir=1) and (rec is None or rec(p))])\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/main.py:728: in _recurse\r\n    ihook = self.gethookproxy(path)\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/main.py:632: in gethookproxy\r\n    my_conftestmodules = pm._getconftestmodules(fspath)\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/config.py:356: in _getconftestmodules\r\n    mod = self._importconftest(conftestpath)\r\n../../anaconda3/envs/pandas_dev/lib/python3.6/site-packages/_pytest/config.py:381: in _importconftest\r\n    raise ConftestImportFailure(conftestpath, sys.exc_info())\r\nE   _pytest.config.ConftestImportFailure: AttributeError(\"module 'pandas._libs.lib' has no attribute 'is_interval'\",)\r\nE     File \"/Users/username/Dropbox/dev/pandas/pandas/__init__.py\", line 40, in <module>\r\nE       import pandas.core.config_init\r\nE     File \"/Users/username/Dropbox/dev/pandas/pandas/core/config_init.py\", line 12, in <module>\r\nE       import pandas.core.config as cf\r\nE     File \"/Users/username/Dropbox/dev/pandas/pandas/core/config.py\", line 820, in <module>\r\nE       is_text = is_instance_factory((str, bytes))\r\nE     File \"/Users/username/Dropbox/dev/pandas/pandas/core/config.py\", line 781, in is_instance_factory\r\nE       from pandas.io.formats.printing import pprint_thing\r\nE     File \"/Users/username/Dropbox/dev/pandas/pandas/io/formats/printing.py\", line 6, in <module>\r\nE       from pandas.core.dtypes.inference import is_sequence\r\nE     File \"/Users/username/Dropbox/dev/pandas/pandas/core/dtypes/inference.py\", line 24, in <module>\r\nE       is_interval = lib.is_interval\r\n```\r\n</details>\r\n\r\nIf this is not a trivial problem, I'll start a separate issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336902160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17855#issuecomment-336902160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17855",
    "id": 336902160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjkwMjE2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T14:21:27Z",
    "updated_at": "2017-10-16T14:21:27Z",
    "author_association": "MEMBER",
    "body": "@drorata I suppose the test problem is solved in the meantime since you opened a PR? If not, from a quick look it seems to me you need to rebuild the pandas C-extensions locally (see http://pandas.pydata.org/pandas-docs/stable/contributing.html#making-changes)"
  }
]
