[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352560000",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-352560000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 352560000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU2MDAwMA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T21:17:02Z",
    "updated_at": "2018-01-15T12:34:02Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on January 15, 2018 at 12:34 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352563611",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-352563611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 352563611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU2MzYxMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T21:30:56Z",
    "updated_at": "2017-12-18T21:30:56Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger : A couple of points:\r\n\r\n1) Re: your question, it depends on how much importance you put on the resource.  Personally, I'm fine with exposing it in the top-level namespace.  `xarray` does this, so one could argue that we should do the same for consistency.  Unless you're using this solely for internal stuff, then I don't see why not.\r\n\r\n2) Could you explain the differences / changes you needed to make for this to port over to `pandas` ?  That would be very useful for understanding why you needed to add this to `pandas`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352584389",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-352584389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 352584389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU4NDM4OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T22:55:44Z",
    "updated_at": "2017-12-18T22:55:44Z",
    "author_association": "MEMBER",
    "body": "There might be some useful things to pull out of the [tests](https://github.com/pandas-dev/pandas/pull/17042/files#diff-6df9fe81c485ca477e339301a31cc53b) for the now-abandoned #17042.  I wrote a moderately fleshed out example for that.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352610200",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-352610200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 352610200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjYxMDIwMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-12-19T01:21:37Z",
    "updated_at": "2018-01-15T15:33:21Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=h1) Report\n> Merging [#18827](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/787ab5556f23d2e10b798d2e58e66789d79fd4d5?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `93.91%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18827/graphs/tree.svg?src=pr&width=650&token=eZ4WkYLtcO&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18827      +/-   ##\n==========================================\n- Coverage   91.55%   91.53%   -0.02%     \n==========================================\n  Files         147      148       +1     \n  Lines       48812    48837      +25     \n==========================================\n+ Hits        44690    44704      +14     \n- Misses       4122     4133      +11\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.91% <93.91%> (-0.02%)` | :arrow_down: |\n| #single | `41.7% <57.39%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.62% <100%> (ø)` | :arrow_up: |\n| [pandas/api/extensions/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2FwaS9leHRlbnNpb25zL19faW5pdF9fLnB5) | `100% <100%> (ø)` | |\n| [pandas/core/accessor.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYWNjZXNzb3IucHk=) | `98.7% <100%> (+4.95%)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.61% <100%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.46% <100%> (ø)` | :arrow_up: |\n| [pandas/errors/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2Vycm9ycy9fX2luaXRfXy5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY2F0ZWdvcmljYWwucHk=) | `95.78% <100%> (ø)` | :arrow_up: |\n| [pandas/core/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYmFzZS5weQ==) | `96.77% <100%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/accessors.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9hY2Nlc3NvcnMucHk=) | `90% <88%> (+0.63%)` | :arrow_up: |\n| [pandas/core/strings.py](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3RyaW5ncy5weQ==) | `98.17% <92.85%> (-0.3%)` | :arrow_down: |\n| ... and [2 more](https://codecov.io/gh/pandas-dev/pandas/pull/18827/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=footer). Last update [787ab55...fd40244](https://codecov.io/gh/pandas-dev/pandas/pull/18827?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352717110",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-352717110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 352717110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjcxNzExMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T11:10:18Z",
    "updated_at": "2017-12-19T11:10:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "this should not be in the main public namespace. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352792176",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-352792176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 352792176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjc5MjE3Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T15:28:31Z",
    "updated_at": "2017-12-19T15:29:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's the relevant diff between xarray and pandas:\r\n\r\n```diff\r\ndiff --git a/xarray.py b/pandas.py\r\nindex 48b2cba..fc3dd6b 100644\r\n--- a/xarray.py\r\n+++ b/pandas.py\r\n@@ -11,9 +11,10 @@ class _CachedAccessor(object):\r\n         try:\r\n             accessor_obj = self._accessor(obj)\r\n         except AttributeError:\r\n-            # __getattr__ on data object will swallow any AttributeErrors raised\r\n-            # when initializing the accessor, so we need to raise as something\r\n-            # else (GH933):\r\n+            # TODO\r\n+            # __getattr__ on data object will swallow any AttributeErrors\r\n+            # raised when initializing the accessor, so we need to raise\r\n+            # as something else (GH933):\r\n             msg = 'error initializing %r accessor.' % self._name\r\n             if PY2:\r\n                 msg += ' Full traceback:\\n' + traceback.format_exc()\r\n@@ -30,9 +31,9 @@ def _register_accessor(name, cls):\r\n     def decorator(accessor):\r\n         if hasattr(cls, name):\r\n             warnings.warn(\r\n-                'registration of accessor %r under name %r for type %r is '\r\n-                'overriding a preexisting attribute with the same name.'\r\n-                % (accessor, name, cls),\r\n+                'registration of accessor {!r} under name {!r} for type '\r\n+                '{!r} is overriding a preexisting attribute with the same '\r\n+                'name.'.format(accessor, name, cls),\r\n                 AccessorRegistrationWarning,\r\n                 stacklevel=2)\r\n         setattr(cls, name, _CachedAccessor(name, accessor))\r\n\r\n```\r\n\r\n(my TODO is for whether or not that matters for pandas). Otherwise, we're trying to use new-style string formatting."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354826382",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-354826382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 354826382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDgyNjM4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T17:41:17Z",
    "updated_at": "2018-01-02T17:41:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated.\r\n\r\n1. xarray had to catch `AttributeError` raised when creating the accessor due to how their `__getitem__` works. I don't think pandas needs to do this (https://github.com/pydata/xarray/issues/933)\r\n2. The extra level for `pd.api.extensions` rather than `pd.extensions` seems unnecessary (flat is better than nested and all that), but OK either way\r\n3. `pytest.monkeypatch` seems to be for functions, not instances of objects, unless I'm mistaken\r\n4. I have a slight preference to focusing this PR on just adding the `register_*_accessor`, but I can also refactor the internals to use it. Really though, these are independent. The only real change would be to `pd.api.extensions.resgister_series_accessor(\"str\")(StringMethods)` instead of `str = accessor.AccessorProperty(strings.StringMethods)`. The `register*` decorators are just for registering, not for implementing accessors themselves."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355169148",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-355169148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 355169148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTE2OTE0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T00:45:41Z",
    "updated_at": "2018-01-04T00:45:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I have a slight preference to focusing this PR on just adding the register_*_accessor, but I can also refactor the internals to use it. Really though, these are independent. The only real change would be to pd.api.extensions.resgister_series_accessor(\"str\")(StringMethods) instead of str = accessor.AccessorProperty(strings.StringMethods). The register* decorators are just for registering, not for implementing accessors themselves.\r\n\r\nI disagree. The best use of this is to actually implement the internals. If it works, great, if not then you have found a bug / feature lacking."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355392112",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-355392112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 355392112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM5MjExMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T20:37:52Z",
    "updated_at": "2018-01-04T20:37:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Refactored to have our accessors use it.\r\n\r\n1.  All the accessors are registered in `pandas.core.register_accessors` after the classes have been initialized\r\n2. I ran into a subtle issue around caching. The accessor from xarray is cached such that `x.foo` is the same object everytime. With our old ``AccessorProperty``, we recreated the accessor every time. This caused some issues when the object itself was mutable, but the accessor cached some state. Notably, this would occur:\r\n\r\n```python\r\nIn [9]: s = pd.Series(pd.TimedeltaIndex(['5S', '10S']))\r\n\r\nIn [10]: s.dt.values.isna()\r\nOut[10]: array([False, False], dtype=bool)\r\n\r\nIn [11]: s[0] = float('nan')\r\n\r\n# isna has been cached on the accessor's .values, but not invalidated\r\n# when s was mutated\r\nIn [12]: s.dt.values.isna()\r\nOut[12]: array([ False, False], dtype=bool)\r\n```\r\n\r\nTo work around this, I added a `cache` keyword argument (@shoyer would xarray be interested in this keyword?)\r\n\r\n3. Moved the new docs to \"developer.rst\" instead of internals, since it's for \"downstream applications\" (we should probably move the subclassing docs there)\r\n4. Removed the now unused AccessorProperty class"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355395465",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-355395465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 355395465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM5NTQ2NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T20:52:58Z",
    "updated_at": "2018-01-04T20:52:58Z",
    "author_association": "MEMBER",
    "body": "> I ran into a subtle issue around caching. The accessor from xarray is cached such that x.foo is the same object everytime. With our old AccessorProperty, we recreated the accessor every time. This caused some issues when the object itself was mutable, but the accessor cached some state. \r\n>\r\n> To work around this, I added a cache keyword argument (@shoyer would xarray be interested in this keyword?)\r\n\r\nThis seems like an inadvertent detail of the implementation of `Series.dt.values` (why do we even have that property?). The datetime accessor creates a DatetimeIndex internally for method/properties. `DatetimeIndex.values` is fixed, because pandas.Index objects are immutable.\r\n\r\nSo the other fix would be to change how the `.dt` accessor implemented so that `DatetimeIndex` objects are created on demand when a method/property is called, instead of being created once and saved on the acccessor.\r\n\r\nI don't think we need a `cache=False` option for xarray since nobody has written any accessors relying on this behavior."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355395975",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-355395975",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 355395975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM5NTk3NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T20:55:15Z",
    "updated_at": "2018-01-04T20:55:15Z",
    "author_association": "MEMBER",
    "body": "Making it easy to extend functionality is great, but the new commit that changes where the current str/cat/dt attributes are defined I'm very much -1 on.  Inheritance notwithstanding, the class definition should be WYSIWYG.  Newbies shouldn't have to [track down](https://github.com/pandas-dev/pandas/pull/17174/files#diff-de56e43aab6f9b0909c90246728a3662L207) where e.g. `DataFrame.pivot_table` is defined."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355397496",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-355397496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 355397496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM5NzQ5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T21:01:36Z",
    "updated_at": "2018-01-04T21:01:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This seems like an inadvertent detail of the implementation of Series.dt.values (why do we even have that property?).\r\n\r\n`.values` isn't actually in `dir(s.dt)`. Should probably be `._values` but that's how it was before. Regardless, I'll see how difficult it is to create them on demand.\r\n\r\n> the class definition should be WYSIWYG\r\n\r\nThat's my preference as well, we just won't be able to / have to use the `register_*_accessor` functions, since those rely on the classes being defined."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355946744",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-355946744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 355946744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTk0Njc0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T11:50:57Z",
    "updated_at": "2018-01-08T11:50:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @jbrockmendel thoughts on the refactored version? Anything else you'd like to see changed?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/356047237",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-356047237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 356047237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjA0NzIzNw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T18:11:34Z",
    "updated_at": "2018-01-08T18:11:34Z",
    "author_association": "MEMBER",
    "body": "> thoughts on the refactored version?\r\n\r\nCompletely addresses my WYSIWYG complaint, thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/356404579",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18827#issuecomment-356404579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18827",
    "id": 356404579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQwNDU3OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T20:28:49Z",
    "updated_at": "2018-01-09T20:28:49Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  this is too general we need to be opionated, if there is no validation then that should be explicit.\r\n\r\n@jreback could you clarify your thoughts here? I've documented that the only requirement on the user-defined accessor is that it's `__init__` will be called with `pandas_obj`. I don't think there's anything the `_CachedAccessor` can / should do w.r.t. validation. With an accessor like `.plot` there's nothing to be done, so it doesn't make sense for accessors to implement a method that does nothing."
  }
]
