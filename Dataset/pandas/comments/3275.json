[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16032137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-16032137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 16032137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDMyMTM3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-08T04:33:46Z",
    "updated_at": "2013-04-08T04:33:46Z",
    "author_association": "MEMBER",
    "body": "At the end of the day, the purpose of indexes is:\n\n1) Easy value / row / group lookups\n2) Default join behavior\n3) Metadata management in reshape / transpose operations\n\nThat the index can be assigned to / replaced is also a feature. \n\nHowever, it can also be a nuisance when you're using a DataFrame like an SQL table-- e.g. append(..)-ing DataFrames or things of that nature. \n\nIt's a tough call. The dual use of DataFrame as an in-memory database table and a \"collection of labeled arrays\" has made it hard to be all things to all people. The former use case came later, which is why things aren't quite perfectly designed for the database-type use case. More work to do and probably room for a slightly different table object in pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16045384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-16045384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 16045384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ1Mzg0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-08T11:32:41Z",
    "updated_at": "2013-04-14T04:40:37Z",
    "author_association": "NONE",
    "body": "I agree with the spirit of the argument, that there could be more consistency in the API \n(#3268, #3070, #413).\n\nIndex/Multindex does support `map`, but the result can't easily be turned into the bool indexer \nhe seems to be after. Trivial to solve in this case I think:\n#3275 solves B directly, also A either directly or when used in conjunction with `df.index.levels[i]` \n\nC is tricky.\n\n**edit:** #3275 merged into master (`.to_series()` is the new bit):\n\n``` python\nIn [133]: df=mkdf(5,2,r_idx_nlevels=2)\nIn [134]: df\nOut[134]: \nC0              C_l0_g0 C_l0_g1\nR0      R1                     \nR_l0_g0 R_l1_g0    R0C0    R0C1\nR_l0_g1 R_l1_g1    R1C0    R1C1\nR_l0_g2 R_l1_g2    R2C0    R2C1\nR_l0_g3 R_l1_g3    R3C0    R3C1\nR_l0_g4 R_l1_g4    R4C0    R4C1\n\nIn [13]: # so now this is possible\nIn [135]: df[df.index.to_series().map(lambda x: \"l0_g2\" in x[0])]\nOut[135]: \nC0              C_l0_g0 C_l0_g1\nR0      R1                     \nR_l0_g2 R_l1_g2    R2C0    R2C1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16268485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-16268485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 16268485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjY4NDg1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-11T23:42:22Z",
    "updated_at": "2013-04-11T23:42:22Z",
    "author_association": "MEMBER",
    "body": "+1 I often find myself getting into the underlying array of tuples because of these issues.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17072238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-17072238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 17072238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDcyMjM4",
    "user": {
      "login": "meteore",
      "id": 807608,
      "node_id": "MDQ6VXNlcjgwNzYwOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/807608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meteore",
      "html_url": "https://github.com/meteore",
      "followers_url": "https://api.github.com/users/meteore/followers",
      "following_url": "https://api.github.com/users/meteore/following{/other_user}",
      "gists_url": "https://api.github.com/users/meteore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meteore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meteore/subscriptions",
      "organizations_url": "https://api.github.com/users/meteore/orgs",
      "repos_url": "https://api.github.com/users/meteore/repos",
      "events_url": "https://api.github.com/users/meteore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meteore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T12:40:35Z",
    "updated_at": "2013-04-26T12:40:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have trouble for merges, and my solution so far is a very wasteful one: to keep a named index _as well as_ a column copy of it. Things would much improve for merges if upon a KeyError in resolving a column name, the index names would be used before finally giving up.\n\nIt seems that this would greatly enhance the relational usability of Pandas. Would this have any unwanted side-effects? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17072383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-17072383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 17072383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDcyMzgz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T12:44:41Z",
    "updated_at": "2013-04-26T12:44:41Z",
    "author_association": "NONE",
    "body": "Didn't catch that. code example?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17073379",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-17073379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 17073379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDczMzc5",
    "user": {
      "login": "meteore",
      "id": 807608,
      "node_id": "MDQ6VXNlcjgwNzYwOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/807608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meteore",
      "html_url": "https://github.com/meteore",
      "followers_url": "https://api.github.com/users/meteore/followers",
      "following_url": "https://api.github.com/users/meteore/following{/other_user}",
      "gists_url": "https://api.github.com/users/meteore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meteore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meteore/subscriptions",
      "organizations_url": "https://api.github.com/users/meteore/orgs",
      "repos_url": "https://api.github.com/users/meteore/repos",
      "events_url": "https://api.github.com/users/meteore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meteore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T13:08:25Z",
    "updated_at": "2013-04-26T13:08:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, that was insufficient because I did not explain the scenario:\n\nI keep track of the foreign keys for each table and have an automated merge mechanism based on column names. When going for merges, the asymmetry between the `left`|`right_index` and the `on` parameters in `pandas.merge` creates the problem that would be solved by making indexes also addressable by name (if they have one) in a fallback-manner. If it is still not clear I can dig up an example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403160850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3275#issuecomment-403160850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3275",
    "id": 403160850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MDg1MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:22:07Z",
    "updated_at": "2018-07-06T22:22:07Z",
    "author_association": "MEMBER",
    "body": "Closing due to age and request ambiguity"
  }
]
