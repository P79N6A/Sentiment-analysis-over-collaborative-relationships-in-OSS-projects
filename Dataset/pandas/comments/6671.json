[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38110752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38110752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38110752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTEwNzUy",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T21:42:53Z",
    "updated_at": "2014-03-19T21:47:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "If we're parsing it ourselves, we could also support something like `[0, 3:5, 7:]` which `r_` can't handle natively, but we could translate that to `[0, 3:5, 7:df1.shape[1]]` or something.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38110972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38110972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38110972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTEwOTcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T21:44:52Z",
    "updated_at": "2014-03-19T21:44:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep\n\nashame that can't just intercept the negated call and make it lazy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38111696",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38111696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38111696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTExNjk2",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T21:51:28Z",
    "updated_at": "2014-03-19T21:51:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, that's just crazy talk.  Start thinking like that and we'll have to rewrite pandas in another language entirely. :^)\n\nThe only alternative I can think of would be if we wrote our own indexer object, like `r_`, and then special-cased its treatment within the `iloc` code.  But there's not much to be gained over the string approach (slight performance, maybe) and we're already committed to strings in query.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38116064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38116064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38116064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTE2MDY0",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T22:37:05Z",
    "updated_at": "2014-03-19T22:37:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I actually don't think that a custom indexer would be that crazy. I often use the idiom of lazy objects that build up expressions. Though they are usually very specific in their use case.\n\nhttp://nbviewer.ipython.org/gist/dalejung/5924008 is a toy lazy dataframe example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38126920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38126920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38126920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTI2OTIw",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T01:28:09Z",
    "updated_at": "2014-03-20T01:28:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, maybe I was unclear: since Python doesn't provide good syntactic support for laziness, and other languages do, I'm always tempted to switch when I find myself needing to store an evaluation tree.  That's the craziness I need to suppress, because changing languages in the middle of a project for a relatively minor increase in elegance is a bad habit.\n\nISTM the choice here is between parsing a string (as in Jeff's original suggestion, and as in query) or making a special index object.  Either would work -- and they're not mutually exclusive, of course, although TOOWTDI. \n\nWhether the ops on the dataframe itself are lazy or immediately evaluated doesn't matter so much because we're concerned with what op we're asking the dataframe to perform in the first place (in this case, simply selection).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38130065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38130065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38130065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMwMDY1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T02:37:38Z",
    "updated_at": "2014-03-20T02:37:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "We're on the same page. I mentioned the lazyframe stuff because I assumed the indexer would work similarly. Just build up an expression. Allow something like\n\n```\ndf.iloc[c[:10, 15], ~c[:2, 3]]\n```\n\nhttp://nbviewer.ipython.org/gist/dalejung/9656069\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38162434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6671#issuecomment-38162434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6671",
    "id": 38162434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTYyNDM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T12:48:21Z",
    "updated_at": "2014-03-20T12:48:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "we are doing something similar with `pd.IndexSlice`, maybe could reuse this\n\nhttp://pandas-docs.github.io/pandas-docs-travis/whatsnew.html#multiindexing-using-slicers\n"
  }
]
