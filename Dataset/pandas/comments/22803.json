[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423851455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22803#issuecomment-423851455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22803",
    "id": 423851455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg1MTQ1NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T22:05:48Z",
    "updated_at": "2018-09-23T22:05:48Z",
    "author_association": "MEMBER",
    "body": "@PatrickDRusk : That does look a little odd indeed!\r\n\r\ncc @toobaz @jreback "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436519242",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22803#issuecomment-436519242",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22803",
    "id": 436519242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjUxOTI0Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T06:34:01Z",
    "updated_at": "2018-11-07T06:34:01Z",
    "author_association": "MEMBER",
    "body": "Unrelated to ``MultiIndex``, the problem is more general:\r\n\r\n``` python\r\nIn [2]: hasattr(s, '__next__')\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n/home/nobackup/repo/pandas/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    129         try:\r\n--> 130             return self.mapping.get_item(val)\r\n    131         except (TypeError, ValueError):\r\n\r\n/home/nobackup/repo/pandas/pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item()\r\n    921 \r\n--> 922     cpdef get_item(self, int64_t val):\r\n    923         cdef khiter_t k\r\n\r\nTypeError: an integer is required\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n/home/nobackup/repo/pandas/pandas/core/indexes/period.py in get_loc(self, key, method, tolerance)\r\n    703         try:\r\n--> 704             return self._engine.get_loc(key)\r\n    705         except KeyError:\r\n\r\n/home/nobackup/repo/pandas/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    107 \r\n--> 108     cpdef get_loc(self, object val):\r\n    109         if is_definitely_invalid_key(val):\r\n\r\n/home/nobackup/repo/pandas/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n    131         except (TypeError, ValueError):\r\n--> 132             raise KeyError(val)\r\n    133 \r\n\r\nKeyError: '__next__'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n/home/nobackup/repo/pandas/pandas/_libs/tslibs/parsing.pyx in pandas._libs.tslibs.parsing.parse_datetime_string_with_reso()\r\n    163     try:\r\n--> 164         parsed, reso = dateutil_parse(date_string, _DEFAULT_DATETIME,\r\n    165                                       dayfirst=dayfirst, yearfirst=yearfirst,\r\n\r\n/home/nobackup/repo/pandas/pandas/_libs/tslibs/parsing.pyx in pandas._libs.tslibs.parsing.dateutil_parse()\r\n    316         msg = \"Unknown datetime string format, unable to parse: {timestr}\"\r\n--> 317         raise ValueError(msg.format(timestr=timestr))\r\n    318 \r\n\r\nValueError: Unknown datetime string format, unable to parse: __next__\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nDateParseError                            Traceback (most recent call last)\r\n<ipython-input-2-c6c5c35d0556> in <module>()\r\n----> 1 hasattr(s, '__next__')\r\n\r\n/home/nobackup/repo/pandas/pandas/core/generic.py in __getattr__(self, name)\r\n   4726             return object.__getattribute__(self, name)\r\n   4727         else:\r\n-> 4728             if self._info_axis._can_hold_identifiers_and_holds_name(name):\r\n   4729                 return self[name]\r\n   4730             return object.__getattribute__(self, name)\r\n\r\n/home/nobackup/repo/pandas/pandas/core/indexes/base.py in _can_hold_identifiers_and_holds_name(self, name)\r\n   2098         \"\"\"\r\n   2099         if self.is_object() or self.is_categorical():\r\n-> 2100             return name in self\r\n   2101         return False\r\n   2102 \r\n\r\n/home/nobackup/repo/pandas/pandas/core/indexes/multi.py in __contains__(self, key)\r\n    572         hash(key)\r\n    573         try:\r\n--> 574             self.get_loc(key)\r\n    575             return True\r\n    576         except (LookupError, TypeError):\r\n\r\n/home/nobackup/repo/pandas/pandas/core/indexes/multi.py in get_loc(self, key, method)\r\n   2232 \r\n   2233         if not isinstance(key, tuple):\r\n-> 2234             loc = self._get_level_indexer(key, level=0)\r\n   2235             return _maybe_to_slice(loc)\r\n   2236 \r\n\r\n/home/nobackup/repo/pandas/pandas/core/indexes/multi.py in _get_level_indexer(self, key, level, indexer)\r\n   2486         else:\r\n   2487 \r\n-> 2488             code = level_index.get_loc(key)\r\n   2489 \r\n   2490             if level > 0 or self.lexsort_depth == 0:\r\n\r\n/home/nobackup/repo/pandas/pandas/core/indexes/period.py in get_loc(self, key, method, tolerance)\r\n    708 \r\n    709             try:\r\n--> 710                 asdt, parsed, reso = parse_time_string(key, self.freq)\r\n    711                 key = asdt\r\n    712             except TypeError:\r\n\r\n/home/nobackup/repo/pandas/pandas/_libs/tslibs/parsing.pyx in pandas._libs.tslibs.parsing.parse_time_string()\r\n    126         yearfirst = get_option(\"display.date_yearfirst\")\r\n    127 \r\n--> 128     res = parse_datetime_string_with_reso(arg, freq=freq,\r\n    129                                           dayfirst=dayfirst,\r\n    130                                           yearfirst=yearfirst)\r\n\r\n/home/nobackup/repo/pandas/pandas/_libs/tslibs/parsing.pyx in pandas._libs.tslibs.parsing.parse_datetime_string_with_reso()\r\n    167     except Exception as e:\r\n    168         # TODO: allow raise of errors within instead\r\n--> 169         raise DateParseError(e)\r\n    170     if parsed is None:\r\n    171         raise DateParseError(\"Could not parse {dstr}\".format(dstr=date_string))\r\n\r\nDateParseError: Unknown datetime string format, unable to parse: __next__\r\n```\r\n\r\nPreparing a PR."
  }
]
