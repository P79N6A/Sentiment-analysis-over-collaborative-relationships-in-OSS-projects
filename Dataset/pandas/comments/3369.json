[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16586325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16586325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16586325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg2MzI1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:12:26Z",
    "updated_at": "2013-04-18T16:12:26Z",
    "author_association": "MEMBER",
    "body": "Is the goal to have a parser written just for pandas so that are no dependencies? Beautiful Soup + lxml does this quite effectively with a little coaxing. This would of course add dependencies which I'm guessing is frowned upon to avoid feature bloat.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16586565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16586565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16586565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg2NTY1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:16:25Z",
    "updated_at": "2013-04-18T16:16:47Z",
    "author_association": "NONE",
    "body": "yep on all three. except the first.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16587847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16587847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16587847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg3ODQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:38:05Z",
    "updated_at": "2013-04-18T16:38:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "why is it a problem to add an optional dependency for bs or lxml for this parsing? we do this for excel\n\nif he user wants it they can install it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16587942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16587942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16587942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg3OTQy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:39:57Z",
    "updated_at": "2013-04-18T16:39:57Z",
    "author_association": "NONE",
    "body": "I think so too. lxml I think, it's faster and recent versions have as good\nsupport for css selectors as bs4.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16588204",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16588204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16588204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg4MjA0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:44:36Z",
    "updated_at": "2013-04-18T16:44:36Z",
    "author_association": "MEMBER",
    "body": "Bs4 can use lxml under the hood and is much easier to use than lxml. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16588389",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16588389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16588389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg4Mzg5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:48:13Z",
    "updated_at": "2013-04-18T16:48:13Z",
    "author_association": "NONE",
    "body": "I've used both, and as I said recent lxml is very usable. But it really doesn't matter what you use.\nIf you'd like to claim this, would happily move it to 0.12..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16588393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16588393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16588393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg4Mzkz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:48:20Z",
    "updated_at": "2013-04-18T16:48:20Z",
    "author_association": "MEMBER",
    "body": "Although I guess that doesn't really matter if you're just exposing this API and want to minimize deps. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16589080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16589080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16589080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg5MDgw",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T16:59:55Z",
    "updated_at": "2013-04-18T16:59:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also on SO: http://stackoverflow.com/questions/16009778/how-to-convert-a-html-table-into-pandas-dataframe\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16589093",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16589093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16589093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg5MDkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T17:00:06Z",
    "updated_at": "2013-04-18T17:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "just do something like: `from_html(data, method='lxml', ......)` and support whatever methods you want, raise if you can't deal with it, or maybe `flavor` is better\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16589345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16589345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16589345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg5MzQ1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T17:04:57Z",
    "updated_at": "2013-04-18T17:05:13Z",
    "author_association": "NONE",
    "body": "lxml is compiled and has some lib/.so deps, bs4's ability to abstract the underlying\nparser (including using a pure python solution) would make things smoother for windows\nusers. I think that clinches it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16593159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16593159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16593159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTkzMTU5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T18:07:06Z",
    "updated_at": "2013-04-18T18:07:06Z",
    "author_association": "MEMBER",
    "body": "Ok, so bs4 it is.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16603825",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16603825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16603825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjAzODI1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T19:59:03Z",
    "updated_at": "2013-04-18T19:59:03Z",
    "author_association": "MEMBER",
    "body": "Are there any type inference utility functions hidden in the guts of pandas?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16604033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16604033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16604033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA0MDMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:02:28Z",
    "updated_at": "2013-04-18T20:02:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "`df.convert_objects(convert_numeric=True,convert_dates='coerce')` will convert anything datelike and anything number like into the correct dtypes (and set the rest to `NaN/NaT`. This might be too aggressive, so you could start with `convert_dates=True` (I think you want `convert_numeric=True` always) for this type of thing\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16604241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16604241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16604241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA0MjQx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:06:19Z",
    "updated_at": "2013-04-18T20:06:19Z",
    "author_association": "MEMBER",
    "body": "Hm, `df.convert_objects` doesn't seem to work on the most human readable of dates such as `\"March 17, 2005\"`. E.g.,\n\n``` python\nfrom pandas import DataFrame\ndf = DataFrame(['March 25, 2005', 'March 27, 2001'])\ndf.convert_objects(convert_dates=True) # still strings\n```\n\nThis could be hacked around by using `dateutil.parser.parse` but that's slow for a frame with many columns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16604334",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16604334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16604334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA0MzM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:08:01Z",
    "updated_at": "2013-04-18T20:08:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's a 'soft' conversion (to force it use, 'force') (equiv to to_pydatetime on the column)\n\n```\nIn [3]: df.convert_objects(convert_dates='coerce')\nOut[3]: \n                    0\n0 2005-03-25 00:00:00\n1 2001-03-27 00:00:00\n\nIn [4]: df.convert_objects(convert_dates='coerce').dtypes\nOut[4]: \n0    datetime64[ns]\ndtype: object\n```\n\nfyi...obv 0.11 needed (which assume you are using)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16604381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16604381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16604381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA0Mzgx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:09:09Z",
    "updated_at": "2013-04-18T20:09:09Z",
    "author_association": "MEMBER",
    "body": "oh whoops, of course I should've read the docs before saying anything :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16604465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16604465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16604465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA0NDY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:10:57Z",
    "updated_at": "2013-04-18T20:10:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "also....since this is an internal method you _might_ want to call these directly on the internal objects (e.g. `self._data`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16604628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16604628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16604628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA0NjI4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:13:34Z",
    "updated_at": "2013-04-18T20:13:34Z",
    "author_association": "MEMBER",
    "body": "ok. still in the experimental stage of parsing different examples of html tables to get a feel for what the idiosyncrasies are. nothing has been put in pandas yet, i've just got a file with a couple of functions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16605748",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16605748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16605748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA1NzQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:29:57Z",
    "updated_at": "2013-04-18T20:29:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I would add an option, say `convert=True` that controls whether you do object conversion inside your routine (and insted just returned the data as type `object`), possibly you could also accept a `dtype` parmeter to control the conversions as well (maybe v2 for though)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16608391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16608391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16608391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjA4Mzkx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T20:50:02Z",
    "updated_at": "2013-04-18T20:50:02Z",
    "author_association": "MEMBER",
    "body": "@jreback Thanks. So far it seems that there will have to a be a user facing parameter to control the location of the table since there could be multiple tables on a page. I'm thinking two ways: something like a `table_number` param that allows one to provide the 0 (or 1)-based index of the table's location on the page starting from the top left and/or passing the `attrs` `dict` from `BeautifulSoup`'s methods which allows one to pass a `dict` of html attributes to use for selecting elements. One thing that would be nice is an exact way to determine which tables are used to lay out the page and which aren't (I'm guessing hardcore web devs frown upon using `<table>` elements for lay out). Will search around to see what's out there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16715702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16715702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16715702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzE1NzAy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-21T04:08:32Z",
    "updated_at": "2013-04-21T04:08:32Z",
    "author_association": "MEMBER",
    "body": "It would be great to have some URLs of tables that people are interested in parsing (other than the few that people have provided). I have a few examples, but it would be great to have a few more.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16717999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16717999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16717999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzE3OTk5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-21T08:56:31Z",
    "updated_at": "2013-04-21T08:56:31Z",
    "author_association": "NONE",
    "body": "[spam](http://ndb.nal.usda.gov/ndb/foods/show/1732?fg=&man=&lfacet=&format=&count=&max=25&offset=&sort=&qlookup=spam)\n[rich people](http://www.forbes.com/billionaires/list/)\n[fantasy baseball](http://sports.yahoo.com/news/2013-fantasy-baseball-rankings--top-100-190713459.html)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16795164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16795164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16795164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk1MTY0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T15:33:34Z",
    "updated_at": "2013-04-22T15:33:34Z",
    "author_association": "NONE",
    "body": "@cpcloud , how are you handling  table selection when there are multiple\ntables on the page?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16795426",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16795426",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16795426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk1NDI2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T15:37:56Z",
    "updated_at": "2013-04-22T15:37:56Z",
    "author_association": "MEMBER",
    "body": "Right now I have a parameter called table_number that selects that is an\nindex into the list generated after soup.find_all('table', attrs) is called.\n\n## \n\nBest,\nPhillip Cloud\n\nOn Mon, Apr 22, 2013 at 11:33 AM, y-p notifications@github.com wrote:\n\n> @cpcloud https://github.com/cpcloud , how are you handling table\n> selection when there are multiple\n> tables on the page?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3369#issuecomment-16795164\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16795739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16795739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16795739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk1NzM5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T15:42:31Z",
    "updated_at": "2013-04-22T15:42:39Z",
    "author_association": "NONE",
    "body": "Ideally,  the user should be able to somehow specify the table he's after\nby visual inspection of the rendered page.  no matter what sort of weirdness\nis going on in the markup (nested tables, tables quietly used for layout, etc')\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16796313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16796313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16796313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk2MzEz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T15:50:33Z",
    "updated_at": "2013-04-22T15:50:33Z",
    "author_association": "MEMBER",
    "body": "@y-p Agreed. However, one problem is the plethora of HTML that is either a)\ninvalid or b) doesn't follow conventions that make this doable in a\nreasonable amount of time (I think). So I opted for practicality here (in\nactuality I just adopted the convention of the ImportHtml function from\ngoogle docs). The problem with that is that the first table may appear as\nformatting, but the user might think that the first table is something\nelse. In that case trial and error is the way to do it. I'm happy to take\nsuggestions here. In the long term it might be best to subclass ParserBase,\nif the ParserBase API is stable.\n\n## \n\nBest,\nPhillip Cloud\n\nOn Mon, Apr 22, 2013 at 11:42 AM, y-p notifications@github.com wrote:\n\n> Ideally, the user should be able to somehow specify the table he's after\n> by visual inspection of the rendered page. no matter what sort of weirdness\n> if going on in the markup (nested tables, tables quietly used for layout,\n> etc')\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3369#issuecomment-16795739\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16798771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16798771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16798771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk4Nzcx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T16:24:19Z",
    "updated_at": "2013-04-22T16:24:19Z",
    "author_association": "NONE",
    "body": "- robustness , whatever the underlying parser dies on, dies. \n- table selection - exactly my point, the user should (optionally) specify a regexp unique to a datum\n  in the table (th/td.text), not an index.\n\nDoesn't need to be fancy, it's just a \"nice-to-have\", leave the corner cases for users to deal with.\nWould be good if you could test on something other then English, just to make sure\nunicode nominally works.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16799463",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16799463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16799463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk5NDYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T16:31:54Z",
    "updated_at": "2013-04-22T16:31:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "my 2c, if you don't specify a table selection criteria (as above), I would return a list of _all_ tables. (kind of like returning a list of all elements e.g. elementTree tree type of stuff)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16804913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16804913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16804913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA0OTEz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T17:38:35Z",
    "updated_at": "2013-04-22T17:38:35Z",
    "author_association": "MEMBER",
    "body": "@jreback Does that preclude having a class method DataFrame.from_html? I\nsuppose that method could raise if a single table couldn't be identified\nwith the input criteria and read_html could return a list of DataFrames\ninstead, although that seems inconsistent with read_csv and friends.\n\n## \n\nBest,\nPhillip Cloud\n\nOn Mon, Apr 22, 2013 at 12:32 PM, jreback notifications@github.com wrote:\n\n> my 2c, if you don't specify a table selection criteria (as above), I would\n> return a list of _all_ tables. (kind of like returning a list of all\n> elements e.g. elementTree tree type of stuff)\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3369#issuecomment-16799463\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16823882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3369#issuecomment-16823882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3369",
    "id": 16823882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIzODgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T21:06:27Z",
    "updated_at": "2013-04-22T21:06:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "these class methods are a bit clunky, for example\n\nread_csv can return a series or frame\n\nso what's the point of a DataFrame.from_csv\n\nmainly just a legacy convention I think\n\nand I think your new from_html should go in a new module\nio.html (which we should also add to_html)\n\nthat said u could raise if u can't find a valid table (or more than one if the user specified criteria)\n"
  }
]
