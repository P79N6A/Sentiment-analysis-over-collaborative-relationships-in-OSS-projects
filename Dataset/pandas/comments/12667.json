[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198498111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198498111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198498111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODQ5ODExMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:07:26Z",
    "updated_at": "2016-03-18T19:07:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "See [the 0.18.0 perf improvements](http://pandas.pydata.org/pandas-docs/stable/whatsnew.html#performance-improvements)\n\n```\nIn [16]: pd.__version__\nOut[16]: u'0.18.0'\n\nIn [7]: s = pd.concat([Series(pd.date_range('20150101',periods=1000))]*1000)\n\nIn [8]: len(s)\nOut[8]: 1000000\n\nIn [9]: s1 = s.astype(str)\n\nIn [10]: s1 = s.dt.strftime('%Y-%m-%d')\n\nIn [11]: s2 = s.dt.strftime('%Y.%m.%d')\n\nIn [12]: s1.head()\nOut[12]: \n0    2015-01-01\n1    2015-01-02\n2    2015-01-03\n3    2015-01-04\n4    2015-01-05\ndtype: object\n\nIn [13]: s2.head()\nOut[13]: \n0    2015.01.01\n1    2015.01.02\n2    2015.01.03\n3    2015.01.04\n4    2015.01.05\ndtype: object\n\nIn [14]: %timeit pd.to_datetime(s1)\n10 loops, best of 3: 170 ms per loop\n\nIn [15]: %timeit pd.to_datetime(s2)\n10 loops, best of 3: 175 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198498377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198498377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198498377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODQ5ODM3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:08:36Z",
    "updated_at": "2016-03-18T19:08:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "note if this were implemented: https://github.com/pydata/pandas/issues/11665\n\nthis would easily be 10x improvement here as there are lots of repeats.\n\npull-requests on that are welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198500400",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198500400",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198500400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODUwMDQwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:11:37Z",
    "updated_at": "2016-03-18T19:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I realize you actualy want `%m.%d.%Y`. This is not an ISO8601 format. So not really sure what/if anything could be done here. (The reason its not is its ambiguous to dayfirst)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198503358",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198503358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198503358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODUwMzM1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:16:06Z",
    "updated_at": "2016-03-18T19:16:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [38]: s3 = s.dt.strftime('%m.%d.%Y')\ns3.head()\n\nIn [39]: s3.head()\nOut[39]: \n0    01.01.2015\n1    01.02.2015\n2    01.03.2015\n3    01.04.2015\n4    01.05.2015\ndtype: object\n\n# this may work for you\nIn [36]: %timeit pd.to_datetime(s3.str[6:10] + s3.str[0:2] + s3.str[3:5])\n1 loop, best of 3: 1.24 s per loop\n\nIn [37]: %timeit pd.to_datetime(s3,format='%m.%d.%Y')\n1 loop, best of 3: 3.35 s per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198503994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198503994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198503994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODUwMzk5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:17:50Z",
    "updated_at": "2016-03-18T19:17:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "btw, even though `parse_dates` does dispatch to `pd.to_datetime`, its meant for the simplest cases. Any heavy lifing you should do after with `pd.to_datetime`, which provides a bunch more options.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198516285",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198516285",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198516285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODUxNjI4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:51:13Z",
    "updated_at": "2016-03-18T19:51:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "so there was a bunch of discussion on #12585  on how this could be fixed. The primary way would be to allow additional c-code to parse some other non-ambiguous formats.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198518835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198518835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198518835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODUxODgzNQ==",
    "user": {
      "login": "apapanico",
      "id": 3802821,
      "node_id": "MDQ6VXNlcjM4MDI4MjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3802821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apapanico",
      "html_url": "https://github.com/apapanico",
      "followers_url": "https://api.github.com/users/apapanico/followers",
      "following_url": "https://api.github.com/users/apapanico/following{/other_user}",
      "gists_url": "https://api.github.com/users/apapanico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apapanico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apapanico/subscriptions",
      "organizations_url": "https://api.github.com/users/apapanico/orgs",
      "repos_url": "https://api.github.com/users/apapanico/repos",
      "events_url": "https://api.github.com/users/apapanico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apapanico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T19:59:14Z",
    "updated_at": "2016-03-18T19:59:14Z",
    "author_association": "NONE",
    "body": "Jeff, thanks for taking the time to look at this.\n\nHonestly, if this is a non ISO format then you guys should probably not\nbother supporting it.\n\nIt just so happens that our data storage ends up dumping the timestamps in\nthis format.  Luckily for me, the simple string replace method works\nincredibly well when I read in the csv string.\n\nI brought this up because I just thought there might be something out there\nthat can create a kind of custom pre-compiled format that you can define\n(like I tried to do in my date parser example) and I think this is what\nyou're getting at in your last comment.\n\nIf someone takes this on and looks to make a more generalizeable date\nparser, then great.  But like I said, if it's a non standard format, it\nshould probably be ignored for the sake of everyone's sanity.\n\nAlex\nOn Mar 18, 2016 12:51 PM, \"Jeff Reback\" notifications@github.com wrote:\n\n> so there was a bunch of discussion on #12585\n> https://github.com/pydata/pandas/issues/12585 on how this could be\n> fixed. The primary way would be to allow additional c-code to parse some\n> other non-ambiguous formats.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/12667#issuecomment-198516285\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198520529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-198520529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 198520529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODUyMDUyOQ==",
    "user": {
      "login": "apapanico",
      "id": 3802821,
      "node_id": "MDQ6VXNlcjM4MDI4MjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3802821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apapanico",
      "html_url": "https://github.com/apapanico",
      "followers_url": "https://api.github.com/users/apapanico/followers",
      "following_url": "https://api.github.com/users/apapanico/following{/other_user}",
      "gists_url": "https://api.github.com/users/apapanico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apapanico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apapanico/subscriptions",
      "organizations_url": "https://api.github.com/users/apapanico/orgs",
      "repos_url": "https://api.github.com/users/apapanico/repos",
      "events_url": "https://api.github.com/users/apapanico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apapanico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T20:07:23Z",
    "updated_at": "2016-03-18T20:07:23Z",
    "author_association": "NONE",
    "body": "I should clarify, I think the support in pandas provided for messy/non\nstandard formats is great.  I love it.  I meant with respect performance\nfor those formats.\nOn Mar 18, 2016 12:59 PM, \"Alex Papanicolaou\" alex.papanic@gmail.com\nwrote:\n\n> Jeff, thanks for taking the time to look at this.\n> \n> Honestly, if this is a non ISO format then you guys should probably not\n> bother supporting it.\n> \n> It just so happens that our data storage ends up dumping the timestamps in\n> this format.  Luckily for me, the simple string replace method works\n> incredibly well when I read in the csv string.\n> \n> I brought this up because I just thought there might be something out\n> there that can create a kind of custom pre-compiled format that you can\n> define (like I tried to do in my date parser example) and I think this is\n> what you're getting at in your last comment.\n> \n> If someone takes this on and looks to make a more generalizeable date\n> parser, then great.  But like I said, if it's a non standard format, it\n> should probably be ignored for the sake of everyone's sanity.\n> \n> Alex\n> On Mar 18, 2016 12:51 PM, \"Jeff Reback\" notifications@github.com wrote:\n> \n> > so there was a bunch of discussion on #12585\n> > https://github.com/pydata/pandas/issues/12585 on how this could be\n> > fixed. The primary way would be to allow additional c-code to parse some\n> > other non-ambiguous formats.\n> > \n> > —\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/pydata/pandas/issues/12667#issuecomment-198516285\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331986587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12667#issuecomment-331986587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12667",
    "id": 331986587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTk4NjU4Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-25T19:27:34Z",
    "updated_at": "2017-09-25T19:27:34Z",
    "author_association": "MEMBER",
    "body": "FWIW format caching is pretty high on the python-dateutil todo list"
  }
]
