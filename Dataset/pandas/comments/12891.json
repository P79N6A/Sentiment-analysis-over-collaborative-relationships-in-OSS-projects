[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209515306",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12891#issuecomment-209515306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12891",
    "id": 209515306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTUxNTMwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T15:36:36Z",
    "updated_at": "2016-04-13T15:36:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "well `.rows` is not meaninful for a 1-d (Series) object. So not sure of the point. You can index by number if you want e.g. 0 {inde}x, 1 {columns}\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209815257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12891#issuecomment-209815257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12891",
    "id": 209815257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTgxNTI1Nw==",
    "user": {
      "login": "sylvaticus",
      "id": 2077159,
      "node_id": "MDQ6VXNlcjIwNzcxNTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2077159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sylvaticus",
      "html_url": "https://github.com/sylvaticus",
      "followers_url": "https://api.github.com/users/sylvaticus/followers",
      "following_url": "https://api.github.com/users/sylvaticus/following{/other_user}",
      "gists_url": "https://api.github.com/users/sylvaticus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sylvaticus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sylvaticus/subscriptions",
      "organizations_url": "https://api.github.com/users/sylvaticus/orgs",
      "repos_url": "https://api.github.com/users/sylvaticus/repos",
      "events_url": "https://api.github.com/users/sylvaticus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sylvaticus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T07:58:00Z",
    "updated_at": "2016-04-14T07:58:00Z",
    "author_association": "NONE",
    "body": "Thank you for your opinion and the quick answer.\nI just reply, to be sure what I mean is clear, but of course it's just a proposal from a new user that doesn't know the architectural design of the pandas library. I am aware of it ;-)\n\nThe \"problem\" is that you can't use `axis=0` everywhere, e.g. in the constructor:\n\n```\nclass pandas.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)\n\ndf = pd.DataFrame(np.array([[0,1],[2,3]]),\n                  columns=['c1','c2'],\n                  index=['r1','r2'])\n```\n\nyou need to use the  `index` and `columns` parameter explicitly.\nIn my proposal `rows` and `columns` may be aliases to `axis0` and `axis1` in the specific DataFrame context, where for \"alias\" I mean that it is API-side guaranteed to be equivalent (that is, these names are provided just for convenience to the users that can mentally map 2D data in a confident table fashion), while for further dimensionality you can refer to axisN.\nFor API-backward compatibility you can have the current axis names as other (deprecated?) aliases.\nI do not see anything again `rows` in a Series context, but an other alias name may be more appropriate, in any case something different than a generic name (the `Index` type of object) used as a \"private\" name (the `index` name of the axis)..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209857254",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12891#issuecomment-209857254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12891",
    "id": 209857254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTg1NzI1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T09:54:10Z",
    "updated_at": "2016-04-14T09:54:10Z",
    "author_association": "MEMBER",
    "body": "@sylvaticus The last years, pandas has actually made the opposite move. Some functions had a `rows` keyword, and these are deprecated/removed in favor of `index` (see eg #5505). So I don't think we are going the change that again. \nFurther, the >2D dimensional objects (Panel etc) are probably going to be deprecated in a future release, so I wouldn't worry about those names too much.\n\nBut I agree that the fact that both the `index` and the `columns` are `Index` objects is a potential confusing point for newcomers. However, I think it is something that people will have to learn, as IMO it is too late to change that.\n"
  }
]
