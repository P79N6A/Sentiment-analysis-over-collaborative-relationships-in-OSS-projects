[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52424902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52424902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52424902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDI0OTAy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T15:31:21Z",
    "updated_at": "2014-08-17T15:31:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you have any short, concrete examples of what you're doing? Also let us know why using a SparseSeries doesn't work for it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52427404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52427404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52427404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDI3NDA0",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T16:41:16Z",
    "updated_at": "2014-08-17T16:41:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a quick example of going from a scipy.sparse array to a pandas Series and back. Mostly I am thinking of the case where you are data munging and are reading in labeled data and need to then switch to a sparse matrix in order to use something in scipy.sparse (multiplication, sparse svds or whatever). I am running this on 0.14.1. Apologies if this functionality is available on the dev branch. I have seen related question on stackoverflow but they all seem to indicate this is not yet implemented and that no one has given a strong opinion that it should be included either (maybe there is a good reason to avoid this kind of thing).\n\n```\nimport scipy.sparse.linalg\nimport scipy.sparse\nimport pandas\n\n# * limit outselves to 2d situation for now\n# * also, for simplicity, all column and row labels are just the integer indices\n\n# create a sparse array\nm = int(1e6)\nn = int(1e5)\nA = scipy.sparse.rand(m, n, density=1e-8)\n\n# scipy.sparse -> sparse series? Is there a better way?\ns = pandas.Series(A.data)\ns.index = pandas.MultiIndex.from_tuples(list(zip(A.row, A.col)))\ns = s.to_sparse(fill_value=0)\n\n# sparse series -> scipy.sparse array? s.unstack() is producing errors for me\ni, j = list(zip(*s.index))\ndata = s.values\nsA = scipy.sparse.coo_matrix((data, (i, j)), shape=(m, n))\n\ncheck = A - sA\nprint('This should be zero', abs(check).max())\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52433915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52433915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52433915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDMzOTE1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T20:30:56Z",
    "updated_at": "2014-08-17T20:30:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the example. I agree with your intuition that `s.unstack()` should do something like what you want. I haven't used the sparse structures at all, but I'll take a look later.  May just be not implemented yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52435703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52435703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52435703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDM1NzAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T21:28:19Z",
    "updated_at": "2014-08-17T21:28:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cottrell This would definitly be an improvements. See the related issue I linked to. I think several of the  sparse routines could easily have an option to return a scipy coo type (or other sparse type matrix). It should be straightforward from a pandas sparse structure (which are very similar to coo types).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52435809",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52435809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52435809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDM1ODA5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T21:31:56Z",
    "updated_at": "2014-08-17T21:31:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's an idea of the internal structure.\n\n```\nIn [40]: ts = Series(randn(10))\n\nIn [41]: ts[2:-2] = np.nan\n\nIn [42]: sts = ts.to_sparse()\n\nIn [43]: sts\nOut[43]: \n0   -0.785433\n1    1.791538\n2         NaN\n3         NaN\n4         NaN\n5         NaN\n6         NaN\n7         NaN\n8   -1.192896\n9    2.672896\ndtype: float64\nBlockIndex\nBlock locations: array([0, 8], dtype=int32)\nBlock lengths: array([2, 2], dtype=int32)\n\nIn [44]: sts._data.values\nOut[44]: \n[-0.785433163534, 1.7915375118, nan, nan, nan, nan, nan, nan, -1.19289573606, 2.67289566074]\nFill: nan\nBlockIndex\nBlock locations: array([0, 8], dtype=int32)\nBlock lengths: array([2, 2], dtype=int32)\n\nIn [45]: sts._data\nOut[45]: \nSingleBlockManager\nItems: Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype='int64')\nSparseBlock: 10 dtype: float64\n\nIn [46]: sts._data.values.sp_index.blengths\nOut[46]: array([2, 2], dtype=int32)\n\nIn [47]: sts._data.values.sp_index.blocs\nOut[47]: array([0, 8], dtype=int32)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52568492",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52568492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52568492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTY4NDky",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T23:13:21Z",
    "updated_at": "2014-08-18T23:13:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool. I am not quite clear on whether the pandas.sparse structure should be the attachment point of some sort of unstack_to_scipy_sparse (this is a bad name) routine or not. Which do you think would make more sense (consider Series only for simplicity):\n1. unstack_to_scipy_sparse for generic MultiIndexed Series\n2. unstack_to_scipy_sparse for pandas.sparse MultiIndex Series\n\nBasically, I think unstacking to scipy.sparse can happen with or without pandas.sparse storage.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52569135",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52569135",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52569135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTY5MTM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T23:17:53Z",
    "updated_at": "2014-08-18T23:17:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it should go from a sparse structure. if you have a series it is dense by definition. (wether it is unstack from something else or not). The key is you can efficiency translate a pandas sparse structure to scipy w/o densing. any else doesn't make much sense.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52745008",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52745008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 52745008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQ1MDA4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T07:58:10Z",
    "updated_at": "2014-08-20T07:58:10Z",
    "author_association": "MEMBER",
    "body": "@cottrell Think of `s.to_sparse().unstack().to_coo()` as a better way of spelling `s.unstack_to_scipy_sparse()`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62637038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-62637038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 62637038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM3MDM4",
    "user": {
      "login": "byronyi",
      "id": 2613663,
      "node_id": "MDQ6VXNlcjI2MTM2NjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/byronyi",
      "html_url": "https://github.com/byronyi",
      "followers_url": "https://api.github.com/users/byronyi/followers",
      "following_url": "https://api.github.com/users/byronyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions",
      "organizations_url": "https://api.github.com/users/byronyi/orgs",
      "repos_url": "https://api.github.com/users/byronyi/repos",
      "events_url": "https://api.github.com/users/byronyi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/byronyi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T22:53:12Z",
    "updated_at": "2014-11-11T23:05:14Z",
    "author_association": "NONE",
    "body": "I would like to know that, as v0.15.2 has been released, is this feature implemented?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62638340",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-62638340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 62638340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM4MzQw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T23:03:25Z",
    "updated_at": "2014-11-11T23:03:25Z",
    "author_association": "MEMBER",
    "body": "@byronyi I don't think so -- that's why this issue is still open! :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62638578",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-62638578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 62638578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM4NTc4",
    "user": {
      "login": "byronyi",
      "id": 2613663,
      "node_id": "MDQ6VXNlcjI2MTM2NjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/byronyi",
      "html_url": "https://github.com/byronyi",
      "followers_url": "https://api.github.com/users/byronyi/followers",
      "following_url": "https://api.github.com/users/byronyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions",
      "organizations_url": "https://api.github.com/users/byronyi/orgs",
      "repos_url": "https://api.github.com/users/byronyi/repos",
      "events_url": "https://api.github.com/users/byronyi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/byronyi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T23:05:18Z",
    "updated_at": "2014-11-11T23:05:18Z",
    "author_association": "NONE",
    "body": "As a suggestion, you can simply do it by this:\n\n``` python\nfrom scipy.sparse import coo_matrix\ncoo = coo_matrix((series.values, zip(*series.index.values)))\n```\n\nGiven the series has two-level integer multi-index.\n\nBut we need to deal with the fact when the index is not integer, and some kind of mapping is necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62639359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-62639359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 62639359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM5MzU5",
    "user": {
      "login": "byronyi",
      "id": 2613663,
      "node_id": "MDQ6VXNlcjI2MTM2NjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/byronyi",
      "html_url": "https://github.com/byronyi",
      "followers_url": "https://api.github.com/users/byronyi/followers",
      "following_url": "https://api.github.com/users/byronyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions",
      "organizations_url": "https://api.github.com/users/byronyi/orgs",
      "repos_url": "https://api.github.com/users/byronyi/repos",
      "events_url": "https://api.github.com/users/byronyi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/byronyi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T23:11:49Z",
    "updated_at": "2014-11-11T23:11:49Z",
    "author_association": "NONE",
    "body": "I think that implementing this will be kind of tricky when index is not numerical (or even not starting from 0). \n\nBut nevertheless, we can still put it on documentation of the [Sparse](http://pandas.pydata.org/pandas-docs/dev/sparse.html) page so people don't bother asking for answers again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62642455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-62642455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 62642455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjQyNDU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T23:39:50Z",
    "updated_at": "2014-11-11T23:39:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@byronyi doc pull-requests are welcome!\n\nsparse is kind of a neglected step-child ATM. need some interest from contributors!\n\nwill help you along. lmk.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64457736",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-64457736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 64457736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDU3NzM2",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-25T19:37:04Z",
    "updated_at": "2014-11-25T19:37:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have come back to this a few times and have yet to settle on what exactly is the right feature to implement (and haven't had much time to really play around unfortunately). One thing I should point out is that, as far as I know, there is no such thing as an n-dim sparse scipy array so I was having a false memory when I first wrote the comment above. I think there might be two separate features here?\n1. SparseSeries.unstack -> SparseDataFrame and SparseDataFrame.stack/unstack -> SparseDataFrame.\n2. SparseDataFrame.to_coo/to_csr methods as above.\n\nI think 2 is simple and I will hopefully try this soon but I am wondering if there is an simple method of handling the stack/unstack within the sparse framework. The only thing I could see quickly is to use the sparse constructor but I am guessing that is not the right way to go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65003306",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-65003306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 65003306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDAzMzA2",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T22:26:57Z",
    "updated_at": "2014-11-30T22:26:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I hacked together something together to demo what a SparseSeries.to_coo might behave like (i.e. point 2 above but for Series). If this looks like it is moving in the right direction let me know and I can try to take this a little further.\n\nhttps://gist.github.com/cottrell/a17fa777afd2cc4a7289\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65010504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-65010504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 65010504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDEwNTA0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T01:21:47Z",
    "updated_at": "2014-12-01T01:21:47Z",
    "author_association": "MEMBER",
    "body": "@cottrell For your feature (1), do you really mean \"SparseDataFrame.stack/unstack -> SparseDataFrame\" or should that last SparseDataFrame be a SparsePanel? If so, I understand and agree with your two features.\n\nIt would indeed be nice to have an n-dimensional sparse scipy array -- too bad that doesn't exist! It would be an interesting side project to make that.\n\nYour gist looks like roughly the right direction to me -- though we'll want to break that `to_coo` function into two parts (if feasible).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65052923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-65052923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 65052923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDUyOTIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T11:37:08Z",
    "updated_at": "2014-12-01T11:37:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cottrell you approach looks reasonable.\n\nHaving a `SparseSeries.to_coo` would be a great start!\n\npls do a PR and we can have a look at the impl.\n\nOther things that will be necessary:\n- tests\n- doc example\n- vbench (just to track the perf over time)\n\nFuther, related to #4343 I think it would be straightfoward to have the `SparseSeries` constructor accept a `scipy.coo` style matrix and return a `SparseSeries` (and potentially other types of Sparse 1-d structures).\n\nThis would be especially useful for testing.\n\nYou can implement this with a `SparseSeries.from_coo` helper method (and then just call it from `__init__`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65472449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-65472449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 65472449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDcyNDQ5",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T19:31:45Z",
    "updated_at": "2014-12-03T19:31:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer Re: \"that last SparseDataFrame be a SparsePanel\" ... Does stack/unstack (on non-sparse DataFrames) ever take you to Panels? I only ever use stack/unstack to reshape values of DataFrame and modify the (MultiIndex) columns and indices. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65521044",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-65521044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 65521044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTIxMDQ0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T01:00:15Z",
    "updated_at": "2014-12-04T01:00:15Z",
    "author_association": "MEMBER",
    "body": "@cottrell I was confused. You are correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66932017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-66932017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 66932017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTMyMDE3",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-14T22:03:09Z",
    "updated_at": "2014-12-14T22:03:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've created a PR as requested. https://github.com/pydata/pandas/pull/9076 There is still some work to do (haven't updated docs yet, for example) but it would be good to get some feedback. Also, am having trouble with Travis CI failures as of this weekend. Even 15.2 appears to be failing now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76865554",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-76865554",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 76865554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODY1NTU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T00:59:19Z",
    "updated_at": "2015-03-03T00:59:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #9076 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298879800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-298879800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 298879800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg3OTgwMA==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T10:55:20Z",
    "updated_at": "2017-05-03T15:04:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does anyone object to `SparseSeries` [no longer having `to_coo()`/`from_coo()` methods](https://github.com/pandas-dev/pandas/issues/15634) in favor of `SparseDataFrame` providing roughly the same API (accepting sparse matrices in the constructor and implementing a somewhat simpler `to_coo()`)?\r\n\r\nDiscuss in https://github.com/pandas-dev/pandas/issues/15634."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299275915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-299275915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 299275915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTI3NTkxNQ==",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:50:41Z",
    "updated_at": "2017-05-04T18:50:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't read through the new SparseDataFrame api yet but I think the main convenience with the _coo methods was for the to_coo in the case len(row_levels)>1 or len(column_level)>1 where you need to effectively turn an index of tuples into a single index and get at the codes. There are probably better ways to do this by directly accessing the internals (index labels and hashing tricks on arrays).\r\n\r\nFor my understanding, is there a replacement function that passes the tests for to_coo and only uses the SparseDataFrame api or would this be a bit of a feature drop (probably fine if no one else is using this stuff)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/306764714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-306764714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 306764714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc2NDcxNA==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T11:15:38Z",
    "updated_at": "2017-06-07T11:26:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cottrell sorry for the delay. Scipy sparse only supports 2d matrices, so with a multi-level indexed series, one would first transform/unstack into a 2d sparse dataframe and then call `.to_coo()` on it. Like:\r\n```py\r\n# Old .to_coo()\r\n>>> ss = pd.SparseSeries(\r\n...     [3.0, 1.0, 3.0],\r\n...     index=pd.MultiIndex.from_tuples([(1, 2, 'a', 0),\r\n...                                      (1, 1, 'b', 0),\r\n...                                      (1, 1, 'b', 1)],\r\n...                                      names=['A', 'B', 'C', 'D']))\r\n>>> ss\r\nA  B  C  D\r\n1  2  a  0    3.0\r\n   1  b  0    1.0\r\n         1    3.0\r\ndtype: float64\r\nBlockIndex\r\nBlock locations: array([0], dtype=int32)\r\nBlock lengths: array([3], dtype=int32)\r\n\r\n>>> A, rows, columns = ss.to_coo(row_levels=['A', 'B'],\r\n...                              column_levels=['C', 'D'],\r\n...                              sort_labels=True)\r\n>>> A.toarray()\r\narray([[ 0.,  1.,  3.],\r\n       [ 3.,  0.,  0.]])\r\n>>> rows\r\n[(1, 1), (1, 2)]\r\n>>> columns\r\n[('a', 0), ('b', 0), ('b', 1)]\r\n\r\n# Instead, we could ... (new)\r\n>>> ss2 = ss.copy()\r\n# ... use any means to make a two-level index\r\n>>> ss2.index = pd.MultiIndex.from_tuples([(v[:2], v[2:])\r\n...                                        for v in ss.index.values],\r\n...                                       names=['AB', 'CD'])\r\n>>> ss2\r\nAB      CD    \r\n(1, 2)  (a, 0)    3.0\r\n(1, 1)  (b, 0)    1.0\r\n        (b, 1)    3.0\r\ndtype: float64\r\nBlockIndex\r\nBlock locations: array([0], dtype=int32)\r\nBlock lengths: array([3], dtype=int32)\r\n\r\n# Would work either way because series unstacks into a sparse data frame ...\r\n>>> sdf = ss2.unstack()\r\n>>> sdf\r\nOut[34]: \r\nCD      (a, 0)  (b, 0)  (b, 1)\r\nAB                            \r\n(1, 1)     NaN     1.0     3.0\r\n(1, 2)     3.0     NaN     NaN\r\n\r\n# ... which has .to_coo()\r\n>>> A = sdf.to_coo()\r\n>>> A\r\n<2x3 sparse matrix of type '<class 'numpy.float64'>'\r\n\twith 3 stored elements in COOrdinate format>\r\n>>> A.toarray()\r\narray([[ 0.,  1.,  3.],\r\n       [ 3.,  0.,  0.]])\r\n>>> sdf.index  # rows\r\nIndex([(1, 1), (1, 2)], dtype='object', name='AB')\r\n>>> sdf.columns.tolist()  # columns, as a list\r\n[('a', 0), ('b', 0), ('b', 1)]\r\n```\r\nUnstacking `SparseSeries` [currently doesn't work](https://github.com/pandas-dev/pandas/issues/16614), but is fixed in https://github.com/pandas-dev/pandas/pull/16616."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307238498",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-307238498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 307238498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzIzODQ5OA==",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T21:55:50Z",
    "updated_at": "2017-06-08T21:55:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, that functionally seems to cover it. I have a feeling from_tuples is pretty bad performance wise. \r\n\r\nIt seems like all the usefulness of that features really comes down to just being able to efficiently create codes for groups of levels (merging levels like you show above). After that, it is just record keeping to get the labels. Do you know if there is a more efficient version of something like this somewhere in the pandas code base?\r\n```\r\n\r\ndef index_hash(*codes):\r\n    m = len(codes[0])\r\n    n = len(codes)\r\n    a = np.empty((m, n), dtype=np.int64)\r\n    for i in range(n):\r\n        a[:,i] = codes[i]\r\n    a = np.apply_along_axis(lambda x: hash(x.data.tobytes()), 1, a)\r\n    return a\r\n\r\ndef index_hash_from_df(df, levels=None, catcols=None):\r\n    assert (levels is not None) or (catcols is not None), 'Must not both be None'\r\n    codes = list()\r\n    if levels is not None:\r\n        for level in levels:\r\n            codes.append(df.index.labels[df.index._get_level_number(level)].values())\r\n    if catcols is not None:\r\n        for catcol in catcols:\r\n            codes.append(df[catcol].cat.codes.values)\r\n    return index_hash(*codes)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307360811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8048#issuecomment-307360811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8048",
    "id": 307360811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzM2MDgxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T11:04:13Z",
    "updated_at": "2017-06-09T11:04:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cottrell looks like you need generalized data hashing, try\r\n\r\n```pandas.util.hash_pandas_object``` these are highly performant (and used internally in indexing)"
  }
]
