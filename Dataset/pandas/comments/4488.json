[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862043",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24862043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24862043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyMDQz",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:03:08Z",
    "updated_at": "2013-09-21T13:03:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could take this, if that's OK? I just need a few pointers:\n1. Should this be used in the `read_fwf` function before passing the `filepath_or_buffer` to the `_read` or in the `FixedWidthReader`'s `__init__` function?\n2. I assume that this should read the first `nlines` and then try to determine the widths before parsing. But what about the non-seekable buffers? If the buffer passed in is just a generator and doesn't support seeking back to the beginning? I assume that `FixedWidthReader` is a better place for this since it can buffer the lines it used for determining the widths and then just yield them in it's `next`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24862124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24862124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyMTI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:09:18Z",
    "updated_at": "2013-09-21T13:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "your point 2 is correct, here is a fix for that (and maybe you should just do this in all cases)\n\ndon't start with the buffer/path itself, but wrap it in a StringIO like class that can handle this type of bufferring,\ne.g. its essentially a pass-thru if you are not talking to a generator, otherwise its a seekable buffer\n\nkind of like the Reader class you created in that generator question on SO; except it also would have a reset method (prob a more consistent name that is compat with StringIO though), that seeks to the beginning and buffers what it already read first to you before resuming getting from the generator\n\nmake sense?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24862408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24862408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyNDA4",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:27:26Z",
    "updated_at": "2013-09-21T13:27:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Yes. I would just avoid buffering the whole data, just the last `nlines` max. Or even completely skip it if no detection is needed.\n\nAlso, is adding `nlines=100` parameter to the `read_fwf` OK?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24862465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24862465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyNDY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:31:02Z",
    "updated_at": "2013-09-21T13:31:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "is that for the 'checking' part? if so yes,....but I would think you only need even a few lines (e.g. no header, and use didn't use skiprows, or if they did you skipped them), and I think you have to assume that the format is the same, yes? it IS fixed width (but then I guess you have to 'validate' it)...maybe raise if you find discrepancies?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862652",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24862652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24862652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyNjUy",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:43:29Z",
    "updated_at": "2013-09-21T13:43:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes just for inferring the width of columns. There are a lot of things that should be taken into account, as you mentioned (`lineterminator`, `skiprows`, `comment` and `nrows` if I'm correct). I'll try to cover all of them in test cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24865794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24865794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1Nzk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:28:57Z",
    "updated_at": "2013-09-21T16:28:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alefnula I realize you are right, you prob do need more lines in order to 'figure out' where the proper terminations are....because the fields can be ragged within the 'unknown' widths\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24882107",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24882107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24882107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyMTA3",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T13:32:47Z",
    "updated_at": "2013-09-22T13:32:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Think I found a simpler solution based on the minimal starting point of the column: [detect_fwf_widths](https://github.com/alefnula/pandas/blob/iss4488/pandas/io/parsers.py#L1977). I just have to work out the edge cases and implement the buffering.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24882136",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24882136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24882136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyMTM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T13:34:27Z",
    "updated_at": "2013-09-22T13:34:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alefnula gr8....prob will need a number of tests for this....what API are you proposing for this?\n\nmaybe `widths='detect'`? (and make it the default?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24882299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24882299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24882299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyMjk5",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T13:44:06Z",
    "updated_at": "2013-09-22T13:45:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I added a `detect_from_rows` parameter. \n\n```\ndetect_from_rows : number or list of rows that will be inspected in\n    order to infer the column widths, if neither the 'colspecs' nor\n    'widths' are specified (default=100).\n```\n\nI wanted to enable user to say either:\n1. Detect from first 20 rows: `detect_from_rows=20`\n2. Detect from rows 0, 4, 7 and 8: `detect_from_rows=[0, 4, 7, 8]`\n\nIf this just complicates things I can use just a simple `widths='detect'` and default to `100` rows. That would be even simpler to implement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24882401",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24882401",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24882401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyNDAx",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T13:50:05Z",
    "updated_at": "2013-09-22T13:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also do you have an idea why did I get this error from Travis for every python interpreter except 2.7?!\n\n```\nIOError: [Errno 2] No such file or directory:\n'/home/travis/virtualenv/python2.6_with_system_site_packages/lib/python2.6/site-packages/pandas-0.0.0-py2.6-linux-x86_64.egg/pandas/io/tests/data/test1.fwf'\n```\n\nThe file is in the repository.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24882484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24882484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24882484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyNDg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T13:55:42Z",
    "updated_at": "2013-09-22T13:55:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "You need to edit `setup.py` to make it copy that extension to the correct place\n\ne.g. `tests/data/*.fwf`\n\n```\n# The build cache system does string matching below this point.\n# if you change something, be careful.\n\nsetup(name=DISTNAME,\n      version=FULLVERSION,\n      maintainer=AUTHOR,\n      packages=['pandas',\n                'pandas.compat',\n                'pandas.computation',\n                'pandas.computation.tests',\n                'pandas.core',\n                'pandas.io',\n                'pandas.rpy',\n                'pandas.sandbox',\n                'pandas.sparse',\n                'pandas.sparse.tests',\n                'pandas.stats',\n                'pandas.util',\n                'pandas.tests',\n                'pandas.tools',\n                'pandas.tools.tests',\n                'pandas.tseries',\n                'pandas.tseries.tests',\n                'pandas.io.tests',\n                'pandas.io.tests.test_json',\n                'pandas.stats.tests',\n                ],\n      package_data={'pandas.io': ['tests/data/legacy_hdf/*.h5',\n                                  'tests/data/legacy_pickle/0.10.1/*.pickle',\n                                  'tests/data/legacy_pickle/0.11.0/*.pickle',\n                                  'tests/data/legacy_pickle/0.12.0/*.pickle',\n                                  'tests/data/*.csv',\n                                  'tests/data/*.dta',\n                                  'tests/data/*.txt',\n                                  'tests/data/*.xls',\n                                  'tests/data/*.xlsx',\n                                  'tests/data/*.table',\n                                  'tests/data/*.html',\n                                  'tests/test_json/data/*.json'],\n                    'pandas.tools': ['tests/*.csv'],\n                    'pandas.tests': ['data/*.pickle',\n                                     'data/*.csv'],\n                    'pandas.tseries.tests': ['data/*.pickle',\n                                             'data/*.csv']\n                    },\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24957878",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24957878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24957878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU3ODc4",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T21:47:00Z",
    "updated_at": "2013-09-23T21:47:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok i think I found an optimal algorithm that uses a bitmask to detect the gaps between columns. [detect_fwf_widths](https://github.com/alefnula/pandas/blob/4c4edd047f2f7bf77f03d0db88b3a6d4518fbf0a/pandas/io/parsers.py#L1997).\n\nImplemented a simple buffering (I think it couldn't be simpler, but if you want me to change it I'll do whatever you want) [get_rows](https://github.com/alefnula/pandas/blob/4c4edd047f2f7bf77f03d0db88b3a6d4518fbf0a/pandas/io/parsers.py#L1977) and [next](https://github.com/alefnula/pandas/blob/4c4edd047f2f7bf77f03d0db88b3a6d4518fbf0a/pandas/io/parsers.py#L2010). And also the tests are [here](https://github.com/alefnula/pandas/blob/iss4488/pandas/io/tests/test_parsers.py#L2134). Some of the data set's are pretty messy but it can detect the columns correctly: [example](https://github.com/alefnula/pandas/blob/iss4488/pandas/io/tests/data/test5.fwf).\n\nIf you have more ideas about test files please post them. Also if the naming conventions are OK I'll change the documentation. If they are not, just tell me what to change and I'll do it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24958221",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24958221",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24958221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU4MjIx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T21:51:22Z",
    "updated_at": "2013-09-23T21:51:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to check: would it still work if you had 1000 columns? 10K? or even\njust a few columns, but with very long names.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24958428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4488#issuecomment-24958428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4488",
    "id": 24958428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU4NDI4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T21:54:02Z",
    "updated_at": "2013-09-23T21:54:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alefnula, can you open a PR to discuss? Easier to see diffs there. (and you can always change it up by pushing / editing commits. \n"
  }
]
