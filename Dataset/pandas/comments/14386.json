[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252633493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252633493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252633493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjYzMzQ5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T14:15:15Z",
    "updated_at": "2016-10-10T14:15:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #9146, #9166 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252634028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252634028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252634028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjYzNDAyOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T14:16:58Z",
    "updated_at": "2016-10-10T14:16:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll dig into the schema later, but just to make sure: the basic idea is for pandas to publish multiple outputs (`application/html`, `application/json`) wherever we publish just the HTML right now?\nMore concretely, what changes do we need to make to Series / DataFrames / Indexes to support this? IIRC there isn't a `_repr_json_` equivalent of `_repr_html_`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252634891",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252634891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252634891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjYzNDg5MQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T14:19:55Z",
    "updated_at": "2016-10-10T14:19:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting - I just noticed they wrote a wrapper for pandas: https://github.com/frictionlessdata/jsontableschema-pandas-py\n\nOn the JupyterLab, notebook, and nteract side, we'd have https://github.com/frictionlessdata/jsontableschema-js to lean on.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252635459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252635459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252635459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjYzNTQ1OQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T14:22:19Z",
    "updated_at": "2016-10-10T14:22:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> the basic idea is for pandas to publish multiple outputs (application/html, application/json) wherever we publish just the HTML right now?\n\nYes. The media type (mime type in Jupyter parlance) would be something like `application/vnd.table-schema.v1+json`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252640990",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252640990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252640990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjY0MDk5MA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T14:39:59Z",
    "updated_at": "2016-10-19T17:14:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "While there's not a repr for arbitrary media types in IPython (we can evolve that as a result of this discussion), there is a way to display raw messages with `IPython.display.display`:\n\n``` python\nIPython.display.display({\n    'application/json': releases\n}, raw=True)\n```\n\nWhich shows up in nteract as:\n\n![screen shot 2016-10-10 at 10 39 25 am](https://cloud.githubusercontent.com/assets/836375/19239851/e3187768-8ed5-11e6-8486-8e516efab663.png)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252651680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252651680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252651680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjY1MTY4MA==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T15:10:02Z",
    "updated_at": "2016-10-10T15:14:49Z",
    "author_association": "NONE",
    "body": "Hi. I'm one of the authors of JSON Table Schema, and also part of the team working on [reference implementations](https://github.com/frictionlessdata/jsontableschema-py) for this and the related [family of specs](http://specs.frictionlessdata.io). The [JavaScript implementation](https://github.com/frictionlessdata/jsontableschema-js) is just a little behind the Python one, and probably also of relevance here.\n\nHappy to help.\n\n_edit_: added link to the JavaScript implementation, in addition to the Python one previously linked.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252652096",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252652096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252652096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjY1MjA5Ng==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T15:11:35Z",
    "updated_at": "2016-10-10T15:11:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "By the way, on the nteract and jupyterlab side, it's pretty easy for us to iterate with new renderers and media types.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252746714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252746714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252746714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc0NjcxNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T21:07:59Z",
    "updated_at": "2016-10-10T21:07:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't really see a reason not to add this in pandas; The additional code shouldn't be too much of a burden.\n\nWould clients expect to receive the entire DataFrame, and do their own truncation? I worry a bit about the overhead of publishing huge DataFrames. I would say follow the options in `pd.options.display.max_rows`, etc. and only ship over some of the DataFrame (but need some way of saying that there's more...)\n\nA few things directly related to [the spec](http://specs.frictionlessdata.io/json-table-schema/) that pandas might have trouble with:\n- field descriptors: in principal `_metadata` should carry this, but IIRC we don't have a good story on propagating that though operations, so it's liable to be dropped\n- field types: shouldn't have any problems here\n- primary key: Typically this would be the (multi)Index, but we don't require uniqueness on that.\n- field names: Somewhat rare, but we can have MultiIndexes in the columns, so we could have \"multiple rows\" of field names; These can be collapsed down to tuples.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252832026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-252832026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 252832026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjgzMjAyNg==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-11T07:15:52Z",
    "updated_at": "2016-10-11T07:15:52Z",
    "author_association": "NONE",
    "body": "We are very happy to make any changes needed to https://github.com/frictionlessdata/jsontableschema-pandas-py in order to support this smoothly, and especially in reference to things like streaming data out of a DataFrame, or limiting the rows from a frame for preview, and so forth.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266580224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-266580224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 266580224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU4MDIyNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T22:56:27Z",
    "updated_at": "2016-12-12T22:56:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Started on this here: https://github.com/pandas-dev/pandas/compare/master...TomAugspurger:json-schema very early, one test, no docs :D\r\n\r\nSome design things I'd like to nail down before submitting a PR:\r\n\r\n- The actual message published to the jupyter channel will be\r\n```python\r\n{'schema': schema, 'data': data}\r\n```\r\n\r\nwhere schema is a valid JSON table schema and data is like `pd.DataFrame.to_json(orient='records')`\r\n```\r\n{\r\n  \"data\": \"[{\\\"a\\\":3,\\\"b\\\":3},{\\\"a\\\":0,\\\"b\\\":2},{\\\"a\\\":1,\\\"b\\\":1},{\\\"a\\\":3,\\\"b\\\":0},{\\\"a\\\":3,\\\"b\\\":1}]\",\r\n  \"schema\": {\r\n    \"fields\": [\r\n      {\r\n        \"type\": \"integer\",\r\n        \"name\": \"a\"\r\n      },\r\n      {\r\n        \"type\": \"integer\",\r\n        \"name\": \"b\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nDoes that sound right?\r\n- Truncation: I think we'll follow `pd.options.display.max_rows` and only send that many rows; Will need to think about if people have set their `display.large_repr` to be info...\r\n- Name: I've called it `_repr_json_` for now, thoughts on what that should be? IIUC this won't be special like `_repr_html_` is and called automatically. We'll have to publish this ourselves, and we can choose the name?\r\n- @jreback all this stuff I'm doing [here](https://github.com/pandas-dev/pandas/compare/master...TomAugspurger:json-schema#diff-03b380f521c43cf003207b0711bac67fR137), do we already have a simpler way of going from type to a \"base\" type. I don't want to have to worry about int16 vs int32, etc.\r\n- Speaking of types, pandas doesn't have a string type, so right now we send those over as \"any\". :( Do we want to do a bit of inference to maybe send those as strings, or leave that to the client? pandas 2 will have a string type, but that'll be a bit.\r\n- Indexes: When should we send them?\r\n    1. Always\r\n    2. When any (or all) of the levels are named"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266588935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-266588935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 266588935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU4ODkzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T23:37:51Z",
    "updated_at": "2016-12-12T23:37:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\n\r\ndon't put this in core/generic.py (the actual table creation), instead pandas.formats.json might be appropriate (but make it clear this is an export only format).\r\n\r\nso we already have all of the accessors, you can simply use your translation function.\r\n```\r\nIn [5]: from pandas.types.common import is_integer_dtype, is_timedelta64_dtype, is_string_dtype\r\n\r\nIn [6]: is_integer_dtype(np.float)\r\nOut[6]: False\r\n\r\nIn [7]: is_integer_dtype(np.integer)\r\nOut[7]: True\r\n\r\nIn [8]: is_integer_dtype(np.dtype('m8[ns]'))\r\nOut[8]: False\r\n\r\nIn [9]: is_timedelta64_dtype(np.dtype('m8[ns]'))\r\nOut[9]: True\r\n\r\nIn [10]: is_string_dtype(np.dtype('O'))\r\nOut[10]: True\r\n\r\nIn [11]: is_string_dtype(pandas.types.dtypes.CategoricalDtype())\r\nOut[11]: True\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266608994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-266608994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 266608994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjYwODk5NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T01:33:56Z",
    "updated_at": "2016-12-13T01:34:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does the `data` field have to be double encoded? We can handle raw JSON across the jupyter messaging spec.\r\n\r\n> Name: I've called it _repr_json_ for now, thoughts on what that should be? IIUC this won't be special like _repr_html_ is and called automatically. We'll have to publish this ourselves, and we can choose the name?\r\n\r\n`_repr_json_` will tell the frontend to render `application/json` which in nteract and in the soon to be released notebook provides a tree view of a JSON structure:\r\n\r\n![screen shot 2016-12-12 at 5 31 09 pm](https://cloud.githubusercontent.com/assets/836375/21123960/d3bc05e0-c090-11e6-952b-16820c5b7667.png)\r\n\r\nI'd like to see this table get published with a custom mimetype. To demonstrate, I took the liberty of taking parts of your function, a fake mimetype (not sure what the official is), and creating a little React component (style would get better after):\r\n\r\n![screen shot 2016-12-12 at 5 29 22 pm](https://cloud.githubusercontent.com/assets/836375/21123984/f7f618d8-c090-11e6-9295-8deb1c0e1919.png)\r\n\r\nThe mimetype I used is `application/vnd.tableschema.v1+json` and I published it via `IPython.display` rather than a repr function since we don't have a precedent for this table type yet.\r\n\r\n/cc @minrk @takluyver "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266655647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-266655647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 266655647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjY1NTY0Nw==",
    "user": {
      "login": "pwalsh",
      "id": 791678,
      "node_id": "MDQ6VXNlcjc5MTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/791678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwalsh",
      "html_url": "https://github.com/pwalsh",
      "followers_url": "https://api.github.com/users/pwalsh/followers",
      "following_url": "https://api.github.com/users/pwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/pwalsh/orgs",
      "repos_url": "https://api.github.com/users/pwalsh/repos",
      "events_url": "https://api.github.com/users/pwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T06:10:48Z",
    "updated_at": "2016-12-13T06:10:48Z",
    "author_association": "NONE",
    "body": "Hi @rgbkrk \r\n\r\nAddressing some points above and raised in our [Gitter channel](https://gitter.im/frictionlessdata/chat)\r\n\r\n(I'm one of the authors of JSON Table Schema and related specs)\r\n\r\n1. Mime types: [See my notes in here](https://github.com/frictionlessdata/specs/issues/333#issuecomment-266272063). I'm working on this right now (meaning, making the submission for the new mime types today). We'll be submitting `application/tableschema+json`\r\n2. [jsontableschema-js](https://github.com/frictionlessdata/jsontableschema-js) is npm installable, has feature parity with [jsontableschema-py](https://github.com/frictionlessdata/jsontableschema-py)\r\n3. Just FYI, I'm currently on a sprint to close a range of issues and publish v1 of all our specs before end of year, and IETF RFC submissions follow immediately. There are other aspects there that are relevant here (e.g.: \"Tabular Data Resource\" specification), but I can go over them with you (if you like) after we release v1"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266719459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-266719459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 266719459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcxOTQ1OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T11:52:20Z",
    "updated_at": "2016-12-13T11:52:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I've called it `_repr_json_` for now, thoughts on what that should be? IIUC this won't be special like `_repr_html_` is and called automatically.\r\n\r\nWe do actually look for `_repr_json_`:\r\n\r\nhttps://github.com/ipython/ipython/blob/5.1.0/IPython/core/formatters.py#L782\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267040705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-267040705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 267040705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzA0MDcwNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-14T14:01:27Z",
    "updated_at": "2016-12-14T14:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "We currently only support single method name:mime-type mapping. This doesn't extend to custom mime-types, though the protocol allows it. I've been planning to add a `_repr_mime_`, where the method returns the mime-keyed dict(s), but haven't gotten to it. I thought I opened an issue for it years ago, but maybe only in my brain. I just opened https://github.com/ipython/ipython/issues/10090 for this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/267120091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-267120091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 267120091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzEyMDA5MQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-14T18:47:37Z",
    "updated_at": "2016-12-14T18:47:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did open a similarly worded issue in https://github.com/ipython/ipython/issues/10058. :wink: Either way, I would love to have the ability to return mime bundles for a repr."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277808617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-277808617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 277808617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgwODYxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T20:49:04Z",
    "updated_at": "2017-02-06T20:49:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I think this will close #9166 if you make ``build_table_schema`` accessible, e.g.\r\n\r\n``pandas.io.json.table.build_schema`` , certainly not publicly broadcast, but accessible"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294303104",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14386#issuecomment-294303104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14386",
    "id": 294303104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMwMzEwNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T16:20:30Z",
    "updated_at": "2017-04-15T16:20:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed by #14904"
  }
]
