[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11083034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2437#issuecomment-11083034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2437",
    "id": 11083034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDgzMDM0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T12:19:22Z",
    "updated_at": "2012-12-06T12:37:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now I think about it: it's not clear how to pick a Timestamp from a date unless they are ordered! Which explains this behaviour...\n\nIn the ordered case the first result which satisfies the partial date is selected.\n\nIn the unordered case returning sometimes returning a series would be confusing, and picking a \"closest\" wouldn't really make sense.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11177913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2437#issuecomment-11177913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2437",
    "id": 11177913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc3OTEz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T23:33:09Z",
    "updated_at": "2012-12-09T23:33:09Z",
    "author_association": "NONE",
    "body": "I respectfully disagree with aspects of this behavior as it stands.  For example: whenever a user specifies a range of dates (in one of the several ways possible to do this), they can expect (quite reasonably) to receive a list of entries from an ordered time series.  What's wrong with implementing this same behavior on an unordered series?  Right now, for an unordered series, you get an error if you try to specify a date range.  This can be fixed without impacting the question of which entry should be \"first\" .\n\nThis may not fly with you guys, but I'd even take it one step further.  If a user specifies a single date as an index, they should receive _all_ entries with the matching date.  It's better behavior, because its consistent: if you ask for a month, you get the whole month; a year, you get the whole year; what's so special about a day that the behavior should suddenly change?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11178173",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2437#issuecomment-11178173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2437",
    "id": 11178173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc4MTcz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T23:57:43Z",
    "updated_at": "2012-12-09T23:57:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrdly that's a convincing argument (at least, you've convinced me).\n\nIn fact, this also seems inconsistent when you compare to the behaviour of Series:\n\n```\nIn [1]: s = Series(np.arange(5), index=[1, 1, 1, 2, 3])\n\nIn [2]: s\nOut[2]: \n1    0\n1    1\n1    2\n2    3\n3    4\n\nIn [3]: s.ix[1] # same as s[1]\nOut[3]: \n1    0\n1    1\n1    2\n\nIn [4]: s.ix[2]\nOut[4]: 3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12462101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2437#issuecomment-12462101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2437",
    "id": 12462101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDYyMTAx",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-19T22:10:48Z",
    "updated_at": "2013-01-19T22:10:48Z",
    "author_association": "MEMBER",
    "body": "I guess the error message should read \"not yet supported\". Would be nice to fix this in the future\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15276124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2437#issuecomment-15276124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2437",
    "id": 15276124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc2MTI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-22T01:13:29Z",
    "updated_at": "2013-03-22T01:59:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd this is all fixed up, note that the stamps will be returned in the same order as the index of the series (which makes sense)\n"
  }
]
