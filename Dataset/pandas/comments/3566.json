[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17733831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17733831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17733831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMzODMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T17:36:41Z",
    "updated_at": "2013-05-10T17:36:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is by definition correct, dtypes are maintained only in the columns\n\nthe dtype is the lowest common denomincator of the row dtypes, which in this case is float\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17742419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17742419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17742419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQyNDE5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T20:21:59Z",
    "updated_at": "2013-05-10T20:23:41Z",
    "author_association": "MEMBER",
    "body": "additionally, it's probably very inefficient to keep track of the dtype of individual elements with the way Python's type system works, because at that point you have an object array anyway. you could just transpose the array if your use case allows that. that's not really solution, more of a workaround\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17742981",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17742981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17742981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQyOTgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T20:33:52Z",
    "updated_at": "2013-05-10T20:33:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud actually the issue is that the cross section happens to be `Series([1,1.0]` which is a `float64`\n\nthere _are_ methods that used to try to convert this (to `int64`, but in its very hard to in general figure out when to do this without a reference (e.g. in a groupby its somewhat easier, so we do it), but here its actually undeterministic, so it stays\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17743152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17743152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17743152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQzMTUy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T20:37:26Z",
    "updated_at": "2013-05-10T20:44:09Z",
    "author_association": "MEMBER",
    "body": "@jreback  right, df rows are series. i know, i was just trying to think (aloud) of how you would even do this without just having a single element keep track of its own dtype (I can imagine a class called `PandasElement` or something like that) and the obj arr seemed the easiest (or just the first thing that came into my head) i see how gb would be easier tho. wut do u mean by undeterministic here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17743498",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17743498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17743498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQzNDk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T20:44:43Z",
    "updated_at": "2013-05-10T20:44:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud what I mean is that w/o a reference, I don't want to convert `Series([1,1.0]]` to `intt64`. It _is_ `float64`, the fact that it is equivalent to a `int64` is True. (I don't really mean _undeterministic_, was just a good word at the time :)\n\nAnd converting like this (w/o user input say or a refernce frame) means a lot of the time we have to convert back when `nan` are introduced, so bottom line is, most operations try to keep the same dtype (and dtype flavor, e.g. `float32` if at all possible). It _is_ is a bug if its not kept _in most cases_ (but not this one!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17743709",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17743709",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17743709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQzNzA5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T20:48:35Z",
    "updated_at": "2013-05-10T20:48:48Z",
    "author_association": "MEMBER",
    "body": "@jreback ah ok, `s.dtype.type is np.int64 and s.dtype.type is np.float64` is true (not in practice obvs), so u must make a choice, i see now y u said non-deterministic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17746030",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17746030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17746030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQ2MDMw",
    "user": {
      "login": "tebeka",
      "id": 87697,
      "node_id": "MDQ6VXNlcjg3Njk3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/87697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tebeka",
      "html_url": "https://github.com/tebeka",
      "followers_url": "https://api.github.com/users/tebeka/followers",
      "following_url": "https://api.github.com/users/tebeka/following{/other_user}",
      "gists_url": "https://api.github.com/users/tebeka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tebeka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tebeka/subscriptions",
      "organizations_url": "https://api.github.com/users/tebeka/orgs",
      "repos_url": "https://api.github.com/users/tebeka/repos",
      "events_url": "https://api.github.com/users/tebeka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tebeka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T21:38:11Z",
    "updated_at": "2013-05-10T21:38:11Z",
    "author_association": "NONE",
    "body": "@jreback I know the 1 == 1.0. However I was populating a database with a TEXT column. And instead of '1' I got '1.0' in there.\n\nI have no problem that this is the correct behavior - just document it. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17747859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17747859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17747859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzQ3ODU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-10T22:26:38Z",
    "updated_at": "2013-05-10T22:26:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tebeka fair point\n\n1) would you like to do a PR to put your example in the doc string, and add a mention in : http://pandas.pydata.org/pandas-docs/dev/basics.html#iterrows (I would use the note format, search for '::note'), sort of a 'warning'\n\n2) If you are going to write to a text column, I would `s.apply(lambda x: \"%.2f\")` to guarantee formatting....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17767134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17767134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17767134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzY3MTM0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-11T20:46:21Z",
    "updated_at": "2013-05-11T20:46:21Z",
    "author_association": "MEMBER",
    "body": "this can be closed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17767160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3566#issuecomment-17767160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3566",
    "id": 17767160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzY3MTYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-11T20:47:32Z",
    "updated_at": "2013-05-11T20:47:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #3569\n"
  }
]
