[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191478857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191478857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191478857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTQ3ODg1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T22:50:44Z",
    "updated_at": "2016-03-03T02:01:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "`(s-s.mean())/s.std()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191484495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191484495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191484495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTQ4NDQ5NQ==",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T23:06:29Z",
    "updated_at": "2016-03-02T23:06:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure why I go to the trouble to write out a useful issue report if you're not going to actually read it:\n\n![image](https://cloud.githubusercontent.com/assets/315810/13478912/55796256-e088-11e5-9219-db3c938668a1.png)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191491402",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191491402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191491402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTQ5MTQwMg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T23:28:04Z",
    "updated_at": "2016-03-02T23:28:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mwaskom well your code is very different from Jeff's.  Please don't dismiss it. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191492072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191492072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191492072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTQ5MjA3Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T23:30:20Z",
    "updated_at": "2016-03-02T23:35:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think Michael's point was that a person from a stats background might initially just translate the formula to a function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191494986",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191494986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191494986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTQ5NDk4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T23:41:04Z",
    "updated_at": "2016-03-02T23:41:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been against adding a `normalize` method since that word is overloaded, but `zscore` is relatively clear, if you're familiar with stats.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191502464",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191502464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191502464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUwMjQ2NA==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T00:07:16Z",
    "updated_at": "2016-03-03T00:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will also point out that the `ddof` default is different in `scipy`'s `zscore` than in `pandas`'s `std`, just in case you (@mwaskom)  didn't know. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191535489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191535489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191535489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUzNTQ4OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T01:51:26Z",
    "updated_at": "2016-03-03T01:51:26Z",
    "author_association": "MEMBER",
    "body": "Isn't `Series.apply` supposed to first try if it can pass the full series to the function, before it does it elementwise (what is happening here) ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191536768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191536768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191536768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUzNjc2OA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T01:57:33Z",
    "updated_at": "2016-03-03T01:58:03Z",
    "author_association": "MEMBER",
    "body": "@mwaskom you want to use `.pipe` instead of `.apply`:\n\n```\nIn [24]: s.pipe(lambda x: (x - x.mean()) / x.std())\nOut[24]:\n0   -0.800491\n1   -1.342080\n2    0.504102\n3   -0.844059\n4    0.238954\n5   -1.009755\n6   -0.007397\n7    1.707074\n8    0.333148\n9    1.220504\ndtype: float64\n```\n\nSomewhat confusingly, `.apply` (on Series and DataFrame) is only for operations that aggregate out a dimension. I don't know why it gives the all NA series in this case instead of erroring, though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191537490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191537490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191537490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUzNzQ5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:00:39Z",
    "updated_at": "2016-03-03T02:00:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I posted the post idiomatic and correct way to to normalization.\n\n```\nIn [1]: s = pd.Series(np.random.rand(10))\n\nIn [4]: (s-s.mean())/s.std()\nOut[4]: \n0   -0.237282\n1    1.256156\n2    1.268999\n3   -0.230126\n4   -0.944522\n5   -1.463070\n6   -0.822994\n7   -0.540303\n8    1.197952\n9    0.515190\ndtype: float64\n\n# This is why you get all nans\nIn [6]: s[0]\nOut[6]: 0.43126132923383709\n\nIn [7]: v = s[0]\n\nIn [8]: (v-v.mean())/v.std()\nOut[8]: nan\n```\n\n`.apply` is the most mis(abused) function. It doesn't need anything. Further using `.pipe` here is silly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191543934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191543934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191543934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0MzkzNA==",
    "user": {
      "login": "mwaskom",
      "id": 315810,
      "node_id": "MDQ6VXNlcjMxNTgxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwaskom",
      "html_url": "https://github.com/mwaskom",
      "followers_url": "https://api.github.com/users/mwaskom/followers",
      "following_url": "https://api.github.com/users/mwaskom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwaskom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwaskom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwaskom/subscriptions",
      "organizations_url": "https://api.github.com/users/mwaskom/orgs",
      "repos_url": "https://api.github.com/users/mwaskom/repos",
      "events_url": "https://api.github.com/users/mwaskom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwaskom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:14:50Z",
    "updated_at": "2016-03-03T02:14:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jreback, I'd never seen the formula for a z-score before, and I had no idea that you could do basic mathematical operations Series objects, so that is very enlightening.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191544082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191544082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191544082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0NDA4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:15:01Z",
    "updated_at": "2016-03-03T02:15:01Z",
    "author_association": "MEMBER",
    "body": "> Somewhat confusingly, .apply (on Series and DataFrame) is only for operations that aggregate out a dimension.\n\n@shoyer What do you mean with that? As it works as expected for a Dataframe column (so without reducing a dimension):\n\n```\nIn [28]: s.to_frame().apply(lambda x: (x - x.mean()) / x.std())\nOut[28]:\n          0\n0 -1.047008\n1  0.969972\n2  0.867152\n3  0.176468\n4  1.324789\n5  0.659774\n6 -0.297906\n7 -1.647645\n8  0.080457\n9 -1.086053\n```\n\nI am always confused with `DataFrame.apply`, which has its good use (in contrast with `Series.apply`). But I find it quite confusing that `Series.apply` is not doing the same as `DataFrame.apply` does for each column/row. \nIn any case, the docstring of `Series.apply` is also not very illuminating\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191545774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191545774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191545774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0NTc3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:18:57Z",
    "updated_at": "2016-03-03T02:18:57Z",
    "author_association": "MEMBER",
    "body": "Some further thoughts: say you want to use `stats.zscore`, `pipe` is also not an ideal solution:\n\n```\nIn [38]: s.pipe(stats.zscore, ddof=1)\nOut[38]:\narray([-1.04700754,  0.96997194,  0.86715166,  0.17646793,  1.324789  ,\n        0.65977436, -0.29790601, -1.64764543,  0.08045739, -1.0860533 ])\n```\n\nWhile DataFrame.apply does what want:\n\n```\nIn [36]: s.to_frame().apply(stats.zscore, ddof=1)\nOut[36]:\n          0\n0 -1.047008\n1  0.969972\n2  0.867152\n3  0.176468\n4  1.324789\n5  0.659774\n6 -0.297906\n7 -1.647645\n8  0.080457\n9 -1.086053\n```\n\nIt would be nice if there is a way to perform such a function on a Series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191546372",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191546372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191546372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0NjM3Mg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:21:00Z",
    "updated_at": "2016-03-03T02:29:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "the function is applied to each (N-1)-D element of the N-D container (like built-in `map`).  `to_frame()` embeds the 1-D `Series` in a 2-D `DataFrame`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191547701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12515#issuecomment-191547701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12515",
    "id": 191547701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0NzcwMQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:30:14Z",
    "updated_at": "2016-03-03T02:30:14Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche OK, apparently I was confused here about how `apply` works. I guess it's more flexible than only doing aggregations.\n\nAnd just to clarify for the record, the weirdness with NAs arises because `s[0]` returns a `numpy.float64` object, which defines `.mean()` and `.std()` methods -- so we end up dividing by 0.\n"
  }
]
