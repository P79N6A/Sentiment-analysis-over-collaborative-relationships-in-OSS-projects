[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2725304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/297#issuecomment-2725304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/297",
    "id": 2725304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjUzMDQ=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-13T23:47:23Z",
    "updated_at": "2011-11-13T23:47:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "len(np.unique(self.dropna())) ?\n\nwith a Cython distinct_count_level_1d function?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/2725440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/297#issuecomment-2725440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/297",
    "id": 2725440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjU0NDA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T00:14:06Z",
    "updated_at": "2011-11-14T00:14:06Z",
    "author_association": "MEMBER",
    "body": "Maybe this should just be a groupby instance methods-- like Series now has the `value_counts` method so you can do:\n\n```\nlen(s.value_counts())\n```\n\nbut in a groupby scenario, you could do:\n\n```\ns.groupby(grouper).agg(lambda x: len(x.value_counts()))\n```\n\nbut that's a bit verbose. Maybe like\n\n`s.groupby(grouper).nunique()`\n"
  }
]
