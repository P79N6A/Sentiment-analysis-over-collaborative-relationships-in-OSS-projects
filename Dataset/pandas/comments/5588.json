[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29275964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29275964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29275964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc1OTY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T08:53:17Z",
    "updated_at": "2013-11-26T11:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @takluyver\n\n@michaelaye\n\ncan u post\n\n%prun str(df)\n\npython 2.7 ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29277497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29277497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29277497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc3NDk3",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T09:19:34Z",
    "updated_at": "2013-11-26T09:19:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, 2.7.3 (Enthought Canopy, all updates)\n\nHere you go:\n\n```\n183499 function calls (183497 primitive calls) in 2.060 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       33    1.951    0.059    1.951    0.059 {pandas.lib.infer_dtype}\n    22075    0.026    0.000    0.035    0.000 StringIO.py:208(write)\n     2460    0.013    0.000    0.022    0.000 format.py:1792(just)\n    27510    0.005    0.000    0.006    0.000 {isinstance}\n     6160    0.005    0.000    0.005    0.000 {_codecs.utf_8_decode}\n        1    0.005    0.005    0.040    0.040 StringIO.py:241(writelines)\n     6160    0.004    0.000    0.016    0.000 format.py:226(_strlen)\n     4095    0.003    0.000    0.008    0.000 {method 'decode' of 'str' objects}\n      134    0.003    0.000    0.003    0.000 {method 'reduce' of 'numpy.ufunc' objects}\n    22076    0.003    0.000    0.003    0.000 StringIO.py:38(_complain_ifclosed)\n     6160    0.002    0.000    0.008    0.000 utf_8.py:15(decode)\n31379/31377    0.002    0.000    0.002    0.000 {len}\n       41    0.002    0.000    0.033    0.001 format.py:1772(_make_fixed_width)\n    22977    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}\n     2065    0.001    0.000    0.004    0.000 {method 'decode' of 'unicode' objects}\n      429    0.001    0.000    0.002    0.000 common.py:2509(as_escaped_unicode)\n       45    0.001    0.000    0.002    0.000 format.py:1815(_cond)\n     2420    0.001    0.000    0.002    0.000 format.py:1790(<lambda>)\n      429    0.001    0.000    0.004    0.000 common.py:2483(pprint_thing)\n        7    0.001    0.000    0.007    0.001 format.py:1617(_format_strings)\n        1    0.001    0.001    2.017    2.017 format.py:300(_to_str_columns)\n     1756    0.001    0.000    0.001    0.000 numeric.py:1810(isscalar)\n      120    0.001    0.000    0.001    0.000 format.py:1744(_format_datetime64)\n      420    0.001    0.000    0.005    0.000 format.py:1629(_format)\n        6    0.001    0.000    0.002    0.000 common.py:1723(adjoin)\n      660    0.001    0.000    0.003    0.000 format.py:1670(_val)\n      378    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}\n       61    0.001    0.000    1.953    0.032 internals.py:1851(make_block)\n     1602    0.001    0.000    0.001    0.000 {method 'rjust' of 'str' objects}\n       11    0.001    0.000    0.002    0.000 format.py:1809(_trim_zeros)\n      361    0.001    0.000    0.001    0.000 config.py:542(_get_deprecated_option)\n       61    0.001    0.000    1.955    0.032 series.py:124(__init__)\n      707    0.001    0.000    0.003    0.000 common.py:256(notnull)\n      868    0.001    0.000    0.002    0.000 common.py:126(_isnull_new)\n       11    0.001    0.000    0.006    0.001 format.py:1669(_format_with)\n     2915    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}\n        7    0.000    0.000    0.001    0.000 {pandas.lib.map_infer}\n       61    0.000    0.000    1.954    0.032 internals.py:3399(__init__)\n      430    0.000    0.000    0.001    0.000 common.py:2046(_is_sequence)\n      180    0.000    0.000    0.002    0.000 index.py:615(__getitem__)\n     1287    0.000    0.000    0.000    0.000 {method 'replace' of 'unicode' objects}\n       11    0.000    0.000    0.015    0.001 format.py:1688(get_result)\n      182    0.000    0.000    0.002    0.000 config.py:77(_get_single_key)\n      868    0.000    0.000    0.001    0.000 {pandas.lib.isscalar}\n      181    0.000    0.000    0.001    0.000 index.py:186(view)\n       40    0.000    0.000    1.957    0.049 frame.py:1538(_ixs)\n      437    0.000    0.000    0.000    0.000 {hasattr}\n      838    0.000    0.000    0.000    0.000 {method 'rjust' of 'unicode' objects}\n       20    0.000    0.000    0.004    0.000 series.py:475(_slice)\n       22    0.000    0.000    0.001    0.000 index.py:98(__new__)\n        1    0.000    0.000    0.002    0.002 format.py:380(_join_multiline)\n      108    0.000    0.000    0.001    0.000 {max}\n      409    0.000    0.000    0.004    0.000 format.py:1627(<lambda>)\n      180    0.000    0.000    0.000    0.000 config.py:527(_get_root)\n      244    0.000    0.000    0.000    0.000 {function view at 0x117f07c08}\n       20    0.000    0.000    1.016    0.051 format.py:477(_format_col)\n      180    0.000    0.000    0.002    0.000 config.py:95(_get_option)\n      170    0.000    0.000    0.000    0.000 index.py:604(__contains__)\n       61    0.000    0.000    0.002    0.000 fromnumeric.py:2048(amax)\n     1541    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}\n      868    0.000    0.000    0.002    0.000 common.py:109(isnull)\n       62    0.000    0.000    0.000    0.000 series.py:252(_set_axis)\n       21    0.000    0.000    0.034    0.002 format.py:1571(format_array)\n     1280    0.000    0.000    0.000    0.000 {pandas.lib.checknull}\n       82    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}\n       22    0.000    0.000    0.000    0.000 internals.py:1293(__init__)\n      272    0.000    0.000    0.000    0.000 {getattr}\n      179    0.000    0.000    0.001    0.000 config.py:583(_warn_if_deprecated)\n       41    0.000    0.000    0.001    0.000 format.py:237(_get_formatter)\n      122    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)\n       40    0.000    0.000    0.002    0.000 internals.py:2771(iget)\n       22    0.000    0.000    0.001    0.000 fromnumeric.py:2249(prod)\n       61    0.000    0.000    0.000    0.000 generic.py:82(__init__)\n      420    0.000    0.000    0.000    0.000 common.py:1941(is_float)\n       61    0.000    0.000    0.000    0.000 internals.py:54(__init__)\n       40    0.000    0.000    0.001    0.000 internals.py:3051(_find_block)\n      180    0.000    0.000    0.002    0.000 config.py:241(__call__)\n       40    0.000    0.000    0.000    0.000 internals.py:271(get)\n      182    0.000    0.000    0.000    0.000 config.py:570(_translate_key)\n      181    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}\n      671    0.000    0.000    0.000    0.000 format.py:1696(<genexpr>)\n      401    0.000    0.000    0.000    0.000 {issubclass}\n        2    0.000    0.000    0.003    0.001 format.py:1734(get_result)\n        1    0.000    0.000    0.979    0.979 frame.py:3415(_apply_standard)\n      182    0.000    0.000    0.000    0.000 config.py:509(_select_options)\n       40    0.000    0.000    0.000    0.000 {method 'get_loc' of 'pandas.index.IndexEngine' objects}\n      122    0.000    0.000    0.001    0.000 common.py:1937(is_integer)\n      126    0.000    0.000    0.000    0.000 _weakrefset.py:68(__contains__)\n       21    0.000    0.000    0.000    0.000 index.py:1659(__new__)\n       40    0.000    0.000    1.954    0.049 series.py:227(from_array)\n        8    0.000    0.000    0.000    0.000 common.py:197(_isnull_ndarraylike)\n      376    0.000    0.000    0.000    0.000 common.py:1746(_join_unicode)\n       40    0.000    0.000    0.001    0.000 internals.py:2734(get)\n       82    0.000    0.000    0.002    0.000 _methods.py:15(_amax)\n       20    0.000    0.000    0.001    0.000 index.py:472(_convert_slice_indexer)\n       21    0.000    0.000    0.001    0.000 series.py:2476(_sanitize_array)\n       21    0.000    0.000    0.000    0.000 common.py:1542(_possibly_castable)\n      429    0.000    0.000    0.000    0.000 {method 'ljust' of 'unicode' objects}\n       42    0.000    0.000    0.001    0.000 format.py:220(_strlen_func)\n       90    0.000    0.000    0.000    0.000 internals.py:157(__contains__)\n        1    0.000    0.000    0.980    0.980 format.py:500(_get_formatted_column_labels)\n      433    0.000    0.000    0.000    0.000 {iter}\n        8    0.000    0.000    0.000    0.000 {pandas.lib.isnullobj}\n       40    0.000    0.000    0.000    0.000 index.py:1009(get_loc)\n       76    0.000    0.000    0.000    0.000 common.py:56(_check)\n        1    0.000    0.000    0.000    0.000 {pandas.lib.fast_multiget}\n       10    0.000    0.000    0.000    0.000 common.py:1559(_possibly_cast_to_datetime)\n       21    0.000    0.000    0.000    0.000 series.py:2489(_try_cast)\n       40    0.000    0.000    1.957    0.049 frame.py:1535(icol)\n       30    0.000    0.000    0.000    0.000 _methods.py:31(_any)\n       62    0.000    0.000    0.000    0.000 series.py:274(_set_subtyp)\n       20    0.000    0.000    0.000    0.000 generic.py:1552(__finalize__)\n       40    0.000    0.000    0.000    0.000 internals.py:3057(_check_have)\n       61    0.000    0.000    0.000    0.000 internals.py:119(set_ref_locs)\n       60    0.000    0.000    0.000    0.000 format.py:1725(<lambda>)\n      161    0.000    0.000    0.000    0.000 internals.py:2140(_get_items)\n        2    0.000    0.000    0.002    0.001 index.py:705(_format_with_header)\n        1    0.000    0.000    0.000    0.000 {pandas.lib.maybe_convert_objects}\n        1    0.000    0.000    0.001    0.001 format.py:1721(get_result)\n        1    0.000    0.000    0.000    0.000 format.py:2049(_binify)\n       22    0.000    0.000    0.001    0.000 _methods.py:27(_prod)\n        7    0.000    0.000    0.014    0.002 format.py:1613(get_result)\n        1    0.000    0.000    0.000    0.000 StringIO.py:258(getvalue)\n       30    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}\n       41    0.000    0.000    0.000    0.000 internals.py:3520(values)\n       20    0.000    0.000    0.000    0.000 index.py:449(_validate_slicer)\n       40    0.000    0.000    0.000    0.000 index.py:413(is_integer)\n        1    0.000    0.000    2.059    2.059 frame.py:1252(to_string)\n       25    0.000    0.000    0.000    0.000 index.py:220(__array_finalize__)\n        2    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)\n       21    0.000    0.000    0.000    0.000 format.py:1603(__init__)\n       60    0.000    0.000    0.000    0.000 index.py:476(validate)\n       20    0.000    0.000    0.004    0.000 series.py:692(__getslice__)\n        1    0.000    0.000    0.000    0.000 index.py:3504(_trim_front)\n       60    0.000    0.000    0.000    0.000 format.py:1788(<lambda>)\n       25    0.000    0.000    0.000    0.000 index.py:182(_reset_identity)\n       30    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}\n       21    0.000    0.000    0.000    0.000 common.py:2012(is_float_dtype)\n       40    0.000    0.000    0.000    0.000 common.py:1492(_values_from_object)\n       20    0.000    0.000    0.000    0.000 frame.py:1435(<lambda>)\n       21    0.000    0.000    0.000    0.000 series.py:1010(values)\n        1    0.000    0.000    0.001    0.001 format.py:547(_get_formatted_index)\n       21    0.000    0.000    0.000    0.000 series.py:300(dtype)\n       20    0.000    0.000    0.000    0.000 common.py:1636(_is_bool_indexer)\n        1    0.000    0.000    2.059    2.059 format.py:353(to_string)\n       21    0.000    0.000    0.000    0.000 internals.py:3512(dtype)\n       21    0.000    0.000    0.978    0.047 frame.py:3437(<genexpr>)\n       11    0.000    0.000    0.000    0.000 format.py:1663(__init__)\n       40    0.000    0.000    0.000    0.000 format.py:326(<genexpr>)\n        1    0.000    0.000    0.000    0.000 {pandas.lib.list_to_object_array}\n       40    0.000    0.000    0.000    0.000 index.py:491(is_int)\n      170    0.000    0.000    0.000    0.000 {hash}\n        1    0.000    0.000    2.060    2.060 base.py:37(__bytes__)\n        6    0.000    0.000    0.000    0.000 internals.py:1479(__init__)\n       48    0.000    0.000    0.000    0.000 {all}\n        1    0.000    0.000    2.060    2.060 frame.py:438(__unicode__)\n       20    0.000    0.000    0.000    0.000 series.py:1021(get_values)\n       21    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}\n        6    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)\n       61    0.000    0.000    0.000    0.000 index.py:1700(is_all_dates)\n        1    0.000    0.000    0.979    0.979 frame.py:3322(apply)\n        2    0.000    0.000    0.000    0.000 common.py:1880(_asarray_tuplesafe)\n        1    0.000    0.000    0.000    0.000 format.py:1894(get_console_size)\n        1    0.000    0.000    0.000    0.000 {method 'encode' of 'unicode' objects}\n        1    0.000    0.000    0.000    0.000 index.py:682(take)\n       21    0.000    0.000    0.000    0.000 index.py:205(_coerce_to_ndarray)\n       22    0.000    0.000    0.000    0.000 index.py:3410(_ensure_index)\n        8    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}\n        8    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}\n        9    0.000    0.000    0.000    0.000 common.py:1977(is_datetime64_dtype)\n       34    0.000    0.000    0.000    0.000 {any}\n       20    0.000    0.000    0.000    0.000 index.py:465(_convert_slice_indexer_getitem)\n       10    0.000    0.000    0.000    0.000 common.py:1958(is_integer_dtype)\n       21    0.000    0.000    0.000    0.000 internals.py:187(dtype)\n        8    0.000    0.000    0.000    0.000 common.py:2041(is_list_like)\n       20    0.000    0.000    0.000    0.000 format.py:503(is_numeric_dtype)\n       40    0.000    0.000    0.000    0.000 index.py:1691(inferred_type)\n        1    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}\n        2    0.000    0.000    0.000    0.000 format.py:539(has_index_names)\n        8    0.000    0.000    0.000    0.000 index.py:392(values)\n        7    0.000    0.000    0.000    0.000 common.py:1997(is_timedelta64_dtype)\n        1    0.000    0.000    0.000    0.000 format.py:263(__init__)\n       44    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\n        9    0.000    0.000    0.000    0.000 numeric.py:392(asarray)\n        1    0.000    0.000    0.000    0.000 series.py:973(__iter__)\n        2    0.000    0.000    0.002    0.001 index.py:690(format)\n        1    0.000    0.000    0.000    0.000 generic.py:1579(__setattr__)\n        3    0.000    0.000    0.000    0.000 index.py:561(<lambda>)\n        1    0.000    0.000    0.000    0.000 common.py:2392(in_ipython_frontend)\n        2    0.000    0.000    0.000    0.000 config.py:185(get_default_val)\n       20    0.000    0.000    0.000    0.000 series.py:237(_constructor)\n        1    0.000    0.000    0.000    0.000 internals.py:90(ref_locs)\n        1    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}\n        1    0.000    0.000    2.060    2.060 <string>:1(<module>)\n        3    0.000    0.000    0.000    0.000 format.py:1848(_has_names)\n        6    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}\n        2    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)\n        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.arange}\n        1    0.000    0.000    0.979    0.979 frame.py:1433(dtypes)\n        1    0.000    0.000    0.000    0.000 internals.py:128(set_ref_items)\n        2    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)\n        1    0.000    0.000    0.000    0.000 {pandas.algos.ensure_platform_int}\n        1    0.000    0.000    0.000    0.000 {sorted}\n        2    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)\n        2    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)\n        3    0.000    0.000    0.000    0.000 index.py:558(_engine)\n        1    0.000    0.000    0.000    0.000 internals.py:3493(set_axis)\n        1    0.000    0.000    0.000    0.000 internals.py:1972(_set_axis)\n        2    0.000    0.000    0.000    0.000 frame.py:545(__len__)\n        1    0.000    0.000    2.060    2.060 base.py:25(__str__)\n        1    0.000    0.000    0.000    0.000 generic.py:278(_get_axis_number)\n        1    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)\n        2    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)\n        2    0.000    0.000    0.000    0.000 index.py:582(__iter__)\n        1    0.000    0.000    0.000    0.000 numerictypes.py:735(issubdtype)\n        1    0.000    0.000    0.000    0.000 index.py:314(_set_names)\n        1    0.000    0.000    0.000    0.000 StringIO.py:54(__init__)\n        2    0.000    0.000    0.000    0.000 config.py:559(_get_registered_option)\n        1    0.000    0.000    0.000    0.000 index.py:571(inferred_type)\n        1    0.000    0.000    0.000    0.000 frame.py:432(_info_repr)\n       31    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}\n        1    0.000    0.000    0.000    0.000 frame.py:368(shape)\n        1    0.000    0.000    0.000    0.000 index.py:305(nlevels)\n        1    0.000    0.000    0.000    0.000 base.py:62(_constructor)\n        1    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}\n        1    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}\n        1    0.000    0.000    0.000    0.000 common.py:2342(in_interactive_session)\n        1    0.000    0.000    0.000    0.000 numerictypes.py:667(issubclass_)\n        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}\n        1    0.000    0.000    0.000    0.000 __init__.py:194(u)\n        1    0.000    0.000    0.000    0.000 index.py:578(is_all_dates)\n        1    0.000    0.000    0.000    0.000 format.py:543(has_column_names)\n        4    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}\n        2    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}\n        1    0.000    0.000    0.000    0.000 internals.py:82(_is_single_block)\n        1    0.000    0.000    0.000    0.000 interactiveshell.py:506(get_ipython)\n        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29277636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29277636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29277636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc3NjM2",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T09:22:03Z",
    "updated_at": "2013-11-26T09:22:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interestingly, the call to df.info() works fine, it's only the automatic switching from a display of the df object to the df.info() call that doesn't seem to work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29283979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29283979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29283979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgzOTc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T11:08:58Z",
    "updated_at": "2013-11-26T11:08:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver \n\nthis is exceeding slow\n\n```\ndf = DataFrame(randn(10000,10))\n%prun x = df.to_html()\n```\n\ntakes 5s, with only 10k rows\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29284057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29284057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29284057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjg0MDU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T11:10:19Z",
    "updated_at": "2013-11-26T11:12:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver also let's add a vbench in `vb_suite/frame_methods.py` (put near one there for `to_string`), but with say 10000 x 10 or so (using mixed dtypes would be even better)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29288964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29288964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29288964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjg4OTY0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T12:40:04Z",
    "updated_at": "2013-11-26T12:46:04Z",
    "author_association": "NONE",
    "body": "I swear, every time someone touches the display code....\n\nhttps://github.com/pydata/pandas/pull/5589\n\nI don't think the HTML code itself has had a perf regression, it's been slow for a long time\ndue to pprint_thing, mostly, which is required to work around the unicode/byte strings mess\nthat is python2.\n\nOTOH, with pprint_thing, we hardly get any unicode bugs anymore so...\n\nthanks @michaelaye for reporting this so quickly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29289835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29289835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29289835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjg5ODM1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T12:56:12Z",
    "updated_at": "2013-11-26T12:56:12Z",
    "author_association": "NONE",
    "body": "merged #5589\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29293140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29293140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29293140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjkzMTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T13:49:06Z",
    "updated_at": "2013-11-26T13:49:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep...thanks @y-p !\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29312845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29312845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29312845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzEyODQ1",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T17:27:47Z",
    "updated_at": "2013-11-26T17:30:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "hm, now I get an overly large table. It's coming fast, but it's not, as before, adapting to current window width?\nMy dataframe is 10718114 rows × 20 columns, but my window is only wide enough for 5 or so (depending on content). I believe that this was before somehow adapting to current notebook width, wasn't it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29314050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29314050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29314050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzE0MDUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T17:42:27Z",
    "updated_at": "2013-11-26T17:42:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "do you not see scrollers (on both axes)? can you post a link/pic?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29316196",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29316196",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29316196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzE2MTk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T18:06:50Z",
    "updated_at": "2013-11-26T18:06:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "From what I saw of the code while refactoring it, no, there was never any attempt to detect the width of the browser window, and I don't think there's any good way to do so.\n\nPreviously, your DataFrame would have switched to info view because of the number of _rows_. Now it's displaying a truncated view, but the default for `max_columns` remains 20. I wonder if the default for that should be lower (10?). I suspect that for any real-world example, 20 columns won't fit on screen. On the other hand, people probably often want to see all columns, even if it doesn't fit on screen neatly.\n\nIn the notebook, clicking on the \"Out [n]\" prompt should put the output into a smaller div with scrollbars, which can make it easier to work with.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29317374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29317374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29317374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzE3Mzc0",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T18:20:30Z",
    "updated_at": "2013-11-26T18:20:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see. I was just irritated by the different behavior and actually kinda like the solution. And I can influence it with max_columns, so all fine here. Value of default `max_columns` is maybe debatable. Good to close for me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29317790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29317790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29317790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzE3Nzkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T18:25:16Z",
    "updated_at": "2013-11-26T18:25:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "gr8...thanks for the report @michaelaye \n\nmaybe @takluyver (or @michaelaye ) if you want....to update the new doc section on this change to emphasize that a user may want to change `max_columns` as well....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29944660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29944660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29944660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ0NjYw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T22:21:37Z",
    "updated_at": "2013-12-05T22:21:37Z",
    "author_association": "NONE",
    "body": "reopening: https://github.com/TomAugspurger\nMissed the MultiIndex case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29947599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5588#issuecomment-29947599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5588",
    "id": 29947599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ3NTk5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T22:58:18Z",
    "updated_at": "2013-12-05T22:58:18Z",
    "author_association": "NONE",
    "body": "merged https://github.com/pydata/pandas/pull/5649\n"
  }
]
