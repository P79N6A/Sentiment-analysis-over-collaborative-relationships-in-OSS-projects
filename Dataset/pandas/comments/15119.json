[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272285405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15119#issuecomment-272285405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15119",
    "id": 272285405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjI4NTQwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T21:14:14Z",
    "updated_at": "2017-01-12T21:14:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you create a test using the existing test infrastructure (and either push a commit or paste here)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272464498",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15119#issuecomment-272464498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15119",
    "id": 272464498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ2NDQ5OA==",
    "user": {
      "login": "thrasibule",
      "id": 494248,
      "node_id": "MDQ6VXNlcjQ5NDI0OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/494248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thrasibule",
      "html_url": "https://github.com/thrasibule",
      "followers_url": "https://api.github.com/users/thrasibule/followers",
      "following_url": "https://api.github.com/users/thrasibule/following{/other_user}",
      "gists_url": "https://api.github.com/users/thrasibule/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thrasibule/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thrasibule/subscriptions",
      "organizations_url": "https://api.github.com/users/thrasibule/orgs",
      "repos_url": "https://api.github.com/users/thrasibule/repos",
      "events_url": "https://api.github.com/users/thrasibule/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thrasibule/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T15:05:57Z",
    "updated_at": "2017-01-13T15:05:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Working on it. I'll try to come up with something today."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272504328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15119#issuecomment-272504328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15119",
    "id": 272504328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjUwNDMyOA==",
    "user": {
      "login": "thrasibule",
      "id": 494248,
      "node_id": "MDQ6VXNlcjQ5NDI0OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/494248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thrasibule",
      "html_url": "https://github.com/thrasibule",
      "followers_url": "https://api.github.com/users/thrasibule/followers",
      "following_url": "https://api.github.com/users/thrasibule/following{/other_user}",
      "gists_url": "https://api.github.com/users/thrasibule/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thrasibule/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thrasibule/subscriptions",
      "organizations_url": "https://api.github.com/users/thrasibule/orgs",
      "repos_url": "https://api.github.com/users/thrasibule/repos",
      "events_url": "https://api.github.com/users/thrasibule/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thrasibule/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T18:00:53Z",
    "updated_at": "2017-01-13T18:00:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Turns out there is already a test for it, but it's too lenient on purpose: someone obviously thought about this before. Should I try to fix this? I think it should always return datetime64tz, but maybe it's the best that can be done at the moment.\r\n\r\n```diff\r\ndiff --git a/pandas/io/tests/test_sql.py b/pandas/io/tests/test_sql.py\r\nindex cb08944e8..d8eff4ccf 100644\r\n--- a/pandas/io/tests/test_sql.py\r\n+++ b/pandas/io/tests/test_sql.py\r\n@@ -1310,9 +1310,7 @@ class _TestSQLAlchemy(SQLAlchemyMixIn, PandasSQLTest):\r\n         # even with the same versions of psycopg2 & sqlalchemy, possibly a\r\n         # Postgrsql server version difference\r\n         col = df.DateColWithTz\r\n-        self.assertTrue(is_object_dtype(col.dtype) or\r\n-                        is_datetime64_dtype(col.dtype) or\r\n-                        is_datetime64tz_dtype(col.dtype),\r\n+        self.assertTrue(is_datetime64tz_dtype(col.dtype),\r\n                         \"DateCol loaded with incorrect type -> {0}\"\r\n                         .format(col.dtype))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272511164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15119#issuecomment-272511164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15119",
    "id": 272511164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjUxMTE2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T18:29:26Z",
    "updated_at": "2017-01-13T18:29:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@thrasibule well sometimes we seemed to get object dtypes back and sometimes it was correctly returned as datetime64, so this is lenient on purpose. never could narrow down why sometimes it didn't work.."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272833288",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15119#issuecomment-272833288",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15119",
    "id": 272833288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjgzMzI4OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T11:07:46Z",
    "updated_at": "2017-01-16T11:07:46Z",
    "author_association": "MEMBER",
    "body": "@thrasibule See also the discussion in https://github.com/pandas-dev/pandas/pull/11216#issuecomment-145132291.\r\n\r\nThis is a complex topic, so I should dive into it again, but I *think* we want to coerce all tz aware datetimes to UTC (so to keep the tz-aware part, but to have a consistent output). Based on the discussions in #7364 and #11216, I would also think it is this way, but apparently not (at least not in your case).\r\n\r\nCertainly welcome to look into it!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322014557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15119#issuecomment-322014557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15119",
    "id": 322014557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjAxNDU1Nw==",
    "user": {
      "login": "eszense",
      "id": 25100769,
      "node_id": "MDQ6VXNlcjI1MTAwNzY5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25100769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eszense",
      "html_url": "https://github.com/eszense",
      "followers_url": "https://api.github.com/users/eszense/followers",
      "following_url": "https://api.github.com/users/eszense/following{/other_user}",
      "gists_url": "https://api.github.com/users/eszense/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eszense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eszense/subscriptions",
      "organizations_url": "https://api.github.com/users/eszense/orgs",
      "repos_url": "https://api.github.com/users/eszense/repos",
      "events_url": "https://api.github.com/users/eszense/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eszense/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-13T00:42:15Z",
    "updated_at": "2017-08-13T00:46:49Z",
    "author_association": "NONE",
    "body": "I encountered similar problem but on the to_sql() side of parsing\r\n\r\n```\r\nimport pandas as pd\r\nimport sqlite3\r\nimport pytz\r\nfrom datetime import datetime\r\n\r\ntz=pytz.timezone('US/Eastern')\r\n# tz=None\r\n\r\nconn = sqlite3.connect(':memory:')\r\n\r\n# Timezone aware DatetimeIndex raise error\r\ndf = pd.DataFrame(\r\n    index=pd.DatetimeIndex(tz=tz, freq='D', start='2017-1-1', periods=0)\r\n    )\r\ndf.to_sql('test',conn)\r\n\r\n# Timezone aware data in column raise error\r\ndf = pd.DataFrame([datetime.now(tz)])\r\ndf.to_sql('test',conn)\r\n\r\nconn.close()\r\n```\r\nBoth section of the above code will raise exception if timezone-aware index/data is used. \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/project/playground.py\", line 16, in <module>\r\n    df.to_sql('test',conn)\r\n  File \"/home/ubuntu/project/venv/lib/python3.5/site-packages/pandas/core/generic.py\", line 1362, in to_sql\r\n    chunksize=chunksize, dtype=dtype)\r\n  File \"/home/ubuntu/project/venv/lib/python3.5/site-packages/pandas/io/sql.py\", line 471, in to_sql\r\n    chunksize=chunksize, dtype=dtype)\r\n  File \"/home/ubuntu/project/venv/lib/python3.5/site-packages/pandas/io/sql.py\", line 1506, in to_sql\r\n    table.insert(chunksize)\r\n  File \"/home/ubuntu/project/venv/lib/python3.5/site-packages/pandas/io/sql.py\", line 644, in insert\r\n    keys, data_list = self.insert_data()\r\n  File \"/home/ubuntu/project/venv/lib/python3.5/site-packages/pandas/io/sql.py\", line 625, in insert_data\r\n    d = b.values.astype('M8[us]').astype(object)\r\n  File \"/home/ubuntu/project/venv/lib/python3.5/site-packages/pandas/core/indexes/datetimes.py\", line 864, in astype\r\n    raise ValueError('Cannot cast DatetimeIndex to dtype %s' % dtype)\r\nValueError: Cannot cast DatetimeIndex to dtype datetime64[us]\r\n```\r\n\r\nBased on #7364 I also agree the correct behavior is to coerce to UTC.\r\nThis is also supported by [Sqlite documentation](https://sqlite.org/lang_datefunc.html)\r\n\r\n> The date and time functions use UTC or \"zulu\" time internally, and so the \"Z\" suffix is a no-op. Any non-zero \"HH:MM\" suffix is subtracted from the indicated date and time in order to compute zulu time. For example, all of the following time strings are equivalent:\r\n> \r\n> 2013-10-07 08:23:19.120\r\n> 2013-10-07T08:23:19.120Z\r\n> 2013-10-07 04:23:19.120-04:00\r\n> 2456572.84952685 "
  }
]
