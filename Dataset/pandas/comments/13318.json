[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222484731",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222484731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222484731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ4NDczMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-30T12:44:09Z",
    "updated_at": "2016-05-30T12:44:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure what you are refering, `labels=True` is not valid it can only accept `None`, `False`, or a list-like.\n\n`True` actually causes an error, so should  check that. pls send a pull-request!\n\n```\nIn [18]: pd.qcut(range(5), 4, labels=['good','bad','ugly','terrible'])\nOut[18]: \n[good, good, bad, ugly, terrible]\nCategories (4, object): [good < bad < ugly < terrible]\n\nIn [19]: pd.qcut(range(5), 4, labels=None)\nOut[19]: \n[[0, 1], [0, 1], (1, 2], (2, 3], (3, 4]]\nCategories (4, object): [[0, 1] < (1, 2] < (2, 3] < (3, 4]]\n\nIn [20]: pd.qcut(range(5), 4, labels=False)\nOut[20]: array([0, 0, 1, 2, 3])\n\nIn [21]: pd.qcut(range(5), 4, labels=['good','bad','ugly','terrible'])\nOut[21]: \n[good, good, bad, ugly, terrible]\nCategories (4, object): [good < bad < ugly < terrible]\n\nIn [22]: pd.qcut(range(5), 4, labels=True)\nTypeError: object of type 'bool' has no len()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222486805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222486805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222486805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ4NjgwNQ==",
    "user": {
      "login": "simonm3",
      "id": 1199593,
      "node_id": "MDQ6VXNlcjExOTk1OTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonm3",
      "html_url": "https://github.com/simonm3",
      "followers_url": "https://api.github.com/users/simonm3/followers",
      "following_url": "https://api.github.com/users/simonm3/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions",
      "organizations_url": "https://api.github.com/users/simonm3/orgs",
      "repos_url": "https://api.github.com/users/simonm3/repos",
      "events_url": "https://api.github.com/users/simonm3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonm3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-30T12:55:03Z",
    "updated_at": "2016-05-30T12:55:03Z",
    "author_association": "NONE",
    "body": "Exactly. I was thinking labels are things like age20-30. So labels=false\nmeans no labels use 1 2 3 4. Labels=(a,b,c) means use user defined\nlabels......and labels=true would mean use the system defined labels.\n\nLabels=none suggests to me no labels. Labels=true suggests add labels.\n\nI reckon most people would expect true to mean add labels rather than fail\nwith error\nOn 30 May 2016 1:44 p.m., \"Jeff Reback\" notifications@github.com wrote:\n\n> Not sure what you are refering, labels=True is not valid it can only\n> accept None, False, or a list-like.\n> \n> True actually causes an error, so should check that. pls send a\n> pull-request!\n> \n> In [18]: pd.qcut(range(5), 4, labels=['good','bad','ugly','terrible'])\n> Out[18]:\n> [good, good, bad, ugly, terrible]\n> Categories (4, object): [good < bad < ugly < terrible]\n> \n> In [19]: pd.qcut(range(5), 4, labels=None)\n> Out[19]:\n> [[0, 1], [0, 1], (1, 2], (2, 3], (3, 4]]\n> Categories (4, object): [[0, 1] < (1, 2] < (2, 3] < (3, 4]]\n> \n> In [20]: pd.qcut(range(5), 4, labels=False)\n> Out[20]: array([0, 0, 1, 2, 3])\n> \n> In [21]: pd.qcut(range(5), 4, labels=['good','bad','ugly','terrible'])\n> Out[21]:\n> [good, good, bad, ugly, terrible]\n> Categories (4, object): [good < bad < ugly < terrible]\n> \n> In [22]: pd.qcut(range(5), 4, labels=True)\n> TypeError: object of type 'bool' has no len()\n> \n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pydata/pandas/issues/13318#issuecomment-222484731,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ABJN6SvNjQ7wBr44z6fHk785F0OqYkCSks5qGturgaJpZM4IpXXy\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222487520",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222487520",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222487520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ4NzUyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-30T12:58:58Z",
    "updated_at": "2016-05-30T12:58:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "doc-string\n\n```\nIn [5]: pd.qcut?\nSignature: pd.qcut(x, q, labels=None, retbins=False, precision=3)\nDocstring:\nQuantile-based discretization function. Discretize variable into\nequal-sized buckets based on rank or based on sample quantiles. For example\n1000 values for 10 quantiles would produce a Categorical object indicating\nquantile membership for each data point.\n\nParameters\n----------\nx : ndarray or Series\nq : integer or array of quantiles\n    Number of quantiles. 10 for deciles, 4 for quartiles, etc. Alternately\n    array of quantiles, e.g. [0, .25, .5, .75, 1.] for quartiles\nlabels : array or boolean, default None\n    Used as labels for the resulting bins. Must be of the same length as\n    the resulting bins. If False, return only integer indicators of the\n    bins.\nretbins : bool, optional\n    Whether to return the bins or not. Can be useful if bins is given\n    as a scalar.\nprecision : int\n    The precision at which to store and display the bins labels\n\nReturns\n-------\nout : Categorical or Series or array of integers if labels is False\n    The return type (Categorical or Series) depends on the input: a Series\n    of type category if input is a Series else Categorical. Bins are\n    represented as categories when categorical data is returned.\nbins : ndarray of floats\n    Returned only if `retbins` is True.\n\nNotes\n-----\nOut of bounds values will be NA in the resulting Categorical object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222488101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222488101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222488101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ4ODEwMQ==",
    "user": {
      "login": "simonm3",
      "id": 1199593,
      "node_id": "MDQ6VXNlcjExOTk1OTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonm3",
      "html_url": "https://github.com/simonm3",
      "followers_url": "https://api.github.com/users/simonm3/followers",
      "following_url": "https://api.github.com/users/simonm3/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions",
      "organizations_url": "https://api.github.com/users/simonm3/orgs",
      "repos_url": "https://api.github.com/users/simonm3/repos",
      "events_url": "https://api.github.com/users/simonm3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonm3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-30T13:02:08Z",
    "updated_at": "2016-05-30T13:02:08Z",
    "author_association": "NONE",
    "body": "Yes it does what it says in the docs.\n\nWhat I am saying is that it would be much clearer if labels=true were\ndefined as yes please add some labels.\nOn 30 May 2016 1:59 p.m., \"Jeff Reback\" notifications@github.com wrote:\n\n> doc-string\n> \n> In [5]: pd.qcut?\n> Signature: pd.qcut(x, q, labels=None, retbins=False, precision=3)\n> Docstring:\n> Quantile-based discretization function. Discretize variable into\n> equal-sized buckets based on rank or based on sample quantiles. For example\n> 1000 values for 10 quantiles would produce a Categorical object indicating\n> quantile membership for each data point.\n> \n> ## Parameters\n> \n> x : ndarray or Series\n> q : integer or array of quantiles\n>     Number of quantiles. 10 for deciles, 4 for quartiles, etc. Alternately\n>     array of quantiles, e.g. [0, .25, .5, .75, 1.] for quartiles\n> labels : array or boolean, default None\n>     Used as labels for the resulting bins. Must be of the same length as\n>     the resulting bins. If False, return only integer indicators of the\n>     bins.\n> retbins : bool, optional\n>     Whether to return the bins or not. Can be useful if bins is given\n>     as a scalar.\n> precision : int\n>     The precision at which to store and display the bins labels\n> \n> ## Returns\n> \n> out : Categorical or Series or array of integers if labels is False\n>     The return type (Categorical or Series) depends on the input: a Series\n>     of type category if input is a Series else Categorical. Bins are\n>     represented as categories when categorical data is returned.\n> bins : ndarray of floats\n>     Returned only if `retbins` is True.\n> \n> ## Notes\n> \n> Out of bounds values will be NA in the resulting Categorical object\n> \n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pydata/pandas/issues/13318#issuecomment-222487520,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ABJN6Soi6kUZdI7-rCjq7HNQw1JMyu4Pks5qGt8kgaJpZM4IpXXy\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222489561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222489561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222489561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ4OTU2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-30T13:10:59Z",
    "updated_at": "2016-05-30T13:10:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "`labels=True` doesn't make any sense, you have to pass IN the labels. What does pls have labels mean? I think you can accidently think that the bin integers are actual labels. I would rather have a nice error message for `labels=True`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222527957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222527957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222527957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjUyNzk1Nw==",
    "user": {
      "login": "simonm3",
      "id": 1199593,
      "node_id": "MDQ6VXNlcjExOTk1OTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonm3",
      "html_url": "https://github.com/simonm3",
      "followers_url": "https://api.github.com/users/simonm3/followers",
      "following_url": "https://api.github.com/users/simonm3/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions",
      "organizations_url": "https://api.github.com/users/simonm3/orgs",
      "repos_url": "https://api.github.com/users/simonm3/repos",
      "events_url": "https://api.github.com/users/simonm3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonm3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-30T16:58:20Z",
    "updated_at": "2016-05-30T16:58:20Z",
    "author_association": "NONE",
    "body": "Just my feedback as a new user of cut/qcut as to how it could be made more\nintuitive.\n\nSuggest you ask other new users what they think. I would imagine most would\nsay that if you want labels then setting labels=None does not seem\nintuitive.\n\nOn 30 May 2016 at 14:11, Jeff Reback notifications@github.com wrote:\n\n> labels=True doesn't make any sense, you have to pass IN the labels. What\n> does pls have labels mean? I think you can accidently think that the bin\n> integers are actual labels. I would rather have a nice error message for\n> labels=True.\n> \n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pydata/pandas/issues/13318#issuecomment-222489561,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ABJN6TtW-mx1bRaz_9gsQ_vtz8LpFQOWks5qGuH3gaJpZM4IpXXy\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222907194",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222907194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222907194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjkwNzE5NA==",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T06:45:24Z",
    "updated_at": "2016-06-01T06:45:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm not seeing why `labels=True` is obviously wrong, the docstring does say it accepts 'array or boolean' so I can see why people would try passing `True`. \n\nBut then OP is suggesting that `labels=True` should produce new behaviour with automatic labels like `'{varname}{group_min}-{group_max}'`. That seems reasonable enough as a default set of labels. \n\nIf we don't want the new behaviour maybe the docstring should just explicitly say 'array or False' so people don't try to pass `True`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222961765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222961765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222961765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjk2MTc2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T11:08:41Z",
    "updated_at": "2016-06-01T11:08:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "The purpose of this issue is to fix the doc-string and raise an approporite message on `labels=True`. The default IS to provide labels if labels are not overriden. \n\n```\nIn [1]: pd.qcut(range(5), 4, labels=None)\nOut[1]: \n[[0, 1], [0, 1], (1, 2], (2, 3], (3, 4]]\nCategories (4, object): [[0, 1] < (1, 2] < (2, 3] < (3, 4]]\n\nIn [2]: pd.qcut(range(5), 4, labels=None).categories\nOut[2]: Index([u'[0, 1]', u'(1, 2]', u'(2, 3]', u'(3, 4]'], dtype='object')\n```\n\nI suppose you _could_ change this to default to `labels=True` to mean `labels=None` now. I _think_ this would be backward compat (as it is specifically checking for `False` and not `None`).\n\nFurther not really sure `labels=False` is that useful anymore (before `Categoricals` were first class it might have been to provide numpy compat.\n\nSo if one of you wants to take this up and see what's possible w/o breaking anything (or just raise appropriately on `labels=True`) - go for it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222965025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222965025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222965025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjk2NTAyNQ==",
    "user": {
      "login": "simonm3",
      "id": 1199593,
      "node_id": "MDQ6VXNlcjExOTk1OTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonm3",
      "html_url": "https://github.com/simonm3",
      "followers_url": "https://api.github.com/users/simonm3/followers",
      "following_url": "https://api.github.com/users/simonm3/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions",
      "organizations_url": "https://api.github.com/users/simonm3/orgs",
      "repos_url": "https://api.github.com/users/simonm3/repos",
      "events_url": "https://api.github.com/users/simonm3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonm3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T11:25:47Z",
    "updated_at": "2016-06-01T11:25:47Z",
    "author_association": "NONE",
    "body": "> not really sure labels=False is that useful anymore\n\nI agree. It is the False that is confusing because it implies there is a\nTrue; and the False is unnecessary as you can just use Range instead.\n\nOn 1 June 2016 at 12:09, Jeff Reback notifications@github.com wrote:\n\n> The purpose of this issue is to fix the doc-string and raise an\n> approporite message on labels=True. The default IS to provide labels if\n> labels are not overriden.\n> \n> In [1]: pd.qcut(range(5), 4, labels=None)\n> Out[1]:\n> [[0, 1], [0, 1], (1, 2], (2, 3], (3, 4]]\n> Categories (4, object): [[0, 1] < (1, 2] < (2, 3] < (3, 4]]\n> \n> In [2]: pd.qcut(range(5), 4, labels=None).categories\n> Out[2]: Index([u'[0, 1]', u'(1, 2]', u'(2, 3]', u'(3, 4]'], dtype='object')\n> \n> I suppose you _could_ change this to default to labels=True to mean\n> labels=None now. I _think_ this would be backward compat (as it is\n> specifically checking for False and not None).\n> \n> Further not really sure labels=False is that useful anymore (before\n> Categoricals were first class it might have been to provide numpy compat.\n> \n> So if one of you wants to take this up and see what's possible w/o\n> breaking anything (or just raise appropriately on labels=True) - go for it\n> \n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pydata/pandas/issues/13318#issuecomment-222961765,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ABJN6cNKVEaha1MlHr5ubTewA4cAtBQTks5qHWhMgaJpZM4IpXXy\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222972871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13318#issuecomment-222972871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13318",
    "id": 222972871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjk3Mjg3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T12:07:23Z",
    "updated_at": "2016-06-01T12:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, the point is you _don't_ need to normally specify labels as they are auto-generated by default.\n\n`labels=False` just turns this off (which is what I say is a bit counter-intuitive). If you didn't allow a boolean there (the `False`) I don't think we would be having this discussion. `labels` would be just to specify your own specific ones.\n\n> as you can just use Range instead.\n\nThis is not very convenient; you unless you are _also_ passing in bins you don't want to have the nbins parameter floating around in 2 different places.\n"
  }
]
