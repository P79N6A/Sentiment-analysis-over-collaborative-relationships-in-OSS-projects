[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/314795062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16890#issuecomment-314795062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16890",
    "id": 314795062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDc5NTA2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T14:53:43Z",
    "updated_at": "2017-07-12T14:53:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 1. Are these needed in the user-facing namespace for some reason? If not, can we wedge them into _dir_deletions? I know the leading underscore makes it private, but dir(pd.DataFrame) and dir(pd.Series) have 444 and 441 members respectively. This gets pretty imposing.\r\n\r\nnot sure what you are mean here. accessor are by-definition namespaces that make the discovery easier and much more geared to the dtype.\r\n\r\n> 2. In many cases these methods are called immediately after the class definition, but others like ops.add_special_arithmetic_methods will be easy to miss if you don't know to look for it. One alternative that I am considering for the Accessors is applying a decorator to a class. Effectively replace\r\n\r\nWhy is this a problem? There are methods that are generically implemented which belong only to Series, only to DataFrame, to both (and possibly include Panels). So these are layered inclusion methods. You can certainly refactoror, not sure if the decorator syntax is better here. Pls make sweeping changes in separate PR's"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/314795199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16890#issuecomment-314795199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16890",
    "id": 314795199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDc5NTE5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T14:54:06Z",
    "updated_at": "2017-07-12T14:54:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing this. You can comment on the other issues is prob easier."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/314831172",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16890#issuecomment-314831172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16890",
    "id": 314831172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDgzMTE3Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T16:55:53Z",
    "updated_at": "2017-07-12T16:55:53Z",
    "author_association": "MEMBER",
    "body": "> The question being: is there a convention against using the latter approach?\r\n\r\nI think switching to decorators would be a welcome cleanup (but indeed, please save it for a separate PR)."
  }
]
