[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305915112",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16585#issuecomment-305915112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16585",
    "id": 305915112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTkxNTExMg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T21:36:44Z",
    "updated_at": "2017-06-02T21:37:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "May be some kind of floating point issue - or this could be right and is just a formatting one, I'm not sure.   Looking at the percentile levels.\r\n```python\r\nq = np.linspace(0, 1, 11 + 1)\r\narr = np.arange(100)\r\nbreaks = np.percentile(arr, q * 100)\r\n\r\nbreaks\r\nOut[115]: \r\narray([  0.,   9.,  18.,  27.,  36.,  45.,  54.,  63.,  72.,  81.,  90.,\r\n        99.])\r\n```\r\n\r\nThat fourth value is actually slightly less than 27, it's the next smallest floating point value.\r\n```python\r\nIn [120]: breaks[3]\r\nOut[120]: 26.999999999999996\r\n\r\nIn [121]: breaks[3] == np.float64(27.0)\r\nOut[121]: False\r\n\r\nIn [128]: np.nextafter(breaks[3], 999)\r\nOut[128]: 27.0\r\n\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/306182461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16585#issuecomment-306182461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16585",
    "id": 306182461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjE4MjQ2MQ==",
    "user": {
      "login": "AndrewRook",
      "id": 923682,
      "node_id": "MDQ6VXNlcjkyMzY4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/923682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrewRook",
      "html_url": "https://github.com/AndrewRook",
      "followers_url": "https://api.github.com/users/AndrewRook/followers",
      "following_url": "https://api.github.com/users/AndrewRook/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrewRook/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrewRook/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrewRook/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrewRook/orgs",
      "repos_url": "https://api.github.com/users/AndrewRook/repos",
      "events_url": "https://api.github.com/users/AndrewRook/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrewRook/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T13:05:49Z",
    "updated_at": "2017-06-05T13:05:49Z",
    "author_association": "NONE",
    "body": "Ah, that's what's causing the problem, thanks for surfacing that! To me this seems like undesirable behavior, although I can see both sides of the issue so I'd be happy to be persuaded otherwise. Judging from the code, it looks like you could make it check for these slight floating point mismatches by changing [this if statement](https://github.com/pandas-dev/pandas/blob/bf9997520443e0a5f505f11e11f46290ea95b3a3/pandas/core/algorithms.py#L967) to something like this:\r\n\r\n```python\r\nif idx % 1 == 0:\r\n    score = values[int(idx)]\r\nelif np.nextafter(idx, idx + 1) % 1 == 0:\r\n    score = values[int(np.nextafter(idx, idx + 1))]\r\nelif np.nextafter(idx, idx - 1) % 1 == 0:\r\n    score = values[int(np.nextafter(idx, idx - 1))]\r\nelse:\r\n...\r\n```\r\nThat's pretty ugly looking IMO but would do the trick. Another option would be to round `idx` to a given tolerance level before the `if` statement. "
  }
]
