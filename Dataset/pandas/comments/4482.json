[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22215383",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22215383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22215383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE1Mzgz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-06T22:04:05Z",
    "updated_at": "2013-08-06T22:04:32Z",
    "author_association": "NONE",
    "body": "1. Argument from simplicity - Pandas data structures are ordered and the user is expected to provide an ordered (or keyed) data structure as input. It's simple and logical, I don't think there's a need to change it.\n2. Argument from necessity - What's the problem this actually fixes? that the user has to pass in `list(values)` rather then `values`? meh.\n3. Argument from consequence - Slippery slope, once you introduce set to the `series` ctor you break consistency (and an established pandas rule of thumb) with dataframe and panel.  a small break in \n   consistency can spread far and wide across a codebase when later attempts try to regain it. This may be FUD, but I just don't think it's worth it.\n\nI'm -1 on this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22216088",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22216088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22216088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2MDg4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-06T22:15:55Z",
    "updated_at": "2013-08-06T22:15:55Z",
    "author_association": "MEMBER",
    "body": "Your argument about consistency is the most convincing to me, but the original thought was: if `list` can take a `set` why can't `Series`? That would make `Series` more consistent with Python, but of course breaks it with pandas. I agree with you that we should keep consistency with the latter.\n\nI agree with 1. and 2.\n\nI don't feel strongly about this .... I've never actually run into the issue before....\n\nAt the very least this should raise on `frozenset` objects with the same error.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22216124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22216124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22216124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2MTI0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-06T22:16:38Z",
    "updated_at": "2013-08-06T22:16:38Z",
    "author_association": "MEMBER",
    "body": "cc @hayd since he might have a stronger opinion than I about this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22217627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22217627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22217627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3NjI3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-06T22:44:10Z",
    "updated_at": "2013-08-06T22:44:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not really strong... the list argument is all I really have.\n\nI think passing in any iterator should be ok... :s\n\n```\nIn [11]: s = set([2])\n\nIn [12]: pd.Series(iter(s))\nOut[12]: <setiterator at 0x104559280>\n\nIn [13]: pd.Series(iter(list(s)))\nOut[13]: <listiterator at 0x104554b90>\n\nIn [14]: pd.Series(i for i in s)\nOut[14]:\n0    2\ndtype: int64\n```\n\nso don't see why iterables should be so different, and why we should stop it (just cos we can't test it) but... meh.\n\n_Interested to see if/when dictionaries have different ordering for different python versions!_\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22219494",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22219494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22219494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE5NDk0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-06T23:25:03Z",
    "updated_at": "2013-08-06T23:43:17Z",
    "author_association": "NONE",
    "body": "Good example. That's actually my 3rd point in action: a while ago generators were accepted\ninto the ctor (to save users the anguish of `list(gen)`) and now you're showing the inconsistency\n_it_ generated as an (reasonable) argument to support even more stuff.\n\nI think it's fine to support iterators as you suggest (spilled generator milk, so to speak), but that means `iter(set)` _not_ `set`,\nso that's really a separate issue your example raises.  `iterat-or` and an `iter-able` are \ndifferent beasts I believe, am I wrong?\n\nre different ordering for different python versions, how about different ordering in the _same_ \npython version courtesy of hash randomization?\n\n```\nλ python3.3 -c 'print(dict(a=1,b=2))'\n{'b': 2, 'a': 1}\nλ python3.3 -c 'print(dict(a=1,b=2))'\n{'a': 1, 'b': 2}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22219795",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22219795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22219795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE5Nzk1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-06T23:31:27Z",
    "updated_at": "2013-08-06T23:32:06Z",
    "author_association": "MEMBER",
    "body": "@y-p nice example.\n\nyep iterables and iterators are different, `iter(list('abc')) != list('abc')`\n\n@hayd also _generators_ are yet another type of _iterable_ which is why you get the output above\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22260570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22260570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22260570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjYwNTcw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T15:41:48Z",
    "updated_at": "2013-08-07T15:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "woah! that _is_ a nice example :) I'm sold.\n\nMaybe error could mention \"first use list or sorted\" ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22266049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22266049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22266049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjY2MDQ5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T16:55:29Z",
    "updated_at": "2013-08-07T16:55:29Z",
    "author_association": "MEMBER",
    "body": "@jreback good 2 go after passing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22267678",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4482#issuecomment-22267678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4482",
    "id": 22267678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjY3Njc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T17:19:11Z",
    "updated_at": "2013-08-07T17:19:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "thought u closed this? obviously not...ok\n"
  }
]
