[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60463113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8628#issuecomment-60463113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8628",
    "id": 60463113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDYzMTEz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-24T23:46:55Z",
    "updated_at": "2014-10-24T23:47:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree would be nicer to support this directly (and it is quite easy). here is how:\n\n`.astype` simple needs to do this (its essentially not-implemented atm, and reverts to object type behavor), which is completely non-performant when you are doing things like this\n\n```\nIn [14]: pd.Categorical.from_codes(df['A'].cat.codes,categories=df['A'].cat.categories.astype('unicode'))\nOut[14]: \n[b, d, b, a, d, ..., c, a, a, d, a]\nLength: 1000000\nCategories (5, object): [a, b, c, d, e]\n\nIn [15]: %timeit pd.Categorical.from_codes(df['A'].cat.codes,categories=df['A'].cat.categories.astype('unicode'))  \n100 loops, best of 3: 3.74 ms per loop\n```\n\nlove for you to make a chage to `astype` to support this, its pretty straightorward\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60466602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8628#issuecomment-60466602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8628",
    "id": 60466602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDY2NjAy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T01:02:52Z",
    "updated_at": "2014-10-25T01:11:23Z",
    "author_association": "MEMBER",
    "body": "`np.asarray` is pretty fast, only slightly slower than doing it manually:\n\n```\n%timeit np.asarray(df['A'].cat.categories[df['A'].cat.codes])\n100 loops, best of 3: 9.91 ms per loop\n%timeit np.asarray(df['A'])\n100 loops, best of 3: 13.3 ms per loop\n```\n\nThe slow part is converting even numpy ndarrays from object dtype into back unicode (though I'm not sure why exactly you want that, given that pandas normally uses object arrays for strings):\n\n```\nx = np.asarray(df['A'])\n%timeit np.asarray(x, unicode)\n10 loops, best of 3: 112 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60466839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8628#issuecomment-60466839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8628",
    "id": 60466839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDY2ODM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T01:09:55Z",
    "updated_at": "2014-10-25T01:09:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "right but if u know you have a categorical  then u only need to do str ops on a very small amount (relatively speaking ) amount of data (compared to object arrays)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60466970",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8628#issuecomment-60466970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8628",
    "id": 60466970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDY2OTcw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T01:13:49Z",
    "updated_at": "2014-10-25T01:13:49Z",
    "author_association": "MEMBER",
    "body": "@jreback Yep, someone I missed that in your earlier comment.\n\nTo complete my earlier benchmarks:\n\n```\n%timeit df['A'].cat.categories.astype(unicode)[df['A'].cat.codes]\n100 loops, best of 3: 8.34 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403159713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8628#issuecomment-403159713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8628",
    "id": 403159713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1OTcxMw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:14:29Z",
    "updated_at": "2018-07-06T22:14:29Z",
    "author_association": "MEMBER",
    "body": "I think it would be useful to have an inverse equivalent to `factorize` and categorical conversions"
  }
]
