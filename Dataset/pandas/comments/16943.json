[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315532144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-315532144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 315532144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUzMjE0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T12:54:16Z",
    "updated_at": "2017-07-15T12:54:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One solution would be to convert the tuple to a list\r\n\r\nI suspect this would break other tests, were tuples have different meanings that lists for slicing. I may be wrong though, if you want to give it a shot."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315538158",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-315538158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 315538158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUzODE1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T14:38:57Z",
    "updated_at": "2017-07-15T14:38:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "this technically is not covered by the doc-string\r\n\r\n``- A list or array of labels, e.g. ['a', 'b', 'c'].``\r\n\r\n but we almost always accept array-like (which includes tuples). The reason this is confusing slightly is that a non-nested tuple is *also* valid as a single indexer."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362222682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362222682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362222682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIyMjY4Mg==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T10:23:39Z",
    "updated_at": "2018-02-01T10:23:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I came across a slightly related issue: using a multi-index dataframe, why can I only use a tuple as an indexer and not a list (i.e. why do they give different results)?\r\n\r\nUsing the example data, if I want to pull out rows where `ID1=1` and `ID2=1001`, I can only use a tuple inside `loc`:\r\n\r\n    df.loc[(1, 1001)]\r\n\r\nThis returns the desired slice:\r\n```\r\n     Value\r\nID3       \r\n1        1\r\n2        2\r\n```\r\n\r\nI can't use a list:\r\n\r\n     df.loc[[1, 1001]]\r\n\r\nThis seems to imply that I want values `1` and `1001` for the first level of the index only:\r\n\r\n```\r\n              Value\r\nID1 ID2  ID3       \r\n1   1001 1        1\r\n         2        2\r\n    1002 1        9\r\n```\r\n\r\nIt took me quite some time to figure this out. Is this intended behavior? If yes, is this documented (I thought it should be mentioned [here](http://pandas.pydata.org/pandas-docs/stable/advanced.html#using-slicers) but didn't find anything)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362248941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362248941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362248941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI0ODk0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:16:46Z",
    "updated_at": "2018-02-01T12:16:46Z",
    "author_association": "MEMBER",
    "body": "@cbrnr Yes, that is intended behaviour. For single \"labels\" of a MultiIndex (so one value for each level), we always use tuples and not a list, because it would otherwise be difficult to distinguish. I think for this case we are quite consistent within pandas. \r\nIt is the other way around (in a case where we want list-like, do we accept tuple?) that there can be more discussion. Typically we allfow tuples as list-like, but exactly for the reason above (tuples are used to indicate labels of a MI) we might not want to do that in the case of the original issue here.\r\n\r\nSo your assessment is correct: it tries to look for those values of the list in the first index level. You could interpret the list as give me the combination of indexing the dataframe with each element of the list, so `df.loc[1]` and `df.loc[1001]` -> in both cases you select rows based on the first index level. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362249791",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362249791",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362249791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI0OTc5MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:20:33Z",
    "updated_at": "2018-02-01T12:20:33Z",
    "author_association": "MEMBER",
    "body": "For the original issue: given the possible confusion between the two, I think it might be better in this case to not interpret the tuple as a list-like. \r\nBut, in that case, shouldn't it raise an error? As if we interpret `((1, 1001, 1), (1, 1001, 2), (2, 1002, 2))` as a single label, it should not find it?\r\n\r\ncc @toobaz interesting case :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362249835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362249835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362249835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI0OTgzNQ==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:20:46Z",
    "updated_at": "2018-02-01T12:20:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jorisvandenbossche, this makes sense! I usually don't distinguish between lists and tuples in plain Python since they are both list-like objects. So this Pandas behavior tripped me up a bit - is this documented clearly somewhere? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362250780",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362250780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362250780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI1MDc4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:25:08Z",
    "updated_at": "2018-02-01T12:25:08Z",
    "author_association": "MEMBER",
    "body": "> But, in that case, shouldn't it raise an error? As if we interpret ((1, 1001, 1), (1, 1001, 2), (2, 1002, 2)) as a single label, it should not find it?\r\n\r\nAh, no, I suppose this is wrong. It seems that it *does* interpret `((1, 1001, 1), (1, 1001, 2), (2, 1002, 2))` as a list, but not as a list of labels, but as a list of lists (a list of indexers into one level). \r\n\r\nSo it is indexing as:\r\n\r\n```\r\nIn [21]: df.loc[pd.IndexSlice[[1, 1001, 1], [1, 1001, 2], [2, 1002, 2]], :]\r\nOut[21]: \r\n              Value\r\nID1 ID2  ID3       \r\n1   1001 2        2\r\n```\r\n\r\nTo make it a bit more confusing: it is a bit strange however that the actual list of lists (`df.loc[[[1, 1001, 1], [1, 1001, 2], [2, 1002, 2]], :]`) does not work in this case but raises an error that \" '[1, 1001, 1]' is an invalid key\". So the list of lists is interpreted as a list of tuples (list of labels). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362251299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362251299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362251299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI1MTI5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:27:38Z",
    "updated_at": "2018-02-01T12:27:38Z",
    "author_association": "MEMBER",
    "body": "> I usually don't distinguish between lists and tuples in plain Python since they are both list-like objects. So this Pandas behavior tripped me up a bit - is this documented clearly somewhere?\r\n\r\nYes, this is one of the gotcha's due to the complexity of MultiIndexing that we somehow *need* to distinguish between both. \r\nAnd documentation can certainly better about those things. But in general this is also an area where we would need more extensive testing of the different cases, and then better documentation of those cases (eg see my comment above, even for me it is difficult to really predict how something will be interpreted in certain cases)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362252103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362252103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362252103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI1MjEwMw==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:31:20Z",
    "updated_at": "2018-02-01T12:31:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could add a statement that tuples are needed in the case of multiple indexers on a multiindex: http://pandas.pydata.org/pandas-docs/stable/advanced.html#using-slicers. Not a warning box, but maybe there's a note or an info box? Or is there a better place to put such a note? Let me know and I can take care of that in a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362256599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362256599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362256599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI1NjU5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T12:51:08Z",
    "updated_at": "2018-02-01T12:51:08Z",
    "author_association": "MEMBER",
    "body": "Ah, so we are actually using tuples there in the docs :-) So I just might have had the wrong assumption that a list would work (regarding the last of my comment above https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362250780). \r\nBut yes, adding a note there that those multiple indexers need a be contained in a tuple is a good idea (and using the IndexSlice makes it even more explicit)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362263338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362263338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362263338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI2MzMzOA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T13:19:13Z",
    "updated_at": "2018-02-01T13:19:48Z",
    "author_association": "MEMBER",
    "body": "> I could add a statement that tuples are needed in the case of multiple indexers on a multiindex:\r\n\r\nGreat idea! I think such statement should actually go at the beginning of http://pandas.pydata.org/pandas-docs/stable/advanced.html#advanced-indexing-with-hierarchical-index \r\n\r\nYou could maybe start by stating that ``MultiIndex`` keys take the form of tuples, then you could swap the first two examples currently provided (move the _complete indexing_ one first), then introduce partial indexing, and mention that when doing partial indexing on the first level, you are allowed to only pass the first element of the tuple (``'bar'`` stands for than ``('bar',)``). Finally, I think a warning box _could_ then clarify that (for the reasons above), tuples and lists are not equivalent in pandas, and in particular, tuples should not be used as lists of keys (for ``MultiIndex``es, and not only).\r\n\r\nYou _might_ want to show examples of the fact that lists of tuples in general refer to multiple complete (``MultiIndex``) keys, while tuples of lists in general refer to multiple values on each, that is something like\r\n\r\n```python\r\nIn [2]: s = pd.Series(-1, index=pd.MultiIndex.from_product([[1, 2], [3, 4]]))\r\n\r\nIn [3]: s.loc[[(1, 3), (2, 4)]]\r\nOut[3]: \r\n1  3   -1\r\n2  4   -1\r\ndtype: int64\r\n\r\nIn [4]: s.loc[([1, 2], [3, 4])]\r\nOut[4]: \r\n1  3   -1\r\n   4   -1\r\n2  3   -1\r\n   4   -1\r\ndtype: int64\r\n```\r\n\r\nAsides from the possible docs improvements: yes, in some cases we interpret tuples as lists, but I think it should be seen as an undesired implementation legacy. Vice-versa, I see no harm (in general - caveats clearly can apply to specific cases) in interpreting generators, dicts or other list-likes that as lists."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362518704",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362518704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 362518704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjUxODcwNA==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T08:27:07Z",
    "updated_at": "2018-02-02T08:27:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "See #19507"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410176551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-410176551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 410176551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE3NjU1MQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T07:58:00Z",
    "updated_at": "2018-08-03T07:58:00Z",
    "author_association": "MEMBER",
    "body": "I think this is fixed by #19507 . Anyone feel free to reopen if you disagree."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462173764",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16943#issuecomment-462173764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16943",
    "id": 462173764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE3Mzc2NA==",
    "user": {
      "login": "AntonVlasenko",
      "id": 19377925,
      "node_id": "MDQ6VXNlcjE5Mzc3OTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/19377925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AntonVlasenko",
      "html_url": "https://github.com/AntonVlasenko",
      "followers_url": "https://api.github.com/users/AntonVlasenko/followers",
      "following_url": "https://api.github.com/users/AntonVlasenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/AntonVlasenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AntonVlasenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AntonVlasenko/subscriptions",
      "organizations_url": "https://api.github.com/users/AntonVlasenko/orgs",
      "repos_url": "https://api.github.com/users/AntonVlasenko/repos",
      "events_url": "https://api.github.com/users/AntonVlasenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AntonVlasenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-10T21:16:32Z",
    "updated_at": "2019-02-10T21:16:32Z",
    "author_association": "NONE",
    "body": "@toobaz \r\n\r\nThis is almost bizarre how you helped me with getting a dataframe by multiindex. Thank you!\r\n"
  }
]
