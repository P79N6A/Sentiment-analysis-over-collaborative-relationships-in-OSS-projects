[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29874998",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29874998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29874998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODc0OTk4",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T06:42:10Z",
    "updated_at": "2013-12-05T06:42:10Z",
    "author_association": "NONE",
    "body": "Another issue that people may run into is that the clustering a large matrix will run into recursion limit issues, so there should be a way to smartly change `sys.setrecursionlimit(get_recursionlimit(df))` based on the size of the dataframe.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29900196",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29900196",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29900196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTAwMTk2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T14:13:50Z",
    "updated_at": "2013-12-05T14:13:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll take a closer look this weekend. These are just some quick comments.\n- There's an open issue about returning figures vs. axes in issue #4020; This may be a good time to sort that out definitively.\n- Have a look at the [numpy docstring format](https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt#docstring-standard)\n- Just a couple [PEP8 errors](http://www.python.org/dev/peps/pep-0008/). Your text editor probably has a plugin to check these automatically\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29914263",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29914263",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29914263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE0MjYz",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T16:46:19Z",
    "updated_at": "2013-12-05T16:46:19Z",
    "author_association": "NONE",
    "body": "Re figs vs axes: you can access all axes of a fig with `fig.axes()` which returns an array of axes. Returning just the `fig` could be the default, but maybe we could also add the row and column dendrograms if the user specifies, because they might want to do something else with them later.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29914588",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29914588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29914588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE0NTg4",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T16:49:35Z",
    "updated_at": "2013-12-05T16:49:35Z",
    "author_association": "NONE",
    "body": "Also, here are the R doc for `heatmap.2`: http://hosho.ees.hokudai.ac.jp/~kubo/Rdoc/library/gplots/html/heatmap.2.html (this is the main feature set I'm trying to create)\n\nAnd the Matlab docs for `clustergram`: http://www.mathworks.com/help/bioinfo/ref/clustergram.html I haven't used this much but I know other people in my lab do. This defaults to optimal leaf ordering on, but I'm still getting through the paper describing the efficient optimal leaf ordering algorithm: http://www.cimms.ou.edu/~zhang/pdfs/BIDM04-JiantingZhang.pdf\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29917361",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29917361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29917361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE3MzYx",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T17:18:57Z",
    "updated_at": "2013-12-05T17:18:57Z",
    "author_association": "NONE",
    "body": "What's the correct way to test if an object is None, if the other option is that it is a `pd.DataFrame` (or other iterable)?\n\nAccording to PEP8, what I'm doing here is wrong:\n\n```\nif type(plot_df) is type(None):\n    plot_df = df\n```\n\nbut when I do this as suggested by PEP8:\n\n```\nif isinstance(plot_df, None):\n    plot_df = df\n```\n\nI get:\n\n```\nTypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29917675",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29917675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29917675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE3Njc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T17:22:09Z",
    "updated_at": "2013-12-05T17:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "just do \n\n```\nif x is None:\n    ....\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29918962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29918962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29918962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE4OTYy",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T17:35:39Z",
    "updated_at": "2013-12-05T17:36:05Z",
    "author_association": "NONE",
    "body": "That worked, thanks @jreback! I think I was getting the `if variable:` issues with iterables (that stated that the truth value of an array is ambiguous), confused with `if variable is None:`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29919248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29919248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29919248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE5MjQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T17:38:45Z",
    "updated_at": "2013-12-05T17:38:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nif variable:\n   ....\n```\n\nimplicity calls `__nonzero__`, which doesn't make sense on a pandas object (though works on `None`), which is why it raises (this is similar to what numpy does)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29949407",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-29949407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 29949407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ5NDA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T23:23:15Z",
    "updated_at": "2013-12-05T23:23:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "this should close #3497, or if not, pls create a separate issue for this? (just so we can put tags on it and reference it).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30054594",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30054594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30054594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDU0NTk0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T13:08:03Z",
    "updated_at": "2013-12-07T13:08:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm thinking a bit more about the API.  It can be a bit intimidating to see a function signature with 15-20 keyword arguments. Things like `title, title_fontsize, figsize, xlabel_fontsize, ylabel_fontsize, linewidth, edgecolor` and maybe some others could all be moved into a `**kwargs` argument. Basically anything that is getting passed to the matplotlib plot command (`pcolormesh` I guess). This is a bit trickier since you'll have the multiple parts with the heat map and dendogram.  But it will also give the benefit of being able to use _all_ the matplotlib formatting commands, and not just the ones you've included.\n\nAnd I guess this adds a new optional dependency with the `fastcluster` library. One of the maintainers will have to weigh in on that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30073402",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30073402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30073402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDczNDAy",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-08T02:32:31Z",
    "updated_at": "2013-12-13T00:19:45Z",
    "author_association": "NONE",
    "body": "It is quite overwhelming, but there a lot of aspects to control at a time. R's [`heatmap.2`](http://hosho.ees.hokudai.ac.jp/~kubo/Rdoc/library/gplots/html/heatmap.2.html) strategy is to have all non-image (`pcolormesh` in our case) arguments to be in the main args, then `**kwargs` for pcolormesh separately. Matlab's [`clustergram`](http://www.mathworks.com/help/bioinfo/ref/clustergram.html) is to have everything in the main args, which is overwhelming. So I suggest adopting the same strategy, which will move `linewidth`, `edgecolor`, `cmap`, `norm` (not currently an argument), `vmin`, `vmax` (`vmin` and `vmax` will have to be moved out of where they are now) into the `kwargs`. That's not very many, but it's something.\n\nAnother feature that both R and Matlab have is the ability to z-score-ify the matrix, i.e. normalize across either rows or columns such that 0 is the middle value. Should this be an option as well?\n\nOne note is that the `title` is not actually placed as the title of `pcolormesh`, but rather as the `title` of the column dendrogram, since that will appear at the top of the figure, rather than in between the dendrogram and the false color image.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30490272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30490272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30490272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDkwMjcy",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-13T06:50:16Z",
    "updated_at": "2013-12-13T06:50:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can only say I'm _extremely_ interested in this. Given that `heatmap.2` has such a horrid syntax, I'm all welcoming this! \n\nAs a suggestion, I wonder if it would be possible to pass scipy dendrograms to the function, in case they are calculated from different algorithms than the base ones (e.g., when doing bootstrapped clustering). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30540103",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30540103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30540103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTQwMTAz",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-13T20:16:02Z",
    "updated_at": "2013-12-13T20:16:02Z",
    "author_association": "NONE",
    "body": "@lbeltrame that is a great idea! The way `heatmap.2` does it is that `Colv` and `Rowv` can be `NULL` or `FALSE` , both of which result in no clustering, or `TRUE`, which will cluster, or a dendrogram, and then it will use this instead of computing the dendrogram. This syntax seems confusing to me, but I'm not sure if having `cluster_cols=True` and `col_dendrogram=None` separate makes much sense either. What do you suggest?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30540404",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30540404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30540404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTQwNDA0",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-13T20:19:48Z",
    "updated_at": "2013-12-13T20:19:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> `col_dendrogram=None` separate makes much sense either. What do you\n> suggest?\n\nType checking is evil, but IMO less evil than having more confusing options. I \nwould use an instance of a dendrogram to use it as is, False to _not_ cluster \nand None to cluster. \n\nI know it sounds ugly, that's why I'm open to suggestions. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30639000",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30639000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30639000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjM5MDAw",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T06:43:31Z",
    "updated_at": "2013-12-16T06:44:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Likewise I'd change AssertionError (which is more like \"this should never happen\") throughout the code to ValueError (\"incorrect input\", in this case). \n\nI also second @TomAugspurger's comments, the matplotlib stuff should go into `**kwargs`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30678379",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30678379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30678379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc4Mzc5",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:04:02Z",
    "updated_at": "2013-12-16T17:04:02Z",
    "author_association": "NONE",
    "body": "How should tests be written for figures? For `prettyplotlib` I used `matplotlib`'s `@image_comparison` (`from matplotlib.testing.decorators import image_comparison`: http://matplotlib.org/devel/testing.html#writing-an-image-comparison-test) But I haven't seen that in the pandas code. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30679676",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30679676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30679676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc5Njc2",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:16:36Z",
    "updated_at": "2013-12-16T17:16:36Z",
    "author_association": "NONE",
    "body": "@lbeltrame so both `True` and `None` would cluster? That sounds fishy.. I think `None` and `False` should both not cluster.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30680198",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30680198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30680198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgwMTk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:22:15Z",
    "updated_at": "2013-12-16T17:22:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@olgabot why don't you have a `cluster=` kw that takes a string and make `False/None` just not cluster.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30680671",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30680671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30680671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgwNjcx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:27:45Z",
    "updated_at": "2013-12-16T17:27:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@olgabot I'd be quite happy if we put in tests with `image_comparison` - seems like a good idea. Make sure you mark your tests with `slow` though (might be time to add a `plotting` decorator too...)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30680951",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30680951",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30680951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgwOTUx",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:30:34Z",
    "updated_at": "2013-12-16T17:30:34Z",
    "author_association": "NONE",
    "body": "It would need to be separate for columns and rows, so `cluster_cols` and `cluster_rows` need to separately address:\n- whether or not to cluster this dimension (True/False/None?)\n- If the user has already clustered, accept a dendrogram (a `dict` with keys `icoord`, `dcoord` and `leaves`)\n- This could also be confused for the metric or linkage method, though I've separated those to `metric`, `col_linkage_method`, and `row_linkage_method` respectively so hopefully that won't be the case\n\nSo to address all of the above issues, I propose these acceptable arguments to `cluster_cols` and `cluster_rows`:\n- `False` : do not cluster\n- `True` : cluster using the `*linkage_method` and `metric` provided\n- `None`: ?? do not cluster I think\n- `dict`: check for `icoord`, `dcoord`, and `leaves` in the keys, and we're good to go\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30681150",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30681150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30681150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgxMTUw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:32:41Z",
    "updated_at": "2013-12-16T17:32:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@olgabot - would you mind listing out the different outcome decisions\n(maybe a table?) [or, alternatively, a set of example calls] - might help\nto come to a simpler API for this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30681905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30681905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30681905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgxOTA1",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:40:45Z",
    "updated_at": "2013-12-16T17:40:45Z",
    "author_association": "NONE",
    "body": "The main outcomes are \n- cluster (using other params in the program) \n- don't cluster\n- use this other dendrogram I made to arrange the heatmap\n\nDoes that help?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30682628",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30682628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30682628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgyNjI4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T17:48:46Z",
    "updated_at": "2013-12-16T17:48:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with what your suggestion then, just tweaked such that anything\nFalsey (None/False/empty dict, whatever) should not cluster. Is it invalid\nto get a dendogram and also get a linkage_method?\n\nAlso, if you end up with `linkage_method_rows`, `linkage_method_cols`, etc,\nyou might consider passing two dicts: `col_clustering =\ndict(linkage_method=...), row_clustering = dict(dendogram=...)`. Will\nprobably make it cleaner.\n\nOn Mon, Dec 16, 2013 at 12:40 PM, Olga Botvinnik\nnotifications@github.comwrote:\n\n> The main outcomes are\n> - cluster (using other params in the program)\n> - don't cluster\n> - use this other dendrogram I made to arrange the heatmap\n> \n> Does that help?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/5646#issuecomment-30681905\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30709288",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-30709288",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 30709288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzA5Mjg4",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T22:47:20Z",
    "updated_at": "2013-12-16T22:47:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@olgabot +1 on your idea with API. \n\nWith regards to linkage and clustering methods, IMO it makes no sense to use two different methods for rows and columns (at least in my common usage), so I would rather avoid that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31001815",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-31001815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 31001815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDAxODE1",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-20T10:44:57Z",
    "updated_at": "2013-12-20T10:46:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you update either the PR text or add here a TODO of what's left? Might be useful if someone else wants to contribute.\n\nBTW, how do you handle row text when rows are hundreds or even thousands? Even R can't get this quite right (I end up omitting row names in such cases). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31092646",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-31092646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 31092646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDkyNjQ2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T18:21:15Z",
    "updated_at": "2013-12-22T18:21:25Z",
    "author_association": "NONE",
    "body": "@olgabot looks like this PR found a more suitable home in seaborn, as discussed. Close?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31094147",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5646#issuecomment-31094147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5646",
    "id": 31094147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDk0MTQ3",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T19:37:01Z",
    "updated_at": "2013-12-22T19:37:01Z",
    "author_association": "NONE",
    "body": "Yes sure\n\nSent from my mobile device.\nOn Dec 22, 2013 10:21 AM, \"y-p\" notifications@github.com wrote:\n\n> @olgabot https://github.com/olgabot looks like this PR found a more\n> suitable home in seaborn as discussed. Close?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/5646#issuecomment-31092646\n> .\n"
  }
]
