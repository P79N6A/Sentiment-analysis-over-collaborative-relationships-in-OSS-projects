[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458271871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458271871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458271871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI3MTg3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T19:39:07Z",
    "updated_at": "2019-01-28T19:39:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jbrockmendel, @mroeschke, @gfyoung, @swyoon if you have thoughts here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458276097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458276097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458276097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI3NjA5Nw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T19:51:17Z",
    "updated_at": "2019-01-28T19:53:29Z",
    "author_association": "MEMBER",
    "body": "Appears this was an intentional change as described by the original issue: https://github.com/pandas-dev/pandas/issues/22256#issue-349033392\r\n\r\nAlso AFAICT, the coercion to UTC behavior before was not documented in `read_csv`(?). In general, I am keen on preserving the distinct UTC offsets instead of coercing to UTC as it leads to less surprises. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458311322",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458311322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458311322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxMTMyMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T21:37:18Z",
    "updated_at": "2019-01-28T21:37:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see anything in the original issue https://github.com/pandas-dev/pandas/issues/22256#issue-349033392 about mixed timezones.\r\n\r\nSo to clarify, what's the expected output of \r\n\r\n```python\r\nIn [8]: pd.read_csv(io.StringIO('a\\n2000-01-01T00:00:00+06:00\\n2000-01-01T00:00:00+05:00'), parse_dates=['a']).a\r\n```\r\n\r\nIn 0.23.4, that's\r\n\r\n```python\r\nOut[4]:\r\n0   1999-12-31 18:00:00\r\n1   1999-12-31 19:00:00\r\nName: a, dtype: datetime64[ns]\r\n```\r\n\r\nand in 0.24.0 that's \r\n\r\n```python\r\nOut[8]:\r\n0    2000-01-01 00:00:00+06:00\r\n1    2000-01-01 00:00:00+05:00\r\nName: a, dtype: object\r\n```\r\n\r\nIf we want the 0.24.0 behavior, do we have an alternative recommendation for \"parse this mess into a column of datetimes\"? Something like\r\n\r\n```python\r\npd.read_csv(..., date_parser=lambda x: pd.to_datetime(x, utc=True))\r\n```\r\n\r\nIf that's the recommendation going forward, I can submit a PR updating the release note for 0.24 to note the breaking change, and an example with mixed timezones."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458312469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458312469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458312469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxMjQ2OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T21:40:56Z",
    "updated_at": "2019-01-28T21:40:56Z",
    "author_association": "MEMBER",
    "body": "FWIW I see two upsides to not-converting to UTC.  First, conversion is lossy; mixed timezones is a pretty weird special case and if it is intentional, we preserve it.  Second, I'm pretty sure this is consistent with to_datetime's treatment of strings, which is a plus."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458312757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458312757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458312757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxMjc1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T21:41:48Z",
    "updated_at": "2019-01-28T21:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, does `date_parser` operate row-wise? We probably don't want to recommend that. The alternative would be something like\r\n\r\n```python\r\ndate_columns = ['a']\r\ndf = pd.read_csv(...)\r\ndf[date_columns] = df[date_columns].apply(pd.to_datetime, utc=True)\r\n```\r\n\r\nso read it in as strings, and then convert later?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458313464",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458313464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458313464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxMzQ2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T21:44:08Z",
    "updated_at": "2019-01-28T21:44:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> mixed timezones is a pretty weird special case and if it is intentional, we preserve it.\r\n\r\nI would distinguish mixed timezones in a storage format like CSV from our internal representation. IMO, it's important to support easily ingesting this kind of data.\r\n\r\nIt does appear to be consistent with `to_datetime`\r\n\r\n```python\r\nIn [6]: pd.to_datetime(['2000-01-01T00:00:00+06:00', '2000-01-01T00:00:00+05:00'])\r\nOut[6]: Index([2000-01-01 00:00:00+06:00, 2000-01-01 00:00:00+05:00], dtype='object')\r\n\r\nIn [7]: pd.to_datetime(['2000-01-01T00:00:00+06:00', '2000-01-01T00:00:00+05:00'], utc=True)\r\nOut[7]: DatetimeIndex(['1999-12-31 18:00:00+00:00', '1999-12-31 19:00:00+00:00'], dtype='datetime64[ns, UTC]', freq=None)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458316344",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458316344",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458316344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxNjM0NA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T21:52:45Z",
    "updated_at": "2019-01-28T21:52:45Z",
    "author_association": "MEMBER",
    "body": "Yeah I'd recommend post processing via apply (or `to_datetime` directly if it's just one column).\r\n\r\nThe `to_datetime` example above was recently fixed in 0.24.0 as well. http://pandas.pydata.org/pandas-docs/stable/whatsnew/v0.24.0.html#parsing-datetime-strings-with-timezone-offsets"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458319767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458319767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458319767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxOTc2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T22:03:23Z",
    "updated_at": "2019-01-28T22:03:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. I'll link to that.\n\nOn Mon, Jan 28, 2019 at 3:52 PM Matthew Roeschke <notifications@github.com>\nwrote:\n\n> Yeah I'd recommend post processing via apply (or to_datetime directly if\n> it's just one column).\n>\n> The to_datetime example above was recently fixed in 0.24.0 as well.\n> http://pandas.pydata.org/pandas-docs/stable/whatsnew/v0.24.0.html#parsing-datetime-strings-with-timezone-offsets\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458316344>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIk_BnZg4v26cFTOLl6naOGkUqimVks5vH3E0gaJpZM4aWoOk>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458331844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458331844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458331844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMzMTg0NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T22:42:28Z",
    "updated_at": "2019-01-28T22:42:28Z",
    "author_association": "MEMBER",
    "body": "I'm a little late to the discussion, but I do agree with the general sentiment here.  I think a documentation change will suffice.\r\n\r\n> Actually, does date_parser operate row-wise\r\n\r\n@TomAugspurger : The behavior of `date_parser` varies depending on how `parse_dates` is passed in.  However, IIUC it does not operate \"row-wise\" as I believe you are implying."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458387867",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-458387867",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 458387867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODM4Nzg2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T02:53:56Z",
    "updated_at": "2019-01-29T02:53:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @gfyoung, that's the recommendation I went with in #24989."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/473857620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-473857620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 473857620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzg1NzYyMA==",
    "user": {
      "login": "hendrics",
      "id": 1076263,
      "node_id": "MDQ6VXNlcjEwNzYyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1076263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hendrics",
      "html_url": "https://github.com/hendrics",
      "followers_url": "https://api.github.com/users/hendrics/followers",
      "following_url": "https://api.github.com/users/hendrics/following{/other_user}",
      "gists_url": "https://api.github.com/users/hendrics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hendrics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hendrics/subscriptions",
      "organizations_url": "https://api.github.com/users/hendrics/orgs",
      "repos_url": "https://api.github.com/users/hendrics/repos",
      "events_url": "https://api.github.com/users/hendrics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hendrics/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T10:39:26Z",
    "updated_at": "2019-03-18T10:39:26Z",
    "author_association": "NONE",
    "body": "Sorry, too late to the discussion but we've just update to 0.24.2 from 0.23.4... It breaks a lot of our code which was relying on reading back 'UTC' version for years. \r\nThis is the sainest approach and `date_parser=lambda x: pd.to_datetime(x, utc=True)` should be the default really and not give back a set of object strings? \r\n\r\nHaving the fixed offset which most likely is wrong due to DST transitions serves no purpose unless you are localising to a known timezone using IANA timezone name.  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/473949672",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-473949672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 473949672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzk0OTY3Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T15:07:18Z",
    "updated_at": "2019-03-18T15:07:18Z",
    "author_association": "MEMBER",
    "body": "> This is the sainest approach and date_parser=lambda x: pd.to_datetime(x, utc=True) should be the default really and not give back a set of object strings?\r\n\r\nMy understanding is that ATM it gives back an array of `Timestamp` objects, not strings.  Is it actually giving an array of strings?\r\n\r\nThis was changed because the all-utc version drops information.  If a user has a mixed-timezone array, the default is to assume it is intentional."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474011710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-474011710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 474011710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDAxMTcxMA==",
    "user": {
      "login": "hendrics",
      "id": 1076263,
      "node_id": "MDQ6VXNlcjEwNzYyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1076263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hendrics",
      "html_url": "https://github.com/hendrics",
      "followers_url": "https://api.github.com/users/hendrics/followers",
      "following_url": "https://api.github.com/users/hendrics/following{/other_user}",
      "gists_url": "https://api.github.com/users/hendrics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hendrics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hendrics/subscriptions",
      "organizations_url": "https://api.github.com/users/hendrics/orgs",
      "repos_url": "https://api.github.com/users/hendrics/repos",
      "events_url": "https://api.github.com/users/hendrics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hendrics/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T17:09:05Z",
    "updated_at": "2019-03-18T17:10:51Z",
    "author_association": "NONE",
    "body": "> On 0.24 that's\r\n> \r\n> ```python\r\n> In [7]: df.index\r\n> Out[7]:\r\n> Index([2017-04-22 15:11:58-05:00, 2017-04-21 14:20:57-05:00,\r\n>       2017-03-09 11:15:30-06:00],\r\n>      dtype='object', name='datetime')\r\n> ```\r\n\r\nfrom @TomAugspurger example above - the `dtype` is `object` - but yeah the individual members of the index are of type `datetime.datetime` with different offset... not the `Timestamp` objects per se... and not the strings as I've implied earlier... my bad...\r\n\r\nBut my point is that \"mixed timezones\" or mixed timezone offsets is very common for any location with DST transitions... half of the year they are going to be different from the other half... but it is normal... What it was doing before was ok except that `UTC` timezone was not set... My point is it is better default behaviour, and it already does it for `+00:00` offsets.... if I have `+00:00` for all the timestamps it slaps `UTC` timezone on the index... And that is probably the right default thing especially given that it was doing the same before without slapping a timezone...\r\n\r\nAlso timezone AINA string is what I think when we talk about timezones as it is unambiguous... yet timezone offset does not give me this information anyway, only how to convert to UTC. \r\n\r\nI could have 2 AINA timezone producing exactly the same offset strings and hence timestamps for half a year and be wrong the other half of the year or having the DST transition on different days.\r\n "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474060010",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-474060010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 474060010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDA2MDAxMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T19:09:38Z",
    "updated_at": "2019-03-18T19:09:38Z",
    "author_association": "MEMBER",
    "body": "> But my point is that \"mixed timezones\" or mixed timezone offsets is very common for any location with DST transitions\r\n\r\nThat's true, but coercion to `UTC` is imposing an unnecessary transformation on `datetime` objects.\r\nIn addition, the behavior was not documented.  From a design standpoint, we aim to give the end user their CSV data in as unadulterated form as possible because after all, the function is called `read_csv`.  Nowhere in the name implies that we perform transformations on your data.\r\n\r\nNow straddling the DST transition point has historically been a tricky spot for datetime indices on our end, so making a unilateral decision on how to address them would have been unusual, to say the least.\r\n\r\nSo from those standpoints, I stand by our decision to change the behavior as we did for `0.24.0`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474377729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24987#issuecomment-474377729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24987",
    "id": 474377729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM3NzcyOQ==",
    "user": {
      "login": "hendrics",
      "id": 1076263,
      "node_id": "MDQ6VXNlcjEwNzYyNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1076263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hendrics",
      "html_url": "https://github.com/hendrics",
      "followers_url": "https://api.github.com/users/hendrics/followers",
      "following_url": "https://api.github.com/users/hendrics/following{/other_user}",
      "gists_url": "https://api.github.com/users/hendrics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hendrics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hendrics/subscriptions",
      "organizations_url": "https://api.github.com/users/hendrics/orgs",
      "repos_url": "https://api.github.com/users/hendrics/repos",
      "events_url": "https://api.github.com/users/hendrics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hendrics/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:48:09Z",
    "updated_at": "2019-03-19T13:48:35Z",
    "author_association": "NONE",
    "body": "I guess my issue is that I do not get a `DatetimeIndex` any more if I have mixed timestamps....\r\n\r\non a side note there's an amazing difference in speed...\r\n\r\n```python\r\nbuf = io.StringIO()\r\npd.DataFrame(\r\n    index=pd.date_range(\r\n        start='2015-03-10T00:00', \r\n        end='2020-03-12T00:00', \r\n        tz='America/Havana', \r\n        freq='1H'\r\n      )\r\n).to_csv(buf)\r\n\r\n\r\n%timeit buf.seek(0); pd.read_csv(buf, parse_dates=[0], infer_datetime_format=True)\r\n4.78 s ± 19.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\n%timeit buf.seek(0); pd.read_csv(buf, parse_dates=[0], date_parser=lambda x: pd.to_datetime(x, utc=True))\r\n750 ms ± 11.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n```\r\n\r\nso it seems using `pd.read_csv(..., date_parser=pd.to_datetime(x, utc=True))` is beneficial for the speed performance... \r\n\r\nThis difference is only present for a mixed timezone offset. When timezone offset is '00:00' I didn't observer any difference between different modes and it is around `160ms` for the same size data..."
  }
]
