[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126360870",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126360870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126360870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjM2MDg3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T15:03:29Z",
    "updated_at": "2015-07-30T15:04:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, this looks reasonable. \n- I would like to have some smoke tests along the lines of  [this](https://github.com/pydata/pandas/blob/master/pandas/tests/test_groupby.py#L4841). \n- pls add to the `API.rst` as well (maybe have to do that somewhat manually).\n- Further I think that `computation.rst` could be modified to use this syntax.\n- finally would need a release note showing these changes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126385673",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126385673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126385673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjM4NTY3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T16:09:50Z",
    "updated_at": "2015-07-30T16:09:50Z",
    "author_association": "MEMBER",
    "body": "While in principle I agree that it would be consistent to have these on the objects, I am just not sure if I find it a good idea to add yet another _37_ methods at once to DataFrame/Series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126385974",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126385974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126385974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjM4NTk3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T16:11:07Z",
    "updated_at": "2015-07-30T16:11:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I share @jorisvandenbossche's concern. We _could_ do it in a `.rolling` and `.expanding` namespace. `df.rolling.mean(periods=2)`, but I don't have a strong preference for that over where they are now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126393563",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126393563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126393563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjM5MzU2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T16:28:20Z",
    "updated_at": "2015-07-30T16:28:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, these are good points. Not real strong on this, so tabling for now, @TomAugspurger of namespacing makes more sense. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126579677",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126579677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126579677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjU3OTY3Nw==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T06:25:40Z",
    "updated_at": "2015-07-31T06:25:40Z",
    "author_association": "NONE",
    "body": "I like the idea of adding a namespace to avoid adding 37 names into DataFrame.\n\nIMHO, there are two clean ways of doing this:\n1. create on the fly the rolling and expanding namespaces in DataFrame, something close to what is done here https://github.com/dalejung/trtools/blob/master/trtools/core/rolling.py (though I must admit I did not take the time to understand in detail this solution)\n2. change the moments library to gather all the rolling methods in a rolling namespace and all the expanding methods in an expanding namespace\n\nI prefer the solution 2 since it would also make the moments library cleaner.\n\nI am not very comfortable with pandas' code yet. Could you tell me whether one of those ideas could be acceptable or if another solution could be preferable?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126584863",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126584863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126584863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjU4NDg2Mw==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T06:52:00Z",
    "updated_at": "2015-07-31T06:52:00Z",
    "author_association": "NONE",
    "body": "I gathered the rolling and expanding methods into separate namespaces and added them to DataFrame and Series\n\nThis way, the dataframes methods are available via: DataFrame.rolling._,\nDataFrame.expanding._, DataFrame.ewma. Same for Series.\n\nConsidering the ewm\\* function, only 8 objects are added to the DataFrames. I did\nnot not whether it was a good idea to put the ewm\\* method in a separate\nnamespace.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126592742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126592742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126592742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjU5Mjc0Mg==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T07:33:05Z",
    "updated_at": "2015-07-31T07:39:38Z",
    "author_association": "NONE",
    "body": "Hmm, the last implementation just does not work because df.rolling.mean provides the rolling object to the rolling_mean method as self argument instead of the dataframe. \n\nIn order to use the rolling_ and expanding_ methods as is but still aggregate them into separate namespaces, I don't see an easy solution.\n\nhttps://github.com/dalejung/trtools/blob/master/trtools/monkey/__init__.py provides a way to do so, but it looks a bit complicated to do a so simple stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126631001",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126631001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126631001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjYzMTAwMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T10:00:36Z",
    "updated_at": "2015-07-31T10:00:36Z",
    "author_association": "MEMBER",
    "body": "@Konubinix We have some machinery for this (which is also used by dt/cat/str). Look for `AccessorProperty` in core/base.py.\n\nBut maybe wait a moment to first let some other people react and settle the discussion on which we actually want (as methods, as namespace methods or leave as is) before you put too much work in it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126656571",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126656571",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126656571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjY1NjU3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T11:10:45Z",
    "updated_at": "2015-07-31T11:10:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.rolling`, `.expaning`, `.ewma` make name spaces for `Series` make sense, though these only should show up for `int/float` dtypes (similar to how `.str/.cat/.dt` work).\n\nFor `DataFrame` this is much tricker. You only really would want them to be visible for a single dtype frame (of `int/float`), otherwise they don't make sense. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/126992822",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-126992822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 126992822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjk5MjgyMg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T05:51:38Z",
    "updated_at": "2015-08-02T05:51:38Z",
    "author_association": "MEMBER",
    "body": "I like the idea of namespace accessors for rolling and expanding aggregations. It has always seemed a little strange to me how these are functions instead of methods (like most things in pandas).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127626109",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-127626109",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 127626109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzYyNjEwOQ==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T14:13:13Z",
    "updated_at": "2015-08-04T14:13:13Z",
    "author_association": "NONE",
    "body": "I took into account your remarks and comments.\nNow the methods are gathered into separate namespaces (ewm, rolling and expanding) and a check is made whether a Serie is of dtype int of float and a DataFrame contains at least one dtype int or float.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129475049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-129475049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 129475049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTQ3NTA0OQ==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-10T14:31:06Z",
    "updated_at": "2015-08-10T14:31:06Z",
    "author_association": "NONE",
    "body": "@jreback, thank you for the PandasDelegate pointer.\n\nI checked into that possibility.\n\nIf I understood correctly, it consists in subclassing PandasDelegate with a\nclass that performs the computation for each delegated name. Then we have to\ncall the method class _add_delegate_accessors to indicate from which class to\ncopy the methods signatures and docstring.\n\nI my situation, since I don't propose to copy some methods from one delegate\nclass, it looks not really well suited.\n\nFor instance, to allow to use df.rolling.mean, I would need to create an\nintermediate class RollingMethods with the method mean (avg, count, ...) that\nwould wrap the rolling_mean (rolling_avg, rolling_count, ...) methods, then\ncreate a delegator class RollingDelegator that would implement the abstract\nmethod _delegate_method inherited from PandasDelegate.\n\nThen, I would have to call RollingDelegator._add_delegate_accessors(delegate=RollingMethods, accessors=[...the list of rolling methods...], typ=\"method\").\n\nFinally, I would have to add to do the same thing as in the previous patch:\ncreate an accessor for the rolling namespace that would check the dtypes and\nreturn an instanciated RollingDelegator.\n\nI would also need to do that for expanding and ewm.\n\nI think I can do this, but it results in much more code that is not more\nreadable.\n\nI may have understood something wrong. If so, could you please give me some hint on how to use PandasDelegate?\n\nThanks again for your help.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129484861",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-129484861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 129484861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTQ4NDg2MQ==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-10T15:08:07Z",
    "updated_at": "2015-08-10T15:08:07Z",
    "author_association": "NONE",
    "body": "I pushed a version making use of the PandasDelegate mechanism. I am not sure I use it correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131645344",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-131645344",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 131645344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTY0NTM0NA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T00:34:14Z",
    "updated_at": "2015-08-17T00:34:14Z",
    "author_association": "MEMBER",
    "body": "Just to point out another possible API here --\n\nInstead of writing `df.rolling.mean(periods=2)`, we might move the periods argument earlier: `df.rolling(periods=2).mean()`. `df.rolling(periods=2)` could return a `Rolling` object with a groupby like API (e.g., supporting iteration and automatic method dispatch).\n\nConceptually, this makes some sense -- rolling window operations are very similar to grouped operations with overlapping groups. One possible downside is that methods off an accessor property are more discoverable -- IPython can do direct auto-complete.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131646093",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-131646093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 131646093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTY0NjA5Mw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T00:49:07Z",
    "updated_at": "2015-08-17T00:49:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer +1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131703215",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-131703215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 131703215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTcwMzIxNQ==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T07:17:11Z",
    "updated_at": "2015-08-17T07:17:11Z",
    "author_association": "NONE",
    "body": "@shoyer, I like the idea. Nevertheless, it looks way more ambitious than this\npull request.\n\nThe purpose of this pull request is to make the functions in the moments\nnamespace available in the dataframe and series namespaces. It was based on the\nobservation that all those functions take a dataframe or serie as first argument\nand hence are particularly designed to work like instance methods. It then does\nno more that inspecting the moments namespace and make its methods accessible\nfrom dataframe and series instances.\n\nYou are now suggesting to change the API. I agree with this idea, but I think it\nshould be the purpose of another issue that could be entitled \"Refactor the\nmoments namespace\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131787746",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-131787746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 131787746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTc4Nzc0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T11:28:52Z",
    "updated_at": "2015-08-17T11:28:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "this need a test along the lines of this: https://github.com/pydata/pandas/blob/master/pandas/tests/test_series.py#L79\n\nIOW you are testing that the `__dir__` is correct (and that they execute the same as the `pd.*` functions.\n\nI think your impl is fine. We can discuss doing a `Rolling` in another issue. Its a nice idea but is a pretty big expansion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131885959",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-131885959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 131885959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTg4NTk1OQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T16:44:23Z",
    "updated_at": "2015-08-17T16:44:23Z",
    "author_association": "MEMBER",
    "body": "@Konubinix @jreback I think this change itself is a great idea, but I'm raising the issue of the alternate API for a few reasons --\n1. it's generally better to hold off API changes if they would cause awkward compatibility issues with a different, superior API that we might want to use in the future (that isn't really the case here since `.rolling` as an accessor and as a method can co-exist).\n2. from a marketing perspective, it's awkward to make APIs that may only live for a few versions\n3. it might not actually be that hard to make a basic `Rolling` object. I would certainly rather have a `Rolling` implementation missing some features we'd like for the final version (e.g., with only support for aggregation for now) than a new API that we might immediately deprecate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132194675",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132194675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132194675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjE5NDY3NQ==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T12:41:19Z",
    "updated_at": "2015-08-18T12:42:11Z",
    "author_association": "NONE",
    "body": "@shoyer, could you be more specific about the missing features with the proposed API?\n\nIf in understand correctly, the rolling_XXX(df, window_size, ...) API already exists in pandas.stats.moments. By design, this patch does not create a new API, it only makes the pandas.stats.moments API accessible directly through Dataframe (allowing one to write df.rolling.XXX(window_size, ...) instead of pd.rolling_XXX(df, window_size, ...)).\n\nI have the feeling that any change of API should be done directly in the pandas.stats.moments library. This change would then be almost automatically visible in the Dataframes.\n\nThis is the reason why I guess that the change of API using a Rolling object should be done in a separate work. This change would allow the user to write something like pd.rolling(window_size).mean(df)\n\nMay be this should be done before making the API available in Dataframes. Unfortunately, I don't think I will have time to code this one.\n\n@shoyer, could you propose something?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132197068",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132197068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132197068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjE5NzA2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T12:52:21Z",
    "updated_at": "2015-08-18T12:52:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Konubinix a rolling object would be useful for things like this:\n\n```\nr = s.rolling(window=10)\nr.mean()\nr.std()\n```\n\nIOW doing a repeated computation on a logical object, very similar to groupby.\n\nThe problem is that\n\n`s.rolling` is a nice way of creating a `Rolling` object, and not just a method call, so we'd end up doing this change, then _changing_ again, which is not a great option.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132200973",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132200973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132200973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjIwMDk3Mw==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T13:12:34Z",
    "updated_at": "2015-08-18T13:13:31Z",
    "author_association": "NONE",
    "body": "@jreback, in that sense, I suppose it would also be usefull to do things like:\n\n``` python\nr = pandas.rolling(s, window=10)\nr.mean()\nr.std()\n```\n\nSimilar to the way the groupby function is also accessible via:\n\n``` python\ng = pandas.groupby(s, by)\ng.mean()\ng.std()\n```\n\nAm I right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132209668",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132209668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132209668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjIwOTY2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T13:40:00Z",
    "updated_at": "2015-08-18T13:40:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, I suppose those should be supported, although they are pretty non-intuitive. (all these do it call the method on the object anyhow). \n\nThough if we do change this in the future I would simply deprecate and move to a new more consistent syntax.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132292192",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132292192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132292192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjI5MjE5Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T17:42:15Z",
    "updated_at": "2015-08-19T18:39:27Z",
    "author_association": "MEMBER",
    "body": "I don't think there's any value in supporting calling `pandas.Rolling` directly.\n\nHere's a sketch of what I was thinking:\n\n``` python\nclass DataFrame:\n    def rolling(self, window,  freq=None, center=False, how=None, axis='index'):\n        # note that axis is not currently a valid parameter for most rolling aggregations,\n        # so perhaps we should skip it for now \n         return Rolling(self, window, freq, center, how, axis)\n\nclass Rolling:\n    def __init__(self, window, freq, center, how):\n        self.window = window\n        self.freq = freq\n        self.center = center\n        self.how = how\n\n    def mean(self, min_periods=None):\n        return pd.rolling_mean(self.window, min_periods, self.freq, self.center, self.how)\n\n    # likewise for the median, sum, var, etc.\n```\n\nThis lets you write things like `df.rolling(window=5).mean()`\n\nThe main area where this breaks down is that each of the rolling aggregation functions accepts a `freq` argument for resampling, and uses a different `how` method to control how the resampling is done. I'm not sure it makes sense for different aggregation functions to resample differently if they're all dispatched from the same method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132473380",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132473380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132473380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjQ3MzM4MA==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-19T07:22:46Z",
    "updated_at": "2015-08-19T07:22:46Z",
    "author_association": "NONE",
    "body": "@shoyer, It sounds like a good idea. Are you sure about the parameters of the rolling property?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132738048",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132738048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132738048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjczODA0OA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-19T18:43:47Z",
    "updated_at": "2015-08-19T18:43:47Z",
    "author_association": "MEMBER",
    "body": "Oops, `rolling` should not be a property in my version -- just fixed my comment.\n\nHere's the full set of rolling window functions:\nhttp://pandas.pydata.org/pandas-docs/stable/api.html#standard-moving-window-functions\n\n`rolling_corr` and `rolling_cov` don't fit the same pattern as the others -- they'll need to remain only function calls.\n\n`rolling_window` also has a funny function signature that seems unlikely to fit on the generic `Rolling` without some API adjustments. This is probably worth doing but maybe not immediately necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132939304",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-132939304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 132939304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjkzOTMwNA==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T08:39:16Z",
    "updated_at": "2015-08-20T08:39:16Z",
    "author_association": "NONE",
    "body": "By reading the code, we can see that the functions that follow the same pattern are specific cases of  _rolling_moment (as created by _rolling_func). They are rolling_max, rolling_min, rolling_sum, rolling_mean, rolling_median, rolling_std, rolling_var, rolling_skew, rolling_kurt.\n\nWe could do the same for expanding_XXX but not ewmXXX that have specific code for each case.\n\nAlso, I think that rolling_corr and rolling_cov could also take advantage of a more object oriented API.\n\n``` python\ndf1.rolling(window=50).cov(df2)\n```\n\nMay be we could at first provide the easy ones rolling_max, rolling_min... in an object oriented way and decide later how to provide the other ones.\n\n@shoyer, how did you come to this API split between **init** and mean? What would be wrong with the following implementation?\n\n``` python\nclass Rolling:\n    def __init__(self, window, freq, center, how, min_period):\n        self.window = window\n        self.freq = freq\n        self.center = center\n        self.how = how\n        self.min_period = min_period\n\n    def mean(self):\n        return pd.rolling_mean(self.window, self.min_periods, self.freq, self.center, self.how)\n   def max(self):\n         ...\n```\n\nMay be we could also provide both alternatives\n\n``` python\nclass Rolling:\n    def __init__(self, window, freq, center, how, min_period):\n        self.window = window\n        self.freq = freq\n        self.center = center\n        self.how = how\n        self.min_period = min_period\n\n    def mean(self, window=None, freq=None, center=None, how=None, min_period=None):\n        return pd.rolling_mean(window or self.window, min_periods or self.min_periods, freq or self.freq, center or self.center, how or self.how)\n   def max(self, window=None, freq=None, center=None, how=None, min_period=None):\n         ...\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/133053025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-133053025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 133053025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzA1MzAyNQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T15:33:41Z",
    "updated_at": "2015-08-20T15:33:41Z",
    "author_association": "MEMBER",
    "body": "> We could do the same for expanding_XXX but not ewmXXX that have specific code for each case.\n\nThis is just a detail of the current implementation. The functions have a very similar signature, so I think they could still be refactored to use a shared object.\n\n> `df1.rolling(window=50).cov(df2)`\n\nMy concern with this API for rolling cov is that it's not obvious whether df2 should have the same shape as df1 (which is what I think you intended) or as the window (which is arguably more consistent with how groupby already works). I would rather have something more obviously symmetric, e.g., `df1.rolling(window=50).cov('x', 'y')`.\n\n> @shoyer, how did you come to this API split between init and mean?\n\nThe part that controls setting up the window should go in `__init__` and the part the controls how to aggregate should go in `mean`. For example, suppose we make Rolling objects interable like GroupBy objects. Enough information should go in `__init__` that we could interate over each windowed view.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/147213552",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-147213552",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 147213552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzIxMzU1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-11T16:00:24Z",
    "updated_at": "2015-10-11T16:00:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Konubinix want to repurpose this to generate a `Rolling` grouper-like? (using @shoyer ) model\n\nSeems like a much more natural soln here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/147223478",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-147223478",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 147223478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzIyMzQ3OA==",
    "user": {
      "login": "Konubinix",
      "id": 1181438,
      "node_id": "MDQ6VXNlcjExODE0Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1181438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Konubinix",
      "html_url": "https://github.com/Konubinix",
      "followers_url": "https://api.github.com/users/Konubinix/followers",
      "following_url": "https://api.github.com/users/Konubinix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Konubinix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Konubinix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Konubinix/subscriptions",
      "organizations_url": "https://api.github.com/users/Konubinix/orgs",
      "repos_url": "https://api.github.com/users/Konubinix/repos",
      "events_url": "https://api.github.com/users/Konubinix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Konubinix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-11T17:33:27Z",
    "updated_at": "2015-10-11T17:33:48Z",
    "author_association": "NONE",
    "body": "@jreback. Yes I do. In my opinion, it would need to rework partly the stats library to be done properly. Unfortunately, I won't have time to do it myself in the near future. May be @shoyer could propose something?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/156827270",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10702#issuecomment-156827270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10702",
    "id": 156827270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjgyNzI3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-15T16:29:49Z",
    "updated_at": "2015-11-15T16:29:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #11603 \n"
  }
]
