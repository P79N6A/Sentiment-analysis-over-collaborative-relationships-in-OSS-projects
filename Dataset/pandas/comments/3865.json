[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19341937",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3865#issuecomment-19341937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3865",
    "id": 19341937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQxOTM3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T17:37:27Z",
    "updated_at": "2013-06-12T17:38:29Z",
    "author_association": "MEMBER",
    "body": "nothing except cython and numpy are getting installed because `FULL_DEPS` is not `true` for python 2.6. you need to either add FULL_DEPS=true to travis (really going to slow things down) or raise in the case that the user has not installed `lxml`. if `lxml` is not necessary then i would say find another way, but if that's too difficult or time-prohibitive i would just raise\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19342382",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3865#issuecomment-19342382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3865",
    "id": 19342382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQyMzgy",
    "user": {
      "login": "gliptak",
      "id": 50109,
      "node_id": "MDQ6VXNlcjUwMTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/50109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gliptak",
      "html_url": "https://github.com/gliptak",
      "followers_url": "https://api.github.com/users/gliptak/followers",
      "following_url": "https://api.github.com/users/gliptak/following{/other_user}",
      "gists_url": "https://api.github.com/users/gliptak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gliptak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gliptak/subscriptions",
      "organizations_url": "https://api.github.com/users/gliptak/orgs",
      "repos_url": "https://api.github.com/users/gliptak/repos",
      "events_url": "https://api.github.com/users/gliptak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gliptak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T17:44:49Z",
    "updated_at": "2013-06-12T17:44:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud  Phillip, would you have an example on checking on lxml being available? I will add that as an override to the tests requiring lxml. Thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19342640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3865#issuecomment-19342640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3865",
    "id": 19342640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQyNjQw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T17:49:09Z",
    "updated_at": "2013-06-12T17:51:07Z",
    "author_association": "MEMBER",
    "body": "sure. the \"generally accepted\" way to do this is to try to import the module catch the importerror if it is raised and then possibly raise another importerror with a more useful message or do something else. for example, i do something like the following in `pandas/io/html.py` to create a module global variable that allows me to check _at runtime_ (rather than import time) whether `lxml` has been installed. u can also assign after the import but i like to use `else` since it won't hide other exceptions that might occur in any code u put after the import statement.\n\n``` python\ntry:\n    import lxml\nexcept ImportError:\n    _HAS_LXML = False\nelse:\n    _HAS_LXML = True\n```\n\nnow the user doesn't see any errors and u can use the variable as u wish to do other things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19357902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3865#issuecomment-19357902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3865",
    "id": 19357902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzU3OTAy",
    "user": {
      "login": "gliptak",
      "id": 50109,
      "node_id": "MDQ6VXNlcjUwMTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/50109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gliptak",
      "html_url": "https://github.com/gliptak",
      "followers_url": "https://api.github.com/users/gliptak/followers",
      "following_url": "https://api.github.com/users/gliptak/following{/other_user}",
      "gists_url": "https://api.github.com/users/gliptak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gliptak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gliptak/subscriptions",
      "organizations_url": "https://api.github.com/users/gliptak/orgs",
      "repos_url": "https://api.github.com/users/gliptak/repos",
      "events_url": "https://api.github.com/users/gliptak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gliptak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T21:47:09Z",
    "updated_at": "2013-06-12T21:47:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @cpcloud, I made this change.\n"
  }
]
