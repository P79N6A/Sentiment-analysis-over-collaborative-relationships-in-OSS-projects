[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63973292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8869#issuecomment-63973292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8869",
    "id": 63973292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTczMjky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-21T14:02:03Z",
    "updated_at": "2014-11-21T14:02:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65141233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8869#issuecomment-65141233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8869",
    "id": 65141233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTQxMjMz",
    "user": {
      "login": "behzadnouri",
      "id": 1288998,
      "node_id": "MDQ6VXNlcjEyODg5OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/behzadnouri",
      "html_url": "https://github.com/behzadnouri",
      "followers_url": "https://api.github.com/users/behzadnouri/followers",
      "following_url": "https://api.github.com/users/behzadnouri/following{/other_user}",
      "gists_url": "https://api.github.com/users/behzadnouri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/behzadnouri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/behzadnouri/subscriptions",
      "organizations_url": "https://api.github.com/users/behzadnouri/orgs",
      "repos_url": "https://api.github.com/users/behzadnouri/repos",
      "events_url": "https://api.github.com/users/behzadnouri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/behzadnouri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T21:51:44Z",
    "updated_at": "2014-12-01T21:51:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI [this function](https://github.com/pydata/pandas/blob/e463818e69edee64a277ce97c89999f0c898dd7c/pandas/core/groupby.py#L3245) is causing the problem. It disregards the value of `DataFrameGroupBy.as_index` ( or `self.as_index` inside the function code. )\n\nit is also causing other issues:\n\n```\nIn [43]: df\nOut[43]:\n   jim joe  jolie\n0    0   a     84\n1    1   b     23\n2    2   c     25\n\nIn [44]: df.groupby(['jim', 'joe']).agg('mean')\nOut[44]:\n         jolie\njim joe\n0   a       84\n1   b       23\n2   c       25\n\nIn [45]: df['joe'] = df['joe'].astype('category')\n\nIn [46]: df.groupby(['jim', 'joe']).agg('mean')\nOut[46]:\n         jolie\njim joe\n0   a       84\n    b      NaN\n    c      NaN\n1   a      NaN\n    b       23\n    c      NaN\n2   a      NaN\n    b      NaN\n    c       25\n```\n\nalso, because the column goes into MultiIndex at some point, category type is lost regardless of the value of `as_index` (does it matter?!):\n\n```\nIn [47]: df.dtypes\nOut[47]:\njim         int64\njoe      category\njolie       int64\ndtype: object\n\nIn [48]: df.groupby(['jim', 'joe']).agg('mean').reset_index().dtypes\nOut[48]:\njim        int64\njoe       object\njolie    float64\ndtype: object\n\nIn [49]: df.groupby(['jim', 'joe'], as_index=False).agg('mean').dtypes\nOut[49]:\njim       int64\njoe      object\njolie     int64\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65191434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8869#issuecomment-65191434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8869",
    "id": 65191434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTkxNDM0",
    "user": {
      "login": "aimboden",
      "id": 8589139,
      "node_id": "MDQ6VXNlcjg1ODkxMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8589139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aimboden",
      "html_url": "https://github.com/aimboden",
      "followers_url": "https://api.github.com/users/aimboden/followers",
      "following_url": "https://api.github.com/users/aimboden/following{/other_user}",
      "gists_url": "https://api.github.com/users/aimboden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aimboden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aimboden/subscriptions",
      "organizations_url": "https://api.github.com/users/aimboden/orgs",
      "repos_url": "https://api.github.com/users/aimboden/repos",
      "events_url": "https://api.github.com/users/aimboden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aimboden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T07:12:51Z",
    "updated_at": "2014-12-02T07:13:16Z",
    "author_association": "NONE",
    "body": "@behzadnouri Thanks for looking into it. \n\nThis behaviour (keep the cartesian product) is expected when grouping with a categorical column, see #8138 \n\n``` python\nIn [43]: df\nOut[43]:\n   jim joe  jolie\n0    0   a     84\n1    1   b     23\n2    2   c     25\n\nIn [44]: df.groupby(['jim', 'joe']).agg('mean')\nOut[44]:\n         jolie\njim joe\n0   a       84\n1   b       23\n2   c       25\n\nIn [45]: df['joe'] = df['joe'].astype('category')\n\nIn [46]: df.groupby(['jim', 'joe']).agg('mean')\nOut[46]:\n         jolie\njim joe\n0   a       84\n    b      NaN\n    c      NaN\n1   a      NaN\n    b       23\n    c      NaN\n2   a      NaN\n    b      NaN\n    c       25\n```\n\nAs for your second point (losing categorical dtype), I don't think it makes a difference right now, but it could bite us when/if a categorical index #7629 is implemented. I would then expect the `sort=True` argument to sort the multi-index according to the categorical ordering, which is lost atm.\n"
  }
]
