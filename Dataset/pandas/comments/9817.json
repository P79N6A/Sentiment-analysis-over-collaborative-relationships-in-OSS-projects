[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89870841",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-89870841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 89870841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODcwODQx",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T00:05:04Z",
    "updated_at": "2015-04-06T00:05:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is basically suggesting we introduce a float tolerance for alignment, because your two values _aren't_ the same:\n\n```\n>>> repr(new_index.values[6])\n'0.60000000000000009'\n>>> repr(new_index2.values[1])\n'0.59999999999999998'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89871005",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-89871005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 89871005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODcxMDA1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T00:06:33Z",
    "updated_at": "2015-04-06T00:06:59Z",
    "author_association": "MEMBER",
    "body": "The problem here is unfortunately rather inherent in the nature of floating point numbers. In general, producing the same set of floating point numbers two different ways will produce numbers that are not exactly equal.\n\nWe could do more in pandas to handle floating point tolerance automatically, though the exact implementation remains to be worked out and there are some potential performance issues. See here for more discussion: https://github.com/pydata/pandas/issues/9530\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89889816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-89889816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 89889816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODg5ODE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T02:07:32Z",
    "updated_at": "2015-04-06T02:07:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's what getting [called](https://github.com/pydata/pandas/blob/master/pandas/src/generated.pyx#L8901)\nas these are both `monotonic`. Would need a tol as @shoyer and @dsm054 point out for these types of comparisons.\n\nNot a bad idea, but would require a bit of effort.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89889909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-89889909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 89889909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODg5OTA5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T02:09:25Z",
    "updated_at": "2015-04-06T02:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do this to in-effect get what you want. This would need a tolerance as well (in the reindexer) so make it robust.\n\n```\nIn [28]: target, indexer = new_index.reindex(new_index2,method='nearest')\n\nIn [29]: target\nOut[29]: Float64Index([0.5, 0.6, 0.7, 0.8, 0.9], dtype='float64')\n\nIn [30]: indexer\nOut[30]: array([5, 6, 7, 8, 9])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/115465360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-115465360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 115465360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQ2NTM2MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-26T02:26:57Z",
    "updated_at": "2015-06-26T02:26:57Z",
    "author_association": "MEMBER",
    "body": "In the process of working this out in #10411.\n\nIs there any safe default threshold to use when aligning float indexes?\n\nSome possibilities:\n1. A fixed constant, e.g,. `1e-9`\n2. A constant that depends on index values, e.g., `1e-9 * (dx.max() - idx.min())`.\n3. A user settable tolerance in the `Float64Index` constructor, e.g., `Float64Index(values, tol=1e-9)`\n\nFor 2 and 3, how do we handle indexes with different tolerances? Just use the larger one, I guess?\n\nMy sense is that this may be unsolvable -- probably better to force users to be explicit and supply a tolerance manually. Unfortunately, automatic alignment comes up all the time in pandas, and there's no easy way to control the tolerances in these cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/188834482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-188834482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 188834482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODgzNDQ4Mg==",
    "user": {
      "login": "Dimchord",
      "id": 9883328,
      "node_id": "MDQ6VXNlcjk4ODMzMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9883328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dimchord",
      "html_url": "https://github.com/Dimchord",
      "followers_url": "https://api.github.com/users/Dimchord/followers",
      "following_url": "https://api.github.com/users/Dimchord/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dimchord/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dimchord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dimchord/subscriptions",
      "organizations_url": "https://api.github.com/users/Dimchord/orgs",
      "repos_url": "https://api.github.com/users/Dimchord/repos",
      "events_url": "https://api.github.com/users/Dimchord/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dimchord/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-25T15:19:37Z",
    "updated_at": "2016-02-25T15:19:37Z",
    "author_association": "NONE",
    "body": "Have a look at numpy.isclose(). There are actually two tolerances, a relative (rtol, default 1e-05) and an absolute tolerance (atol, default 1e-08). From the documentation:\n\nFor finite values, isclose uses the following equation to test whether two floating point values are equivalent.\n\nabsolute(a - b) <= (atol + rtol \\* absolute(b))\nThe above equation is not symmetric in a and b, so that isclose(a, b) might be different from isclose(b, a) in some rare cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/188852865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9817#issuecomment-188852865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9817",
    "id": 188852865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODg1Mjg2NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-25T15:59:42Z",
    "updated_at": "2016-02-25T15:59:42Z",
    "author_association": "MEMBER",
    "body": "@Dimchord we added a `tolerance` argument into reindexing in the above mentioned pull requests -- it's in the latest version of pandas. We still haven't added a default tolerance for floating point indexes, though.\n"
  }
]
