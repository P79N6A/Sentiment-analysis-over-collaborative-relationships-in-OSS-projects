[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/48589922",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7715#issuecomment-48589922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7715",
    "id": 48589922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTg5OTIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-10T10:47:26Z",
    "updated_at": "2014-07-10T10:47:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "sounds reasonable. The reason this behavior is that the default mode is `a` (append), to avoid certain issues with concurrency with some older pytables. iow. you can open a file multiple times (even across processes) no problem, but (even though this seems backward), opening in append mode with always work, but opening in read-only mode _can_ raise if the file is opened in append mode elsewhere.\n\nso you can open with `mode='r'` and this should raise`IOError`` if it doesn't exist.\n\nthe api change is to do the same even if the mode is append AND its called from `read_hdf` AND the file doesn't exist.\n\npull-requests are welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56550525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7715#issuecomment-56550525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7715",
    "id": 56550525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTUwNTI1",
    "user": {
      "login": "jbradish",
      "id": 2265497,
      "node_id": "MDQ6VXNlcjIyNjU0OTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2265497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbradish",
      "html_url": "https://github.com/jbradish",
      "followers_url": "https://api.github.com/users/jbradish/followers",
      "following_url": "https://api.github.com/users/jbradish/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbradish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbradish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbradish/subscriptions",
      "organizations_url": "https://api.github.com/users/jbradish/orgs",
      "repos_url": "https://api.github.com/users/jbradish/repos",
      "events_url": "https://api.github.com/users/jbradish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbradish/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T16:41:52Z",
    "updated_at": "2014-09-23T16:41:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was looking around the issues and this one popped out a relatively simple to fix. I'm new in pandas dev, so forgive me if I'm misunderstanding. Is the fix/change proposal for this simply some of kind file existence check in https://github.com/pydata/pandas/blob/master/pandas/io/pytables.py#L299 before we create an entire HDFStore object? Or is there still a need to create an HDFStore object, but to pop an IOError instead of a KeyError? When would we want to still create a HDFStore object, even if read_hdf fails?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56552384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7715#issuecomment-56552384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7715",
    "id": 56552384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTUyMzg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T16:54:22Z",
    "updated_at": "2014-09-23T16:54:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "your first suggestion is right. if the file doesn't exist (and you are in read_hdf), then don't create it, but raise an IOError\n"
  }
]
