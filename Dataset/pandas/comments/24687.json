[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452832479",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24687#issuecomment-452832479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24687",
    "id": 452832479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgzMjQ3OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T19:46:58Z",
    "updated_at": "2019-01-09T19:46:58Z",
    "author_association": "MEMBER",
    "body": "Using a tuple as a label is generally not supported, but if you want to take a look PRs are always welcome"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452832823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24687#issuecomment-452832823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24687",
    "id": 452832823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgzMjgyMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T19:47:55Z",
    "updated_at": "2019-01-09T19:47:55Z",
    "author_association": "MEMBER",
    "body": "cc @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453158773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24687#issuecomment-453158773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24687",
    "id": 453158773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzE1ODc3Mw==",
    "user": {
      "login": "summonholmes",
      "id": 17303881,
      "node_id": "MDQ6VXNlcjE3MzAzODgx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17303881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/summonholmes",
      "html_url": "https://github.com/summonholmes",
      "followers_url": "https://api.github.com/users/summonholmes/followers",
      "following_url": "https://api.github.com/users/summonholmes/following{/other_user}",
      "gists_url": "https://api.github.com/users/summonholmes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/summonholmes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/summonholmes/subscriptions",
      "organizations_url": "https://api.github.com/users/summonholmes/orgs",
      "repos_url": "https://api.github.com/users/summonholmes/repos",
      "events_url": "https://api.github.com/users/summonholmes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/summonholmes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T16:26:21Z",
    "updated_at": "2019-01-11T15:15:41Z",
    "author_association": "NONE",
    "body": "For conda pandas 0.23.4,  I added `print(target._ndarray_values)` on line 3259 before the return statement in function `def get_indexer(self, target, method=None, limit=None, tolerance=None)` for file 'miniconda3⁩/envs⁩/⁨pandas_stable/lib/python3.7/site-packages/pandas⁩/core⁩/indexes⁩/base.py'.   I noticed that on a successful run, the entries will look like this:\r\n```\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[]\r\n['Moth']\r\n[(((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna'), 'Moth')]\r\n['Moth']\r\n[(((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna'), 'Moth')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna')]\r\n['Moth']\r\n['Moth']\r\n```\r\n![picture5](https://user-images.githubusercontent.com/17303881/50982133-7f1bfa00-14ca-11e9-81ca-7920b90f741a.png)\r\n\r\nOn the failure, notice the last line:\r\n```\r\n[(('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')) 'Tuna']\r\n[(('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')) 'Tuna']\r\n[(('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')) 'Tuna']\r\n['Moth']\r\n['Tuna']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n['Tuna']\r\n[((('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')), 'Tuna') 'Moth']\r\n[(('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')) 'Tuna' 'Moth']\r\n[(('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog')) 'Tuna' 'Moth']\r\n[[['Turtle' 'Chicken']\r\n  [('Man', 'Monkey') 'Dog']]]\r\n```\r\nNote the nested list.  \r\n\r\nThe original index prints as `Index([[['Turtle', 'Chicken'], [('Man', 'Monkey'), 'Dog']]], dtype='object'`.\r\n\r\nI'm taking a look at `def _ensure_index(index_like, copy=False):` to see if I can find out why it's failing.  So far, it looks like the Cython function `clean_index_list()` is encountering an edge case.  You can reproduce this edge case by running the following code:\r\n```python\r\nfrom pandas._libs import lib\r\n\r\nlib.clean_index_list([(('Turtle', 'Chicken'), (('Man', 'Monkey'), 'Dog'))])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454640697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24687#issuecomment-454640697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24687",
    "id": 454640697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY0MDY5Nw==",
    "user": {
      "login": "summonholmes",
      "id": 17303881,
      "node_id": "MDQ6VXNlcjE3MzAzODgx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17303881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/summonholmes",
      "html_url": "https://github.com/summonholmes",
      "followers_url": "https://api.github.com/users/summonholmes/followers",
      "following_url": "https://api.github.com/users/summonholmes/following{/other_user}",
      "gists_url": "https://api.github.com/users/summonholmes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/summonholmes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/summonholmes/subscriptions",
      "organizations_url": "https://api.github.com/users/summonholmes/orgs",
      "repos_url": "https://api.github.com/users/summonholmes/repos",
      "events_url": "https://api.github.com/users/summonholmes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/summonholmes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T03:41:02Z",
    "updated_at": "2019-01-16T03:41:02Z",
    "author_association": "NONE",
    "body": "While this may have been the first issue opened regarding the tuple labeling problem, discussion is more relevant in #24688, #24702, and #24783.  Closing now."
  }
]
