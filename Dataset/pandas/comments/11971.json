[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/169373610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11971#issuecomment-169373610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11971",
    "id": 169373610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTM3MzYxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T16:14:12Z",
    "updated_at": "2016-01-06T16:14:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "if you have a single dtype, answer it is completely free. However if you have multiple dtypes it is a new object. As by-definition you are merging dtypes\n\ne.g. single dtyped\n\n```\nIn [1]: df = DataFrame(np.random.randn(10,2))\n\nIn [2]: df.dtypes \nOut[2]: \n0    float64\n1    float64\ndtype: object\n\nIn [3]: df.T.dtypes\nOut[3]: \n0    float64\n1    float64\n2    float64\n3    float64\n4    float64\n5    float64\n6    float64\n7    float64\n8    float64\n9    float64\ndtype: object\n\nIn [4]: df.T.values.base\nOut[4]: \narray([[ 0.30803004, -0.94232737],\n       [ 1.50955313, -0.4455662 ],\n       [-0.64048623,  0.51302425],\n       [-0.60639251, -0.08951738],\n       [-0.24218155,  0.70858808],\n       [ 1.77053805, -1.15665856],\n       [-1.39496727, -0.08894274],\n       [ 0.67712795, -0.82811405],\n       [-2.17665089,  0.05097208],\n       [ 0.5035121 ,  1.36882624]])\n```\n\nmulti dtype.\n\n```\nIn [5]: df = DataFrame(np.random.randn(10,2))\n\nIn [6]: df[2] = 'foo'\n\nIn [7]: df.dtypes\nOut[7]: \n0    float64\n1    float64\n2     object\ndtype: object\n\nIn [8]: df.T.dtypes\nOut[8]: \n0    object\n1    object\n2    object\n3    object\n4    object\n5    object\n6    object\n7    object\n8    object\n9    object\ndtype: object\n\nIn [9]: df.T.head()\nOut[9]: \n          0         1         2        3         4          5         6         7         8         9\n0 -0.365722   0.17518  0.139114 -1.21657  0.656086  -0.970256  0.120641  -2.25137  0.536124   1.44172\n1  0.381983 -0.889984 -0.781044   0.9548  -0.87885 -0.0581726  -1.26884 -0.215398  -1.14487 -0.393557\n2       foo       foo       foo      foo       foo        foo       foo       foo       foo       foo\n\n```\n\nA DataFrame is like a dict of Series (not exactly but for this purpose its close enough). When you transpose you are creating new Series that encompass a row. Since a Series is single-dtyped it has to accomodate all things in that row.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/169374168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11971#issuecomment-169374168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11971",
    "id": 169374168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTM3NDE2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T16:15:49Z",
    "updated_at": "2016-01-06T16:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This IS implementation specific. But unless you have a back-end that accommodate BOTH column storage & row storage then this is quite difficult.\n"
  }
]
