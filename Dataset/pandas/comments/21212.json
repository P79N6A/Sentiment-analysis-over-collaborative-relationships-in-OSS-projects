[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392198231",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21212#issuecomment-392198231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21212",
    "id": 392198231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE5ODIzMQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-25T21:58:58Z",
    "updated_at": "2018-05-25T23:18:45Z",
    "author_association": "NONE",
    "body": "Hello @WillAyd! Thanks for updating the PR.\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on May 25, 2018 at 23:18 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392200696",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21212#issuecomment-392200696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21212",
    "id": 392200696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjIwMDY5Ng==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-25T22:12:08Z",
    "updated_at": "2018-05-25T22:12:08Z",
    "author_association": "MEMBER",
    "body": "On review I don't think this is a bug with NumPy - the default quicksort implementation is just not stable (and documented as such), but the code here assumes it. Learned something new today...\r\n\r\nFWIW there are a few instances in `hashtable.pyx` and `index.pyx` which use the default quicksort implementation. Not saying these are an issue but may be worth closer review if we notice strange behavior elsewhere"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392211611",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21212#issuecomment-392211611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21212",
    "id": 392211611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjIxMTYxMQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-05-25T23:18:56Z",
    "updated_at": "2018-05-26T01:49:27Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21212?src=pr&el=h1) Report\n> Merging [#21212](https://codecov.io/gh/pandas-dev/pandas/pull/21212?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/f6abb6148c8dc14e6279f31f2e620ecf52822107?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21212/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/21212?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #21212   +/-   ##\n=======================================\n  Coverage   91.84%   91.84%           \n=======================================\n  Files         153      153           \n  Lines       49505    49505           \n=======================================\n  Hits        45466    45466           \n  Misses       4039     4039\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.23% <ø> (ø)` | :arrow_up: |\n| #single | `41.88% <ø> (ø)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21212?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21212?src=pr&el=footer). Last update [f6abb61...617ae08](https://codecov.io/gh/pandas-dev/pandas/pull/21212?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392223968",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21212#issuecomment-392223968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21212",
    "id": 392223968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjIyMzk2OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-26T01:08:28Z",
    "updated_at": "2018-05-26T01:08:28Z",
    "author_association": "MEMBER",
    "body": "ASVs below - I obviously didn't improve anything here but seems in line with all other methods\r\n\r\n```bash\r\n       before           after         ratio\r\n     [dc02831f]       [f6abb614]\r\n-         418±7μs          380±5μs     0.91  groupby.GroupByMethods.time_dtype_as_field('int', 'prod', 'transformation')\r\n-        455±10μs          410±7μs     0.90  groupby.GroupByMethods.time_dtype_as_group('float', 'head', 'direct')\r\n-         180±3μs          162±6μs     0.90  groupby.GroupByMethods.time_dtype_as_field('int', 'shift', 'direct')\r\n-       158±0.6μs          141±4μs     0.89  groupby.GroupByMethods.time_dtype_as_field('float', 'prod', 'direct')\r\n-         251±8μs          221±4μs     0.88  groupby.GroupByMethods.time_dtype_as_group('float', 'first', 'transformation')\r\n-         471±3μs          414±5μs     0.88  groupby.GroupByMethods.time_dtype_as_field('float', 'nunique', 'transformation')\r\n-         210±3μs          183±9μs     0.88  groupby.GroupByMethods.time_dtype_as_field('int', 'last', 'direct')\r\n-        99.2±2μs       86.3±0.7μs     0.87  groupby.GroupByMethods.time_dtype_as_field('float', 'any', 'direct')\r\n-        251±10μs          217±5μs     0.87  groupby.GroupByMethods.time_dtype_as_group('float', 'first', 'direct')\r\n-         285±8μs          246±1μs     0.86  groupby.GroupByMethods.time_dtype_as_field('float', 'bfill', 'transformation')\r\n-         287±3μs        246±0.8μs     0.86  groupby.GroupByMethods.time_dtype_as_field('float', 'bfill', 'direct')\r\n-         229±4μs          196±7μs     0.85  groupby.GroupByMethods.time_dtype_as_field('int', 'max', 'direct')\r\n-         169±4μs         143±10μs     0.85  groupby.GroupByMethods.time_dtype_as_field('float', 'max', 'transformation')\r\n-         150±1μs         126±10μs     0.84  groupby.GroupByMethods.time_dtype_as_field('float', 'last', 'transformation')\r\n-         184±2ms        154±0.6ms     0.84  groupby.GroupByMethods.time_dtype_as_field('int', 'skew', 'direct')\r\n-         101±1μs       84.1±0.3μs     0.83  groupby.GroupByMethods.time_dtype_as_field('float', 'any', 'transformation')\r\n-         475±9μs         396±20μs     0.83  groupby.GroupByMethods.time_dtype_as_field('float', 'nunique', 'direct')\r\n-         253±1μs          211±1μs     0.83  groupby.GroupByMethods.time_dtype_as_field('int', 'var', 'direct')\r\n-        99.0±4μs       82.4±0.8μs     0.83  groupby.GroupByMethods.time_dtype_as_field('float', 'all', 'transformation')\r\n-           603ms       501±0.03ms     0.83  groupby.GroupByMethods.time_dtype_as_field('int', 'mad', 'transformation')\r\n-         622±7μs         515±30μs     0.83  groupby.GroupByMethods.time_dtype_as_field('float', 'cummin', 'direct')\r\n-         225±5μs          186±3μs     0.83  groupby.GroupByMethods.time_dtype_as_field('int', 'min', 'transformation')\r\n-       140±0.9ms        115±0.8ms     0.82  groupby.GroupByMethods.time_dtype_as_field('int', 'unique', 'direct')\r\n-        464±10μs          380±3μs     0.82  groupby.GroupByMethods.time_dtype_as_field('int', 'tail', 'transformation')\r\n-         130±1μs          106±8μs     0.82  groupby.GroupByMethods.time_dtype_as_field('int', 'count', 'transformation')\r\n-         100±1μs       81.2±0.2μs     0.81  groupby.GroupByMethods.time_dtype_as_field('float', 'all', 'direct')\r\n-     1.23±0.01ms        1000±10μs     0.81  groupby.GroupByMethods.time_dtype_as_field('int', 'value_counts', 'transformation')\r\n-         237±5μs          191±3μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'max', 'transformation')\r\n-         235±3μs          189±3μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'min', 'direct')\r\n-         360±4μs          289±4μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'ffill', 'transformation')\r\n-         257±2μs          206±2μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'var', 'transformation')\r\n-         330±5μs          265±3μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'std', 'direct')\r\n-         189±5ms          151±2ms     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'skew', 'transformation')\r\n-        485±20μs         388±20μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'nunique', 'transformation')\r\n-         438±4μs          349±1μs     0.80  groupby.GroupByMethods.time_dtype_as_field('int', 'sum', 'direct')\r\n-         100±2μs       79.6±0.8μs     0.79  groupby.GroupByMethods.time_dtype_as_field('int', 'all', 'transformation')\r\n-        95.6±3μs         75.9±5μs     0.79  groupby.GroupByMethods.time_dtype_as_field('int', 'all', 'direct')\r\n-         141±3ms        112±0.6ms     0.79  groupby.GroupByMethods.time_dtype_as_field('int', 'unique', 'transformation')\r\n-           603ms        478±0.4ms     0.79  groupby.GroupByMethods.time_dtype_as_field('int', 'mad', 'direct')\r\n-     1.26±0.03ms          997±5μs     0.79  groupby.GroupByMethods.time_dtype_as_field('int', 'value_counts', 'direct')\r\n-        447±20μs          351±2μs     0.79  groupby.GroupByMethods.time_dtype_as_field('int', 'sum', 'transformation')\r\n-         210±3μs          164±9μs     0.78  groupby.GroupByMethods.time_dtype_as_field('int', 'last', 'transformation')\r\n-         168±5μs          131±4μs     0.78  groupby.GroupByMethods.time_dtype_as_field('float', 'min', 'direct')\r\n-        477±10μs          371±4μs     0.78  groupby.GroupByMethods.time_dtype_as_field('int', 'median', 'direct')\r\n-        93.1±1μs         72.3±4μs     0.78  groupby.GroupByMethods.time_dtype_as_field('int', 'size', 'direct')\r\n-         335±2μs          260±3μs     0.77  groupby.GroupByMethods.time_dtype_as_field('int', 'std', 'transformation')\r\n-        736±10μs         565±10μs     0.77  groupby.GroupByMethods.time_dtype_as_field('int', 'cumsum', 'direct')\r\n-         200±2μs          153±2μs     0.77  groupby.GroupByMethods.time_dtype_as_field('float', 'median', 'direct')\r\n-         295±4μs          225±1μs     0.76  groupby.GroupByMethods.time_dtype_as_field('float', 'ffill', 'direct')\r\n-         281±5μs          213±1μs     0.76  groupby.GroupByMethods.time_dtype_as_field('float', 'ffill', 'transformation')\r\n-         161±1μs          122±7μs     0.76  groupby.GroupByMethods.time_dtype_as_field('float', 'prod', 'transformation')\r\n-         358±4μs          270±3μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'ffill', 'direct')\r\n-         400±8μs          301±2μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'mean', 'direct')\r\n-         486±5μs          365±2μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'nunique', 'direct')\r\n-        922±20μs         690±10μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'cumprod', 'direct')\r\n-        471±10μs          351±5μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'median', 'transformation')\r\n-     1.03±0.02ms          769±7μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'rank', 'direct')\r\n-         131±2μs         97.7±4μs     0.75  groupby.GroupByMethods.time_dtype_as_field('int', 'count', 'direct')\r\n-        719±20μs          535±2μs     0.74  groupby.GroupByMethods.time_dtype_as_field('int', 'cumsum', 'transformation')\r\n-     1.02±0.01ms          759±6μs     0.74  groupby.GroupByMethods.time_dtype_as_field('int', 'rank', 'transformation')\r\n-         269±7μs        200±0.8μs     0.74  groupby.GroupByMethods.time_dtype_as_field('float', 'cumcount', 'transformation')\r\n-         917±7μs          680±3μs     0.74  groupby.GroupByMethods.time_dtype_as_field('int', 'cumprod', 'transformation')\r\n-         352±2μs        260±0.5μs     0.74  groupby.GroupByMethods.time_dtype_as_field('int', 'bfill', 'direct')\r\n-         261±8μs        193±0.6μs     0.74  groupby.GroupByMethods.time_dtype_as_field('int', 'cumcount', 'transformation')\r\n-         358±2μs          264±6μs     0.74  groupby.GroupByMethods.time_dtype_as_field('int', 'bfill', 'transformation')\r\n-         156±6μs          115±2μs     0.73  groupby.GroupByMethods.time_dtype_as_field('float', 'mean', 'transformation')\r\n-        634±10μs          465±2μs     0.73  groupby.GroupByMethods.time_dtype_as_field('float', 'cumprod', 'transformation')\r\n-        676±20μs         490±10μs     0.73  groupby.GroupByMethods.time_dtype_as_field('float', 'cumsum', 'direct')\r\n-         224±1μs          163±1μs     0.72  groupby.GroupByMethods.time_dtype_as_field('int', 'first', 'direct')\r\n-        741±10μs         536±10μs     0.72  groupby.GroupByMethods.time_dtype_as_field('int', 'cummin', 'transformation')\r\n-         222±3μs        160±0.7μs     0.72  groupby.GroupByMethods.time_dtype_as_field('int', 'first', 'transformation')\r\n-         102±2μs       73.4±0.2μs     0.72  groupby.GroupByMethods.time_dtype_as_field('int', 'any', 'direct')\r\n-        644±20μs          465±2μs     0.72  groupby.GroupByMethods.time_dtype_as_field('float', 'cumsum', 'transformation')\r\n-         411±4μs          296±2μs     0.72  groupby.GroupByMethods.time_dtype_as_field('int', 'mean', 'transformation')\r\n-         150±3μs        108±0.3μs     0.72  groupby.GroupByMethods.time_dtype_as_field('float', 'last', 'direct')\r\n-       103±0.6μs       73.7±0.8μs     0.72  groupby.GroupByMethods.time_dtype_as_field('int', 'any', 'transformation')\r\n-           595ms          424±4ms     0.71  groupby.GroupByMethods.time_dtype_as_field('float', 'mad', 'direct')\r\n-        713±10μs         508±30μs     0.71  groupby.GroupByMethods.time_dtype_as_field('int', 'cummax', 'direct')\r\n-         162±1μs        115±0.7μs     0.71  groupby.GroupByMethods.time_dtype_as_field('float', 'first', 'direct')\r\n-           1.84s            1.30s     0.71  groupby.GroupByMethods.time_dtype_as_field('int', 'describe', 'transformation')\r\n-         184±3μs          130±2μs     0.71  groupby.GroupByMethods.time_dtype_as_field('int', 'shift', 'transformation')\r\n-           1.83s            1.29s     0.71  groupby.GroupByMethods.time_dtype_as_field('float', 'describe', 'transformation')\r\n-         162±4μs          115±1μs     0.71  groupby.GroupByMethods.time_dtype_as_field('float', 'first', 'transformation')\r\n-        637±10μs          450±6μs     0.71  groupby.GroupByMethods.time_dtype_as_field('float', 'cummax', 'direct')\r\n-        666±10μs          470±5μs     0.71  groupby.GroupByMethods.time_dtype_as_field('float', 'cumprod', 'direct')\r\n-         273±4μs          192±2μs     0.70  groupby.GroupByMethods.time_dtype_as_field('int', 'cumcount', 'direct')\r\n-           1.84s            1.29s     0.70  groupby.GroupByMethods.time_dtype_as_field('int', 'describe', 'direct')\r\n-        476±10μs        333±0.6μs     0.70  groupby.GroupByMethods.time_dtype_as_field('int', 'head', 'direct')\r\n-         447±3μs        311±0.8μs     0.70  groupby.GroupByMethods.time_dtype_as_field('float', 'head', 'transformation')\r\n-        456±10μs          315±1μs     0.69  groupby.GroupByMethods.time_dtype_as_field('float', 'head', 'direct')\r\n-           600ms          414±2ms     0.69  groupby.GroupByMethods.time_dtype_as_field('float', 'mad', 'transformation')\r\n-           1.85s            1.27s     0.69  groupby.GroupByMethods.time_dtype_as_field('float', 'describe', 'direct')\r\n-         166±2μs          113±2μs     0.68  groupby.GroupByMethods.time_dtype_as_field('float', 'mean', 'direct')\r\n-         214±2μs          143±1μs     0.67  groupby.GroupByMethods.time_dtype_as_field('float', 'median', 'transformation')\r\n-     1.08±0.08ms         565±60μs     0.52  groupby.GroupByMethods.time_dtype_as_field('int', 'sem', 'direct')\r\n-      1.35±0.2ms          605±8μs     0.45  groupby.GroupByMethods.time_dtype_as_field('int', 'pct_change', 'transformation')\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392627054",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21212#issuecomment-392627054",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21212",
    "id": 392627054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjYyNzA1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T01:20:42Z",
    "updated_at": "2018-05-29T01:20:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @WillAyd "
  }
]
