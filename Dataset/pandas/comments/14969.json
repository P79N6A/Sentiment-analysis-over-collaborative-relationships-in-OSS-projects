[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/268908457",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14969#issuecomment-268908457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14969",
    "id": 268908457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkwODQ1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-22T22:51:42Z",
    "updated_at": "2016-12-22T22:51:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "First, `.loc` is always using label-based indexing, it just looks like it's falling back to positional. I think this actually comes down to the ambiguity of `.loc[0, 0]`, which expands to `.loc[(0, 0)]`. Does that last `0` mean the columns or the second level of the index? I'll let Jeff chime in on what's correct here, but I suspect that pandas behaving as intended. I'll look through the docs...\r\n\r\nFor consistency, I'd recommend using an `IndexSlice`:\r\n\r\n```python\r\nIn [22]: df.loc[pd.IndexSlice[0, :], 0]\r\nOut[22]:\r\n            A         B         C         D         E\r\n0 A  0.874435  0.673136  0.681053  0.352759  0.829466\r\n  B  0.325829  0.646701  0.739708  0.914715  0.297058\r\n  C  0.239715  0.955735  0.503433  0.270841  0.346910\r\n  D  0.389404  0.322453  0.934790  0.889230  0.563052\r\n  E  0.562889  0.764895  0.459072  0.351296  0.054497\r\n\r\nIn [23]: df2.loc[pd.IndexSlice[0, :], 0]\r\nOut[23]:\r\n            0.00      0.25      0.50      0.75      1.00\r\n0 0.00  0.187160  0.124317  0.139404  0.014958  0.297874\r\n  0.25  0.688006  0.396273  0.032172  0.285215  0.054483\r\n  0.50  0.053673  0.777064  0.504307  0.698933  0.814912\r\n  0.75  0.873036  0.694500  0.305774  0.550135  0.281881\r\n  1.00  0.472582  0.803392  0.162467  0.299709  0.605152\r\n\r\n```\r\n\r\nUsing that removes the ambiguity, since you specify *all* the levels of the index:\r\n\r\n```python\r\nIn [26]: pd.IndexSlice[0, :], 0\r\nOut[26]: ((0, slice(None, None, None)), 0)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/268908996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14969#issuecomment-268908996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14969",
    "id": 268908996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkwODk5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-22T22:55:14Z",
    "updated_at": "2016-12-22T22:55:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "We do have the warning here: http://pandas-docs.github.io/pandas-docs-travis/advanced.html#using-slicers, which touches on it. The example you provided would make for a fantastic addition to the docs (again, assuming that pandas is doing the correct thing here)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/268910679",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14969#issuecomment-268910679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14969",
    "id": 268910679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkxMDY3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-22T23:06:52Z",
    "updated_at": "2016-12-22T23:06:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger is right, this is correct, passing ``df.loc[0,0]`` is not doing what you think it is as its ambiguous.\r\n\r\nHere's more clear indexing.\r\n```\r\nIn [10]: df.loc[(0,0.5):(0,0.75),:]\r\nOut[10]:\r\n               0                                                 1\r\n            0.00      0.25      0.50      0.75      1.00      0.00      0.25      0.50      0.75      1.00\r\n0 0.50  0.560134  0.095912  0.224510  0.726047  0.810821  0.379455  0.596147  0.454783  0.904792  0.129607\r\n  0.75  0.133021  0.106895  0.904825  0.901991  0.044659  0.715370  0.296965  0.097234  0.945662  0.610672\r\n```\r\n\r\nThe point is you have to be *very* explicit and specify all dimensions. There is a very large warning on purpose.\r\n\r\nSo will rerpose this as a doc issue if you would like to add something."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/268915816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14969#issuecomment-268915816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14969",
    "id": 268915816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkxNTgxNg==",
    "user": {
      "login": "relativistic",
      "id": 371039,
      "node_id": "MDQ6VXNlcjM3MTAzOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/371039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/relativistic",
      "html_url": "https://github.com/relativistic",
      "followers_url": "https://api.github.com/users/relativistic/followers",
      "following_url": "https://api.github.com/users/relativistic/following{/other_user}",
      "gists_url": "https://api.github.com/users/relativistic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/relativistic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/relativistic/subscriptions",
      "organizations_url": "https://api.github.com/users/relativistic/orgs",
      "repos_url": "https://api.github.com/users/relativistic/repos",
      "events_url": "https://api.github.com/users/relativistic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/relativistic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-22T23:48:39Z",
    "updated_at": "2016-12-22T23:48:39Z",
    "author_association": "NONE",
    "body": "Okay, thanks. I think I see what is happening then. It can't tell the difference between df.loc[(0,0)] and df.loc[(0),(0)], I'm guessing due to the syntax limitations of python itself. I assume I got my expected behavior when I used strings for the 2nd level because then pandas could tell which interpretation to use by context.\r\n\r\nMaybe more of a question for stackexchange, but while we're on topic,  @TomAugspurger's suggested syntax removes the first level from the columns from the output, but not the first level of the index.  I guess there is no way of doing this query while removing the first level from both?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/268917247",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14969#issuecomment-268917247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14969",
    "id": 268917247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkxNzI0Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-23T00:00:11Z",
    "updated_at": "2016-12-23T00:08:48Z",
    "author_association": "MEMBER",
    "body": "@relativistic You can also use `df.loc[(0,),0]` instead of `df2.loc[pd.IndexSlice[0,:],0]`, that does not preserve the first index level (but we should actually check the consisteny for such cases).\r\n\r\nPersonally, I think that `df.loc[0, 0]` should always expand to `df.loc[(0,), (0,)]`, and not to `df.loc[(0,0),]`. But I suppose this has long been that way .."
  }
]
