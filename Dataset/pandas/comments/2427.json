[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11012537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11012537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11012537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDEyNTM3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T19:52:43Z",
    "updated_at": "2012-12-04T19:52:43Z",
    "author_association": "NONE",
    "body": "reproduced on '0.10.0.dev-1f41f01'\n\n``` python\n<ipython-input-9-5e60f7374b4b> in <module>()\n      2 main_table=pd.load(\"main_table.pickle\")\n      3 xgXref_table=pd.load('xgXref_table.pickle')\n----> 4 combined_table = pd.merge(main_table, kgXref_table, how='left',\n      5                               left_index=True, left_on=['knownGene_name'\n      6                               ], right_on=['kgID'])\n\nNameError: name 'kgXref_table' is not defined\n\nIn [10]: import pandas as pd\n    ...: main_table=pd.load(\"main_table.pickle\")\n    ...: kgXref_table=pd.load('xgXref_table.pickle')\n    ...: combined_table = pd.merge(main_table, kgXref_table, how='left',\n    ...:                               left_index=True, left_on=['knownGene_name'\n    ...:                               ], right_on=['kgID'])\n---------------------------------------------------------------------------\nMemoryError                               Traceback (most recent call last)\n<ipython-input-10-05758b3e6dde> in <module>()\n      4 combined_table = pd.merge(main_table, kgXref_table, how='left',\n      5                               left_index=True, left_on=['knownGene_name'\n----> 6                               ], right_on=['kgID'])\n\n/home/user1/src/pandas/pandas/tools/merge.pyc in merge(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy)\n     34                          right_index=right_index, sort=sort, suffixes=suffixes,\n     35                          copy=copy)\n---> 36     return op.get_result()\n     37 if __debug__: merge.__doc__ = _merge_doc % '\\nleft : DataFrame'\n     38 \n\n/home/user1/src/pandas/pandas/tools/merge.pyc in get_result(self)\n    182 \n    183     def get_result(self):\n--> 184         join_index, left_indexer, right_indexer = self._get_join_info()\n    185 \n    186         # this is a bit kludgy\n\n/home/user1/src/pandas/pandas/tools/merge.pyc in _get_join_info(self)\n    258              right_indexer) = _get_join_indexers(self.left_join_keys,\n    259                                                  self.right_join_keys,\n--> 260                                                  sort=self.sort, how=self.how)\n    261 \n    262             if self.right_index:\n\n/home/user1/src/pandas/pandas/tools/merge.pyc in _get_join_indexers(left_keys, right_keys, sort, how)\n    440 \n    441     join_func = _join_functions[how]\n--> 442     return join_func(left_group_key, right_group_key, max_groups)\n    443 \n    444 \n\n/home/user1/src/pandas/pandas/algos.so in pandas.algos.left_outer_join (pandas/algos.c:44807)()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11013986",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11013986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11013986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDEzOTg2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T20:21:30Z",
    "updated_at": "2012-12-04T23:29:40Z",
    "author_association": "NONE",
    "body": "Perhaps a memory leak?\n\nAfter pickling the frames which are the args to to the failing merge,\nrunning the following from the commandline incrementally eats up \nall available memory, while each iteration succeeds.\n\n``` python\nimport pandas as pd\nimport time\n\nwhile True:\n    N=1000\n    main_table=pd.load(\"main_table.pickle\").ix[:N]\n    kgXref_table=pd.load('xgXref_table.pickle').ix[:N]\n    combined_table = pd.merge(main_table, kgXref_table, how='left',\n                              left_index=True, left_on=['knownGene_name'\n                              ], right_on=['kgID'])\n    del combined_table,kgXref_table,main_table\n    print(\"sleeping\")\n    time.sleep(5)\n```\n\n**edit:** this does not, so maybe unrelated\n**edit** : red herring, gc.collect takes care of it, and merge is not involved.\n\n``` python\nimport pandas as pd\nimport time\n\nN=1000\nmain_table=pd.load(\"main_table.pickle\").ix[:N]\nkgXref_table=pd.load('xgXref_table.pickle').ix[:N]\nwhile True:\n    combined_table = pd.merge(main_table, kgXref_table, how='left',\n                              left_index=True, left_on=['knownGene_name'\n                              ], right_on=['kgID'])\n    del combined_table\n    print(\"sleeping\")\n    time.sleep(5)    \n\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11014545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11014545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11014545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE0NTQ1",
    "user": {
      "login": "yarden",
      "id": 96318,
      "node_id": "MDQ6VXNlcjk2MzE4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/96318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarden",
      "html_url": "https://github.com/yarden",
      "followers_url": "https://api.github.com/users/yarden/followers",
      "following_url": "https://api.github.com/users/yarden/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarden/subscriptions",
      "organizations_url": "https://api.github.com/users/yarden/orgs",
      "repos_url": "https://api.github.com/users/yarden/repos",
      "events_url": "https://api.github.com/users/yarden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T20:34:38Z",
    "updated_at": "2012-12-04T20:34:38Z",
    "author_association": "NONE",
    "body": "Thanks for this. Could you please explain the difference between the two code snippets that may account for this? Looks like the top one repeatedly loads the tables, but that can't be the issue since the original code loads them only once. I am surprised they behave differently. (Also, are the `*.pickle` files just pickled dataframes corresponding to the two text files?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11015069",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11015069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11015069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE1MDY5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T20:49:43Z",
    "updated_at": "2012-12-04T20:50:20Z",
    "author_association": "NONE",
    "body": "I'm not sure it's even related,  an artifact of using the pickle files. It looks to me like\npd.merge keeps references to the joinees, so del'ing them does not allow them to be GC'd,\nI could be wrong\nThere are handy `pandas.load()`/`pandas.save()` functions (which use pickle) you can use to serialize pandas\nobjects, although pickle does not gurantee binary compat between pandas versions.  \nThe recipe you provided is better for debugging purposes.\n\nSorry I can't help more here, wesm will most likely look into this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11020084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11020084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11020084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDIwMDg0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T23:08:31Z",
    "updated_at": "2012-12-04T23:08:31Z",
    "author_association": "NONE",
    "body": "Here's a more reasonablea guess at what's going on.\nBoth columns you're joining on have many NaN's and the outer join creates \ntheir carteisan product:\n\n``` python\nimport pandas as pd\nmain_table=pd.load(\"main_table.pickle\")\nkgXref_table=pd.load('xgXref_table.pickle')\nprint len(main_table.knownGene_name.index)\nprint len(kgXref_table.kgID.index)\nmidx=main_table.knownGene_name.dropna()\nprint len(midx)\nkgidx=kgXref_table.kgID.dropna()\nprint len(kgidx)\n#main_table=main_table.ix[midx.index]\n#kgXref_table=kgXref_table.ix[kgidx.index]\n219220\n80921\n74017\n59153\n\n(219220-80921)*(74017-59153)\nOut[11]: 2055676336\n```\n\nThat's about 2 billion rows, and each row is many bytes. So a MemoryError is not unexpected\neven on a big machine.\n\nI modified your code to drop all rows for which the join columns are Nans and now the\nscript runs to completion. The modified bit is :\n\n``` python\n    print( 'Merging kgXref...')\n    t1 = time.time()\n    midx=main_table.knownGene_name.dropna()\n    kgidx=kgXref_table.kgID.dropna()\n    main_table=main_table.ix[midx.index]\n    kgXref_table=kgXref_table.ix[kgidx.index]\n\n    combined_table = pandas.merge(main_table, kgXref_table, how='left',\n                                  left_index=True, left_on=['knownGene_name'\n                                  ], right_on=['kgID'])  # use ensGene table keys\n    t2 = time.time()\n    print( '  - Merge took %.2f secs' % (t2 - t1))\n    # Output combined table\n    print( 'Outputting combined table...')\n```\n\nwhich produces 74018 rows.\n\n``` bash\nλ cat ensGene.combined.txt | wc -l\n74018\n```\n\nDepending on your specific needs, this may or may not be useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11020469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11020469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11020469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDIwNDY5",
    "user": {
      "login": "yarden",
      "id": 96318,
      "node_id": "MDQ6VXNlcjk2MzE4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/96318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarden",
      "html_url": "https://github.com/yarden",
      "followers_url": "https://api.github.com/users/yarden/followers",
      "following_url": "https://api.github.com/users/yarden/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarden/subscriptions",
      "organizations_url": "https://api.github.com/users/yarden/orgs",
      "repos_url": "https://api.github.com/users/yarden/repos",
      "events_url": "https://api.github.com/users/yarden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T23:20:47Z",
    "updated_at": "2012-12-04T23:20:47Z",
    "author_association": "NONE",
    "body": "Interesting, I had no idea it creates this cartesian product under the hood. Perhaps I am missing something, but I intended the join to work only on the left index and join on the two columns \"knownGene_name\" for the left df and \"kgID\" on the right frame. In that case, I'd expect that any entry where \"kgID\" is NaN would be skipped, since it cannot be joined to anything. Why is it computing the cartesian product in this case?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11020819",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11020819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11020819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDIwODE5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T23:32:17Z",
    "updated_at": "2012-12-04T23:32:17Z",
    "author_association": "NONE",
    "body": "It looks like for the purposes of a join, NaN is treated as a value. I agree that Nan handling \nshould at least have an option associated with it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11025337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11025337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11025337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDI1MzM3",
    "user": {
      "login": "yarden",
      "id": 96318,
      "node_id": "MDQ6VXNlcjk2MzE4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/96318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarden",
      "html_url": "https://github.com/yarden",
      "followers_url": "https://api.github.com/users/yarden/followers",
      "following_url": "https://api.github.com/users/yarden/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarden/subscriptions",
      "organizations_url": "https://api.github.com/users/yarden/orgs",
      "repos_url": "https://api.github.com/users/yarden/repos",
      "events_url": "https://api.github.com/users/yarden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-05T02:10:22Z",
    "updated_at": "2012-12-05T02:10:22Z",
    "author_association": "NONE",
    "body": "Thanks again, your proposal nails it. I do find the default behavior very counter-intuitive - wouldn't have guessed it's the NAs at all, but dropping the NAs certainly gets around it. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11025487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2427#issuecomment-11025487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2427",
    "id": 11025487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDI1NDg3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-05T02:17:24Z",
    "updated_at": "2012-12-05T02:17:24Z",
    "author_association": "NONE",
    "body": "ok, closing this. I'll open a feature request issue to add a `skipna` option \nto merge/join operations.\n"
  }
]
