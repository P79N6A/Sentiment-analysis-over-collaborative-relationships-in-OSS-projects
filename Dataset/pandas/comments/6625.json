[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37517493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6625#issuecomment-37517493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6625",
    "id": 37517493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTE3NDkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T10:18:43Z",
    "updated_at": "2014-03-13T10:18:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "can't change the actual fields as it needs to return consistly for all dtypes. You could special case it though. I don't think this was done because the same operations on  frame will integerize the values on a boolean dtype.\n\nSo should be consistently done (and the dataframe fix is a bit non-trivial).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37523703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6625#issuecomment-37523703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6625",
    "id": 37523703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTIzNzAz",
    "user": {
      "login": "waitingkuo",
      "id": 1100923,
      "node_id": "MDQ6VXNlcjExMDA5MjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1100923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/waitingkuo",
      "html_url": "https://github.com/waitingkuo",
      "followers_url": "https://api.github.com/users/waitingkuo/followers",
      "following_url": "https://api.github.com/users/waitingkuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/waitingkuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/waitingkuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/waitingkuo/subscriptions",
      "organizations_url": "https://api.github.com/users/waitingkuo/orgs",
      "repos_url": "https://api.github.com/users/waitingkuo/repos",
      "events_url": "https://api.github.com/users/waitingkuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/waitingkuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T11:43:46Z",
    "updated_at": "2014-03-13T11:43:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can help to specialize the boolean case.\n\nMost of the code for `describe()` of  `DataFrame` are the same as those of `Series`. I'll refactor some of them to fit the \"Don't Repeat Yourself\" principle. \n\nThe original function can only return numerical columns except that all the columns are non-numerical. I propose that we can add a parameter, says `column_type`, to decide which kind of data(column) we would like to return. And this parameter should be 'numeric' as default to be backward-compatible.\n\nExample:\n\n```\nIn [65]: df\nOut[65]: \n   0  1      2                          3\n0  1  a   True 2014-03-13 11:24:03.297115\n1  2  b   True 2014-03-13 11:24:03.297125\n2  3  c  False 2014-03-13 11:24:03.297128\n\n[3 rows x 4 columns]\n\nIn [66]: df.describe(column_type='numeric')\nOut[66]: \n         0\ncount  3.0\nmean   2.0\nstd    1.0\nmin    1.0\n25%    1.5\n50%    2.0\n75%    2.5\nmax    3.0\n\n[8 rows x 1 columns]\n\n\nIn [70]: df.describe(column_type='datetime')\nOut[70]: \n                                 3\ncount                            3\nunique                           3\nfirst   2014-03-13 11:24:03.297115\nlast    2014-03-13 11:24:03.297128\ntop     2014-03-13 11:24:03.297115\nfreq                             1\n\n[6 rows x 1 columns]\n\nIn [72]: df.describe(column_type='object')\nOut[72]: \n        1     2\ncount   3     3\nunique  3     2\ntop     a  True\nfreq    1     2\n\n[4 rows x 2 columns]\n\nIn [75]: df.describe(column_type='all')\nOut[75]: \n          0    1     2                           3\ncount   3.0  NaN   NaN                         NaN\nmean    2.0  NaN   NaN                         NaN\nstd     1.0  NaN   NaN                         NaN\nmin     1.0  NaN   NaN                         NaN\n25%     1.5  NaN   NaN                         NaN\n50%     2.0  NaN   NaN                         NaN\n75%     2.5  NaN   NaN                         NaN\nmax     3.0  NaN   NaN                         NaN\ncount   NaN    3     3                         NaN\nunique  NaN    3     2                         NaN\ntop     NaN    a  True                         NaN\nfreq    NaN    1     2                         NaN\ncount   NaN  NaN   NaN                           3\nunique  NaN  NaN   NaN                           3\nfirst   NaN  NaN   NaN  2014-03-13 11:24:03.297115\nlast    NaN  NaN   NaN  2014-03-13 11:24:03.297128\ntop     NaN  NaN   NaN  2014-03-13 11:24:03.297115\nfreq    NaN  NaN   NaN                           1\n\n[18 rows x 4 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37527001",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6625#issuecomment-37527001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6625",
    "id": 37527001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTI3MDAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T12:28:24Z",
    "updated_at": "2014-03-13T12:28:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you can simply just make this work correctly for all columns; the resulting dtype of the frame would be object if you end up with mixed types, but that's just how it is.\n\nbasically have the series describe deal with the dtype correctly and have the frame desrcibe just call it instead of the individual functions. (don't use apply though, just iterate like it is now).\n\nalso don't add fields for now, maybe later\n"
  }
]
