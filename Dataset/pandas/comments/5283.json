[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26678457",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26678457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26678457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc4NDU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T18:00:05Z",
    "updated_at": "2013-10-20T18:00:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls run a perf check on this (test_perf.sh)\n\nthese comparisons are used everywhere\n\ndo u need the shape check?\nthe null check might kill perf on this\nwhy are u not doing == and != ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26678906",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26678906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26678906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc4OTA2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T18:18:41Z",
    "updated_at": "2013-10-20T18:18:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback - seems like it doesn't work for this example, but we could be missing something\n\n``` python\nleft = pd.Float64Index([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, nan], dtype='object')\nright = pd.Float64Index([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, nan], dtype='object')\n\n# OR \nleft = np.array([1.0, 2.0, nan], dtype=object)\nright= np.array([1.0, 2.0, nan], dtype=object)\n```\n\n(fully enumerated here - https://gist.github.com/unutbu/7070565)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26678935",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26678935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26678935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc4OTM1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T18:19:41Z",
    "updated_at": "2013-10-20T18:19:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "to be explicit:\n\n``` python\nleft = np.array([1.0, 2.0, nan], dtype=object)\n    ...: right= np.array([1.0, 2.0, nan], dtype=object)\n    ...: \n\nleft != right\nOut[16]: array([False, False, False], dtype=bool)\n\nleft != left\nOut[17]: array([False, False, False], dtype=bool)\n\nright != right\nOut[18]: array([False, False, False], dtype=bool)\n\nnan != nan\nOut[19]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26678963",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26678963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26678963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc4OTYz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T18:21:01Z",
    "updated_at": "2013-10-20T18:21:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Though I guess they compare true with `==` so not a real issue - we were going back and forth on another PR b/c sometimes nan handling can be confusing :P\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26679238",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26679238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26679238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc5MjM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T18:32:58Z",
    "updated_at": "2013-10-20T18:32:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "you have to astype to float! before you can do the comparison (not sure exactly why) only works if they r all float values (so you need to do it in a try except)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26680141",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26680141",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26680141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgwMTQx",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T19:13:51Z",
    "updated_at": "2013-10-20T19:13:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback: I'm working on installing vbench and figuring out how to run test_perf.sh...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26681687",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26681687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26681687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgxNjg3",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T20:22:32Z",
    "updated_at": "2013-10-20T20:29:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback: When I run\n\n```\ntime ./test_perf.sh -b array-equivalent -t array-equivalent^ \n```\n\nI get \n\n```\nsqlalchemy.exc.IntegrityError: (IntegrityError) column checksum is not unique u'INSERT INTO benchmarks (checksum, name, description) VALUES (?, ?, ?)' ('ea1993ef61c3cc4e871d2cce3c5d983c', 'eval_frame_chained_cmp_python', None)\n```\n\nI see I can limit `test_perf.sh` to one test, such as \n\n```\ntime ./test_perf.sh -b array-equivalent -t array-equivalent^ -r reindex\n```\n\nwhich yielded\n\n```\n    Invoked with :\n    --ncalls: 3\n    --repeats: 3\n\n\n    -------------------------------------------------------------------------------\n    Test name                                    | head[ms] | base[ms] |  ratio   |\n    -------------------------------------------------------------------------------\n    reindex_frame_level_align                    |   2.6046 |  10.1856 |   0.2557 |\n    dataframe_reindex                            |   0.4900 |   0.6377 |   0.7684 |\n    frame_reindex_axis0                          | 110.6919 | 126.7160 |   0.8735 |\n    frame_reindex_columns                        |   0.4164 |   0.4683 |   0.8890 |\n    frame_reindex_both_axes_ix                   |  43.5000 |  46.9437 |   0.9266 |\n    reindex_frame_level_reindex                  |   2.3306 |   2.3570 |   0.9888 |\n    frame_reindex_upcast                         |  16.1486 |  16.2884 |   0.9914 |\n    reindex_fillna_pad_float32                   |   0.5860 |   0.5894 |   0.9942 |\n    reindex_fillna_backfill_float32              |   0.5997 |   0.6014 |   0.9972 |\n    frame_reindex_both_axes                      |  46.7057 |  46.7397 |   0.9993 |\n    reindex_daterange_pad                        |   2.9510 |   2.9523 |   0.9995 |\n    reindex_fillna_backfill                      |   1.0234 |   1.0213 |   1.0020 |\n    reindex_fillna_pad                           |   0.8663 |   0.8514 |   1.0175 |\n    reindex_multiindex                           |   1.5457 |   1.5034 |   1.0281 |\n    frame_reindex_axis1                          | 558.3910 | 510.9200 |   1.0929 |\n    reindex_daterange_backfill                   |   3.4040 |   2.9933 |   1.1372 |\n    -------------------------------------------------------------------------------\n    Test name                                    | head[ms] | base[ms] |  ratio   |\n    -------------------------------------------------------------------------------\n\n    Ratio < 1.0 means the target commit is faster then the baseline.\n    Seed used: 1234\n\n    Target [5c6116c] : Merge pull request #5281 from cancan101/index_meta_data_doc\n\n    DOC: Added versionadded for \"Setting index metadata\"\n    Base   [8c8ef7d] : ENH: Add array_equivalent, to address the handling of NaNs when comparing arrays for equality.\n\n    Added NDFrame.equals\n\n    Index, Float64Index, and MultiIndex's equal method now uses array_equivalent\n    instead of np.array_equal.\n```\n\nClearly I don't know what I'm doing. What is the right `test_perf.sh` command?\nI see there are other choices for `-r` in `pandas/vb_suite`. But which is the right/relevant one(s)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26682170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26682170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26682170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgyMTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T20:45:31Z",
    "updated_at": "2013-10-20T20:45:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "b should be the commit before 1st of yours and t should be the last commit of yours\n\ngenerally I rebase to master before this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26683119",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26683119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26683119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgzMTE5",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T21:27:01Z",
    "updated_at": "2013-10-20T21:52:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "With array-equivalent  rebased to master,\n\n```\ntime ./test_perf.sh -b master -t array-equivalent \n```\n\nyields [vb_suite.log](https://gist.github.com/unutbu/7075764)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26683850",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26683850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26683850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgzODUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T21:58:25Z",
    "updated_at": "2013-10-20T21:58:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nconcat_series_axis1                          | 204.8774 |  83.7650 |   2.4459 |\nreindex_frame_level_align                    |   8.9770 |   1.2484 |   7.1910 |\n```\n\nso look at these in master and in your PR using %prun...and see if you can figure out what's up...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26748477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26748477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26748477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQ4NDc3",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T19:32:06Z",
    "updated_at": "2013-10-21T19:32:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "With the current commit, `test_perf.sh` yields\n\n```\ngroupby_simple_compress_timing               |  54.9030 |  47.4270 |   1.1576 |\nframe_iloc_dups                              |   0.3117 |   0.2663 |   1.1704 |\nindex_int64_intersection                     |  41.4550 |  33.6334 |   1.2326 |\ngroupby_series_simple_cython                 |   7.6556 |   5.9413 |   1.2885 |\nseries_align_left_monotonic                  |  30.3703 |  22.4893 |   1.3504 |\n-------------------------------------------------------------------------------\nTest name                                    | head[ms] | base[ms] |  ratio   |\n-------------------------------------------------------------------------------\n```\n\nI'm going to try adding a check for Int64Index arrays next...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26748594",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26748594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26748594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQ4NTk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T19:33:22Z",
    "updated_at": "2013-10-21T19:33:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "also try doing test_perf again....these could be 'random'.....(e.g. if they are not similar on subsequent runs) then its just an artifact of the data....you can also try with a bigger n (numcalls)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26748723",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26748723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26748723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQ4NzIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T19:34:56Z",
    "updated_at": "2013-10-21T19:34:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@unutbu have a look at #5219 I believe your replacement will simply be called by that, yes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26756538",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26756538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26756538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU2NTM4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:07:54Z",
    "updated_at": "2013-10-21T21:07:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "question here - why do you need to cast it to float first? I thought it worked with just ==? I'm sure I'm missing something but just wanted to make sure we had an example that fails using ==. (or maybe it's just float dtype that fails)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26756895",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26756895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26756895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU2ODk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:11:56Z",
    "updated_at": "2013-10-21T21:11:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think object dtype that has floats in it (iow float64index) fails ; not sure why though \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26758188",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26758188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26758188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU4MTg4",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:25:23Z",
    "updated_at": "2014-01-18T16:08:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Regarding https://github.com/pydata/pandas/pull/5219, yes, I am striving to make `array_equivalent` a drop-in replacement for `np.array_equal`. It should behave exactly like `np.array_equal` except that `NaN`s in corresponding locations should be treated as equal. \n\nThe tests in `tests/test_common.py` in the `test_array_equivalent` show the behavior I'm currently testing for. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26758444",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26758444",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26758444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU4NDQ0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:28:35Z",
    "updated_at": "2013-10-21T21:28:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps related: weird bug in numpy assert_array_equal I came across in a test a while ago (that I can't repo outside of the test suite) #4458.\n\n(@unutbu: your doing pandas' pull requests now, awesome!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26758464",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26758464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26758464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU4NDY0",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:28:51Z",
    "updated_at": "2013-10-22T00:41:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner: I did try coercing to float (https://github.com/pydata/pandas/pull/5283#discussion-diff-7092284), but found there were problems. (See the link for more details.)\n\n(Fixed incorrect link.)\n\nCurrently, `array_equivalent` uses `np.isnan` instead of `pd.isnull` because it is faster, but  since it raises TypeError or NotImplementedError (Python2.6 or 3.2) on object arrays (unlike `pd.isnull`), I'm using `np.array_equal` as a fallback.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26760283",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26760283",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26760283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYwMjgz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:52:02Z",
    "updated_at": "2013-10-21T21:52:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Again, can we take a quick step back here: what's an example where it\n_doesn't_ work to compare ndarrays with `==` (let's assume that\narray_equivalent always gets ndarrays for now). So you don't have to deal\nwith Index subclasses - will always get actual ndarrays.\n\nif you pass array of floats with dtype object and some are nan, it compares\nincorrectly with ==, right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26760376",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26760376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26760376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYwMzc2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:53:28Z",
    "updated_at": "2013-10-21T21:53:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "So if you're thinking of Float64Index - just do '.view(ndarray)' so you're\nnot dealing with anything on pandas level.\n\nOnce we get it to work for ndarray, then can consider what to do for\nNDFrame and friends. (trivial to view Index as ndarray for now)\nOn Oct 21, 2013 5:51 PM, \"Jeffrey Tratner\" jeffrey.tratner@gmail.com\nwrote:\n\n> Again, can we take a quick step back here: what's an example where it\n> _doesn't_ work to compare ndarrays with `==` (let's assume that\n> array_equivalent always gets ndarrays for now). So you don't have to deal\n> with Index subclasses - will always get actual ndarrays.\n> \n> if you pass array of floats with dtype object and some are nan, it\n> compares incorrectly with ==, right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26760578",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26760578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26760578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYwNTc4",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:56:20Z",
    "updated_at": "2013-10-21T21:59:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner: I don't quite understand. What is the \"it\" in the phrase \"where it _doesn't_ work...\"?\n\nCurrently the test\n\n```\nassert array_equivalent(np.array([nan, None], dtype='object'),\n                        np.array([nan, None], dtype='object')) \n```\n\npass.s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26761138",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26761138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26761138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYxMTM4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:04:23Z",
    "updated_at": "2013-10-21T22:04:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Finally have a computer - just need to look at something for myself. I\nmean, where `a == b | ((a != a) & ( b != b))` doesn't work, since that's\nwhat I'd expect to work everywhere with a check for matching dtypes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26761470",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26761470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26761470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYxNDcw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:10:12Z",
    "updated_at": "2013-10-21T22:10:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just used this:\n\n``` python\ndef array_equiv(n1, n2):\n    return n1.shape == n2.shape and n1.dtype == n2.dtype and ((n1 == n2) | ((n1 != n1) & (n2 != n2))).all()\n```\n\nAnd it worked for all of these - am I missing why this is complicated? Is there a numpy version issue?\n\n```\nimport numpy as np\nnan = np.nan\nfor func in [\n             lambda : np.array([0.1, 0.2, np.nan, 0.3], dtype=object),\n             lambda : np.array([0.1, 0.2, np.nan, 0.3, np.nan], dtype=float),\n             lambda : np.array([None, None, np.nan, None], dtype=object),\n             lambda : np.array([], dtype=object)]:\n    assert array_equiv(func(), func())\n```\n\nThen callers should be responsible for checking anything at pandas-level.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762048",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyMDQ4",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:19:15Z",
    "updated_at": "2013-10-21T22:26:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about:\n\n```\nimport numpy as np\nimport pandas as pd\nimport pandas.core.common as com\n\ndef array_equiv(n1, n2):\n    return n1.shape == n2.shape and n1.dtype == n2.dtype and ((n1 == n2) | ((n1 != n1) & (n2 != n2))).all()\n\nindex = np.random.random(10)\ndf1 = pd.DataFrame(np.random.random(10,), index=index, columns=['floats'])\ndf1['dates'] = pd.date_range('2000-1-1', periods=10, freq='T')\ndf1.ix[::2] = np.nan\n\nprint(array_equiv(df1.values, df1.values))\n# False\n```\n\nHowever, my `array_equivalent` does not handle object arrays correctly either. To work around the above problem, I had to add code to NDFrame.equals to test each column separately. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762345",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyMzQ1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:24:13Z",
    "updated_at": "2013-10-21T22:24:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "okay, thanks - just wanted to make sure we had something that explicitly didn't work for the simpler version.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762452",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyNDUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:26:08Z",
    "updated_at": "2013-10-21T22:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually...why don't we do both...\n\nuse the simpler version...if its True (then we are done as we don't have false positives), however a False can fall back to the slower version\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762494",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyNDk0",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:26:56Z",
    "updated_at": "2013-10-21T22:27:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "My original PR used `pd.isnull`. This version handled anything thrown at it correctly -- scalars, lists, DataFrames, etc.. The only problem was the test_perf.sh showed one benchmark was 7x slower, another 2-3x slower.\n\nAs a compromise between usefulness and speed, I changed `pd.isnull` to `np.isnan` because %timeit showed `np.isnan` to be about 7x faster when it did not raise a TypeError (which it does on object arrays). \n\nThis compromise has better `test_perf.sh` results. The worst benchmark is now ~1.15 worse than upstream/master. But `array_equivalent` currently does not handle NaNs in `object` arrays correctly. An example where it fails is on `df1.values` above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762580",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyNTgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:28:24Z",
    "updated_at": "2013-10-21T22:28:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@unutbu per my comment - nan can only be in object or floating, right? so you can use `np.array_equal` for everything else. Not sure if you need to special case NaT too...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762646",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyNjQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:29:28Z",
    "updated_at": "2013-10-21T22:29:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "`NaT` should be ok its a number; so just special case object/float then\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26762754",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5283#issuecomment-26762754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5283",
    "id": 26762754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyNzU0",
    "user": {
      "login": "unutbu",
      "id": 443776,
      "node_id": "MDQ6VXNlcjQ0Mzc3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/443776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unutbu",
      "html_url": "https://github.com/unutbu",
      "followers_url": "https://api.github.com/users/unutbu/followers",
      "following_url": "https://api.github.com/users/unutbu/following{/other_user}",
      "gists_url": "https://api.github.com/users/unutbu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unutbu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unutbu/subscriptions",
      "organizations_url": "https://api.github.com/users/unutbu/orgs",
      "repos_url": "https://api.github.com/users/unutbu/repos",
      "events_url": "https://api.github.com/users/unutbu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unutbu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:31:25Z",
    "updated_at": "2013-10-21T22:31:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay! This sounds promising. Will work on this, but I have to go now.\n"
  }
]
