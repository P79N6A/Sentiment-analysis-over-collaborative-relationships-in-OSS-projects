[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476766834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476766834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476766834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc2NjgzNA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T17:41:34Z",
    "updated_at": "2019-03-26T17:41:34Z",
    "author_association": "MEMBER",
    "body": "Can you isolate the frame operation from the groupby? Curious if the regression is noticeable in the former"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476782109",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476782109",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476782109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc4MjEwOQ==",
    "user": {
      "login": "blu3r4y",
      "id": 10400532,
      "node_id": "MDQ6VXNlcjEwNDAwNTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10400532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blu3r4y",
      "html_url": "https://github.com/blu3r4y",
      "followers_url": "https://api.github.com/users/blu3r4y/followers",
      "following_url": "https://api.github.com/users/blu3r4y/following{/other_user}",
      "gists_url": "https://api.github.com/users/blu3r4y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blu3r4y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blu3r4y/subscriptions",
      "organizations_url": "https://api.github.com/users/blu3r4y/orgs",
      "repos_url": "https://api.github.com/users/blu3r4y/repos",
      "events_url": "https://api.github.com/users/blu3r4y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blu3r4y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T18:16:09Z",
    "updated_at": "2019-03-26T18:16:09Z",
    "author_association": "NONE",
    "body": "You mean like so? Well, there is a slight difference (~ 30 % slower) but I wouldn't trust my \"benchmark\" here too much. I ran the code a few times and the numbers varied between 0.5 and 1 second.\r\n\r\n```python\r\nimport time\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nnrows, ncols = 1000, 1000\r\n\r\ndf = pd.DataFrame(np.random.rand(nrows, ncols))\r\n\r\nstart = time.time()\r\nfor _ in range(100):\r\n    df.apply(lambda x: x - x.mean())\r\nend = time.time()\r\n\r\nprint(\"[pandas=={}] execution time: {:.4f} seconds\".format(pd.__version__, end - start))\r\n# [pandas==0.23.4] execution time: 25.8880 seconds\r\n# [pandas==0.24.0] execution time: 36.0216 seconds\r\n# [pandas==0.24.2] execution time: 34.6180 seconds\r\n```\r\n\r\nAdditionally, i tested the original code sample with having only one group. It's still about 2 times slower in 0.24+ compared to 0.23.4, but not as drastic as with multiple groups.\r\n\r\n```python\r\nnrows, ncols = 10000, 10000\r\n\r\ndf[\"key\"] = [1] * nrows\r\n\r\n# [pandas==0.23.4] execution time: 5.5250 seconds\r\n# [pandas==0.24.0] execution time: 12.1590 seconds\r\n# [pandas==0.24.2] execution time: 12.1540 seconds\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476785217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476785217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476785217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc4NTIxNw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T18:23:23Z",
    "updated_at": "2019-03-26T18:23:23Z",
    "author_association": "MEMBER",
    "body": "Right I'm just trying to isolate potential regressions in GroupBy versus Frame operations. Given you don't see the same regression with scalars I'm inclined to believe it's the latter that may be at fault here.\r\n\r\nCan you try your last example on master? I think those results might be misleading as the apply operation would still get called twice even with only one group in 0.24.2 (see #24748 which just changed this behavior) so might not be a clean comparison to make\r\n\r\n@TomAugspurger we were never able to get the ASV site back up running were we?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476851363",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476851363",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476851363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njg1MTM2Mw==",
    "user": {
      "login": "blu3r4y",
      "id": 10400532,
      "node_id": "MDQ6VXNlcjEwNDAwNTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10400532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blu3r4y",
      "html_url": "https://github.com/blu3r4y",
      "followers_url": "https://api.github.com/users/blu3r4y/followers",
      "following_url": "https://api.github.com/users/blu3r4y/following{/other_user}",
      "gists_url": "https://api.github.com/users/blu3r4y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blu3r4y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blu3r4y/subscriptions",
      "organizations_url": "https://api.github.com/users/blu3r4y/orgs",
      "repos_url": "https://api.github.com/users/blu3r4y/repos",
      "events_url": "https://api.github.com/users/blu3r4y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blu3r4y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T21:02:47Z",
    "updated_at": "2019-03-26T21:02:47Z",
    "author_association": "NONE",
    "body": "I guess I got closer to the problem, it really seems to be related to data frame operations, i.e. subtracting a scalar from a data frame already seems to be the regression. And it's huge, on column-heavy shapes, this simple operation is 153 times slower Ã´.O\r\n\r\n```python\r\nimport timeit\r\nimport numpy as np  # 1.16.2\r\nimport pandas as pd\r\n\r\ndef benchmark():\r\n    nrows, ncols = 100, 100\r\n    df = pd.DataFrame(np.random.rand(nrows, ncols))\r\n    _ = df - 1\r\n\r\ntime = timeit.timeit(benchmark, number=100)\r\nprint(\"# {:>8.4f} sec   pandas=={}\".format(time, pd.__version__))\r\n```\r\n\r\nHere are my benchmarking results of the `df - 1` operation with different shapes compared to master.\r\n\r\n| shape | 0.23.4 | 3855a27be4f04d15e7ba7aee12f0220c93148d3d | factor |\r\n|--:|--:|--:|--:|\r\n| 100, 100 | 0.0343 | 2.3835 | x69 |\r\n| 10000, 100 | 1.5811 | 5.0893 | x3 |\r\n| 100, 10000 | 1.4902 | 229.1662 | x153 |\r\n| 1000, 1000 | 1.5120 | 26.9160 | x18 |\r\n\r\n---\r\n\r\nConcerning `GroupBy.apply`, there seems to be just a slight performance regression of up to 30 % slower performance, as indicated in my earlier comment.\r\n\r\n```python\r\nimport timeit\r\nimport numpy as np  # 1.16.2\r\nimport pandas as pd\r\n\r\ndef benchmark():\r\n    nrows, ncols = 1000, 100\r\n    df = pd.DataFrame(np.random.rand(nrows, ncols))\r\n    df[\"key\"] = range(nrows)\r\n\r\n    numeric_columns = list(range(ncols))\r\n    \r\n    grouping = df.groupby(by=\"key\")\r\n    grouping[numeric_columns].apply(lambda x: x.mean())\r\n\r\ntime = timeit.timeit(benchmark, number=10)\r\nprint(\"# {:>8.4f} sec   pandas=={}\".format(time, pd.__version__))\r\n```\r\n\r\n| shape | 0.23.4 | 3855a27be4f04d15e7ba7aee12f0220c93148d3d | factor |\r\n|--:|--:|--:|--:|\r\n| 100, 100 | 0.2715 | 0.3211 | x1.18 |\r\n| 1000, 100 | 19.4875 | 26.0909 | x1.34 |\r\n| 100, 1000 | 0.6296 | 0.6103 | x0.96 |\r\n| 1000, 1000 | 5.0933 | 5.6909 | x1.11 |"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476904190",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476904190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476904190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjkwNDE5MA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T00:06:39Z",
    "updated_at": "2019-03-27T00:06:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that if this is your actual function, you can/should instead do this, which has always been faster\r\n```python\r\ndf[numeric_columns] - grouping[numeric_columns].transform('mean')\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476952471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476952471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476952471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njk1MjQ3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T03:14:53Z",
    "updated_at": "2019-03-27T03:14:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you check for duplicates? We have another issue for ops that were previously blockwise, but are now columnwise. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476961444",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-476961444",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 476961444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njk2MTQ0NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T03:53:28Z",
    "updated_at": "2019-03-27T03:53:28Z",
    "author_association": "MEMBER",
    "body": "Local ASV result comparing current head to the last commit on 0.23.4 confirms a regression for the frame ops:\r\n\r\n```sh\r\n       before           after         ratio\r\n     [af7b0ba4]       [95c78d65]\r\n                      <master>\r\n+      3.30Â±0.2ms          249Â±3ms    75.37  binary_ops.Ops2.time_frame_float_div_by_zero\r\n+      8.08Â±0.4ms         256Â±10ms    31.75  binary_ops.Ops2.time_frame_int_div_by_zero\r\n+      12.6Â±0.2ms          261Â±7ms    20.78  binary_ops.Ops2.time_frame_float_floor_by_zero\r\n+      30.2Â±0.4ms          106Â±1ms     3.52  binary_ops.Ops.time_frame_multi_and(False, 1)\r\n+      29.9Â±0.7ms          102Â±4ms     3.43  binary_ops.Ops.time_frame_multi_and(False, 'default')\r\n+      34.1Â±0.4ms          110Â±2ms     3.24  binary_ops.Ops.time_frame_multi_and(True, 1)\r\n+      39.2Â±0.4ms        111Â±0.9ms     2.83  binary_ops.Ops.time_frame_multi_and(True, 'default')\r\n+     3.85Â±0.06ms       5.18Â±0.1ms     1.35  binary_ops.Ops.time_frame_add(True, 1)\r\n+      28.6Â±0.1Î¼s       37.4Â±0.2Î¼s     1.31  binary_ops.Ops2.time_series_dot\r\n+     3.54Â±0.06ms       4.29Â±0.3ms     1.21  binary_ops.Ops.time_frame_add(False, 1)\r\n+         512Â±1Î¼s          600Â±3Î¼s     1.17  binary_ops.Ops2.time_frame_series_dot\r\n-         107Â±2ms         61.2Â±1ms     0.57  binary_ops.Ops.time_frame_comparison(False, 'default')\r\n-         108Â±1ms       61.1Â±0.9ms     0.57  binary_ops.Ops.time_frame_comparison(False, 1)\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```\r\n\r\nI've updated the title to reflect this as I think that is the larger issue. @blu3r4y if you can run ASVs for GroupBy apply to confirm regression there that could be helpful as another issue"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/477078366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-477078366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 477078366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzA3ODM2Ng==",
    "user": {
      "login": "blu3r4y",
      "id": 10400532,
      "node_id": "MDQ6VXNlcjEwNDAwNTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10400532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blu3r4y",
      "html_url": "https://github.com/blu3r4y",
      "followers_url": "https://api.github.com/users/blu3r4y/followers",
      "following_url": "https://api.github.com/users/blu3r4y/following{/other_user}",
      "gists_url": "https://api.github.com/users/blu3r4y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blu3r4y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blu3r4y/subscriptions",
      "organizations_url": "https://api.github.com/users/blu3r4y/orgs",
      "repos_url": "https://api.github.com/users/blu3r4y/repos",
      "events_url": "https://api.github.com/users/blu3r4y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blu3r4y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T10:14:22Z",
    "updated_at": "2019-03-27T10:14:22Z",
    "author_association": "NONE",
    "body": "> Can you check for duplicates? We have another issue for ops that were previously blockwise, but are now columnwise.\r\n\r\nYes, regression with DataFrame + Scalar Ops in 0.24+ have already been reported in #24990.\r\n\r\n@WillAyd I will run ASV for `GroupBy.apply` soon, so that we keep this issue isolated on `GroupBy.apply`, right? Or should I make a new issue then?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/477132160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25883#issuecomment-477132160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25883",
    "id": 477132160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzEzMjE2MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T12:35:28Z",
    "updated_at": "2019-03-27T12:35:28Z",
    "author_association": "MEMBER",
    "body": "That makes sense - thanks Mario!\n\nSent from my iPhone\n\n> On Mar 27, 2019, at 3:14 AM, Mario Kahlhofer <notifications@github.com> wrote:\n> \n> Can you check for duplicates? We have another issue for ops that were previously blockwise, but are now columnwise.\n> \n> Yes, regression with DataFrame + Scalar Ops in 0.24+ have already been reported in #24990.\n> \n> @WillAyd I will run ASV for GroupBy.apply soon, so that we keep this issue isolated on GroupBy.apply, right? Or should I make a new issue then?\n> \n> â\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  }
]
