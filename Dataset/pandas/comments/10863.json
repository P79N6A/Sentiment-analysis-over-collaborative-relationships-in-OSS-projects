[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138549547",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10863#issuecomment-138549547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10863",
    "id": 138549547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODU0OTU0Nw==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-08T12:47:56Z",
    "updated_at": "2015-09-08T12:57:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "See #7888 \n\nuse `datetime.datetime.combine(datetime.date.today(), datetime.time())` instead of `datetime.date.today()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138600749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10863#issuecomment-138600749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10863",
    "id": 138600749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODYwMDc0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-08T15:29:25Z",
    "updated_at": "2015-09-08T15:29:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, so the issue is with the `datetime.date`, which is mostly unsupported. \n\n```\nIn [9]: v = Timestamp.today().normalize()\n\nIn [10]: v\nOut[10]: Timestamp('2015-09-08 00:00:00')\n\nIn [11]: pandas.DataFrame({v : pandas.Series(range(3),index=range(3))}, columns=[v])\nOut[11]: \n   2015-09-08\n0           0\n1           1\n2           2\n\nIn [12]: v = v, v                                                                   \n\nIn [13]: pandas.DataFrame({v : pandas.Series(range(3),index=range(3))}, columns=[v])\nOut[13]: \n   (2015-09-08 00:00:00, 2015-09-08 00:00:00)\n0                                           0\n1                                           1\n2                                           2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367213046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10863#issuecomment-367213046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10863",
    "id": 367213046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzIxMzA0Ng==",
    "user": {
      "login": "n8henrie",
      "id": 1234956,
      "node_id": "MDQ6VXNlcjEyMzQ5NTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1234956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/n8henrie",
      "html_url": "https://github.com/n8henrie",
      "followers_url": "https://api.github.com/users/n8henrie/followers",
      "following_url": "https://api.github.com/users/n8henrie/following{/other_user}",
      "gists_url": "https://api.github.com/users/n8henrie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/n8henrie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/n8henrie/subscriptions",
      "organizations_url": "https://api.github.com/users/n8henrie/orgs",
      "repos_url": "https://api.github.com/users/n8henrie/repos",
      "events_url": "https://api.github.com/users/n8henrie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/n8henrie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T04:52:02Z",
    "updated_at": "2018-02-21T04:53:48Z",
    "author_association": "NONE",
    "body": "I assume I am running into this same issue -- multiindex with pd.Timestamp.date() in a tuple results in all NaN, pd.Timestamp works fine.\r\n\r\nExamples below don't have anything else in the tuple to simplify demonstration of the issue, but my use case obviously has other stuff there.\r\n\r\n```shellsession\r\nIn [3]: pd.DataFrame({'foo': {(pd.Timestamp(2017, 10, 5).date(),): 21.0}})\r\nOut[3]:\r\n            foo\r\n2017-10-05  NaN\r\n\r\nIn [4]: pd.DataFrame({'foo': {(pd.Timestamp(2017, 10, 5),): 21.0}})\r\nOut[4]:\r\n            foo\r\n2017-10-05  21.0\r\n```\r\n\r\nI can go into detail on my use case if it were helpful, but it's basically looking at employee productivity per shift, where each day (part 0 of the index) has several shifts (part 1 of the index).\r\n\r\nFor now, using `Timestamp.normalize()` seems to be a workaround, even though putting all the events at `00:00` seems a little strange."
  }
]
