[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447595121",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24296#issuecomment-447595121",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24296",
    "id": 447595121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzU5NTEyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-15T20:18:35Z",
    "updated_at": "2018-12-15T20:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure. Probably better suited for a question on stack overflow or cross validated, or perhaps the statsmodels mailing list to see if it's in scope for them."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447636520",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24296#issuecomment-447636520",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24296",
    "id": 447636520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYzNjUyMA==",
    "user": {
      "login": "Yensan",
      "id": 16527206,
      "node_id": "MDQ6VXNlcjE2NTI3MjA2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16527206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yensan",
      "html_url": "https://github.com/Yensan",
      "followers_url": "https://api.github.com/users/Yensan/followers",
      "following_url": "https://api.github.com/users/Yensan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yensan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yensan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yensan/subscriptions",
      "organizations_url": "https://api.github.com/users/Yensan/orgs",
      "repos_url": "https://api.github.com/users/Yensan/repos",
      "events_url": "https://api.github.com/users/Yensan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yensan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T11:44:28Z",
    "updated_at": "2018-12-16T11:45:07Z",
    "author_association": "NONE",
    "body": "Finally, I made it myself.\r\n**How to generate frequency table?**\r\n```python\r\npd.DataFrame({'amount': ['12', '15', '20', '22', '14', '14', '15', '27', '21', '18', '19', '18', '22', '33', '16', '18', '17', '23', '28', '13']})\r\nbins = [10, 15,  20, 25,  30, 35]  #   [10, 15)  [15, 20) ... [30, 35]  \r\nhist, bin_edges = np.histogram(a=df.values, bins=bins)\r\ndef make_index(edges):\r\n    index_seq =['[ {} ~ {} )'.format(edges[i], edges[i+1]) for i in range(len(edges)-1)]\r\n    index_seq[-1] = index_seq[-1][0: -1] + ']'\r\n    return index_seq\r\nindex_seq = make_index(bin_edges)\r\ntabel = pd.DataFrame({'Frequency Distribution': hist}, index=index_seq)\r\nsum_up = df['Audit(day)'].count()\r\ntabel = tabel.append(pd.DataFrame([{'Frequency Distribution': sum_up}], index=['TOTAL']))\r\ntabel['Relative F.D.'] = tabel / sum_up\r\ntabel['Percent F.D.'] = tabel['Relative F.D.'].apply(lambda x: format(x, '.2%'))\r\ntabel.index.name = 'Audit(day)'\r\ntabel\r\n```\r\n\r\n**How to generate histogram and kde?**\r\n```python\r\nfig, ax = plt.subplots()\r\ndf.hist(bins = bins, ax=ax, alpha = 0.5 ,color = 'b', edgecolor='white')  \r\nax.set_ylabel(\"Amount\", fontsize=12)\r\nax.set_xticks(ticks=bins)\r\ntwin_ax = ax.twinx()  \r\n_ = df.plot.kde(linestyle='-.', ax=twin_ax)\r\n```\r\n"
  }
]
