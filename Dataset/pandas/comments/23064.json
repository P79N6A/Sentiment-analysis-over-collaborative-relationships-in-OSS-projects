[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428358497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-428358497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 428358497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM1ODQ5Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T21:26:28Z",
    "updated_at": "2018-10-09T21:26:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "A possible culprit: pandas respects dict order for 3.6+ when creating data frames. Maybe check that the columns are the same going In before digging too far into the internals."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428583887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-428583887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 428583887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU4Mzg4Nw==",
    "user": {
      "login": "mpeleshenko",
      "id": 7052649,
      "node_id": "MDQ6VXNlcjcwNTI2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7052649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpeleshenko",
      "html_url": "https://github.com/mpeleshenko",
      "followers_url": "https://api.github.com/users/mpeleshenko/followers",
      "following_url": "https://api.github.com/users/mpeleshenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpeleshenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpeleshenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpeleshenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mpeleshenko/orgs",
      "repos_url": "https://api.github.com/users/mpeleshenko/repos",
      "events_url": "https://api.github.com/users/mpeleshenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpeleshenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T14:02:11Z",
    "updated_at": "2018-10-10T14:02:11Z",
    "author_association": "NONE",
    "body": "Interesting point. The order of columns in the left DataFrame changes on each run of Python >3.5. If I order the columns in the same alphabetical order before the merge, the timings between the different Python versions are roughly the same. In all of the cases the merged DataFrame has the same number of nulls for the one extra column added, int64_5, from the right DataFrame, so results seem to be equivalent between the different Python versions. Is there an optimal ordering of columns for merging that should be enforced?\r\n\r\n```python\r\nleft = left[left.columns.sort_values()]\r\nright = right[right.columns.sort_values()]\r\n```\r\n\r\nNumber of nulls in extra column added from right DataFrame in merged DataFrame: 314284\r\n```python\r\nprint(merged['int64_5'].isnull().sum())\r\n```\r\n\r\n| Python Version | Merge Duration | take_nd Hits |\r\n| -- | -- | -- |\r\n| 3.5 | 0.257853 s | 10 |\r\n| 3.6 | 0.301253 s | 10 |\r\n| 3.7 | 0.293487 s | 10 |"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428584849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-428584849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 428584849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU4NDg0OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T14:04:40Z",
    "updated_at": "2018-10-10T14:04:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is there an optimal ordering of columns for merging that should be enforced?\r\n\r\nMore likely there's a bug in pandas where out-of-order things take an (unnecessarily inefficient) path. But I'm not sure."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428678598",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-428678598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 428678598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY3ODU5OA==",
    "user": {
      "login": "mpeleshenko",
      "id": 7052649,
      "node_id": "MDQ6VXNlcjcwNTI2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7052649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpeleshenko",
      "html_url": "https://github.com/mpeleshenko",
      "followers_url": "https://api.github.com/users/mpeleshenko/followers",
      "following_url": "https://api.github.com/users/mpeleshenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpeleshenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpeleshenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpeleshenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mpeleshenko/orgs",
      "repos_url": "https://api.github.com/users/mpeleshenko/repos",
      "events_url": "https://api.github.com/users/mpeleshenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpeleshenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T18:22:07Z",
    "updated_at": "2018-10-10T19:04:58Z",
    "author_association": "NONE",
    "body": "Digging further, it seems this may have to do with `pandas.core.internals.get_mgr_concatenation_plan` and the left and right DataFrames to be merged. Since my columns are named `<dtype>_<index>`, sorting them alphabetically groups like dtypes together. My DataFrames contain only 4 dtypes: object (str), int32, int64, float64. When the columns are sorted, `get_mgr_concatenation_plan` returns a list of 4 (`BlockPlacement`, `JoinUnit`) tuples for the left DataFrame.  When the columns are not sorted, it sometimes returns 40+ tuples. I presume this may have something to do with how the different columns are organized in the pandas Blocks which are created for each type.\r\n\r\nI've also read [How to move a column in a pandas dataframe](https://stackoverflow.com/a/52617109) and [What is the Big O Complexity of Reversing the Order of Columns in Pandas DataFrame?](https://stackoverflow.com/a/51700776), which indicate that sorting the columns on the DataFrame with `df[df.columns.sort_values()]` actually copies the data and creates a new DataFrame, which may explain why performance is better with such a reindexed DataFrame.\r\n\r\nOn a side node, is it possible to reorder a DataFrame's columns in place? Would this even benefit the merge if the underlying data is not reindexed?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428683906",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-428683906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 428683906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY4MzkwNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T18:36:57Z",
    "updated_at": "2018-10-10T18:36:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for digging further on this! That's quite interesting that there'd be that large a performance difference between grouping dtypes (cc @jreback).\r\n\r\n> On a side node, is it possible to reorder a DataFrame's columns in place?\r\n\r\nIn theory yes, but I suspect that at the moment there will be copies (maybe always, maybe depending on the dtype)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428789465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-428789465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 428789465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc4OTQ2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T01:45:00Z",
    "updated_at": "2018-10-11T01:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "so if you ``.sort_index(axis=1)`` on the left before you merge then the perf diff goes away. \r\n\r\nthe reason is\r\n\r\n```\r\nIn [34]: left._data.blocks\r\nOut[34]: \r\n(FloatBlock: slice(46, 90, 22), 2 x 346893, dtype: float64,\r\n IntBlock: [5, 13, 24, 28, 29, 30, 31, 37, 42, 50, 51, 55, 58, 63, 67], 15 x 346893, dtype: int32,\r\n IntBlock: [0, 1, 2, 3, 6, 8, 9, 10, 11, 16, 19, 20, 34, 35, 36, 39, 41, 49, 53, 54, 60, 62, 71], 23 x 346893, dtype: int64,\r\n ObjectBlock: [4, 7, 12, 14, 15, 17, 18, 21, 22, 23, 25, 26, 27, 32, 33, 38, 40, 43, 44, 45, 47, 48, 52, 56, 57, 59, 61, 64, 65, 66, 69, 70], 32 x 346893, dtype: object)\r\n\r\nIn [35]: left.sort_index(axis=1)._data.blocks\r\nOut[35]: \r\n(FloatBlock: slice(0, 2, 1), 2 x 346893, dtype: float64,\r\n IntBlock: slice(2, 17, 1), 15 x 346893, dtype: int32,\r\n IntBlock: slice(17, 40, 1), 23 x 346893, dtype: int64,\r\n ObjectBlock: slice(40, 72, 1), 32 x 346893, dtype: object)\r\n```\r\n\r\nIOW the 2d takes are vastly more efficient because they can be done by consecutive copy rather than column by column. object columns in particular are inefficient because taking like this forces copies (to avoid aliasing the underyling data); numeric can just take view OTOH.\r\n\r\nso this still doesn't explain why 3.5 is different from 3.6/3.7. Though i would suspect that since insertion order matters upon creation, we are getting exactly the ordering as you wrote in the code (as you have a set around the ordering). In 3.5, I am guessing that the ordering is maybe not hashed as well so you ordering actually looks pretty sorted, e.g. the column names happen to line up.\r\n\r\nThis is a bit of a guess though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459839789",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-459839789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 459839789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTgzOTc4OQ==",
    "user": {
      "login": "mpeleshenko",
      "id": 7052649,
      "node_id": "MDQ6VXNlcjcwNTI2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7052649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpeleshenko",
      "html_url": "https://github.com/mpeleshenko",
      "followers_url": "https://api.github.com/users/mpeleshenko/followers",
      "following_url": "https://api.github.com/users/mpeleshenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpeleshenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpeleshenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpeleshenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mpeleshenko/orgs",
      "repos_url": "https://api.github.com/users/mpeleshenko/repos",
      "events_url": "https://api.github.com/users/mpeleshenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpeleshenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T19:28:59Z",
    "updated_at": "2019-02-01T19:28:59Z",
    "author_association": "NONE",
    "body": "Any updates on this? I am still seeing similar performance issues with pandas 0.24.0, numpy 1.16.0, and python 3.7.2."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/459843014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23064#issuecomment-459843014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23064",
    "id": 459843014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg0MzAxNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T19:39:47Z",
    "updated_at": "2019-02-01T19:39:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't looked into it. Do we have a concrete proposal for fixing this?\n\nOn Fri, Feb 1, 2019 at 1:29 PM Michael Peleshenko <notifications@github.com>\nwrote:\n\n> Any updates on this? I am still seeing similar performance issues with\n> pandas 0.24.0, numpy 1.16.0, and python 3.7.2.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/23064#issuecomment-459839789>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIl7Nxlfbif7i9poaj1V4dTp4ep7_ks5vJJWAgaJpZM4XUHyq>\n> .\n>\n"
  }
]
