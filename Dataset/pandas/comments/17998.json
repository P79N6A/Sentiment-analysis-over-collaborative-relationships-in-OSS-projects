[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/339938369",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-339938369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 339938369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTkzODM2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T10:45:16Z",
    "updated_at": "2017-10-27T10:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is non-idiomatic and non-performant to store data like this. not surprising this doesnâ€™t work. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/339969953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-339969953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 339969953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk2OTk1Mw==",
    "user": {
      "login": "kubaraczkowski",
      "id": 554652,
      "node_id": "MDQ6VXNlcjU1NDY1Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/554652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kubaraczkowski",
      "html_url": "https://github.com/kubaraczkowski",
      "followers_url": "https://api.github.com/users/kubaraczkowski/followers",
      "following_url": "https://api.github.com/users/kubaraczkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kubaraczkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kubaraczkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kubaraczkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/kubaraczkowski/orgs",
      "repos_url": "https://api.github.com/users/kubaraczkowski/repos",
      "events_url": "https://api.github.com/users/kubaraczkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kubaraczkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T13:23:20Z",
    "updated_at": "2017-10-27T13:23:20Z",
    "author_association": "NONE",
    "body": "It is true that this is non-idiomatic and may be non-performant, but it does actually work for a number of methods (mean, sum, etc).\r\n\r\nWhat would be an \"idiomatic\" way for operating on (fixed size) arrays inside the cells?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340039990",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-340039990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 340039990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAzOTk5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T17:50:52Z",
    "updated_at": "2017-10-27T17:50:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "it *only* works for mean & sum. that is basically happenstance.\r\n\r\nidiomatic way would be to use a multiindex\r\n```\r\n# turn your data into a real dataframe, its actually much easier to simply construct it this way\r\nIn [37]: new_df = df.test.apply(lambda x: pd.Series(x.ravel()))\r\n\r\nIn [38]: new_df.columns = pd.MultiIndex.from_product([range(4), range(4)], names=['first', 'second'])\r\n\r\nIn [39]: new_df\r\nOut[39]: \r\nfirst     0                   1 ...     2    3               \r\nsecond    0    1    2    3    0 ...     3    0    1    2    3\r\n0       1.0  0.0  0.0  0.0  0.0 ...   0.0  0.0  0.0  0.0  1.0\r\n1       1.0  0.0  0.0  0.0  0.0 ...   0.0  0.0  0.0  0.0  1.0\r\n2       1.0  0.0  0.0  0.0  0.0 ...   0.0  0.0  0.0  0.0  1.0\r\n3       1.0  0.0  0.0  0.0  0.0 ...   0.0  0.0  0.0  0.0  1.0\r\n\r\n[4 rows x 16 columns]\r\n\r\nIn [41]: new_df.median(level=0 , axis=1)\r\nOut[41]: \r\nfirst    0    1    2    3\r\n0      0.0  0.0  0.0  0.0\r\n1      0.0  0.0  0.0  0.0\r\n2      0.0  0.0  0.0  0.0\r\n3      0.0  0.0  0.0  0.0\r\n\r\nIn [42]: new_df.mean(level=0 , axis=1)\r\nOut[42]: \r\nfirst     0     1     2     3\r\n0      0.25  0.25  0.25  0.25\r\n1      0.25  0.25  0.25  0.25\r\n2      0.25  0.25  0.25  0.25\r\n3      0.25  0.25  0.25  0.25\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369179243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-369179243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 369179243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTE3OTI0Mw==",
    "user": {
      "login": "mewwts",
      "id": 1848670,
      "node_id": "MDQ6VXNlcjE4NDg2NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mewwts",
      "html_url": "https://github.com/mewwts",
      "followers_url": "https://api.github.com/users/mewwts/followers",
      "following_url": "https://api.github.com/users/mewwts/following{/other_user}",
      "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions",
      "organizations_url": "https://api.github.com/users/mewwts/orgs",
      "repos_url": "https://api.github.com/users/mewwts/repos",
      "events_url": "https://api.github.com/users/mewwts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mewwts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T09:35:10Z",
    "updated_at": "2018-02-28T09:35:10Z",
    "author_association": "NONE",
    "body": "@jreback what if you have varying numbers of entries in those lists? I don't see how this would work then. \r\n\r\nAs an example consider having a `tags` columns which can contain zero, one or many tags.\r\n\r\n```\r\ntags = [\r\n    ['tag1'],\r\n    ['tag1', 'tag2'],\r\n    None,\r\n    ['tag3', 'tag4', 'tag5']\r\n]\r\n```\r\n\r\nWould you have to pad everything with `None`s to produce something like\r\n```\r\ntags = [\r\n    ['tag1', None, None],\r\n    ['tag1', 'tag2', None],\r\n    None,\r\n    ['tag3', 'tag4', 'tag5']\r\n]\r\n```\r\nor what?\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369204977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-369204977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 369204977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTIwNDk3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T11:02:18Z",
    "updated_at": "2018-02-28T11:02:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mewwts there is barely *any* support for ops *inside* cells. it happens to work for sum/mean. This is not likely to be supported  until pandas2 in any real way, w/o a real community effort."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374863741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-374863741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 374863741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDg2Mzc0MQ==",
    "user": {
      "login": "kubaraczkowski",
      "id": 554652,
      "node_id": "MDQ6VXNlcjU1NDY1Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/554652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kubaraczkowski",
      "html_url": "https://github.com/kubaraczkowski",
      "followers_url": "https://api.github.com/users/kubaraczkowski/followers",
      "following_url": "https://api.github.com/users/kubaraczkowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kubaraczkowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kubaraczkowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kubaraczkowski/subscriptions",
      "organizations_url": "https://api.github.com/users/kubaraczkowski/orgs",
      "repos_url": "https://api.github.com/users/kubaraczkowski/repos",
      "events_url": "https://api.github.com/users/kubaraczkowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kubaraczkowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T08:29:39Z",
    "updated_at": "2018-03-21T08:29:39Z",
    "author_association": "NONE",
    "body": "I think this is indeed a nice to have.\r\nThe original purpose of this was to store images (2d data) in the cells and then use pandas for easy selection and operations on the images. You can then easily take a mean() of the images along a certain column/row. \r\nBut this certainly should not be a part of \"core features\".  I think it's time to close this issue.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374864977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17998#issuecomment-374864977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17998",
    "id": 374864977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDg2NDk3Nw==",
    "user": {
      "login": "mewwts",
      "id": 1848670,
      "node_id": "MDQ6VXNlcjE4NDg2NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mewwts",
      "html_url": "https://github.com/mewwts",
      "followers_url": "https://api.github.com/users/mewwts/followers",
      "following_url": "https://api.github.com/users/mewwts/following{/other_user}",
      "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions",
      "organizations_url": "https://api.github.com/users/mewwts/orgs",
      "repos_url": "https://api.github.com/users/mewwts/repos",
      "events_url": "https://api.github.com/users/mewwts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mewwts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-21T08:35:41Z",
    "updated_at": "2018-03-21T08:35:41Z",
    "author_association": "NONE",
    "body": "I'm hijacking this issue a bit @kubaraczkowski, but unstructured data like text is becoming ubiquitous, and I think it's a shame that Pandas isn't very helpful when analyzing / pre-processing this kind of data. \r\n\r\n@jreback is there an issue for this somewhere we can continue the discussion?"
  }
]
