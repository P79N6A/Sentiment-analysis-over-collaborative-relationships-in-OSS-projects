[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262500653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14670#issuecomment-262500653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14670",
    "id": 262500653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjUwMDY1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T12:28:27Z",
    "updated_at": "2016-11-23T12:28:27Z",
    "author_association": "MEMBER",
    "body": "cc @parthea"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266771966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14670#issuecomment-266771966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14670",
    "id": 266771966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc3MTk2Ng==",
    "user": {
      "login": "nicku33",
      "id": 614711,
      "node_id": "MDQ6VXNlcjYxNDcxMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/614711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicku33",
      "html_url": "https://github.com/nicku33",
      "followers_url": "https://api.github.com/users/nicku33/followers",
      "following_url": "https://api.github.com/users/nicku33/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicku33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicku33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicku33/subscriptions",
      "organizations_url": "https://api.github.com/users/nicku33/orgs",
      "repos_url": "https://api.github.com/users/nicku33/repos",
      "events_url": "https://api.github.com/users/nicku33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicku33/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T15:40:52Z",
    "updated_at": "2016-12-13T15:40:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, just want to pick up this discussion again. We have had some more confirmed cases of the streaming uploaded data not appearing in a timely manner. However, the delay is not deterministic. I depends on google and speaking to Jordan Tigrani, he said the only guarantee they provide is 90 minutes, though typical cases are much shorter, obviously. \r\n\r\nI think most users would expect to_gbq() to be transactional. The ability to query directly after to_gbq() is executed is probably a common use case. For example, one may use pandas to make a scoring table, push to bq, and run bq over a huge dataset joined to the scoring table where the large table is too large to push into local memory.\r\n\r\nAt work, we've written a helper function to use the non-streaming load and most people are avoiding to_gbq() because of this issue.\r\n\r\nI see two tacks:\r\n a) push google to have better bounds on streaming insertion\r\n b) rewrite it as a big query load\r\n\r\nHowever this latter option requires the user to have write access into a google bucket, which is a more complicated config.\r\n\r\nThoughts ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266772836",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14670#issuecomment-266772836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14670",
    "id": 266772836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc3MjgzNg==",
    "user": {
      "login": "nicku33",
      "id": 614711,
      "node_id": "MDQ6VXNlcjYxNDcxMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/614711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicku33",
      "html_url": "https://github.com/nicku33",
      "followers_url": "https://api.github.com/users/nicku33/followers",
      "following_url": "https://api.github.com/users/nicku33/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicku33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicku33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicku33/subscriptions",
      "organizations_url": "https://api.github.com/users/nicku33/orgs",
      "repos_url": "https://api.github.com/users/nicku33/repos",
      "events_url": "https://api.github.com/users/nicku33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicku33/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T15:43:51Z",
    "updated_at": "2016-12-13T15:43:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's code to see the behaviour:\r\n\r\n```\r\nimport time\r\nimport pandas as pd\r\nfrom googleapiclient.discovery import build\r\nfrom oauth2client.client import GoogleCredentials\r\nimport random \r\n\r\nproject_id = 'sample-gcp-project'\r\ncredentials = GoogleCredentials.get_application_default()\r\nbigquery_service = build('bigquery', 'v2', credentials=credentials)\r\nbq_tablename = 'tmp.tmp'\r\n\r\n# Replace the table ad nauseum\r\nk = 0\r\nwhile(1):\r\n\r\n    n=random.randint(1000,10000)\r\n    df = pd.DataFrame({'a': xrange(n), 'b': xrange(n)})\r\n    pd.io.gbq.to_gbq(df, bq_tablename, project_id, if_exists='replace')\r\n\r\n    # Did it work?\r\n    done = False\r\n    while not done:\r\n        check_query = 'SELECT COUNT(1) as ct FROM ' + bq_tablename\r\n        df_check = pd.io.gbq.read_gbq(check_query, project_id)\r\n        n_check = df_check['ct'].values[0]\r\n        if n_check == len(df):\r\n            print 'Success!'\r\n            break\r\n        else:\r\n            print 'Crap, table length is {0} not {1}.'.format(n_check, len(df))\r\n        k += 1\r\n        print '(k = %s) Sleeping 10 seconds before retrying the check or uploading again.' % (k)\r\n        time.sleep(10)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266797088",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14670#issuecomment-266797088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14670",
    "id": 266797088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc5NzA4OA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T17:03:22Z",
    "updated_at": "2016-12-13T17:03:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agree in principle that a batch upload is a much better fit for this than a streaming load\r\n\r\n> However this latter option requires the user to have write access into a google bucket, which is a more complicated config.\r\n\r\nWhere do you see that? While you could load into Google Storage, and then from there to BigQuery, you can also do a single POST request: https://cloud.google.com/bigquery/loading-data-post-request"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266816887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14670#issuecomment-266816887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14670",
    "id": 266816887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgxNjg4Nw==",
    "user": {
      "login": "nicku33",
      "id": 614711,
      "node_id": "MDQ6VXNlcjYxNDcxMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/614711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicku33",
      "html_url": "https://github.com/nicku33",
      "followers_url": "https://api.github.com/users/nicku33/followers",
      "following_url": "https://api.github.com/users/nicku33/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicku33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicku33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicku33/subscriptions",
      "organizations_url": "https://api.github.com/users/nicku33/orgs",
      "repos_url": "https://api.github.com/users/nicku33/repos",
      "events_url": "https://api.github.com/users/nicku33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicku33/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T18:15:01Z",
    "updated_at": "2016-12-13T18:15:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah you're right. I misunderstood. \r\nI will look into what their POST size limits are to be safe.\r\n\r\nIf we agree that batch is better, does anyone object if I try to write this patch myself over the holidays ? I've wanted to contribute to pandas in some way for years and this would be a nice easy one to get my feet wet.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282583459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14670#issuecomment-282583459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14670",
    "id": 282583459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4MzQ1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T20:12:04Z",
    "updated_at": "2017-02-26T20:12:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "moved to pydata/pandas-gbq#7"
  }
]
