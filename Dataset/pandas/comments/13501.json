[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228094001",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13501#issuecomment-228094001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13501",
    "id": 228094001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODA5NDAwMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-23T15:48:15Z",
    "updated_at": "2016-06-23T15:48:15Z",
    "author_association": "MEMBER",
    "body": "So if you have a non-hierarchical index, you expect a reindex:\n\n```\nIn [59]: frame2 = frame.reset_index(level=1, drop=True)\n\nIn [60]: frame2\nOut[60]:\nstate  Ohio     Colorado\ncolor Green Red    Green\nkey1\na         0   1        2\na         3   4        5\nb         6   7        8\nb         9  10       11\n\nIn [63]: frame2.loc[['b', 2], 'Colorado']\nOut[63]:\ncolor  Green\nkey1\nb        8.0\nb       11.0\n2        NaN\n```\n\nSo `loc` is rather liberal on its inputs and does not raise with a list-indexer when at least one of the labels is found. \nThe problem with the multi-index case is that reindexing is not really an option if you do not provide full indexers (containing all levels, eg `frame.loc[[('b', 2), ('c', 3)], 'Colorado']` does reindex)\n\nSo in this case it would maybe indeed make sense to raise ? Other option is to keep as is and ignore those values, or to do a reindex with an empty label for the second level (like reindexing with `[(2, NaN)]`)\n\nI thought we already had a discussion on this once, but can't directly find the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228181201",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13501#issuecomment-228181201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13501",
    "id": 228181201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODE4MTIwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-23T20:56:17Z",
    "updated_at": "2016-06-23T20:57:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "so you are using slicers implicitly here and its ambiguous, see docs [here](http://pandas.pydata.org/pandas-docs/stable/advanced.html#using-slicers)\n\nYou want something like this?\n\n```\nIn [12]: idx = pd.IndexSlice\n\nIn [19]: frame.loc[idx['b', 1], 'Colorado']\nOut[19]: \ncolor\nGreen    8\nName: (b, 1), dtype: int64\n\nIn [21]: frame.loc[idx[['b'], 1], 'Colorado']\nOut[21]: \ncolor      Green\nkey1 key2       \nb    1         8\n```\n\nThis is 'partial' indexing (e.g. I can use ':' for give me everything for that level)\n\n```\nIn [29]: frame.loc[idx['a', :], 'Colorado']\nOut[29]: \ncolor      Green\nkey1 key2       \na    1         2\n     2         5\n```\n\nSo giving a list to the entire input is an error, you can give a list to a single level (e.g. with multiple values).\n\nI think this part is a bug\n\n```\nIn [22]: frame.loc[idx[['b', 1]], 'Colorado']\nOut[22]: \ncolor      Green\nkey1 key2       \nb    1         8\n     2        11\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/228350929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13501#issuecomment-228350929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13501",
    "id": 228350929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODM1MDkyOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T13:51:16Z",
    "updated_at": "2016-06-24T13:51:16Z",
    "author_association": "MEMBER",
    "body": "@jreback You don't need the IndexSlicer to access a single element, doing `frame.loc[('b', 1), 'Colorado']` (using a tuple) is perfectly fine IMO?\n\nI suppose the issue was raised (@jseabold correct me if I am wrong) is because somebody wanted to do the above (and so should have used tuple) but used a list, and that the output was then a bit unexpected.\n\nThe `frame.loc[['b', 2], 'Colorado']` is interpreted (I think) like `frame.loc[(['b', 2], slice(None)), 'Colorado']` or `frame.loc[idx[['b', 2], :], 'Colorado']`. \nThis is similar like `frame.loc[['a', 'b'], 'Colorado']` which gives you correctly the full frame:\n\n```\nIn [11]: frame.loc[['a', 'b'], 'Colorado']\nOut[11]:\ncolor      Green\nkey1 key2\na    1         2\n     2         5\nb    1         8\n     2        11\n```\n\nSo the issue is more regarding: _what to do when not all labels are included in a list indexer in case of a MultiIndex_ ?\n\nYou can also see this issue when using the more explicit IndexSlice:\n\n```\nIn [17]: frame.loc[idx[['b', 'c'], :], 'Colorado']\nOut[17]:\ncolor      Green\nkey1 key2\nb    1         8\n     2        11\n```\n\nThe 'c' is ignored in this case (for a single index, you would get a reindex operation introducing NaNs).\n"
  }
]
