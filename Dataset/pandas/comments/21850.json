[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404352256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-404352256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 404352256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM1MjI1Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:32:21Z",
    "updated_at": "2018-07-12T00:32:21Z",
    "author_association": "MEMBER",
    "body": "cc @jreback @chris-b1 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406283186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-406283186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 406283186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjI4MzE4Ng==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T13:51:05Z",
    "updated_at": "2018-07-19T13:51:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I would appreciate your review of this topic."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408079033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-408079033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 408079033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODA3OTAzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T12:22:22Z",
    "updated_at": "2018-07-26T12:22:22Z",
    "author_association": "MEMBER",
    "body": "cc @reidy-p @chris-b1 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408081528",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-408081528",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 408081528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODA4MTUyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T12:32:03Z",
    "updated_at": "2018-07-26T12:32:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I disgree, this is a good deprecation. Keeping around old code is not helpful. So -1 on adding back."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408117586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-408117586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 408117586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODExNzU4Ng==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T14:32:11Z",
    "updated_at": "2018-07-26T14:32:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback It is clear that you think this is a good deprecation, otherwise you would not have done it.  However, the initial justification (\"only 6 hits on Stack Overflow\") completely ignored the larger picture, which is that this function is widely used in a huge number of applications and libraries.\r\n\r\nIt  might be the case that the original implementation was unwieldy or costly to maintain.  But what could be the reason not to maintain backward compatibility by a 3-line function that delegates the work to OrderedDict and the main DataFrame constructor?\r\n\r\nIn other words, maybe the old code was not helpful.  Would you accept new code to implement this widely-used function in a single place, rather than having thousands of users sprinkle the same into their local codebases?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408264019",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-408264019",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 408264019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI2NDAxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T23:18:47Z",
    "updated_at": "2018-07-26T23:18:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "there is a burden to maintain apis and code \r\nwhy should this be any different from other ‘highly used code’"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408822866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-408822866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 408822866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODgyMjg2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T10:45:28Z",
    "updated_at": "2018-07-30T10:45:28Z",
    "author_association": "MEMBER",
    "body": "I agree with @jzwinck that \"old code\" and \"burden to maintain apis and code\" is not a good reason for deprecating `from_items`. `from_items` is really not that of a complicated function (compared to many other things in pandas) and as @jzwinck shows can be easily cleaned-up.\r\n\r\n*If* that was the original reason to deprecate it, I think the PR of @jzwinck is a perfectly reasonable solution.\r\n\r\nHowever, often when we deprecate one of the public methods, the main reasons are related to the \"User API\" design: inconsistent apis, duplicate functionality, hardly useful functionality that clobbers the API, etc are all reasons to consider deprecating a functionality. \r\nWe have a huge number of methods on the DataFrame object, and this huge number results in an overload for users. Therefore for having something as a method on the DataFrame, there should be a clear added value that is big enough to balance the added complexity / API load.\r\n\r\nSo also for `from_items`: is it worth having this as a DataFrame method given the relatively limited use case / relatively easy alternative?\r\n\r\nAnd to be clear, such a trade-off is difficult and subjective. \r\nAnd when it is about removing existing functionality (instead of adding a new method), the balance should typically be more strongly against having the method (because then there is also the disruption of the existing use cases).\r\n\r\n---\r\n\r\nThat said, I personally never had a use case myself where `from_items` would have been fitting. That is not saying that those do not exist, but for me it is very hard to judge its usefulness.\r\n\r\nIf this would have been a new method proposal, I would probably be -1 to add it. But given that this is about removing an already existing method, I personally don't know."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408841985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-408841985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 408841985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODg0MTk4NQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T12:09:54Z",
    "updated_at": "2018-07-30T12:09:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the insight @jorisvandenbossche.  If this were a brand new API, I would not promote it either.  But as you point out, it is an API Pandas has had for a long time.\r\n\r\nTo me the largest concerns are\r\n 1. Existing uses of `from_items()` in the wild.\r\n 2. The inadequacy (even bugs, see below) of the refactoring proposed by the deprecation warning.  Reading #4916, it was not totally clear even to the experts how to replace `from_items()` in some cases.\r\n\r\nOn [24 August 2017, @bashtage asked](https://github.com/pandas-dev/pandas/issues/17320#issuecomment-324671585):\r\n> What about `orient='index'? I used this just last week.\r\n\r\nThis was a prescient question: it is exactly the case which triggers #8425 if you can't use `from_items()`.  But no one replied.  Evidently no one tried it either, because one of the existing Pandas test cases fails if you try to replace `from_items(orient='index')` with `from_dict()`.\r\n\r\nI could see making the docs say `from_items()` is deprecated, but when the difference between user code working and not working comes down to 15 lines of Python, I don't see why we'd break those apps or force them all to copy-paste an incomplete and buggy workaround."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421199892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-421199892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 421199892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE5OTg5Mg==",
    "user": {
      "login": "PatrickDRusk",
      "id": 17709454,
      "node_id": "MDQ6VXNlcjE3NzA5NDU0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17709454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickDRusk",
      "html_url": "https://github.com/PatrickDRusk",
      "followers_url": "https://api.github.com/users/PatrickDRusk/followers",
      "following_url": "https://api.github.com/users/PatrickDRusk/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickDRusk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickDRusk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickDRusk/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickDRusk/orgs",
      "repos_url": "https://api.github.com/users/PatrickDRusk/repos",
      "events_url": "https://api.github.com/users/PatrickDRusk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickDRusk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T01:15:01Z",
    "updated_at": "2018-09-14T01:45:52Z",
    "author_association": "NONE",
    "body": "I haven't seen any mention that the `from_dict(OrderedDict(items)...` doesn't work in cases where there would be duplicates in the index. Here is a test that would fail:\r\n```python\r\nimport pandas\r\nfrom collections import OrderedDict\r\ndef test_from_dict_replacing_from_items():\r\n    rows = [(1, (2,)), (1, (2,))]\r\n    df1 = pandas.DataFrame.from_items(rows, columns=('a', ), orient='index')\r\n    df2 = pandas.DataFrame.from_dict(OrderedDict(rows), columns=('a', ), orient='index')\r\n    pandas.testing.assert_frame_equal(df1, df2)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458414172",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458414172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458414172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQxNDE3Mg==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T05:38:24Z",
    "updated_at": "2019-01-29T05:38:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@PatrickDRusk Good point. There are several cases where the replacement for `from_items()` is not obvious.  Pandas maintainers simply don't care about backward compatibility--deleting working code from Pandas is more important than providing a smooth experience for long-time Pandas users like you and me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458416192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458416192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458416192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQxNjE5Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T05:50:27Z",
    "updated_at": "2019-01-29T05:57:47Z",
    "author_association": "MEMBER",
    "body": "> Pandas maintainers simply don't care about backward compatibility--deleting working code from Pandas is more important than providing a smooth experience for long-time Pandas users like you and me.\r\n\r\n@jzwinck : I should point out that @jorisvandenbossche was willing to reopen the issue, but you promptly closed it.  From the looks of it, your comments are in fact somewhat hypocritical.\r\n\r\nI would caution your tone before you make such broad statements about us like that.  We don't delete code on a whim, and with so many users of this codebase it is difficult to please everyone when it comes to making a library like this work.\r\n\r\nIf you want to have a discussion again about this topic, then please re-open the issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458420021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458420021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458420021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQyMDAyMQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T06:12:59Z",
    "updated_at": "2019-01-29T06:12:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung OK, I've reopened this issue.  The current state of play is that there are a number of users of Pandas who can't easily upgrade to 0.23 or later because `from_items()` is deprecated and the suggested workaround only covers some fraction of use cases (maybe 30% by cardinality and 70% by popularity).  My PR #22094 eliminates most of the burdensome implementation code for `from_items()` and covers maybe 90% of the use cases (but not the one from @PatrickDRusk, I think).\r\n\r\nWhat should we do next?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458439806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458439806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458439806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQzOTgwNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T07:47:58Z",
    "updated_at": "2019-01-29T07:49:13Z",
    "author_association": "MEMBER",
    "body": "Okay, let's take stock of what we have here:\r\n\r\n> I haven't seen any mention that the from_dict(OrderedDict(items)... doesn't work in cases where there would be duplicates in the index.\r\n\r\nHmmm...duplicate indices generally have not been a fan-favorite for us as maintainers because such support can be very hard to maintain, not just for one case, but as a \"feature\" across the entire interface of `pandas`.\r\n\r\n@PatrickDRusk : So admittedly I'm somewhat torn: the statement is indeed inaccurate with regards to duplicate indices, but committing to supporting such behavior could send the wrong message that we intend to support duplicates full-throttle, when that is far from the case in our codebase.\r\n\r\n@pandas-dev/pandas-core : Thoughts on this?\r\n\r\n> the suggested workaround only covers some fraction of use cases (maybe 30% by cardinality and 70% by popularity)\r\n\r\n@jzwinck : This statement unfortunately is too vague for us to work with.  Especially since we already made the decision to deprecate, we will need more than words and GitHub search results to make a convincing argument.  Meet us halfway and present us with more examples to illustrate that the suggested change is incompatible.\r\n\r\nCaveat: if they fall into same category of duplicates, I personally wouldn't count it unless it is somehow different (I'll leave it to your discretion to judge appropriately) from what @PatrickDRusk has given."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458450553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458450553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458450553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ1MDU1Mw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T08:28:28Z",
    "updated_at": "2019-01-29T08:28:28Z",
    "author_association": "MEMBER",
    "body": "> @pandas-dev/pandas-core : Thoughts on this?\r\n\r\nI'm +0.5 on keeping the method. In general, I don't see \"easy to replace with user code\" as an argument to deprecate - maybe the opposite, if the code is so simple and so widely used...\r\nI'm -1.5 on \"we don't want to encourage duplicated labels\" as an argument. Pandas supports them, let's face it. It is perfectly fine to not support them - and document it - in those cases when it's just a mess. But not supporting them \"just to give a message to users\", in cases where it's extremely simple to support them, is not nice.\r\n\r\nAnyway, if we _really_ want to discourage users from using duplicated labels, the the correct way to do it is to introduce a general warning for it, inside the ``Index`` (and subclasses) constructor. Maybe even a ``DeprecationWarning``, giving users several releases to adapt, would allow us to eventually simplify our code. I just don't think it's worth the pain (but this is very IMHO)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458452660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458452660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458452660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ1MjY2MA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T08:36:11Z",
    "updated_at": "2019-01-29T08:36:11Z",
    "author_association": "MEMBER",
    "body": "By the way: deprecating ``DataFrame.from_items`` because the API is too large is particularly funny because [we just introduced](https://github.com/pandas-dev/pandas/pull/23141#issuecomment-441401829) the very specific ``MultiIndex.from_frame``, which is a very simple wrapper."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458458852",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458458852",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458458852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ1ODg1Mg==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T08:57:32Z",
    "updated_at": "2019-01-29T08:57:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I don't personally need support for duplicate values in the index, and I wrote #22094 without considering that.  For people who like reduced implementation code and don't want duplicate values in the index, #22094 provides both.\r\n\r\nYou said:\r\n> Meet us halfway and present us with more examples to illustrate that the suggested change is incompatible.\r\n\r\nPlease look at the logic in #22094.  That's what I had to write to make the preexisting unit tests pass.  In other words, the unit tests I restored in that PR are the examples you are looking for.  Any code using `from_items()` with the `columns` and/or `orient` parameters requires more than the suggested workaround using OrderedDict (and that additional code is what my PR implements).  I wrote that PR for two reasons: to solve the problem, and to demonstrate that the trivial-seeming workaround code using OrderedDict is not sufficient."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458469982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458469982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458469982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ2OTk4Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T09:31:41Z",
    "updated_at": "2019-01-29T09:31:58Z",
    "author_association": "MEMBER",
    "body": "> \"we don't want to encourage duplicated labels\" as an argument. Pandas supports them, let's face it. It is perfectly fine to not support them - and document it \r\n\r\n@toobaz : I beg to differ to the extent in which duplicates of labels, whether it be in columns or indices is supported as well as non-duplicates, but let's agree to disagree on this one for the moment.  My point is not about \"sending a message\" by not supporting it.  It's actually about \"not sending the wrong message\" that's more important IMO."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458470718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458470718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458470718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ3MDcxOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T09:33:43Z",
    "updated_at": "2019-01-29T09:34:02Z",
    "author_association": "MEMBER",
    "body": "> Please look at the logic in #22094. That's what I had to write to make the preexisting unit tests pass. \r\n\r\n@jzwinck : I read it, and I'm really confused here...what pre-existing unit test was failing before your change?  You seemed to have removed several tests + removed deprecation warnings that we had in place that we were checking for..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458478313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458478313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458478313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ3ODMxMw==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T09:56:04Z",
    "updated_at": "2019-01-29T09:56:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I should have said \"to make the tests pass as they did before the deprecation warnings were added.\"  In other words, I put the unit tests back to the way they were before the deprecation, and then implemented the logic in `from_items()` to make them all work again without the \"burdensome\" logic (replacing that with the OrderedDict solution plus a bit more logic to cover all the test cases)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458617514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21850#issuecomment-458617514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21850",
    "id": 458617514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYxNzUxNA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T16:53:04Z",
    "updated_at": "2019-01-29T16:53:04Z",
    "author_association": "MEMBER",
    "body": "I would also lean towards keeping `from_items` around. It may not be an optimal API, but it solves a real use case and it isn't broken. I don't see it really adding much to the pandas maintenance burden."
  }
]
