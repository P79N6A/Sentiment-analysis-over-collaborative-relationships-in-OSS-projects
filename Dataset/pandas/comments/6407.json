[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35493823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6407#issuecomment-35493823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6407",
    "id": 35493823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDkzODIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-19T12:35:00Z",
    "updated_at": "2014-02-19T12:35:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is actually an enhancement it didn't work in 0.12 (just gave a wrong answer!)\n\ntakes a DatetimeIndex only\n\n```\nIn [10]: pd.infer_freq?\nType:       function\nString Form:<function infer_freq at 0x3b207d0>\nFile:       /mnt/home/jreback/pandas/pandas/tseries/frequencies.py\nDefinition: pd.infer_freq(index, warn=True)\nDocstring:\nInfer the most likely frequency given the input index. If the frequency is\nuncertain, a warning will be printed\n\nParameters\n----------\nindex : DatetimeIndex\nwarn : boolean, default True\n\nReturns\n-------\nfreq : string or None\n    None if no discernible frequency\n```\n\nworks correctly on the index\n\n```\nIn [12]: pd.infer_freq(s.index)\nOut[12]: 'MS'\n```\n\nout of curiosity, what is your usecase for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35623223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6407#issuecomment-35623223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6407",
    "id": 35623223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjIzMjIz",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-20T13:56:40Z",
    "updated_at": "2014-02-20T13:56:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right - UserError!\n\nI want to create a contiguous date range at the same frequency as another series where the other series may have its freqstr equal to None. The \"same frequency\" is defined as the lowest frequency such that a contiguous date range will include every date in the other series - e.g. in the trivial case \nmicrosecond frequency will interpolate any series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35623545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6407#issuecomment-35623545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6407",
    "id": 35623545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjIzNTQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-20T14:00:33Z",
    "updated_at": "2014-02-20T14:00:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok..thanks\n\nyour example will raise (as its using the VALUES of the Series, otherwise this is very confusing).\nRather than return None (which IMHO is wrong). FYI their is no real distinction between `TimeSeries` and `Series` since 0.13\n"
  }
]
