[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121320190",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121320190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121320190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyMDE5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T17:44:16Z",
    "updated_at": "2015-07-14T17:44:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @njsmith \ncc @seberg\n\nmuch more tricky than I thought\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121411947",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121411947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121411947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTQxMTk0Nw==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T22:27:17Z",
    "updated_at": "2015-07-14T22:27:17Z",
    "author_association": "NONE",
    "body": "Sorry, what's the question?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121726957",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121726957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121726957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTcyNjk1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T19:54:49Z",
    "updated_at": "2015-07-15T19:55:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "so this is the reality check\n\ncc @njsmith \n@jorisvandenbossche @shoyer \n\nscalar comparisons vs null are always False, but in an array context we have\nalways had them as True. Is this right?\nObviously the user should use `.isnull` or even `np.isnan`.\nAny reason NOT to change this?\n\nthis PR\n\n```\nIn [6]:  s = Series([1,np.nan,'b'])\n\nIn [7]: s == s\nOut[7]: \n0     True\n1    False\n2     True\ndtype: bool\n\nIn [8]: s == None\nOut[8]: \n0    False\n1     True\n2    False\ndtype: bool\n\nIn [9]: s == np.nan\nOut[9]: \n0    False\n1     True\n2    False\ndtype: bool\n```\n\n0.16.2\n\n```\nIn [1]: s = Series([1,np.nan,'b'])\n\nIn [2]: s == s\nOut[2]: \n0     True\n1    False\n2     True\ndtype: bool\n\nIn [3]: s == None\nOut[3]: \n0    False\n1    False\n2    False\ndtype: bool\n\nIn [4]: s == np.nan\nOut[4]: \n0    False\n1    False\n2    False\ndtype: bool\n```\n\nand numpy (both current and 1.10/master)\n\n```\nIn [9]: s.values\nOut[9]: array([1, nan, 'b'], dtype=object)\n\nIn [10]: s.values == None\n/Users/jreback/anaconda/bin/ipython:1: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.\n  #!/bin/bash /Users/jreback/anaconda/bin/python.app\nOut[10]: False\n\nIn [11]: s.values == np.nan\nOut[11]: array([False, False, False], dtype=bool)\n\nIn [14]: s.values==s.values\n/Users/jreback/anaconda/bin/ipython:1: FutureWarning: numpy equal will not check object identity in the future. The comparison did not return the same result as suggested by the identity (`is`)) and will change.\n  #!/bin/bash /Users/jreback/anaconda/bin/python.app\nOut[14]: array([ True,  True,  True], dtype=bool)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121730296",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121730296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121730296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTczMDI5Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T20:03:19Z",
    "updated_at": "2015-07-15T20:03:59Z",
    "author_association": "MEMBER",
    "body": "Here is what I think we want (which is none of the above, but IMO also what NumPy should be doing):\n\n```\nIn [6]:  s = Series([1,np.nan,'b'])\n\nIn [7]: s == s\nOut[7]: \n0     True\n1    False\n2     True\ndtype: bool\n\nIn [8]: s == None\nOut[8]: \n0    False\n1    False\n2    False\ndtype: bool\n\nIn [9]: s == np.nan\nOut[9]: \n0    False\n1    False\n2    False\ndtype: bool\n``\n\nI don't think it's a good idea to pretend that `None` is the same thing as `np.nan`. Likewise, we should not change the semantics of nan, which is that it compares False to everything.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121730573",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121730573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121730573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTczMDU3Mw==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T20:04:37Z",
    "updated_at": "2015-07-15T20:04:37Z",
    "author_association": "NONE",
    "body": "Was going to say exactly the same thing but @shoyer types faster than me.\n\nOn Wed, Jul 15, 2015 at 3:03 PM, Stephan Hoyer notifications@github.com\nwrote:\n\n> Here is what I think we want:\n> \n> In [6]:  s = Series([1,np.nan,'b'])\n> \n> In [7]: s == s\n> Out[7]:\n> 0     True\n> 1    False\n> 2     True\n> dtype: bool\n> \n> In [8]: s == None\n> Out[8]:\n> 0    False\n> 1    False\n> 2    False\n> dtype: bool\n> \n> In [9]: s == np.nan\n> Out[9]:\n> 0    False\n> 1    False\n> 2    False\n> dtype: bool\n> ``\n> \n> I don't think it's a good idea to pretend that `None` is the same thing as `np.nan`. Likewise, we should not change the semantics of nan, which is that it compares False to everything.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/pull/10569#issuecomment-121730296.\n\n## \n\nNathaniel J. Smith -- http://vorpus.org\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121730659",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121730659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121730659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTczMDY1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T20:05:05Z",
    "updated_at": "2015-07-15T20:06:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > I don't think it's a good idea to pretend that `None` is the same thing as `np.nan`. Likewise, we should not change the semantics of nan, which is that it compares False to everything.\n\nThis IS possible but ONLY for object dtypes\n\n`None` -> `np.nan` for other dtypes and comparison\n\nand `None` -> `NaT` for `m|M` comparisons\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121740037",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121740037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121740037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTc0MDAzNw==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T20:38:03Z",
    "updated_at": "2015-07-15T20:38:03Z",
    "author_association": "NONE",
    "body": "But nan != nan, so even if None is coerced to nan (ugh, why does numpy do\nthat), then the comparisons should still return False.\n\nOn Wed, Jul 15, 2015 at 3:05 PM, jreback notifications@github.com wrote:\n\n>  I don't think it's a good idea to pretend that None is the same thing as\n> np.nan. Likewise, we should not change the semantics of nan, which is\n> that it compares False to everything.\n> \n>  This IS possible but ONLY for object dtypes\n> \n> None -> np.nan for other dtypes and comparison\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/pull/10569#issuecomment-121730659.\n\n## \n\nNathaniel J. Smith -- http://vorpus.org\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/121776935",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-121776935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 121776935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTc3NjkzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T23:42:01Z",
    "updated_at": "2015-07-15T23:42:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok all fixed up. So at the end of the day I removed the DeprecationWarning that numpy is now showing (well one of them anyhow....still some others).\n\nnow allow comparison vs `None` for non-object dtypes (prob not used very much anyhow as it used to raise).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122064824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122064824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122064824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjA2NDgyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-16T19:39:33Z",
    "updated_at": "2015-07-16T19:39:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @kshedden  \ncc @bashtage\n\nthis PR removes some numpy warnings that happen in 1.10; long story short is that a lot are coming from some of the stata test code (basically you can't compare M8[ns] dtypes with integer/floats anymore). So in fixing this, I think the actual tests might be broken as in return wrong values.\n\n(you don't need to use numpy master, this is with 1.9.2)\ne.g.\n\n```\n[jreback-~/pandas] nosetests  pandas/io/tests/test_stata.py\n/Users/jreback/anaconda/lib/python2.7/site-packages/numpy/core/numeric.py:2367: FutureWarning: numpy equal will not check object identity in the future. The comparison did not return the same result as suggested by the identity (`is`)) and will change.\n  return bool(asarray(a1 == a2).all())\n.......................FF.....................\n======================================================================\nFAIL: test_read_chunks_115 (pandas.io.tests.test_stata.TestStata)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/jreback/pandas/pandas/io/tests/test_stata.py\", line 986, in test_read_chunks_115\n    check_datetimelike_compat=True)\n  File \"/Users/jreback/pandas/pandas/util/testing.py\", line 768, in assert_frame_equal\n    check_datetimelike_compat=check_datetimelike_compat)\n  File \"/Users/jreback/pandas/pandas/util/testing.py\", line 697, in assert_series_equal\n    right.values))\nAssertionError: [datetimelike_compat=True] [  1.47959720e+12] is not equal to ['2006-11-19T18:13:20.000000000-0500'].\n\n======================================================================\nFAIL: test_read_chunks_117 (pandas.io.tests.test_stata.TestStata)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/jreback/pandas/pandas/io/tests/test_stata.py\", line 929, in test_read_chunks_117\n    check_datetimelike_compat=True)\n  File \"/Users/jreback/pandas/pandas/util/testing.py\", line 768, in assert_frame_equal\n    check_datetimelike_compat=check_datetimelike_compat)\n  File \"/Users/jreback/pandas/pandas/util/testing.py\", line 697, in assert_series_equal\n    right.values))\nAssertionError: [datetimelike_compat=True] [  1.47959720e+12] is not equal to ['2006-11-19T18:13:20.000000000-0500'].\n\n----------------------------------------------------------------------\nRan 46 tests in 1.108s\n\n```\n\ncan you have a look. thxs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122090680",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122090680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122090680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjA5MDY4MA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-16T20:55:14Z",
    "updated_at": "2015-07-16T20:55:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Did you take out the `try except` to get those?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122091822",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122091822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122091822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjA5MTgyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-16T20:57:26Z",
    "updated_at": "2015-07-16T20:57:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am doing what was inside the  except inside assert_series_equal\n\nbut I think it was completley failing before and just covered up\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122197277",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122197277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122197277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjE5NzI3Nw==",
    "user": {
      "login": "kshedden",
      "id": 2666691,
      "node_id": "MDQ6VXNlcjI2NjY2OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2666691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kshedden",
      "html_url": "https://github.com/kshedden",
      "followers_url": "https://api.github.com/users/kshedden/followers",
      "following_url": "https://api.github.com/users/kshedden/following{/other_user}",
      "gists_url": "https://api.github.com/users/kshedden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kshedden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kshedden/subscriptions",
      "organizations_url": "https://api.github.com/users/kshedden/orgs",
      "repos_url": "https://api.github.com/users/kshedden/repos",
      "events_url": "https://api.github.com/users/kshedden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kshedden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T06:50:12Z",
    "updated_at": "2015-07-17T07:15:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just pushed a change to #9882 that should fix the AssertionErrors above.  It was due to inconsistent options set in the test when reading by chunk and when reading the full file.\n\nHowever you will still get the numpy warnings I think.  It is complaining about comparing pandas timestamps to numpy datetime64 or Python datetimes.  I'm quite sure that the dates/times are the same, but they sometimes have different types.  To get around this, if assert_frame_equal fails we try again comparing elementwise.  Apparently the three date/time representations have elementwise == defined in a way that works consistently across the types.\n\nThe root issue is that convert_year_month_safe and related methods in the StataReader check to see if the date falls in the valid pandas range, and uses a timestamp if they do, and a Python datetime if they do not.  When reading the file by chunk, this decision must be made based on the data in the chunk, so may differ from the decision used when reading the entire file.  Many of the example dta files have dates that fall outside of the pandas date range (e.g. year=2).  \n\nI don't see a solution that both checks the values and avoids the warnings, except converting everything to Python datetimes.  Our current solution correctly checks the values but emits warnings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122267862",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122267862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122267862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI2Nzg2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T13:03:41Z",
    "updated_at": "2015-07-17T13:03:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kshedden thanks I incorporated your fix and works! thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122281225",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122281225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122281225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI4MTIyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T13:59:32Z",
    "updated_at": "2015-07-17T13:59:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I made those changes. Also cleaned the whatsnew a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122293060",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122293060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122293060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5MzA2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:23:49Z",
    "updated_at": "2015-07-17T14:23:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/commit/2da060ce4a3635ece00ed947d26510be1a13cb08 should do it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122295674",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122295674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122295674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NTY3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:35:10Z",
    "updated_at": "2015-07-17T14:35:10Z",
    "author_association": "MEMBER",
    "body": "@jreback Nice!\n\nSome comments:\n- `s = Series(range(3.))` will raise, `range` only takes integers\n- the note on `None==None` returning None is interesting, but maybe we need to explicitely note that we do not follow that behaviour?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122295950",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122295950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122295950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NTk1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:36:35Z",
    "updated_at": "2015-07-17T14:36:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "oops that was a typo. Yeh I though I made clear that `None` is equiv to `np.nan`. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122295999",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122295999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122295999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NTk5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:36:50Z",
    "updated_at": "2015-07-17T14:36:50Z",
    "author_association": "MEMBER",
    "body": "BTW, that was something I wanted to note previously on the actual PR. The coercion of None to np.nan leads to some tricky behaviour where somebody would discriminate between both in object serieses, and introduces differences with numpy:\n\n```\nIn [21]: pd.Series(['a', None]) == pd.Series(['a', None])\nOut[21]:\n0     True\n1    False\ndtype: bool\n\nIn [22]: pd.Series(['a', None]).values == pd.Series(['a', None]).values\nOut[22]: array([ True,  True], dtype=bool)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122296412",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122296412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122296412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NjQxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:38:54Z",
    "updated_at": "2015-07-17T14:39:55Z",
    "author_association": "MEMBER",
    "body": "(Not saying that this is a good idea (the discriminating between None and np.nan), but technically for object dtyped series it is possible, so people will do) So I wonder if we shouldn't do this as well when comparing with `==` (and treat None and np.nan differently for object dtypes) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122296807",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122296807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122296807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NjgwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:40:44Z",
    "updated_at": "2015-07-17T14:40:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche yes you are absoutely right. You would have to do that in an `object` dtype. People will abuse even this!. I am not sure that's worth a caveat/gotcha though (prob read even less than that the actual docs :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122296891",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122296891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122296891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5Njg5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:41:11Z",
    "updated_at": "2015-07-17T14:41:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche all that said if you find things unclear, pls update!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122297003",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122297003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122297003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NzAwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:41:44Z",
    "updated_at": "2015-07-17T14:41:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/commit/b06105595868cf35bd60cc1b131de94ea3577176\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122297394",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122297394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122297394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5NzM5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:43:07Z",
    "updated_at": "2015-07-17T14:43:07Z",
    "author_association": "MEMBER",
    "body": "But, with the current behaviour it is a caveat as well as it deviates from standard python and numpy behaviour:\n\n```\nIn [27]: None == None\nOut[27]: True\n\nIn [28]: pd.Series([None]) == pd.Series([None])\nOut[28]:\n0    False\ndtype: bool\n```\n\nSo it is a bit the question which caveat your prefer ...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122298089",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10569#issuecomment-122298089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10569",
    "id": 122298089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI5ODA4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T14:46:00Z",
    "updated_at": "2015-07-17T14:46:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "hah!\n\nyeh I think we just discourage `== None` and `== np.nan` (which has been longstanding) and promote `isnull/notnull`. @wesm did for prob this exact reason/confusion.\n"
  }
]
