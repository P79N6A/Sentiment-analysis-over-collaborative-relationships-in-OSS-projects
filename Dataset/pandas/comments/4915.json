[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24863043",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24863043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24863043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYzMDQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T14:09:53Z",
    "updated_at": "2013-09-21T14:09:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \n\nseparate the 1-d and 2-d cases:\n\nif you are doing 1-d interp, e.g. a Series, (which can be also be done by applying interpolate on a frame)\n\nthen you are just using 1-d days, with an index (x), and values (y) which produce new values which you return as the new values.the y have nans (if they don't it should just pass thru, right?)\n\n2-d is a completely different case, what does scipy do here? like a grid interp? (obviously these only work on frames)\n\nalso....not sure you even need to fill at all, isn't that the point of interp? (or is it possible that nans are returned from these routines?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24863829",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24863829",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24863829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYzODI5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T14:57:54Z",
    "updated_at": "2013-09-21T14:57:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "The real difference between 1d and 2d is that the function object returned by `scipy.interpolate.interp2d` is now a function of two arguments: f(x, y).  This could conceivably be useful on a Series with a MultiIndex (all the more reason to place all this in generic!)\n\n> also....not sure you even need to fill at all\n\nThe interpolated values shouldn't normally contain `NaNs`.  But the reason I'm thinking about fillna is that the current behavior of `Series.interpolate` is to fill `NaNs`.  So that needs to stay the default behavior of `generic.interpolate`.  I'm a bit worried that the purpose of `.interpolate` is a bit broad, but fundamentally _interpolation_ and _filling `NaNs`_ are similar enough to be contained under the same method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864372",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0Mzcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:24:43Z",
    "updated_at": "2013-09-21T15:24:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger can you give an example in action, maybe am confused, but I thought the idea is to:\n\n```\nIn [1]: s = Series([1,np.nan,3,np.nan,5])\n\nIn [2]: s\nOut[2]: \n0     1\n1   NaN\n2     3\n3   NaN\n4     5\ndtype: float64\n```\n\nafter interpolate\n\n```\nIn [4]: s.interpolate()\nOut[4]: \n0    1\n1    2\n2    3\n3    4\n4    5\ndtype: float64\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864703",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0NzAz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:42:12Z",
    "updated_at": "2013-09-21T15:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would be correct.  But I think I've seen questions on SO about how to do something like:\n\n``` python\n>>> s = Series([0,1, 2, 3])\n>>> s.interpolate([0.5, 1.5, 2.5])  # interpolate what the Series would be at these points.\n0.5    0.5\n1.5    1.5\n2.5    2.5\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864778",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0Nzc4",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:45:55Z",
    "updated_at": "2013-09-21T15:47:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you see a use for that? If so does it belong under interpolate or elsewhere?  I guess the connection to filling `NaNs`  is reindexing to include the original index and the new values and filling in the `NaNs`:\n\n``` python\nIn [66]: s = Series([0, 1, 2, 3])\n\nIn [67]: s.reindex([0, .5, 1, 1.5, 2, 2.5, 3]).interpolate()\nOut[67]: \n0.0    0.0\n0.5    0.5\n1.0    1.0\n1.5    1.5\n2.0    2.0\n2.5    2.5\n3.0    3.0\ndtype: float64\n```\n\nMaybe thats a better way to think about it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864797",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0Nzk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:47:02Z",
    "updated_at": "2013-09-21T15:47:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "so maybe a method signature of this\n\n`def interpolate(self, values=None, method='linear', axis=0, inplace=False,\n                    limit=None)`\n\nmakes sense\n\nmy example would be `values=None,method='linear'`\nyours would be `values=array_of_values_same_length,method=???` (where ??? could be linear or some scipy method name)\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864823",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0ODIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:48:18Z",
    "updated_at": "2013-09-21T15:48:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't your 2nd example (reindex and fill) can be done exactly like that if the user wants\n(you could even make this a 'method'), e.g. \n\n`values=values,method='linear'` maybe should do exactly what you suggest\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864854",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0ODU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:50:07Z",
    "updated_at": "2013-09-21T15:50:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually.....this might be easy, if `values` is not None, then just reindex by it, then apply the `method` (either using what Series does not via `linear` or use a cipy method for fancier)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864943",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0OTQz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:55:02Z",
    "updated_at": "2013-09-21T15:55:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would add one more argument to the function signature: a way to specify what values to use for the x-values. By default xvalues would be the index, like we've been assuming.  But if you have a DataFrame where you want the x-values to be column `A` and the y-values to be column `B`\n\n```\ndef interpolate(self, xvalues=None, values,method='linear', axis=0, inplace=False,\n    limit=None)\n```\n\nGives something like\n\n``` python\nIn [73]: df = pd.DataFrame({'A': [1, 2, np.nan, 4], 'B': [4, 5, 6, np.nan], 'C': [1, 2, 3, 5]})\n\nIn [74]: df\nOut[74]: \n    A   B  C\n0   1   4  1\n1   2   5  2\n2 NaN   6  3\n3   4 NaN  5\n\nIn [75]: df.interpolate(xvalues='C', values='B')\nOut[75]:\n\n1   4\n2   5\n3   6\n5   8\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24864971",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24864971",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24864971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY0OTcx",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T15:56:36Z",
    "updated_at": "2013-09-21T15:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm liking the idea of reindexing and filling.  It's helps clarify why my two use cases (filling NaNs in an existing frame and interpolation at new values) are really the same.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865093",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1MDkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:02:08Z",
    "updated_at": "2013-09-21T16:04:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't we call it `index` though, clearer IMHO.\n\nI think `values` and `index` are backwards\n\n```\ndef interpolate(self, index=None, values=None,method='linear', axis=0, inplace=False,\n    limit=None)\n```\n\nso cases are:\n\n1) `index` is `None`, look at `method` and use it to fill the nans (e.g. linear)\n2) `index` is an array (same length as index or an error), reindex, then apply above\n3) `index` is a column name (only for frames), same as above (`values` is `None` here)\n4) `index` is an array/column name, and `values` is array/column ref, use that as the `xvalues`\n\nso most of this is really just argument interpretation....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865306",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1MzA2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:12:21Z",
    "updated_at": "2013-09-21T16:16:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes on index for x-values, values for y-values.  That will be nice for 2d interpolation too.  `df.interpolate(index=['A', B'], values='C', method=linear2d`)  or just `method=linear` since giving `index` a 2d array implies a 2d interpolation.\n1.  correct\n2.  Maybe.  Not sure about the different length throwing an error. What about\n\n``` python\nIn [86]: s = Series([0, 1, 2, 3])\nIn [87]: s.interpolate(values=[1.5, 2.5])\n1.5   1.5\n2.5   2.5\ndtype:  float64\n```\n\nI'lll need to think how this one is implemented.\n\n3) Yes\n4)  Yes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865419",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NDE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:18:08Z",
    "updated_at": "2013-09-21T16:18:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "your example for 2) doesn't fit with reindexing (well its not _really_ indexing, more of setting an index)\n\nI think you need to require the index to be the same length, how else would you map it (and if you really did want to map it differently, then the user should fix the series first)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865606",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NjA2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:22:42Z",
    "updated_at": "2013-09-21T16:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually hold on,  there's potentially another case\n\n5) `values` is `None` or a column of df, `index` is `None` or a column of df, `new_values` is an array. Example:\n\n``` python\nIn [92]: df2 = pd.DataFrame({'A': [2, 4, 6, 8], 'B': [1, 4, 9, 16]})\n\nIn [93]: df2\nOut[93]: \n   A   B\n0  2   1\n1  4   4\n2  6   9\n3  8  16\n\nIn [94]: df2.interpolate(index='A', values='B', new_values=[2.5, 4.5, 6.5])\nOut [94]: \n\n2.5   1.75\n4.5   5.25\n6.5   10.75\n\nThis is getting a bit hairy.  Maybe we should limit the scope for now.  Add features as needed.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865707",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865707",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NzA3",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:25:12Z",
    "updated_at": "2013-09-21T16:25:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is related to your last comment @jreback so I guess your answer there applies to my last post.  My disagreement with your 2.) came from me mixing up the `values` and `new_values` argument (need a better name for new_values).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865716",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NzE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:25:41Z",
    "updated_at": "2013-09-21T16:25:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger not sure I buy that last case.....not even sure how that maps.....simple to start \n\nyou could always support values as say a dict if you need something like that (but later)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24865729",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24865729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24865729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NzI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:26:08Z",
    "updated_at": "2013-09-21T16:26:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "is `new_values` a parameter to the interpolation? I mean, can you show how you would be calling the scipy function in case 2)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24866153",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24866153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24866153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MTUz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T16:48:41Z",
    "updated_at": "2013-09-21T16:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "`new_values` would be an argument if you think there's a use. In the abstract, interpolate would take 3 arguments: `interpolate(index, values, new_values)`.  It may help to think of partially applying the first two arguments, which would return a function `f` of one argument.  Again, still in the abstract:\n\n`interpolate([1, 2, 3], [10, 20, 30])` returns a function of one argument `f(new_values)`.  We can evaluate `f` at the array `new_values` to return an array.\n\n`f([1.5, 2.5]) = [15, 25]`\n\n`f([1, 1.5, 2, 2.5, 3]) = [10, 15, 20, 25, 30]`\n\nStepping down from the abstraction the arguments would be:\n\n`index`: defaults to the Series or DataFrame index.  Can be a column of DataFrame\n`values`: defaults to the values in a Series, every numeric column of DataFrame.  Must be the same length as `index` for the mapping to make sense.\n`new_values`: defaults to `None` (filling NaNs).  Optionally an array of values _at which_ to interpolate. In this case we'd return a Series whose index is `new_values` and the values is `f(new_values)`.\n\nplus the `method=linear` argument, and the usual `inplace=False`, `axis=0`, etc.\n\nMaybe I'll start with the nan-filling behavior first and not having a `new_values` argument at all (essentially forcing `new_values` to be `None`.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24867949",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24867949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24867949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3OTQ5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:23:19Z",
    "updated_at": "2013-09-21T18:23:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tentative signature and docstring\n\n``` python\n    def interpolate(self, index=None, values=None, new_values=None,\n                    method='linear', inplace=False, limit=None, axis=0):\n        \"\"\"Interpolate values according to different methods.\n\n        Parameters\n        ----------\n        index : arraylike. The domain of the interpolation.  Uses the\n            Series' or DataFrame's index by default.\n        values : arraylike. The range of the interpolation. Uses the values\n            in a Series or DataFrame by default.  Can also be a column name.\n            index and values *must* be of the same length.\n        new_values : arraylike or None.\n            If new_values is None, will fill NaNs.\n            If new_values is an array, will return a Series containing\n            the interpolated values and whose index is new_values.\n        method : str or int. One of {'linear', 'time', 'values' 'nearest',\n            'zero', 'slinear', 'quadratic', 'cubic'}. Or an integer\n            specifying the order of the spline interpolator to use. Is linear\n            by default. Some of the methods require scipy. TODO: Specify which ones.\n        inplace : bool, default False\n        limit : int, default None. Maximum number of NaNs to fill.\n        axis : int, default 0\n\n        Returns\n        -------\n        if new_values is None:\n            Series or Frame of same shape with NaNs filled\n        else:\n            Series with index new_values\n\n        See Also\n        --------\n        reindex, replace, fillna\n\n        Examples\n        --------\n\n        # Filling in NaNs:\n        >>> s = pd.Series([0, 1, np.nan, 3])\n        # index=s.index, values=s.values; new_values is None so filling NaNs\n        >>> s.interpolate()\n        0    0\n        1    1\n        2    2\n        3    3\n        dtype: float64\n\n        # Linear interpolation on Series at new values\n        >>> s = pd.Series([0, 1, 2, 3])\n        >>> s.interpolate(new_values=[0.5, 1.5, 2.5])\n        0.5    0.5\n        1.5    1.5\n        2.5    2.5\n        dtype: float64\n\n        # Using two columns from a DataFrame\n        >>> df = pd.DataFrame({'A': [1, 2, 3, 4], 'Y': [1, 5, 9, np.nan]})\n        >>> df.interpolate(index='A', values='Y')  # fill the NaN\n           A   Y\n        0  1   1\n        1  2   5\n        2  3   9\n        3  4  13\n        \"\"\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868075",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MDc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:29:42Z",
    "updated_at": "2013-09-21T18:29:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ```\n>    values : arraylike. The range of the interpolation. Uses the values\n>        in a Series or DataFrame by default.  Can also be a column name.\n>        index and values *must* be of the same length.\n> ```\n\nwhat does uses the 'values' in a DataFrame mean?\n\nI wouldn't allow `method` to be anything other than a string\nif you need additonal args, `kwargs` are passed thru (or you should), so use use those,\n\ne.g. `split`, will essentially default `spline_order=1` (or `order` ok too), or can have a method `spline1`, `split2`, etc.....\n\nstill fuzzy on the `new_values`...maybe your implementation/docs will clear it up!\n\ngood docstring writing! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868094",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MDk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:30:57Z",
    "updated_at": "2013-09-21T18:30:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "how does your last example decide 13 is the value? (I mean looking at it I get it, but how programatically is that the case)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868135",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868135",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MTM1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:34:06Z",
    "updated_at": "2013-09-21T18:35:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> what does uses the 'values' in a DataFrame mean?\n\nIdentical to applying Series.interpolate() to every (numeric) column of the DataFrame.  Or a list of column names to apply it to.\n\n> how does your last example decide 13 is the value? (I mean looking at it I get it, but how programatically is that the case)?\n\nI made the last example up, and after looking at current behavior I think it's wrong. Currently\n\n```\nIn [3]: s = Series([0, 1, 2, np.nan])\n\nIn [4]: s.interpolate()\nOut[4]: \n0    0\n1    1\n2    2\n3    2\ndtype: float64\n```\n\nWhich is the easy way to do things!  The scipy methods would do the same thing by default.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868164",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MTY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:36:06Z",
    "updated_at": "2013-09-21T18:36:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "so `ffill` is essentially the default then?\n\nfyi...if method is `None` I think you should raise, don't try to 'guess', \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868222",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MjIy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:40:23Z",
    "updated_at": "2013-09-21T18:40:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think `method=linear` will _have_ to be the default since this is replacing Series.interpolate(), which isn't quite `ffill`.  Current behavior:\n\n``` python\nIn [8]: s = Series([0, 1, 2, np.nan, np.nan, 5])\n\nIn [9]: s.interpolate()\nOut[9]: \n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868252",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MjUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:42:35Z",
    "updated_at": "2013-09-21T18:42:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok..sounds ok then\n\nget basics working (e.g. linear), then adding scipy functions should be striaght forward\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868312",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MzEy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:46:50Z",
    "updated_at": "2013-09-21T18:46:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "One nasty thing the way `Series.inteprolate()` is implemented now, something like \n\n``` python\nIn [8]: s = Series([0, 1, 2, np.nan, np.nan, 5])\n\nIn [9]: s.interpolate()\nOut[9]: \n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\ndtype: float64\n```\n\nwill return the same as\n\n``` python\nIn [11]: s = Series([0, 1, 2, np.nan, np.nan, 5], index=[1, 2, 4, 7, 11, 16])\n\nIn [12]: s\nOut[12]: \n1      0\n2      1\n4      2\n7    NaN\n11   NaN\n16     5\ndtype: float64\n\nIn [13]: s.interpolate()\nOut[13]: \n1     0\n2     1\n4     2\n7     3\n11    4\n16    5\ndtype: float64\n```\n\ni.e. its treating each value as \"equally spaced\".\n\nIf we are treating interpolation the way I envision we'd expect\n\n``` python\nIn [11]: s = Series([0, 1, 2, np.nan, np.nan, 5], index=[1, 2, 4, 7, 11, 16])\nIn [12]: s.interpolate()\n1     0\n2     1\n4     2\n7     2.75\n11    3.75\n16    5\ndtype: float64\n```\n\nThis may mean we have to tweak the `index` default.  It would be `index=arange(len(self))` for backwards compat, and users could choose to use `index=s.index`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4NDQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:54:33Z",
    "updated_at": "2013-09-21T18:54:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't you call the exising `method=linear` and what most people would do as `method='equal'`\nand at some point can just change the default (to equal)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868684",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4Njg0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T19:08:49Z",
    "updated_at": "2013-09-21T19:08:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds like a good idea.  I'll think about the names.  `equal` sounds like what linear is doing right now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4NzQy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T19:11:59Z",
    "updated_at": "2013-09-21T19:11:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah never-mind!  Wes already solved this for us.  One of the possible values to give to the original `Series.interpolate` was `method=values`, which uses the actual numerical index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868810",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4915#issuecomment-24868810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4915",
    "id": 24868810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4ODEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T19:15:48Z",
    "updated_at": "2013-09-21T19:15:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "gr8\n\nthough maybe method=index is better? (because we are now using the index keyword where values used to be)\n"
  }
]
