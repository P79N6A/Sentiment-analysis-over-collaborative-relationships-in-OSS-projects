[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/306910283",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16622#issuecomment-306910283",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16622",
    "id": 306910283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjkxMDI4Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T20:09:29Z",
    "updated_at": "2017-06-07T20:09:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "The first example in the docstring shows exactly this case, but certainly would welcome any improvements to make this clearer.  `DataFrame.combine_first` basically does what you want, although not on a collection.\r\n\r\n```\r\nIn [46]: pd.concat?\r\n<omitted>\r\n\r\nExamples\r\n--------\r\nCombine two ``Series``.\r\n>>> s1 = pd.Series(['a', 'b'])\r\n>>> s2 = pd.Series(['c', 'd'])\r\n>>> pd.concat([s1, s2])\r\n0    a\r\n1    b\r\n0    c\r\n1    d\r\ndtype: object\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307009529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16622#issuecomment-307009529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16622",
    "id": 307009529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzAwOTUyOQ==",
    "user": {
      "login": "ODemidenko",
      "id": 11488142,
      "node_id": "MDQ6VXNlcjExNDg4MTQy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11488142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ODemidenko",
      "html_url": "https://github.com/ODemidenko",
      "followers_url": "https://api.github.com/users/ODemidenko/followers",
      "following_url": "https://api.github.com/users/ODemidenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/ODemidenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ODemidenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ODemidenko/subscriptions",
      "organizations_url": "https://api.github.com/users/ODemidenko/orgs",
      "repos_url": "https://api.github.com/users/ODemidenko/repos",
      "events_url": "https://api.github.com/users/ODemidenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ODemidenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T06:17:35Z",
    "updated_at": "2017-06-08T06:17:35Z",
    "author_association": "NONE",
    "body": "@chris-b1\r\nRegarding concat I had wrong anticipation, should have read docstring there. Thanks!\r\nRegarding combine_first - it doesn't work in case there are duplicates in the index in initial DFs (and that is the tricky thing with my DFs).\r\n\r\nSo, seems like the only way to union dataframes with duplicate values:\r\nfilter one of them to take indexes only missed in the other: ~index.isin(second_index), and then concat.\r\nThat is a clear way, although leaves confusion that no single standard operation can do it. But probably it is better to have simplified standard api, I don't know. Just was confused with the issue.\r\n\r\nthank you for your time!\r\n"
  }
]
