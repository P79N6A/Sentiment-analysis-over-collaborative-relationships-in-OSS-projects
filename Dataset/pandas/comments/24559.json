[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450926888",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-450926888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 450926888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDkyNjg4OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T17:22:53Z",
    "updated_at": "2019-01-02T17:22:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel could you fill in the \"Reason for the change\" section? IIUC, it was to simplify `DatetimeIndex._simple_new`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450943829",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-450943829",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 450943829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk0MzgyOQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T18:31:01Z",
    "updated_at": "2019-01-02T18:31:01Z",
    "author_association": "MEMBER",
    "body": "Possibly related, I worked on this topic in https://github.com/pandas-dev/pandas/pull/21216. Rational was that `DatetimeIndex(ints, tz=tz)` should behave similarly as `Timestamp(int, tz=tz)`, and ints cannot necessarily represent wall times. \r\n\r\nI have an open issue https://github.com/pandas-dev/pandas/issues/20257 to document passing integers into `Timestamp` which, similarly to `DatetimeIndex`, will treat integers as epoch (unix) timestamps"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450945286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-450945286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 450945286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk0NTI4Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T18:36:12Z",
    "updated_at": "2019-01-02T18:36:12Z",
    "author_association": "MEMBER",
    "body": "@mroeschke thanks. IIRC consistency with to_datetime was also a consideration"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450979199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-450979199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 450979199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk3OTE5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T20:43:00Z",
    "updated_at": "2019-01-02T20:43:00Z",
    "author_association": "MEMBER",
    "body": "> IIRC consistency with to_datetime was also a consideration\r\n\r\n`to_datetime` has no `tz` keyword, only `utc=True`, but for UTC wall time or unix epochs are the same?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450981550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-450981550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 450981550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk4MTU1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T20:52:38Z",
    "updated_at": "2019-01-02T20:52:38Z",
    "author_association": "MEMBER",
    "body": "The `Timestamp` / `DatetimeIndex` consistency is a good reason to change one of both (since they are inconsistent in 0.23.4). \r\nAnd I think the unix epoch way makes sense for integer input. Although I think it can also be confusing that `DatetimeIndex(int_array, ..)` and `DatetimeIndex(int_array.view('M8[ns]), ..)` give different results.\r\n\r\nRegarding\"was this documented\": it might not have been documented clearly, but it is long standing behaviour: either we think people don't use it / shouldn't use it (but then why bother changing it? Shouldn't we then rather deprecate the whole ability of passing integer data, instead of changing the behaviour?), or either people do use it, and this change will break that usage. \r\nOf course, a break for a limited number of people might be worth the trade-off for a big win within our code base. But is this consistency between `__new__` and `_simple_new` that important code-technical?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451472969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451472969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451472969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ3Mjk2OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T15:19:53Z",
    "updated_at": "2019-01-04T15:19:53Z",
    "author_association": "MEMBER",
    "body": "Any other thoughts / replies here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451474475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451474475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451474475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ3NDQ3NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T15:24:56Z",
    "updated_at": "2019-01-04T15:24:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Although I think it can also be confusing that `DatetimeIndex(int_array, ..)` and `DatetimeIndex(int_array.view('M8[ns]), ..)` give different results.\r\n\r\nI think this surprised me early on. That may have been because I was used to the old way; I'm not really sure.\r\n\r\n> Regarding\"was this documented\":\r\n\r\nMy intent there was \"If this was documented before, then we definitely can't change it.\" I wasn't advocating \"It wasn't documented, so we can change it.\". Just \"It wasn't documented, so we can *maybe* change it\" :)\r\n\r\nI don't really have an opinion on the technical merits of wall time vs. epochs. I don't think I know enough to vote one way or the other."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451490209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451490209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451490209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ5MDIwOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T16:17:24Z",
    "updated_at": "2019-01-04T16:17:24Z",
    "author_association": "MEMBER",
    "body": "I think the overriding internal-consistency concern is the one @mroeschke reminded us of: this should behave like Timestamp constructor.\r\n\r\n@TomAugspurger would \"fixing\" this behavior be difficult?  Last time I tried something similar I got test_packers failures that I couldn't figure out."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451495745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451495745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451495745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ5NTc0NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T16:35:41Z",
    "updated_at": "2019-01-04T16:35:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Demo of the inconsistency on 0.23.4\r\n\r\n```python\r\nIn [9]: i8 = pd.Timestamp('2000', tz='CET').value\r\n\r\nIn [10]: pd.Timestamp(i8)\r\nOut[10]: Timestamp('1999-12-31 23:00:00')\r\n\r\nIn [11]: pd.Timestamp(i8, tz=\"CET\")\r\nOut[11]: Timestamp('2000-01-01 00:00:00+0100', tz='CET')\r\n\r\nIn [12]: pd.DatetimeIndex(np.array([i8]))\r\nOut[12]: DatetimeIndex(['1999-12-31 23:00:00'], dtype='datetime64[ns]', freq=None)\r\n\r\nIn [13]: pd.DatetimeIndex(np.array([i8]), tz=\"CET\")\r\nOut[13]: DatetimeIndex(['1999-12-31 23:00:00+01:00'], dtype='datetime64[ns, CET]', freq=None)\r\n```\r\n\r\nOn master, Out[13] matches Out[11].\r\n\r\nThat consistency is certainly worth striving for.\r\n\r\n---\r\n\r\nIf we wanted a graceful deprecation warning, then the DTI constructor would\r\n\r\n1. check for i8data & tz\r\n2. tell users to... what? What recourse would they have? If they want wall times (the previous behavior) then they can `.view(\"dateime64[ns]\")` and pass that. If they want unix epochs (the future behavior) then they should ...?\r\n3. Update all of pandas to use the recommended behavior from 2 (which is TBD).\r\n\r\nPutting that warning in place would give us an idea of how difficult this would be to change. I'll see what turns up. Since `_simple_new` already does the \"right\" (future) thing, it may not be too bad..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451509553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451509553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451509553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTUwOTU1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T17:23:09Z",
    "updated_at": "2019-01-04T17:23:09Z",
    "author_association": "MEMBER",
    "body": "> If they want unix epochs (the future behavior) then they should ...?\r\n\r\n`to_datetime` ? (if it would finally have a `tz` option)\r\n\r\nThe other option could also be to deprecate passing integers, if we find it too confusing what it should result in. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451577291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451577291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451577291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTU3NzI5MQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-04T21:43:51Z",
    "updated_at": "2019-01-04T21:43:51Z",
    "author_association": "MEMBER",
    "body": "Since `tz` effectively means `tz_localize`, in an ideal world I would only want integer data to only accept `tz='UTC'/None`. I think `Timestamp(i8, tz=tz)`'s localization to UTC then conversion to tz is a little too magic although it's the more appropriate behavior. Therefore I had thought the `DatetimeIndex(i8_array, tz=tz)` behavior was a bug, but since our policy wasn't set in documentation deprecation is appropriate.\r\n\r\nFor 2, if a user wants epoch timestamps (future behavior) they should use `DatetimeIndex(i8_array, tz='UTC').tz_convert(tz)` (or even `to_datetime` since it even has an `origin` parameter). I have a feeling we may rely on passing i8 into these constructors internally so deprecating the behavior may warrant a lot of refactoring down the line?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451752503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451752503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451752503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc1MjUwMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-06T15:58:08Z",
    "updated_at": "2019-01-06T15:58:08Z",
    "author_association": "MEMBER",
    "body": "#24623 is now passing.  PTAL."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451774067",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451774067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451774067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc3NDA2Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-06T20:55:55Z",
    "updated_at": "2019-01-06T20:55:55Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel it is not fully clear to me what #24623 exactly does related to the discussion above. Can you summarize it here? \r\n(e.g. does it change back the behaviour of DatimeIndex? (but I thought you were opposed to that?) And I don't think it adds a deprecation warning? ..)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451789361",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451789361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451789361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc4OTM2MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T00:19:26Z",
    "updated_at": "2019-01-07T00:19:26Z",
    "author_association": "MEMBER",
    "body": "> it is not fully clear to me what #24623 exactly does related to the discussion above. Can you summarize it here?\r\n\r\nThere are two central changes in #24623, both of which were the status quo before #24024.\r\n\r\n1) make `DatetimeArray.__init__` behave like `DatetimeIndex.__new__` and `Timestamp.__new__` by treating int64 values as unix timestamps and datetime64 as wall-times.\r\n\r\n2) Do frequency validation in `DatetimeArray.__init__`, preventing users from creating invalid instances with the public constructor."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451791686",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451791686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451791686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc5MTY4Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T00:48:33Z",
    "updated_at": "2019-01-07T00:48:33Z",
    "author_association": "MEMBER",
    "body": "Then how is that related to this issue? This issue is about the change in behaviour of handling integer values in the DatetimeIndex constructor, not about the DatetimeArray constructor"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451791887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451791887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451791887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc5MTg4Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T00:51:06Z",
    "updated_at": "2019-01-07T00:51:06Z",
    "author_association": "MEMBER",
    "body": "> Then how is that related to this issue? \r\n\r\nIf it isn't closely enough related for your tastes then feel free to ignore."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451792015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451792015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451792015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc5MjAxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T00:53:13Z",
    "updated_at": "2019-01-07T00:53:13Z",
    "author_association": "MEMBER",
    "body": "You wrote the PR, I think you are better placed to judge to what extent it is related to the discussion here ;) \r\nIt's just because you mentioned it here as if it is resolving this issue (but maybe I misunderstood that) that I am asking for clarification."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451792905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451792905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451792905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc5MjkwNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T01:01:23Z",
    "updated_at": "2019-01-07T01:01:23Z",
    "author_association": "MEMBER",
    "body": "I'm actually currently getting side-tracked by trying to figure out exactly what is and isn't internally-consistent.  It looks like 24623 makes i8 behavior consistent between DTA/DTI/Timestamp and M8[ns] behavior consistent between DTA/DTI, but breaks the existing consistency in master between DTA/Timestamp.\r\n\r\nI'll try to put together a grid for these..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451800265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451800265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451800265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTgwMDI2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T02:04:20Z",
    "updated_at": "2019-01-07T02:04:20Z",
    "author_association": "MEMBER",
    "body": "And an answer to the comment of @mroeschke \r\n\r\n> Since tz effectively means tz_localize, in an ideal world I would only want integer data to only accept tz='UTC'/None.\r\n\r\nThat sounds as a logical rule to me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451801653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451801653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451801653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTgwMTY1Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T02:15:29Z",
    "updated_at": "2019-01-07T02:15:29Z",
    "author_association": "MEMBER",
    "body": "> Since tz effectively means tz_localize, in an ideal world I would only want integer data to only accept tz='UTC'/None.\r\n\r\nI'm not sure I understand this rule.  Is the idea that the constructor would only be able to create tz-aware {n \\choose k}(DTA/DTI/Timestamp) with UTC and them make the user do tz_convert as another step?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451816034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-451816034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 451816034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTgxNjAzNA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T04:04:13Z",
    "updated_at": "2019-01-07T04:04:35Z",
    "author_association": "MEMBER",
    "body": "In an _ideal_ world I would prefer that since it's more explicit, but I think it would require deprecating `Timestamp` behavior with ints and tz.\r\n\r\nI would be fine just propagating the current `Timestamp` behavior and more clearly documenting interger with `tz` arg behavior across the board since I think we would have to deprecate less?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452075476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452075476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452075476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjA3NTQ3Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T20:44:39Z",
    "updated_at": "2019-01-07T20:44:39Z",
    "author_association": "MEMBER",
    "body": "I've made things more difficult here by voicing opinions while being misinformed.  Apologies all around.\r\n\r\nRecap/Double-Checking behavior from 0.23.4 and master.  In all cases passing tz/dtype corresponding to US/Pacific.\r\n\r\n                            \r\n```\r\nts = pd.Timestamp.now('US/Pacific').round('s')\r\ndti = pd.DatetimeIndex([ts])\r\ntz = dti.tz\r\ndtype = dti.dtype\r\n\r\nresults = [\r\n    pd.Timestamp(np.int64(ts.value), tz=ts.tz),\r\n    pd.Timestamp(np.datetime64(ts.value, \"ns\"), tz=ts.tz),\r\n    pd.Timestamp(float(ts.value), tz=ts.tz),\r\n]\r\nassert all(x == ts for x in results)   # <-- holds in both 0.23.4 and in master\r\n\r\nargs = [\r\n    dti.asi8,\r\n    dti.asi8.view('datetime64[ns]'),\r\n    dti.asi8.astype(np.float64),\r\n    dti.asi8.astype(object),\r\n    dti.asi8.view('datetime64[ns]').astype(object),\r\n    dti.asi8.astype(np.float64).astype(object)\r\n]\r\n\r\nnews = [pd.DatetimeIndex(x, dtype=dtype) for x in args]\r\nsimples = [pd.DatetimeIndex._simple_new(x, tz=tz)\r\n           for x in args if x.dtype == 'i8' or x.dtype == 'M8[ns]']\r\ninits = [pd.core.arrays.DatetimeArray(x, dtype=dtype)\r\n         for x in args if x.dtype == 'i8' or x.dtype == 'M8[ns]']  # <-- master only\r\n```\r\n\r\nmaster\r\n```\r\n>>> for x in news:\r\n...     x[0]\r\n... \r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\n\r\n>>> for x in simples:\r\n...     x[0]\r\n... \r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\n\r\n>>> for x in inits:\r\n...     x[0]\r\n... \r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\n```\r\n\r\n0.23.4\r\n```\r\n>>> for x in news:\r\n...     x[0]\r\n... \r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 20:28:45-0800', tz='US/Pacific')\r\n>>> \r\n>>> for x in simples:\r\n...     x[0]\r\n... \r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\nTimestamp('2019-01-07 12:28:45-0800', tz='US/Pacific')\r\n```\r\n\r\nIn both 0.23.4 and master, `Timestamp.__new__` treats all i8, M8[ns], and f8 as unix timestamps.\r\n\r\nIn both 0.23.4 and master, both `DTA.__init__` and `DTI._simple_new` treat both i8 and M8[ns] as unix timestamps.\r\n\r\nIn 0.23.4 `DTI.__new__` treats all the cases as wall-times.\r\n\r\nIn master, `DTI.__new__` treats i8, i8+object, and M8[ns]+object as unix timestamps, and the other cases as wall times.\r\n\r\nIn master, `DTA.__init__` treats both i8 and M8[ns] as unix timestamps.\r\n\r\n----\r\nI think there is a consensus that the preferred behavior is for all of these to match Timestamp, right?   So the options for DTI are:\r\n\r\n1) revert to 0.23.4 behavior and issue warnings that this behavior is going to change.\r\n2) keep the half-and-half behavior, issue warnings that more is going to change, document that some has changed\r\n3) move all cases to match Timestamp behavior, document the change, possibly issue warnings(?)\r\n\r\nAnd the options for DTA:\r\na) if option 3 is chosen for DTI, then DTA is fine as-is.\r\nb) otherwise:\r\n    i) change DTA to match DTI, issue equivalent warnings and change them at the same time in the future\r\n    ii) live with them behaving differently.\r\n\r\nThe question I'd pose to the more senior folks: can we get away with option 3?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452113057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452113057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452113057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjExMzA1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T23:00:39Z",
    "updated_at": "2019-01-07T23:00:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm having some trouble following the samples in \r\nhttps://github.com/pandas-dev/pandas/issues/24559#issuecomment-452075476, but I think that your\r\n\r\n> I think there is a consensus that the preferred behavior is for all of these to match Timestamp, right?\r\n\r\nis correct.\r\n\r\nCan you clarify the difference between your option 1 and 3? Is the difference the handling of i8 values in DTI._simple_new?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452114782",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452114782",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452114782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjExNDc4Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T23:07:35Z",
    "updated_at": "2019-01-07T23:07:35Z",
    "author_association": "MEMBER",
    "body": "> Can you clarify the difference between your option 1 and 3? Is the difference the handling of i8 values in DTI._simple_new?\r\n\r\nNone of the options I have in mind touch `_simple_new`.\r\n\r\nIn option 1, `DTI.__new__` behavior is reverted to 0.23.4, where both int64 and datetime64[ns] are treated as wall-times.  This is the maximally-different-from-Timestamp behavior, but the minimal-user-facing-change option.\r\n\r\nIn option 3, `DTI.__new__` is behavior changed to fully match Timestamp behavior (and `DTA.__init__` behavior, for the subset of inputs that it supports).  This would be the clear choice if backward-compatibility and deprecation cycles weren't a consideration."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452134866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452134866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452134866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjEzNDg2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T00:47:36Z",
    "updated_at": "2019-01-08T00:47:36Z",
    "author_association": "MEMBER",
    "body": "Thanks for the overview @jbrockmendel \r\n\r\nI also agree that treating integers as unix timestamps would be the preferred behaviour (without the historical baggage) \r\nAre we then agreeing that the current behaviour in master is the long term behaviour we would like to see? So integers consistently as unix timestamps across constructors, but meaning that ints and ints viewed as M8[ns] will be treated differently. \r\n\r\n(I still find this inconsistency between integers and M8[ns] a bit annoying, but I suppose there is nothing to do about it .. ?)\r\n\r\n---\r\n\r\nI think I already hinted on my preference before: I would go for option 1 \"revert to 0.23.4 behavior and issue deprecation warnings that this behavior is going to change.\" to deal with the API change properly.  \r\nAnd for DTA, I would already directly do the future behaviour (what we have now in master).\r\n\r\nGiven that this was like that before, I would think it should not add too much complexity to the code to still do the deprecation way (I assume many internal shared methods use `_simple_new` anyhow, which is not affected)\r\n\r\n> keep the half-and-half behavior, issue warnings that more is going to change, document that some has changed\r\n\r\nWhat more would we want to change?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452701267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452701267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452701267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcwMTI2Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T13:45:40Z",
    "updated_at": "2019-01-09T13:46:14Z",
    "author_association": "MEMBER",
    "body": "Putting Tom's comment from https://github.com/pandas-dev/pandas/pull/24623#issuecomment-452693222 here:\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/24559#issuecomment-452075476 has a nice summary.\r\n\r\n@jorisvandenbossche prefers \r\n\r\n1. Reverting the change to `DTI.__new__` for passing integers. Add a warning that it'll change in the future.\r\n2. Keep `DTA.__init__`  as it is now (same as Timestamp IIRC)\r\n\r\nI think that's my (=Tom's) preference as well, if I understand things correctly. @jbrockmendel do you need / want any help pushing this across the line? I'm busy with there things most of today, but can carve out some time if needed. It'd be good to do the RC today I think."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452706082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452706082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452706082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcwNjA4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T14:01:00Z",
    "updated_at": "2019-01-09T14:01:00Z",
    "author_association": "MEMBER",
    "body": "Sorry, I am still missing something here.\r\n\r\nI think we agreed somehow that we want \"integers -> unix time, datetime64 -> wall time\" (which is what DatetimeIndex is doing on master) on the long term ?\r\n\r\nOn master (compared to 0.23.4), DatetimeIndex changed to treat integers as unix time (instead of wall time), but kept datetime64 as wall time. One reason that was mentioned above was consistency with Timestamp constructor. \r\nHowever, Timestamp is treating *both* integers and datetime64 as unix time. So having DatetimeIndex (in the future after deprecation) and DatetimeArray as the \"integers -> unix time, datetime64 -> wall time\" behaviour, that would still not be consistent with Timestamp:\r\n\r\n```\r\nIn [74]: ts = pd.Timestamp.now('US/Pacific').round('s') \r\n\r\nIn [76]: ts    \r\nOut[76]: Timestamp('2019-01-09 05:52:33-0800', tz='US/Pacific')\r\n\r\nIn [79]: pd.Timestamp(ts.value, tz='US/Pacific')\r\nOut[79]: Timestamp('2019-01-09 05:52:33-0800', tz='US/Pacific')\r\n\r\nIn [80]: pd.Timestamp(np.datetime64(ts.value, 'ns'), tz='US/Pacific')\r\nOut[80]: Timestamp('2019-01-09 05:52:33-0800', tz='US/Pacific')     <--- also unix time, not localizing\r\n\r\nIn [82]: pd.DatetimeIndex([ts.value], tz='US/Pacific')\r\nOut[82]: DatetimeIndex(['2019-01-09 05:52:33-08:00'], dtype='datetime64[ns, US/Pacific]', freq=None)\r\n\r\nIn [81]: pd.DatetimeIndex([np.datetime64(ts.value, 'ns')], tz='US/Pacific')  <--- localizing wall time\r\nOut[81]: DatetimeIndex(['2019-01-09 13:52:33-08:00'], dtype='datetime64[ns, US/Pacific]', freq=None)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452708458",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452708458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452708458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcwODQ1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T14:08:36Z",
    "updated_at": "2019-01-09T14:08:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I misunderstood the timestamp behavior. Feel free to ignore my opinion on this subject :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452710036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452710036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452710036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcxMDAzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T14:13:27Z",
    "updated_at": "2019-01-09T14:13:27Z",
    "author_association": "MEMBER",
    "body": "One nice thing about the current DatetimeArray behaviour (in master it treats both ints and M8 as unix time, i.e. what is stored under the hood): `DatetimeArray(arr)._data == arr` is always true for M8 data, regardless whether a tz-aware dtype is passed or not.\r\n\r\nExample with actual example:\r\n\r\n```\r\nIn [1]: i8 = pd.Timestamp('2000').value\r\n\r\nIn [2]: arr = np.array([i8], dtype='M8[ns]')      \r\n\r\nIn [3]: arr                      \r\nOut[3]: array(['2000-01-01T00:00:00.000000000'], dtype='datetime64[ns]')\r\n\r\nIn [4]: pd.core.arrays.DatetimeArray(arr, dtype=pd.DatetimeTZDtype(tz='CET'))\r\nOut[4]: \r\n<DatetimeArray>\r\n['2000-01-01 01:00:00+01:00']\r\nLength: 1, dtype: datetime64[ns, CET]\r\n\r\nIn [5]: pd.core.arrays.DatetimeArray(arr, dtype=pd.DatetimeTZDtype(tz='CET'))._data\r\nOut[5]: array(['2000-01-01T00:00:00.000000000'], dtype='datetime64[ns]')\r\n\r\nIn [6]: pd.core.arrays.DatetimeArray(arr.view('i8'), dtype=pd.DatetimeTZDtype(tz='CET'))\r\nOut[6]: \r\n<DatetimeArray>\r\n['2000-01-01 01:00:00+01:00']\r\nLength: 1, dtype: datetime64[ns, CET]\r\n\r\nIn [7]: pd.core.arrays.DatetimeArray(arr.view('i8'), dtype=pd.DatetimeTZDtype(tz='CET'))._data \r\nOut[7]: array(['2000-01-01T00:00:00.000000000'], dtype='datetime64[ns]')\r\n```\r\n\r\nSo the passed array is simply what is stored under the hood, without any work done by DatetimeArray (no localisation). Personally, I also like this property for the simple DatetimeArray constructor. \r\nIt's consistent with Timestamp, but different as `to_datetime` (and `DatetimeIndex`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452710558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24559#issuecomment-452710558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24559",
    "id": 452710558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcxMDU1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T14:15:04Z",
    "updated_at": "2019-01-09T14:17:08Z",
    "author_association": "MEMBER",
    "body": "> Sorry, I misunderstood the timestamp behavior. Feel free to ignore my opinion on this subject :)\r\n\r\nNo no, it was generally put forward as a reason, not just by you :-)  And I am also only realizing this now.\r\n\r\nBut conclusion: this discussion is not yet resolved .. (and not only from disagreement, also not just in my own head :))"
  }
]
