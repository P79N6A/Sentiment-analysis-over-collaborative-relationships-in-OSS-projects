[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455566200",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24823#issuecomment-455566200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24823",
    "id": 455566200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTU2NjIwMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T14:35:01Z",
    "updated_at": "2019-01-18T14:35:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you provide a minimal example? http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n\r\nCan you reproduce the error using just pytables?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455647662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24823#issuecomment-455647662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24823",
    "id": 455647662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTY0NzY2Mg==",
    "user": {
      "login": "mullachv",
      "id": 4746033,
      "node_id": "MDQ6VXNlcjQ3NDYwMzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4746033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mullachv",
      "html_url": "https://github.com/mullachv",
      "followers_url": "https://api.github.com/users/mullachv/followers",
      "following_url": "https://api.github.com/users/mullachv/following{/other_user}",
      "gists_url": "https://api.github.com/users/mullachv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mullachv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mullachv/subscriptions",
      "organizations_url": "https://api.github.com/users/mullachv/orgs",
      "repos_url": "https://api.github.com/users/mullachv/repos",
      "events_url": "https://api.github.com/users/mullachv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mullachv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T18:45:25Z",
    "updated_at": "2019-01-18T18:45:25Z",
    "author_association": "NONE",
    "body": "I tried it with pandas as below. With ncols=1000, it works alright, when ncols=2000 it fails with error \"HDF5ExtError: Problems creating the table\". \r\nNot sure how to create this with PyTables:\r\n\r\n```\r\n#\r\n# github issue\r\n#\r\nimport pandas as pd\r\ndef store_data(df, data_key='/data', data_filename='store_test.h5', **kwargs):\r\n\tstore = pd.HDFStore(data_filename, mode='a')\r\n\tstore.put(data_key, df, format='table', data_columns=True)\r\n\tstore.close\r\nncols = 2000\r\ndf = pd.DataFrame(np.random.randn(100, ncols), columns=['A_'+str(i) for i in range(ncols)])\r\nstore_data(df)\r\n\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nHDF5ExtError                              Traceback (most recent call last)\r\n<ipython-input-52-286c4dfd5086> in <module>()\r\n      9 ncols = 2000\r\n     10 df = pd.DataFrame(np.random.randn(100, ncols), columns=['A_'+str(i) for i in range(ncols)])\r\n---> 11 store_data(df)\r\n\r\n<ipython-input-52-286c4dfd5086> in store_data(df, data_key, data_filename, **kwargs)\r\n      5 def store_data(df, data_key='/data', data_filename='store_test.h5', **kwargs):\r\n      6         store = pd.HDFStore(data_filename, mode='a')\r\n----> 7         store.put(data_key, df, format='table', data_columns=True)\r\n      8         store.close\r\n      9 ncols = 2000\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/pandas/io/pytables.py in put(self, key, value, format, append, **kwargs)\r\n    888             format = get_option(\"io.hdf.default_format\") or 'fixed'\r\n    889         kwargs = self._validate_format(format, kwargs)\r\n--> 890         self._write_to_group(key, value, append=append, **kwargs)\r\n    891 \r\n    892     def remove(self, key, where=None, start=None, stop=None):\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/pandas/io/pytables.py in _write_to_group(self, key, value, format, index, append, complib, encoding, **kwargs)\r\n   1365 \r\n   1366         # write the object\r\n-> 1367         s.write(obj=value, append=append, complib=complib, **kwargs)\r\n   1368 \r\n   1369         if s.is_table and index:\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/pandas/io/pytables.py in write(self, obj, axes, append, complib, complevel, fletcher32, min_itemsize, chunksize, expectedrows, dropna, **kwargs)\r\n   3961 \r\n   3962             # create the table\r\n-> 3963             self._handle.create_table(self.group, **options)\r\n   3964         else:\r\n   3965             pass\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/tables/file.py in create_table(self, where, name, description, title, filters, expectedrows, chunkshape, byteorder, createparents, obj)\r\n   1053                       description=description, title=title,\r\n   1054                       filters=filters, expectedrows=expectedrows,\r\n-> 1055                       chunkshape=chunkshape, byteorder=byteorder)\r\n   1056 \r\n   1057         if obj is not None:\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/tables/table.py in __init__(self, parentnode, name, description, title, filters, expectedrows, chunkshape, byteorder, _log)\r\n    831 \r\n    832         super(Table, self).__init__(parentnode, name, new, filters,\r\n--> 833                                     byteorder, _log)\r\n    834 \r\n    835     def _g_post_init_hook(self):\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/tables/leaf.py in __init__(self, parentnode, name, new, filters, byteorder, _log)\r\n    270         # is a lazy property that automatically handles their loading.\r\n    271 \r\n--> 272         super(Leaf, self).__init__(parentnode, name, _log)\r\n    273 \r\n    274     def __len__(self):\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/tables/node.py in __init__(self, parentnode, name, _log)\r\n    264             #   Create or open the node and get its object ID.\r\n    265             if new:\r\n--> 266                 self._v_objectid = self._g_create()\r\n    267             else:\r\n    268                 self._v_objectid = self._g_open()\r\n\r\n/Users/vmullachery/anaconda/envs/dl3.6/lib/python3.6/site-packages/tables/table.py in _g_create(self)\r\n   1018         # set because it is needed for setting attributes afterwards.\r\n   1019         self._v_objectid = self._create_table(\r\n-> 1020             self._v_new_title, self.filters.complib or '', obversion)\r\n   1021         self._v_recarray = None  # not useful anymore\r\n   1022         self._rabyteorder = None  # not useful anymore\r\n\r\ntables/tableextension.pyx in tables.tableextension.Table._create_table()\r\n\r\nHDF5ExtError: Problems creating the table\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455665781",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24823#issuecomment-455665781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24823",
    "id": 455665781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTY2NTc4MQ==",
    "user": {
      "login": "mullachv",
      "id": 4746033,
      "node_id": "MDQ6VXNlcjQ3NDYwMzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4746033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mullachv",
      "html_url": "https://github.com/mullachv",
      "followers_url": "https://api.github.com/users/mullachv/followers",
      "following_url": "https://api.github.com/users/mullachv/following{/other_user}",
      "gists_url": "https://api.github.com/users/mullachv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mullachv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mullachv/subscriptions",
      "organizations_url": "https://api.github.com/users/mullachv/orgs",
      "repos_url": "https://api.github.com/users/mullachv/repos",
      "events_url": "https://api.github.com/users/mullachv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mullachv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T19:46:03Z",
    "updated_at": "2019-01-18T19:46:03Z",
    "author_association": "NONE",
    "body": "The requirement from my end of the code is:\r\n- Use a batch reader of data (chunked reading) in pandas\r\n- Which requires that we store the H5 file in 'table' format (so as to select using where clauses)\r\n- When I use 'table' format, the write operation fails when the number of columns approach 2000 or so\r\n"
  }
]
