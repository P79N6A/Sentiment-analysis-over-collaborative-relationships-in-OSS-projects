[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30967183",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-30967183",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 30967183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY3MTgz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-19T21:15:43Z",
    "updated_at": "2013-12-19T21:15:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe this would be something better done in a `sandbox/parallel` folder\nuntil we settle on what's feasible to do?  It would also be good to have\nsomeone to test perf on Windows as well, I've heard that there are very\ndifferent performance characteristics for Windows vs. Linux/OSX.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30967220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-30967220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 30967220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY3MjIw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-19T21:16:08Z",
    "updated_at": "2013-12-19T21:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "for windows vs. linux/osx threading/multiprocessing that is.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30969482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-30969482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 30969482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY5NDgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-19T21:45:21Z",
    "updated_at": "2013-12-19T21:45:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this could start with an optional keyword / option to enable parallel conputation where useful. this solves the windows/Linux issues because the default to do parallel can be different ( or have different thresholds, like we do for numexpr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31102228",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-31102228",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 31102228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTAyMjI4",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-23T02:49:35Z",
    "updated_at": "2013-12-23T02:49:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "They could all be grouped under a `par` attribute like the `str` methods. What all is in mind here other than apply? Would sum, prod, etc possibly benefit?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31305208",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-31305208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 31305208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzA1MjA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-28T21:22:13Z",
    "updated_at": "2013-12-28T21:22:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye can u put up a simple example that would be nice for benchmarking?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31320974",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-31320974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 31320974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzIwOTc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-29T17:24:08Z",
    "updated_at": "2013-12-29T17:24:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's an implementation using joblib:\n\nhttps://github.com/jreback/pandas/tree/parallel\n\nand some timings.....I had to use a pretty contrived function actually....\nyou need to weigh the pickle time for the sub-frames vs the function time\nthe pickle time listed below is to disk which is not the case when sending to sub-processes \n(but is still the limiting factor I think). FYI if the frame is already on disk (e.g. HDF), then this could have quite substantial benefit I think.\n\n```\nIn [1]: df1  = DataFrame(np.random.randn(20000, 1000))\n\nIn [2]: def f1(x):\n   ...:         result = [ np.sqrt(x) for i in range(10) ]\n   ...:         return result[-1]\n   ...: \nIn [8]: %timeit df1.to_pickle('test.p')\n1 loops, best of 3: 1.77 s per loop\n```\n\n```\n# reg apply\nIn [3]: %timeit df1.apply(f1)\n1 loops, best of 3: 6.28 s per loop\n\n# using 12 cores (6 real x 2 hyperthread)\nIn [4]: %timeit df1.apply(f1,engine='joblib')\n1 loops, best of 3: 2.06 s per loop\n\n# 1 core pass thru\nIn [5]: %timeit df1.apply(f1,engine=pd.create_parallel_engine(name='joblib',force=True,max_cpu=1))\n1 loops, best of 3: 6.28 s per loop\n\nIn [6]: %timeit df1.apply(f1,engine=pd.create_parallel_engine(name='joblib',force=True,max_cpu=4))\n1 loops, best of 3: 2.68 s per loop\n\nIn [7]: %timeit df1.apply(f1,engine=pd.create_parallel_engine(name='joblib',force=True,max_cpu=2))\n1 loops, best of 3: 3.87 s per loop\n\n```\n\npickle time outweighs the perf gains, function is too quick so no benefit here\n\n```\nIn [6]: %timeit df1.apply(f2)\n1 loops, best of 3: 981 ms per loop\n\nIn [7]: %timeit df1.apply(f2,engine='joblib')\n1 loops, best of 3: 1.8 s per loop\n\nIn [8]: def f2(x):\n    return np.sqrt(x)\n   ...: \n```\n\nSo you need a sufficiently slow function on a single-column to make this worthwhile\n(would be pretty easy to do a sample timing of a single column say and decide wether to go parallel or not)\nright now just using it on-demand (user/option) specified\n\n```\nIn [9]: %timeit f1(df1.icol(0))\n100 loops, best of 3: 5.89 ms per loop\n\nIn [10]: %timeit f2(df1.icol(0))\n1000 loops, best of 3: 639 ﾵs per loop\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31327386",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-31327386",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 31327386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzI3Mzg2",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-29T22:48:36Z",
    "updated_at": "2013-12-29T22:48:36Z",
    "author_association": "NONE",
    "body": "Good write up Jeff. I think pickle time is a big factor but also the time to spawn a new process. \n\nI would envision this working with a set of compute processes that are pre launched on startup and wait to do work. For my future parallel work I will probably use iPython parallel across distributed hdf5 data. The problem that I often run into is slowly growing memory consumption for python processes that live for too long. \n\nOn disk parallel access of HDF5 row chunks to speed up computation sounds great. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31327504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-31327504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 31327504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzI3NTA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-29T22:53:21Z",
    "updated_at": "2013-12-29T22:53:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dragoljub \n\nyep...I don't think adding a `IPython` parallel back end would be all that difficult (or other distributed type of backends). Just inherit and plug in.\n\nHDF5 and groupby apply look like especially nice cases for enhancement with this.\n\nPls play around and give me feedback on the API (and even take a stab at a backend!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31424734",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-31424734",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 31424734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDI0NzM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-01T15:46:56Z",
    "updated_at": "2014-01-01T15:46:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://docs.cython.org/src/userguide/parallelism.html\n\na Cynthon engine is also straightforward (though needs a slight change in setup to compile with OpenMP Support)\nbut seems straightforward\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33560250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-33560250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 33560250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTYwMjUw",
    "user": {
      "login": "chrido",
      "id": 38852,
      "node_id": "MDQ6VXNlcjM4ODUy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/38852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrido",
      "html_url": "https://github.com/chrido",
      "followers_url": "https://api.github.com/users/chrido/followers",
      "following_url": "https://api.github.com/users/chrido/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrido/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrido/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrido/subscriptions",
      "organizations_url": "https://api.github.com/users/chrido/orgs",
      "repos_url": "https://api.github.com/users/chrido/repos",
      "events_url": "https://api.github.com/users/chrido/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrido/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-29T06:37:17Z",
    "updated_at": "2014-01-29T06:37:17Z",
    "author_association": "NONE",
    "body": "I've loaded a data-frame with roughly 170M rows in memory (python used ~35GB RAM) and timed the same operation with 3 methods and ran it over night. The machine has 32 physical or 64 hypervised cores and enough free RAM. While date conversion is a very cheap operation it shows the overhead of these methods.\n\nWhile the single threaded way is the fastest its quite boring to see a single core continuously running at 100% while 63 are idling. Ideally I want for parallel operations some kind of batching to reduce the overhead, e.g. always 100000 rows or something like batchsize=100000.\n\n``` python\n@interactive\ndef to_date(strdate) :\n    return datetime.fromtimestamp(int(strdate)/1000)\n\n%time res['milisecondsdtnormal']=res['miliseconds'].map(to_date)\n#CPU times: user 14min 52s, sys: 2h 1min 30s, total: 2h 16min 22s\n#Wall time: 2h 17min 5s\n\npool = Pool(processes=64)\n%time res['milisecondsdtpool']=pool.map(to_date, res['miliseconds'])\n#CPU times: user 21min 37s, sys: 2min 30s, total: 24min 8s\n#Wall time: 5h 40min 50s\n\nfrom IPython.parallel import Client\nrc = Client() #local 64 engines\nrc[:].execute(\"from datetime import datetime\")\n%time res['milisecondsipython'] = rc[:].map_sync(to_date, res['miliseconds'])\n#CPU times: user 5h 27min 4s, sys: 1h 23min 50s, total: 6h 50min 54s\n#Wall time: 10h 56min 18s\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33576981",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-33576981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 33576981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTc2OTgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-29T11:35:29Z",
    "updated_at": "2014-01-29T12:38:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "it's not at all clear what you are timing here; the way pool and ipython split this is exceedingly poor; they turn this type of task into a lot of scalar evaluations where the cost of transport is MUCH higher than the evaluations time.\n\nthe pr does exactly this type of batching \n\nyou need to have each processor execute a slice and work on it in a single task (for each proessor), not distrute the pool like you are showing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36003875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-36003875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 36003875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDAzODc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-25T12:49:52Z",
    "updated_at": "2014-02-25T12:49:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye did you have a look at this branch? https://github.com/jreback/pandas/tree/parallel\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37054824",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37054824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37054824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU0ODI0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T18:50:48Z",
    "updated_at": "2014-03-07T18:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, this is exciting. I've been waiting for a parallel scatter/gather apply function using IPython.parallel. Please keep us up to date on any progress here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37057820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37057820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37057820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU3ODIw",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:20:49Z",
    "updated_at": "2014-03-07T19:21:30Z",
    "author_association": "NONE",
    "body": "Indeed! It would be a great feature. I have been using concurrent.futures and that makes things pretty easy, however the cost of spooling up new processes still takes up a bunch of time. If we have IPython parallel kernels just waiting to do work with all the proper imports, passing data pointers to them and aggregating results would be fantastic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37058319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37058319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37058319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU4MzE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:25:44Z",
    "updated_at": "2014-03-07T19:25:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dragoljub you have hit the nail on the head. `joblib` is fine, but you often don't need to spawn processes that way; usually you have an engine hanging out their.\n\nDo you have some code that I could hijack?\n\nI don't think it would be very hard to add this using `IPython.parallel`; I just have never used it (as for what I do I often spawn relatively long-lived processes)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37059021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37059021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37059021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5MDIx",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:32:34Z",
    "updated_at": "2014-03-07T19:32:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "It may be overkill but I have a notebook on using IPython.parallel here. There are some quick examples.\n\nhttps://github.com/jseabold/zorro\n\nTheir docs are also quite good\n\nhttp://ipython.org/ipython-doc/dev/parallel/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37059583",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37059583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37059583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5NTgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:37:53Z",
    "updated_at": "2014-03-07T19:37:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks skipper....ok next thing....do you guys have some non-trivial examples for vbenching purposes? e.g. stuff that does actual work (and takes a non-trivial amount of time) that can use for benchmarking? (needs to be relatively self-contained....though obviously could use say statsmodels :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37059805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37059805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37059805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5ODA1",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:40:00Z",
    "updated_at": "2014-03-07T19:40:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I happen to be running one such problem right now. :) I'm skipping apply in favor of joblib.Parallel map. Let me see if I can make it self contained. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37061108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37061108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37061108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYxMTA4",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:52:54Z",
    "updated_at": "2014-03-07T19:52:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, maybe it is too trivial. My actual use case takes much longer 20 obs ~ 1s and the data is quite big. Find the first occurrence of a word in some text. You can scale up `n`, make the \"titles\" longer, include unicode, etc. and it quickly becomes time consuming.\n\n```\nn = 100\n\nrandom_strings = pd.util.testing.makeStringIndex().tolist()\nX = pd.DataFrame({'title' : random_strings * n,\n                                'year' : np.random.randint(1400, 1800, size=10*n)})\n\ndef min_date(x): # can't be a lambda for joblib/pickling\n    # watch out for global\n    return X.ix[X.title.str.contains('\\\\b{}\\\\b'.format(x))].year.min()\n\nX.title.apply(min_date) \n```\n\nThere are maybe some better examples in `ipython/examples/parallel`. There are also a couple in my notebook. E.g., parallel optimization, but I'm not sure it's a real use case of the scatter-gather apply I'm thinking of. Something like\n\n```\ndef crazy_optimization_func(...):\n    ....\n\ndf = pd.DataFrame(random_start_values)\ndf.apply(crazy_optimization_func, ...)\n```\n\nWhere the DataFrame contains rows of random starting values and you iterate over the zero axis to do poor man's global optimization.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37066307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37066307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37066307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY2MzA3",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T20:51:17Z",
    "updated_at": "2014-03-07T20:51:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some API inspiration. See aaply, adply, etc.\n\nhttp://cran.r-project.org/web/packages/plyr/index.html\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37066631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37066631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37066631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY2NjMx",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T20:55:19Z",
    "updated_at": "2014-03-07T20:55:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I forgot that Hadley kindly re-licensed all of his code to BSD-compatible, so you can take more than API inspiration if for some reason you're curious.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37066963",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37066963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37066963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY2OTYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T20:59:04Z",
    "updated_at": "2014-03-07T20:59:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually the api really is very easy:\n\n```\ndf.apply(my_cool_function, engine='ipython')\n\nfrom IPython.parallel import Client\ndf.apply(my_cool_function,engine=pd.create_parallel_engine(client=Client(profile='mpi')))\n```\n\ne.g. you just pass an engine (prob will allow you to simply pass a Client directly as an engine)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37067447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37067447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37067447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY3NDQ3",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T21:04:55Z",
    "updated_at": "2014-03-07T21:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great.\n\nYou might also allow just 'ipython' and use a default `Client()` call. If you start your IPython session/notebook with the correct profile then it should respect this and look in that directory for the setup code it needs. There was a bug here in some of the IPython 1.x but it should be fixed now.\n\nhttps://github.com/ipython/ipython/issues/4238\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37067549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37067549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37067549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY3NTQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T21:05:57Z",
    "updated_at": "2014-03-07T21:06:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "passing `engine='ipython'` will create a default Client\nalso settable via an option, `parallel.default_engine`\n\nand will only pass with a threshold number of rows (could have a function do that too)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37068205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-37068205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 37068205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY4MjA1",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T21:12:47Z",
    "updated_at": "2014-03-07T21:12:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds awesome. Can't wait for this. Going to be a big feature.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45680122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-45680122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 45680122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjgwMTIy",
    "user": {
      "login": "cossatot",
      "id": 2835718,
      "node_id": "MDQ6VXNlcjI4MzU3MTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2835718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cossatot",
      "html_url": "https://github.com/cossatot",
      "followers_url": "https://api.github.com/users/cossatot/followers",
      "following_url": "https://api.github.com/users/cossatot/following{/other_user}",
      "gists_url": "https://api.github.com/users/cossatot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cossatot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cossatot/subscriptions",
      "organizations_url": "https://api.github.com/users/cossatot/orgs",
      "repos_url": "https://api.github.com/users/cossatot/repos",
      "events_url": "https://api.github.com/users/cossatot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cossatot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T22:26:25Z",
    "updated_at": "2014-06-10T22:26:25Z",
    "author_association": "NONE",
    "body": "What is the status of this?  It seems awesome.  Do you just need some functions for benchmarks?  I can come up with something if that's helpful/ all that's needed.  \n\nhow much should a target function take (per row, say; that's what I always apply on)?  0.1 s?  1 s?  10 s?  RAM limitations?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45736536",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-45736536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 45736536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzM2NTM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-11T12:52:15Z",
    "updated_at": "2014-06-11T12:52:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well it works for joblib, sort of with IPython.parallel. needs some more work/time. I am also convinced that you need a pretty intensive task for this to be really useful. e.g. the creation/comm time is non-trivial.\n\nI won't have time for this for a while, but my code is out there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61591374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-61591374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 61591374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTkxMzc0",
    "user": {
      "login": "timalthoff",
      "id": 1224484,
      "node_id": "MDQ6VXNlcjEyMjQ0ODQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1224484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timalthoff",
      "html_url": "https://github.com/timalthoff",
      "followers_url": "https://api.github.com/users/timalthoff/followers",
      "following_url": "https://api.github.com/users/timalthoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/timalthoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timalthoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timalthoff/subscriptions",
      "organizations_url": "https://api.github.com/users/timalthoff/orgs",
      "repos_url": "https://api.github.com/users/timalthoff/repos",
      "events_url": "https://api.github.com/users/timalthoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timalthoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T04:14:18Z",
    "updated_at": "2014-11-04T04:14:18Z",
    "author_association": "NONE",
    "body": "I'm really excited about this! I wrote my own function to split - map - concat but ran into some troubles with multiprocessing (http://stackoverflow.com/questions/26665809/multiprocessing-on-pandas-dataframe-confusing-behavior-based-on-input-size).\n\nAny thoughts when this might get out?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64821035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-64821035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 64821035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODIxMDM1",
    "user": {
      "login": "andrewbolster",
      "id": 88642,
      "node_id": "MDQ6VXNlcjg4NjQy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/88642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewbolster",
      "html_url": "https://github.com/andrewbolster",
      "followers_url": "https://api.github.com/users/andrewbolster/followers",
      "following_url": "https://api.github.com/users/andrewbolster/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewbolster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewbolster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewbolster/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewbolster/orgs",
      "repos_url": "https://api.github.com/users/andrewbolster/repos",
      "events_url": "https://api.github.com/users/andrewbolster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewbolster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-27T18:39:18Z",
    "updated_at": "2014-11-27T18:39:18Z",
    "author_association": "NONE",
    "body": "+1 for parallel apply engine!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66447251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5751#issuecomment-66447251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5751",
    "id": 66447251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDQ3MjUx",
    "user": {
      "login": "wikiped",
      "id": 5990528,
      "node_id": "MDQ6VXNlcjU5OTA1Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5990528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wikiped",
      "html_url": "https://github.com/wikiped",
      "followers_url": "https://api.github.com/users/wikiped/followers",
      "following_url": "https://api.github.com/users/wikiped/following{/other_user}",
      "gists_url": "https://api.github.com/users/wikiped/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wikiped/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wikiped/subscriptions",
      "organizations_url": "https://api.github.com/users/wikiped/orgs",
      "repos_url": "https://api.github.com/users/wikiped/repos",
      "events_url": "https://api.github.com/users/wikiped/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wikiped/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-10T12:53:49Z",
    "updated_at": "2014-12-10T12:53:49Z",
    "author_association": "NONE",
    "body": "It is a year since @jreback has made available a parallel version of pandas and it is not clear what is a hold up not allowing to make it a feature of regular pandas (even in a \"testing\" form).\n\nWhile it has been shown to work, there seems to be an understanding that more testing might be needed. Would not then making this feature available / accessible (even if for testing purposes) in regular pandas facilitate more testing and bug reporting?\n"
  }
]
