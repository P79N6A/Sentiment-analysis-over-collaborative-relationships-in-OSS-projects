[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74958908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9514#issuecomment-74958908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9514",
    "id": 74958908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTU4OTA4",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-18T22:09:09Z",
    "updated_at": "2015-02-18T22:09:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc: @behzadnouri\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74987554",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9514#issuecomment-74987554",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9514",
    "id": 74987554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTg3NTU0",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-19T02:03:54Z",
    "updated_at": "2015-02-22T17:47:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "As an aside, `DataFrame.stack()` also claims `The level involved will automatically get sorted.`. In 0.15.2, it seems to do so for a MultiIndex, but not for a simple Index. All rather inconsistent.\n\n```\nIn [61]: df1 = pd.DataFrame(np.arange(6).reshape(2, 3), columns=['B', 'A', 'C'])\n\nIn [62]: df1\nOut[62]:\n   B  A  C\n0  0  1  2\n1  3  4  5\n\nIn [63]: df1.stack()  # the stacked level is *NOT* sorted\nOut[63]:\n0  B    0\n   A    1\n   C    2\n1  B    3\n   A    4\n   C    5\ndtype: int32\n\nIn [68]: df2 = pd.DataFrame(np.arange(6).reshape(2, 3), columns=pd.MultiIndex.from_tuples([('B', 'b'), ('A', 'a'), ('C', 'c')], names=['Upper', 'Lower']))\n\nIn [69]: df2\nOut[69]:\nUpper  B  A  C\nLower  b  a  c\n0      0  1  2\n1      3  4  5\n\nIn [70]: df2.stack(level=1)  # the stacked level 'Lower' and the remaining level 'Upper' are sorted\nOut[70]:\nUpper     A   B   C\n  Lower\n0 a       1 NaN NaN\n  b     NaN   0 NaN\n  c     NaN NaN   2\n1 a       4 NaN NaN\n  b     NaN   3 NaN\n  c     NaN NaN   5\n\nIn [71]: df2.stack(level=0)  # the stacked level 'Upper' and the remaining level 'Lower' are sorted\nOut[71]:\nLower     a   b   c\n  Upper\n0 A       1 NaN NaN\n  B     NaN   0 NaN\n  C     NaN NaN   2\n1 A       4 NaN NaN\n  B     NaN   3 NaN\n  C     NaN NaN   5\n\nIn [73]: df2.stack([0, 1])  # the stacked levels are sorted\nOut[73]:\n   Upper  Lower\n0  A      a        1\n   B      b        0\n   C      c        2\n1  A      a        4\n   B      b        3\n   C      c        5\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/75477730",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9514#issuecomment-75477730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9514",
    "id": 75477730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDc3NzMw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T01:21:02Z",
    "updated_at": "2015-02-23T01:21:02Z",
    "author_association": "MEMBER",
    "body": "Agreed, this looks inconsistent to me. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100525610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9514#issuecomment-100525610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9514",
    "id": 100525610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDUyNTYxMA==",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-09T18:07:23Z",
    "updated_at": "2015-05-09T18:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any thoughts on what the behavior should be? At the very least, I think:\n1. Whatever the behavior is, it should be consistent for `df.unstack(level)` and `df.T.stack(level).T`.\n2. In the case of `df.unstack(level)`, we need to specify whether each of the following is to be sorted:\n   2.a. The original `df.columns`, into which the specified `level` of `df.index` will be unstacked. It should not depend on what type of `Index` `df.columns` is.\n   2.b. The specified `level`(s) in `df.index` that are being unstacked into `df.columns`. It should not depend on how many levels are being unstacked; or in the case all levels are being unstacked, on what type of `Index` `df.index` is.\n   2.c. The unspecified levels in `df.index` (if any) that remain as `df.unstack(level).index`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162629543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9514#issuecomment-162629543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9514",
    "id": 162629543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjYyOTU0Mw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-07T19:17:53Z",
    "updated_at": "2015-12-07T19:17:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just hit this, +1\n"
  }
]
