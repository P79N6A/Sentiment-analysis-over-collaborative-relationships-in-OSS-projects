[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361742118",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19420#issuecomment-361742118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19420",
    "id": 361742118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc0MjExOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T21:35:29Z",
    "updated_at": "2018-01-30T21:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your expected output looks correct here.\r\n\r\nDo you have any interest in writing a PR to fix it?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361803596",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19420#issuecomment-361803596",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19420",
    "id": 361803596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgwMzU5Ng==",
    "user": {
      "login": "dworvos",
      "id": 14890988,
      "node_id": "MDQ6VXNlcjE0ODkwOTg4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14890988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dworvos",
      "html_url": "https://github.com/dworvos",
      "followers_url": "https://api.github.com/users/dworvos/followers",
      "following_url": "https://api.github.com/users/dworvos/following{/other_user}",
      "gists_url": "https://api.github.com/users/dworvos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dworvos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dworvos/subscriptions",
      "organizations_url": "https://api.github.com/users/dworvos/orgs",
      "repos_url": "https://api.github.com/users/dworvos/repos",
      "events_url": "https://api.github.com/users/dworvos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dworvos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T02:29:07Z",
    "updated_at": "2018-01-31T02:29:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, I will give writing a PR a try!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364169572",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19420#issuecomment-364169572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19420",
    "id": 364169572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDE2OTU3Mg==",
    "user": {
      "login": "dworvos",
      "id": 14890988,
      "node_id": "MDQ6VXNlcjE0ODkwOTg4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14890988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dworvos",
      "html_url": "https://github.com/dworvos",
      "followers_url": "https://api.github.com/users/dworvos/followers",
      "following_url": "https://api.github.com/users/dworvos/following{/other_user}",
      "gists_url": "https://api.github.com/users/dworvos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dworvos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dworvos/subscriptions",
      "organizations_url": "https://api.github.com/users/dworvos/orgs",
      "repos_url": "https://api.github.com/users/dworvos/repos",
      "events_url": "https://api.github.com/users/dworvos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dworvos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T16:35:23Z",
    "updated_at": "2018-02-08T16:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, please let me know if this is the wrong place to ask these questions, but in trying to write fix, I think I'm at a point where you guys might be able to give me some pointers in continuing.\r\n\r\nI've written two test cases for this issue (I'll need your guidance on where to put these test cases later) - one for the multicolumn case and one for the single column case. What's interesting to me is that the DF dtypes in my test cases are slightly different:\r\n\r\n```python\r\ndef test_stack_datetime_with_tz_multi_column():\r\n    # GH19420 Stacking with single column causes loss of tz info\r\n    dt_tz = [\r\n        pd.Timestamp(\"20180101\", tz=\"America/New_York\"),\r\n        pd.Timestamp(\"20180102\", tz=\"America/New_York\"),\r\n        pd.Timestamp(\"20180103\", tz=\"America/New_York\"),\r\n    ]\r\n\r\n    df = DataFrame({\"A\": dt_tz, \"B\": dt_tz}, index=[\"a\", \"b\", \"c\"])\r\n    assert df[\"A\"].dtype == 'datetime64[ns, America/New_York]'\r\n    assert df[\"B\"].dtype == 'datetime64[ns, America/New_York]'\r\n    assert df.values.dtype == np.object_\r\n\r\n    result = df.stack()\r\n    expected = Series(sorted(dt_tz * 2),\r\n                      MultiIndex.from_product([[\"a\", \"b\", \"c\"], [\"A\", \"B\"]]))\r\n\r\n    assert_series_equal(result, expected)\r\n\r\n```\r\n\r\nThis test case passes.\r\n\r\n```python\r\ndef test_stack_datetime_with_tz_single_column():\r\n\r\n    # GH19420 Stacking with single column causes loss of tz info\r\n    dt_tz = [\r\n        pd.Timestamp(\"20180101\", tz=\"America/New_York\"),\r\n        pd.Timestamp(\"20180102\", tz=\"America/New_York\"),\r\n        pd.Timestamp(\"20180103\", tz=\"America/New_York\"),\r\n    ]\r\n\r\n    df = DataFrame({\"A\": dt_tz}, index=[\"a\", \"b\", \"c\"])\r\n    assert df[\"A\"].dtype == 'datetime64[ns, America/New_York]'\r\n    assert df.values.dtype == np.object_\r\n\r\n    result = df.stack()\r\n    expected = Series(dt_tz, MultiIndex.from_product([[\"a\", \"b\", \"c\"], [\"A\"]]))\r\n\r\n    assert_series_equal(result, expected)\r\n\r\n```\r\n\r\nUnfortunately I hit the trigger the assert df.values.dtype == np.object_. But say we were to ignore that assert and continue the assert_series_equal would trigger.\r\n\r\nThe cause of this appears to be when we call the function stack in core/reshape.py. Inside that function we eventually call frame.values.ravel(). In the multi column case this appears to call ndarray.ravel() and converts the resulting times to an array of pd.Timestamps and the timezone is preserved. In the single column case this appears to call DatetimeIndex.ravel() which returns a numpy array of naive datetimes and when passed to frame._constructor_sliced results in the incorrect Series.\r\n\r\nGrepping for \"class Timestamp\" shows results in _libs/tslibs/timestamps.pyx which I'm hoping you guys might be able to help me out with - my hypothesis is if I can convert the DatetimeIndex to pd.Timestamps the frame._constructor_sliced may work but I'm not sure the right way to go about that.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366974117",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19420#issuecomment-366974117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19420",
    "id": 366974117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njk3NDExNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T13:17:07Z",
    "updated_at": "2018-02-20T13:17:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may be worth holding on until some of the extension array stuff settles down: https://github.com/pandas-dev/pandas/issues/19696. Once DatetimeTZ is an ExtensionArray, things like `ravel` will be handled more consistently."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/451257874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19420#issuecomment-451257874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19420",
    "id": 451257874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTI1Nzg3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T19:53:52Z",
    "updated_at": "2019-01-03T19:53:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is fixed on master.\r\n\r\n```python\r\nIn [5]: df3\r\nOut[5]:\r\n                          A\r\na 2018-01-01 00:00:00-05:00\r\nb 2018-01-02 00:00:00-05:00\r\nc 2018-01-03 00:00:00-05:00\r\n\r\nIn [6]: df3.stack()\r\nOut[6]:\r\na  A   2018-01-01 00:00:00-05:00\r\nb  A   2018-01-02 00:00:00-05:00\r\nc  A   2018-01-03 00:00:00-05:00\r\ndtype: datetime64[ns, America/New_York]\r\n```\r\n\r\n\r\nMay want a test to validate this."
  }
]
