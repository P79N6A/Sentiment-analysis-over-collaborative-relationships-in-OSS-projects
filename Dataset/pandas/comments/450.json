[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3031078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3031078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3031078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzEwNzg=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T11:30:55Z",
    "updated_at": "2011-12-06T11:30:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder if it's related to this issue I found also this morning:\n\n``` python\n>>> df = pandas.DataFrame(index=[1,2,3,4])\n>>> df[\"test\"] = pandas.Series([\"B\", \"fdf\", \"344\", np.nan])\n>>> df[\"test2\"] = [\"B\", \"fdf\", \"344\", np.nan]\n>>> df   test  test2\n1  fdf   B    \n2  344   fdf  \n3  NaN   344  \n4  NaN   nan  \n```\n\nLooks like some kind of off-by-one error to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3031152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3031152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3031152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzExNTI=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T11:40:28Z",
    "updated_at": "2011-12-06T11:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Further digging leads to the call to `Series.reindex` when setting items at being the culprit:\n\n``` python\n\n>>> data \n0    B\n1    fdf\n2    344\n3    NaN\n\n>>>  df.index = [\"A\", \"B\", \"C\", \"D\"]\n>>> data.reindex(df.index).values\narray([nan, nan, nan, nan], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3031191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3031191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3031191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzExOTE=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T11:44:27Z",
    "updated_at": "2011-12-06T11:47:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Even more digging leads to `reindex` in the index attribute being called that gives a strange result:\n\n``` python\n>>> data.index.reindex(df.index)\n(Index([A, B, C, D], dtype=object), array([-1, -1, -1, -1], dtype=int32))\n\n```\n\nThese -1 are then translated to NaNs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3031903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3031903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3031903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE5MDM=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T13:01:04Z",
    "updated_at": "2011-12-06T13:01:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated bug title with more correct description.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3036862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3036862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3036862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY4NjI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T18:57:14Z",
    "updated_at": "2011-12-06T18:57:14Z",
    "author_association": "MEMBER",
    "body": "The Series is given an implicit 0, ..., N-1 index when you don't supply one-- so this is exactly the behavior I would expect. If `data` were a raw ndarray or a list, then this would not occur. So the fact that when you do:\n\n`df[col] = series`\n\nand it conforms the series exactly to the index of `df`, that's a feature and not a bug :) so\n\n`df['test'] = ids.values`\n\nwould work fine in your example\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3041539",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3041539",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3041539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE1Mzk=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T00:48:55Z",
    "updated_at": "2011-12-07T00:48:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "In that case perhaps it should be documented somewhere if it isn't already. In the mean time I'll adjust my own code as you suggested, thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3041587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3041587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3041587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE1ODc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T00:55:55Z",
    "updated_at": "2011-12-07T00:55:55Z",
    "author_association": "MEMBER",
    "body": "http://pandas.sourceforge.net/dsintro.html#column-selection-addition-deletion\n\n```\nWhen inserting a Series that does not have the same index as the DataFrame, it will be conformed to the DataFrame’s index:\n\nIn [180]: df['one_trunc'] = df['one'][:2]\n\nIn [181]: df\nOut[181]: \n   one  flag   foo  one_trunc\na  1    False  bar  1        \nb  2    False  bar  2        \nc  3    True   bar  NaN      \nd  NaN  False  bar  NaN      \n\nYou can insert raw ndarrays but their length must match the length of the DataFrame’s index.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3046184",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3046184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3046184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDYxODQ=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T11:39:46Z",
    "updated_at": "2011-12-07T11:39:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is the idea behind the fact that when inserting a Series that does not have the same index as the DataFrame, it will be conformed to the DataFrame’s index?\n\nWhen creating a DataFrame from series, the resulting index covers all individual series indexes. So why is this idea not used when df['new_column'] = series? \nSo you try to add data, but ignore all values that do not match the DataFrame index?\nIf _index extension_ would exist, one could always do df['new_column'] = series.reindex(df.index) when one does not want to extend the index (current behavior)?\n\n``` python\nIn [256]: df = pandas.DataFrame({'A': pandas.Series(['foo', 'bar'], index=['a', 'b']),\n   .....:                        'B': pandas.Series([10, 20], index=['b', 'c'])})\n\nIn [257]: df\nOut[257]:\n   A    B\na  foo  NaN\nb  bar  10.000\nc  NaN  20.000\n\nIn [258]: df['C'] = pandas.Series(range(3), index=['a', 'c', 'd'])\n\nIn [259]: df\nOut[259]:\n   A    B       C\na  foo  NaN     0.000\nb  bar  10.000  NaN\nc  NaN  20.000  1.000\n```\n\nIn the example above i would expect a row 'd' in the DataFrame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3057667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/450#issuecomment-3057667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/450",
    "id": 3057667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTc2Njc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-08T04:09:18Z",
    "updated_at": "2011-12-08T04:09:18Z",
    "author_association": "MEMBER",
    "body": "Well, I think the basic idea is that DataFrame is a \"fixed length dict-like container of Series\". When you construct a DataFrame with a dict of Series without an explicit index, there is no obvious index other than the union of them all. \n\nI can see the argument for implicitly extending the index, but there are tradeoffs either way\n"
  }
]
