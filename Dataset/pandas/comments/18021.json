[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340304634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340304634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340304634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDMwNDYzNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-29T21:59:32Z",
    "updated_at": "2017-10-29T21:59:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you give a reproducible example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340442252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340442252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340442252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0MjI1Mg==",
    "user": {
      "login": "barondu",
      "id": 22868204,
      "node_id": "MDQ6VXNlcjIyODY4MjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22868204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barondu",
      "html_url": "https://github.com/barondu",
      "followers_url": "https://api.github.com/users/barondu/followers",
      "following_url": "https://api.github.com/users/barondu/following{/other_user}",
      "gists_url": "https://api.github.com/users/barondu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barondu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barondu/subscriptions",
      "organizations_url": "https://api.github.com/users/barondu/orgs",
      "repos_url": "https://api.github.com/users/barondu/repos",
      "events_url": "https://api.github.com/users/barondu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barondu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:24:22Z",
    "updated_at": "2017-10-30T13:24:22Z",
    "author_association": "NONE",
    "body": "I meet the same problem.\r\nAt first i use `action = state_action.argmax()`, it says`FutureWarning: 'argmax' is deprecated. Use 'idxmax' instead. The behavior of 'argmax' will be corrected to return the positional maximum in the future. Use 'series.values.argmax' to get the position of the maximum now.\r\n  action = state_action.argmax()`\r\nSo I change to `action = state_action.idxmax()`\r\nWhen I run in 0.21.0, it gives the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/baron/.pyenv/versions/3.6.3/lib/python3.6/tkinter/__init__.py\", line 1699, in __call__\r\n    return self.func(*args)\r\n  File \"/Users/baron/.pyenv/versions/3.6.3/lib/python3.6/tkinter/__init__.py\", line 745, in callit\r\n    func(*args)\r\n  File \"/Users/baron/PycharmProjects/HelloPython/test_Q.py\", line 26, in update\r\n    action = RL.choose_action(str(observation))\r\n  File \"/Users/baron/PycharmProjects/HelloPython/RL_brain.py\", line 40, in choose_action\r\n    action = state_action.idxmax()\r\n  File \"/Users/baron/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pandas/core/series.py\", line 1357, in idxmax\r\n    i = nanops.nanargmax(_values_from_object(self), skipna=skipna)\r\n  File \"/Users/baron/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pandas/core/nanops.py\", line 74, in _f\r\n    raise TypeError(msg.format(name=f.__name__.replace('nan', '')))\r\nTypeError: reduction operation 'argmax' not allowed for this dtype\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340444256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340444256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340444256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0NDI1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:31:50Z",
    "updated_at": "2017-10-30T13:31:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you provide a copy-pastable example @barondu?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340445228",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340445228",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340445228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0NTIyOA==",
    "user": {
      "login": "barondu",
      "id": 22868204,
      "node_id": "MDQ6VXNlcjIyODY4MjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22868204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barondu",
      "html_url": "https://github.com/barondu",
      "followers_url": "https://api.github.com/users/barondu/followers",
      "following_url": "https://api.github.com/users/barondu/following{/other_user}",
      "gists_url": "https://api.github.com/users/barondu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barondu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barondu/subscriptions",
      "organizations_url": "https://api.github.com/users/barondu/orgs",
      "repos_url": "https://api.github.com/users/barondu/repos",
      "events_url": "https://api.github.com/users/barondu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barondu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:35:30Z",
    "updated_at": "2017-10-30T13:35:30Z",
    "author_association": "NONE",
    "body": "sure,\r\nYou can test the code as fellow. @TomAugspurger\r\nhttps://github.com/MorvanZhou/Reinforcement-learning-with-tensorflow/tree/master/contents/2_Q_Learning_maze\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340445984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340445984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340445984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0NTk4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:38:10Z",
    "updated_at": "2017-10-30T13:38:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you have a minimal test-case, something that could go in a unit test?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340448587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340448587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340448587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0ODU4Nw==",
    "user": {
      "login": "barondu",
      "id": 22868204,
      "node_id": "MDQ6VXNlcjIyODY4MjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22868204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barondu",
      "html_url": "https://github.com/barondu",
      "followers_url": "https://api.github.com/users/barondu/followers",
      "following_url": "https://api.github.com/users/barondu/following{/other_user}",
      "gists_url": "https://api.github.com/users/barondu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barondu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barondu/subscriptions",
      "organizations_url": "https://api.github.com/users/barondu/orgs",
      "repos_url": "https://api.github.com/users/barondu/repos",
      "events_url": "https://api.github.com/users/barondu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barondu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:47:28Z",
    "updated_at": "2017-10-30T13:47:28Z",
    "author_association": "NONE",
    "body": "@TomAugspurger\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nq_table = pd.DataFrame(columns=['a', 'b', 'c', 'd'])\r\nq_table = q_table.append(pd.Series([0] * 4, index=q_table.columns, name='test1', ))\r\nq_table = q_table.append(pd.Series([0] * 4, index=q_table.columns, name='test2', ))\r\nprint(q_table)\r\nstate_action = q_table.ix['test2', :]\r\nprint(state_action)\r\nstate_action = state_action.reindex(\r\n    np.random.permutation(state_action.index))\r\nprint(state_action)\r\naction = state_action.idxmax()\r\n# action = state_action.argmax()\r\nprint('\\naction: ', action)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340449676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340449676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340449676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ0OTY3Ng==",
    "user": {
      "login": "barondu",
      "id": 22868204,
      "node_id": "MDQ6VXNlcjIyODY4MjA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22868204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barondu",
      "html_url": "https://github.com/barondu",
      "followers_url": "https://api.github.com/users/barondu/followers",
      "following_url": "https://api.github.com/users/barondu/following{/other_user}",
      "gists_url": "https://api.github.com/users/barondu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barondu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barondu/subscriptions",
      "organizations_url": "https://api.github.com/users/barondu/orgs",
      "repos_url": "https://api.github.com/users/barondu/repos",
      "events_url": "https://api.github.com/users/barondu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barondu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:51:14Z",
    "updated_at": "2017-10-30T13:51:14Z",
    "author_association": "NONE",
    "body": "Here is the error message\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/baron/PycharmProjects/HelloPython/pandas_exercise.py\", line 13, in <module>\r\n    action = state_action.idxmax()\r\n  File \"/Users/baron/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pandas/core/series.py\", line 1357, in idxmax\r\n    i = nanops.nanargmax(_values_from_object(self), skipna=skipna)\r\n  File \"/Users/baron/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pandas/core/nanops.py\", line 74, in _f\r\n    raise TypeError(msg.format(name=f.__name__.replace('nan', '')))\r\nTypeError: reduction operation 'argmax' not allowed for this dtype\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340450659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340450659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340450659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ1MDY1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T13:54:31Z",
    "updated_at": "2017-10-30T13:54:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, simplified a bit:\r\n\r\n```python\r\nIn [11]: pd.Series([0, 0], dtype='object')\r\nOut[11]:\r\n0    0\r\n1    0\r\ndtype: object\r\n\r\nIn [12]: pd.Series([0, 0], dtype='object').argmax()\r\n/Users/taugspurger/Envs/pandas-dev/bin/ipython:1: FutureWarning: 'argmax' is deprecated. Use 'idxmax' instead. The behavior of 'argmax' will be corrected to return the positional maximum in the future. Use 'series.values.argmax' to get the position of the maximum now.\r\n  #!/Users/taugspurger/Envs/pandas-dev/bin/python3.6\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-12-e0ba19c8565d> in <module>()\r\n----> 1 pd.Series([0, 0], dtype='object').argmax()\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n     34     def wrapper(*args, **kwargs):\r\n     35         warnings.warn(msg, klass, stacklevel=stacklevel)\r\n---> 36         return alternative(*args, **kwargs)\r\n     37     return wrapper\r\n     38\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/series.py in idxmax(self, axis, skipna, *args, **kwargs)\r\n   1355         \"\"\"\r\n   1356         skipna = nv.validate_argmax_with_skipna(skipna, args, kwargs)\r\n-> 1357         i = nanops.nanargmax(_values_from_object(self), skipna=skipna)\r\n   1358         if i == -1:\r\n   1359             return np.nan\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/nanops.py in _f(*args, **kwargs)\r\n     72             if any(self.check(obj) for obj in obj_iter):\r\n     73                 msg = 'reduction operation {name!r} not allowed for this dtype'\r\n---> 74                 raise TypeError(msg.format(name=f.__name__.replace('nan', '')))\r\n     75             try:\r\n     76                 with np.errstate(invalid='ignore'):\r\n\r\nTypeError: reduction operation 'argmax' not allowed for this dtype\r\n\r\n```\r\n\r\nIs there a reason you're using object dtype here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340454390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340454390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340454390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ1NDM5MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T14:07:05Z",
    "updated_at": "2017-10-30T14:07:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems like https://github.com/pandas-dev/pandas/pull/16449 maybe have been the root issues (cc @DGrady)\r\n\r\nNumPy will (somehow) handle object arrays in argmax/min, so I suppose `@disallow('O')` is a bit too strict."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340461610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340461610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340461610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ2MTYxMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T14:31:09Z",
    "updated_at": "2017-10-30T14:31:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "We'll need to think about whether we want to emulate NumPy here though. It's nice to know ahead of time whether you function is valid or not for the type of the values being passed. With `object` dtype there's no way of knowing that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340467599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340467599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340467599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ2NzU5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T14:49:53Z",
    "updated_at": "2017-10-30T14:49:53Z",
    "author_association": "MEMBER",
    "body": "I think for object dtype we should not, beforehand, decide whether such an operation works or not, but IMO we should defer that to the actual objects. Eg min/max works on strings, and so it seems logical that `argmax`/`argmin` does as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340469680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340469680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340469680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ2OTY4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T14:56:12Z",
    "updated_at": "2017-10-30T14:56:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fortunately, `argmin/max` didn't work on strings before :)\r\n\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '0.20.3'\r\n\r\nIn [3]: pd.Series(['a', 'b']).argmax()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-4747fce7cbb5> in <module>()\r\n----> 1 pd.Series(['a', 'b']).argmax()\r\n\r\n~/miniconda3/envs/pandas-0.20.3/lib/python3.6/site-packages/pandas/core/series.py in idxmax(self, axis, skipna, *args, **kwargs)\r\n   1262         \"\"\"\r\n   1263         skipna = nv.validate_argmax_with_skipna(skipna, args, kwargs)\r\n-> 1264         i = nanops.nanargmax(_values_from_object(self), skipna=skipna)\r\n   1265         if i == -1:\r\n   1266             return np.nan\r\n\r\n~/miniconda3/envs/pandas-0.20.3/lib/python3.6/site-packages/pandas/core/nanops.py in nanargmax(values, axis, skipna)\r\n    476     \"\"\"\r\n    477     values, mask, dtype, _ = _get_values(values, skipna, fill_value_typ='-inf',\r\n--> 478                                          isfinite=True)\r\n    479     result = values.argmax(axis)\r\n    480     result = _maybe_arg_null_out(result, axis, mask, skipna)\r\n\r\n~/miniconda3/envs/pandas-0.20.3/lib/python3.6/site-packages/pandas/core/nanops.py in _get_values(values, skipna, fill_value, fill_value_typ, isfinite, copy)\r\n    194     values = _values_from_object(values)\r\n    195     if isfinite:\r\n--> 196         mask = _isfinite(values)\r\n    197     else:\r\n    198         mask = isnull(values)\r\n\r\n~/miniconda3/envs/pandas-0.20.3/lib/python3.6/site-packages/pandas/core/nanops.py in _isfinite(values)\r\n    237             is_integer_dtype(values) or is_bool_dtype(values)):\r\n    238         return ~np.isfinite(values)\r\n--> 239     return ~np.isfinite(values.astype('float64'))\r\n    240\r\n    241\r\n\r\nValueError: could not convert string to float: 'b'\r\n```\r\n\r\nBut yes, I suppose that we should attempt to support it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340470365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340470365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340470365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ3MDM2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T14:58:16Z",
    "updated_at": "2017-10-30T14:58:16Z",
    "author_association": "MEMBER",
    "body": "Ah, yes :-) Although in numpy it works:\r\n\r\n```\r\nIn [118]: a = np.array(['a', 'b', 'c'], dtype=object)\r\n\r\nIn [119]: a.min()\r\nOut[119]: 'a'\r\n\r\nIn [120]: a.argmin()\r\nOut[120]: 0\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340979664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-340979664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 340979664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDk3OTY2NA==",
    "user": {
      "login": "DGrady",
      "id": 392172,
      "node_id": "MDQ6VXNlcjM5MjE3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/392172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGrady",
      "html_url": "https://github.com/DGrady",
      "followers_url": "https://api.github.com/users/DGrady/followers",
      "following_url": "https://api.github.com/users/DGrady/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGrady/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGrady/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGrady/subscriptions",
      "organizations_url": "https://api.github.com/users/DGrady/orgs",
      "repos_url": "https://api.github.com/users/DGrady/repos",
      "events_url": "https://api.github.com/users/DGrady/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGrady/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T05:10:26Z",
    "updated_at": "2017-11-01T05:10:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just refreshing my memory — so in the course of tracking down the bug that prompted #16449, it turned out that `argmax` etc were always trying to coerce their inputs to float, which is why they used to fail with string data. They no longer do that. But, at least at the time, it seemed pretty tricky to get `argmax` etc to behave consistently with arbitrary object dtypes that could also contain nulls, and we decided to disallow that case. If you remove the `disallow` decorator, they currently work as expected with string data, as long as there are no null values, but once you start including null values or possibly using other types of objects things would not work as expected. I think that marking `argmax` as not allowed with object dtypes was done mainly for expediency."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341576753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-341576753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 341576753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU3Njc1Mw==",
    "user": {
      "login": "JB712",
      "id": 28288725,
      "node_id": "MDQ6VXNlcjI4Mjg4NzI1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/28288725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JB712",
      "html_url": "https://github.com/JB712",
      "followers_url": "https://api.github.com/users/JB712/followers",
      "following_url": "https://api.github.com/users/JB712/following{/other_user}",
      "gists_url": "https://api.github.com/users/JB712/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JB712/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JB712/subscriptions",
      "organizations_url": "https://api.github.com/users/JB712/orgs",
      "repos_url": "https://api.github.com/users/JB712/repos",
      "events_url": "https://api.github.com/users/JB712/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JB712/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T22:27:34Z",
    "updated_at": "2017-11-02T22:27:34Z",
    "author_association": "NONE",
    "body": "I'm not sure to get all the thing involving here, but in the exemple given by @barondu (for MorvanZhou code), is the only solution to downgrade pandas ? Is there a simpler solution like to replace argmax by an other function ?\r\n(Sorry I'm very new to python)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341588033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-341588033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 341588033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU4ODAzMw==",
    "user": {
      "login": "DGrady",
      "id": 392172,
      "node_id": "MDQ6VXNlcjM5MjE3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/392172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DGrady",
      "html_url": "https://github.com/DGrady",
      "followers_url": "https://api.github.com/users/DGrady/followers",
      "following_url": "https://api.github.com/users/DGrady/following{/other_user}",
      "gists_url": "https://api.github.com/users/DGrady/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DGrady/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DGrady/subscriptions",
      "organizations_url": "https://api.github.com/users/DGrady/orgs",
      "repos_url": "https://api.github.com/users/DGrady/repos",
      "events_url": "https://api.github.com/users/DGrady/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DGrady/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T23:29:29Z",
    "updated_at": "2017-11-02T23:29:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a workaround, you can call `argmax` on the underlying NumPy array:\r\n\r\n```\r\nPython 3.6.3 |Anaconda custom (64-bit)| (default, Oct 27 2017, 12:14:30) \r\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pandas as pd\r\n>>> pd.Series(['one', 'two']).values.argmax()\r\n1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345486951",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18021#issuecomment-345486951",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18021",
    "id": 345486951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ4Njk1MQ==",
    "user": {
      "login": "Choxmi",
      "id": 12528502,
      "node_id": "MDQ6VXNlcjEyNTI4NTAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12528502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Choxmi",
      "html_url": "https://github.com/Choxmi",
      "followers_url": "https://api.github.com/users/Choxmi/followers",
      "following_url": "https://api.github.com/users/Choxmi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Choxmi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Choxmi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Choxmi/subscriptions",
      "organizations_url": "https://api.github.com/users/Choxmi/orgs",
      "repos_url": "https://api.github.com/users/Choxmi/repos",
      "events_url": "https://api.github.com/users/Choxmi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Choxmi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-19T02:30:14Z",
    "updated_at": "2017-11-19T02:30:14Z",
    "author_association": "NONE",
    "body": "I faced the same issue and I tried with `pandas 0.19.2 and 0.18.1`. Non of them worked for me. I was able to run it successfully only after downgrading to `pandas 0.20.3`. Hope this will help someone.  (y)"
  }
]
