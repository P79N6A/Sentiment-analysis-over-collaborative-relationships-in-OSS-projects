[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25353564",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25353564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25353564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzUzNTY0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T11:37:25Z",
    "updated_at": "2013-09-30T11:37:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "So what should happen in this case?  Are you thinking that detection should be entirely based on first line?\n\n```\nid foo \n123a\n123a\n123a\n123a\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25353850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25353850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25353850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzUzODUw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T11:44:33Z",
    "updated_at": "2013-09-30T11:44:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, as an aside, this is probably a clearer example (when it's at the end, seems like it's a special footer)\n\n```\nid foo \n1  a\n123a\n1  a\n1  a\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25354159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25354159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25354159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU0MTU5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T11:51:09Z",
    "updated_at": "2013-09-30T11:54:06Z",
    "author_association": "NONE",
    "body": "Not at all. #4488 handles the first case by looking for a pattern which is common to a majority of records,\n#4955 fails if there's a single record in the whole dataset that occupies the whole column.\n\nIn your example, the first row is indeed the only hint as to the width of the columns,\nand it may be interpreted as a single column with a header label of \"id foo\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25354549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25354549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25354549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU0NTQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T11:59:25Z",
    "updated_at": "2013-09-30T11:59:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @alefnula\n\nI think that if detection is 'infer' and \"doesn't work\", then should raise.\n\nnot sure if you can make an accurate determination in all cases though?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25354665",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25354665",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25354665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU0NjY1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:01:30Z",
    "updated_at": "2013-09-30T12:03:29Z",
    "author_association": "NONE",
    "body": "True, can't make it work for all cases. I think the first example is more common then yours.\nFor the case where there is a full single-character column seperating the fields, as required by #4955,\n #4488 will (almost) always work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25354910",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25354910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25354910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU0OTEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:07:14Z",
    "updated_at": "2013-09-30T12:07:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @alefnula\n\nI think you can do a percentage computation on the mask that you are computing. If they are say the same in say 90% of the lines then you can go with that (or even higher per). I think that would allow for some (but not most) no-delimeter lines\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25356516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25356516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25356516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU2NTE2",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:36:48Z",
    "updated_at": "2013-09-30T12:36:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, this is a problem. The current implementation cannot detect the columns properly if they are not separated by the filler. But the suggested implementation in issue #4488 didn't work for any case I tested :( For the example you just wrote here it returns `[8]`. And even for simple cases like:\n\n```\n1 2 3\n4 5 6\n7 8 9\n```\n\nIt returns `[2, 3]`...\n\nBut this is not the primary reason I haven't tried to fix it. The much bigger problem with the splitting approach is that it cannot handle the cases where columns are strings which can contain the filler, for example:\n\n```\nid  Firstname and Lastname  Age\n1   Douglas Adams           44\n1   Arthur Conan Doyle      55\n```\n\nThe approach I used supports these cases.\n\nSo basically these are the reason why I chose to use the bitmask instead of splitting and counting. (and also it's more memory and time efficient - but this is not that important if we read only 100 lines of data). The only drawback is that it cannot handle the columns that are glued together, but that is clearly stated in the documentation.\n\nMaybe an approach where the outliers will be discarded can be implemented. But I'll have to find a way to do it efficiently...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25356848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25356848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25356848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU2ODQ4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:42:29Z",
    "updated_at": "2013-09-30T12:42:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ultimately, you can still pass colspecs directly in ambiguous cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25356902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25356902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25356902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU2OTAy",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:43:22Z",
    "updated_at": "2013-09-30T12:44:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also I don't think this is a bug. The behavior of inferring columns is clearly documented, and the function behaves as the documentation states it does...\nBut, as everything, it can be improved :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25356976",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25356976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25356976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU2OTc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:44:20Z",
    "updated_at": "2013-09-30T12:44:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alefnula can you squash the mas column wise and compare how many equal as per of total rows? (not sure if that is really useful.....) just a thought\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25357005",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25357005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25357005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU3MDA1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:44:48Z",
    "updated_at": "2013-09-30T12:54:49Z",
    "author_association": "NONE",
    "body": "Not true. There may be a bug in in #4488 (or not) but the underlying approach should handle strings \nsuch as those just fine. \nThe issue is that it has a free parameter (the threshold) which has no \"right\" value, unless you know the distribution of all datasets out there (we don't).\nIt seems to me that #4955 is a private case of the threshold scheme in #4488, but with a threshold of 0%,\nand I'm pretty sure whatever the \"best\" value is, it's not that.\n\nDocumented behaviour is great, but ultimately it's preferable to support more cases rather\nthen document the fact that you don't, no?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25362503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25362503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25362503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYyNTAz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T13:43:17Z",
    "updated_at": "2013-09-30T13:43:17Z",
    "author_association": "NONE",
    "body": "Removed bug label. It's a common case that isn't handled, which is a shame but not a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25362849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25362849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25362849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYyODQ5",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T13:47:59Z",
    "updated_at": "2013-09-30T13:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I dont actually think that this problem can be solved in a way that will satisfy everyone :( since it's too ambiguous. The provided example:\n\n```\nid foo \n1  a\n1  a\n123a\n```\n\nCan be split in two different (both valid) ways:\n\n```\n id  foo      id  foo\n  1    a       1    a\n  1    a  or   1    a\n123    a      12   3a\n```\n\nAnd here is an even worse case.\n\n```\nc  a  foo \n12 1  5\n23 1  6\n4561237\n```\n\nIf we try to implement any kind of heuristic that will determine where to split, there will be a case when we will get it wrong. The user will, maybe, get the correct number of columns but the data will be incorrect. So he will get a **false** conclusion (especially if he has a large data set that he cannot skim through) that we correctly split the columns, but the data will not be correct.\nIn the current implementation, all these ambiguous cases will produce wrong number of column in the beginning, so the user will immediately know that something is not right...\nMy opinion is that it's better to get a completely wrong number of columns in the first place, then to get the right number of columns, but have incorrect data in them because of the ambiguous cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25362988",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25362988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25362988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYyOTg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T13:50:00Z",
    "updated_at": "2013-09-30T13:50:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alefnula agreed....false positive is bad here. I was just wondering if you can detect the false positive and raise a helpful error message?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25366223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25366223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25366223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzY2MjIz",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T14:22:57Z",
    "updated_at": "2013-09-30T14:22:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback In the current implementation you wont get false positives. Either the number column will be correct and you will get valid data or the number of columns wont be correct...\nThe thing that I may be able to implement is to \"suspect\" that some lines are ambiguous and issue a warning:\n\n> Line 44 is suspicious. If the inferred columns are incorrect, check the line 44 or provide a correct `colspecs` argument.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25367719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25367719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25367719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzY3NzE5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T14:39:43Z",
    "updated_at": "2013-09-30T14:39:43Z",
    "author_association": "NONE",
    "body": "In all the examples you provided #4488 would do the right thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25369152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25369152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25369152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzY5MTUy",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T14:52:16Z",
    "updated_at": "2013-09-30T14:54:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p The problem is that there is no right thing :)\n\n```\nc  a  foo \n12 1  5\n23 1  6\n4561237\n```\n\nWhich of the following is **right**?\n\n```\nc     a foo \n12    1   5\n23    1   6\n45 6123   7\n\nc   a foo \n12  1   5\n23  1   6\n456 1 237\n\nc   a foo \n12  1   5\n23  1   6\n45 61 237\n\nc    a foo \n12   1   5\n23   1   6\n456 12  37\n\nc    a foo \n12   1   5\n23   1   6\n45 612  37\n```\n\nAlso #4488 does not work for any case I tried :( Maybe you pasted the wrong version of the code there?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25371133",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25371133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25371133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzcxMTMz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T15:13:28Z",
    "updated_at": "2013-09-30T15:13:28Z",
    "author_association": "NONE",
    "body": "None of them, the right one is:\n\n```\nc   a   foo \n12  1   5\n23  1   6\n456 123 7\n```\n\nBoth #4488 and your private case of it take the rightmost \"filler\" column as the edge of each column.\nHonestly, most of the fwf datasets I've encountered would not work with #4955, that's the only\nreason I'm pushing for this.\n\nHow about adding a `detect_threshold` kwarg and setting the defval to match the behaviour of\n#4955? a conservative default is fine by me, just don't be too conservative to be useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25374501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25374501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25374501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzc0NTAx",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T15:42:31Z",
    "updated_at": "2013-09-30T15:43:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, now I see what you aim for :) Correct me if I'm wrong, but your point is that most of the `fwf` files are aligned left. If this is the case, we had a completely different experience with `fwf` files, since most of the ones I saw were aligned right so I would probably interpret this one as:\n\n```\nc   a foo \n12  1   5\n23  1   6\n45 61 237\n```\n\nMaybe a `aligned=left|right|None` kwarg? In case of `None` I'll do the thing I'm doing now, and in the case of `left` or `rigth` I can be a little bit \"smarter\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25375470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25375470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25375470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzc1NDcw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T15:53:29Z",
    "updated_at": "2013-09-30T15:57:06Z",
    "author_association": "NONE",
    "body": "No, it has nothing to do with alignment. Your code is a fine default, I'll add in a kwarg \nthreshold when I get a chance, preserving this default behaviour. np.\n\nCorrection: an aligned kwarg makes sense, but still won't handle the cases I'm concerned with,\nunless there's a `threshold` argument.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25406409",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25406409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25406409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA2NDA5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T21:07:46Z",
    "updated_at": "2013-09-30T21:07:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p if you don't have the column headers, you can't know which one is\ncorrect and all of the examples could be valid. Only if the column headers\nare present (and you can assume that they are both left-aligned and don't\nhave spaces in their name) can you unambiguously decide where to split.\n(especially if the data for a column has filler in it but is supposed to\nstay together)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25438404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25438404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25438404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDM4NDA0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T10:16:32Z",
    "updated_at": "2013-10-01T10:16:32Z",
    "author_association": "NONE",
    "body": "@jtratner  the example @alefnula gave aligns some of the column headings differently\nfrom the data, that's misleading.  Remove the bogus headings and assume\nAll columns are aligned the same way (valid assumption, in my experience), Is there \nstill ambiguity there?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25441436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25441436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25441436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQxNDM2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T11:21:39Z",
    "updated_at": "2013-10-01T11:21:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you're right that the alignment should be consistent, but the\nexample still seems dependent upon the assumption that the first row are\ncolumn headings, which isn't always true with fwf that I've seen.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25448645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5056#issuecomment-25448645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5056",
    "id": 25448645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQ4NjQ1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T13:32:22Z",
    "updated_at": "2013-11-15T03:27:33Z",
    "author_association": "NONE",
    "body": "The algo I had in mind doesn't isn't dependent on col headings in any way.\nWe've had plenty of discussion on this at this point, I suggest we leave it \nfor now until I or someone else provides actual code to review.\n@alefnula's code is a fine enhancement so we're ahead already. In the future,\nwe can do more.\n\npushed to 0.14, it's not a blocker. (or someday)\n"
  }
]
