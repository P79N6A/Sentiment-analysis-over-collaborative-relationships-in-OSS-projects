[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240378662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240378662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240378662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDM3ODY2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T10:54:28Z",
    "updated_at": "2016-08-17T10:54:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #13431 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240378768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240378768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240378768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDM3ODc2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T10:55:03Z",
    "updated_at": "2016-08-17T10:55:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I seem to remember this exact issue, but can't find ATM.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240409503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240409503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240409503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDQwOTUwMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T13:24:47Z",
    "updated_at": "2016-08-17T13:25:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "As discussed in some of those issues, MultiIndex sorting is based on the ordering in the levels.  The levels are sorted on construction, but not on re-assignment.  So a couple workarounds would be to construct the mi with the converted levels, or the index also has a `sort_values()` method that sorts by values.\n\n```\nIn [22]: df.reindex(columns = df.columns.sort_values())\nOut[22]: \nl1            0           \nDate 2016-08-09 2016-08-11\n0             2          1\n1             7          6\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240574274",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240574274",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240574274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU3NDI3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T22:56:07Z",
    "updated_at": "2016-08-17T22:56:07Z",
    "author_association": "MEMBER",
    "body": "> MultiIndex sorting is based on the ordering in the levels.\n\nIs this something we could consider changing?\nIn my opinion, this behaviour does not make much sense from a user perspective. If you want such behaviour, you can now use explicitly a CategoricalIndex. For most users of MultiIndex, the fact that it is implemented with label/levels (codes/categories) is only an implementation detail.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240578941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240578941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240578941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU3ODk0MQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T23:20:52Z",
    "updated_at": "2016-08-17T23:20:52Z",
    "author_association": "MEMBER",
    "body": "Rather than basing MultiIndex sorting on something other than sorted levels, what about requiring that each `level` always be sorted? I believe this is already done by default in every case where pandas constructs the MultiIndex levels, so this would only breaks cases where levels are provided explicitly in the `MultiIndex` constructor or set using `set_levels`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240579680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240579680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240579680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU3OTY4MA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T23:24:49Z",
    "updated_at": "2016-08-17T23:24:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems fairly reasonable, although the sorting behavior is [documented](http://pandas.pydata.org/pandas-docs/stable/advanced.html#the-need-for-sortedness-with-multiindex), and I'm sure it would break somebody's code, though probably not too painful to detect/deprecate in 0.19, fix in 0.20 / 1.0?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240582276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-240582276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 240582276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU4MjI3Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T23:39:26Z",
    "updated_at": "2016-08-17T23:39:49Z",
    "author_association": "MEMBER",
    "body": "Yes, assuredly someone relies on the existing behavior, but we could probably deprecate it. In my opinion the fact that levels and labels can be sorted differently is a major source of confusion.\n\nOne option with `set_level` would be to automatically factorize new levels and change the underlying integer codes, too. That's probably not a good idea if someone explicitly wrote `MultiIndex(levels, labels)`, though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241254676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-241254676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 241254676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI1NDY3Ng==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T12:28:28Z",
    "updated_at": "2016-08-21T12:28:28Z",
    "author_association": "MEMBER",
    "body": "@chris-b1 : are you referring to the sentence \"the present implementation of `MultiIndex` requires that the labels be sorted for some of the slicing\"? Actually, I think most people (including me, until few minutes ago) interpret \"the labels be sorted\" as \"the MultiIndex be sorted\", not \"the initialization arrays for `.levels` be sorted\". And if instead they give the second interpretation, well then they should already be following the design proposed by @shoyer .\n\nSo if I'm not missing anything, it would be possible and great to have already in 0.19 the following behaviour: for each component of `.levels` passed at initialization, if it is not sorted, sort it, rearranging the correspondent component of `.labels`.\n\nBy the way: another case in which bad things currently happen is in a `.join()` of unsorted dataframes:\n\n```\nIn [1]: import pandas as pd\n   ...: labels = ['c', 'b']\n   ...: comp = pd.DataFrame(index=pd.MultiIndex.from_product([labels, labels],\n   ...:                                names =['uid', 'oth']))\n   ...: idists = pd.Series(0, index=labels, name='Charles')\n   ...: idists.index.name = 'uid'\n   ...: cc = comp.join(idists, how='inner').sort_index()\n   ...: len(cc.index.levels), cc.index.lexsort_depth, cc.index.is_monotonic\n   ...: \nOut[1]: (2, 0, True)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241255759",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-241255759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 241255759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI1NTc1OQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T12:54:32Z",
    "updated_at": "2016-08-21T12:54:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I meant this note at the end of paragraph, though I agree that isn't super clear either.\n\n>  ... labels are grouped and sorted by the original ordering of the associated factor at that level. Note that this does not necessarily mean the labels will be sorted lexicographically!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241259347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-241259347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 241259347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI1OTM0Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T14:01:15Z",
    "updated_at": "2016-08-21T14:01:15Z",
    "author_association": "MEMBER",
    "body": "Yes, it is rather hidden in the docs that sorting does sort according to the order of the levels.\n\nI am +1 to change the behaviour of sort to actually sort. But, if we do this by sorting the levels (on initialization, or when sorting), how many people would rely on the actual order of the levels? Eg if you use `set_levels`, you implicitly rely on the order ...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241293994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-241293994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 241293994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI5Mzk5NA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-22T00:57:11Z",
    "updated_at": "2016-08-22T00:57:11Z",
    "author_association": "MEMBER",
    "body": "Looking at the MultiIndex docs, it looks like `sort_index()` was originally written to ensure that a MultiIndex is \"lexsorted\" in the way that MultiIndex needs for efficient operations (sorted integer labels a.k.a. codes #13443). I would be much happier using something more explicit like `sort_index_codes()` for that, though, and reserving `sort_index()` for actually sorting the index.\n\nI'm less certain now that it's the right thing to always require that levels be sorted. There are some cases where this lets you do different types of indexing efficiently, and right now we expose most of the MultiIndex implementation directly as public API, so people are indeed probably making use of this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241704582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14015#issuecomment-241704582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14015",
    "id": 241704582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTcwNDU4Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-23T11:38:42Z",
    "updated_at": "2016-08-23T11:38:42Z",
    "author_association": "MEMBER",
    "body": "While I understand that both behaviours can be useful, to my eyes it is a bit unnecessary to provide another way (than `Categorical`s) to impose an order on labels in a level. I'd rather have nice parameters that, for instance, create the required `Categorical`s on the fly when creating a `MultiIndex.from`, if a specific ordering is desired.\n\nBut if supporting the two different behaviours is considered worth the effort, then maybe a parameter (e.g. `codes_sort=False`) in `sort_index()` is sufficient, rather than adding a new method?\n\nWhat I strongly agree on is that the default behaviour should be changed, despite the backwards incompatibility.\n"
  }
]
