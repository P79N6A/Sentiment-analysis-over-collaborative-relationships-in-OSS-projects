[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401249163",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21520#issuecomment-401249163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21520",
    "id": 401249163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTI0OTE2Mw==",
    "user": {
      "login": "anich003",
      "id": 15209267,
      "node_id": "MDQ6VXNlcjE1MjA5MjY3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15209267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anich003",
      "html_url": "https://github.com/anich003",
      "followers_url": "https://api.github.com/users/anich003/followers",
      "following_url": "https://api.github.com/users/anich003/following{/other_user}",
      "gists_url": "https://api.github.com/users/anich003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anich003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anich003/subscriptions",
      "organizations_url": "https://api.github.com/users/anich003/orgs",
      "repos_url": "https://api.github.com/users/anich003/repos",
      "events_url": "https://api.github.com/users/anich003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anich003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T05:10:44Z",
    "updated_at": "2018-06-29T05:10:44Z",
    "author_association": "NONE",
    "body": "Hi @datapythonista,\r\n\r\nI'm new to the open source community and was thinking this could be a good first place to contribute. \r\n\r\nWould this just involve writing a shell command that greps for any line in the .rst files that looks like a list and doesn't have either none or 4 spaces?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401530584",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21520#issuecomment-401530584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21520",
    "id": 401530584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTUzMDU4NA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T09:50:13Z",
    "updated_at": "2018-06-30T09:50:13Z",
    "author_association": "MEMBER",
    "body": "@anich003 that sounds great. The main challenge here is to correctly detect all lists with wrong indentation avoiding false positives.\r\n\r\nI see 2 possible, processing the raw `.rst` files for patterns. Or reuse the `sphinx` functions that do the parsing to infer whether the indentation was wrong.\r\n\r\nLet me know if you need help with it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404847833",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21520#issuecomment-404847833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21520",
    "id": 404847833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg0NzgzMw==",
    "user": {
      "login": "anich003",
      "id": 15209267,
      "node_id": "MDQ6VXNlcjE1MjA5MjY3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15209267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anich003",
      "html_url": "https://github.com/anich003",
      "followers_url": "https://api.github.com/users/anich003/followers",
      "following_url": "https://api.github.com/users/anich003/following{/other_user}",
      "gists_url": "https://api.github.com/users/anich003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anich003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anich003/subscriptions",
      "organizations_url": "https://api.github.com/users/anich003/orgs",
      "repos_url": "https://api.github.com/users/anich003/repos",
      "events_url": "https://api.github.com/users/anich003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anich003/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T14:21:28Z",
    "updated_at": "2018-07-13T14:21:28Z",
    "author_association": "NONE",
    "body": "@datapythonista it seems the .rst files definitely have \"well-formed\" sublists (No space or 4 space before each *) but there are also some files that have 3-space lines (dsintro.rst, comparison_with_stata.rst) and 5-space lines (io.rst, install.rst).\r\n\r\nThe stata lines are, for example, comment lines within stata while the io examples might be sublists but its not clear.\r\n\r\nIt seems we'd want to ignore the code block asterisks and detect the lines in io.rst. I'm not sure how I'd accomplish this with a series of piped greps (my original plan) so I'll have to look more into the sphinx functions. Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404852929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21520#issuecomment-404852929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21520",
    "id": 404852929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg1MjkyOQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T14:38:57Z",
    "updated_at": "2018-07-13T14:38:57Z",
    "author_association": "MEMBER",
    "body": "Thanks for looking at it @anich003. There wouldn't be many lists with wrong indentation, as I reviewed them manually recently. So it's normal you found just few.\r\n\r\nI think it's not a simple problem to detect them automatically, so it makes sense that the piped greps are not good enough. I think we'll have to parse the files ourselves (probably with a Python script). Or reuse sphinx parsing and detect when they are not being rendered correctly (for indented lists sphinx creates a block quote around the list)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444904551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21520#issuecomment-444904551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21520",
    "id": 444904551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDkwNDU1MQ==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-06T15:12:48Z",
    "updated_at": "2018-12-06T15:12:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think sublists require 2 instead of 4 spaces to indent:\r\nFrom [Sphinx Documentation](http://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html)\r\n\r\n```\r\n* this is\r\n* a list\r\n\r\n  * with a nested list\r\n  * and some subitems\r\n\r\n* and here the parent list continues\r\n```\r\n\r\nFrom [A ReStructuredText Primer](http://docutils.sourceforge.net/docs/user/rst/quickstart.html)\r\n\r\n```\r\n* a bullet point using \"*\"\r\n\r\n  - a sub-list using \"-\"\r\n\r\n    + yet another sub-list\r\n\r\n  - another item\r\n```\r\n\r\n![with-blockquote](https://user-images.githubusercontent.com/41163037/49591605-2d360080-f96f-11e8-9c79-297902507580.png)\r\n\r\n```html\r\n<ul>\r\n<li><p class=\"first\">if the dtype is unsupported (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">np.complex</span></code>) then the <code class=\"docutils literal notranslate\"><span class=\"pre\">default_handler</span></code>, if provided, will be called\r\nfor each value, otherwise an exception is raised.</p>\r\n</li>\r\n<li><p class=\"first\">if an object is unsupported it will attempt the following:</p>\r\n<blockquote>\r\n<div><ul class=\"simple\">\r\n<li>check if the object has defined a <code class=\"docutils literal notranslate\"><span class=\"pre\">toDict</span></code> method and call it.\r\nA <code class=\"docutils literal notranslate\"><span class=\"pre\">toDict</span></code> method should return a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> which will then be JSON serialized.</li>\r\n<li>invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">default_handler</span></code> if one was provided.</li>\r\n<li>convert the object to a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> by traversing its contents. However this will often fail\r\nwith an <code class=\"docutils literal notranslate\"><span class=\"pre\">OverflowError</span></code> or give unexpected results.</li>\r\n</ul>\r\n</div></blockquote>\r\n</li>\r\n</ul>\r\n```\r\n\r\nvs\r\n\r\n![without-blockquote](https://user-images.githubusercontent.com/41163037/49591625-3a52ef80-f96f-11e8-99da-a2f4423c6b07.png)\r\n```html\r\n<ul class=\"simple\">\r\n<li>if the dtype is unsupported (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">np.complex</span></code>) then the <code class=\"docutils literal notranslate\"><span class=\"pre\">default_handler</span></code>, if provided, will be called\r\nfor each value, otherwise an exception is raised.</li>\r\n<li>if an object is unsupported it will attempt the following:<ul>\r\n<li>check if the object has defined a <code class=\"docutils literal notranslate\"><span class=\"pre\">toDict</span></code> method and call it.\r\nA <code class=\"docutils literal notranslate\"><span class=\"pre\">toDict</span></code> method should return a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> which will then be JSON serialized.</li>\r\n<li>invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">default_handler</span></code> if one was provided.</li>\r\n<li>convert the object to a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> by traversing its contents. However this will often fail\r\nwith an <code class=\"docutils literal notranslate\"><span class=\"pre\">OverflowError</span></code> or give unexpected results.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n```"
  }
]
