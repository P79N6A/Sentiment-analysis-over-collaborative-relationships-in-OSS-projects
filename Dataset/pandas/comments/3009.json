[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16539771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-16539771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 16539771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM5Nzcx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T22:28:45Z",
    "updated_at": "2013-04-17T22:28:45Z",
    "author_association": "MEMBER",
    "body": "This would be totally awesome, especially for any kind of experimental data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16539923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-16539923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 16539923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM5OTIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T22:32:41Z",
    "updated_at": "2013-04-17T22:32:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "there is already quite a lot of support, see the time delta section (in time series part of docs)\nthis is just an extension to make it easier to do some things\neg the index is works but its am Int64Index, so a bit non-intuitive\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21665950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-21665950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 21665950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjY1OTUw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-27T14:06:19Z",
    "updated_at": "2013-07-27T14:06:19Z",
    "author_association": "MEMBER",
    "body": "ha! didn't realize i had seen this already\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50411000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-50411000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 50411000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDExMDAw",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T22:25:37Z",
    "updated_at": "2014-07-28T22:25:37Z",
    "author_association": "NONE",
    "body": "For reference (as #7640) was not the appropriate place to share, here's a hacked implementation of datetime --> timeinterval.\n\nhttp://nbviewer.ipython.org/github/hugadams/pyuvvis/blob/master/examples/Notebooks/intervals.ipynb\n\nI'd imagine the TimeDeltaIndex should supplant the need for such an API entirely.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54567510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54567510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54567510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTY3NTEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T01:22:14Z",
    "updated_at": "2014-09-05T01:22:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Almost have this working.\n\n```\nIn [1]: pd.TimedeltaIndex(range(5),unit='s')\nOut[1]: \n<class 'pandas.tseries.tdi.TimedeltaIndex'>\n[00:00:00, ..., 00:00:04]\nLength: 5, Freq: None\n\nIn [2]: pd.TimedeltaIndex(range(5),unit='d')\nOut[2]: \n<class 'pandas.tseries.tdi.TimedeltaIndex'>\n[00:00:00, ..., 4 days, 00:00:00]\nLength: 5, Freq: None\n```\n\nI think I need something better for the repr, because unlike other formats, commas CAN be in a single element, so it gets confusing.\n\n```\nIn [3]: pd.TimedeltaIndex(range(5),unit='d')+pd.offsets.Hour(1)\nOut[3]: \n<class 'pandas.tseries.tdi.TimedeltaIndex'>\n[01:00:00, ..., 4 days, 01:00:00]\nLength: 5, Freq: None\n```\n\nany thoughts\n\n@jorisvandenbossche @cpcloud @hayd @TomAugspurger \ncc @shoyer\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54567785",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54567785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54567785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTY3Nzg1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T01:26:16Z",
    "updated_at": "2014-09-05T01:26:16Z",
    "author_association": "MEMBER",
    "body": "@jreback Sweet! Is there a `Timedelta` scalar or are you just reusing `np.timedelta64`? Is there some support for missing values like `NaT`? (Maybe you have a PR or branch which answers these questions?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54572561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54572561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54572561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTcyNTYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T01:50:56Z",
    "updated_at": "2014-09-05T01:50:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer just created a `Timedelta` scalar (pretty much like a Period, but no freq), just a .value really. I need it mainly to box (otherwise you get silly `np.timedelta64` when displaying which is ugly).\n\n```\nIn [1]: (pd.TimedeltaIndex(range(5),unit='d')+pd.offsets.Hour(1)).tolist()\nOut[1]: \n[Timedelta('01:00:00'),\n Timedelta('1 days, 01:00:00'),\n Timedelta('2 days, 01:00:00'),\n Timedelta('3 days, 01:00:00'),\n Timedelta('4 days, 01:00:00')]\n```\n\n`NaT` should work as well.\nnot really any tests yet though :)\n\nhttps://github.com/jreback/pandas/tree/tdi\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54573249",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54573249",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54573249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTczMjQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T02:02:06Z",
    "updated_at": "2014-09-05T02:02:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "API issue:\n\nshould a `Timedelta` scalar be more `timedelta` like or `np.timedelta64` like?\n\nmainly this is for the constructor. should it be as close to `timedelta` as possible so that they are 'effectively' interchangeable (but with `Timedelta` improving on the oddiietes), much like `Timestamp` does?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54574307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54574307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54574307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTc0MzA3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T02:20:27Z",
    "updated_at": "2014-09-05T02:20:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you can get back from the string to the timedelta, then maybe stringify the repr to remove comma ambiguity:\n\n```\nIn [2]: pd.TimedeltaIndex(range(5),unit='d')\nOut[2]: \n<class 'pandas.tseries.tdi.TimedeltaIndex'>\n[\"00:00:00\", ..., \"4 days, 00:00:00\"]\nLength: 5, Freq: None\n```\n\n+1 This looks great!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54576463",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54576463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54576463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTc2NDYz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T03:00:49Z",
    "updated_at": "2014-09-05T03:04:48Z",
    "author_association": "MEMBER",
    "body": "I assume that the you will be able to query using any string that can be handled by `pd.to_timedelta`? e.g., `s.loc['1 day']`?\n\nRE: `timedelta` like or `np.timedelta64` like: I think `Timestamp` sets a clear precedent (even though I'm not sure that was the right decision -- there is something to be said for being similar to a numpy scalar, which `Timestamp` is not) so I would make `Timedelta` more `timedelta` like.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54576597",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54576597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54576597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTc2NTk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T03:04:05Z",
    "updated_at": "2014-09-05T03:04:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep that's pretty easy\n\na bit trickier (but not a lot) is partial string indexing\n\neg s.loc['1 day':]\n\nis effectively >=1 day and < 2 days\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54583014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54583014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54583014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTgzMDE0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T04:09:42Z",
    "updated_at": "2014-09-05T04:09:42Z",
    "author_association": "MEMBER",
    "body": "> ... s.loc['1 day':]\n> is effectively >=1 day and < 2 days\n\nwhy wouldn't that be \">= 1 day\"?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54592210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54592210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54592210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTkyMjEw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T07:11:19Z",
    "updated_at": "2014-09-05T07:11:19Z",
    "author_association": "MEMBER",
    "body": "For the repr, other option is to use `;` to seperate? But maybe quoting is better (`;` is not used for anything else)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54592346",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54592346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54592346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTkyMzQ2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T07:12:58Z",
    "updated_at": "2014-09-05T07:12:58Z",
    "author_association": "MEMBER",
    "body": "@jreback How would both look like (what would be the differences) if Timedelta would more be like datetime.timedelta or np.timedelta64?\n\nAnd would a timedelta64 series element also return this? (like you now also get Timestamps from a datetime64 series)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54630534",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54630534",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54630534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjMwNTM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T14:18:58Z",
    "updated_at": "2014-09-05T14:18:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I created `Timedelta` as an extension type almost exactly like `Timestamp` (it has a c-extension and a shadow python class). This makes it a sub-class of `timedelta` which is nice (and also has a numpy-like value which makes it fast, though like Timestamp its not actually stored in an Index or Series, rather the underlying data is (which is how it is currently)\n\n```\nIn [2]: from pandas import Timedelta\n\nIn [3]: Timedelta('10 days, 00:00:10')\nOut[3]: Timedelta('10 days, 00:00:10')\n\nIn [4]: type(Timedelta('10 days, 00:00:10'))\nOut[4]: pandas.tslib.Timedelta\n\nIn [5]: Timedelta(days=10,milliseconds=10*1000)\nOut[5]: Timedelta('10 days, 00:00:10')\n\nIn [6]: Timedelta('nat')\nOut[6]: Timedelta('NaT')\n\nIn [7]: Timedelta(10,unit='d')\nOut[7]: Timedelta('10 days, 00:00:00')\n\nIn [8]: isinstance(Timedelta(10,unit='d'),timedelta)\nOut[8]: True\n\nIn [10]: pd.to_timedelta(range(5),unit='h')\nOut[10]: \n<class 'pandas.tseries.td.TimedeltaIndex'>\n[00:00:00, ..., 04:00:00]\nLength: 5, Freq: None\n\nIn [11]: Series(pd.to_timedelta(range(5),unit='h'))\nOut[11]: \n0   00:00:00\n1   01:00:00\n2   02:00:00\n3   03:00:00\n4   04:00:00\ndtype: timedelta64[ns]\n\nIn [12]: list(Series(pd.to_timedelta(range(5),unit='h')))\nOut[12]: \n[Timedelta('0 days, 00:00:00'),\n Timedelta('0 days, 01:00:00'),\n Timedelta('0 days, 02:00:00'),\n Timedelta('0 days, 03:00:00'),\n Timedelta('0 days, 04:00:00')]\n```\n\nonly API change in this entire thing really is that `to_timedelta` will now return a `TimedeltaIndex` rather than a `Series` by default (which makes it consisten with `to_datetime` as well).\n\nStill need more tests / integration.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54633349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3009#issuecomment-54633349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3009",
    "id": 54633349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjMzMzQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T14:40:28Z",
    "updated_at": "2014-09-05T14:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "PR is now #8184, further comments can go there\n"
  }
]
