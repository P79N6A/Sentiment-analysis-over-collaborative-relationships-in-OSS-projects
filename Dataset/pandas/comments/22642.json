[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420106934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-420106934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 420106934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDEwNjkzNA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T00:40:24Z",
    "updated_at": "2018-09-11T00:40:24Z",
    "author_association": "MEMBER",
    "body": "I suppose the behavior you are looking for is actually achieved at some point though there is a coercion at the end to float.\r\n\r\nUsing `cat` would be a much more idiomatic approach here, i.e. this:\r\n\r\n```python\r\nIn [14]: df1['a'].str.cat(df1['b'])\r\nOut[14]: \r\n0    13\r\n1    24\r\nName: a, dtype: object\r\n```\r\n\r\nI believe the auto cast to float for the numeric is desired in other operations, so not sure there's anything to be done for the `sum` use case here. Will see what others think"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421265442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-421265442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 421265442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI2NTQ0Mg==",
    "user": {
      "login": "apnewberry",
      "id": 31109952,
      "node_id": "MDQ6VXNlcjMxMTA5OTUy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/31109952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apnewberry",
      "html_url": "https://github.com/apnewberry",
      "followers_url": "https://api.github.com/users/apnewberry/followers",
      "following_url": "https://api.github.com/users/apnewberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/apnewberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apnewberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apnewberry/subscriptions",
      "organizations_url": "https://api.github.com/users/apnewberry/orgs",
      "repos_url": "https://api.github.com/users/apnewberry/repos",
      "events_url": "https://api.github.com/users/apnewberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apnewberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T08:01:41Z",
    "updated_at": "2018-09-14T08:01:41Z",
    "author_association": "NONE",
    "body": "> I believe the auto cast to float for the numeric is desired in other operations\r\n\r\n@WillAyd Which operations do you have in mind, where automatic conversion is desired?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421406192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-421406192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 421406192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQwNjE5Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T16:05:47Z",
    "updated_at": "2018-09-14T16:05:47Z",
    "author_association": "MEMBER",
    "body": "@apnewberry when working with an object type holds numeric data. Taking the example above:\r\n\r\n```python\r\nIn [12]: df1 = df1.astype(int)  \r\nIn [12]: df1.sum(axis=1)\r\nOut[12]: \r\n0    4.0\r\n1    6.0\r\ndtype: float64\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421448166",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-421448166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 421448166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ0ODE2Ng==",
    "user": {
      "login": "apnewberry",
      "id": 31109952,
      "node_id": "MDQ6VXNlcjMxMTA5OTUy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/31109952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apnewberry",
      "html_url": "https://github.com/apnewberry",
      "followers_url": "https://api.github.com/users/apnewberry/followers",
      "following_url": "https://api.github.com/users/apnewberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/apnewberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apnewberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apnewberry/subscriptions",
      "organizations_url": "https://api.github.com/users/apnewberry/orgs",
      "repos_url": "https://api.github.com/users/apnewberry/repos",
      "events_url": "https://api.github.com/users/apnewberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apnewberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T18:38:11Z",
    "updated_at": "2018-09-14T18:38:11Z",
    "author_association": "NONE",
    "body": "On pandas 0.23.4 I'm seeing a different behavior: the resulting dtype is int64, rather than float64. Given the `astype(int)` my expectation would be that the resulting dtype is an int rather than a float. Is there automatic conversion going on here that I'm missing?\r\n\r\n```python\r\nIn [8]: pd.__version__\r\nOut[8]: '0.23.4'\r\n\r\nIn [9]: df1 = pd.DataFrame(data={'a':['1', '2'], 'b':['3', '4']})\r\n\r\nIn [10]: df1.astype(int).sum(axis=1)\r\nOut[10]: \r\n0    4\r\n1    6\r\ndtype: int64\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421490653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-421490653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 421490653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ5MDY1Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T21:35:33Z",
    "updated_at": "2018-09-14T21:35:33Z",
    "author_association": "MEMBER",
    "body": "Hmm OK that's what I have on master. Somewhat orthogonal to the original post but if you want to submit a PR with a test case for that would certainly take it (if there's not one already).\r\n\r\nRegardless going back to the OP going from object to a numeric type where applicable is certainly desired as it can yield memory and will definitely yield performance improvements. I don't see a way to reasonably account for what is being asked without impacting a larger use case and there's already a more idiomatic approach to get what is desired so I'm -1 on any change here"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421525511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-421525511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 421525511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTUyNTUxMQ==",
    "user": {
      "login": "apnewberry",
      "id": 31109952,
      "node_id": "MDQ6VXNlcjMxMTA5OTUy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/31109952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apnewberry",
      "html_url": "https://github.com/apnewberry",
      "followers_url": "https://api.github.com/users/apnewberry/followers",
      "following_url": "https://api.github.com/users/apnewberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/apnewberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apnewberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apnewberry/subscriptions",
      "organizations_url": "https://api.github.com/users/apnewberry/orgs",
      "repos_url": "https://api.github.com/users/apnewberry/repos",
      "events_url": "https://api.github.com/users/apnewberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apnewberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-15T02:52:00Z",
    "updated_at": "2018-09-15T02:52:00Z",
    "author_association": "NONE",
    "body": "Could you help me understand what you mean about performance improvements from casting `object` columns to numeric? \r\n\r\nHere are a few timings in case it's helpful.\r\n\r\n```python\r\nIn [6]: n = 1_000_000\r\n        df = pd.DataFrame(data={'a':['1' for _ in range(n)], 'b':['2' for _ in range(n)]})\r\n\r\nIn [9]: %timeit df.sum(axis=1)\r\n209 ms ± 206 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [10]: %timeit df.astype(str).sum(axis=1)\r\n288 ms ± 665 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [11]: %timeit df.astype(float).sum(axis=1)\r\n147 ms ± 133 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\nIn [12]: %timeit df.astype(object).sum(axis=1)\r\n227 ms ± 2.38 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [13]: %timeit df.sum(axis=1).astype(float)\r\n209 ms ± 245 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [14]: %timeit df.sum(axis=1).astype(str)\r\n421 ms ± 433 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [15]: %timeit df.sum(axis=1).astype(object)\r\n236 ms ± 192 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421525955",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22642#issuecomment-421525955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22642",
    "id": 421525955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTUyNTk1NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-15T03:00:46Z",
    "updated_at": "2018-09-15T03:00:46Z",
    "author_association": "MEMBER",
    "body": "@apnewberry if you have usage questions you should ask on SO or Gitter - please don't continue the conversation here as it hijacks the thread.\r\n\r\nWith that said, take the axis argument out of your first three calls and you'll see. "
  }
]
