[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461260459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25196#issuecomment-461260459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25196",
    "id": 461260459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI2MDQ1OQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T01:52:59Z",
    "updated_at": "2019-02-07T01:52:59Z",
    "author_association": "MEMBER",
    "body": "Thanks, I can confirm that this is broken on master:\r\n\r\n```python\r\nIn [1]: import pandas as pd; pd.__version__\r\nOut[1]: '0.25.0.dev0+77.g51fca4cc9'\r\n\r\nIn [2]: df = pd.DataFrame([[0, 0], [0, 0]])\r\n\r\nIn [3]: df.apply(dict)\r\n---------------------------------------------------------------------------\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n```\r\nAnd it worked on 0.23.4:\r\n```python\r\nIn [1]: import pandas as pd; pd.__version__\r\nOut[1]: '0.23.4'\r\n\r\nIn [2]: df = pd.DataFrame([[0, 0], [0, 0]])\r\n\r\nIn [3]: df.apply(dict)\r\nOut[3]:\r\n0    {0: 0, 1: 0}\r\n1    {0: 0, 1: 0}\r\ndtype: object\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461265867",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25196#issuecomment-461265867",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25196",
    "id": 461265867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI2NTg2Nw==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T02:23:57Z",
    "updated_at": "2019-02-07T02:29:54Z",
    "author_association": "MEMBER",
    "body": "Issue appears to be caused by this line:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/51fca4cc93bf3fcd529284b2c2e2ae88a44a5f40/pandas/core/apply.py#L113\r\n\r\nSpecifically `is_dict_like` considers `dict` to be dict-like, but I think the intention is that it should only look for initialized dict-like structures, and not the constructors themselves.  Note that this is inconsistent with `is_list_like`, which does not consider `list` to be list-like:\r\n```python\r\nIn [1]: from pandas.core.dtypes.common import is_dict_like, is_list_like\r\n\r\nIn [2]: is_dict_like(dict)\r\nOut[2]: True\r\n\r\nIn [3]: is_list_like(list)\r\nOut[3]: False\r\n```\r\nSo the fix is to modify `is_dict_like` to not consider `dict` (and other constructors) as dict-like.  This requires a little more than just excluding `dict` itself, as other similar things, like the `defaultdict` constructor, should also not be considered dict-like:\r\n\r\n```python\r\nIn [4]: from collections import defaultdict\r\n\r\nIn [5]: is_dict_like(defaultdict)\r\nOut[5]: True\r\n```\r\n\r\n"
  }
]
