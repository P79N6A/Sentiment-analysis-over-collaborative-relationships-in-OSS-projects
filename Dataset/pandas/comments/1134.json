[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5347816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-5347816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 5347816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDc4MTY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-26T01:46:54Z",
    "updated_at": "2012-04-26T01:46:54Z",
    "author_association": "MEMBER",
    "body": "This is actually a feature / deliberate choice and not a bug-- it's related to #652. Back in January I changed the comparison methods to do auto-alignment, but found that it led to a large amount of bugs / breakage for users and, in particular, many NumPy functions (which regularly do things like `arr[1:] == arr[:-1]`; example: `np.unique`) stopped working. \n\nThis gets back to the issue that Series isn't quite ndarray-like enough and should probably not be a subclass of ndarray. \n\nSo, I haven't got a good answer for you except for that; auto-alignment would be ideal but I don't think I can do it unless I make Series _not_ a subclass of ndarray. I think this is probably a good idea but not likely to happen until 0.9 or 0.10 (several months down the road). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5350448",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-5350448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 5350448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTA0NDg=",
    "user": {
      "login": "lesteve",
      "id": 1680079,
      "node_id": "MDQ6VXNlcjE2ODAwNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1680079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lesteve",
      "html_url": "https://github.com/lesteve",
      "followers_url": "https://api.github.com/users/lesteve/followers",
      "following_url": "https://api.github.com/users/lesteve/following{/other_user}",
      "gists_url": "https://api.github.com/users/lesteve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lesteve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lesteve/subscriptions",
      "organizations_url": "https://api.github.com/users/lesteve/orgs",
      "repos_url": "https://api.github.com/users/lesteve/repos",
      "events_url": "https://api.github.com/users/lesteve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lesteve/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-26T06:35:37Z",
    "updated_at": "2012-04-26T06:44:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting, thanks for the answer. Is `s[1:] == s[:-1]` the main use case though, where you need to have this not completely intuitive == operator?\n\nOut of interest, is there a way to figure out whether s1 and s2 are a view on the same underlying series and in this case have `s1 == s2` do the current comparison. When s1 and s2 don't have anything to do with each other you would do the equivalent of aligning + comparison.\n\nNot sure whether you would want to do that even if it was possible, e.g. `s1 == s2.copy()` would potentially return something different than`s1 == s2`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5356273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-5356273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 5356273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTYyNzM=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-26T13:25:05Z",
    "updated_at": "2012-04-26T13:25:05Z",
    "author_association": "MEMBER",
    "body": "Interesting, that would be a hack around the `np.unique` problem. I'll take a look into it sooner rather than later to see\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24861827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-24861827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 24861827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYxODI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T12:45:28Z",
    "updated_at": "2013-09-21T12:45:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as not a bug\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40060094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-40060094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 40060094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYwMDk0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-10T09:43:36Z",
    "updated_at": "2014-04-10T09:43:36Z",
    "author_association": "MEMBER",
    "body": "@jreback I was answering this SO question: http://stackoverflow.com/questions/22983523/comparing-pandas-series-for-equality-when-they-are-in-different-orders/22983621#22983621. And I was wondering: \n\nI understand that `s1 == s2` is not flexible, just like `df1 == df2` gives the error message `ValueError: Can only compare identically-labeled DataFrame objects`.\nBut for dataframes, you can overcome this with the _flexible_ `DataFrame.eq` method. There is also a `Series.eq` method, but this is a _not flexible_ method (not aligning). Is there a reason that `Series.eq` is not flexible?\n\n```\nIn [154]: x = pd.Series(index=[\"A\", \"B\", \"C\"], data=[1,2,3])\nIn [155]: y = pd.Series(index=[\"C\", \"B\", \"A\"], data=[3,2,1])\nIn [156]: x == y\nOut[156]: \nA    False\nB     True\nC    False\ndtype: bool\n\nIn [157]: x.eq(y)\nOut[157]: \nA    False\nB     True\nC    False\ndtype: bool\n\nIn [158]: x.to_frame() == y.to_frame()\nTraceback (most recent call last):\n...\nValueError: Can only compare identically-labeled DataFrame objects\n\nIn [159]: x.to_frame().eq(y.to_frame())\nOut[159]: \n      0\nA  True\nB  True\nC  True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40061505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-40061505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 40061505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYxNTA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-10T10:02:31Z",
    "updated_at": "2014-04-10T10:02:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche  interesting, let's reopen and i'll take a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44531842",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-44531842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 44531842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTMxODQy",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T13:36:42Z",
    "updated_at": "2014-05-29T13:36:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for @jorisvandenbossche's suggestion of at least making the .eq, .ne, .lt, .le, .gt, .ge methods _flexible_, i.e. use alignment.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44534428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-44534428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 44534428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTM0NDI4",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T14:01:06Z",
    "updated_at": "2014-05-29T14:01:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "From what I am reading above, it sounds like a fix might be more complicated/a while off. Could we in the meantime add something to the documentation about this?\n\nI discovered this issue for myself recently and it took me a long time to figure out what was going on. At some point I did check the documentation to see if my understanding of index alignment was correct and there was no mention there that this only applies to the +, -, *, / operators and not to ==, !=, <, <=, >, >=.\n\nIn particular, \n- the [Caveats and Gotchas](http://pandas.pydata.org/pandas-docs/stable/gotchas.html) section of the Pandas documentation has sections on [if/truth statements with Pandas](http://pandas.pydata.org/pandas-docs/stable/gotchas.html#using-if-truth-statements-with-pandas) and [Bitwise boolean](http://pandas.pydata.org/pandas-docs/stable/gotchas.html#bitwise-boolean) operators (I think this would better be called **Elementwise boolean operators**). However these make no mention of the fact that indices will be ignored and not aligned in elementwise comparisons.\n- The [Basics](http://pandas.pydata.org/pandas-docs/stable/basics.html) section of the docs has a section ([Flexible Comparisons](http://pandas.pydata.org/pandas-docs/stable/basics.html#basics-compare)) on the basics of comparisons. This states that\n  \n  ```\n  Starting in v0.8, pandas introduced binary comparison methods eq, ne, lt, gt, le, and ge to Series and DataFrame whose behavior is analogous to the binary arithmetic operations described above:\n  ```\n  \n  However the behaviour for Series.eq is **not** _analogous to the binary arithmetic operations_ as the arithmetic operations **do** perform index alignment while the comparison operators do not. Also, Series.eq does not appear to exist in 0.12.0 (i.e. not from 0.8 onwards as claimed) but I do find it in 0.13.1 although the signature there is different from DataFrame.eq (of course _axis_ makes no sense for Series.eq but _level_ and _axis_ could still be included like they are in Series.add).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44535562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-44535562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 44535562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTM1NTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T14:11:50Z",
    "updated_at": "2014-05-29T14:11:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #6860 its not that 'hard' the fix at all. Though I think that doing JUST for `.eq,.ne`...etc might be better. (as @jorisvandenbossche suggests).\n\n(I think the docs really mean `__eq__` (and not `.eq`); agreed that the signatures of `.eq` et.al need to be updated / integrated with `DataFrame.eq`; going to create an issue for that\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44535973",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-44535973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 44535973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTM1OTcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T14:15:09Z",
    "updated_at": "2014-05-29T14:15:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/issues/7278\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53024053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-53024053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 53024053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDI0MDUz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-22T05:19:30Z",
    "updated_at": "2014-08-22T05:20:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also came up here: http://stackoverflow.com/q/25435229/1240268\n\n(update: oh, maybe thats with comparison)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102779078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-102779078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 102779078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjc3OTA3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-17T10:05:03Z",
    "updated_at": "2015-05-17T10:05:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "reported here again: http://stackoverflow.com/questions/30284415/why-do-pandas-comparison-operators-not-align-on-index/30285686#30285686\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/171786398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-171786398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 171786398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTc4NjM5OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T21:32:45Z",
    "updated_at": "2016-01-14T21:32:45Z",
    "author_association": "MEMBER",
    "body": "Bumping this issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231641421",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1134#issuecomment-231641421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1134",
    "id": 231641421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY0MTQyMQ==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T04:48:22Z",
    "updated_at": "2016-07-11T04:54:35Z",
    "author_association": "MEMBER",
    "body": "+1 on adding flexible methods. \n\nAlso, there are inconsistencies in normal ops between `Series` and `DataFrame` as @jorisvandenbossche pointed. I`ve organized the differences including arithmetic / bool op (xref: #4581, #7278, .#13538, #13587)\n\n## Series\n\n### Arithmetic\n\naligns with labels.\n\n```\npd.Series([1, 2, 3], index=list('ABC')) + pd.Series([2, 2, 2], index=list('ABD')) \n# A    3.0\n# B    4.0\n# C    NaN\n# D    NaN\n# dtype: float64\n\n# pd.Series([1, 2, 3], index=list('ABC')) + pd.Series([2, 2, 2, 2], index=list('ABCD')) \n# A    3.0\n# B    4.0\n# C    5.0\n# D    NaN\n# dtype: float64\n```\n\n### Comparison\n\nignores labels, raises when lengths are different.\n\n```\npd.Series([1, 2, 3], index=list('ABC')) > pd.Series([2, 2, 2], index=list('ABD')) \n# A    False\n# B    False\n# C     True\n# dtype: bool\n\npd.Series([1, 2, 3], index=list('ABC')) > pd.Series([2, 2, 2, 2], index=list('ABCD'))\n# ValueError: Series lengths must match to compare\n```\n\n### Boolean (logical)\n\nignores labels, ignores length mismatch.\n\n```\npd.Series([True, False, True], index=list('ABC')) & pd.Series([True, True, True], index=list('ABD'))\n# A     True\n# B    False\n# C    False\n# dtype: bool\n\npd.Series([True, False, True], index=list('ABC')) & pd.Series([True, True, True, True], index=list('ABCD'))\n# A     True\n# B    False\n# C     True\n# dtype: bool\n```\n\n## DataFrame\n\n### Arithmetic\n\naligns with labels.\n\n```\npd.DataFrame([1, 2, 3], index=list('ABC')) + pd.DataFrame([2, 2, 2], index=list('ABD'))\n#      0\n# A  3.0\n# B  4.0\n# C  NaN\n# D  NaN\n\npd.DataFrame([1, 2, 3], index=list('ABC')) + pd.DataFrame([2, 2, 2, 2], index=list('ABCD')) \n#      0\n# A  3.0\n# B  4.0\n# C  5.0\n# D  NaN\n```\n\n### Comparison\n\nraises when labels are different.\n\n```\npd.DataFrame([1, 2, 3], index=list('ABC')) > pd.DataFrame([2, 2, 2], index=list('ABD'))\n# ValueError: Can only compare identically-labeled DataFrame objects\n\npd.DataFrame([1, 2, 3], index=list('ABC')) > pd.DataFrame([2, 2, 2, 2], index=list('ABCD'))\n# ValueError: Can only compare identically-labeled DataFrame objects\n```\n\n### Boolean (logical)\n\naligns with labels.\n\n```\npd.DataFrame([True, False, True], index=list('ABC')) & pd.DataFrame([True, True, True], index=list('ABD')) \n#        0\n# A   True\n# B  False\n# C    NaN\n# D    NaN\n\npd.DataFrame([True, False, True], index=list('ABC')) & pd.DataFrame([True, True, True, True], index=list('ABCD'))\n#        0\n# A   True\n# B  False\n# C    NaN\n# D    NaN\n```\n\nBased on above, I think followings are consistent:\n- arithmetic always align with labels\n- comparison is allowed when labels are identical. otherwise raises.\n- boolean always align with labels\n\nIf OK, I'd like to do 2 changes:\n- series comparison to check whether labels are identical\n- series boolean to align with labels\n"
  }
]
