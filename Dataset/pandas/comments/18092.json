[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341695983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341695983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341695983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTY5NTk4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T12:57:27Z",
    "updated_at": "2017-11-03T12:57:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "so the issue is that https://github.com/pandas-dev/pandas/blob/master/pandas/core/indexes/timedeltas.py#L383 is not done in a vectorized way, IOW needs to simply construct the returned arrays and then use ``_maybe_mask_results``, rather than doing this in a list-comp with individual Timedelta construction.\r\n\r\nyou can't actually divide by ``np.timedelta64`` (well strictly speaking for days you can but not for any other unit), so rather fix the general problem.\r\n\r\nwant to have a go at a PR?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341868383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341868383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341868383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTg2ODM4Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T03:24:47Z",
    "updated_at": "2017-11-04T03:24:47Z",
    "author_association": "MEMBER",
    "body": "I took a look at this and re-factored the _get_field function to look as follows:\r\n\r\n    def _get_field(self, m):\r\n        def map_attr(x):\r\n            nonlocal m\r\n            return getattr(Timedelta(x), m)\r\n        \r\n        values = self.asi8\r\n        hasnans = self.hasnans\r\n        if hasnans:\r\n            vfunc = np.vectorize(map_attr, otypes=[np.float])\r\n        else:\r\n            vfunc = np.vectorize(map_attr, otypes=[np.int])\r\n        \r\n        result = vfunc(values)\r\n            \r\n        return Index(result, name=self.name)\r\n\r\nHowever, I didn't really see any tangible performance improvement. The [np.vectorize docs](https://docs.scipy.org/doc/numpy-dev/reference/generated/numpy.vectorize.html) mention that the function is for convenience and not necessarily performance, as it's essentially a for loop. \r\n\r\n@jreback - is the code above that I provided in line with what you were expecting? If that's the case I'm not sure that is really the root cause from my initial tests"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341904247",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341904247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341904247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkwNDI0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T15:12:21Z",
    "updated_at": "2017-11-04T15:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "no this is not vectorization, see how other things are done in datetimes.py"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341912970",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341912970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341912970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkxMjk3MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T17:04:28Z",
    "updated_at": "2017-11-04T17:08:55Z",
    "author_association": "MEMBER",
    "body": "Thanks Jeff. I refactored to the below and did see significant speed improvements:\r\n\r\n    def _get_field(self, m):\r\n        freqs = {\r\n            'days' : 'D',\r\n            'seconds' : 's',\r\n            'microseconds' : 'us',\r\n            'nanoseconds' : 'ns'\r\n            }\r\n        freq = freqs[m]\r\n        \r\n        values = self.asi8\r\n        hasnans = self.hasnans\r\n        result = libts.get_date_field(values, freq)\r\n        if hasnans:\r\n            result = self._maybe_mask_results(result, convert='float64')\r\n        \r\n        return Index(result, name=self.name)\r\n\r\nDo you have a point of view as to where to the put the freqs dict I have above? I've included it in the method here for visibility, but I was thinking it could be better served as a classmethod to map the properties to their appropriate frequency codes"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341917945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341917945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341917945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkxNzk0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T18:08:39Z",
    "updated_at": "2017-11-04T18:08:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Stanpol great!\r\n\r\nyou shouldn't need the freq dict, simply pass in the correct value in the accessor itself (which I think is what it was doing). and pls add some asv's for this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341930490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341930490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341930490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkzMDQ5MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T21:18:14Z",
    "updated_at": "2017-11-04T21:18:14Z",
    "author_association": "MEMBER",
    "body": "Thanks for the tip on the accessors - that's easy enough. One issue I'm seeing now though is that I might need to be careful with handling dates vs time deltas. I noticed the test_fields method in test_timedelta.py is failing with the below:\r\n\r\n    E       Index values are different (100.0 %)\r\n    E       [left]:  Int64Index([2, 3, 4, 5, 6, 7, 8, 9, 10, 11], dtype='int64')\r\n    E       [right]: Int64Index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], dtype='int64')\r\n\r\nThe difference of one day I assume is due to me using the get_date_field method in libts while passing in Timedelta objects. Any tips on how to best handle that?\r\n\r\nI'll take a look at adding some asv's as you suggest"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341931481",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341931481",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341931481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkzMTQ4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T21:37:18Z",
    "updated_at": "2017-11-04T21:37:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "what does this have to do with dates? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341931526",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-341931526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 341931526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkzMTUyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T21:38:06Z",
    "updated_at": "2017-11-04T21:38:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "you shouldn't be using this ``get_date_field``, you are *solely* calling routings on timedeltas."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342359845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-342359845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 342359845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjM1OTg0NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T02:54:33Z",
    "updated_at": "2017-11-07T02:54:33Z",
    "author_association": "MEMBER",
    "body": "My mistake. Looking further into this I noticed that all of the logic for converting between days, hours, minutes, seconds, etc... is contained within the `_ensure_components` method of the `_Timedelta` class in timedeltas.pyx, so it's difficult to avoid some kind of individual Timedelta construction as the code currently stands. \r\n\r\nI'll keep plugging at it but I haven't done much in C / Cython before so it may be slow going on my end to figure out how to make timedelta field access work similar to date objects. If anyone else out there has thoughts on how to tackle then by all means.\r\n\r\nFWIW here's what I tried to implement in fields.pyx to mimic what exists for dates. I did this solely to check performance so there isn't any error handling. My very un-scientific tests weren't showing any improvement over existing code. \r\n\r\n    @cython.wraparound(False)\r\n    @cython.boundscheck(False)\r\n    def get_timedelta_field(ndarray[int64_t] tdindex, object field):\r\n        cdef:\r\n            Py_ssize_t i, count = 0\r\n            ndarray[int32_t] out\r\n\r\n        count = len(tdindex)\r\n        out = np.empty(count, dtype='i4')\r\n\r\n        for i in range(count):\r\n            if tdindex[i] == NPY_NAT:\r\n                out[i] = -1\r\n                continue\r\n\r\n            out[i] = getattr(_Timedelta(microseconds = tdindex[i] / 1000), field)\r\n        \r\n      return out"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342786698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-342786698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 342786698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjc4NjY5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T11:13:16Z",
    "updated_at": "2017-11-08T11:13:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "note that https://github.com/pandas-dev/pandas/pull/18161 was merged so the code you are working is slightly moved around but substantially the same"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343140021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18092#issuecomment-343140021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18092",
    "id": 343140021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzE0MDAyMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-09T12:28:44Z",
    "updated_at": "2017-11-09T12:28:44Z",
    "author_association": "MEMBER",
    "body": "Thanks for the heads up. Already revised - hope to have something over in the next few days"
  }
]
