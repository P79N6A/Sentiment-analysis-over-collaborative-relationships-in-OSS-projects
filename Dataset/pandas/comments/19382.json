[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360466359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19382#issuecomment-360466359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19382",
    "id": 360466359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ2NjM1OQ==",
    "user": {
      "login": "cbertinato",
      "id": 20772838,
      "node_id": "MDQ6VXNlcjIwNzcyODM4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20772838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbertinato",
      "html_url": "https://github.com/cbertinato",
      "followers_url": "https://api.github.com/users/cbertinato/followers",
      "following_url": "https://api.github.com/users/cbertinato/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbertinato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbertinato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbertinato/subscriptions",
      "organizations_url": "https://api.github.com/users/cbertinato/orgs",
      "repos_url": "https://api.github.com/users/cbertinato/repos",
      "events_url": "https://api.github.com/users/cbertinato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbertinato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T13:28:56Z",
    "updated_at": "2018-01-25T13:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Has anybody seen an instance where a test will not raise an exception, but the same line in the Python interpreter does?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360559160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19382#issuecomment-360559160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19382",
    "id": 360559160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU1OTE2MA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T18:38:54Z",
    "updated_at": "2018-01-25T18:38:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's a reason (arguable whether it's a good one) for the difference between the `OutOfBoundsDatetime` and `OverflowError` - there's some portion of the negative `int64` space that aren't valid times, while in the positive space we use every available int64 value, so trying one too big can't be cast into an int64.  (mostly trivia)\r\n\r\nYour upper string example definitely looks buggy - PR would be welcome!\r\n```python\r\n>>> Timestamp('2262-04-11 23:47:16.854775808')\r\nTimestamp('2262-04-11 23:47:16.854775')\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360672565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19382#issuecomment-360672565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19382",
    "id": 360672565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDY3MjU2NQ==",
    "user": {
      "login": "cbertinato",
      "id": 20772838,
      "node_id": "MDQ6VXNlcjIwNzcyODM4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20772838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbertinato",
      "html_url": "https://github.com/cbertinato",
      "followers_url": "https://api.github.com/users/cbertinato/followers",
      "following_url": "https://api.github.com/users/cbertinato/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbertinato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbertinato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbertinato/subscriptions",
      "organizations_url": "https://api.github.com/users/cbertinato/orgs",
      "repos_url": "https://api.github.com/users/cbertinato/repos",
      "events_url": "https://api.github.com/users/cbertinato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbertinato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T03:12:18Z",
    "updated_at": "2018-01-26T03:12:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "So should we normalize it so that any format generates an `OutOfBoundsDatetime`?  I understand the difference, but is it necessary to indicate overflow in this case?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360797637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19382#issuecomment-360797637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19382",
    "id": 360797637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDc5NzYzNw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T14:23:31Z",
    "updated_at": "2018-01-26T14:23:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I tend to think it'd be better if all of these raised an `OutOfBoundsDatetime`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361094762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19382#issuecomment-361094762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19382",
    "id": 361094762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTA5NDc2Mg==",
    "user": {
      "login": "cbertinato",
      "id": 20772838,
      "node_id": "MDQ6VXNlcjIwNzcyODM4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20772838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbertinato",
      "html_url": "https://github.com/cbertinato",
      "followers_url": "https://api.github.com/users/cbertinato/followers",
      "following_url": "https://api.github.com/users/cbertinato/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbertinato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbertinato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbertinato/subscriptions",
      "organizations_url": "https://api.github.com/users/cbertinato/orgs",
      "repos_url": "https://api.github.com/users/cbertinato/repos",
      "events_url": "https://api.github.com/users/cbertinato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbertinato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-28T20:50:39Z",
    "updated_at": "2018-01-28T20:53:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is another variation for DatetimeIndex.\r\n```python\r\nIn [3]: pd.DatetimeIndex(np.array(['2262-04-11 23:47:16.854775808'], dtype='datetime64'))\r\nOut[3]: DatetimeIndex(['NaT'], dtype='datetime64[ns]', freq=None)\r\n```\r\nSo it's not exactly silent, but does differ from what happens for a Timestamp, which is the bug that we're talking about there. But suppose we address the upper bound for the Timestamp and make it, say, raise `OutofBoundsDatetime` or `OverflowError`.  The behavior of the DatetimeIndex would still be inconsistent not only with that, but with its own behavior at the lower bound.\r\n\r\nCan't an argument be made for returning `NaT` for all cases, Timestamp and DatetimeIndex?"
  }
]
