[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282893997",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-282893997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 282893997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg5Mzk5Nw==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T23:40:48Z",
    "updated_at": "2017-02-27T23:40:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tests+ are a WIP."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282895219",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-282895219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 282895219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg5NTIxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T23:47:10Z",
    "updated_at": "2017-02-27T23:47:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario tip. write tests first! This validates that you are actually testing the right thing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282897632",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-282897632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 282897632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg5NzYzMg==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T00:00:07Z",
    "updated_at": "2017-02-28T00:00:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will try to follow TDD when here going forward.\r\n\r\nRight now, this looks like it works for non-datetimes, but with datetimes the fill value is treated as UNIX time. So e.g. `pd.Series(pd.date_range('1/1/2015', '1/30/2015')).shift(1, fill_value=0)` replaces the first instance with `1970-01-01`, *not* `0`.\r\n\r\nWhat behavior should be followed in that case? Trying to read the `fill_value` input as a datetime maybe?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282922641",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-282922641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 282922641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkyMjY0MQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T02:26:51Z",
    "updated_at": "2017-02-28T02:26:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems to me that the behavior the emulate here w.r.t. `df.shift(fill_value=0)` is that of `df.iloc[:, 0] = 0`. Which does the following by column:\r\n\r\n* `int` and `object` columns get `0` (`int`) and retain their `dtype`.\r\n* `float` columns get `0.0` (`float`) and retain their `dtype`.\r\n* `datetime` columns get `1970-01-01` (`datetime`; UNIX timestamp) and retain their `dtype`.\r\n* `period` columns get `0` (`int`) and become `object` `dtype`. (!)\r\n* `categorical` columns fail out with `ValueError: Cannot setitem on a Categorical with a new category, set the categories first`.\r\n* `sparse` columns fail with a `NotImplementedError`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282924505",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-282924505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 282924505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkyNDUwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T02:38:48Z",
    "updated_at": "2017-02-28T02:38:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "no the fill value has to be a valid value for that dtype (this is checked already internally)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282937279",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-282937279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 282937279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkzNzI3OQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T04:14:27Z",
    "updated_at": "2017-02-28T04:16:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "The tests for `shift` are kind of all over the place (?). For the moment, I'm keeping the one's I'm writing in `tests/frame/test_timeseries::TestDataFrameTimeSeriesMethods.test_shift_fillna` (for `DataFrame.shift`) and `tests/series/test_timeseries::TestSeriesTimeSeriesMethods.test_shift_fillna` (for `Series.shift`).\r\n\r\nAs you stated above, the implementation is from a surface level as simple as passing the `fill_value` argument down to the requisite `shift` methods (several exist, one for each \"kind\" of axis), where in most cases there's a `_maybe_upcast` function which accepts the new `fill_value` as a keyword argument.\r\n\r\nA couple of things I'm seeing in testing, however. I'm finding that in this implementation non-valid values actually get converted to `np.nan`: such is the fate of `ts.shift(1, fill_value=\"Hello World\")`, which results in a first value of `NaT`. I'd have expected a `ValueError` instead, however...is this the desired behavior?\r\n\r\nThe other thing is that `Categorical` and `Sparse` don't make a call to `_maybe_upcast` internally. Should something else be done in these cases instead? Maybe these column types should raise a `NotImplemented` when passed a `fill_value` instead?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/283038598",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-283038598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 283038598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzAzODU5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T13:29:09Z",
    "updated_at": "2017-02-28T13:29:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes ``.shift`` tests are a bit of a mixed bag (always glad to consolidate things though - generally separate PR for things like that is good).\r\n\r\nSo we certainly can raise on a not-None fill_value for certain types (categorical; sparse in theory could work though, but don't spend too much time on, you can simply open an issue)\r\n\r\nand to your last part, we are prob not validating things as much as we should so help there would be great as well!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/283096992",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-283096992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 283096992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA5Njk5Mg==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T16:52:34Z",
    "updated_at": "2017-02-28T16:52:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it be OK to make reworking the `fill_value` validation a separate issue? This seems like a broader issue, as other functions which have their own validation code paths. For example, with `Series.add`:\r\n\r\n    pd.Series([0, 1]).add(pd.Series([np.nan, np.nan]), fill_value='Hello')\r\n\r\nRaises:\r\n\r\n    ValueError: invalid literal for int() with base 10: 'Hello'\r\n\r\nOn:\r\n\r\n    .../series.py in _binop(self, other, func, level, fill_value)\r\n       1639             # one but not both\r\n       1640             mask = this_mask ^ other_mask\r\n    -> 1641             this_vals[this_mask & mask] = fill_value\r\n       1642             other_vals[other_mask & mask] = fill_value\r\n       1643 \r\n\r\nWhereas this implementation results in an upcast to object type:\r\n\r\n     >>> pd.Series([0, 1]).shift(1, fill_value=\"he\")\r\n     0    he\r\n     1     0\r\n     dtype: object\r\n\r\nIt would be good to write up something like a `_maybe_fill` method that would handle this check across all of the APIs that implement a `fill_value` and make this behavior consistent.\r\n\r\nWith this PR, I suggest:\r\n* Raise a `NotImplemented` error for categorical/sparse.\r\n* Write the tests where they are, for now.\r\n* Merge the current working implementation for non-categorical/non-sparse.\r\n* File an issue for consolidating `shift` tests.\r\n* File an issue for a `_maybe_fill` consolidator.\r\n* File an issue for extending `fill_value` to `sparse`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/283099379",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-283099379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 283099379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA5OTM3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T16:59:51Z",
    "updated_at": "2017-02-28T17:00:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario absolutely!\r\n\r\nin general, 1 PR -> 1 'issue'. It makes it easier to reason about / review.\r\n\r\nSo for example I would leave this PR, and do another that does the validation as you suggest. You can then rebase this one on your new one (until it is merged), then rebase on master.\r\n\r\nVery happy with independent (or even dependent PR's as I suggest above), just indicate if that is the case in the top of the PR.\r\n\r\nand certainly filing issues is good as well; for bugs / features even if *you* plan to do them. It keeps things organized."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319519522",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15527#issuecomment-319519522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15527",
    "id": 319519522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTUxOTUyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T22:53:18Z",
    "updated_at": "2017-08-01T22:53:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale but good idea. master has changed a bit since this PR, might be easier now."
  }
]
