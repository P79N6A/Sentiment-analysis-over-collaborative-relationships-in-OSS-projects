[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19087681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19087681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19087681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg3Njgx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T03:54:06Z",
    "updated_at": "2013-06-07T03:54:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Instead of the long traceback, let's be more explicit. Why does `_aggregate_named` in `pandas.core.groupby` check for `ndarray`?  Is there a reason behind it?\n\n``` python\ndef _aggregate_named(self, func, *args, **kwargs):\n    result = {}\n\n    for name, group in self:\n        group.name = name\n        output = func(group, *args, **kwargs)\n        if isinstance(output, np.ndarray):\n            raise Exception('Must produce aggregated value')\n        result[name] = self._try_cast(output, group)\n\n    return result\n```\n\nMy impression is that this happens because the result is unclear / not well-defined. Take the test case that expects an error from `test_groupby.TestGroupBy.test_basic`:\n\n``` python\ndata = Series(np.arange(9) // 3, index=np.arange(9))\ngrouped = data.groupby(lambda x: x // 3)\ngrouped.aggregate(lambda x: x * 3)\n```\n\nShould this return a dataframe with 3 columns? transform the column to an array of `ndarray`? If it should return an `ndarray`, you lose all of the ability to do fast operations on it, since it changes its dtype to `object`, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19096667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19096667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19096667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDk2NjY3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T09:14:17Z",
    "updated_at": "2013-06-07T09:14:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems no less well-defined than passing lists.\n\nAgreed that you lose all the fast operations, but if that's the only reason shouldn't this be left up to the user...?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19105253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19105253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19105253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTA1MjUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T12:58:40Z",
    "updated_at": "2013-06-07T12:58:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "the `ndarray` test is testing whether this is a reduction; you are right it is not needed\n\nIf the function produces a Series, then the result of the groupby operation would be a DataFrame\n\nyou can't do this with an ndarray wbecause it can't align; I agree its sort of a degenerate case,\nprob should just create a Series and thus return a Frame...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19105735",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19105735",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19105735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTA1NzM1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T13:09:23Z",
    "updated_at": "2013-06-07T13:09:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd do you have an example where this would be a better choice than a different setup (Panel, etc.)? SO question user realized that they were going down the wrong path.\n\nHow should we handle this case, where you end up with a DataFrame with arrays in it? Create stacked columns?\n\n``` python\ndata = DataFrame({\"A\": np.arange(9) // 3, \"B\": np.arange(9)}, index=np.arange(9))\ngrouped = data.groupby(lambda x: x.A // 3)\ngrouped.aggregate({\"A\": lambda x: x * 3, \"B\": lambda x: x[0] * 3})\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19108370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19108370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19108370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTA4Mzcw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T13:58:18Z",
    "updated_at": "2013-06-07T13:58:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could we just give a performance warning ? This seems easiest.\n\n_Then we don't need to worry about... lots of things in these weird corner cases._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19108924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19108924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19108924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTA4OTI0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T14:07:34Z",
    "updated_at": "2013-06-07T14:07:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "That makes a lot of sense. I'll write up a PR tonight.\n\nOn Fri, Jun 7, 2013 at 9:58 AM, Andy Hayden notifications@github.comwrote:\n\n> The easiest solution is to just giving a performance warning ?\n> \n> _Then we don't need to worry about... lots of things in these weird\n> corner cases._\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3788#issuecomment-19108370\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19109170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-19109170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 19109170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTA5MTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-07T14:11:44Z",
    "updated_at": "2013-06-07T14:12:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner \n\nfyi...there is a `PerformanceWarning` Warning I defined in io/pytables.py\nwhy don't you move that to core/common.py ?\n(need import then in io/pytables.py and io/tests/test_pytables.py)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24885881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-24885881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 24885881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODg1ODgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T17:05:57Z",
    "updated_at": "2013-09-22T17:05:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "let's revisit in 0.14\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44507455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-44507455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 44507455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTA3NDU1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T08:28:44Z",
    "updated_at": "2014-05-29T08:28:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems to \"just work\" in master. Could add a test case...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224200124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-224200124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 224200124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDIwMDEyNA==",
    "user": {
      "login": "Earthson",
      "id": 1193039,
      "node_id": "MDQ6VXNlcjExOTMwMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1193039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Earthson",
      "html_url": "https://github.com/Earthson",
      "followers_url": "https://api.github.com/users/Earthson/followers",
      "following_url": "https://api.github.com/users/Earthson/following{/other_user}",
      "gists_url": "https://api.github.com/users/Earthson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Earthson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Earthson/subscriptions",
      "organizations_url": "https://api.github.com/users/Earthson/orgs",
      "repos_url": "https://api.github.com/users/Earthson/repos",
      "events_url": "https://api.github.com/users/Earthson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Earthson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T07:19:37Z",
    "updated_at": "2016-06-07T07:19:37Z",
    "author_association": "NONE",
    "body": "Hi, I still have this problem using pandas 0.18.0, when I'm generating a ndarray as a vector.\n\nwhy not allow ndarray as aggregated value?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224261914",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-224261914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 224261914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDI2MTkxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T12:13:33Z",
    "updated_at": "2016-06-07T12:13:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Earthson as indicated if you are trying to return ndarrays then you are using pandas in a non-performant / non-supported way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/260138488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-260138488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 260138488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDEzODQ4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-12T18:09:41Z",
    "updated_at": "2016-11-12T18:09:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "this works in current master. anyone want to add a test?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324213100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3788#issuecomment-324213100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3788",
    "id": 324213100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDIxMzEwMA==",
    "user": {
      "login": "leezu",
      "id": 946903,
      "node_id": "MDQ6VXNlcjk0NjkwMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leezu",
      "html_url": "https://github.com/leezu",
      "followers_url": "https://api.github.com/users/leezu/followers",
      "following_url": "https://api.github.com/users/leezu/following{/other_user}",
      "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leezu/subscriptions",
      "organizations_url": "https://api.github.com/users/leezu/orgs",
      "repos_url": "https://api.github.com/users/leezu/repos",
      "events_url": "https://api.github.com/users/leezu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leezu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T03:46:07Z",
    "updated_at": "2017-08-23T03:46:07Z",
    "author_association": "NONE",
    "body": "This seems only partially fixed. Taking the example from the [test case](https://github.com/pandas-dev/pandas/blob/77c501eede4e88cca5714bfaf695c2bdcf578b3a/pandas/tests/test_groupby.py#L6816) \r\n```\r\n        df = pd.DataFrame([[1, np.array([10, 20, 30])],\r\n                           [1, np.array([40, 50, 60])],\r\n                           [2, np.array([20, 30, 40])]],\r\n                          columns=['category', 'arraydata'])\r\n```\r\n\r\nThe following will work (thats the test case):\r\n`result = df.groupby('category').agg(sum)`\r\n\r\nBut this will fail:\r\n`result = df.groupby('category')[\"arraydata\"].agg(sum)`\r\n\r\n```\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in f(self, **kwargs)\r\n   1153                 except Exception:\r\n   1154                     result = self.aggregate(\r\n-> 1155                         lambda x: npfunc(x, axis=self.axis))\r\n   1156                     if _convert:\r\n   1157                         result = result._convert(datetime=True)\r\n\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in aggregate(self, func_or_funcs, *args, **kwargs)\r\n   2883                 return self._python_agg_general(func_or_funcs, *args, **kwargs)\r\n   2884             except Exception:\r\n-> 2885                 result = self._aggregate_named(func_or_funcs, *args, **kwargs)\r\n   2886 \r\n   2887             index = Index(sorted(result), name=self.grouper.names[0])\r\n\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in _aggregate_named(self, func, *args, **kwargs)\r\n   3015             output = func(group, *args, **kwargs)\r\n   3016             if isinstance(output, (Series, Index, np.ndarray)):\r\n-> 3017                 raise Exception('Must produce aggregated value')\r\n   3018             result[name] = self._try_cast(output, group)\r\n   3019 \r\n\r\nException: Must produce aggregated value\r\n\r\n```\r\n\r\n\r\nOr in a similar case:\r\n```\r\n----> 1 g[\"mean\"].agg(lambda x: np.mean(x))\r\n\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in aggregate(self, func_or_funcs, *args, **kwargs)\r\n   2878 \r\n   2879             if self.grouper.nkeys > 1:\r\n-> 2880                 return self._python_agg_general(func_or_funcs, *args, **kwargs)\r\n   2881 \r\n   2882             try:\r\n\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in _python_agg_general(self, func, *args, **kwargs)\r\n    846         for name, obj in self._iterate_slices():\r\n    847             try:\r\n--> 848                 result, counts = self.grouper.agg_series(obj, f)\r\n    849                 output[name] = self._try_cast(result, obj, numeric_only=True)\r\n    850             except TypeError:\r\n\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in agg_series(self, obj, func)\r\n   2178             return self._aggregate_series_fast(obj, func)\r\n   2179         except Exception:\r\n-> 2180             return self._aggregate_series_pure_python(obj, func)\r\n   2181 \r\n   2182     def _aggregate_series_fast(self, obj, func):\r\n\r\n/home/data/lelausen/.local/lib/python3.6/site-packages/pandas/core/groupby.py in _aggregate_series_pure_python(self, obj, func)\r\n   2213                 if (isinstance(res, (Series, Index, np.ndarray)) or\r\n   2214                         isinstance(res, list)):\r\n-> 2215                     raise ValueError('Function does not reduce')\r\n   2216                 result = np.empty(ngroups, dtype='O')\r\n   2217 \r\n\r\nValueError: Function does not reduce\r\n\r\n```"
  }
]
