[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/190507367",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12495#issuecomment-190507367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12495",
    "id": 190507367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDUwNzM2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T02:45:23Z",
    "updated_at": "2016-03-01T02:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is tricky. Right now we seem to run each column in something like a\n\n``` python\ntry:\n    function(x)\nexcept TypeError:\n    pass\n```\n\nwhile other kinds of exceptions are raised. This isn't great since TypeErrors can be raised for all sorts of reasons. It'd be terribly difficult to debug a problem where a TypeError was raised, but pandas swallowed it. Meanwhile you've gotten back your column of supposedly \"transformed\" values.\n\nAlso I don't think we keep around nuisance columns in aggregations (did this change recently?).\n\n``` python\nIn [33]: df.groupby('a').agg('mean')\nOut[33]:\n   dat  dat2\na\na  3.3  1.95\nc  4.4  3.75\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191315010",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12495#issuecomment-191315010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12495",
    "id": 191315010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTMxNTAxMA==",
    "user": {
      "login": "iamdavehawkins",
      "id": 5113861,
      "node_id": "MDQ6VXNlcjUxMTM4NjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5113861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdavehawkins",
      "html_url": "https://github.com/iamdavehawkins",
      "followers_url": "https://api.github.com/users/iamdavehawkins/followers",
      "following_url": "https://api.github.com/users/iamdavehawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdavehawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdavehawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdavehawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdavehawkins/orgs",
      "repos_url": "https://api.github.com/users/iamdavehawkins/repos",
      "events_url": "https://api.github.com/users/iamdavehawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdavehawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T16:31:09Z",
    "updated_at": "2016-03-02T16:31:09Z",
    "author_association": "NONE",
    "body": "Thanks for the response Tom,\nYeah, dropping nuisance columns in aggregations makes sense to me, but since transform doesn't do a reduce, I'd like to keep a string column around perhaps, since it's what is categorizing my data. (column 'b' in my example)\n\nAlso, when you do a groupby().agg(), if the groupby columns are not in the index, they get added to it. Could groupby().transform() mimic this behavior?\n\n``` python\n>>> df.groupby('a').agg('mean')\n   dat  dat2                   \na                              \na  3.3  1.95                   \nc  4.4  3.75                   \n>>> df.groupby('a').transform(lambda x: x + 1) \n   dat  dat2                                   \n0  5.2   2.3                                   \n1  3.4   3.6                                   \n2  4.5   4.4                                   \n3  6.3   5.1                                   \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191396747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12495#issuecomment-191396747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12495",
    "id": 191396747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTM5Njc0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T19:49:22Z",
    "updated_at": "2016-03-02T19:49:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm curious to see what others say, but in this case I prefer the explicit\n\n``` python\npd.concat([\n    df,\n    df.groupby('a').transform(f).add_suffix('_transformed')\n], axis=1)\n```\n\nIf you were just reading the code\n\n```\ndf.groupby('a').transform(myfunction)\n```\n\nYou would have no way of knowing which columns get the functions applied or not since it depends on whether a TypeError was raised in the function (we should document this by the way, I don't see it in the docstring). At least with the current state of things you can look at the output, and see that `b` is not there, so clearly it hasn't been transformed.\n\nThis would also be an API breaking change, which raises the bar for acceptance. Still curious to hear others' thoughts.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/191540363",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12495#issuecomment-191540363",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12495",
    "id": 191540363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0MDM2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T02:08:25Z",
    "updated_at": "2016-03-03T02:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is correct and @TomAugspurger soln is the right one. By definition a transform returns a same indexed result to the original. The fact that the nuiscance columns are dropped is because they are not transformable.\n\nThis is NOT dropping the original index at all. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412365618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12495#issuecomment-412365618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12495",
    "id": 412365618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjM2NTYxOA==",
    "user": {
      "login": "moderaterider",
      "id": 31630319,
      "node_id": "MDQ6VXNlcjMxNjMwMzE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/31630319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moderaterider",
      "html_url": "https://github.com/moderaterider",
      "followers_url": "https://api.github.com/users/moderaterider/followers",
      "following_url": "https://api.github.com/users/moderaterider/following{/other_user}",
      "gists_url": "https://api.github.com/users/moderaterider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moderaterider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moderaterider/subscriptions",
      "organizations_url": "https://api.github.com/users/moderaterider/orgs",
      "repos_url": "https://api.github.com/users/moderaterider/repos",
      "events_url": "https://api.github.com/users/moderaterider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moderaterider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T19:21:43Z",
    "updated_at": "2018-08-12T19:21:43Z",
    "author_association": "NONE",
    "body": "an easy way around is to keep a list of de_duplicated groupby column and add it later as sequence is preserved"
  }
]
