[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186208813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186208813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186208813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjIwODgxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T13:15:41Z",
    "updated_at": "2016-02-19T13:15:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually this is a bigger API issue that @TomAugspurger and I briefly touched on [here](https://github.com/pydata/pandas/pull/11980)\n\n`.rename` and `.rename_axis`\n`.reindex` and `.reindex_axis`\nare consistent with each other\n\n `.drop` and `.fillna` are also consistent (just not with the others)\n\nSo thoughts on how to proceed here. I'd rather not make add hoc changes, rather try to construct an overall consistent way of doing things; we can certainly provide back-compat, but unifying things is probably a good thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186214047",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186214047",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186214047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjIxNDA0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T13:30:58Z",
    "updated_at": "2016-02-19T13:30:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have a strong preference for one style over the other. The only upshot of the `.rename(index=, columns=)` approach is that you can do both at once instead of `.rename_axis(index).rename_axis(columns, axis=1)`, very minor.\n\nI would slightly favor just recommending and documenting the `_axis` methods (with `labels, axis`) rather than changing any method signatures.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186214865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186214865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186214865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjIxNDg2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T13:35:25Z",
    "updated_at": "2016-02-19T13:35:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "do you think we should add corresponding `.drop_axis` and `.fillna_axis`? or too much clutter\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186276366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186276366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186276366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI3NjM2Ng==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T15:59:42Z",
    "updated_at": "2016-02-19T15:59:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Personally, I have a preference for `columns` and `index` as arguments -- they've always felt more intuitive and pythonic to me. But that's second to the value of harmonization. \n\nJust documenting the `_axis` methods still leaves an uncomfortable inconsistency though, no? We offer a work around, I'd be in favor of fixing `.drop` and `.fillna`. \n\nI'm agnostic on adding `.drop_axis`/`.fillna_axis` methods. \n\nIf we change the `.drop` and `.fillna` methods to take `columns, index`, do we still want to support the `labels, axis` arguments for backwards compatibility or break the api?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186277245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186277245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186277245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI3NzI0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:02:54Z",
    "updated_at": "2016-02-19T16:02:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't you list all of the relevant methods (might be some more that I am forgetting), and make a proposal.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186278015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186278015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186278015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI3ODAxNQ==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:05:43Z",
    "updated_at": "2016-02-19T16:05:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186283894",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186283894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186283894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI4Mzg5NA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:18:18Z",
    "updated_at": "2016-02-19T16:20:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "`drop` and `fillna`: \n- change primary arguments from `labels, axis` to `columns, index`\n- Accept `labels, axis` arguments for backward compatibility, but move to back of argument list \n   (note this will break code by people who passed labels as first positional argument, but ok since will throw and exception\n   if no positional arguments allowed)\n\n`drop_axis` and `fillna_axis`:\n- New method that accepts `labels, axis`\n\nOthers:\n- Could implement for `apply` if we really wanted? I'm dis-inclined, but possible. \n- Could implement for `add()` , `sub()` , `mul()`, `div()`, `radd()`, `rsum()`, etc...\n\nOpen question: \n- How should these work for panels? (I never use panels, so not sure of best practices)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186284899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186284899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186284899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI4NDg5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:21:19Z",
    "updated_at": "2016-02-19T16:21:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "see that's the problem. In reality we should leave everything alone and _maybe_ just change `reindex/rename`. The `labels/axis` idiom is much more common (and to be honest quite a bit more useful). Rarely do you actually change 2 things at once (which violates many pythonic principles). I would rather chain things like:\n\n`.reindex(...., axis='index').reindex(...., axis='columns')`\n\nthough we are actually flexible enough to accept both paradigms.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186286058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186286058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186286058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI4NjA1OA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T16:24:55Z",
    "updated_at": "2016-02-19T17:00:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, I don't really care about the \"two things at once\" -- I just liked the \"columns\" argument for being more meaningful. \n\nSo your preference is:\n\n`reindex/rename`:\n      - change primary arguments to `label / axis`\n      - keep taking `columns` / `index` for backwards compatibility?\n\nThat's fine by me -- like I said, I'm mostly interested in harmonization!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186308548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186308548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186308548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjMwODU0OA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T17:10:34Z",
    "updated_at": "2016-02-19T17:10:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The labels/axis idiom is much more common (and to be honest quite a bit more useful). Rarely do you actually change 2 things at once (which violates many pythonic principles).\n\n+1\n\nAnd, I know people have gone back & forth on this a bit - but I would also 'vote' for:\n- `.rename` being like [xarray](http://xray.readthedocs.org/en/stable/generated/xarray.DataArray.rename.html): renaming axes names only or, where the object has a name (currently `Series`), renaming the object\n- `.relabel` used for reindexing-like operations with a mapping from old to new labels\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186386474",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186386474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186386474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjM4NjQ3NA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T20:16:45Z",
    "updated_at": "2016-02-19T20:16:45Z",
    "author_association": "MEMBER",
    "body": "> The labels/axis idiom is much more common (and to be honest quite a bit more useful). Rarely do you actually change 2 things at once (which violates many pythonic principles).\n\nI agree that changing 2 things at once is not a great API, but I agree with @nickeubank that explicit `columns` and `index` arguments make for more readable code: compare `df.drop(columns='foo')` vs `df.drop('foo', axis='columns')` (or worse, `df.drop('foo', axis=1)`, which is assuredly more common because it's less typing).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186450900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186450900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186450900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQ1MDkwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T23:31:54Z",
    "updated_at": "2016-02-19T23:31:54Z",
    "author_association": "MEMBER",
    "body": "I would like to avoid adding new methods as `drop_axis` (which is actually not a good name IMO, as it sounds you want to drop a full axis, while you want do drop certain items from an axis)\n\nFurther, I think we should make a clear distinction between methods that modify the axis (rename, drop, reindex), and methods that perform operation over a certain axis (`apply`, `add`, ..). Those last ones use the `axis=` idiom to specify the direction of operation, and that is indeed a common idiom. I think the discussion should only be about `rename`, `reindex` and `drop`\n\nI personally also like the explicit `column` and `index` arguments in eg `df.rename(columns=..)` (this reads very natural). So I would not like to see these go (or deprecated).\n\nIt is not really good API design, but I think it is perfectly possible to combine both idioms in one method for all of the discussed functions as kind of a compromise? \nFor example, changes of the current signature could be:\n- `df.reindex(index=None, columns=None, ...)` -> `df.reindex(labels=None, index=None, columns=None, axis=0, ...)`\n- `df.drop(labels, axis=0, ...)` -> `df.drop(labels=None, axis=0, index=None, columns=None, ...)`\n\nWhich would be I think backwards compatible? \nThat would kind of harmonize the api for the different methods, but have the bad design of providing two ways to do something in one function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186451899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186451899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186451899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQ1MTg5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T23:33:57Z",
    "updated_at": "2016-02-19T23:33:57Z",
    "author_association": "MEMBER",
    "body": "> And, I know people have gone back & forth on this a bit - but I would also 'vote' for:\n> -  .rename being like xarray: renaming axes names only or, where the object has a name (currently Series), renaming the object\n> -  .relabel used for reindexing-like operations with a mapping from old to new labels\n\n@MaximilianR Maybe open a separate issue to discuss that? What kind of idiom to use in the signature maybe depends on this, but the question of adding such a method is separate discussion I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186669073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186669073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186669073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2OTA3Mw==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T19:30:17Z",
    "updated_at": "2016-02-20T19:30:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that @jorisvandenbossche's suggestion works perfectly. The real brilliance is that it even works for someone who used positional arguments for rename (i.e. typed `df.rename({0:-99})` instead of `df.rename(index={0:-99})`)!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186714780",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186714780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186714780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjcxNDc4MA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-21T01:16:16Z",
    "updated_at": "2016-02-21T01:16:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I take that back – if somebody uses more than one positional argument (`index` and `columns`) the results will differ.\n\nOn further reflection, I think we only have two choices: break the API, or tack the new arguments on to the end of the argument list so anyone who uses positional arguments is OK.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186789140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186789140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186789140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Njc4OTE0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-21T10:02:18Z",
    "updated_at": "2016-02-21T10:02:18Z",
    "author_association": "MEMBER",
    "body": "> I take that back – if somebody uses more than one positional argument (index and columns) the results will differ.\n\nI think even that should be possible to detect and warn. If the user did originally `df.reindex(index, columns)`, with the new signature `df.reindex(labels=None, index=None, columns=None, axis=0, ...)` those would map to `labels` and `index`, but as you shouldn't use both at the same time, we can detect this case and give an informative message.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/186856188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-186856188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 186856188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Njg1NjE4OA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-21T16:49:29Z",
    "updated_at": "2016-02-21T16:49:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche My impression was that \"backwards compatibility\" / \"not breaking the API\" means that old code still runs fine -- an informative error beats a silent failure, but seems like that's still API-breaking.\n\nAn overview of where I think we stand:\n\n**1. Do nothing**\n\n**2. Backwards Compatible**\n\n`rename(index=None, columns=None, **kwargs)` -> \n      `rename(index=None, columns=None, labels=None, axis=0, **kwargs)` \n      (where `**kwargs` now takes `labels,axis`)\n\n`drop(labels, axis=0, level=None, inplace=False, errors='raise')`-> \n       `drop(labels, axis=0, level=None, inplace=False, errors='raise', index=None, columns=None)`\n\n**Pros:**\n    \\* Backwards compatible\n    \\* Can use both with same named arguments\n\n**Cons:**\n    \\* Cannot use both with same positional argument patterns\n\n**3. Break-API - All options available**\n\n`rename(index=None, columns=None, **kwargs)` -> \n      `rename(labels=None, axis=None, index=None, columns=None, labels=None, axis=0, **kwargs)`\n\n`drop(labels, axis=0, level=None, inplace=False, errors='raise')`-> \n       `drop(labels, axis=None, index=None, columns=None, level=None, inplace=False, errors='raise')`\n\n**Pros:**\n    \\* Backwards compatible for people who use named arguments\n    \\* Allows all forms of interaction\n\n**Cons:**\n    \\* API Breaking\n\n**4. Break-API -- adopt `labels,axis`**\n\n`rename(index=None, columns=None, **kwargs)` -> \n      `rename(labels=None, axis=0, labels=None, axis=0, **kwargs)`\n\n**Pros:**\n    \\* Conforms with syntax of other functions like apply\n    \\* Minimal number of functions broken \n\n**Cons:** \n    \\* `index/axis` less readable than `index/columns`\n\n**5. Break-API -- adopt `columns/index`**\n\n`drop(labels, axis=0, level=None, inplace=False, errors='raise')`-> \n       `drop(index=None, columns=None, level=None, inplace=False, errors='raise')`\n**Pros:** \n    \\* More readable new API\n    \\* Only breaks a few functions\n\n**Cons:** \n    \\* Not consistent with use of `[transformation]/axis` argument structure in other places\n\n**My take:**\n\nI think we should shoot for either 2 (to ensure backwards compatibility) or 4. 2 because I think api breaking for these kind of core functions is bad, and 4 because I'm increasingly won over by @jreback's argument -- while I prefer `index/columns` in general, I think that the `labels/axis` is more consistent with the general pandas library, and I think minimal API breaking is desirable. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187120790",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-187120790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 187120790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzEyMDc5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T10:50:22Z",
    "updated_at": "2016-02-22T10:50:22Z",
    "author_association": "MEMBER",
    "body": "Nice overview!\n\n> @jorisvandenbossche My impression was that \"backwards compatibility\" / \"not breaking the API\" means that old code still runs fine -- an informative error beats a silent failure, but seems like that's still API-breaking.\n\n@nickeubank An informative message does not necessarily need to be an error! It can also be a warning (or we can even decide to just pass it through correctly without warning, although I wouldn't do that). So I am still convinced this can be done in a backwards compatible way (and your options 2 and 3 can be combined).\n\n> \\2. Backwards Compatible \n> ... \n> Cons:\n> - Cannot use both with same positional argument patterns\n\nI don't think this is really a con, as using it with only positional arguments is never a sane thing to do regarding clarity of your code :-) \n\nFurther, I think there is 6th option: use separate methods for the two idioms (like `reindex` / `reindex_axis`)\n\nSo I think we have to choose between:\n\na) combine both idioms within the same methods and live with the bad API design (in a back compat or incompat way -> your options 2 and 3) \nb) choose one of the idioms and deprecate the other (your options 4 and 5) \nc) have separate methods for each idiom\n\nI would personally be in favor of a)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187245891",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-187245891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 187245891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzI0NTg5MQ==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T16:04:46Z",
    "updated_at": "2016-02-22T16:04:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorvisvandenbossche good call about positional argument differences not being a big deal. \n\nI think that makes my 2 (backwards compatible with both sets or arguments) my preference. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187257251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-187257251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 187257251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzI1NzI1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T16:38:42Z",
    "updated_at": "2016-02-22T16:38:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nickeubank can you survey all the methods and see which use each idiom? kind of like a value_counts, most important is prob number per class of idiom. (e.g. make several categories and measure how many methods of each type of idiom we have for both). Just to get an overview of the entire API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187323538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-187323538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 187323538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzMyMzUzOA==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T19:08:52Z",
    "updated_at": "2016-02-22T19:08:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Sure, but will need some time -- busy week!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187337194",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-187337194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 187337194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzMzNzE5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T19:33:27Z",
    "updated_at": "2016-02-22T19:33:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nickeubank np. this issue would be for 0.19.0 in any event.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/193009083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-193009083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 193009083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzAwOTA4Mw==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-06T22:33:22Z",
    "updated_at": "2016-03-08T02:03:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "A DataFrame has ~200 methods. Those that take `columns` as a modifier argument:\n- `pivot`\n- `pivot_table`\n- `reindex`\n- `rename`\n- `sort` (but now depreciated -- `sort_values` uses axis. \n\nAlso note that `columns` is a keyword for the following, but in a somewhat different context:\n- All `to_[format]` calls\n- `from_items`\n- `from_records`\n\n`axis` is in too many to count, but the ones that seem to use as a modifier (as `reindex` uses columns) in alphabetical order:\n- `add`\n- `align`\n- `all`\n- `any`\n- `apply`\n- `compound`\n- `corrwith`\n- `count`\n- `cummax`, `cummin`, etc.\n- `div`, `divide`\n- `diff`\n- `dropna`\n- `eq`\n- `fillna`\n- `floordiv`\n  ... (ok, gonna stop there. You get the idea. It's everywhere)\n\nIn light of that, I would vote for leaving `drop` and company as they are, and adding `labels/axis` named arguments to `rename/reindex` (and `pivot`?). My vote is to put at the end of the argument list for full backwards compatibility, but am open to suggestions. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217730583",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-217730583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 217730583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzczMDU4Mw==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-08T16:20:07Z",
    "updated_at": "2016-05-08T16:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Revisiting this, seems like we came to a consensus on two things then got stuck. \n\n## Consensus:\n- Current state is problematic and harmonization is desirable\n- The norm in pandas is clearly `label/axis`, not `columns/index`. So we should probably move \n  `rename/reindex` to `labels/`axis`.\n\n## No Consensus:\n\nSeems we have three options:\n\n**Option 1: Add `labels/axis` to end of the argument list, leave `columns/index` in place**\n_Pros:_\n- Fully backward compatible\n\n_Cons:_\n- Doesn't quite achieve harmonization\n\n**Option 2: Put `labels/axis` at the front of the argument list, push back `columns/index` but still accept**\n\n_Pros:_\n- Backward compatible for named arguments\n- If users pass only one positional argument, also backwards compatible. In old framework, that would correspond to `index` argument; in new framework, would correspond to `labels` with a default `axis` of 0.\n- If users pass multiple positional arguments (`index` and `columns` in old framework), an exception would be raised since nothing `columns` would accept would constitute a valid `axis` argument, so the failure would not be silent. \n\n_Cons:_\n- Will break old code that used both `columns` and `index`\n\n**Option 3: Replace `columns/index` with `labels/axis`**\n_Pros:_\n- Cleaner\n\n_Cons:_\n- Not backward compatible\n\nPersonally, I like 1 or 2 (though my indifference between the two is partially motivated by the fact I always name my arguments so they're equivalent for me ;))\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217735311",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-217735311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 217735311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzczNTMxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-08T17:35:24Z",
    "updated_at": "2016-05-08T17:35:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "3 is not workable; we cannot just drop back compat.\n\n2 is prob the most realistic.\n\n`pivot` is not relevant here it requires multi-axis names.\n\nneither is `.sort_values` which is fine\n\njust concern: `rename`, `reindex` (need to fix args), and `dropna` (need to move subset to the first arg.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275126553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-275126553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 275126553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTEyNjU1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T14:47:29Z",
    "updated_at": "2017-01-25T14:47:29Z",
    "author_association": "MEMBER",
    "body": "To resurrect this issue: I would like to make a PR for this, but before that summarizing here to be sure there is agreement on the way forward.\r\n\r\nLimiting the discussion to the following methods: `drop`, `reindex`, `rename`\r\n\r\n### Recap\r\n\r\nWe have two different idioms:\r\n\r\n- explicit named axes (used by `reindex` and `rename`):\r\n    ```\r\n    df.reindex(index=..)\r\n    df.reindex(columns=..)\r\n    df.reindex(index=.., columns=...)\r\n    ```\r\n- `labels` + `axis` keyword (used by `drop`, and actually also by `reindex_axis` and `rename_axis`): \r\n    ```\r\n    df.drop(labels, axis='index')\r\n    df.drop(labels, axis='columns')\r\n    ```\r\n\r\nThe goal is to have more consistency between `reindex`/`rename` on the one hand and `drop` on the other. \r\nAs deprecations/changes in behaviour of those core functionalities would have big implications, and I would personally not like to see `rename(columns=..)` be removed, we can look at a compromise to combine both idioms.\r\n\r\n### Proposal: combination of idioms as a compromise\r\n\r\nIt is not really good API design if you would start from fresh, but I think it is perfectly possible to combine both idioms in a backwards compatible way. For example, changes of the current signature could be:\r\n- `df.reindex(index=None, columns=None, ...)` -> `df.reindex(labels=None, index=None, columns=None, axis=0, ...)`\r\n- `df.drop(labels, axis=0, ...)` -> `df.drop(labels=None, axis=0, index=None, columns=None, ...)`\r\n\r\nThat would kind of harmonize the API for the different methods (minus the order of the axis keyword), but have the bad design of providing two ways to do something in one function.\r\n\r\nI *think* this would be backwards compatible:\r\n\r\n- By putting `labels` first, we can support the positional use case: `df.reindex(labels)` would be similar to `df.reindex(index=labels)` because of the default `axis=0`.\r\n- Even when one would use positional arguments for index/column at the same time (`df.reindex(idx_labels, col_labels)` we could detect that both `labels` (with default of `axis=0`) and `index` is passed, and either interpret this silently as index and column labels, or interpret this for now but raise a warning and change it later on to error.\r\n\r\nA first alternative is another way to combine both idioms: just add the extra keywords at end of the respective functions. This makes using the same keywords for all functions possible, only positional arguments will still be handled differently.\r\n\r\n### Alternatives\r\n\r\nApart from the proposal above (option 1. combine both idioms. Con: bad API design), there are some other options:\r\n\r\n2. **Choose one of the idioms**, adapt the appropriate method and deprecate the other idiom. \r\n    - Pro: cleaner end result  \r\n    - Cons: deprecations + not clear which idiom to prefer (labels/axis is more idiomatic, but I don't want to loose convenience and readability of `rename(columns=..)`\r\n    - In practice this would probably mean changing `drop` to the `index=`/`columns=` idiom. Apart from the big incompatible change this would be, this is very similar to the next option.\r\n3. **Have separate methods for each idiom**: \r\n    - we actually already have `rename_axis` and `reindex_axis` for exactly this (for the `axis`-keyword idiom). So we could add a new `drop`-like method with the named axes idiom\r\n    - But, what name to use for this? As the current `drop` should actually be \"drop_axis\", and the existing `drop` should be changed.\r\n    - Is it needed to have two functions for each operation?\r\n4. **Only adapt `drop`**:\r\n    - since there is already `rename_axis` and `reindex_axis`, only adapt `drop` to accept `index=..`, `columns=...` args\r\n    - Pro: it is possible to use `drop` in the same way as `reindex`/`rename` (eg `df.drop(columns=[..]`)\r\n    - Con: no unification of the API between all of `drop`/`reindex`/`rename`\r\n\r\nThis last option 4 (adding `index=..`/`columns=..` to `drop`) could actually already be done now independent of whether we want to combine the idioms for `reindex`/`rename` (option 1), as that would still be compatible with that option.\r\n\r\n**Further question**: if we would unify the idioms in a single function or adapt `drop` to use the other idiom as well, do we still need `reindex_axis` and `rename_axis`?\r\n\r\ncc @pandas-dev/pandas-core "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275176829",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-275176829",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 275176829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTE3NjgyOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T17:37:14Z",
    "updated_at": "2017-01-25T17:37:14Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche Thanks for writing this up! Here's some really quick feedback:\r\n\r\n- I like the look of your combination of idioms. It does seem pretty safe and readable.\r\n- Going forward, it would be interesting to see if we can get rid of an `axis` argument altogether from new functions. It feels like a hold-over from NumPy, that is not so relevant for the pandas data model which mostly has only 1D and 2D data structures (aside from `Panel`, which is going away eventually)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275178589",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-275178589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 275178589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTE3ODU4OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T17:43:07Z",
    "updated_at": "2017-01-25T17:43:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Joris. I also like your main proposal to combine labels, index, columns, and axis."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275203393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-275203393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 275203393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTIwMzM5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T19:12:38Z",
    "updated_at": "2017-01-25T19:12:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, all for harmonization according to the first proposal (same API with full backward compat).\r\n\r\nI would for sure DeprecationWarning if the 'old' signature is passed, but continue to accept new. Like ``.ix`` this should *eventually* be removed, but will need to move from ``DeprecationWarning`` -> ``FutureWarning`` -> removal stages as these are probably litering library code for others."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275234656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12392#issuecomment-275234656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12392",
    "id": 275234656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTIzNDY1Ng==",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T21:13:49Z",
    "updated_at": "2017-01-25T21:13:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche thanks for resurrecting. I'm in favor of combining. "
  }
]
