[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479639038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25972#issuecomment-479639038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25972",
    "id": 479639038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTYzOTAzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T20:06:13Z",
    "updated_at": "2019-04-03T20:07:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Where would pandas intercept things to provide a better error message? Perhaps it could be improved within NumPy itself?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/480211405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25972#issuecomment-480211405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25972",
    "id": 480211405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDIxMTQwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-05T09:32:18Z",
    "updated_at": "2019-04-05T09:32:36Z",
    "author_association": "MEMBER",
    "body": "This is the behaviour of numpy with object dtype. A pure numpy example:\r\n\r\n```\r\nIn [42]: a = np.array([1, 2], dtype=object) \r\n\r\nIn [43]: np.log(a)\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-43-89b6b8e53c58> in <module>\r\n----> 1 np.log(a)\r\n\r\nAttributeError: 'int' object has no attribute 'log'\r\n```\r\n\r\nThis can certainly be more confusing from the pandas side (eg if you are not aware that you have object dtype data), but as @TomAugspurger says, in the end this is a numpy issue. \r\n\r\nAlthough, I suppose if we implement `__array_ufunc__`, we could in principle raise another error for object dtypes (simply saying that it is not supported for this dtype, or something)"
  }
]
