[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137970789",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-137970789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 137970789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzk3MDc4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-05T16:01:24Z",
    "updated_at": "2015-09-05T16:01:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is fine, though actually a better change would be to move this algo to cython (like pearson/spearman) corr already. up for that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138094456",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138094456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138094456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA5NDQ1Ng==",
    "user": {
      "login": "pratapvardhan",
      "id": 3757165,
      "node_id": "MDQ6VXNlcjM3NTcxNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pratapvardhan",
      "html_url": "https://github.com/pratapvardhan",
      "followers_url": "https://api.github.com/users/pratapvardhan/followers",
      "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions",
      "organizations_url": "https://api.github.com/users/pratapvardhan/orgs",
      "repos_url": "https://api.github.com/users/pratapvardhan/repos",
      "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pratapvardhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-06T15:48:26Z",
    "updated_at": "2015-09-06T15:48:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "`scipy.stats.kendalltau` is ~ \"Inspired by the Java implementation part of the it.unimi.dsi.law package (http://law.dsi.unimi.it/)\" \n\n[Fast (O(n log(n)) implementation](https://github.com/scipy/scipy/commit/fdaee9f553522a7e6a39c639ea1105e3bb679a5b) of Kendall's Tau,  recursively uses mergesorts to count exchanges. More discussion over [here](https://github.com/scipy/scipy/issues/1526)\n\n@jreback -- would this be the implementation to be cythonized?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138118194",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138118194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138118194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODExODE5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-06T19:46:37Z",
    "updated_at": "2015-09-06T19:46:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "no need to rewrite the actual tau computation\nthink the loop can be moved to cython then maybe call out to the scipy routines directly (not 100% sure the c-API is callable though)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138363090",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138363090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138363090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM2MzA5MA==",
    "user": {
      "login": "pratapvardhan",
      "id": 3757165,
      "node_id": "MDQ6VXNlcjM3NTcxNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pratapvardhan",
      "html_url": "https://github.com/pratapvardhan",
      "followers_url": "https://api.github.com/users/pratapvardhan/followers",
      "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions",
      "organizations_url": "https://api.github.com/users/pratapvardhan/orgs",
      "repos_url": "https://api.github.com/users/pratapvardhan/repos",
      "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pratapvardhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T19:27:09Z",
    "updated_at": "2015-09-07T19:27:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "This implementation doesn't give much gains. In fact, there isn't much cythonized code here, expect for type declarations.\n\n``` python\nimport numpy as np\ncimport numpy as np\n\nfrom scipy.stats import kendalltau\n\n#-------------------------------------------------------------------\n# Pairwise tau\n\n@cython.boundscheck(False)\n@cython.wraparound(False)\ndef tau(ndarray[float64_t, ndim=2] mat, minp=None):\n    cdef:\n        Py_ssize_t xi, yi, N, K\n        ndarray[float64_t, ndim=2] result\n        ndarray[float64_t, ndim=1] ac, bc\n        ndarray[uint8_t, ndim=2] mask\n        float64_t c\n\n    N, K = (<object> mat).shape\n\n    if minp is None:\n        minp = 1\n\n    mat = mat.T\n    result = np.empty((K, K), dtype=np.float64)\n    mask = np.isfinite(mat).view(np.uint8)\n    mask.dtype = bool\n\n    for xi in range(K):\n        ac = mat[xi]\n        for yi in range(xi + 1):\n            bc = mat[yi]\n            valid = mask[xi] & mask[yi]\n            if valid.sum() < minp:\n                c = np.NaN\n            elif not valid.all():\n                c = kendalltau(ac[valid], bc[valid])[0]\n            else:\n                c = kendalltau(ac, bc)[0]\n\n            result[xi, yi] = result[yi, xi] = c\n\n    return result\n```\n\nMissing something here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138373064",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138373064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138373064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM3MzA2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T20:31:46Z",
    "updated_at": "2015-09-07T20:31:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "so the time is all taken by calling the `kendalltau` function, right? so that would need to be a cython-level call then to make this benefit (IIRC the implementation of this in scipy is in cython)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138374929",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138374929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138374929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM3NDkyOQ==",
    "user": {
      "login": "pratapvardhan",
      "id": 3757165,
      "node_id": "MDQ6VXNlcjM3NTcxNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pratapvardhan",
      "html_url": "https://github.com/pratapvardhan",
      "followers_url": "https://api.github.com/users/pratapvardhan/followers",
      "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions",
      "organizations_url": "https://api.github.com/users/pratapvardhan/orgs",
      "repos_url": "https://api.github.com/users/pratapvardhan/repos",
      "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pratapvardhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T20:40:59Z",
    "updated_at": "2015-09-07T20:40:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I see here, [scipy.stats.kendalltau](https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py#L3402) implementation is not yet in cython, CMIIW.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138375522",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138375522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138375522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM3NTUyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T20:43:58Z",
    "updated_at": "2015-09-07T20:43:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "ugh. can you profile this and see where the time is spent? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138427173",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138427173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138427173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQyNzE3Mw==",
    "user": {
      "login": "pratapvardhan",
      "id": 3757165,
      "node_id": "MDQ6VXNlcjM3NTcxNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pratapvardhan",
      "html_url": "https://github.com/pratapvardhan",
      "followers_url": "https://api.github.com/users/pratapvardhan/followers",
      "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions",
      "organizations_url": "https://api.github.com/users/pratapvardhan/orgs",
      "repos_url": "https://api.github.com/users/pratapvardhan/repos",
      "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pratapvardhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-08T04:31:40Z",
    "updated_at": "2015-09-08T04:33:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "``` python\nIn [8]: df = pd.DataFrame(np.random.rand(10000, 10))\n\nIn [9]: %prun -l 4 slow.ftau(df)\n         650311 function calls (971 primitive calls) in 16.933 seconds\n\n   Ordered by: internal time\n   List reduced from 73 to 4 due to restriction <4>\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n649385/55   15.475    0.000   15.475    0.281 stats.py:2858(mergesort)\n       55    1.340    0.024   16.928    0.308 stats.py:2792(kendalltau)\n       55    0.098    0.002    0.098    0.002 {numpy.core.multiarray.lexsort}\n       55    0.007    0.000    0.007    0.000 {range}\n```\n\nscipy.stats.kendalltau internally uses custom mergesort function, this seems to be taking up time?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/138522256",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-138522256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 138522256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODUyMjI1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-08T11:22:15Z",
    "updated_at": "2015-09-08T11:22:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "so here's the question. since we are doing many repeated calls, with only slightly different inputs, is their a way to do this operation that sorts much less?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149019275",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11000#issuecomment-149019275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11000",
    "id": 149019275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTAxOTI3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-18T14:04:11Z",
    "updated_at": "2015-10-18T14:04:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing, pls reopen if you can fix according to comments\n"
  }
]
