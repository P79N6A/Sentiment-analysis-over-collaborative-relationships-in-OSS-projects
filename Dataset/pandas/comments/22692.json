[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421025098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-421025098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 421025098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAyNTA5OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T14:22:17Z",
    "updated_at": "2018-09-13T14:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought we had issues for these, but couldn't find any on a quick search.\r\n\r\nBroadly agreed with you, just need to make the changes backwards compatible."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421070736",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-421070736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 421070736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA3MDczNg==",
    "user": {
      "login": "norok2",
      "id": 4312650,
      "node_id": "MDQ6VXNlcjQzMTI2NTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4312650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/norok2",
      "html_url": "https://github.com/norok2",
      "followers_url": "https://api.github.com/users/norok2/followers",
      "following_url": "https://api.github.com/users/norok2/following{/other_user}",
      "gists_url": "https://api.github.com/users/norok2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/norok2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/norok2/subscriptions",
      "organizations_url": "https://api.github.com/users/norok2/orgs",
      "repos_url": "https://api.github.com/users/norok2/repos",
      "events_url": "https://api.github.com/users/norok2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/norok2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T16:35:02Z",
    "updated_at": "2018-09-13T16:35:02Z",
    "author_association": "NONE",
    "body": "Perhaps, you saw this: https://stackoverflow.com/questions/51460112/pandas-dataframe-to-html-without-table-border-and-tr-style\r\n\r\nAnyway, I could probably work out on a patch. Should not be terribly difficult. Just let me know what is supposed to be there. I see that right now, the default behavior of `pandas` for quite a few things is to have the value to default to `None` and then guess some sensible behavior for this.\r\n\r\nSo, what's your policy for making this a backward compatible change? I can read some docs, if you have a link lying around."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421072916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-421072916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 421072916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA3MjkxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T16:42:12Z",
    "updated_at": "2018-09-13T16:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Contributing docs are at http://pandas-docs.github.io/pandas-docs-travis/contributing.html\r\n\r\nFor the auto-dataframe class, we'll need a new keyword like `dataframe_class=True` by default, which can be set to False to not include `dataframe` in the classes list (and maybe we'll want False to be the future default)\r\n\r\nFor the `text-align` issue, not sure... Maybe `tr_style=\"text-align: right;\"` as the default? And if that's falsey, then we don't include a `style`? Not sure how hard that would be to implement."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421076697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-421076697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 421076697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA3NjY5Nw==",
    "user": {
      "login": "norok2",
      "id": 4312650,
      "node_id": "MDQ6VXNlcjQzMTI2NTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4312650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/norok2",
      "html_url": "https://github.com/norok2",
      "followers_url": "https://api.github.com/users/norok2/followers",
      "following_url": "https://api.github.com/users/norok2/following{/other_user}",
      "gists_url": "https://api.github.com/users/norok2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/norok2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/norok2/subscriptions",
      "organizations_url": "https://api.github.com/users/norok2/orgs",
      "repos_url": "https://api.github.com/users/norok2/repos",
      "events_url": "https://api.github.com/users/norok2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/norok2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T16:54:28Z",
    "updated_at": "2018-09-13T16:54:28Z",
    "author_association": "NONE",
    "body": "I don't think a new keyword is really needed, as long as the old one defaults to something transparent. And then the user may decided what to have with it. As far as the `text-align` issue, I would see some value in having a `tr_style=...` keyword.\r\n\r\nThe problem is definitely how to make sure not to break current code. In other projects I saw that issuing a warning in-between version was their way to go, so perhaps we could have a two-step where at first explicit `None` would just issue a warning, and the default values are set to mimic the current behavior, and then for the next version, `None` would do the right thing, and the default changes to whatever you think is the right default for this.\r\n\r\nIf `to_html` is in standard Python (e.g. not Cython / `ufunc`), these changes should be trivial."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421077873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-421077873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 421077873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA3Nzg3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T16:58:15Z",
    "updated_at": "2018-09-13T16:58:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think a new keyword is really needed, as long as the old one defaults to something transparent. \r\n\r\nBy old one, you mean `classes`? I'm just not sure how we would preserve `classes=['my_class']` returning the current default of `classes=['dataframe', 'my_class']` without a second keyword. I may be missing something though.\r\n\r\n> The problem is definitely how to make sure not to break current code.\r\n\r\nto be clear: there are two discussions to be had.\r\n\r\n1. How to produce a clean HTML table without all the junk pandas adds :)\r\n2. Changing the defaults to be clean\r\n\r\nFor now, I'd be happy to see 1 fixed. I'm less  sure about changing the defaults."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421302223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-421302223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 421302223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTMwMjIyMw==",
    "user": {
      "login": "norok2",
      "id": 4312650,
      "node_id": "MDQ6VXNlcjQzMTI2NTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4312650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/norok2",
      "html_url": "https://github.com/norok2",
      "followers_url": "https://api.github.com/users/norok2/followers",
      "following_url": "https://api.github.com/users/norok2/following{/other_user}",
      "gists_url": "https://api.github.com/users/norok2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/norok2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/norok2/subscriptions",
      "organizations_url": "https://api.github.com/users/norok2/orgs",
      "repos_url": "https://api.github.com/users/norok2/repos",
      "events_url": "https://api.github.com/users/norok2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/norok2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T09:58:47Z",
    "updated_at": "2018-09-14T09:58:47Z",
    "author_association": "NONE",
    "body": "> By old one, you mean `classes`? I'm just not sure how we would preserve `classes=['my_class']` returning the current default of `classes=['dataframe', 'my_class']` without a second keyword. I may be missing something though.\r\n\r\nI am realizing that `None` is used very often as a proxy for *internal* `get_option()`, and this somehow interferes with\r\n>     2. Changing the defaults to be clean\r\n\r\n\r\nThen perhaps a good path towards \r\n>     1. How to produce a clean HTML table without all the junk pandas adds :)\r\ncould be:\r\n\r\n```python\r\ndf.to_html(classes='', border='', justify='unset')\r\n```\r\n\r\nThere are a few *BUT* though:\r\n- the keyword `classes` is currently not managed by a `get_option()` call and the `dataframe` class is hardcoded (should this be a separate PR?)\r\n- the solution is not too consistent, but apparently `unset` is already accepted by `pandas` AND it appears to be unused by CSS's `text-align`, e.g. https://jigsaw.w3.org/css-validator/validator would silently convert it to `initial`. Adding a new accepted value for `justify` would require some control over the other conversions that use `DataFrameFormatter()` class.\r\n\r\nAlso, I am not quite sure how to document this behavior, but the code and the tests should be more or less ready. I can prepare a PR anytime."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422958266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22692#issuecomment-422958266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22692",
    "id": 422958266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk1ODI2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T21:05:31Z",
    "updated_at": "2018-09-19T21:05:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would favor `df.to_html(classes=False, border=False)` rather than empty strings, as in many places pandas allows `keyword=string` as a shorthand for `keyword=[string]` when a list of strings is really expected. But I like your general idea.\r\n\r\n>  classes is currently not managed by a get_option() call and the dataframe class is hardcoded (should this be a separate PR?)\r\n\r\nYes probably.\r\n\r\nI'm not really familiar with the justification code.\r\n"
  }
]
