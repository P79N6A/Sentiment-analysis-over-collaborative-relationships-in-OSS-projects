[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122649728",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10617#issuecomment-122649728",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10617",
    "id": 122649728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjY0OTcyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-19T11:08:24Z",
    "updated_at": "2015-07-19T11:08:24Z",
    "author_association": "MEMBER",
    "body": "@adamgreenhall Thanks for the contribution! \nCan you provide a bit more context? (I never used the ORM part of SQLAlchemy, only the Core part) But as a `Session` has a `begin` method and `execute` method, I suppose `read_sql` would just work regardless you provide it a Session or connection? (as the support for connections was just added in #10105, which should already allow temporary tables when using a Connection)\n\nWhy does it need sqlalchemy 1.0.0 ?\n\nThe reason your tests fail, is because it seems to run the tests with the fallback mode (although you put it in the correct test class). But this seems to indicate that it does not recognizes it as an sqlalchemy engine/connection/session, and therefore tries to use it as a DBAPI connection in fallback mode (hence the error 'has no attribute 'cursor'')\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122746051",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10617#issuecomment-122746051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10617",
    "id": 122746051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjc0NjA1MQ==",
    "user": {
      "login": "adamgreenhall",
      "id": 704919,
      "node_id": "MDQ6VXNlcjcwNDkxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/704919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgreenhall",
      "html_url": "https://github.com/adamgreenhall",
      "followers_url": "https://api.github.com/users/adamgreenhall/followers",
      "following_url": "https://api.github.com/users/adamgreenhall/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgreenhall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgreenhall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgreenhall/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgreenhall/orgs",
      "repos_url": "https://api.github.com/users/adamgreenhall/repos",
      "events_url": "https://api.github.com/users/adamgreenhall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgreenhall/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-20T03:21:57Z",
    "updated_at": "2015-07-20T03:25:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche - #10105 does the trick with `sqlalchemy.engine.Connectable`. I didn't check the docs on master before adding this - learned my lesson for next time. Thanks!\n\nps. Not sure what the sqlalchemy recommended way to handle transactions is now - I think sessions got added in 1.0 - that was just the first thing I found in the docs, but the `with engine.begin():` code seems simpler.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122768590",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10617#issuecomment-122768590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10617",
    "id": 122768590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjc2ODU5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-20T05:37:35Z",
    "updated_at": "2015-07-20T05:37:35Z",
    "author_association": "MEMBER",
    "body": "But\n\n```\nIn [46]: isinstance(session, sqlalchemy.engine.Connectable)\nOut[46]: False\n```\n\nso the current code is not going to work for a Session. \n(I never used Sessions, but I can imagine that support for it would be useful for people using it)\n"
  }
]
