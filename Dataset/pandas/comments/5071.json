[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31890884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-31890884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 31890884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkwODg0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-09T00:15:46Z",
    "updated_at": "2014-01-09T00:15:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1\n\nI was just trying to do similar. Would be nice if rolling_apply, expanding_apply had an option to work over the whole DataFrame. It doesn't even have to pass frames, but rather just roll over the whole 0 axis instead of one series at a time.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31893063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-31893063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 31893063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkzMDYz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-09T00:55:14Z",
    "updated_at": "2014-01-09T00:56:04Z",
    "author_association": "NONE",
    "body": "That sounds equivalent to the split-apply(-combine) approach of groupby, only pandas doesn't\ncurrently provide that sort of split function.\n\nrelated #4059\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114063337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-114063337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 114063337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDA2MzMzNw==",
    "user": {
      "login": "twiecki",
      "id": 674200,
      "node_id": "MDQ6VXNlcjY3NDIwMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/twiecki",
      "html_url": "https://github.com/twiecki",
      "followers_url": "https://api.github.com/users/twiecki/followers",
      "following_url": "https://api.github.com/users/twiecki/following{/other_user}",
      "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions",
      "organizations_url": "https://api.github.com/users/twiecki/orgs",
      "repos_url": "https://api.github.com/users/twiecki/repos",
      "events_url": "https://api.github.com/users/twiecki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/twiecki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-22T10:45:16Z",
    "updated_at": "2015-06-22T10:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just ran into the same issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/116122998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-116122998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 116122998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjEyMjk5OA==",
    "user": {
      "login": "flashhack",
      "id": 7968826,
      "node_id": "MDQ6VXNlcjc5Njg4MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7968826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flashhack",
      "html_url": "https://github.com/flashhack",
      "followers_url": "https://api.github.com/users/flashhack/followers",
      "following_url": "https://api.github.com/users/flashhack/following{/other_user}",
      "gists_url": "https://api.github.com/users/flashhack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flashhack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flashhack/subscriptions",
      "organizations_url": "https://api.github.com/users/flashhack/orgs",
      "repos_url": "https://api.github.com/users/flashhack/repos",
      "events_url": "https://api.github.com/users/flashhack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flashhack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-27T19:50:00Z",
    "updated_at": "2015-06-27T20:08:52Z",
    "author_association": "NONE",
    "body": "same issue here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/213189832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-213189832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 213189832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE4OTgzMg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T01:08:25Z",
    "updated_at": "2016-04-22T01:08:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback What's the best way to do this?\n\nIf I try and change the `_apply` method on `_Rolling` to take pandas objects rather than numpy arrays, a few of the standard functions fail (e.g. `_zsqrt`):\n\n``` python\n...\nreturn _zsqrt(algos.roll_var(arg, window, minp, ddof))\nTypeError: Argument 'input' has incorrect type (expected numpy.ndarray, got Series)\n```\n\nCould this be done in `roll_generic`? Or with an additional path other that the standard `_apply` for user-supplied functions? Neither seem that compelling\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/213198506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-213198506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 213198506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE5ODUwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T01:23:19Z",
    "updated_at": "2016-04-22T01:23:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "So just to have an example\n\n```\nIn [32]: df = DataFrame({'A' : np.random.randn(5), 'B' : np.random.randint(0,10,size=5)})\n\nIn [33]: def f(x):\n    print type(x)\n    return x.sum()\n   ....: \n\nIn [34]: df.rolling(2).apply(f)\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\n<type 'numpy.ndarray'>\nOut[34]: \n          A     B\n0       NaN   NaN\n1 -0.414646  15.0\n2  1.007150   8.0\n3  1.822979   2.0\n4  0.884894   4.0\n```\n\nThe issue is that you need to pass a constructed object to `algos.roll_generic` (or maybe a new function) which does the windowing.\n\n[here](https://github.com/pydata/pandas/blob/master/pandas/core/window.py#L544)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/213207323",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-213207323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 213207323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzIwNzMyMw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T01:48:04Z",
    "updated_at": "2016-04-22T01:48:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this do-able with `roll_generic`? It seems that requires an array:\n\n``` python\nIn [28]: series=pd.Series(range(10),dtype='float64')\n\nIn [29]: roll_generic(series, win=2, minp=2, offset=0, func=lambda x: x.sum(), args=[], kwargs={})\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-29-3ec0f9465dad> in <module>()\n----> 1 roll_generic(series, win=2, minp=2, offset=0, func=lambda x: x.sum(), args=[], kwargs={})\n\nTypeError: Argument 'input' has incorrect type (expected numpy.ndarray, got Series)\n```\n\nDoes that mean we need a parallel function which operates on `Series`?\n\nI could imagine having a function that generated the groups - then it would actually be a groupby. But haven't thought through it enough and performance may be an issue. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/213208730",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-213208730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 213208730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzIwODczMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T01:57:57Z",
    "updated_at": "2016-04-22T01:57:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "no u have to change roll_generic to take an object\n\ndoing with GroupBy is a whole separate idea - I may do that but it's orthogonal (and the reason is different than this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/213209936",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-213209936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 213209936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzIwOTkzNg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T02:07:43Z",
    "updated_at": "2016-04-22T02:07:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I haven't worked with Cython before, and not sure how it handles non-numpy arrays, but I can have a go. Probably won't have immediate results.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237992438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5071#issuecomment-237992438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5071",
    "id": 237992438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk5MjQzOA==",
    "user": {
      "login": "citynorman",
      "id": 4677339,
      "node_id": "MDQ6VXNlcjQ2NzczMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4677339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/citynorman",
      "html_url": "https://github.com/citynorman",
      "followers_url": "https://api.github.com/users/citynorman/followers",
      "following_url": "https://api.github.com/users/citynorman/following{/other_user}",
      "gists_url": "https://api.github.com/users/citynorman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/citynorman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/citynorman/subscriptions",
      "organizations_url": "https://api.github.com/users/citynorman/orgs",
      "repos_url": "https://api.github.com/users/citynorman/repos",
      "events_url": "https://api.github.com/users/citynorman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/citynorman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T00:02:39Z",
    "updated_at": "2016-08-06T00:02:39Z",
    "author_association": "NONE",
    "body": "Almost 3 years and it's still an issue :'(\n`\n\n```\nimport pandas as pd\nimport numpy as np\n\ndef distance_sum(df):\n    print df\n    df['norm1']=df.ix[:,0]/df.ix[0,0]\n    df['norm2']=df.ix[:,1]/df.ix[0,1]\n    return np.sum(np.square(df['norm1']-df['norm2']))\n\ndf=pd.DataFrame({'a':np.array([1,2,3]),'b':np.array([10,20,30])})\ndf.rolling(center=False,window=2).apply(distance_sum)\n```\n\n## `\n\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-a0fbd148c066> in <module>()\n      9 \n     10 df=pd.DataFrame({'a':np.array([1,2,3]),'b':np.array([10,20,30])})\n---> 11 df.rolling(center=False,window=2).apply(distance_sum)\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/generic.pyc in **getattr**(self, name)\n   2358                 return self[name]\n   2359             raise AttributeError(\"'%s' object has no attribute '%s'\" %\n-> 2360                                  (type(self).**name**, name))\n   2361 \n   2362     def **setattr**(self, name, value):\n\nAttributeError: 'DataFrame' object has no attribute 'rolling'\n\nOR\n\n---\n\nAttributeError                            Traceback (most recent call last)\n<ipython-input-246-fc1cf1749b17> in <module>()\n     14 \n     15 t=pd.DataFrame({'a':a,'b':b})\n---> 16 t.rolling(center=False,window=2).apply(test_distance_sum)\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/window.pyc in apply(self, func, args, kwargs)\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/window.pyc in apply(self, func, args, kwargs)\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/window.pyc in _apply(self, func, name, window, center, check_minp, how, **kwargs)\n\n/usr/local/lib/python2.7/dist-packages/numpy/lib/shape_base.pyc in apply_along_axis(func1d, axis, arr, _args, *_kwargs)\n     89     outshape = asarray(arr.shape).take(indlist)\n     90     i.put(indlist, ind)\n---> 91     res = func1d(arr[tuple(i.tolist())], _args, *_kwargs)\n     92     #  if res is a number, then we have a smaller output array\n     93     if isscalar(res):\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/window.pyc in calc(x)\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/window.pyc in f(arg, window, min_periods)\n\npandas/algos.pyx in pandas.algos.roll_generic (pandas/algos.c:51577)()\n\n<ipython-input-246-fc1cf1749b17> in test_distance_sum(df)\n      9 def test_distance_sum(df):\n     10     print df\n---> 11     df['pxnorm1']=df.ix[:,0]/df.ix[0,0]\n     12     df['pxnorm2']=df.ix[:,1]/df.ix[0,1]\n     13     return np.mean(df)#np.sum(np.square(df['pxnorm1']-df['pxnorm2']))\n\nAttributeError: 'numpy.ndarray' object has no attribute 'ix'\n"
  }
]
