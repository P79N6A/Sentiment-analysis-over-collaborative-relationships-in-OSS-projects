[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/166833974",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11885#issuecomment-166833974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11885",
    "id": 166833974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjgzMzk3NA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T08:39:00Z",
    "updated_at": "2015-12-23T08:39:00Z",
    "author_association": "MEMBER",
    "body": "I think it would make sense to ignore non-numerical columns.\n\nWhat about time columns? Didn't we add support for round with times recently, or is that still in the works?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/166906300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11885#issuecomment-166906300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11885",
    "id": 166906300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjkwNjMwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T14:20:12Z",
    "updated_at": "2015-12-23T14:20:12Z",
    "author_association": "MEMBER",
    "body": "There is indeed new support for rounding datetime64 series, but the problem is that this goes through the accessor method `.dt.round()` and not `.round()`. So it is not really obvious how to integrate that.\n\n```\nIn [1]: df = pd.DataFrame({'floats':[0.123, 0.156, 5.687], 'dates':pd.date_range('2012-01-01', periods=3)})\n\nIn [3]: df.round(2)\nTypeError: ufunc multiply cannot use operands with types dtype('<M8[ns]') and dtype('float64')\n\nIn [4]: df['dates'].round()\nTypeError: ufunc 'rint' not supported for the input types, and the inputs could\nnot be safely coerced to any supported types according to the casting rule ''safe''\n```\n\nThat's a bit in general a problem with specific dtypes that have specialized versions of standard methods requiring other keywords. \nBecause we could also give access to datetime rounding through `Series.round()` instead of `Series.dt.round()`?\n\nIn any case, that is maybe another discussion, so for now I would say to also ignore datetime and period columns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/166950767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11885#issuecomment-166950767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11885",
    "id": 166950767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk1MDc2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T17:31:18Z",
    "updated_at": "2015-12-23T17:32:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.round` should only apply to `float/int` columns normally. I would simply skip all others (but include them in the return). I think we could pass thru the `freq` kw to `DataFrame.round` to handle datetimelike rounding.\n\nfurther `Series.round` _could_ defer to `.dt.` for `.round` behavior of datetimelikes (and with the `freq` arg non-optional in that case). we can make that another issue I think.\n"
  }
]
