[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11069695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-11069695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 11069695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDY5Njk1",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T01:36:31Z",
    "updated_at": "2012-12-06T01:36:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Something like `Series/DataFrame.sample(ntrials, shape=None, axis=0, replace=True, iterator=False)`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11138025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-11138025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 11138025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTM4MDI1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T17:14:47Z",
    "updated_at": "2012-12-07T17:14:47Z",
    "author_association": "MEMBER",
    "body": "Or even just `.sample(size, replace=True/False)` would be fine. @rkern had a reservoir sampling impl floating around (for efficient sampling w/o replacement), maybe only on the mailing list\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11138533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-11138533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 11138533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTM4NTMz",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T17:27:59Z",
    "updated_at": "2012-12-07T17:27:59Z",
    "author_association": "MEMBER",
    "body": "This doesn't need to get done for 0.10\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70773207",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-70773207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 70773207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzczMjA3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T02:15:01Z",
    "updated_at": "2015-01-21T02:15:01Z",
    "author_association": "MEMBER",
    "body": "I would like to propose that we should copy the API from dplyr for this method: namely, we should have two methods, `sample_n` and `sample_frac`. These methods are especially nice when coupled with groupby.\n\nCC @hayd\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70834371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-70834371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 70834371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODM0Mzcx",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T13:15:21Z",
    "updated_at": "2015-01-21T13:15:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Steal all the dplyr!\n\nTo keep the number of new methods low, would you favor a single method `df.sample(sample_size)` where the behavior is like `sample_frac` if `sample_size` is between (0, 1), and like `sample_n` if it's a positive integer? There's precendce for this in scikit-learn's [train_test_split](http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.train_test_split.html):\n\n> `test_size`: If float, should be between 0.0 and 1.0 and represent the proportion of the dataset to include in the test split. If int, represents the absolute number of test samples...\n\nAnd we can have a `with_replacement` keyword argument as well. `np.random.choice` has a default of `replace=True`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70902966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-70902966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 70902966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTAyOTY2",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T19:20:49Z",
    "updated_at": "2015-01-21T19:20:49Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger Hmm. I've used `train_test_split`, but don't like the degeneracy of `size = 1`. I think Hadley Wickham has the right idea in dplyr with \"each function does only one thing, but does it well.\" So I would prefer for two methods with the same prefix. In my opinion, similarly named methods do not cause much more cognitive load than a single method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70904128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-70904128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 70904128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTA0MTI4",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-21T19:26:57Z",
    "updated_at": "2015-01-21T19:26:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good enough for me.\n\nOn Wed, Jan 21, 2015 at 1:20 PM, Stephan Hoyer notifications@github.com\nwrote:\n\n> @TomAugspurger https://github.com/TomAugspurger Hmm. I've used\n> train_test_split, but don't like the degeneracy of size = 1. I think\n> Hadley Wickham has the right idea in dplyr with \"each function does only\n> one thing, but does it well.\" So I would prefer for two methods with the\n> same prefix. In my opinion, similarly named methods do not cause much more\n> cognitive load than a single method.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/2419#issuecomment-70902966.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71560102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-71560102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 71560102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTYwMTAy",
    "user": {
      "login": "stared",
      "id": 1001610,
      "node_id": "MDQ6VXNlcjEwMDE2MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1001610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stared",
      "html_url": "https://github.com/stared",
      "followers_url": "https://api.github.com/users/stared/followers",
      "following_url": "https://api.github.com/users/stared/following{/other_user}",
      "gists_url": "https://api.github.com/users/stared/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stared/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stared/subscriptions",
      "organizations_url": "https://api.github.com/users/stared/orgs",
      "repos_url": "https://api.github.com/users/stared/repos",
      "events_url": "https://api.github.com/users/stared/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stared/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-26T23:23:31Z",
    "updated_at": "2015-01-26T23:23:31Z",
    "author_association": "NONE",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76630134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-76630134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 76630134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMwMTM0",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T20:55:58Z",
    "updated_at": "2015-03-01T20:55:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd be happy to take a look at this in a about a week (after a presentation). \n\nHow would people feel about an implementation built around a numpy sampling of the index, followed by a .loc[] call, similar (though with the suggested `df.sample_size()` and `.sample_frac()` formatting suggested above)? \n\n```\ndef rand_rows(df, num_rows = 5):\n    from numpy import random as rm\n    subset = rm.choice(df.index.values, size = num_rows)    \n    return df.loc[subset]\n\na_data_frame = pd.DataFrame({'col1':range(10,20), 'col2':range(20,30)})\nrand_rows(a_data_frame)\nrand_rows(a_data_frame, 6)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76630434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-76630434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 76630434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMwNDM0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:01:58Z",
    "updated_at": "2015-03-01T21:01:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds fine. You'll also want to accept a `seed` parameter.\n\nThe only wrinkle is how to handle duplicates in the index. If you use `.loc` you could potentially more that `num_rows` if a duplicated index_label is selected. I think you should use `.iloc` and make everything position based.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76631035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-76631035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 76631035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMxMDM1",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:12:50Z",
    "updated_at": "2015-03-01T21:12:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds great -- I'll get to it next week!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76631169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-76631169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 76631169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMxMTY5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:14:56Z",
    "updated_at": "2015-03-01T21:15:28Z",
    "author_association": "MEMBER",
    "body": "@nickeubank glad you're excited about this! It would be great if you could get this finished :).\n\nHere are the rough versions (mostly untested) that I wrote a few weeks ago:\n\n``` python\ndef sample_n(df, n, replace=False, weight=None, seed=None):\n    \"\"\"Sample n rows from a DataFrame at random\n    \"\"\"\n    rs = np.random.RandomState(seed)\n    locs = rs.choice(df.shape[0], size=n, replace=replace, p=weight)\n    return df.take(locs, axis=0)\n\ndef sample_frac(df, frac, replace=False, weight=None, seed=None):\n    \"\"\"Sample some fraction of a DataFrame at random\n    \"\"\"\n    n = int(round(frac * df.shape[0]))\n    return sample_n(df, n, replace=replace, weight=weight, seed=seed)\n```\n\nI think these get a couple of things right:\n1. Accepts a random numbers seed, which is essential for reproducibility.\n2. Samples integers and does position based indexing. This lets us side-step the complexity of `.loc` and location based indexing.\n3. Uses `.take`, which is actually usually considerably faster than indexing with `.iloc`.\n4. API borrowed from [dplyr](http://rpackages.ianhowson.com/cran/dplyr/man/sample.html)\n\nWhat this needs:\n1. Tests!\n2. Documentation!\n3. Probably should accept a string for the `weight` argument, which would map to a DataFrame column.\n\nAlso, it would be _really_ nice for these methods to work with grouped operations, so you could write something like `df.groupby('category').sample_n(100)` -> get 100 samples from each category.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76632087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-76632087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 76632087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMyMDg3",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:31:47Z",
    "updated_at": "2015-03-01T21:31:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer Great! looks like this is in great shape. I'll start by building some tests and look into a weight implementation and get back to you, then we can pivot to the groupby once that's done. \n\nDo you have an existing fork I should work on?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76632500",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-76632500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 76632500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMyNTAw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T21:39:22Z",
    "updated_at": "2015-03-01T21:39:22Z",
    "author_association": "MEMBER",
    "body": "@nickeubank Nope, feel free to start from scratch. I needed `sample_n` for a notebook, but didn't have time to clean it up for a PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78581060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-78581060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 78581060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTgxMDYw",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T19:25:34Z",
    "updated_at": "2015-03-12T19:25:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quick poll: I'm inclined to call the function \"rand()\" and accept both \"size\" and \"size_type = {number, frac}\" to accommodate both request for an exact number of rows and a fraction of rows. \n\nMy personal interest in this is mostly for being able to quickly query a random set of rows to examine my data frame, so having \"df.rand()\" return 5 random rows in a manner analogous to \"df.head()\" feels more appealing than longer function names like sample_n() or sample_frac(). \n\nBut I'm open to input -- would people prefer sample_n() and sample_frac()? or is rand() seem ok?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78827718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-78827718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 78827718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODI3NzE4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T06:22:36Z",
    "updated_at": "2015-03-13T06:22:36Z",
    "author_association": "MEMBER",
    "body": "I am not a fan of `df.rand()` because it's not clear what `rand` means in the context of a DataFrame.  Sure, it means _something_ random is happening, but `rand` makes me think of generating random numbers (e.g., with `np.random.rand()`), not sampling at random.\n\nFor me, adding a few characters to the length of the function is not such a big concern, because I'm almost always using auto-complete in IPython, anyways.\n\nI'm afraid I'm also not a fan of returning 5 random rows as the default. That feels like a very arbitrary number to me -- and again, something that would be hard to guess.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78950403",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-78950403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 78950403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTUwNDAz",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T12:30:57Z",
    "updated_at": "2015-03-13T12:30:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm also in favor of `sample_n` and `sample_frac`. Long method names don't bother me (up to point). The only trouble is that tab completion doesn't work through method chains.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78961659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-78961659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 78961659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTYxNjU5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T13:03:37Z",
    "updated_at": "2015-03-13T13:03:37Z",
    "author_association": "MEMBER",
    "body": "@nickeubank be sure to also check https://github.com/pydata/pandas/pull/7274, a closed PR trying to implement this for some inspiration (comments, tests)\n\nI also like `sample` more than `rand`, if it should be two functions or one function with two kwargs, I have no real opinion about. Slightly leaning to one method, but if the others prefer two, that is OK with me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79126389",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79126389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79126389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTI2Mzg5",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T16:52:21Z",
    "updated_at": "2015-03-13T16:52:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, sounds like a concensus in favor of `.sample()` over `.rand()`. \n\nlike @jorisvandenbossche, I'm inclined to one method with a `n_or_frac` option, but am open to following @TomAugspurger's suggestion if that's what people prefer.\n\n@shoyer Regarding the default return of five rows, it's a little arbitrary, but is analogous to what `head()` and `tail()` provide. And while I realize not everyone will use this for quick data interrogations, I don't see a lot of harm in a default for those who are -- I have trouble imagining a situation in which having a default N would cause problems in analysis. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79149932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79149932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79149932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTQ5OTMy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T17:16:04Z",
    "updated_at": "2015-03-13T17:16:04Z",
    "author_association": "MEMBER",
    "body": "Like I said before, my main issue with plain `sample` is that `size=1` is degenerate. And unfortunately, getting one sample at random and getting a number of samples equal to the length of the frame (e.g., for bootstrapping) are both common use cases. What's your proposal for this edge case?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79274016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79274016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79274016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mjc0MDE2",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T19:19:58Z",
    "updated_at": "2015-03-13T19:19:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, I see -- you were thinking that if a size value is between 0 and 1, the function infers the user wants a share of rows; if size is an integer greater than 1, the function assumes they want N rows? \n\nI was just going to make it a function option. That gets rid of the corner case. Basically:\n\n```\ndef sample(self, size = 5, n_or_frac = 'number', replacement = False, weights = None, seed = None):\n    \"\"\"\n    Returns a sample of rows from object. \n\n    Parameters\n    ----------\n        size: Number of rows (if n_or_frac = 'n') or \n              share of rows (if n_or_frac = 'frac'). Default 5.\n        n_or_frac {'n', 'frac'}: \n              If 'n': return a sample with 'size' number of rows. \n              If 'frac', return 'size' fraction of rows. \n              Default is 'n'. \n        replacement {True, False}: Sample with or without replacement.\n        weights: Series or ndarray of weights. Must be same length as index.  \n                 Default 'None' results in equal probability weighting.\n        seed: seed to be fed to numpy random.RandomState() Function. Default None. \n    \"\"\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79282738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79282738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79282738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjgyNzM4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T19:29:00Z",
    "updated_at": "2015-03-13T19:29:00Z",
    "author_association": "MEMBER",
    "body": "If we would make it one `sample` function, I think it should have two separate keywords like `sample(n=None, frac=None)` instead of one keyword controlling what the other does.\n\nBut also ok to make two functions of it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79283616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79283616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79283616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjgzNjE2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T19:29:43Z",
    "updated_at": "2015-03-13T19:29:43Z",
    "author_association": "MEMBER",
    "body": "Also, I would use `replace` instead of `replacement` to be consistent with numpy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79288387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79288387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79288387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Mjg4Mzg3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T19:34:13Z",
    "updated_at": "2015-03-13T19:34:13Z",
    "author_association": "MEMBER",
    "body": "`sample(n=None, frac=None)` looks pretty nice to me, actually. I suppose if it's called like `df.sample()` then we could even default to sampling five rows (not entirely sure that's a good idea, though).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79290682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79290682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79290682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjkwNjgy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T19:36:35Z",
    "updated_at": "2015-03-13T19:36:35Z",
    "author_association": "MEMBER",
    "body": "and actually `df.sample_frac(0.5)` is not shorter as `df.sample(frac=0.5)`, and the latter looks a bit nicer to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79322223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79322223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79322223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzIyMjIz",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T20:04:53Z",
    "updated_at": "2015-03-13T20:04:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ha! Do you think this is the exact conversation that the dplyr developers had?\n\nSounds like there's a pretty good consensus around 2 functions -- i'll code that up! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79324970",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79324970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79324970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzI0OTcw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T20:07:07Z",
    "updated_at": "2015-03-13T20:07:07Z",
    "author_association": "MEMBER",
    "body": "Actually, I think @jorisvandenbossche and I are now voting for one function, two arguments :).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79342845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79342845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79342845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzQyODQ1",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T20:21:24Z",
    "updated_at": "2015-03-13T20:21:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh! Misread post on length. :)\n\nOK, so something like the following, with an error thrown if both n and frac values are provided:\n\n```\n   def sample(self, n = 5, frac = None , replace = False, weights = None, seed = None):\n        \"\"\"\n        Returns a sample of rows from object. \n\n        Parameters\n        ----------\n            n: Number of rows to return. Cannot be used with frac.\n               Default = 5 if frac = None. \n            frac: share of rows to return. Cannot be used with n. \n            replace {True, False}: Sample with or without replacement.\n            weights: Series or ndarray of weights. Must be same length as index.  \n                     Default 'None' results in equal probability weighting.\n            seed: seed to be fed to numpy random.RandomState() Function. Default None. \n        \"\"\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79360343",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79360343",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79360343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzYwMzQz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T20:36:07Z",
    "updated_at": "2015-03-13T20:36:07Z",
    "author_association": "MEMBER",
    "body": "Yes, that looks very close. One thing to note is that you'll need to make `n=None` in the function signature -- otherwise we can't tell cleanly if `n=5` was intentional or merely the default value. This matters because of the alternative `frac` option.\n\nAlso, `weights` (on DataFrame) should accept a string, which tries to look up the weights from that column of the data frame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79363819",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2419#issuecomment-79363819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2419",
    "id": 79363819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzYzODE5",
    "user": {
      "login": "nickeubank",
      "id": 9683693,
      "node_id": "MDQ6VXNlcjk2ODM2OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9683693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickeubank",
      "html_url": "https://github.com/nickeubank",
      "followers_url": "https://api.github.com/users/nickeubank/followers",
      "following_url": "https://api.github.com/users/nickeubank/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickeubank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickeubank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickeubank/subscriptions",
      "organizations_url": "https://api.github.com/users/nickeubank/orgs",
      "repos_url": "https://api.github.com/users/nickeubank/repos",
      "events_url": "https://api.github.com/users/nickeubank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickeubank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T20:38:52Z",
    "updated_at": "2015-03-13T20:48:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "On first point: Great.\n\nOn weights: I was coding this into \"code/generic.py\" so it would also work with Series, and in a series the string wouldn't mean anything. With that in mind, I thought I'd just ask for a Series in the `weight` field, and the user could pass `df.weightColumn` if they had one.\n\nOr do you think we need an `if type(self) = pd.core.frame.DataFrame:` clause to allow strings if DataFrame?\n"
  }
]
