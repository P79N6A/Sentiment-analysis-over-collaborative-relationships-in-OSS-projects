[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334155667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334155667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334155667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE1NTY2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T13:31:05Z",
    "updated_at": "2017-10-04T13:32:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "It needs to be an instance of `CategoricalDtype`:\r\n\r\n`.astype(pd.types.dtypes.CategoricalDtype(['a', 'b']))`. We can probably catch this and raise a better error mesesage.\r\n\r\nAnd you can use `CategoricalDtype()` to infer the categories, or just use the string `'category'`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334161017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334161017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334161017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE2MTAxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T13:48:53Z",
    "updated_at": "2017-10-04T13:48:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "this should just raise as passing an instance of a type is not valid (if it worked before that was accidental). Though you could show a deprecation warning (and have it work) if you want."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334202766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334202766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334202766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDIwMjc2Ng==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T15:54:51Z",
    "updated_at": "2017-10-04T15:54:51Z",
    "author_association": "MEMBER",
    "body": "If it was never supposed to work, then my opinion is that we can avoid the DeprecationWarning.\r\n\r\nI just used to find it cleaner to do ``.astype(something)`` with ``something`` being actually a constant of type ``type``, or ``np.dtype`` (not ``str``, and not instantiated by me). But maybe I was just paranoid, in which case I think we can close this issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334320003",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334320003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334320003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMyMDAwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T23:40:51Z",
    "updated_at": "2017-10-04T23:40:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this should work, its similar to:\r\n\r\n```\r\nIn [5]: Series([1,2, 3]).astype(np.float)\r\nOut[5]: \r\n0    1.0\r\n1    2.0\r\n2    3.0\r\ndtype: float64\r\n```\r\n\r\nwhere ``np.float`` is a ``type`` itself (like CDT). that said numpy doesn't support parameterized types in a first class way anyhow so it doesn't come up on the numpy side.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334320730",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334320730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334320730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMyMDczMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T23:46:05Z",
    "updated_at": "2017-10-04T23:46:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz would do a PR for this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334365903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334365903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334365903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDM2NTkwMw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T05:50:43Z",
    "updated_at": "2017-10-05T05:50:43Z",
    "author_association": "MEMBER",
    "body": "> that said numpy doesn't support parameterized types in a first class way anyhow\r\n\r\nAren't strings an example?\r\n\r\n```python\r\nIn [2]: np.array([1, 2, 3]).astype(np.str_)\r\nOut[2]: \r\narray(['1', '2', '3'], \r\n      dtype='<U21')\r\n\r\n```\r\n\r\n> @toobaz would do a PR for this?\r\n\r\nI can try (but not very soon)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334378783",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334378783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334378783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDM3ODc4Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T07:12:09Z",
    "updated_at": "2017-10-05T07:12:09Z",
    "author_association": "MEMBER",
    "body": "> I think this should work, its similar to:\r\n\r\nI first thought this as well (so putting me in favor of allowing the case from the initial post), but it is not *fully* equivalent. \r\nAs in numpy, `np.float` is not the dtype, it is a function to create a scalar of the floating dtype type ('the array scalar type'). An actual dtype is created with `np.dtype(..)` (so also an instance, not a class).\r\n\r\nThat said, I don't really think that equivalence (or non-equivalence) matters that much in deciding whether we want to allow `.astype(CategoricalDtype)` :-)\r\n\r\nWhatever we do, it would be nice to deal with `s.astype(pd.api.types.DatetimeTZDtype)` case as well. Now this astypes to object (how CategoricalDtype worked before as well), but wouldn't it be more informative to raise an error message? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334564645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334564645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334564645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDU2NDY0NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T19:16:00Z",
    "updated_at": "2017-10-05T19:16:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> That said, I don't really think that equivalence (or non-equivalence) matters that much in deciding whether we want to allow .astype(CategoricalDtype) :-)\r\n\r\nI didn't realize that the previous behavior was to convert to object, and not Categorical.\r\n\r\nI don't feel strongly about this at all, but I would prefer to raise with a nice error message. \r\n\r\nPro of error message: Catch cases where the user meant to instantiate the CDT with categories, but forgot\r\n\r\nCon: Have to type an extra `()`, which I'm OK with.\r\n\r\nI'll make a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334566178",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334566178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334566178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDU2NjE3OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T19:21:56Z",
    "updated_at": "2017-10-05T19:21:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should we catch all the other extension types as well? I can't imagine a case were people want `.astype(pd.api.types.IntervalDtype)` to cast to object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/334571142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17780#issuecomment-334571142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17780",
    "id": 334571142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDU3MTE0Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T19:42:11Z",
    "updated_at": "2017-10-05T19:42:11Z",
    "author_association": "MEMBER",
    "body": "> I didn't realize that the previous behavior was to convert to object, and not Categorical.\r\n\r\nAha, I had missed that too."
  }
]
