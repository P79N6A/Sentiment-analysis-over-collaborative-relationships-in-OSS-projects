[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40706281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40706281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40706281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA2Mjgx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T11:56:12Z",
    "updated_at": "2014-04-17T11:56:12Z",
    "author_association": "MEMBER",
    "body": "We already started the discussion here (https://github.com/pydata/pandas/issues/6881#issuecomment-40406736), to quote @danielballan:\n\n> In the long term, I'd like to keep full-fledged support for connections generated by sqlite3. For light applications, I still favor those over sqlalchemy for code portability (e.g., to collaborators who might not have sqlaclemy). Since all other flavors already require dependencies that are not built in to Python, I think it is reasonable to expect users to also obtain sqlalchemy if they want the very best support. One man's opinion.\n> \n> So, I'd like to build MultiIndex support for legacy connections.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40959802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40959802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40959802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTU5ODAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T18:14:12Z",
    "updated_at": "2014-04-21T18:14:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it might make sense to have full-fledged support for `sqlite3` DBAPI only as it doesn't have any deps, while all other flavors have the python driver deps at the very least.\n\nSo support sqlite3 thru direct DBAPI and sqlalchemy, whilst other flavors ONLY with sqlalchemy. If at some point their is sufficient interest / PR's for supporting other direct DBAPI then could be added later.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40969638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40969638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40969638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY5NjM4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T19:50:09Z",
    "updated_at": "2014-04-21T19:50:09Z",
    "author_association": "MEMBER",
    "body": "@hayd @danielballan @mangecoeur @jtratner \n\nAnd if we decide for a full-fledged support of `sqlite3`, this does also mean we deprecate the MySQL support via DBAPI connection (without sqlalchemy)? \nAlso, only supporting sqlite3 without sqlalchemy makes sense in the sense that it is the simplest flavor to support fully. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40974716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40974716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40974716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc0NzE2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T20:41:25Z",
    "updated_at": "2014-04-21T20:41:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I kind of thing we should try and bring back the DBAPI support for this release (and potentially depreciate it, at least for mysql/postgres etc), it's going to **shock** people that their sql code is broken without warning/dep (which is what's happening atm??).\n\nI've tried a few times to get the old tests working, but haven't been able to fix the mysql issues, so would be great if someone else could have a try!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40975421",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40975421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40975421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc1NDIx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T20:48:16Z",
    "updated_at": "2014-04-21T20:50:54Z",
    "author_association": "MEMBER",
    "body": "@hayd There is nothing to 'bring back', as DBAPI is still supported via legacy mode. Normally all code that did run previously, should also run now (as only sqlite and mysql flavors were supported, postgresql was never supported). That is certainly something we have to guarantee. But of course if the tests say otherwise, we should look at that ..\n\nPreviously, only `'sqlite'` and `'mysql'` flavors were really supported, and those are now both supported via the legacy mode. Of course, some things previously also worked for other flavors, eg the `read_sql` to read a query is rather flavor independent and did also work for eg postgresql.\nSo the question is also if we continue to 'allow' this, or explicitly raise an error and point to sqlalchemy mode if a DPAPI connection is provided that is not sqlite (or mysql at this moment).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40976128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40976128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40976128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc2MTI4",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T20:54:55Z",
    "updated_at": "2014-04-21T20:54:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, let's make sure the legacy tests are in order but deprecate legacy connections in future releases.\n\nThis way, we will not waste effort trying to fix bugs in the legacy code -- the bugs that motivated us to adopt sqlalchemy to begin with -- but neither will we pull out the rug from people who are using the legacy connections now and finding them adequate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40980215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40980215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40980215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgwMjE1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T21:38:40Z",
    "updated_at": "2014-04-21T21:38:40Z",
    "author_association": "MEMBER",
    "body": "@danielballan With 'deprecate legacy connections in future releases', do you also mean sqlite? Or only the others, because in the other thread you were in favor of a fully supported sqlite fallback?\n\nI will take a look at the old tests, and try to get them running with the new code.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40981380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40981380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40981380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgxMzgw",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T21:51:22Z",
    "updated_at": "2014-04-21T21:51:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that was ambiguous. I am still in favor of continued fully sqlite3 support. I mean that we should deprecate the others.\n\n(Incidentally, supporting sqlite3 is a little less work because it only supports five datatypes.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40981616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40981616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40981616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgxNjE2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T21:54:25Z",
    "updated_at": "2014-04-21T21:54:25Z",
    "author_association": "MEMBER",
    "body": "yeah, that is what I meant with it being the 'simplest flavor to support fully.'. Actually just int, real and text (and null and blob). No bool, no datetime in different forms, ..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40981938",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-40981938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 40981938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgxOTM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-21T21:57:56Z",
    "updated_at": "2014-04-21T21:57:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "so `sqlalchemy` prob writes datetimes as string and does the conversions? (for `sqlite3`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41037239",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41037239",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41037239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM3MjM5",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T13:11:45Z",
    "updated_at": "2014-04-22T13:11:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Yes, that's right. As I explored that, I discovered that sqlalchemy cannot write timedeltas. It raises a StatementError. I'll open a separate issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41038832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41038832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41038832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM4ODMy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T13:26:38Z",
    "updated_at": "2014-04-22T13:26:38Z",
    "author_association": "MEMBER",
    "body": "And actually (I didn't realize before), sqlalchemy converts it to string, but keeps it as a 'datetime' column in the database (in sqlite, you can use declared data type as `datetime` as an alias, it's just not a datetime but a string), but in this way, also when reading that frame back in, sqlalchemy automatically converts it back to a datetime\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41059407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41059407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41059407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU5NDA3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T16:07:53Z",
    "updated_at": "2014-04-22T16:07:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche bring back the old test file (to ensure we're not breaking too much stuff), sorry.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41066969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41066969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41066969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDY2OTY5",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T17:11:05Z",
    "updated_at": "2014-04-22T17:11:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd Is the latest copy of `test_legacy_sql.py` sitting the history of the master branch? I know I have an old copy in one of my SQL branches. Have you done recent work on it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41071667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41071667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41071667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDcxNjY3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T17:51:52Z",
    "updated_at": "2014-04-22T17:51:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan I haven't done any recent work on it, although there was a couple of additional tests (e.g. not deleteing the database when in append mode) which could be added. I had tweaked it a little (e.g remove removed arguments), but mysql was choking/taking forever on the tests.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41094230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41094230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41094230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDk0MjMw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T20:53:09Z",
    "updated_at": "2014-04-22T20:53:09Z",
    "author_association": "MEMBER",
    "body": "@hayd @danielballan shouldn't we just look at the `test_sql.py` from the 0.13.1 tagged version? Or were there changes done to the tests after that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41118635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41118635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41118635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE4NjM1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T02:33:24Z",
    "updated_at": "2014-04-23T02:33:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche that's right, no changes were added so we should just use that version's tests (potentially could add on for table deleting when trying to append ?).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41510747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41510747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41510747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTEwNzQ3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T22:00:21Z",
    "updated_at": "2014-04-27T22:00:21Z",
    "author_association": "MEMBER",
    "body": "I looked at the old tests, and most are running now (submitted PR #6987 to fix some issues).\n\nWhat do the others think of deprecating the `'mysql'` flavor for the legacy code with DBAPI connections? And only keep full support for sqlite without sqlalchemy? \nBecause if we would do that, we could better do it now I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41679002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41679002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41679002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc5MDAy",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-29T14:00:26Z",
    "updated_at": "2014-04-29T14:00:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Yes.\n\nWe want to get out of the business of supporting flavors' various idiosyncrasies. We've established that making an exception for sqlite3 makes sense. But if we support 'mysql' and not postgresql, oracle, etc. it will only be for historical reasons, and I worry that the code won't be well maintained.\n\nSpeaking as someone who will have a lot of his code broken by this change, I still think it's the right choice. If the deprecation warning incites a riot we can always reevaluate....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41772756",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41772756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41772756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzcyNzU2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-30T08:36:30Z",
    "updated_at": "2014-04-30T08:36:56Z",
    "author_association": "MEMBER",
    "body": "So I will go forward:\n- deprecate 'mysql' flavor (and point to use sqlalchemy)\n- remove the UserWarning of not being a sqlalchemy engine\n\nSomebody a proposal for another name than 'legacy'? Something like sqlite3 'fallback'?\n\n@danielballan Normally your code should not be broken (yet), as the changes should be almost fully backwards compatible. And to adapt, I think it changing the connection an sqlalchemy engine will be enough in most cases as the interface stayed the same (but of course, this can also be a lot of work ..)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41808198",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6900#issuecomment-41808198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6900",
    "id": 41808198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA4MTk4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-30T15:09:14Z",
    "updated_at": "2014-04-30T15:09:14Z",
    "author_association": "MEMBER",
    "body": "OK, then going forward with:\n- deprecate `mysql` flavor\n- remove the UserWarning of not using an sqlalchemy engine\n\nSomebody a good idea how to name the 'legacy' mode, eg sqlite 'fallback'?\n\nNormally, your code should not be broken (yet), as the changes are almost fully backwards compatible. And to adapt, the main thing to change is replacing the mysql connections with sqlalchemy engines as the interface should be the same for the rest (but of course, not saying that this + some of the corner cases could not be a lot of work ...)\n"
  }
]
