[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474313884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474313884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474313884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDMxMzg4NA==",
    "user": {
      "login": "ocefpaf",
      "id": 950575,
      "node_id": "MDQ6VXNlcjk1MDU3NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/950575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ocefpaf",
      "html_url": "https://github.com/ocefpaf",
      "followers_url": "https://api.github.com/users/ocefpaf/followers",
      "following_url": "https://api.github.com/users/ocefpaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ocefpaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ocefpaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ocefpaf/subscriptions",
      "organizations_url": "https://api.github.com/users/ocefpaf/orgs",
      "repos_url": "https://api.github.com/users/ocefpaf/repos",
      "events_url": "https://api.github.com/users/ocefpaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ocefpaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T11:14:28Z",
    "updated_at": "2019-03-19T11:14:28Z",
    "author_association": "NONE",
    "body": "@isuruf could this be related to the blas migration?\r\n\r\n@jorisvandenbossche note that both `defaults` and `conda-forge` are updated frequently so there is no promise that a mixed channel, that in theory is already a bad idea, will work forever. Only `strict` channel can help us debug problem in a single channel, multiple channels are pretty much impossible to debug and to ensure a permanent fix."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474350660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474350660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474350660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1MDY2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T12:54:38Z",
    "updated_at": "2019-03-19T12:54:38Z",
    "author_association": "MEMBER",
    "body": "@ocefpaf yes, I am well aware. For me a reason to keep those builds is that it can reflect what probably a lot of people are doing in practice, and can catch issues like the above. But of course, that only makes senseif the conda / conda-forge folks are actually interested in hearing about such compatibility issues. \r\nIf not, we can certainly convert the CI build here to a clean one, either not using nomkl and everything from defaults, or either everything from conda-forge \r\n\r\n(in any case, the pandas CI is probably not the best place to test those mixed builds since we don't want to have the pandas CI failing for such compatibility issue. If we want to keep one, better to do that on the geopandas CI)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474351890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474351890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474351890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1MTg5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T12:56:51Z",
    "updated_at": "2019-03-19T12:56:51Z",
    "author_association": "MEMBER",
    "body": "@jreback do you know if there is a specific reason we are using `nomkl` on the travis py3.6 build? Just to reduce the download size, or to actually have a build testing with openblas?\r\n\r\nIf we want to keep openblas, we can have a full conda-forge based build to avoid such issues in the future. Or otherwise, I can also remove `nomkl` and have it fully defaults-based.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474354146",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474354146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474354146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1NDE0Ng==",
    "user": {
      "login": "ocefpaf",
      "id": 950575,
      "node_id": "MDQ6VXNlcjk1MDU3NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/950575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ocefpaf",
      "html_url": "https://github.com/ocefpaf",
      "followers_url": "https://api.github.com/users/ocefpaf/followers",
      "following_url": "https://api.github.com/users/ocefpaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ocefpaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ocefpaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ocefpaf/subscriptions",
      "organizations_url": "https://api.github.com/users/ocefpaf/orgs",
      "repos_url": "https://api.github.com/users/ocefpaf/repos",
      "events_url": "https://api.github.com/users/ocefpaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ocefpaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:01:35Z",
    "updated_at": "2019-03-19T13:01:35Z",
    "author_association": "NONE",
    "body": "> But of course, that only makes senseif the conda / conda-forge folks are actually interested in hearing about such compatibility issues.\r\n\r\nWhile I appreciate the effort in reporting there is not much we can do. Sorry. I know that is frustrating but we are not able to fix anything unless the report is using  `strict`, there is nothing we can do in the mixed channel case that will last longer than a \"packaging cycle.\" No error reporting a mixed channel problem can be debugged and fixed in the long term.\r\n\r\nI would recommend to always have a clean CI with wither `strict`, only `defaults` or only `conda-forge`. \r\n\r\nPS: in the past we gave the illusion that mixing channels would be possible but the truth is that `conda-forge` was, most of the time, ahead of `defaults` in the packages versions. Since `defaults` started using `conda-forge` recipes that lag got shorter and we cannot guarantee stability based on having the latest versions for solver anymore."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474355967",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474355967",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474355967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1NTk2Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:05:06Z",
    "updated_at": "2019-03-19T13:05:06Z",
    "author_association": "MEMBER",
    "body": "The problem with environment.yml files is that it would still be nice to 'strictly' specify which packages can come from another channel, or to have this strict configuration embedded in it (which I know you are well aware of that!)\r\n\r\n> in the past we gave the illusion that mixing channels would be possible\r\n\r\nBut mixed with strict priority is still OK right? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474357669",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474357669",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474357669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1NzY2OQ==",
    "user": {
      "login": "ocefpaf",
      "id": 950575,
      "node_id": "MDQ6VXNlcjk1MDU3NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/950575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ocefpaf",
      "html_url": "https://github.com/ocefpaf",
      "followers_url": "https://api.github.com/users/ocefpaf/followers",
      "following_url": "https://api.github.com/users/ocefpaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ocefpaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ocefpaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ocefpaf/subscriptions",
      "organizations_url": "https://api.github.com/users/ocefpaf/orgs",
      "repos_url": "https://api.github.com/users/ocefpaf/repos",
      "events_url": "https://api.github.com/users/ocefpaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ocefpaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:08:27Z",
    "updated_at": "2019-03-19T13:08:27Z",
    "author_association": "NONE",
    "body": "> The problem with environment.yml files is that it would still be nice to 'strictly' specify which packages can come from another channel, or to have this strict configuration embedded in it (which I know you are well aware of that!)\r\n\r\nYes. We are still make that a default behavior for consistency. As well as the `strict` option.\r\n\r\n> But mixed with strict priority is still OK right?\r\n\r\nYes. And, if issues appear in that scenario, then it is a problem we can, and should, act on."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474359051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25778#issuecomment-474359051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25778",
    "id": 474359051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDM1OTA1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T13:10:52Z",
    "updated_at": "2019-03-19T13:10:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n\r\n> @jreback do you know if there is a specific reason we are using nomkl on the travis py3.6 build? Just to reduce the download size, or to actually have a build testing with openblas?\r\n\r\nyep exactly. but prob could change that i think."
  }
]
