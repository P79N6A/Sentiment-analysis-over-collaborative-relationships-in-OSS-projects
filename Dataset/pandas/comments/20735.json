[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382469232",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-382469232",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 382469232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2OTIzMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T17:39:10Z",
    "updated_at": "2018-04-18T17:39:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reproducible example\r\n\r\n```python\r\nIn [21]: from pandas.tests.extension.json.array import JSONArray\r\n\r\nIn [22]: class JSONArray2(JSONArray):\r\n    ...:     @property\r\n    ...:     def values(self): return self.data\r\n    ...:\r\n\r\nIn [23]: arr = JSONArray2([{\"A\": 1}])\r\n\r\nIn [24]: df = pd.DataFrame({\"A\": arr})\r\n```\r\n\r\n```pytb\r\nIn [25]: pd.concat([df, df])\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-25-86fe636506f1> in <module>()\r\n----> 1 pd.concat([df, df])\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/reshape/concat.py in concat(objs, axis, join, join_axes, ignore_index, keys, levels, names, verify_integrity, copy)\r\n    211                        verify_integrity=verify_integrity,\r\n    212                        copy=copy)\r\n--> 213     return op.get_result()\r\n    214\r\n    215\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/reshape/concat.py in get_result(self)\r\n    406             new_data = concatenate_block_managers(\r\n    407                 mgrs_indexers, self.new_axes, concat_axis=self.axis,\r\n--> 408                 copy=self.copy)\r\n    409             if not self.copy:\r\n    410                 new_data._consolidate_inplace()\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/internals.py in concatenate_block_managers(mgrs_indexers, axes, concat_axis, copy)\r\n   5402                 values = values.view()\r\n   5403             b = b.make_block_same_class(values, placement=placement)\r\n-> 5404         elif is_uniform_join_units(join_units):\r\n   5405             b = join_units[0].block.concat_same_type(\r\n   5406                 [ju.block for ju in join_units], placement=placement)\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/internals.py in is_uniform_join_units(join_units)\r\n   5426         # no blocks that would get missing values (can lead to type upcasts)\r\n   5427         # unless we're an extension dtype.\r\n-> 5428         all(not ju.is_na or ju.block.is_extension for ju in join_units) and\r\n   5429         # no blocks with indexers (as then the dimensions do not fit)\r\n   5430         all(not ju.indexers for ju in join_units) and\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/internals.py in <genexpr>(.0)\r\n   5426         # no blocks that would get missing values (can lead to type upcasts)\r\n   5427         # unless we're an extension dtype.\r\n-> 5428         all(not ju.is_na or ju.block.is_extension for ju in join_units) and\r\n   5429         # no blocks with indexers (as then the dimensions do not fit)\r\n   5430         all(not ju.indexers for ju in join_units) and\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/_libs/properties.pyx in pandas._libs.properties.CachedProperty.__get__()\r\n     34             val = <object> PyDict_GetItem(cache, self.name)\r\n     35         else:\r\n---> 36             val = self.func(obj)\r\n     37             PyDict_SetItem(cache, self.name, val)\r\n     38         return val\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/internals.py in is_na(self)\r\n   5782         chunk_len = max(total_len // 40, 1000)\r\n   5783         for i in range(0, total_len, chunk_len):\r\n-> 5784             if not isna(values_flat[i:i + chunk_len]).all():\r\n   5785                 return False\r\n   5786\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/dtypes/missing.py in isna(obj)\r\n    104     Name: 1, dtype: bool\r\n    105     \"\"\"\r\n--> 106     return _isna(obj)\r\n    107\r\n    108\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/dtypes/missing.py in _isna_new(obj)\r\n    118     elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass,\r\n    119                           ABCExtensionArray)):\r\n--> 120         return _isna_ndarraylike(obj)\r\n    121     elif isinstance(obj, ABCGeneric):\r\n    122         return obj._constructor(obj._data.isna(func=isna))\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/dtypes/missing.py in _isna_ndarraylike(obj)\r\n    185 def _isna_ndarraylike(obj):\r\n    186     values = getattr(obj, 'values', obj)\r\n--> 187     dtype = values.dtype\r\n    188\r\n    189     if is_extension_array_dtype(obj):\r\n\r\nAttributeError: 'list' object has no attribute 'dtype'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382683571",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-382683571",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 382683571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjY4MzU3MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T10:14:02Z",
    "updated_at": "2018-04-19T10:14:02Z",
    "author_association": "MEMBER",
    "body": "Main problem here is that for now it is kind of \"not allowed\" as an ExtensionArray to have a `.values` attribute because we use that internally?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382716024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-382716024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 382716024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjcxNjAyNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T12:31:27Z",
    "updated_at": "2018-04-19T12:31:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right. Weâ€™ve hit other places like this (setitem IIRC) and have to throw in extra checks. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382717394",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-382717394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 382717394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjcxNzM5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T12:35:47Z",
    "updated_at": "2018-04-19T12:35:47Z",
    "author_association": "MEMBER",
    "body": "Maybe we can, for now, add a test to the extension interface tests that checks the ExtensionArray has *no* attribute `values` to warn the author for that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382843213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-382843213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 382843213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjg0MzIxMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T18:52:28Z",
    "updated_at": "2018-04-19T18:52:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "That may be the most pragmatic approach right now. I'm guessing there's a\nlong tail of these kinds of places where we \"expect\" an array like, but\nactually use ndarray methods.\n\nIs just documenting it sufficient, or do you think it should be an actual\nwarning at runtime? And when / where would we emit the warning?\n\nOn Thu, Apr 19, 2018 at 7:35 AM, Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> Maybe we can, for now, add a test to the extension interface tests that\n> checks the ExtensionArray has *no* attribute values to warn the author\n> for that.\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/20735#issuecomment-382717394>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIpnrLs3ryAQaet-3VJopngR7Wo4Rks5tqISngaJpZM4TaeaB>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383005028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-383005028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 383005028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzAwNTAyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T07:18:03Z",
    "updated_at": "2018-04-20T07:18:03Z",
    "author_association": "MEMBER",
    "body": "I wouldn't make it a runtime warning, but a test in eg `BaseInterfaceTests` that asserts it is not present. So at least that gives a warning to extension authors when they subclass the tests. (and of course documenting it as well)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383291545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-383291545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 383291545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzI5MTU0NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-21T12:32:01Z",
    "updated_at": "2018-04-21T12:32:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems reasonable for now.\n\nOn Fri, Apr 20, 2018 at 2:18 AM, Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> I wouldn't make it a runtime warning, but a test in eg BaseInterfaceTests\n> that asserts it is not present. So at least that gives a warning to\n> extension authors when they subclass the tests. (and of course documenting\n> it as well)\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/20735#issuecomment-383005028>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIsGQyMTLIuT0BSuzVnEianIDzwPtks5tqYuwgaJpZM4TaeaB>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437582815",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20735#issuecomment-437582815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20735",
    "id": 437582815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzU4MjgxNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-10T13:10:00Z",
    "updated_at": "2018-11-10T13:10:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think everything here has been solved. We still have https://github.com/pandas-dev/pandas/issues/22994 for a more general concat protocol."
  }
]
