[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122385101",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122385101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122385101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjM4NTEwMQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T19:27:44Z",
    "updated_at": "2015-07-17T19:27:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'm having some issues with comparing empty Indexes. For Timedelta, Datetime & Categorical, I get the equivalent of this: \n\n``` python\nAssertionError: TimedeltaIndex([], dtype='timedelta64[ns]', freq='D') != TimedeltaIndex([], dtype='timedelta64[ns]', freq='D')\n```\n\nI'd love to take a look at the wider problem in the future; in the meantime is there a way of getting this fix in? Is there a strong reason you don't like the type test rather than the direct comparison?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122394747",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122394747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122394747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjM5NDc0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T19:56:07Z",
    "updated_at": "2015-07-17T19:56:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, use `idx1.equals(idx2)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122395223",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122395223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122395223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjM5NTIyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T19:57:21Z",
    "updated_at": "2015-07-17T19:57:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "just asserting type papers over the meta data propogation, so its just creates a new bug, rather than fixing the existing one.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122453036",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122453036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122453036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjQ1MzAzNg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T23:42:21Z",
    "updated_at": "2015-07-17T23:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great @jreback, that should be good to go. Let me know if I've missed anything. Cheers\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122457124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122457124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122457124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjQ1NzEyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T23:53:43Z",
    "updated_at": "2015-07-17T23:53:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls add a release note in whatsnew/v0.17.0\n\nsquash to a single commit\n\nping when green.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122608890",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122608890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122608890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjYwODg5MA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-19T00:44:27Z",
    "updated_at": "2015-07-19T00:44:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a PyTables test fail - does anyone have any idea what this might be? I've dug around, but not getting anywhere fast; and have zero PyTables experience / installation.\n\n``` python\nERROR: test_to_hdf_with_object_column_names (pandas.io.tests.test_pytables.TestHDFStore)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/build/pydata/pandas/pandas/io/tests/test_pytables.py\", line 4678, in test_to_hdf_with_object_column_names\n    df.to_hdf(path, 'df', format='table', data_columns=True)\n  File \"/home/travis/build/pydata/pandas/pandas/core/generic.py\", line 920, in to_hdf\n    return pytables.to_hdf(path_or_buf, key, self, **kwargs)\n  File \"/home/travis/build/pydata/pandas/pandas/io/pytables.py\", line 269, in to_hdf\n    f(store)\n  File \"/home/travis/build/pydata/pandas/pandas/io/pytables.py\", line 264, in <lambda>\n    f = lambda store: store.put(key, value, **kwargs)\n  File \"/home/travis/build/pydata/pandas/pandas/io/pytables.py\", line 826, in put\n    self._write_to_group(key, value, append=append, **kwargs)\n  File \"/home/travis/build/pydata/pandas/pandas/io/pytables.py\", line 1275, in _write_to_group\n    s.write(obj=value, append=append, complib=complib, **kwargs)\n  File \"/home/travis/build/pydata/pandas/pandas/io/pytables.py\", line 3798, in write\n    **kwargs)\n  File \"/home/travis/build/pydata/pandas/pandas/io/pytables.py\", line 3404, in create_axes\n    axis=axis\n  File \"/home/travis/build/pydata/pandas/pandas/core/frame.py\", line 2522, in reindex_axis\n    fill_value=fill_value)\n  File \"/home/travis/build/pydata/pandas/pandas/core/generic.py\", line 1852, in reindex_axis\n    limit=limit)\n  File \"/home/travis/build/pydata/pandas/pandas/core/index.py\", line 3062, in reindex\n    if not is_categorical_dtype(target) and not target.is_unique:\n  File \"properties.pyx\", line 34, in pandas.lib.cache_readonly.__get__ (pandas/lib.c:39442)\n  File \"/home/travis/build/pydata/pandas/pandas/core/index.py\", line 744, in is_unique\n    return self._engine.is_unique\n  File \"index.pyx\", line 213, in pandas.index.IndexEngine.is_unique.__get__ (pandas/index.c:4392)\n  File \"index.pyx\", line 248, in pandas.index.IndexEngine._do_unique_check (pandas/index.c:4874)\n  File \"index.pyx\", line 261, in pandas.index.IndexEngine._ensure_mapping_populated (pandas/index.c:5047)\n  File \"index.pyx\", line 267, in pandas.index.IndexEngine.initialize (pandas/index.c:5135)\n  File \"hashtable.pyx\", line 703, in pandas.hashtable.PyObjectHashTable.map_locations (pandas/hashtable.c:11242)\nValueError: Buffer dtype mismatch, expected 'Python object' but got 'double'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122609900",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122609900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122609900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjYwOTkwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-19T01:11:33Z",
    "updated_at": "2015-07-19T01:11:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "what are the columns on the df\n(this is the point of the test - you can only have strong columns not numbers and such)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/122610717",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10599#issuecomment-122610717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10599",
    "id": 122610717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjYxMDcxNw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-19T01:28:16Z",
    "updated_at": "2015-07-19T01:28:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "The columns are either strings or categoricals - that's the line this fails on. \nIf you cut through to what this issue is, that'd be awesome. Otherwise I can try and install PyTables and debug from the bottom.\n\n``` python\n        types_should_run = [ tm.makeStringIndex, tm.makeCategoricalIndex ]\n...\n        for index in types_should_run:\n            df = DataFrame(np.random.randn(10, 2), columns=index(2))\n            with ensure_clean_path(self.path) as path:\n                df.to_hdf(path, 'df', format='table', data_columns=True)\n                result = pd.read_hdf(path, 'df', where=\"index = [{0}]\".format(df.index[0]))\n                assert(len(result))\n```\n"
  }
]
