[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67907561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9131#issuecomment-67907561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9131",
    "id": 67907561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTA3NTYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-23T00:09:31Z",
    "updated_at": "2014-12-23T00:09:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "if you are starting with a python structure (a list), I am not sure of the issue here. Why would you convert to a numpy array first? what are you trying to do? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67928266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9131#issuecomment-67928266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9131",
    "id": 67928266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTI4MjY2",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-23T07:43:57Z",
    "updated_at": "2014-12-23T07:43:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm getting data from a JSON response. This is a list of nested dictionaries which first need to be flatten. I could do this:\n\n```\ndata = [flatten_dict(d) for d in data]\n```\n\nbut I think it's better for performance issue to work with numpy arrays\n\n```\nf_flatten_dict = np.vectorize(flatten_dict)\na_data = np.array(data)\na_data = f_flatten_dict(a_data)\n```\n\nand I build a DataFrame\n\nHere is my `flatten_dict` function\n\n```\ndef flatten_dict(d, parent_key=''):\n    \"\"\"Recursively flatten a dict\"\"\"\n    items = []\n    for k, v in d.items():\n        new_key = parent_key + '_' + k if parent_key else k\n        if isinstance(v, collections.MutableMapping):\n            items.extend(flatten_dict(v, new_key).items())\n        elif type(v) == list:\n            for n in range(len(v)):\n                mykey = \"%s_%d\" % (new_key, n)\n                items.extend(flatten_dict(v[n], mykey).items())\n        else:\n            items.append((new_key, v))\n    return dict(items)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67928749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9131#issuecomment-67928749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9131",
    "id": 67928749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTI4NzQ5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-23T07:54:54Z",
    "updated_at": "2014-12-23T07:54:54Z",
    "author_association": "MEMBER",
    "body": "@scls19fr I would encourage you to profile your code to test your theories about performance (IPython makes this easy with the `%timeit` magic). In this case, I am pretty sure that a numpy array would _not_ be faster than a Python list -- usually using non-native types in your array or `np.vectorize` are signs that numpy will not speed things up.\n\nTo give a little more context on the design here, pandas does some inference steps about how to format the data only when it is provided as a list for this exact reason, because it's usually not a good idea to nest dictionaries in numpy arrays.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67939477",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9131#issuecomment-67939477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9131",
    "id": 67939477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTM5NDc3",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-23T10:43:59Z",
    "updated_at": "2014-12-23T10:43:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. I understand your point of view. But is there any tip to create columns from dict keys automatically ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67939855",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9131#issuecomment-67939855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9131",
    "id": 67939855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTM5ODU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-23T10:49:50Z",
    "updated_at": "2014-12-23T10:49:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@scls19fr you might want to have a look here: http://pandas.pydata.org/pandas-docs/stable/io.html#normalization\n\nclosing as a usage issue\n"
  }
]
