[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348628603",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348628603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348628603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYyODYwMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T22:14:53Z",
    "updated_at": "2017-12-01T22:14:53Z",
    "author_association": "MEMBER",
    "body": "@qiaobz : Thanks reporting this!  Unfortunately, this is a little hard to reproduce.  Could you provide a reproducible example by creating a small table in memory (using Python's `sqlite` library) that will cause this error to surface?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348662034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348662034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348662034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2MjAzNA==",
    "user": {
      "login": "qiaobz",
      "id": 13828874,
      "node_id": "MDQ6VXNlcjEzODI4ODc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13828874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiaobz",
      "html_url": "https://github.com/qiaobz",
      "followers_url": "https://api.github.com/users/qiaobz/followers",
      "following_url": "https://api.github.com/users/qiaobz/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiaobz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiaobz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiaobz/subscriptions",
      "organizations_url": "https://api.github.com/users/qiaobz/orgs",
      "repos_url": "https://api.github.com/users/qiaobz/repos",
      "events_url": "https://api.github.com/users/qiaobz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiaobz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T02:40:20Z",
    "updated_at": "2017-12-02T02:40:20Z",
    "author_association": "NONE",
    "body": "sorry for troubling you\r\n\r\n- when using sqllite3, it's no problem\r\n```\r\nimport sqlite3\r\nimport pandas as pd\r\nconn = sqlite3.connect(\":memory:\")\r\ncur = con.cursor()\r\ncur.execute('''CREATE TABLE \"TABLE1\" (\"COL1\" NUMBER(20,0))''')\r\ncur.execute('''INSERT INTO \"TABLE1\"(\"COL1\") VALUES (\"20124400100030425447\")''')\r\npd.read_sql(\"select COL1 FROM TABLE1\", conn)\r\n```\r\nand the ouput is, (no error)\r\n```\r\n           COL1\r\n0  2.012440e+19\r\n```\r\n- reproduce the problem: \r\n    - oracle database,  create table and insert data  \r\n    ```\r\n    my config  \r\n\r\n    user: Test  \r\n    password: 0000  \r\n    dsn: localhost:1521/orcl\r\n    ```\r\n    ```\r\n    CREATE TABLE \"TEST\".\"TABLE1\" (\"COL1\" NUMBER(20,0))\r\n    INSERT INTO \"TABLE1\"(\"COL1\") VALUES ('20124400100030425447')\r\n    ```\r\n    - use cx_Oracle and pandas\r\n    ```\r\n    import pandas as pd\r\n    import cx_Oracle\r\n    db = cx_Oracle.connect(user='TEST', password='0000', dsn='localhost:1521/orcl')\r\n    querysql = \"SELECT COL1 FROM TABLE1\"\r\n    df = pd.read_sql(querysql, db)\r\n    ```\r\n    and then cause “OverflowError: long too big to convert”"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348662226",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348662226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348662226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2MjIyNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T02:43:13Z",
    "updated_at": "2017-12-02T02:43:32Z",
    "author_association": "MEMBER",
    "body": "@qiaobz : Interesting...can you provide a stacktrace for when you try to read from the Oracle DB?  If so, can you add it to your original issue too?  That will be useful for anyone in the future."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348662808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348662808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348662808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2MjgwOA==",
    "user": {
      "login": "qiaobz",
      "id": 13828874,
      "node_id": "MDQ6VXNlcjEzODI4ODc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13828874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiaobz",
      "html_url": "https://github.com/qiaobz",
      "followers_url": "https://api.github.com/users/qiaobz/followers",
      "following_url": "https://api.github.com/users/qiaobz/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiaobz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiaobz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiaobz/subscriptions",
      "organizations_url": "https://api.github.com/users/qiaobz/orgs",
      "repos_url": "https://api.github.com/users/qiaobz/repos",
      "events_url": "https://api.github.com/users/qiaobz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiaobz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T02:53:43Z",
    "updated_at": "2017-12-02T02:53:43Z",
    "author_association": "NONE",
    "body": "my fault, I add it now\r\n\r\n```\r\nIn [1]: import cx_Oracle\r\n\r\nIn [2]: db = cx_Oracle.connect(user='TEST', password='0000', dsn='localhost:1521/orcl')\r\n\r\nIn [3]: import pandas as pd\r\n\r\nIn [4]: df = pd.read_sql('select col1 from TABLE1',db)\r\n---------------------------------------------------------------------------\r\nOverflowError                             Traceback (most recent call last)\r\n<ipython-input-4-318bf64d0a9b> in <module>()\r\n----> 1 df = pd.read_sql('select col1 from TABLE1',db)\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\io\\sql.pyc in read_sql(sql, con, index_col, coerce_float, params, parse_dates, colu\r\nmns, chunksize)\r\n    398             sql, index_col=index_col, params=params,\r\n    399             coerce_float=coerce_float, parse_dates=parse_dates,\r\n--> 400             chunksize=chunksize)\r\n    401\r\n    402     try:\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\io\\sql.pyc in read_query(self, sql, index_col, coerce_float, params, parse_dates, c\r\nhunksize)\r\n   1456             frame = _wrap_result(data, columns, index_col=index_col,\r\n   1457                                  coerce_float=coerce_float,\r\n-> 1458                                  parse_dates=parse_dates)\r\n   1459             return frame\r\n   1460\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\io\\sql.pyc in _wrap_result(data, columns, index_col, coerce_float, parse_dates)\r\n    155\r\n    156     frame = DataFrame.from_records(data, columns=columns,\r\n--> 157                                    coerce_float=coerce_float)\r\n    158\r\n    159     _parse_date_columns(frame, parse_dates)\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\core\\frame.pyc in from_records(cls, data, index, exclude, columns, coerce_float, nr\r\nows)\r\n   1140         else:\r\n   1141             arrays, arr_columns = _to_arrays(data, columns,\r\n-> 1142                                              coerce_float=coerce_float)\r\n   1143\r\n   1144             arr_columns = _ensure_index(arr_columns)\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\core\\frame.pyc in _to_arrays(data, columns, coerce_float, dtype)\r\n   6249     if isinstance(data[0], (list, tuple)):\r\n   6250         return _list_to_arrays(data, columns, coerce_float=coerce_float,\r\n-> 6251                                dtype=dtype)\r\n   6252     elif isinstance(data[0], collections.Mapping):\r\n   6253         return _list_of_dict_to_arrays(data, columns,\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\core\\frame.pyc in _list_to_arrays(data, columns, coerce_float, dtype)\r\n   6328         content = list(lib.to_object_array(data).T)\r\n   6329     return _convert_object_array(content, columns, dtype=dtype,\r\n-> 6330                                  coerce_float=coerce_float)\r\n   6331\r\n   6332\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\core\\frame.pyc in _convert_object_array(content, columns, coerce_float, dtype)\r\n   6394         return arr\r\n   6395\r\n-> 6396     arrays = [convert(arr) for arr in content]\r\n   6397\r\n   6398     return arrays, columns\r\n\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\core\\frame.pyc in convert(arr)\r\n   6390     def convert(arr):\r\n   6391         if dtype != object and dtype != np.object:\r\n-> 6392             arr = lib.maybe_convert_objects(arr, try_float=coerce_float)\r\n   6393             arr = maybe_cast_to_datetime(arr, dtype)\r\n   6394         return arr\r\n\r\npandas/_libs/src\\inference.pyx in pandas._libs.lib.maybe_convert_objects()\r\n\r\nOverflowError: long too big to convert\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348665044",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348665044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348665044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2NTA0NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T03:36:19Z",
    "updated_at": "2017-12-02T03:36:51Z",
    "author_association": "MEMBER",
    "body": "Hmm, that's very strange.  Here's what I suggest you do:\r\n\r\n1) Create a new `conda` environment with `pandas` installed.  Make sure you can reproduce the error.\r\n2) Try installing the most updated version of `pandas` (we're at `0.21`, but you are using `0.20.1`) and see if the error persists still.\r\n3) Locate the line where you initialize the returned `DataFrame`.  That would correspond to this block in your stack trace (though the filepath is different because you would be in a different `conda` environment):\r\n\r\n~~~\r\nC:\\Program Files\\Anaconda\\lib\\site-packages\\pandas\\io\\sql.pyc in _wrap_result(data, columns, index_col, coerce_float, parse_dates)\r\n    155\r\n    156     frame = DataFrame.from_records(data, columns=columns,\r\n--> 157                                    coerce_float=coerce_float)\r\n    158\r\n    159     _parse_date_columns(frame, parse_dates)\r\n~~~\r\n\r\nAdd a line above to print the parameters to `DataFrame.from_records` and rerun the code.  I would be curious to see what the Oracle DB is giving you compared to in-memory."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348668224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348668224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348668224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2ODIyNA==",
    "user": {
      "login": "qiaobz",
      "id": 13828874,
      "node_id": "MDQ6VXNlcjEzODI4ODc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13828874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiaobz",
      "html_url": "https://github.com/qiaobz",
      "followers_url": "https://api.github.com/users/qiaobz/followers",
      "following_url": "https://api.github.com/users/qiaobz/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiaobz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiaobz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiaobz/subscriptions",
      "organizations_url": "https://api.github.com/users/qiaobz/orgs",
      "repos_url": "https://api.github.com/users/qiaobz/repos",
      "events_url": "https://api.github.com/users/qiaobz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiaobz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T04:50:03Z",
    "updated_at": "2017-12-02T04:50:03Z",
    "author_association": "NONE",
    "body": "thx, I try to new a conda environment. but my pandas in this issue is 0.21.0, you can see the INSTALLED VERSIONS(pd.show_versions() output)\r\nbtw, I found that 20124400100030425447 is beyond the range of uinit64, such like 10124420010000167598 will cause no error\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348669026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348669026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348669026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2OTAyNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T05:08:28Z",
    "updated_at": "2017-12-02T05:08:28Z",
    "author_association": "MEMBER",
    "body": "> btw, I found that 20124400100030425447 is beyond the range of uinit64\r\n\r\nRight, which is why I was asking you what value the Oracle DB is returning compared to the in-memory version.  Were you able to figure that out by following my instructions?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348675739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348675739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348675739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY3NTczOQ==",
    "user": {
      "login": "qiaobz",
      "id": 13828874,
      "node_id": "MDQ6VXNlcjEzODI4ODc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13828874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiaobz",
      "html_url": "https://github.com/qiaobz",
      "followers_url": "https://api.github.com/users/qiaobz/followers",
      "following_url": "https://api.github.com/users/qiaobz/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiaobz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiaobz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiaobz/subscriptions",
      "organizations_url": "https://api.github.com/users/qiaobz/orgs",
      "repos_url": "https://api.github.com/users/qiaobz/repos",
      "events_url": "https://api.github.com/users/qiaobz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiaobz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T07:53:49Z",
    "updated_at": "2017-12-02T14:44:53Z",
    "author_association": "NONE",
    "body": "the parameters to `DataFrame.from_records`:\r\n- Oracle DB\r\n`[(20124400100030425447L,)]`\r\n- in-memory version\r\n`[(2.0124400100030427e+19,)]`\r\n\r\nHmm, so I complicate the problem.\r\nWe can easily reproduce the error\r\n```\r\nimport pandas as pd\r\ndf = pd.DataFrame([(20124400100030425447L,)])\r\n```\r\nthen casue error"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348700769",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348700769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348700769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcwMDc2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T15:53:51Z",
    "updated_at": "2017-12-02T15:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you really need integers this large then you have to explicitly set them with ``object`` dtype to avoid the conversions. \r\n\r\n```\r\nIn [4]: df = pd.DataFrame([(20124400100030425447,)], dtype=object)\r\n\r\nIn [5]: df\r\nOut[5]: \r\n                      0\r\n0  20124400100030425447\r\n\r\nIn [6]: df.dtypes\r\nOut[6]: \r\n0    object\r\ndtype: object\r\n\r\nIn [7]: np.iinfo(np.int64).max\r\nOut[7]: 9223372036854775807\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348748542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348748542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348748542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc0ODU0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T08:25:09Z",
    "updated_at": "2017-12-03T08:25:09Z",
    "author_association": "MEMBER",
    "body": "Shouldn't we infer this? Numpy does:\r\n\r\n```\r\nIn [9]: np.array([20124400100030425447])\r\nOut[9]: array([20124400100030425447], dtype=object)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348748998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348748998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348748998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc0ODk5OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T08:33:57Z",
    "updated_at": "2017-12-03T08:33:57Z",
    "author_association": "MEMBER",
    "body": "> Shouldn't we infer this?\r\n\r\nI don't see why not?  Is there any reason why historically we didn't do it?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348750871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348750871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348750871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc1MDg3MQ==",
    "user": {
      "login": "qiaobz",
      "id": 13828874,
      "node_id": "MDQ6VXNlcjEzODI4ODc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13828874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qiaobz",
      "html_url": "https://github.com/qiaobz",
      "followers_url": "https://api.github.com/users/qiaobz/followers",
      "following_url": "https://api.github.com/users/qiaobz/following{/other_user}",
      "gists_url": "https://api.github.com/users/qiaobz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qiaobz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qiaobz/subscriptions",
      "organizations_url": "https://api.github.com/users/qiaobz/orgs",
      "repos_url": "https://api.github.com/users/qiaobz/repos",
      "events_url": "https://api.github.com/users/qiaobz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qiaobz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T09:13:11Z",
    "updated_at": "2017-12-03T09:13:11Z",
    "author_association": "NONE",
    "body": "two little question\r\n- there is no dtype parameters to `read_sql()`\r\n- `pd.DataFrame(cur.fetchall(), dtype=object)      # cur is db.cursor()` will set all columns with `object` dtype"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348783330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18584#issuecomment-348783330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18584",
    "id": 348783330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc4MzMzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-03T15:24:42Z",
    "updated_at": "2017-12-03T15:24:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah this is a bit of an unhandled case in ``maybe_convert_objects``\r\n\r\n@gfyoung would you have a look?\r\n\r\n"
  }
]
