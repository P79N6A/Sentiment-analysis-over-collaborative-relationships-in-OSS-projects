[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234231672",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234231672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234231672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzMTY3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T11:51:14Z",
    "updated_at": "2016-07-21T11:51:14Z",
    "author_association": "MEMBER",
    "body": "See also the discussion on gitter\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234232633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234232633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234232633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzMjYzMw==",
    "user": {
      "login": "toasteez",
      "id": 4855603,
      "node_id": "MDQ6VXNlcjQ4NTU2MDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4855603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toasteez",
      "html_url": "https://github.com/toasteez",
      "followers_url": "https://api.github.com/users/toasteez/followers",
      "following_url": "https://api.github.com/users/toasteez/following{/other_user}",
      "gists_url": "https://api.github.com/users/toasteez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toasteez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toasteez/subscriptions",
      "organizations_url": "https://api.github.com/users/toasteez/orgs",
      "repos_url": "https://api.github.com/users/toasteez/repos",
      "events_url": "https://api.github.com/users/toasteez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toasteez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T11:56:38Z",
    "updated_at": "2016-07-21T11:56:38Z",
    "author_association": "NONE",
    "body": "This works (needed values to align.\n\n```\ndav = df.loc[:, pd.IndexSlice[:, :, 'daily_added_value']]\namount = df.loc[:, pd.IndexSlice[:, :, 'amount']]\ndr = (dav.shift(-1).values / amount) * 100\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234234258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234234258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234234258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzNDI1OA==",
    "user": {
      "login": "toasteez",
      "id": 4855603,
      "node_id": "MDQ6VXNlcjQ4NTU2MDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4855603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toasteez",
      "html_url": "https://github.com/toasteez",
      "followers_url": "https://api.github.com/users/toasteez/followers",
      "following_url": "https://api.github.com/users/toasteez/following{/other_user}",
      "gists_url": "https://api.github.com/users/toasteez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toasteez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toasteez/subscriptions",
      "organizations_url": "https://api.github.com/users/toasteez/orgs",
      "repos_url": "https://api.github.com/users/toasteez/repos",
      "events_url": "https://api.github.com/users/toasteez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toasteez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:05:13Z",
    "updated_at": "2016-07-21T12:05:13Z",
    "author_association": "NONE",
    "body": "Is there a better way to align?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234257895",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234257895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234257895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDI1Nzg5NQ==",
    "user": {
      "login": "toasteez",
      "id": 4855603,
      "node_id": "MDQ6VXNlcjQ4NTU2MDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4855603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toasteez",
      "html_url": "https://github.com/toasteez",
      "followers_url": "https://api.github.com/users/toasteez/followers",
      "following_url": "https://api.github.com/users/toasteez/following{/other_user}",
      "gists_url": "https://api.github.com/users/toasteez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toasteez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toasteez/subscriptions",
      "organizations_url": "https://api.github.com/users/toasteez/orgs",
      "repos_url": "https://api.github.com/users/toasteez/repos",
      "events_url": "https://api.github.com/users/toasteez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toasteez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T13:47:07Z",
    "updated_at": "2016-07-21T13:47:07Z",
    "author_association": "NONE",
    "body": "I am reopening as there does not seem to be consistent behavior for a cumprod formula? `100*((1+dr / 100).cumprod()-1)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234472991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234472991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234472991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ3Mjk5MQ==",
    "user": {
      "login": "toasteez",
      "id": 4855603,
      "node_id": "MDQ6VXNlcjQ4NTU2MDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4855603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toasteez",
      "html_url": "https://github.com/toasteez",
      "followers_url": "https://api.github.com/users/toasteez/followers",
      "following_url": "https://api.github.com/users/toasteez/following{/other_user}",
      "gists_url": "https://api.github.com/users/toasteez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toasteez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toasteez/subscriptions",
      "organizations_url": "https://api.github.com/users/toasteez/orgs",
      "repos_url": "https://api.github.com/users/toasteez/repos",
      "events_url": "https://api.github.com/users/toasteez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toasteez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T07:23:02Z",
    "updated_at": "2016-07-22T07:23:02Z",
    "author_association": "NONE",
    "body": "I tried the set_levels with `verify_integrity = False` but this yieds:\n\nThe failing command can be changed to `drc.columns.set_levels(['daily_return_cumulative'], level=2, inplace=True, verify_integrity = False)` however this yields an `algos.cp35-win_amd64.pyd` **unhandled exception**\n\n![image](https://cloud.githubusercontent.com/assets/4855603/17049474/d701bede-4fed-11e6-9831-b27b73a71865.png)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234506262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234506262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234506262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDUwNjI2Mg==",
    "user": {
      "login": "toasteez",
      "id": 4855603,
      "node_id": "MDQ6VXNlcjQ4NTU2MDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4855603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toasteez",
      "html_url": "https://github.com/toasteez",
      "followers_url": "https://api.github.com/users/toasteez/followers",
      "following_url": "https://api.github.com/users/toasteez/following{/other_user}",
      "gists_url": "https://api.github.com/users/toasteez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toasteez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toasteez/subscriptions",
      "organizations_url": "https://api.github.com/users/toasteez/orgs",
      "repos_url": "https://api.github.com/users/toasteez/repos",
      "events_url": "https://api.github.com/users/toasteez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toasteez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T10:06:10Z",
    "updated_at": "2016-07-22T10:06:10Z",
    "author_association": "NONE",
    "body": "**Code for checking:**\n\n```\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(\n[\n    [5777, 100, 5385, 200, 5419, 4887, 100, 200],\n    [4849, 0, 4539, 0, 3381, 0, 0, ],\n    [4971, 0, 3824, 0, 4645, 3424, 0, 0, ],\n    [4827, 200, 3459, 300, 4552, 3153, 100, 200, ],\n    [5207, 0, 3670, 0, 4876, 3358, 0, 0, ],\n],\nindex=pd.to_datetime(['2010-01-01',\n                      '2010-01-02',\n                      '2010-01-03',\n                      '2010-01-04',\n                      '2010-01-05']),\ncolumns=pd.MultiIndex.from_tuples(\n    [('Portfolio A', 'GBP', 'amount'), ('Portfolio A', 'GBP', 'injection'),\n     ('Portfolio B', 'EUR', 'amount'), ('Portfolio B', 'EUR', 'injection'),\n     ('Portfolio A', 'USD', 'amount'), ('Portfolio A', 'USD', 'injection'),\n     ('Portfolio B', 'JPY', 'amount'), ('Portfolio B', 'JPY', 'injection')])\n).sortlevel(axis=1)\n\namount = df.loc[:, pd.IndexSlice[:, :, 'amount']]\ninject = df.loc[:, pd.IndexSlice[:, :, 'injection']]\ndav = amount - amount.shift() - inject.shift().values\ndav.columns.set_levels(['daily_added_value'], level=2, inplace=True)\ndf = pd.concat([df, dav], axis=1).sortlevel(axis=1)\n\ndav = df.loc[:, pd.IndexSlice[:, :, 'daily_added_value']]\namount = df.loc[:, pd.IndexSlice[:, :, 'amount']]\ndr = (dav.values / amount.shift()) * 100\ndr.columns.set_levels(['daily_return'], level=2, inplace=True)\ndf = pd.concat([df, dr], axis=1).sortlevel(axis=1)\n\n## TODO Fail\n\ndr = df.loc[:, pd.IndexSlice[:, :, 'daily_return']]\ndrc = (100 * (1 + dr / 100).cumprod()-1)\ndrc = drc.replace([np.inf, -np.inf], np.nan)\nprint(drc.head()) # DataFrame looks OK???\n\n# Fails here when verify_integrity is True (levels.max() recursion error and when False algo exception\ndrc.columns.set_levels(['dr_cumulative'], level=2, inplace=True, verify_integrity = False)\ndf = pd.concat([df, drc], axis=1).sort_index(axis=1)`\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234517318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234517318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234517318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDUxNzMxOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T11:07:00Z",
    "updated_at": "2016-07-22T11:07:00Z",
    "author_association": "MEMBER",
    "body": "@toasteez I opened a separate issue for the `inplace=True` case: https://github.com/pydata/pandas/issues/13754\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234521562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-234521562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 234521562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDUyMTU2Mg==",
    "user": {
      "login": "toasteez",
      "id": 4855603,
      "node_id": "MDQ6VXNlcjQ4NTU2MDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4855603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toasteez",
      "html_url": "https://github.com/toasteez",
      "followers_url": "https://api.github.com/users/toasteez/followers",
      "following_url": "https://api.github.com/users/toasteez/following{/other_user}",
      "gists_url": "https://api.github.com/users/toasteez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toasteez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toasteez/subscriptions",
      "organizations_url": "https://api.github.com/users/toasteez/orgs",
      "repos_url": "https://api.github.com/users/toasteez/repos",
      "events_url": "https://api.github.com/users/toasteez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toasteez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T11:33:37Z",
    "updated_at": "2016-07-22T11:48:19Z",
    "author_association": "NONE",
    "body": "Great :+1:   The work around I am using is:\n\n```\ndef map_level(df, dct, level=2):\n    index = df.index\n    index.set_levels([[dct.get(item, item) for item in names] if i==level else names\n                                for i, names in enumerate(index.levels)], inplace=True)\ndct = {'daily_return':'daily_cumulative_return'}\nmap_level(drc.T, dct, level=2)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248009216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-248009216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 248009216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODAwOTIxNg==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T14:28:42Z",
    "updated_at": "2016-09-19T14:28:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toasteez If I understand your question correctly, the issue here is that `set_levels` is not doing what you think it's doing. A `MultiIndex` has a `levels` component and a `labels` component. The `levels` are the various names for the different values that the MultiIndex can take on, and the `labels` associates each column with a given level. When you say `set_levels`, what you're doing is changing the possible names that a column can have, but importantly, you're not changing the `labels`. So concretely, if you have the following MultiIndex: \n\n```\nIn [1]: multi = MultiIndex.from_product([['A', 'B'], ['a', 'b']])\nIn [2]: multi\nOut[2]: \nMultiIndex(levels=[[u'A', u'B'], [u'a', u'b']],\n           labels=[[0, 0, 1, 1], [0, 1, 0, 1]])\n```\n\nand then change the `levels` at the second layer to `'a'`, you will get an error because the `labels` say that you should look at the second entry in the list to find the correct column header, but there is only one entry in the list. \n\nThat's what's happening in your example. The columns for `dr` look like: \n\n```\nIn [3]: dr.columns\nOut[3]: \nMultiIndex(levels=[[u'Portfolio A', u'Portfolio B'], [u'EUR', u'GBP', u'JPY', u'USD'], [u'amount', u'daily_added_value']],\n           labels=[[0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 3, 3, 0, 0, 2, 2], [0, 1, 0, 1, 0, 1, 0, 1]])\n```\n\nand if you set the last level to be a list of length 1, your `labels` value will still be saying that you should look at the second entry in the list, which doesn't exist. That's why you get the error, which states that `On level 2, label max (1) >= length of level  (1)`, because that's exactly what's happening here.  \n\nIf you want to reset the level from scratch, you would need to do `droplevel` and reconstruct it or something similar (something like this: http://stackoverflow.com/questions/14744068/prepend-a-level-to-a-pandas-multiindex).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248637258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-248637258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 248637258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYzNzI1OA==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T14:54:24Z",
    "updated_at": "2016-09-21T14:54:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I think this can be closed unless @toasteez objects -- I don't see any further action here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426960134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13741#issuecomment-426960134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13741",
    "id": 426960134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjk2MDEzNA==",
    "user": {
      "login": "xoelop",
      "id": 8508402,
      "node_id": "MDQ6VXNlcjg1MDg0MDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8508402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xoelop",
      "html_url": "https://github.com/xoelop",
      "followers_url": "https://api.github.com/users/xoelop/followers",
      "following_url": "https://api.github.com/users/xoelop/following{/other_user}",
      "gists_url": "https://api.github.com/users/xoelop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xoelop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xoelop/subscriptions",
      "organizations_url": "https://api.github.com/users/xoelop/orgs",
      "repos_url": "https://api.github.com/users/xoelop/repos",
      "events_url": "https://api.github.com/users/xoelop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xoelop/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T10:04:29Z",
    "updated_at": "2018-10-04T10:04:29Z",
    "author_association": "NONE",
    "body": "I think this is still not working. \r\n\r\nIn this case, selecting top-level columns from a multiindex of a df:\r\n\r\n`data = sales.set_index(keys=[sales.index,  'descr',  'PERIODO']) `\r\n`\r\ndata = data.unstack(['descr', 'PERIODO'])[cols]`\r\n\r\nand then making \r\n`res.columns.levels[0]`\r\n\r\nthe result is bigger than `cols`. It's the same columns that the original DataFrame (sales) had"
  }
]
