[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100949655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10102#issuecomment-100949655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10102",
    "id": 100949655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDk0OTY1NQ==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-11T15:40:20Z",
    "updated_at": "2015-05-11T15:40:20Z",
    "author_association": "MEMBER",
    "body": "This is caused by `pytz` spec. In normal `datetime` case, tz must be `localize`d to determine whether the date belongs to DST.\n\n```\nimport pytz\n\n# if not initialized\n[pytz.timezone(\"US/Eastern\")]\n# [<DstTzInfo 'US/Eastern' LMT-1 day, 19:04:00 STD>]\n\n# after localize\n[pytz.timezone(\"US/Eastern\").localize(datetime.datetime(2015, 1, 1)).tzinfo]\n[<DstTzInfo 'US/Eastern' EST-1 day, 19:00:00 STD>]\n```\n\nHowever, `DatetimeIndex` can have dates beyond the DST boundary, it stores passed tz as it is. Thus, it holds uninitialized tz in your case. Workarounds are:\n\n```\n# once localize tz and pass it to date_range\ntz = pytz.timezone(\"US/Eastern\").localize(datetime.datetime(2015, 1, 1)).tzinfo\nidx = pd.date_range(\"2015-01-01\", \"2015-01-03\", freq=\"D\", tz=tz)\n[idx.tz]\n# [<DstTzInfo 'US/Eastern' EST-1 day, 19:00:00 STD>]\n\n# or use other pytz timezone works properly.\nidx = pd.date_range(\"2015-01-01\", \"2015-01-03\", freq=\"D\", tz=\"EST5EDT\")\n[idx.tz]\n# [<DstTzInfo 'EST5EDT' EST-1 day, 19:00:00 STD>]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/101026125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10102#issuecomment-101026125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10102",
    "id": 101026125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNjEyNQ==",
    "user": {
      "login": "JackKelly",
      "id": 460756,
      "node_id": "MDQ6VXNlcjQ2MDc1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/460756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JackKelly",
      "html_url": "https://github.com/JackKelly",
      "followers_url": "https://api.github.com/users/JackKelly/followers",
      "following_url": "https://api.github.com/users/JackKelly/following{/other_user}",
      "gists_url": "https://api.github.com/users/JackKelly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JackKelly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JackKelly/subscriptions",
      "organizations_url": "https://api.github.com/users/JackKelly/orgs",
      "repos_url": "https://api.github.com/users/JackKelly/repos",
      "events_url": "https://api.github.com/users/JackKelly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JackKelly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-11T19:32:04Z",
    "updated_at": "2015-05-11T19:32:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wonderful, thanks loads for the very quick reply and for explaining the issue :)\n\nThe solution I went for in the end works something like this (where `start` and `end` are tz-aware Timestamps in the `US/Eastern` timezone):\n\n``` python\ntz = None if start.tz is None else start.tz.zone\nindex = pd.date_range(\n    start.tz_localize(None), end.tz_localize(None), tz=tz,\n    closed='left', freq=freq)\n```\n"
  }
]
