[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401632134",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-401632134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 401632134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTYzMjEzNA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-07-01T20:48:23Z",
    "updated_at": "2018-09-24T22:56:14Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=h1) Report\n> Merging [#21699](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/3ab9dbd64b4a057eda53b841f43999fb319869e9?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21699/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21699      +/-   ##\n==========================================\n+ Coverage   92.18%   92.19%   +<.01%     \n==========================================\n  Files         169      169              \n  Lines       50820    50821       +1     \n==========================================\n+ Hits        46850    46852       +2     \n+ Misses       3970     3969       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.6% <100%> (ø)` | :arrow_up: |\n| #single | `42.38% <57.14%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/21699/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.39% <ø> (ø)` | :arrow_up: |\n| [pandas/core/indexes/category.py](https://codecov.io/gh/pandas-dev/pandas/pull/21699/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9jYXRlZ29yeS5weQ==) | `97.54% <100%> (+0.27%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=footer). Last update [3ab9dbd...6aa94e9](https://codecov.io/gh/pandas-dev/pandas/pull/21699?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401967202",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-401967202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 401967202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTk2NzIwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-02T23:27:06Z",
    "updated_at": "2018-07-02T23:27:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "so 2) is the prefered solution here. you can simply use the templating like we do in most modules which generates code. its not trivial but not super complicated either."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402356292",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402356292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402356292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjM1NjI5Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T03:58:53Z",
    "updated_at": "2018-07-04T03:58:53Z",
    "author_association": "MEMBER",
    "body": "@topper-123 what issues were you running into with Cython? As far as generating the indexes goes I would think you could just add the appropriate types below:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2b136054db3b8f4c8d1aa33160c4bbe3b8ce940e/pandas/_libs/index_class_helper.pxi.in#L14\r\n\r\nNot sure how you were planning to dynamically select the appropriate engine in `category.py` but as far as generating those engines in the Cython layer I think most of the foundation is already in place"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402419574",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402419574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402419574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQxOTU3NA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T09:20:43Z",
    "updated_at": "2018-07-04T09:20:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I think I understand the design now, at least. What is the templating language used and how is the pxi-file generated?\r\n\r\nSo would the correct approach be to:\r\n* add int8_t, int16_t etc. to that list in index_helper_pxi.in,\r\n* similarly add them to the list in algos.common_helper.pxi.in,\r\n* ensure that CategoricalIndex._engine is of the correct type,\r\n* avoid the  casting to int64 in  ``CategoricalIndex._engine``?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402426572",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402426572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402426572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQyNjU3Mg==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T09:45:53Z",
    "updated_at": "2018-07-04T10:37:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, got algos.common_helper.pxi.in compiling and works fine.\r\n\r\nindex_helper.pxi throws a compiler error. I added to the dtype list in index_helper.pxi.in:\r\n\r\n```\r\n          ('Int8', 'int8', 'int8_t'),\r\n```\r\n\r\nbut get this error when compiling:\r\n\r\n```cython\r\ncythoning pandas\\_libs/index.pyx to pandas\\_libs\\index.c\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n    cdef _maybe_get_bool_indexer(self, object val):\r\n        cdef:\r\n            ndarray[uint8_t, ndim=1, cast=True] indexer\r\n            ndarray[intp_t, ndim=1] found\r\n            ndarray[int8_t] values\r\n                         ^\r\n------------------------------------------------------------\r\n\r\npandas\\_libs\\index_class_helper.pxi:179:26: Invalid type.\r\n````\r\n\r\nIt appears the compiler does not like the int8_t type. Using ``('UInt8', 'uint8', 'uint8_t'),`` instead compiles without errors.\r\n\r\nAny ideas what's happening?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402470913",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402470913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402470913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQ3MDkxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T12:55:17Z",
    "updated_at": "2018-07-04T12:55:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to do the imports of ``int8_t`` in ``index.pyx`` itself (see the top). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402560981",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402560981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402560981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU2MDk4MQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T21:21:07Z",
    "updated_at": "2018-07-04T21:21:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, got everything compiling with Int8Engine, which is good.\r\n\r\nHowever, when running, it complains there is no Int8HashTable. Seems like there isn't an easy way to create an Int8HashTable, is that correct?\r\n\r\n```python\r\n~\\Documents\\Python\\pandasdev\\pandasdev\\pandas\\_libs\\index_class_helper.pxi in pandas._libs.index.Int8Engine._make_hash_table()\r\n    212\r\n    213     cdef _make_hash_table(self, n):\r\n--> 214         return _hash.Int8HashTable(n)\r\n\r\nAttributeError: module 'pandas._libs.hashtable' has no attribute 'Int8HashTable'\r\n```\r\n\r\nI tried looking into using a Int64HashTable in Int8Engine, but that seems to bring a different set of tradeoffs...\r\n\r\nIs there an easy way to create a Int8HashTable, or is it reasonable to use a Int64HashTable in Int8Engine?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402564030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402564030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402564030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU2NDAzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-04T21:52:40Z",
    "updated_at": "2018-07-04T21:52:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "you might need to create the other hash tables  (definitions) as well\r\ni think we only have 32 & 64 hits atm"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402703281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402703281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402703281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjcwMzI4MQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T12:17:35Z",
    "updated_at": "2018-07-05T12:17:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I've tried creating the int8 hash table, but got some issues. Everything compiles up till and including \" add Int8Index\", but that runs into the issue that no Int8HashTable existst. I've tried creating a Int8HashTable (see the commit \"add Int8HashTable\"), but I can't get  to compile.\r\n\r\nIt gives this compilation error:\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n        self.external_view_exists = True\r\n        return self.ao\r\n\r\n    cdef inline void append(self, int8_t x):\r\n\r\n        if needs_resize(self.data):\r\n                      ^\r\n------------------------------------------------------------\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi:287:23: no suitable method found\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef class Int8HashTable(HashTable):\r\n\r\n    def __cinit__(self, size_hint=1):\r\n        self.table = kh_init_int8()\r\n                                ^\r\n------------------------------------------------------------\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi:1291:33: undeclared name not builtin: kh_init_int8\r\n```\r\n\r\nI've tried messing with khash.pxd to get that kh_*_int8 working, but can't get it running.\r\n\r\nWhat does khash.pxd do? It seems to in turn depend on khash_python.h, which only seems to have int64, int32 anf float64 version available. Must that be changed before getting a Int8HashTable working?\r\n\r\nGuidance would be very much appreciated.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402786976",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402786976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402786976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjc4Njk3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T16:55:05Z",
    "updated_at": "2018-07-05T16:55:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, i guess khash doesn't support this either.\r\n\r\nok, so maybe let's do a precursor PR to do this properly "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402858788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-402858788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 402858788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg1ODc4OA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T21:32:44Z",
    "updated_at": "2018-07-05T21:32:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, just to confirm, so you/someone else will do the PR to get Int8HashTable etc. working, and I'll wait for that and afterwards I will implement Int8Engine etc?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403295753",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-403295753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 403295753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI5NTc1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-08T15:32:13Z",
    "updated_at": "2018-07-08T15:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@topper-123 well I suppose someone can do a PR to make other types of hashtables work. cc @pandas-dev/pandas-core "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403319356",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-403319356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 403319356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzMxOTM1Ng==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-08T21:41:06Z",
    "updated_at": "2018-07-08T21:41:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would be great. If someone makes the hash tables I will take this the rest of the way."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409516021",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-409516021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 409516021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTUxNjAyMQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T09:39:16Z",
    "updated_at": "2018-08-10T07:51:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've made a solution for the problem of not having Int8HashTable, Int16HashTable and Int32HashTable by using Int64HashTable in Int8Engine etc. All the tests pass and performance is the same as above.\r\n\r\nIs this an ok approach? I could then add some tests and ASVs as needed.\r\n\r\nA nice side effect BTW is that we now have and can use ``pd._libs.algos.is_monotonic_int8``, so we don't have to convert to int64 when checking for monoticity and uniqueness:\r\n\r\n```python\r\n>>> n = 1_000_000\r\n>>> ci = pd.CategoricalIndex(list('a' * n + 'b' * n + 'c' * n))\r\n# the below is called in ci.is_monotonic etc. in master\r\n>>> %timeit pd._libs.algos.is_monotonic_int64(ci.codes.astype('int64'), False)\r\n21.6 ms  # master\r\n# the below is called in ci.is_monotonic etc. in this PR\r\n>>> %timeit pd._libs.algos.is_monotonic_int8(ci.codes, False)\r\n5.6 ms  # this PR\r\n```\r\n\r\nSo all code that calls CategoricalIndex.is_monotonic/.is_unique will benefit also.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411828284",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-411828284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 411828284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTgyODI4NA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T17:04:03Z",
    "updated_at": "2018-08-09T17:04:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, ``array.astype('int64', copy=False)`` won't work as explained above.\r\n\r\nI don't see any good way forward other than someone commiting to make an Int8/16/32HashTable at some point. The question is thought if this PR needs to wait for that, or can be pulled in now and the relevant lines be changed when the hash table is implemented. \r\n\r\nI argue pulling this in now, as index operations are critical for performance and that would allow me to pursue a few more index-related performance issues. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411972857",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-411972857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 411972857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTk3Mjg1Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T04:36:33Z",
    "updated_at": "2018-08-10T04:36:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "``algos.ensure_int64(values)`` ends up calling ``values.astype(np.int64)``, and therefore also causes the slowdown for int8/16/32 arrays that we want to avoid.\r\n\r\nA *technically* possible solution to avoid that if statement while keeping the speed improvements would be to input a int64 array into _engine:\r\n\r\n```python\r\n    def _engine(self):\r\n        codes = self.codes.astype('int64')\r\n        return self._engine_type(lambda: codes, len(self))\r\n```\r\n\r\nBut that would keep an int64 array in memory, in addition to an int8 array, so doesn't make any sense memorywise. We want to just use the existing int8 array.\r\n\r\nI made another solution, where I've moved this specific implementation to index_class_helper.pxi.in. This makes its location more specific to the problem it solves."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412237448",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412237448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412237448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjIzNzQ0OA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-11T00:29:06Z",
    "updated_at": "2018-08-11T00:29:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've addressed the comments. Haven't made any new ASVs though, will look at it tomorrow, but  many of the new index engines are not currently used, so have to think about how to speed test them.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412264928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412264928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412264928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI2NDkyOA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-11T10:00:27Z",
    "updated_at": "2018-08-11T10:00:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "The travis failure is the unexpected ResourceWarning, so unrelated to this PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412315096",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412315096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412315096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMxNTA5Ng==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T03:00:17Z",
    "updated_at": "2018-08-12T03:17:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a commit with ASVs. I check ``*Engine.get_loc`` and get these result:\r\n\r\n```\r\n[  0.00%] · For pandas commit hash 166c72e4:\r\n[  0.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[  0.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 25.00%] ··· Running indexing_engines.NumericEngineIndexing.time_get_loc                                                     3.81±0.08μs;...\r\n[ 50.00%] ··· Running indexing_engines.ObjectEngineIndexing.time_get_loc                                                      5.20±0.07μs;...\r\n[ 50.00%] · For pandas commit hash 03707400:\r\n[ 50.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 50.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 75.00%] ··· Running indexing_engines.NumericEngineIndexing.time_get_loc                                                              failed\r\n[100.00%] ··· Running indexing_engines.ObjectEngineIndexing.time_get_loc                                                               failed\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```\r\n\r\nThe failure at commit hash 03707400 is ok, as most indexing engines were not made yet there (Int8Engine etc. are new). The speed of 4.07μs is as expected.\r\n\r\nI didn't make timing checks for ``is_monotonic*`` and ``is_unique``, as those are both cached, so it won't give any benefits timing them.\r\n\r\nIs there anything else that should be timed?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412340485",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412340485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412340485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjM0MDQ4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T12:45:23Z",
    "updated_at": "2018-08-12T12:45:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry I havent followed this closely, but you’ve added new indexing engines? Can you measure the size of the unzipped wheel before and after your changes?\n\n________________________________\nFrom: topper-123 <notifications@github.com>\nSent: Saturday, August 11, 2018 10:00:22 PM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Team mention\nSubject: Re: [pandas-dev/pandas] PERF: CategoricalIndex.get_loc should avoid expensive cast of .codes to int64 (#21699)\n\n\nI added a commit with ASVs. I check *Engine.get_loc and get these result:\n\n· Running 2 total benchmarks (2 commits * 1 environments * 1 benchmarks)\n[  0.00%] · For pandas commit hash 9df4167d:\n[  0.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\n[  0.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\n[ 50.00%] ··· Running indexing_engines.EngineIndexing.time_get_loc                                                      4.07±0.4μs;...\n[ 50.00%] · For pandas commit hash 03707400:\n[ 50.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\n[ 50.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\n[100.00%] ··· Running indexing_engines.EngineIndexing.time_get_loc                                                              failed\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\n\n\nThe failure at commit hash 0370740<https://github.com/pandas-dev/pandas/commit/0370740034978d3a63d4b8e5e2c96ff54e7e08ba> is ok, as most indexing engines were not made yet there (Int8Engine etc. are new). The speed of 4.07μs is as expected.\n\nI didn't make timing checks for is_monotonic* and is_unique, as those are both cached, so it won't give any benefits timing them.\n\nIs there anything else that should be timed?\n\n—\nYou are receiving this because you are on a team that was mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412315096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHIkd-MExSV46oY6ryf1a6wGLwOaRrks5uP5pGgaJpZM4U-cO6>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412365348",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412365348",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412365348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjM2NTM0OA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T19:16:57Z",
    "updated_at": "2018-08-12T19:16:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @TomAugspurger. Yes, CategoricalIndex typically work on int8 or int16 datatypes, so we need a corresponding indexing engine (Int8Engine if codes dtype is int8, etc.) to avoid converting to int64 and slowing down.\r\n\r\nStrictly speaking, this PR only requires we do integer engines, but It seems sensible to me to do engines for the smaller UInts and Floats also.\r\n\r\nI haven't worked with wheels myself, how do I find/create them? The size of the build folder was 78,5 MB before and 80,5 MB after this PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412366777",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412366777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412366777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjM2Njc3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T19:40:54Z",
    "updated_at": "2018-08-12T19:40:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "python setup.py bdist_wheel will create a wheel. That can be unzipped to\nget the distribution size.\n\nI just want to raise the cost of templating across many dtypes, since\nthat's what tends to blow up the distribution size.\n\nOn Sun, Aug 12, 2018 at 2:17 PM topper-123 <notifications@github.com> wrote:\n\n> Hey @TomAugspurger <https://github.com/TomAugspurger>. Yes,\n> CategoricalIndex typically work on int8 or int16 datatypes, so we need a\n> corresponding indexing engine (Int8Engine if codes dtype is int8, etc.) to\n> avoid converting to int64 and slowing down.\n>\n> Strictly speaking, this PR only requires we do integer engines, but It\n> seems sensible to me to do engines for the smaller UInts and Floats also.\n>\n> I haven't worked with wheels myself, how do I find/create them? The size\n> of the build folder was 78,5 MB before and 80,5 MB after this PR.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412365348>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIpLFpA-ViQmgBfNtZ3gwTWjSyCYqks5uQH8ugaJpZM4U-cO6>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412367790",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412367790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412367790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjM2Nzc5MA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T19:58:15Z",
    "updated_at": "2018-08-12T19:58:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I get unzipped 24.5 MB (master) vs 24.8 MB (this PR)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412576244",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412576244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412576244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU3NjI0NA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T16:19:01Z",
    "updated_at": "2018-08-13T16:19:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this ok?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412650346",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412650346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 412650346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjY1MDM0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T20:21:40Z",
    "updated_at": "2018-08-13T20:21:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems OK, thanks for checking.\n\nOn Mon, Aug 13, 2018 at 11:19 AM topper-123 <notifications@github.com>\nwrote:\n\n> Is this ok?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/21699#issuecomment-412576244>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIrkP96RDWBcY0RWTcD0s4YpILeheks5uQab7gaJpZM4U-cO6>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413176569",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-413176569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 413176569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzE3NjU2OQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T11:58:39Z",
    "updated_at": "2018-08-15T11:58:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "hey @jreback , is this ok to pull in?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413986367",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-413986367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 413986367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzk4NjM2Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T20:57:45Z",
    "updated_at": "2018-08-17T20:57:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Changes according to comments."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415957938",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-415957938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 415957938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk1NzkzOA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-25T09:57:40Z",
    "updated_at": "2018-08-25T09:57:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this ok to merge in?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415958992",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-415958992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 415958992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk1ODk5Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-25T10:16:52Z",
    "updated_at": "2018-08-25T10:16:52Z",
    "author_association": "MEMBER",
    "body": "ping @jreback "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415960464",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21699#issuecomment-415960464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21699",
    "id": 415960464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk2MDQ2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-25T10:44:24Z",
    "updated_at": "2018-08-25T10:44:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "will have a look"
  }
]
