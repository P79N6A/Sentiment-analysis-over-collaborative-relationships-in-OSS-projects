[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18118575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18118575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18118575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE4NTc1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-19T14:35:12Z",
    "updated_at": "2013-05-19T14:35:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "To follow on from your [comment](https://github.com/pydata/pandas/issues/1996#issuecomment-17911267), we shouldn't we be using `&` and `|`? _I think this may also have the benefit of `all` and `any` just working._\n\nAlso `~` for not/invert (since would make it the same as numpy).\n\nI haven't got my head around numexpr yet, so I may be talking complete nonsense. (I've moved Term to expressions without breaking things, and changed the repr to eval back to itself (was there a reason for it not?).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18118743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18118743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18118743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE4NzQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-19T14:47:42Z",
    "updated_at": "2013-05-19T14:47:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree about the operators (though I think you actually need to accept _both_), these are always going to be in a string expression in any event....because you need delayed evaluation\nbut since we actually DO want the `&` etc...you can just replace them (e.g. this is really a user interface issue), we are not actually going to evaluate them\n\ne.g.\n\n```\ndf[(df > 0) and (df < 10)]\n```\n\nvs\n\n```\ndf['(df > 0) and (df < 10)]']\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18410310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18410310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18410310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDEwMzEw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T15:03:19Z",
    "updated_at": "2013-05-24T15:03:19Z",
    "author_association": "MEMBER",
    "body": "i'm sure everyone involved in this thread knows this but just wanted to point out that the precedence of `and` and `&` is different. if i was a first time user i would think that `df > 0 and df < 10` and `df > 0 & df < 10` do the same thing, so if both are going to be supported i think precedence rules should be kept as close to python as possible meaning parens are required for `&` but not for `and`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18411800",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18411800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18411800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDExODAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T15:27:45Z",
    "updated_at": "2013-05-24T15:27:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud this is in a string context, so in theory you can make them the same (as this is a big confusion I think in operating in pandas, I think people _expect_ them to be the same (even though they are wrong)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18412639",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18412639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18412639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDEyNjM5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T15:41:21Z",
    "updated_at": "2013-05-24T15:41:21Z",
    "author_association": "MEMBER",
    "body": "@jreback sure. i was just semi-thinking-out-loud here, thought that it might warrant a discussion. this goes back to python core devs not wanting to provide the ability to overload `not` `and` and `or` so numpy was forced to overload bitwise operators for boolean operations (there's a youtube video of a discussion about this with GVR, there's even a patch to core python that allows you to do this). i _really_ wish that pep went through *sigh*. i didn't realize there was a big confusion here, since this really has nothing to do with pandas, it's a language feature/bug. i was just thinking that adding more parsing rules to remember is annoying to users.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18412957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18412957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18412957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDEyOTU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T15:46:20Z",
    "updated_at": "2013-05-24T15:46:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "it's a valid point\n\nthe purpose of eval is to facilitate multi expression parsing that we will evaluate in Numexpr\nso we have to have a string input (to avoid python evaluation of the sub expressions)\nor maybe there is a way to disable this (like how %timeit works in ipython)\nbut i think they r using an input hook and hence everything really is a string\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18413615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18413615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18413615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDEzNjE1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T15:56:38Z",
    "updated_at": "2013-05-24T15:56:38Z",
    "author_association": "MEMBER",
    "body": "@jreback u can do it with the `cmd` module too. i think ipython used to use that or maybe they still do. i think only macros would allow you do this without string literals. btw there is now [a Python macros library](https://github.com/lihaoyi/macropy). i haven't tried it out but it looks like fun. another possibility is to support numba as a method although first things first (numexpr). do u already have something going for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18414701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18414701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18414701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE0NzAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:14:30Z",
    "updated_at": "2013-05-24T16:14:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd said he was giving a stab\nAndy can u post a link to your branch?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18414932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18414932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18414932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE0OTMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:18:35Z",
    "updated_at": "2013-05-24T16:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud `numba` is interesting, but the infrastructure requirement is high, and in any event, its basically using numexpr under the hood :) (as well as `ctable` for storage)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18415055",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18415055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18415055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE1MDU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:21:03Z",
    "updated_at": "2013-05-24T16:21:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I reread your question\n\nthe issue is this:  `df[(df>0) & (df<10)]` is evaluated as 3 separate sub-expressions, plus a boolean mask selection\n\nwhile\n\n`df.eval('(df>0) & (df<10)')` can be evaluated (after alignment) in a single numexpr pass (and then a boolean mask) to return the dataframe, so can be a massive speedup\n\nthat's the main reason for this function\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18415243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18415243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18415243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE1MjQz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:24:24Z",
    "updated_at": "2013-05-24T16:24:24Z",
    "author_association": "MEMBER",
    "body": "@jreback that is pretty cool. i haven't done much with numexpr, i assumed that pandas uses it when it can...is that a fallacious assumption? should i be explicitly using numexpr?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18416500",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18416500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18416500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE2NTAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:46:14Z",
    "updated_at": "2013-05-24T16:46:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "it's used in pytables for query processing\nand in most evaluations now as of 0.11\n(you need a fairly big frame for it to matter)\n\nsee the core/expressions module\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18416691",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18416691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18416691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE2Njkx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:49:56Z",
    "updated_at": "2013-05-24T16:49:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't done much so far, I've moved Term to expressions and added some helper functions for that class, not have I really looked in to numexp yet.\n\nI kind of lost my way on the road map... and may be totally confused atm.\n\nAm I way off here?\n\n~~1. move term to expression~~\n2. create class for \"termset\" (not sure what name, I was thinking this would be a list (possibly of termsets) with a flag whether it was all/any).\n3. work out how to process termsets strings numpexp (is this the tricky part?)\n4. create method for \"termset\" to strings which can be processed to numexp e.g. \n5. create parser for our DSL to termset e.g. '(df>0) & (df<10)' -> [Term(df, '>', 0), Term(df, '<', 10)]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18418021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18418021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18418021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE4MDIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T17:16:11Z",
    "updated_at": "2013-05-24T17:16:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "so there are 3 goals here:\n\n1) parser to turn:\n\n```\n 'df[(df>0)&(df<10)]'\n```\n\ninto this (call this the parsed_expr)\n\n```\ndf[_And(Term('df','>',0),Term('df','<','10'))]\n```\n\n2) take a parsed_expr, align the variables (e.g. perform stuff like what `combine_frame`, `combine_series`, `combine_scalar` does (e.g. the alignment/reindexing steps), call this the aligned_expr\n\n3) take aligned_expr and turn this into a numexpr expression (like what `Term` does and the `expressions` module does (though its very simple), this would be an exapansion of `expresssions` to take in an aligned `Term`s with their boolean operators (e.g. `_And/_Or/_Not` and parens)\n\n1) involves tokenizing/ast manip (kind of like `numexpr.evaluate` does) to form the `Terms`; I am not sure how tricky this is, so we were going to skip for now\n\n2) this is straightforward: take the parsed_expr and substitue variables that are aligned (keep frames as frames), don't need to exapand scalars at allow, mainly just reindex things that need, create the aligned_expr\n\n3) this is straightforward too, just take the term expressions and generate the numexpr itself\n\nso I think `termset` is really `Term`, plus the boolean operators, and a grouping operator (the parens)\nthese just allow easy expression manip (your 2)\nyour 3 (skip for now, that's my 1)\n\nyour 4 is my 3\n\nI don't think you need 5\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18419196",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18419196",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18419196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDE5MTk2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T17:38:39Z",
    "updated_at": "2013-05-24T17:39:07Z",
    "author_association": "MEMBER",
    "body": "@jreback i know u said skip 1 but i can do that if u want (lots of nice python builtins for dealing with python source) while @hayd does 2 and 3. what would be allowed to be parsed? `expr`s in the python grammar? or just boolean exprs? could start with booleans fornow and extend after that is working...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18420732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18420732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18420732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDIwNzMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T18:06:20Z",
    "updated_at": "2013-05-24T18:06:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "the more there merrier!\n\nlet's start with the example\n\n```\ndf.eval('(df>0)&(df<10)')\n```\n\nThis is really about the masks as that's where all the work is done\n\nbut I think it would be nice evenutally to do something on the rhs as well:\n\n```\npd.eval('df[(df>0)&(df<10)] = df * 2 + 1', engine='numexpr')\n```\n\nso we can support `getitem` _and_ `setitem` and pass both the lhs and rhs to the evaluator\n\n(imagine engine = 'multi-process' or 'out-of-core')......\n\nto the heck with **blaze**! (well maybe `engine=blaze` is ok too)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18424130",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18424130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18424130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI0MTMw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:11:42Z",
    "updated_at": "2013-05-24T19:11:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I was worried that nested Terms wouldn't come for free with _And and _Or, but I'll put something together imminently and we can see whether it does. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18424157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18424157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18424157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI0MTU3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:12:29Z",
    "updated_at": "2013-05-24T19:12:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can just tell everyone it's blaze...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18424305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18424305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18424305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI0MzA1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:15:33Z",
    "updated_at": "2013-05-24T19:16:22Z",
    "author_association": "MEMBER",
    "body": "i've got it parsing nested and terms already :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18424324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18424324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18424324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI0MzI0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:15:56Z",
    "updated_at": "2013-05-24T19:16:46Z",
    "author_association": "MEMBER",
    "body": "albeit they are strings right now and only `&` (parsing `and` is different), i haven't written the `_And` class yet\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18424801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18424801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18424801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI0ODAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:24:31Z",
    "updated_at": "2013-05-24T19:24:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I would just use the `&`, `|`, and `~` for now (to keep consistent), can always add later\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18425578",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18425578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18425578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI1NTc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:39:50Z",
    "updated_at": "2013-05-24T19:39:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud \n\nthe end goal is to create a `numexpr` expression (the functionaility is in the `Selection` class in `io/pytables.py`); so the class that holds the parses expression (the nested _And/_Or) should parse to this (and has to do type translation and such), also this class could do the alignment I think (which is the reason for having the parsed expression, so you can basically just iterate thru all of the terms and see what needs to be aligned)\n\ne.g.\n\n```\nfor t in term_expression:\n      t.align()\n```\n\nTerm align (pseudo codish)\n\n```\ndef align(self):\n      self.lhs\n      self.op\n      self.rhs\n\n      if self.lhs ia DataFrame:\n           if self.rhs is a Series....\n                     is a Frame\n                     is a Scalar\n```\n\nmaybe return a new expression that is aligned\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18426554",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18426554",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18426554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI2NTU0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T19:57:57Z",
    "updated_at": "2013-05-24T19:58:31Z",
    "author_association": "MEMBER",
    "body": "ah i see. so an `Expr` class should hold the ands and ors which consist of terms (or nested expressions). `Expr` could have an align method which aligns and then passes to `numexpr`. is that correct?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18427088",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18427088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18427088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI3MDg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T20:08:28Z",
    "updated_at": "2013-05-24T20:08:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you actually need 3 classes here:\n\n1) `Term` which holds `lhs operator rhs` (and prob a reference back to the top-level `Expr` for variable inference`\n2)`Termset`, although maybe`Expr`, or maybe`Terms`? is better here (I mean a nested list of`_and,_or,_not`operators on the`Terms)\n3) Top-level, maybe `Expression`, which holds 2) the termset, and the engine and such\n\ne.g.\n\n```\npd.eval('df[(df>0)&(df<10)'])\n```\n\nyields\n\n```\nExpression():\n    original string\n    df[mask] (you need to keep this where)\n    termset of the boolean expression\n    engine\n    maybe an environment points (this is like a closure) but we are not fancy here :)\n\n    methods:\n        parse (create the termset)\n        align (have the termset align)\n        convert_to_engine_format (return the converted termset)\n```\n\n```\nTermset():\n     _and(Term('df','>',0),Term('df','<',10))\n     methods:\n          align (maybe return a new termset that is aligned)\n          convert_to_engine_format (return the converted to engine format,\n              this would be a string)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18427613",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18427613",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18427613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI3NjEz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T20:19:29Z",
    "updated_at": "2013-05-24T20:19:29Z",
    "author_association": "MEMBER",
    "body": "lol gh doesn't like ur rst flavored monospace\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18427893",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18427893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18427893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI3ODkz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T20:24:23Z",
    "updated_at": "2013-05-24T20:24:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This was where I was up to: https://github.com/hayd/pandas/tree/term-refactor\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18429692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18429692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18429692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI5Njky",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T20:59:47Z",
    "updated_at": "2013-05-24T20:59:47Z",
    "author_association": "MEMBER",
    "body": "possible engines right now are `'numexpr'` and `'pytables'`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18429964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18429964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18429964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI5OTY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T21:05:39Z",
    "updated_at": "2013-05-24T21:05:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "well....pytables target is the same, numexpr, only difference is that the Terms need to do different alignment (as they are scalar type conditions, e.g. `index>20130523`, where index is a `field` in the table, and the date gets translated to `i8`; so do need support for that (so yes you could use `engine=pytables`) to handle that, but in pytables need to have what I call the `queryables` dict passed in anyhow for validation (whereas in the case of a boolean expression you have the `df` passed in) (or taken from the `locals()`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18431570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18431570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18431570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDMxNTcw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T21:40:22Z",
    "updated_at": "2013-05-24T21:43:01Z",
    "author_association": "MEMBER",
    "body": "@jreback @hayd fyi for some reason `expressions.py` has dos line endings while, for example, frame.py does not. isn't git supposed to take of this? it's pretty annoying and will cause a billion and one merge conflicts...it's just that file: i just ran `dos2unix` on all of pandas and that's the only thing changed. i did this after a fresh clone\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18431687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3393#issuecomment-18431687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3393",
    "id": 18431687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDMxNjg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T21:43:07Z",
    "updated_at": "2013-05-24T21:43:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "that was might fault\nI had the wrong setting on git which used the widows line endings (I change my git so now it won't change them)\nI actually edit using xemacs on a pc even though I do everything on Linux \nso u could change them if u want no big deal\n"
  }
]
