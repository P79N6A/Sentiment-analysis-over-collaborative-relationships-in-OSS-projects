[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5753991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/560#issuecomment-5753991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/560",
    "id": 5753991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTM5OTE=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-16T22:37:46Z",
    "updated_at": "2012-05-16T22:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is working now (unless there was a more complex case you were thinking of?). \n\nIf I do:\n\n.. ipython::\n\n```\nIn [5]: long_series = Series(randn(1000))\n\nIn [6]: long_series.head()\nOut[6]:\n0   -0.663260\n1   -2.169555\n2    0.088584\n3    2.220296\n4   -0.149226\n\nIn [7]: long_series.tail(3)\nOut[7]:\n997   -1.818651\n998   -1.341884\n999   -0.033343\n```\n\nin basics.rst, the html output looks right (the output is replaced with newly sampled random numbers)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5792650",
    "html_url": "https://github.com/pandas-dev/pandas/issues/560#issuecomment-5792650",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/560",
    "id": 5792650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTI2NTA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-18T18:38:13Z",
    "updated_at": "2012-05-18T18:38:13Z",
    "author_association": "MEMBER",
    "body": "No. I mean stuff like:\n\n```\n.. ipython:: python\n\n   for i in range(5):\n       print 'foo'\n       print 'bar'\n```\n\nThe block parser is not \"greedy\" enough, it uses `ast.parse` to determine if lines read are valid Python code which they are after the first print statement. Can probably come up with a reasonable enough algorithm that looks at the indentation level to determine whether the block is done or not\n"
  }
]
