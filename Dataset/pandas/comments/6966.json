[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41397447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6966#issuecomment-41397447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6966",
    "id": 41397447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzk3NDQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-25T14:20:32Z",
    "updated_at": "2014-04-25T14:20:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "thats just a bug,\n should be `isnull().any()`\n\nbut can easily do:\n\n```\nIn [1]: s = pd.Series(np.arange(7))\n\nIn [3]: y = Series([3,3,3,3,3,4,4])\n\nIn [5]: s.where(s<y,y)\nOut[5]: \n0    0\n1    1\n2    2\n3    3\n4    3\n5    4\n6    4\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45424869",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6966#issuecomment-45424869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6966",
    "id": 45424869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDI0ODY5",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-08T00:32:00Z",
    "updated_at": "2014-06-08T00:32:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "What's the right idiom for allowing both scalars and vectors to pass here?  `isnull(3).any()` won't work because False doesn't have an `any` method and calling `as(any)array` might make a copy we don't want (not actually sure about that).  Could do use `hasattr`, or `try`/`except`, or even do an `is` check on False/True. \n\nBasically, is there already a scalar/vector idiom for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45446818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6966#issuecomment-45446818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6966",
    "id": 45446818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQ2ODE4",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-08T20:00:46Z",
    "updated_at": "2014-06-08T20:00:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd also like to note that pandas's `df.any()` aggregates across only one axis, while `ndarray.any()` aggregates the whole array regardless of dimensionality and shapes.\n"
  }
]
