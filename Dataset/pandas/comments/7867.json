[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50469179",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50469179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50469179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDY5MTc5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T12:26:44Z",
    "updated_at": "2014-07-29T12:26:44Z",
    "author_association": "MEMBER",
    "body": "With a single index `loc`, you get a NaN for the missing indexer:\n\n```\nIn [1]: s = pd.Series(range(3), index=['A','B','C'])\n\nIn [3]: s.loc[['A', 'D']]\nOut[3]:\nA     0\nD   NaN\ndtype: float64\n```\n\nTo be consistent, shouldn't this also be the case here? \nBut of course, what do you do with the second level ...\n\n```\nIn [7]: s.loc[['A','D']]\nOut[7]:\none  two\nA    bar    1\n     baz    2\n     foo    0\nD    ?      NaN\ndtype: int32\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50474105",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50474105",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50474105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDc0MTA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T13:14:55Z",
    "updated_at": "2014-07-29T13:14:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche you raise a good point. I don't think this is desirable. Well it IS possible, but you would then I think have to add the 2nd level with ALL of the possible values. I am not sure that is desirable. (or use explicity tuple reindexing, which DOES specify the labels).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50725093",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50725093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50725093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzI1MDkz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T07:27:25Z",
    "updated_at": "2014-07-31T07:27:25Z",
    "author_association": "MEMBER",
    "body": "late answer, you are right that the other possibility (include all labels of second level) is not really desirable, so no 'best' solution here. So OK for the merge. \nShould this be documented somewhere?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50743472",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50743472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50743472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQzNDcy",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T10:44:54Z",
    "updated_at": "2014-07-31T10:44:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> With a single index loc, you get a NaN for the missing indexer\n\nOh, I must have missed the moment when it got introduced, when was it? Is it too late to voice an objection? :)  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50743617",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50743617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50743617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQzNjE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T10:46:48Z",
    "updated_at": "2014-07-31T10:46:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "at least 0.12 iirc (note that is only for a list-like)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50744038",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50744038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50744038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQ0MDM4",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T10:52:17Z",
    "updated_at": "2014-07-31T10:52:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed:\n\n``` python\nIn [1]: s = pd.Series([1,2,3])\n\nIn [2]: s\nOut[2]: \n0    1\n1    2\n2    3\ndtype: int64\n\nIn [3]: s.loc[[1,2,3]]\nOut[3]: \n1     2\n2     3\n3   NaN\ndtype: float64\n\nIn [4]: s.loc[[1,2,3]] = 4\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-4-6b0a59de774f> in <module>()\n----> 1 s.loc[[1,2,3]] = 4\n\n/home/immerrr/sources/pandas/pandas/core/indexing.pyc in __setitem__(self, key, value)\n    116                 indexer = self._convert_tuple(key, is_setter=True)\n    117             else:\n--> 118                 indexer = self._convert_to_indexer(key, is_setter=True)\n    119 \n    120         self._setitem_with_indexer(indexer, value)\n\n/home/immerrr/sources/pandas/pandas/core/indexing.pyc in _convert_to_indexer(self, obj, axis, is_setter)\n   1085                     if isinstance(obj, tuple) and is_setter:\n   1086                         return {'key': obj}\n-> 1087                     raise KeyError('%s not in index' % objarr[mask])\n   1088 \n   1089                 return indexer\n\nKeyError: '[3] not in index'\n\n```\n\nI'd expect it to behave the opposite: raise if trying to get a non-existing label (one has reindex for that), but allow adding it via setting a new value. That's a bummer.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50744194",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50744194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50744194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQ0MTk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T10:54:30Z",
    "updated_at": "2014-07-31T10:54:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "well it's effectively a reindex with a list-like so I find this kind of nice\n\nthe setting restriction prevents accidental enlargement (though prob no objection to changing for consistency)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50744705",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50744705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50744705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQ0NzA1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T11:00:50Z",
    "updated_at": "2014-07-31T11:00:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "but reindex also supports list-likes, right? and it also works quite a tad faster, not being crumpled with a variety of indexing options.\n\naccidental enlargement is a valid concern, however, perhaps `loc` could have a parameter, e.g. `loc(resize=True)[[2,3,4]]` to allow both cases and still maintain consistency...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50746600",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7867#issuecomment-50746600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7867",
    "id": 50746600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzQ2NjAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T11:25:56Z",
    "updated_at": "2014-07-31T11:25:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the original motivation is that `.loc/.ix` by list is _exactly_ reindex (I guess reindex is faster because its interprets more input but should not be dramatically so).\n\nthe setting is for the same reason, because you cannot assign to an lvalue\n\n`s.reindex([1,2,3]) = 5`\n\nbut I think possibly allow this is ok\n\n`s.loc[[1,2,3]] = 5`\n"
  }
]
