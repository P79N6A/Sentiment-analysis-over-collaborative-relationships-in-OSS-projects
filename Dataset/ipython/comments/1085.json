[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7783605",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-7783605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 7783605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODM2MDU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T12:11:02Z",
    "updated_at": "2012-08-16T12:14:27Z",
    "author_association": "MEMBER",
    "body": "Someone on Stackoverflow has come up with a rough implementation of this, if I'm reading it correctly:\nhttp://stackoverflow.com/a/11525205/434217\n\nAnother commenter seems to have found a bug with that: http://stackoverflow.com/a/11940456/434217\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7791010",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-7791010",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 7791010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTEwMTA=",
    "user": {
      "login": "ChrisBeaumont",
      "id": 796752,
      "node_id": "MDQ6VXNlcjc5Njc1Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/796752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisBeaumont",
      "html_url": "https://github.com/ChrisBeaumont",
      "followers_url": "https://api.github.com/users/ChrisBeaumont/followers",
      "following_url": "https://api.github.com/users/ChrisBeaumont/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisBeaumont/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisBeaumont/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisBeaumont/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisBeaumont/orgs",
      "repos_url": "https://api.github.com/users/ChrisBeaumont/repos",
      "events_url": "https://api.github.com/users/ChrisBeaumont/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisBeaumont/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T16:31:45Z",
    "updated_at": "2012-08-16T16:36:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure whether my Stackoverflow approach implements what you're looking for or not -- it allows the Qt console to be embedded in an already-running Qt application, but still relies on ZMQ. It also hijacks stdout and stderr, which the gist referenced above seems to address. I've used this approach with IPython v0.12 and v0.13, though I haven't hit the bug @takluyver mentioned.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7794139",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-7794139",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 7794139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTQxMzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T18:20:07Z",
    "updated_at": "2012-08-16T18:20:07Z",
    "author_association": "MEMBER",
    "body": "I think we'd be OK with having a dependency on ZMQ, at least for the time being - it could be cut out later. The main driver is for applications that want an embedded Qt console which can directly act on objects in the same process.\n\nThe long and the short of it is we've wanted to do this for some time, but it's never quite made it to the top of anyone's priority list. If it's something you're interested in, we'd love to have you work on it, and we'd be very happy to answer any questions about the architecture. Well, I imagine we would - it's not a bit of the code I know that well, so I guess I'm volunteering someone else's support ;-) . You can of course mix and match the best bits from your approach and @rkern's code in the gist.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7798142",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-7798142",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 7798142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTgxNDI=",
    "user": {
      "login": "ChrisBeaumont",
      "id": 796752,
      "node_id": "MDQ6VXNlcjc5Njc1Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/796752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisBeaumont",
      "html_url": "https://github.com/ChrisBeaumont",
      "followers_url": "https://api.github.com/users/ChrisBeaumont/followers",
      "following_url": "https://api.github.com/users/ChrisBeaumont/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisBeaumont/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisBeaumont/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisBeaumont/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisBeaumont/orgs",
      "repos_url": "https://api.github.com/users/ChrisBeaumont/repos",
      "events_url": "https://api.github.com/users/ChrisBeaumont/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisBeaumont/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T20:24:55Z",
    "updated_at": "2012-08-16T20:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can take a crack at updating and merging what @rkern and I have put together, to see if it is suitable for integration with IPython. My main relationship with IPython is as a user and not a developer, so I am certain to have architecture questions :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7800957",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-7800957",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 7800957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDA5NTc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T21:57:53Z",
    "updated_at": "2012-08-16T21:57:53Z",
    "author_association": "MEMBER",
    "body": "Great, thanks! We're always keen to convert users to developers, so feel free to ask questions here or on the [ipython-dev](http://mail.scipy.org/mailman/listinfo/ipython-dev) mailing list. The latter is probably better, because more people will see it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8165648",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-8165648",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 8165648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNjU2NDg=",
    "user": {
      "login": "ChrisBeaumont",
      "id": 796752,
      "node_id": "MDQ6VXNlcjc5Njc1Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/796752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisBeaumont",
      "html_url": "https://github.com/ChrisBeaumont",
      "followers_url": "https://api.github.com/users/ChrisBeaumont/followers",
      "following_url": "https://api.github.com/users/ChrisBeaumont/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisBeaumont/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisBeaumont/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisBeaumont/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisBeaumont/orgs",
      "repos_url": "https://api.github.com/users/ChrisBeaumont/repos",
      "events_url": "https://api.github.com/users/ChrisBeaumont/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisBeaumont/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-30T16:40:08Z",
    "updated_at": "2012-08-30T16:56:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've created a [new gist](https://gist.github.com/3532163) that merges the ideas discussed so far, and I'm interested in some feedback (I will also post to the mailing list). The biggest issues I've run into are\n\n1) Dispatching standard and error output to the expected location (one of possibly several widgets, the terminal that started python, etc)\n\n2) Running both the IPKernelApp (which uses a blocking zmq IOLoop) and PyQt.QApplication (also blocking)\n\nThis code seems to work for me on v0.13 and v0.14dev, but there must be better ways to do some of this. Perhaps someone with more knowledge of IPython internals can point me in the right direction?\n\n@rkern's approach seems to sidestep the KernelApp entirely, but requires lots of code duplication to create a functional KernelManager.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8205933",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-8205933",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 8205933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDU5MzM=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-31T21:50:39Z",
    "updated_at": "2012-08-31T21:50:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ChrisBeaumont, while I applaud the simplicity of your approach, I think that we ultimately want to avoid using IPython's application machinery for this. @rkern's approach, while preliminary, is in the right spirit. Here is my tentative plan for implementing this feature:\n1. Create an `EmbeddedKernel` object that encapsulates an `InteractiveShell` and provides `execute`, `object_info`, `complete`, and related methods. These methods will take the same arguments as their counterparts defined on the kernel manager channels, but will directly return their results.\n2. Create an `EmbeddedKernelManager` that synchronously queries the `EmbeddedKernel`, but presents an interface largely identical to `KernelManager` (i.e., dispatches using `call_handlers`). Some of the kernel management methods like `restart_kernel` will have different semantics, and all ZMQ-specific attributes (session, ports, etc.) will be removed.\n3. Create a `QtEmbeddedKernelManager` subclass with an interface identical to `QtKernelManager`.\n\nThis approach has several advantages:\n1. The embedded kernel manager will not depend on ZMQ.\n2. Frontends will require essentially no modification. A typical frontend is written without assuming anything about the location of the kernel. To choose between in-process vs out-of-process kernels, simply plug in the appropriate kernel manager. This does not, of course, preclude the possibility of providing additional functionality when an in-process kernel is present.\n3. There remains a clean separation between the `KernelManager` abstraction and the kernel itself.\n\n@fperez, @bgranger, I will be working on this at Enthought for a short time (~ 3 weeks) before I return to school. Although that is not a very long time, I should be able to produce a preliminary implementation of this feature. Do you have any suggestions about this proposal? In particular, is it sane? :)\n\nThanks,\nEvan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8214806",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-8214806",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 8214806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTQ4MDY=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-01T17:25:22Z",
    "updated_at": "2012-09-01T17:25:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Whoops, I intended to mention @ellisonbg there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12367045",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-12367045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 12367045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzY3MDQ1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T13:04:54Z",
    "updated_at": "2013-01-17T13:04:54Z",
    "author_association": "MEMBER",
    "body": "I confess that I haven't been closely following it, but did pull request #2724 (just merged) address this, or is there more to be done before we close it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12396641",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-12396641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 12396641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzk2NjQx",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T23:00:39Z",
    "updated_at": "2013-01-17T23:00:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, this is finished.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/13739586",
    "html_url": "https://github.com/ipython/ipython/issues/1085#issuecomment-13739586",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1085",
    "id": 13739586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzM5NTg2",
    "user": {
      "login": "flying-sheep",
      "id": 291575,
      "node_id": "MDQ6VXNlcjI5MTU3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flying-sheep",
      "html_url": "https://github.com/flying-sheep",
      "followers_url": "https://api.github.com/users/flying-sheep/followers",
      "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
      "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
      "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
      "repos_url": "https://api.github.com/users/flying-sheep/repos",
      "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T19:51:20Z",
    "updated_at": "2013-02-18T19:51:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ChrisBeaumont i wanted to try your example, but it stalls when calling `outstream_factory(self.session, self.iopub_socket, 'stdout')` in `KernelApp.initio()`.\n\nany idea why?\n\nor: what is the recommended approach to do this in ipython 0.13?\n"
  }
]
