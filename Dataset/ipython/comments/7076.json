[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65150605",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65150605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65150605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTUwNjA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T22:55:05Z",
    "updated_at": "2014-12-01T22:55:05Z",
    "author_association": "MEMBER",
    "body": "Worksheets have been dropped in IPython master, which will be released in IPython 3.0 very soon. The replacement for worksheets is to produce UI based on headings in markdown, such as document partitioning, tabbed view, etc. This work is not done, and probably won't be done especially soon.\n\nIt should be possible to experiment with UI that accomplishes this via extensions, since it makes it purely a UI behavior, and no longer has any implication on the document structure.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65150810",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65150810",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65150810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTUwODEw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T22:55:56Z",
    "updated_at": "2014-12-01T22:55:56Z",
    "author_association": "MEMBER",
    "body": "See [Min's table of contents extension](https://github.com/minrk/ipython_extensions#table-of-contents) for an example of what can be done based on headings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65166483",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65166483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65166483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTY2NDgz",
    "user": {
      "login": "drewbryant",
      "id": 8355852,
      "node_id": "MDQ6VXNlcjgzNTU4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8355852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewbryant",
      "html_url": "https://github.com/drewbryant",
      "followers_url": "https://api.github.com/users/drewbryant/followers",
      "following_url": "https://api.github.com/users/drewbryant/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewbryant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewbryant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewbryant/subscriptions",
      "organizations_url": "https://api.github.com/users/drewbryant/orgs",
      "repos_url": "https://api.github.com/users/drewbryant/repos",
      "events_url": "https://api.github.com/users/drewbryant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewbryant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T00:54:02Z",
    "updated_at": "2014-12-02T00:54:02Z",
    "author_association": "NONE",
    "body": "Thanks for the details, very helpful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65171353",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65171353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65171353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTcxMzUz",
    "user": {
      "login": "nikhilk",
      "id": 14608,
      "node_id": "MDQ6VXNlcjE0NjA4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikhilk",
      "html_url": "https://github.com/nikhilk",
      "followers_url": "https://api.github.com/users/nikhilk/followers",
      "following_url": "https://api.github.com/users/nikhilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikhilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikhilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikhilk/subscriptions",
      "organizations_url": "https://api.github.com/users/nikhilk/orgs",
      "repos_url": "https://api.github.com/users/nikhilk/repos",
      "events_url": "https://api.github.com/users/nikhilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikhilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T01:47:00Z",
    "updated_at": "2014-12-02T02:00:09Z",
    "author_association": "NONE",
    "body": "One comment on this... this may well be a moot point if you've decided to do away with the notion of worksheets in the document format (and done so in 3.0).\n\nI think H1 cells have specific ux semantics - that they are top-level headings for a portion of content. Having one client treat them differently than another client reduces their value. The author cannot predictably determine how their notebook will be formatted when opened by a reader using a different tool. Essentially the intent of H1 is no longer fixed. I think a ToC client-side extension driven off of H# cells is perfect... because it is honoring the semantics of headers from a semantic markup perspective.\n\nWorksheets seem to cater better to file-like organization of content just like individual source files within a larger project - essentially treating the notebook as a composite file/folder of related individual files, or related tabs in a traditional spreadsheet. That is a very different semantic than headers, and it was nice that the IPython notebook had a different construct for the different semantic.\n\nIt seems the main decision to remove the feature was because the main IPython client didn't have UX in support of it - hence not much (if any) use of multiple worksheets. Or was there another reason?\n\nFollowup questions --\n\nAny thought on how notebooks could/should cater to composite file scenarios? Any thoughts on making the format extensible in compatible ways (i.e. less capable clients ignore/round-trip content they don't understand)? Multiple notebooks isn't really an answer, since the semantic of a single kernel used to execute all of the code is still very much useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65179821",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65179821",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65179821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTc5ODIx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T03:52:25Z",
    "updated_at": "2014-12-02T03:52:25Z",
    "author_association": "MEMBER",
    "body": "> It seems the main decision to remove the feature was because the main IPython client didn't have UX in support of it - hence not much (if any) use of multiple worksheets. Or was there another reason?\n\nPretty much, there was never support for worksheets, and as we thought about how we might implement the hypothetical features they were intended for, worksheets did not provide anything useful beyond headings.\n\n> Any thought on how notebooks could/should cater to composite file scenarios?\n\nUI that partitions the document based on HTML/markdown heading levels can do everything worksheets could. worksheets were functionally equivalent to 'h0' headings, so added nothing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65180667",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65180667",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65180667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTgwNjY3",
    "user": {
      "login": "nikhilk",
      "id": 14608,
      "node_id": "MDQ6VXNlcjE0NjA4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikhilk",
      "html_url": "https://github.com/nikhilk",
      "followers_url": "https://api.github.com/users/nikhilk/followers",
      "following_url": "https://api.github.com/users/nikhilk/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikhilk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikhilk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikhilk/subscriptions",
      "organizations_url": "https://api.github.com/users/nikhilk/orgs",
      "repos_url": "https://api.github.com/users/nikhilk/repos",
      "events_url": "https://api.github.com/users/nikhilk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikhilk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T04:06:17Z",
    "updated_at": "2014-12-02T04:06:17Z",
    "author_association": "NONE",
    "body": "So could we get H0 headings rather than overload H1 (my point about multiple tools with differing capabilities, and changing semantics for existing constructs across tools)?\n\nAnd maybe not call them headings either? :)\n\nActually any _different_ cell type would do the trick. Can a tool invent new cell types and expect other tools to ignore them and leave them in place when saving? It would be good to understand how flexible the notebook format is for slightly varying needs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65182201",
    "html_url": "https://github.com/ipython/ipython/issues/7076#issuecomment-65182201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7076",
    "id": 65182201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTgyMjAx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T04:33:42Z",
    "updated_at": "2014-12-02T04:33:42Z",
    "author_association": "MEMBER",
    "body": "> So could we get H0 headings rather than overload H1 (my point about multiple tools with differing capabilities, and changing semantics for existing constructs across tools)?\n> And maybe not call them headings either?\n\nThat's not the plan. Headings are document structure, so sections are indicated by headings. If you create h0, it's just demoting h1 to h2, etc. Worksheets didn't provide anything not provided by headings.\n\n> Can a tool invent new cell types and expect other tools to ignore them and leave them in place when saving?\n\nCustom cell types are not supported.\n"
  }
]
