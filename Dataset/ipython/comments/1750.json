[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5824946",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-5824946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 5824946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjQ5NDY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-21T15:08:05Z",
    "updated_at": "2012-05-21T15:08:05Z",
    "author_association": "MEMBER",
    "body": "Alternatively, could you use a simple wrapper script which tests whether the server is running on the default port, and launches it if not?\n\nIn fact, I'm not sure crontab is the right tool for the job here. In Ubuntu, for instance, you can configure a service with the `respawn` flag, which will automatically restart it if it dies: http://upstart.ubuntu.com/cookbook/#respawn\n\nI expect there are similar tools for other operating systems.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5828776",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-5828776",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 5828776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjg3NzY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-21T17:38:09Z",
    "updated_at": "2012-05-21T17:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seem to me that the sanest behavior would be the following:\n- `ipython notebook`: start at port 8888 and try to find an unused port\n- `ipython notebook --port=1234`: use port 1234, terminating with an error if it is not available\n\nAs an outsider, the last thing I expect an application to do is ignore my request and do its own thing:\n`[NotebookApp] The port 8888 is already in use, trying another random port.`\n\nEspecially when the documentation does not mention this:\n\n```\n--port=<Integer> (NotebookApp.port)\n    Default: 8888\n    The port the notebook server will listen on.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5831468",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-5831468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 5831468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzE0Njg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-21T19:29:43Z",
    "updated_at": "2012-05-21T19:29:43Z",
    "author_association": "MEMBER",
    "body": "The port is already configurable, and that can be set permanently in a profile (that's how I make sure that my public nb server is always started on the same port).  The question is what to do if the requested port is busy: try a different one or error out?  Currently we try a different one.  The case can certainly be made for erroring out, which is probably more useful than trying a new port in auto-respawn scenarios.  When used interactively, having it just work with a new port is actually useful, since one can just read off the new port from the console.\n\nBut I'm leery of adding yet another configurable knob here, I'd prefer settling on a single policy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5831683",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-5831683",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 5831683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzE2ODM=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-21T19:39:03Z",
    "updated_at": "2012-05-21T19:39:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "One quick idea is to specify an iterable range of allowable ports:\n- `--port=9999`: use port `9999`\n- `--port=9999-10049`: use the first open port in `range(9999, 10049+1)`\n- `--port=9999+`: use the first open port in `itertools.count(9999)`\n\nOf course this could be made arbitrarily complicated, with commas, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6037659",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-6037659",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 6037659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzc2NTk=",
    "user": {
      "login": "invisibleroads",
      "id": 266668,
      "node_id": "MDQ6VXNlcjI2NjY2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/266668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/invisibleroads",
      "html_url": "https://github.com/invisibleroads",
      "followers_url": "https://api.github.com/users/invisibleroads/followers",
      "following_url": "https://api.github.com/users/invisibleroads/following{/other_user}",
      "gists_url": "https://api.github.com/users/invisibleroads/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/invisibleroads/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/invisibleroads/subscriptions",
      "organizations_url": "https://api.github.com/users/invisibleroads/orgs",
      "repos_url": "https://api.github.com/users/invisibleroads/repos",
      "events_url": "https://api.github.com/users/invisibleroads/events{/privacy}",
      "received_events_url": "https://api.github.com/users/invisibleroads/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-31T14:42:42Z",
    "updated_at": "2012-05-31T14:42:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Bradley M. Froehle said,\n>  `ipython notebook`: start at port 8888 and try to find an unused port\n>  `ipython notebook --port=1234`: use port 1234, terminating with an error if it is not available\n\nI vote for Bradley's suggestion.\nIf the port is unspecified, first try 8888 and then try random ports after 8888.\nIf the port is specified, then exit with an error if the port is busy.\n\n> Fernando Perez said,\n> The case can certainly be made for erroring out, which is probably more useful than trying a new port in auto-respawn scenarios.  When used interactively, having it just work with a new port is actually useful, since one can just read off the new port from the console.\n\nI agree that when launching multiple ipython notebooks from the\nconsole, automatic port selection is convenient.\n\n> Thomas Kluyver said,\n> In fact, I'm not sure crontab is the right tool for the job here. In Ubuntu, for instance, you can configure a service with the `respawn` flag, which will automatically restart it if it dies: http://upstart.ubuntu.com/cookbook/#respawn\n\nFedora has Upstart, which monitors and respawns processes.  I will\nlook into using this.\nhttp://en.wikipedia.org/wiki/Upstart\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6047697",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-6047697",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 6047697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDc2OTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-31T21:13:25Z",
    "updated_at": "2012-05-31T21:13:25Z",
    "author_association": "MEMBER",
    "body": "I am with @fperez that I don't think we want to add more complexity to this configuration parameter.  At the same time, I can see that always trying other port numbers would be problematic in some contexts where you have to run the notebook on a particular port.  We might need another flag such as `--port-retries` that is an integer number of additional ports to try.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6048019",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-6048019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 6048019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDgwMTk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-31T21:25:29Z",
    "updated_at": "2012-05-31T21:25:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, I see two paths forward:\n1. Set `port` and `default_port`.  Easily integrated into #1817.  `port=0` means use a range of ports near `default_port`.\n   - `ipython notebook --port=1234`: use port 1234\n   - `ipython notebook --default_port=9999`: use a range of ports near 9999\n2. Set `port` and `port_retries`.\n   - `ipython notebook --port=9999`: use a range of ports near 1234\n   - `ipython notebook --port=1234 --port-retries=0`: use port 1234\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6048115",
    "html_url": "https://github.com/ipython/ipython/issues/1750#issuecomment-6048115",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1750",
    "id": 6048115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDgxMTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-31T21:28:54Z",
    "updated_at": "2012-05-31T21:28:54Z",
    "author_association": "MEMBER",
    "body": "I think the `port`/`default_port` language is confusing - you won't\nhave any idea what they do unless you read the docs - and even then I\nwould never remember which is which.\n\nOn Thu, May 31, 2012 at 2:25 PM, Bradley M. Froehle\nreply@reply.github.com\nwrote:\n\n> Okay, I see two paths forward:\n> 1. Set `port` and `default_port`.  Easily integrated into #1817.  `port=0` means use a range of ports near `default_port`.\n>     \\* `ipython notebook --port=1234`: use port 1234\n>     \\* `ipython notebook --default_port=9999`: use a range of ports near 9999\n> 2. Set `port` and `port_retries`.\n>     \\* `ipython notebook --port=9999`: use a range of ports near 1234\n>     \\* `ipython notebook --port=1234 --port-retries=0`: use port 1234\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1750#issuecomment-6048019\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
