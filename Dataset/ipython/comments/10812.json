[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330109316",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330109316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330109316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDEwOTMxNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T01:35:16Z",
    "updated_at": "2017-09-18T01:35:16Z",
    "author_association": "MEMBER",
    "body": "I would try to get inspiration from [tqdm](https://pypi.python.org/pypi/tqdm), one of the difficulties is that you rarely loop on a range, you look on another iterable, so you need to take that into account. Then this iterable need to provide a length., etc. As we can't change API as often as we'd like, we need to be careful. \r\n\r\nI'm happy also providing also a minimal implementation as well, and tell users that if they need something more complex, they should see tqdm (or other); I prefer having bare bone where you need to switch to external dependency soon, than let user build complex program where switching becomes hard. \r\n\r\nAlso we should mention tqdm in the docs for progressbar.\r\n\r\nBut +1 to make thing slightly more general, but not too much either.\r\n\r\ncc @rgbkrk "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330111075",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330111075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330111075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDExMTA3NQ==",
    "user": {
      "login": "henryiii",
      "id": 4616906,
      "node_id": "MDQ6VXNlcjQ2MTY5MDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4616906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henryiii",
      "html_url": "https://github.com/henryiii",
      "followers_url": "https://api.github.com/users/henryiii/followers",
      "following_url": "https://api.github.com/users/henryiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions",
      "organizations_url": "https://api.github.com/users/henryiii/orgs",
      "repos_url": "https://api.github.com/users/henryiii/repos",
      "events_url": "https://api.github.com/users/henryiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henryiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T01:58:22Z",
    "updated_at": "2017-09-18T02:00:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've previously worked on [Plumbum's progress bar](http://plumbum.readthedocs.io/en/latest/cli.html#terminal-utilities), which provides a `.range` and a `.wrap` facility (and supports IPython notebooks).\r\n\r\nSince IPython's progress bar implementation is simple, this seemed like a simple addition inline with the way one might expect it to work (it already has a size).\r\n\r\nFor wrapping, how about a class method (just an example):\r\n```python\r\n@classmethod\r\ndef wrap(cls, iterable, length=None)\r\n    if length is None:\r\n        length = len(iterable)\r\n    self = cls(length)\r\n    self._iter = iterable # add to __iter__ method\r\n    return self\r\n```\r\n\r\nOr, the constructor could try `iter()` on the argument, and then treat it like `total` if that throws an exception (int).\r\n\r\n+1 to mentioning tqdm."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330158821",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330158821",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330158821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDE1ODgyMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T08:38:57Z",
    "updated_at": "2017-09-18T08:38:57Z",
    "author_association": "MEMBER",
    "body": "Should we encourage people to use the progress bar API from a popular library like tqdm or [progressbar2](https://pypi.python.org/pypi/progressbar2), and just write an IPython backend for it? It seems like we're reinventing the wheel a bit."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330206442",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330206442",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330206442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIwNjQ0Mg==",
    "user": {
      "login": "henryiii",
      "id": 4616906,
      "node_id": "MDQ6VXNlcjQ2MTY5MDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4616906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henryiii",
      "html_url": "https://github.com/henryiii",
      "followers_url": "https://api.github.com/users/henryiii/followers",
      "following_url": "https://api.github.com/users/henryiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions",
      "organizations_url": "https://api.github.com/users/henryiii/orgs",
      "repos_url": "https://api.github.com/users/henryiii/repos",
      "events_url": "https://api.github.com/users/henryiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henryiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T12:37:35Z",
    "updated_at": "2017-09-18T12:37:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe the idea is to provide a small, light-weight built-in progress bar that can easily be used by anyone using IPython without dependencies (probably usually interactively). If someone needs more, they can go out and get tqdm, etc. This was already done in the latest release.\r\n\r\nIn that vein, it makes sense to make the current ProgressBar behave a bit more Python, supporting iteration (only adding special methods, no other API changes). I think wrapping is beyond the scope of the ProgressBar in Python, for two reasons. One, not all iterators provide a length, so that's tricky to handle (and better done by another lib). Second, it's pretty easy to combine the two without adding API:\r\n\r\n```python\r\nfor i,val in zip(ProgressBar(200), IterableThing(200)):\r\n    # use val or i\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330206819",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330206819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330206819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIwNjgxOQ==",
    "user": {
      "login": "henryiii",
      "id": 4616906,
      "node_id": "MDQ6VXNlcjQ2MTY5MDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4616906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henryiii",
      "html_url": "https://github.com/henryiii",
      "followers_url": "https://api.github.com/users/henryiii/followers",
      "following_url": "https://api.github.com/users/henryiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions",
      "organizations_url": "https://api.github.com/users/henryiii/orgs",
      "repos_url": "https://api.github.com/users/henryiii/repos",
      "events_url": "https://api.github.com/users/henryiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henryiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T12:39:15Z",
    "updated_at": "2017-09-18T12:39:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "PS: @takluyver , at least tqdm and Plumbum already provide IPython backends."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330214768",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330214768",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330214768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIxNDc2OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T13:10:50Z",
    "updated_at": "2017-09-18T13:10:50Z",
    "author_association": "MEMBER",
    "body": "Fair enough.\r\n\r\nI'm always wary of providing small, light-weight versions of code that's available elsewhere, because then people go \"this would be great if it just had this one feature I like\"  - as in this issue :wink: . And there's often no obvious stopping point until you've rebuilt all the complexity of the thing you were avoiding using in the first place. For each contributor, it seems obvious to stop after *one more feature*, but then another contributor comes along and sees how great it would be with another one more feature.\r\n\r\nBut it's in there now. If you want to make an iteration API for it, go for it."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330251006",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330251006",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330251006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI1MTAwNg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T14:59:36Z",
    "updated_at": "2017-09-18T14:59:36Z",
    "author_association": "MEMBER",
    "body": "/cc @mariusvniekerk \r\n\r\nThe main thing that separates this progress bar from tqdm is that it uses display updates rather than IPython widgets, to allow it to work across frontends including `notebook`, `nteract`, `jupyterlab`, and `nbconvert`. Same applies to Hydrogen once they've implemented it. All without having to maintain a version for each ipywidgets release (per spec changes). "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330413897",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330413897",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330413897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQxMzg5Nw==",
    "user": {
      "login": "mariusvniekerk",
      "id": 73973,
      "node_id": "MDQ6VXNlcjczOTcz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/73973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mariusvniekerk",
      "html_url": "https://github.com/mariusvniekerk",
      "followers_url": "https://api.github.com/users/mariusvniekerk/followers",
      "following_url": "https://api.github.com/users/mariusvniekerk/following{/other_user}",
      "gists_url": "https://api.github.com/users/mariusvniekerk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mariusvniekerk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mariusvniekerk/subscriptions",
      "organizations_url": "https://api.github.com/users/mariusvniekerk/orgs",
      "repos_url": "https://api.github.com/users/mariusvniekerk/repos",
      "events_url": "https://api.github.com/users/mariusvniekerk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mariusvniekerk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T02:55:40Z",
    "updated_at": "2017-09-19T02:55:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "That being said it's certainly feasible for us to make the  progressbar more like tqdm.  Though like @rgbkrk I'm in favor of it working without the need for widgets.\r\n\r\nAlternatively we could go improve tqdm? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330420453",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330420453",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330420453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQyMDQ1Mw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T03:42:59Z",
    "updated_at": "2017-09-19T03:42:59Z",
    "author_association": "MEMBER",
    "body": "I think improving tqdm is a really good option, especially since the source I looked at labels it as \"experimental\" Jupyter support."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/330421474",
    "html_url": "https://github.com/ipython/ipython/issues/10812#issuecomment-330421474",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10812",
    "id": 330421474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQyMTQ3NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T03:50:51Z",
    "updated_at": "2017-09-19T03:50:51Z",
    "author_association": "MEMBER",
    "body": "@mariusvniekerk By the way, I finished up the vdom support in nteract (and by extension Hydrogen, commuter) and have been working on https://github.com/jupyter/notebook/pull/2840."
  }
]
