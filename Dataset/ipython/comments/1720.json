[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5632259",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5632259",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5632259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzIyNTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-10T18:05:36Z",
    "updated_at": "2012-05-10T18:05:36Z",
    "author_association": "MEMBER",
    "body": "This is very nice.  I opened the demo notebook and it worked perfectly.  I think there is huge potential with using flot.  It is not going to yield the pixel perfect publication ready plots of matplotlib, but having interactivity in the browser is needed in many cases.  Some thoughts:\n- As time goes on, people will come up with more and more cool ways of extending the capabilities of the notebook.  Each time someone does this, there will be new JavaScript libraries involved.  I don't see any way we can ship all of those libraries.  We need to figure out a way to enable these things without shipping lots of JS libraries.\n- IPython once had plotting capabilities.  To @fperez's credit he removed those, which led to the birth of matplotlib.  I don't think we want to get into the business of having plotting in IPython.  Because of this, I think we need to figure out a way for these types of things to be separate projects, perhaps under the IPython github organization.\n- You have included another copy of jquery in the source code.  We already ship that so you don't need to ship it again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5633234",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5633234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5633234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzMyMzQ=",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-10T18:43:54Z",
    "updated_at": "2012-05-10T18:43:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I removed the unnecessary javascript files including the extra copy of jquery as well as the flot examples to reduce the size from 1MB to 150kB, but I agree this type of thing might eventually be better as some sort of ipython notebook \"plugin\" that exists outside the main ipython codebase. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5635503",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5635503",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5635503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzU1MDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-10T20:20:09Z",
    "updated_at": "2012-05-10T20:20:09Z",
    "author_association": "MEMBER",
    "body": "I think the notebook is in desperate need of a plugin model.\n\nAt the very least Plugins need to be able to:\n- add scripts to be loaded to notebook.js\n- serve static files from outside the IPython static dir\n\nPlugins might want to be able to:\n- manipulate templates\n- add or change handlers\n\nflot would make a great example of a plugin, and we could consider making MathJax a plugin internally, to help flesh out the idea.\n\nIf our plugin architecture is good enough, we might be able to make all our bundled libraries (jQuery, jQueryUI, prettify) non-optional plugins, which might compartmentalize things nicely. If it's not good enough, then this would simply add unnecessary complexity.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5638232",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5638232",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5638232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzgyMzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-10T22:17:10Z",
    "updated_at": "2012-05-10T22:17:10Z",
    "author_association": "MEMBER",
    "body": "On Thu, May 10, 2012 at 11:05 AM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> - IPython once had plotting capabilities.  To @fperez's credit he removed those, which led to the birth of matplotlib.  I don't think we want to get into the business of having plotting in IPython.  Because of this, I think we need to figure out a way for these types of things to be separate projects, perhaps under the IPython github organization.\n\nI completely agree.  Plotting is a large and complex problem\n(matplotlib alone is bigger than all of IPython!), and we should\n_enable_ good plotting support, but not _provide_ it.  So things like\nlightweight shims to collaborate with a library, such as our pylab\nsupport, are OK.  Having our own bundled plotting is not.  In addition\nto the complexity issue, it's better to let the different approaches\n'battle it out' with easy IPython integration, so the best one(s) may\nwin.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5640393",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5640393",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5640393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDAzOTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T00:44:49Z",
    "updated_at": "2012-05-11T00:44:49Z",
    "author_association": "MEMBER",
    "body": "I also agree with @minrk that having a clean plugin system is needed.  Now that we're starting to have the outlines of a full architecture that we like, it would be great to start thinking about a cleanup of our mishmash of hooks, plugins and extensions into something cleaner and simpler...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5641454",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5641454",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5641454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDE0NTQ=",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T01:54:23Z",
    "updated_at": "2012-05-11T01:54:23Z",
    "author_association": "MEMBER",
    "body": "Luckily, we're looking for things exactly like this for Sage (javascript frontend plotting), so such a thing might find a good home there too...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5641639",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5641639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5641639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDE2Mzk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T02:13:33Z",
    "updated_at": "2012-05-11T02:13:33Z",
    "author_association": "MEMBER",
    "body": "We need something to make it easier for this type of code to live\noutside of IPython.  Some thoughts on this:\n- For many of these types of things, there are two components\n\n1) the python module that returns the right Javascript display object\nto the browser.  This module must be importable on the kernel like any\nregular python library and must be able to dynamically generate any\ncustom javascript the widget needs.\n\n2) Many of these javascript widgets need external/3rd party JavaScript\nlibraries like flot, XRT, d3, etc.  But the kernel can't/shouldn't\nknow anything about these libraries - all of this has to be in the\nnotebook server.  For the many cases where the JavaScript library can\nbe loaded from a CDN, this problem goes away completely.\n\nFor solving 1) we don't need anything like a plugin system - they are\njust regular Python modules, nothing more nothing less.  For 2) we\nsimply need a notebook server configurable that takes a list of local\ndirectories that contain custom JavaScript libraries.  Upon starting,\nthe notebook server can create static directories for each of these.\nThese JavaScript libraries can be loaded dynamically using the\nJavaScript display object.  Browsers should be smart enough to cache\nthis so the library is not loaded multiple times.\n\nNone of the following is needed:\n- Custom handlers.\n- Changes to the template system.\n\nI bring this up because I am -1 on having a plugin/configuration\nsystem that allows users to customize/add handlers, templates and\ncustom JavaScript code to the actual notebook server.  That would\namount to the notebook server becoming a full blown web app framework\nlike Django, etc.  It would mean that our internal notebook server\ncode would become part of the public IPython API.  It would mean that\nwe loose control over the stability of the notebook server.  It would\nmean lot of extra code for us to maintain that only makes the core\nnotebook more complex.  Needless to say I am strongly opposed to this\ndirection.  Not to mention it is not needed for the types of\nJavaScript widgets we are talking about here.\n\nIf someone wants to develop a custom web application based on the\nNotebook, they should be encouraged to write their own main notebook\napplication using ours as a template.  The main file is not that\ncomplex and would be trivial to add new handlers and templates.  I\nhave in mind some refactoring of our templates and static JS code that\nwill make this type of thing much easier.\n\nAlso, users can easily start up a second web server and link to it in\ntheir JavaScript widgets.  A perfect example of this would be a\nJavaScript widget that visualizes a real time data feed that is\nreceived over WebSockets.  But there is no reason that additional\nWebSocket connection should handled by _the_ IPython notebook server.\n\nOn Thu, May 10, 2012 at 5:44 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> I also agree with @minrk that having a clean plugin system is needed.  Now that we're starting to have the outlines of a full architecture that we like, it would be great to start thinking about a cleanup of our mishmash of hooks, plugins and extensions into something cleaner and simpler...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1720#issuecomment-5640393\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5663182",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5663182",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5663182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjMxODI=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T23:13:52Z",
    "updated_at": "2012-05-11T23:13:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was about to post a request on the meta notebook request thread (issue 977) about adding search engine in the notebook server.  For example using something like Whoosh.  Should it be a plugin?  If so, changes on handlers and templates are needed, right?\n\nAnother plugin example of having changes on the server side is ReST directives/roles.  I have implemented some ReST directives which are related to scientific computing and if I can use them on IPython that would be great.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5663764",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5663764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5663764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjM3NjQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T00:14:56Z",
    "updated_at": "2012-05-12T00:14:56Z",
    "author_association": "MEMBER",
    "body": "On Fri, May 11, 2012 at 4:13 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> I was about to post a request on the meta notebook request thread (issue 977) about adding search engine in the notebook server.  For example using something like Whoosh.  Should it be a plugin?  If so, changes on handlers and templates are needed, right?\n\nWhat exactly do you mean by search in this context?\n\n> Another plugin example of having changes on the server side is ReST directives/roles.  I have implemented some ReST directives which are related to scientific computing and if I can use them on IPython that would be great.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1720#issuecomment-5663182\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5664111",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5664111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5664111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjQxMTE=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T00:59:00Z",
    "updated_at": "2012-05-12T00:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@epatters  Searching through the contents (cell input and maybe output) of the notebooks in the `--notebook-dir`.  Like having little google in the IPython notebook server.  It should be useful if you have a lot of notebooks and don't remember the title but remember the part of code/document you wrote, no?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5664454",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5664454",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5664454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjQ0NTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T01:58:55Z",
    "updated_at": "2012-05-12T01:58:55Z",
    "author_association": "MEMBER",
    "body": "On Fri, May 11, 2012 at 5:59 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> @epatters  Searching through the contents (cell input and maybe output) of the notebooks in the `--notebook-dir`.  Like having little google in the IPython notebook server.  It should be useful if you have a lot of notebooks and don't remember the title but remember the part of code/document you wrote, no?\n\nNotebooks are files on your disk, nothing more, nothing less.  The\nnotebook server doesn't track all of them in any special way, and it\ncan't: if we started tracking that, our index would break the moment\nyou rename/move your files with your local OS tools.\n\nThe problem of indexing/searching every file in your computer is one\nsolved by desktop search tools, which all platforms have (with varying\ndegrees of quality).  It's not really something we can tackle in\nIPython.\n\nAnd we don't want to hide the notebooks in some special ghetto\ndirectory that you can't access yourself, because we _want_ your\nnotebooks to be _your own files_, that you can share, back up, version\ncontrol, delete, move around, at your own will.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5664808",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5664808",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5664808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjQ4MDg=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T03:01:49Z",
    "updated_at": "2012-05-12T03:01:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The problem of indexing/searching every file in your computer is one\n> solved by desktop search tools, which all platforms have (with varying\n> degrees of quality).  It's not really something we can tackle in\n> IPython.\n\nOf course you can search it using other tools.  But I believe good search tool use document structure for efficient search.  For example, in IPython notebook you can have \"ignore the output\" option, utilize syntax/cell type information of each cell, treat each cell as one document rather than whole notebook file as one document, etc.\n\nI don't think reindexing on move/add/delete is _that_ complicated problem you want to avoid if you really want search engine.  I used Whoosh module sometimes and it was very easy to integrate in web based system.  That's why I thought benefit beats the implementation difficulty.  On the other hand I am not web engineer so I don't know much about scaling issue, for example I can't guess what happens when you have thousands of notebooks in terms of index size, memory and CPU load.  So my guess about implementation can be wrong.  Anyway, I am grad I asked before writing PR because this is something I planed to do.\n\nBTW, sorry about contaminating the thread with unrelated issue!  At first I just wanted to add some examples of plug-in that you cannot write on javascript side.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5665177",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5665177",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5665177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUxNzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T04:23:48Z",
    "updated_at": "2012-05-12T04:23:48Z",
    "author_association": "MEMBER",
    "body": "On Fri, May 11, 2012 at 8:01 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> Of course you can search it using other tools.  But I believe good search tool use document structure for efficient search.  For example, in IPython notebook you can have \"ignore the output\" option, utilize syntax/cell type information of each cell, treat each cell as one document rather than whole notebook file as one document, etc.\n\nYes, but good document search is also a pretty complex problem, and\none that requires running a frequent/constant background process to\nreindex (otherwise the index goes stale in the face of manual file\nmanagement).  It's simply adding a layer of complexity that is really\nbeyond our scope.\n\nAs long as IPython Notebook behaves like a regular desktop application\n(that happens to use the web browser as a UI system), full-blown\nindexing just doesn't make sense.  The only apps that index data well\nare those that also _control_ the location of the data in some manner.\n Consider for example photo/music management tools: they either flat\nout grab your data (itunes/iphoto), or you must tell them which\ndirectories to index, and they re-index those on every run\n(rhythmbox/picasa).\n\nWe really don't want to get into the business of recursively\nreindexing the user's entire home directory every time IPython starts.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5665191",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5665191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5665191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUxOTE=",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T04:26:11Z",
    "updated_at": "2012-05-12T04:26:11Z",
    "author_association": "MEMBER",
    "body": "I think it would be in the scope of the project to make, for example, an OSX Spotlight plugin for notebook files that would extract some of the metadata, but it still seems like a pretty low priority.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5665290",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5665290",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5665290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUyOTA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T04:53:36Z",
    "updated_at": "2012-05-12T04:53:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> As long as IPython Notebook behaves like a regular desktop application\n> (that happens to use the web browser as a UI system), full-blown\n> indexing just doesn't make sense.\n\nIPython Notebook can also run as non-regular desktop application,\nright?  I am using it via ssh port forwarding and I am very happy with\nthe design decision for using web interface because it makes it easy.\nTo search document, well I can do ssh and grep but it can be much\nbetter.\n\n> The only apps that index data well are those that also _control_ the\n> location of the data in some manner.  Consider for example photo/music\n> management tools: they either flat out grab your data (itunes/iphoto),\n> or you must tell them which directories to index, and they re-index\n> those on every run (rhythmbox/picasa).\n\nI thought IPython encourages rather stable location of the data as it\nallows location to be configured.  If you setup a profile and run the\nserver without farther options it uses same directory every time,\nright?  And as the JSON file is not easy to edit by hand, I guess the\nnotebook contents remains the same since the last time you ran the\nserver, thus you don't need to reindex it most of the time.  When you\nmove or add notebook, yes, you need to reindex and it is price to pay.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5665378",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5665378",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5665378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUzNzg=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T05:19:16Z",
    "updated_at": "2012-05-12T05:19:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It's simply adding a layer of complexity that is really beyond our scope.\n\nI was thinking that this could be the case...  Anyway, then it will be a good example of third party extension!\n\nAnd come to think of it, it is possible to implement search engine only using JS in notebook side, if you run another server for search engine, if you can get URL list of notebooks via http (which is possible already) and if you can hook some JS function to the save command.  Also, ReST extension can be setup in regular config file.  So it turned out none of my examples require plug-in system on the server side.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5671247",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5671247",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5671247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzEyNDc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T19:49:00Z",
    "updated_at": "2012-05-12T19:49:00Z",
    "author_association": "MEMBER",
    "body": "I can imagine that eventually we could explore something like this,\nbut I agree with Fernando that for now file system wide searching of\nnotebooks is beyond our scope.\n\nOn Fri, May 11, 2012 at 10:19 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> > It's simply adding a layer of complexity that is really beyond our scope.\n> \n> I was thinking that this could be the case...  Anyway, then it will be a good example of third party extension!\n> \n> And come to think of it, it is possible to implement search engine only using JS in notebook side, if you run another server for search engine, if you can get URL list of notebooks via http (which is possible already) and if you can hook some JS function to the save command.  Also, ReST extension can be setup in regular config file.  So it turned out none of my examples require plug-in system on the server side.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1720#issuecomment-5665378\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5671445",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5671445",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5671445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzE0NDU=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T20:18:35Z",
    "updated_at": "2012-05-12T20:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> file system wide searching\n\nTo clarify, what I had in mind is searching only the notebooks in `--notebook-dir`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5671593",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5671593",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5671593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzE1OTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T20:40:38Z",
    "updated_at": "2012-05-12T20:40:38Z",
    "author_association": "MEMBER",
    "body": "The problem is that we are going to soon add the ability for the\nnotebook server to serve notebooks out of any directory.  Then, it\nreally becomes a file system wide search.\n\nOn Sat, May 12, 2012 at 1:18 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> > file system wide searching\n> \n> To clarify, what I had in mind is searching only the notebooks in `--notebook-dir`.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1720#issuecomment-5671445\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5672050",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5672050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5672050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzIwNTA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T21:44:21Z",
    "updated_at": "2012-05-12T21:44:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The problem is that we are going to soon add the ability for the\n> notebook server to serve notebooks out of any directory.  Then, it\n> really becomes a file system wide search.\n\nAh, I guess this is the point I am missing.  But even in that situation, running IPyton server knows the file list (or list of directories where notebooks are) it is tracking, right?  I think search within these notebooks is enough.  I agree with @fperez about the point that searching through all notebooks in user's home directory causes a lot of trouble.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5672432",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5672432",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5672432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI0MzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T22:39:07Z",
    "updated_at": "2012-05-12T22:39:07Z",
    "author_association": "MEMBER",
    "body": "On Fri, May 11, 2012 at 9:26 PM, Jason Grout\nreply@reply.github.com\nwrote:\n\n> I think it would be in the scope of the project to make, for example, an OSX Spotlight plugin for notebook files that would extract some of the metadata, but it still seems like a pretty low priority.\n\nYup.  I was pretty sure I'd said the same thing, but I now see I only\nwrote that part of the message in my head.  Where's my telepathic mail\nclient when I need it, darn... :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5672867",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5672867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5672867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI4Njc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T23:58:20Z",
    "updated_at": "2012-05-12T23:58:20Z",
    "author_association": "MEMBER",
    "body": "On Fri, May 11, 2012 at 9:53 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> IPython Notebook can also run as non-regular desktop application,\n> right?  I am using it via ssh port forwarding and I am very happy with\n> the design decision for using web interface because it makes it easy.\n> To search document, well I can do ssh and grep but it can be much\n> better.\n\nYes, it can run remotely, but it's important to understand that in\nthis case, it's still \"a regular desktop application\", just one that\nis serving data from a remote desktop.  But it still sits atop of the\ndesktop's filesystem, has no concept of separate users, has no private\nstorage database, etc.  It's most definitely not a \"web app\", if we\nunderstand that term by the typical situation of an application with\nits own concept of users, data storage exposed via a custom model (and\ntypically stored in a database or database-backed system inaccessible\ndirectly to the end users), etc.\n\n> I thought IPython encourages rather stable location of the data as it\n> allows location to be configured.  If you setup a profile and run the\n> server without farther options it uses same directory every time,\n\nBut that's not a feature, simply a limitation of the current\nimplementation of the dashboard, and one that we hope to fix soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5672883",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5672883",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5672883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI4ODM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-13T00:00:55Z",
    "updated_at": "2012-05-13T00:00:55Z",
    "author_association": "MEMBER",
    "body": "On Sat, May 12, 2012 at 2:44 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> But even in that situation, running IPyton server knows the file list (or list of directories where notebooks are) it is tracking, right?\n\nAgain, the notebook doesn't \"track\" anything, no more than a text\neditor tracks files you've opened; you can think of the file dashboard\nsimply as a persistent \"File Open\" dialog box.    We'll add support\nfor the notebook to navigate to other directories, so there really is\nnothing to track (other than say your entire hard drive).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5673043",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5673043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5673043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzMwNDM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-13T00:41:29Z",
    "updated_at": "2012-05-13T00:41:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Again, the notebook doesn't \"track\" anything, no more than a text\n> editor tracks files you've opened; you can think of the file dashboard\n> simply as a persistent \"File Open\" dialog box.    We'll add support\n> for the notebook to navigate to other directories, so there really is\n> nothing to track (other than say your entire hard drive).\n\nI guess you misunderstand what I mean by \"tracking\".  IPython Notebook server has notebook list in memory (or knows how to get it from, for example directory), right?  That's why I said **running** IPyton server.  Once you open a notebook, I guess IPython Notebook server adds it to the notebook list, like editor having its buffer list or web browser having tabs.  What I was saying was that searching within these notebooks is not difficult job.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5673062",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5673062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5673062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzMwNjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-13T00:47:31Z",
    "updated_at": "2012-05-13T00:47:31Z",
    "author_association": "MEMBER",
    "body": "On Sat, May 12, 2012 at 5:41 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> I guess you misunderstand what I mean by \"tracking\".  IPython Notebook server has notebook list in memory (or knows how to get it from, for example directory), right?  That's why I said **running** IPyton server.  Once you open a notebook, I guess IPython Notebook server adds it to the notebook list, like editor having its buffer list or web browser having tabs.  What I was saying was that searching within these notebooks is not difficult job.\n\nYes, while running it knows about the open notebooks.  But I'm not\nsure that searching just the list of open notebooks (or scanning into\njust one directory) is all that useful.\n\nI think as long as the notebook is a 'desktop app', the idea of\nsearching is better tackled via a spotlight/bing/google desktop search\nplugin than from within the notebook itself.  And if someone writes\nsuch a plugin, it will likely be split in two parts: the generic\nsearch machinery to scan the notebook files and the plugin-specific\nparts.  That generic search part could in the future be reused if\nthere's a different execution model.\n\nBut it's really important to stress how, since we have such a small\ndevelopment team, we have to be very careful in not spreading out too\nthin.  With a small team, it's better to focus on doing a few things\nwell than trying to do too much.  And I'm afraid search facilities\nfall in the 'too much' realm right now.  New code, even if\ncontributed, is a maintenance burden and must be taken into account\nwhen changing other parts.  For example, if the format changes, this\nwould be one more piece of code we'd have to worry about updating.\n\nWith the development load of ipython falling on _very few_ shoulders,\nwe have to pick our battles very carefully.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5673321",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5673321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5673321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzMzMjE=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-13T01:44:33Z",
    "updated_at": "2012-05-13T01:44:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez If you feel I am pushing IPython team to implement search engine, I am sorry that I was not clear.  At first, yes, I thought it would be nice if IPython has it.  But after that I have been trying to help designing extension system by giving examples of extension I want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5864946",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5864946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5864946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ5NDY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T04:29:23Z",
    "updated_at": "2012-05-23T04:29:23Z",
    "author_association": "MEMBER",
    "body": "OK, I think this one got off topic.  Here is what I propose for this PR:\n- The plotting capability using flot should be maintained as a separate project outside IPython.\n- In its initial implementation, it should just load flot from the 'net to avoid the problems associated with serving a local copy.\n- We close the PR.\n\nIn the meantime, on the IPython side, we need to keep thinking about how to better enable these types of things.  I don't want to open an issue for this yet.  We will _have to_ solve this issue when we get further along in creating JavaScript widgets and we are not quite there yet.\n\nHow do other's feel about this plan?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5866673",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5866673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5866673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjY2NzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T07:19:30Z",
    "updated_at": "2012-05-23T07:19:30Z",
    "author_association": "MEMBER",
    "body": "+1 to @ellisonbg's above.  @crbates, how do you see this?  We really think this is awesome, but it's also important not to 'bake' a major tool like plotting straight into IPython.  What we want to do is to make it _very easy_ for someone like yourself to provide a plotting library that anyone can use inside IPython without any hassles...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5889986",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5889986",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5889986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODk5ODY=",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T03:37:25Z",
    "updated_at": "2012-05-24T03:37:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @ellisonbg. The end of UCB classes meant that all the research work that I haven't been doing caught up with me so I haven't had much time to work on it. I was thinking for now just to have a separate project that just has a simple setup.py script to \"install\" flot.py and the example notebook into ipython and then source the javascript from the web. I think long term a direct html5/js rendering backend matplotlib is the solution to this problem and this is just a stopgap, but support for js \"widgets\" like this one would be nice.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5890105",
    "html_url": "https://github.com/ipython/ipython/pull/1720#issuecomment-5890105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1720",
    "id": 5890105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTAxMDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T03:54:25Z",
    "updated_at": "2012-05-24T03:54:25Z",
    "author_association": "MEMBER",
    "body": "Sounds good.  I'll close this PR then, and let us know when you make the code available standalone.  We'd be happy to publicize it on the list and various other IPython channels!\n"
  }
]
