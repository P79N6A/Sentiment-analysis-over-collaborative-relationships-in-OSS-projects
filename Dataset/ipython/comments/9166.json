[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/174483773",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-174483773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 174483773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDQ4Mzc3Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T11:53:57Z",
    "updated_at": "2016-01-25T11:53:57Z",
    "author_association": "MEMBER",
    "body": "I've whipped together a quick extension that adds an `%%asyncio` cell magic. You can use it like this:\n\n```\nIn [1]: %load_ext asyncio_magic\n\nIn [2]: import aiohttp\n\nIn [3]: %%asyncio\n   ...: r = await aiohttp.get('http://example.com')\n   ...: print(await r.text())\n   ...: \n<!doctype html>\n...\n```\n\nIt's just turning any `await x` into `asyncio.get_event_loop().run_until_complete(x)`.\n\nYou can get the extension here: https://gist.github.com/takluyver/b9663b08ac9a4472afa6\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/175262425",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-175262425",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 175262425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTI2MjQyNQ==",
    "user": {
      "login": "sametmax",
      "id": 1673950,
      "node_id": "MDQ6VXNlcjE2NzM5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1673950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sametmax",
      "html_url": "https://github.com/sametmax",
      "followers_url": "https://api.github.com/users/sametmax/followers",
      "following_url": "https://api.github.com/users/sametmax/following{/other_user}",
      "gists_url": "https://api.github.com/users/sametmax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sametmax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sametmax/subscriptions",
      "organizations_url": "https://api.github.com/users/sametmax/orgs",
      "repos_url": "https://api.github.com/users/sametmax/repos",
      "events_url": "https://api.github.com/users/sametmax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sametmax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T22:20:41Z",
    "updated_at": "2016-01-26T22:37:45Z",
    "author_association": "NONE",
    "body": "Cool ! Works well for my current use case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/179322130",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-179322130",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 179322130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTMyMjEzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-03T16:23:37Z",
    "updated_at": "2016-02-03T16:23:37Z",
    "author_association": "MEMBER",
    "body": "I'm leaving this open because it does make sense to integrate with the asyncio event loop - although doing so won't automatically let you use `await` in IPython cells, because `await` is only valid inside an `async def` function.\n\nI think this should be relatively straightforward once we switch to prompt_toolkit, so milestoned for 5.0.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193257506",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-193257506",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 193257506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI1NzUwNg==",
    "user": {
      "login": "sametmax",
      "id": 1673950,
      "node_id": "MDQ6VXNlcjE2NzM5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1673950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sametmax",
      "html_url": "https://github.com/sametmax",
      "followers_url": "https://api.github.com/users/sametmax/followers",
      "following_url": "https://api.github.com/users/sametmax/following{/other_user}",
      "gists_url": "https://api.github.com/users/sametmax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sametmax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sametmax/subscriptions",
      "organizations_url": "https://api.github.com/users/sametmax/orgs",
      "repos_url": "https://api.github.com/users/sametmax/repos",
      "events_url": "https://api.github.com/users/sametmax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sametmax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T13:59:40Z",
    "updated_at": "2016-03-07T13:59:40Z",
    "author_association": "NONE",
    "body": "Indeed. One thing I noticed with the current solution is that the local scope is lost. I thing it needs some adjustements to get the local variables to be available such as saving locals() and merging it back when we execute the await statement.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193270410",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-193270410",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 193270410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI3MDQxMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T14:26:11Z",
    "updated_at": "2016-03-07T14:26:11Z",
    "author_association": "MEMBER",
    "body": "Hmm, I'm surprised at that. It should work. I'll have a play with it in a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193295330",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-193295330",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 193295330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI5NTMzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T15:19:40Z",
    "updated_at": "2016-03-07T15:19:40Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what you mean about losing the local scope. I tried what I thought you meant wasn't working, and it did work:\n\n```\nIn [6]: %%asyncio\n   ...: r = await aiohttp.get('http://example.com')\n   ...: \n\nIn [7]: r\nOut[7]: \n<ClientResponse(http://example.com/) [200 OK]>\n...\n```\n\nCan you give an example of what doesn't work that should do?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193298328",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-193298328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 193298328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI5ODMyOA==",
    "user": {
      "login": "sametmax",
      "id": 1673950,
      "node_id": "MDQ6VXNlcjE2NzM5NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1673950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sametmax",
      "html_url": "https://github.com/sametmax",
      "followers_url": "https://api.github.com/users/sametmax/followers",
      "following_url": "https://api.github.com/users/sametmax/following{/other_user}",
      "gists_url": "https://api.github.com/users/sametmax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sametmax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sametmax/subscriptions",
      "organizations_url": "https://api.github.com/users/sametmax/orgs",
      "repos_url": "https://api.github.com/users/sametmax/repos",
      "events_url": "https://api.github.com/users/sametmax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sametmax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T15:28:14Z",
    "updated_at": "2016-03-07T15:28:14Z",
    "author_association": "NONE",
    "body": "I can't reproduce the issue, sorry for wasting your time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/220395859",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-220395859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 220395859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDM5NTg1OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T17:30:54Z",
    "updated_at": "2016-05-19T17:30:54Z",
    "author_association": "MEMBER",
    "body": "I'm bumping that to 6.0 as it is likely a new feature that will be easier to implement once we can make more assumption on wether or not we are on Python 3. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/260150251",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-260150251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 260150251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE1MDI1MQ==",
    "user": {
      "login": "Gr1N",
      "id": 1087619,
      "node_id": "MDQ6VXNlcjEwODc2MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1087619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gr1N",
      "html_url": "https://github.com/Gr1N",
      "followers_url": "https://api.github.com/users/Gr1N/followers",
      "following_url": "https://api.github.com/users/Gr1N/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gr1N/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gr1N/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gr1N/subscriptions",
      "organizations_url": "https://api.github.com/users/Gr1N/orgs",
      "repos_url": "https://api.github.com/users/Gr1N/repos",
      "events_url": "https://api.github.com/users/Gr1N/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gr1N/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-12T21:42:17Z",
    "updated_at": "2016-11-12T21:42:17Z",
    "author_association": "NONE",
    "body": "@takluyver thanks for the gist, I created and uploaded to PyPI a package based on your gist, in case, if anyone wants to use it: https://github.com/Gr1N/asyncio-ipython-magic\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/260199732",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-260199732",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 260199732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE5OTczMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T17:30:11Z",
    "updated_at": "2016-11-13T17:30:11Z",
    "author_association": "MEMBER",
    "body": ":+1: thanks @Gr1N !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279780784",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-279780784",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 279780784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTc4MDc4NA==",
    "user": {
      "login": "graingert",
      "id": 413772,
      "node_id": "MDQ6VXNlcjQxMzc3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/graingert",
      "html_url": "https://github.com/graingert",
      "followers_url": "https://api.github.com/users/graingert/followers",
      "following_url": "https://api.github.com/users/graingert/following{/other_user}",
      "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/graingert/subscriptions",
      "organizations_url": "https://api.github.com/users/graingert/orgs",
      "repos_url": "https://api.github.com/users/graingert/repos",
      "events_url": "https://api.github.com/users/graingert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/graingert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T17:45:38Z",
    "updated_at": "2017-02-14T17:45:38Z",
    "author_association": "NONE",
    "body": "@takluyver can you re-look at this, it would be really handy. Especially as CPython don't plan to add this feature: https://bugs.python.org/issue22412"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/280023725",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-280023725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 280023725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDAyMzcyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T14:24:29Z",
    "updated_at": "2017-02-15T14:24:29Z",
    "author_association": "MEMBER",
    "body": "I think the arguments why Python doesn't want to do it broadly go for IPython as well. I wrote the initial version of the magic mostly because it was an interesting challenge, and I think it makes a fairly neat extension, but I don't see us enabling it by default in IPython."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309927906",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-309927906",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 309927906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkyNzkwNg==",
    "user": {
      "login": "jansegre",
      "id": 729870,
      "node_id": "MDQ6VXNlcjcyOTg3MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/729870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jansegre",
      "html_url": "https://github.com/jansegre",
      "followers_url": "https://api.github.com/users/jansegre/followers",
      "following_url": "https://api.github.com/users/jansegre/following{/other_user}",
      "gists_url": "https://api.github.com/users/jansegre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jansegre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jansegre/subscriptions",
      "organizations_url": "https://api.github.com/users/jansegre/orgs",
      "repos_url": "https://api.github.com/users/jansegre/repos",
      "events_url": "https://api.github.com/users/jansegre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jansegre/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T00:23:35Z",
    "updated_at": "2017-06-21T00:23:35Z",
    "author_association": "NONE",
    "body": "I think it makes somewhat more sense to have this in IPython (rather than on CPython) mostly because there is so much more IPython provides (like `_*` variables). But I guess it'd still be somewhat surprising for newcomers to type `await foo()` work in IPython but not when writing a script. Still, being able to try out what I would type inside an async function would make prototyping async code so much better."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309936394",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-309936394",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 309936394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkzNjM5NA==",
    "user": {
      "login": "graingert",
      "id": 413772,
      "node_id": "MDQ6VXNlcjQxMzc3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/graingert",
      "html_url": "https://github.com/graingert",
      "followers_url": "https://api.github.com/users/graingert/followers",
      "following_url": "https://api.github.com/users/graingert/following{/other_user}",
      "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/graingert/subscriptions",
      "organizations_url": "https://api.github.com/users/graingert/orgs",
      "repos_url": "https://api.github.com/users/graingert/repos",
      "events_url": "https://api.github.com/users/graingert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/graingert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T01:26:58Z",
    "updated_at": "2017-06-21T01:26:58Z",
    "author_association": "NONE",
    "body": "@jansegre I agree"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310304068",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-310304068",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 310304068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDMwNDA2OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T07:51:13Z",
    "updated_at": "2017-06-22T07:51:13Z",
    "author_association": "MEMBER",
    "body": "If we do that it will probably be opt-in, see #10390 as an experiement. One of the reason we won't star an asyncio loop automatically is that asycio is not the only coroutine runner (I'm not using the term Loop on purpose), I would highly recommend to look at [curio](curio.readthedocs.org) and [trio](trio.readthedocs.org), but tornado is also a possibility. So users would likely need to say explicitely which runner thy wish, as you need a runner compatible with your library. So far  #10390 has not moved fwd because it needs testing and fixes for running with IPykernel (which uses tornado eventloop)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/416418395",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-416418395",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 416418395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQxODM5NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T01:13:45Z",
    "updated_at": "2018-08-28T01:13:45Z",
    "author_association": "MEMBER",
    "body": "I believe #11265 is almost complete and would fix this issue almost completely (except background tasks). Testers welcome."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/419408297",
    "html_url": "https://github.com/ipython/ipython/issues/9166#issuecomment-419408297",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9166",
    "id": 419408297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQwODI5Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T11:15:22Z",
    "updated_at": "2018-09-07T11:15:22Z",
    "author_association": "MEMBER",
    "body": "That should now be fixed by #11265; it will need further patches in IPykernel to work with the notebook, but it is in progress. "
  }
]
