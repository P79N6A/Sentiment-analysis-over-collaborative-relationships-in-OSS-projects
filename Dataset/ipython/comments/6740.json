[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59669027",
    "html_url": "https://github.com/ipython/ipython/issues/6740#issuecomment-59669027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6740",
    "id": 59669027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjY5MDI3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T22:45:41Z",
    "updated_at": "2014-10-19T22:45:41Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what you mean by \"might append too later\", can you clarify?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59670425",
    "html_url": "https://github.com/ipython/ipython/issues/6740#issuecomment-59670425",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6740",
    "id": 59670425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjcwNDI1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T23:27:52Z",
    "updated_at": "2014-10-19T23:27:52Z",
    "author_association": "MEMBER",
    "body": "Adapters predate kernelspecs. @takluyver it probably makes sense to put the msg spec version in the kernelspec, right? Then I wouldn't need to ask the kernel about it at runtime.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59689612",
    "html_url": "https://github.com/ipython/ipython/issues/6740#issuecomment-59689612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6740",
    "id": 59689612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njg5NjEy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T06:45:12Z",
    "updated_at": "2014-10-20T06:45:12Z",
    "author_association": "MEMBER",
    "body": "Later -> Late. Typo. I suppose some messages go to the kernel before the adapters are in place.\n\nThis could probably be also fixed in notebook by preventing execution or completion before the kernel is started. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59819514",
    "html_url": "https://github.com/ipython/ipython/issues/6740#issuecomment-59819514",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6740",
    "id": 59819514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODE5NTE0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T18:48:58Z",
    "updated_at": "2014-10-20T18:48:58Z",
    "author_association": "MEMBER",
    "body": "I was roughly aiming to keep only static information in the kernel specs, and defer as much as possible to the kernel responding to messages. So the kernelspec is the information needed to start the kernel, and the information needed to work with notebooks when the kernel is not available (e.g. syntax highlighting modes). That's just a rough principle, though, we could add message spec version to it.\n\nIf we did, what would we do with kernels that don't specify it? Assume 4, assume 5, assume latest, or fallback to the existing logic for asking the kernel about it when it starts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59875603",
    "html_url": "https://github.com/ipython/ipython/issues/6740#issuecomment-59875603",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6740",
    "id": 59875603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODc1NjAz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T03:54:50Z",
    "updated_at": "2014-10-21T03:54:50Z",
    "author_association": "MEMBER",
    "body": "I'm not sure, it's just an idea. I don't know a great way to get around the race condition in the way I do it now, but I can probably figure it out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60005635",
    "html_url": "https://github.com/ipython/ipython/issues/6740#issuecomment-60005635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6740",
    "id": 60005635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDA1NjM1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T21:56:12Z",
    "updated_at": "2014-10-21T21:56:12Z",
    "author_association": "MEMBER",
    "body": "Should be fixed by #6765\n"
  }
]
