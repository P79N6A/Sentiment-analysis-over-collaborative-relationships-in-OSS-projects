[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197368",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197368",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTczNjg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T22:29:12Z",
    "updated_at": "2011-12-18T22:29:12Z",
    "author_association": "MEMBER",
    "body": "Ouch.  Would be nice if we could fix this in the nick of time for 0.12...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197438",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc0Mzg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T22:44:41Z",
    "updated_at": "2011-12-18T22:44:41Z",
    "author_association": "MEMBER",
    "body": "At a glance, it might be as simple as replacing the call to `unicode_to_str` with `cast_bytes_py2`. We'll need to test on a few different things in Py 2 and 3, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197471",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc0NzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T22:48:21Z",
    "updated_at": "2011-12-18T22:48:21Z",
    "author_association": "MEMBER",
    "body": "Yes, actually because the `??` machinery is so central to everything we do, I think we should play it safe and fix this for 0.13.  While it's very nasty to have a bug like this in there, we know that encountering it in the wild is rare (else it would have been reported many times long ago).  And there is a non-trivial risk of introducing a much worse bug by messing with that code this late in the game.  I've been burned before by much more innocent looking changes, so let's play it safe.\n\nGreat to have a fix, but let's not rush it for the official 0.12.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197480",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc0ODA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T22:50:47Z",
    "updated_at": "2011-12-18T22:50:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Git bisect points to afdb5700d6b9d835d6b3dd7a33500ba0e16b65f9.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197505",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197505",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc1MDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T22:55:51Z",
    "updated_at": "2011-12-18T22:55:51Z",
    "author_association": "MEMBER",
    "body": "ah, interesting... This is a relatively new issue then.  One thing we need before doing anything else is a clean PR that includes a test that fails in the current state of the code and that is fixed by the PR.\n\nI'm still mildly against making such a change this late in the game, it's just really dangerous.  A more sensible plan is  to cut 0.12 as is, and if need be we can cut a 0.12.1 with a few fixes in a couple of weeks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197536",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc1MzY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T23:01:47Z",
    "updated_at": "2011-12-18T23:01:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez The rarity you refer to is undoubtedly because `xlrd/__init__.py` uses the `cp1252` encoding.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197552",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197552",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc1NTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T23:03:57Z",
    "updated_at": "2011-12-18T23:03:57Z",
    "author_association": "MEMBER",
    "body": "OK, all the more reason to not rush this one; that's an uncommon encoding to declare explicitly and I worry about all of a sudden breaking badly much more common use cases.  Thanks a ton for the detective work, @bfroehle, this is very useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197717",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197717",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc3MTc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T23:34:06Z",
    "updated_at": "2011-12-18T23:34:06Z",
    "author_association": "MEMBER",
    "body": "There are places where we'll trip up on a cp1252 encoded file, but I don't think this is one of them. I think for some reason I assumed that the source code would be retrieved as unicode in Python 2. I suspect the same problem will occur with any non-ascii character in Python 2.\n\nI've just tried with `cast_bytes_py2`, and it seems to work fine. On a theoretical level, I can't see any way in which it could introduce more failures:\n\nPy2 str input: this failure case, cast_bytes_py2 works\nPy2 unicode input: either function will have the same effect\nPy3: both functions are no-ops (but should always be called with unicode anyway).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197820",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197820",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc4MjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T23:52:56Z",
    "updated_at": "2011-12-18T23:52:56Z",
    "author_association": "MEMBER",
    "body": "Min and I agreed that the fix wouldn't break anything else, so I've merged\nit, and opened #1179 to add a test for it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197849",
    "html_url": "https://github.com/ipython/ipython/issues/1177#issuecomment-3197849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1177",
    "id": 3197849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc4NDk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T23:57:12Z",
    "updated_at": "2011-12-18T23:57:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding @takluyver's comment:\n\n> I think for some reason I assumed that the source code would be retrieved as unicode in Python 2.\n\nThe source code is retrieved using [linecache](http://docs.python.org/library/linecache.html).getlines() which essentially just does\n\n```\nwith open(fullname, 'rU') as fp:\n    lines = fp.readlines()\n```\n"
  }
]
