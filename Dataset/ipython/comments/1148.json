[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3127174",
    "html_url": "https://github.com/ipython/ipython/issues/1148#issuecomment-3127174",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1148",
    "id": 3127174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjcxNzQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-13T18:29:36Z",
    "updated_at": "2011-12-13T18:29:36Z",
    "author_association": "MEMBER",
    "body": "Arg, yes.  Since that was a test specifically for a bug fixed by the `strict=False` behavior, it just goes to show that we really shouldn't be pretending that magic args are like native command-line args.  Since behavior should not have changed at all, I would just mark the new test as a known failure on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3127282",
    "html_url": "https://github.com/ipython/ipython/issues/1148#issuecomment-3127282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1148",
    "id": 3127282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjcyODI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-13T18:35:43Z",
    "updated_at": "2011-12-13T18:35:43Z",
    "author_association": "MEMBER",
    "body": "Oops, I guess we overlooked changing the function signature for that implementation of arg_split.\n\nI'm not seeing any failures on Linux, so I guess that bug is in the Windows version of arg_split. Has that test passed at any time since your PR #1064? There's probably no good tools to handle the mixture of command-line syntax and Python code we're trying to use here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3127546",
    "html_url": "https://github.com/ipython/ipython/issues/1148#issuecomment-3127546",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1148",
    "id": 3127546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjc1NDY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-13T18:52:55Z",
    "updated_at": "2011-12-13T18:52:55Z",
    "author_association": "MEMBER",
    "body": "@takluyver - it's a new test, so it wasn't around when 1064 went in.  Yes, it's definitely a 'bug' in arg_split, but only insofar as we use arg_split for things _other_ than passing command-line args to subprocesses, which we probably shouldn't.\n\nI think the answer is that we should force using the _process_common arg_split in magics.  @jstenar - is there anything that your new arg_split does that is actually necessary in magics?  The uglier alternative is that we can fall _process_common.arg_split() _from_ win32.argsplit if strict=False, but I would rather not do that unless it's strictly necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3128228",
    "html_url": "https://github.com/ipython/ipython/issues/1148#issuecomment-3128228",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1148",
    "id": 3128228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjgyMjg=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-13T19:35:01Z",
    "updated_at": "2011-12-13T19:35:01Z",
    "author_association": "MEMBER",
    "body": "Min RK skrev 2011-12-13 19:52:\n\n> @takluyver - it's a new test, so it wasn't around when 1064 went in.  Yes, it's definitely a 'bug' in arg_split, but only insofar as we use arg_split for things _other_ than passing command-line args to subprocesses, which we probably shouldn't.\n> \n> I think the answer is that we should force using the _process_common arg_split in magics.  @jstenar - is there anything that your new arg_split does that is actually necessary in magics?  The uglier alternative is that we can fall _process_common.arg_split() _from_ win32.argsplit if strict=False, but I would rather not do that unless it's strictly necessary.\n\nYes it strips out enclosing quotation marks and I believe there are \ndifferences with how backspace is handled.\n\nIn [1]: import IPython.utils._process_win32 as pw\n\nIn [2]: import IPython.utils._process_common as pc\n\nIn [3]: pw.arg_split(u'%run \"kalle.py\"')\nOut[3]: [u'%run', u'kalle.py']\n\nIn [4]: pc.arg_split(u'%run \"kalle.py\"')\nOut[4]: [u'%run', u'\"kalle.py\"']\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3128356",
    "html_url": "https://github.com/ipython/ipython/issues/1148#issuecomment-3128356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1148",
    "id": 3128356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjgzNTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-13T19:42:08Z",
    "updated_at": "2011-12-13T19:42:08Z",
    "author_association": "MEMBER",
    "body": "Thanks, I saw your original PR/bug report, and now I better understand the situation.  I started off with the assumption that this was old code, not new. See PR #1149 for a band-aid solution.\n"
  }
]
