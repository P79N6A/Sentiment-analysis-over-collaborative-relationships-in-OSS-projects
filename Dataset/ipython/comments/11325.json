[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/423989894",
    "html_url": "https://github.com/ipython/ipython/issues/11325#issuecomment-423989894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11325",
    "id": 423989894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzk4OTg5NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-24T14:15:19Z",
    "updated_at": "2018-09-24T14:15:19Z",
    "author_association": "MEMBER",
    "body": "There is a bug here, and it's the behavior in the first example. IPython only intends to create the `_` variable *if you haven't defined it*. So if you do `_, a = 1, 10`, that disables the `_` as an alias for ` Out[max(Out.keys())]` because your code has explicitly defined what `_` should mean. This is the behavior you are seeing later on in your session. There appears to be a bug where we don't trigger this \"don't override user-defined `_`\" logic correctly if your assignment to `_` happens in the first input."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/424024360",
    "html_url": "https://github.com/ipython/ipython/issues/11325#issuecomment-424024360",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11325",
    "id": 424024360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDAyNDM2MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-24T15:49:35Z",
    "updated_at": "2018-09-24T15:49:35Z",
    "author_association": "MEMBER",
    "body": "it's slightly more tricky as we need rotate _ -> __ -> ___ as well, and we do _identity_ check  internally to know wether  our internal tracking should update the user namespace. \r\n\r\nThe problem is that the `1` from `In[1]: _, a= 1,0` and the `1` from `In[2]: _` are inherently the same object (in this case), but also because of interning.\r\n\r\nSo the internal logic really believe that `_` is the previous result and thus should can be overwritten. You can check that interning works as well.\r\n\r\n```\r\nIn [1]: _,a = 1,2\r\nIn [2]: 1\r\nOut[2]: 1\r\n\r\nIn [3]: 1/2\r\nOut[3]: 0.5\r\n\r\nIn [4]: _\r\nOut[4]: 0.5\r\n\r\n```\r\n\r\nIt _looks_ like the second time it does the right thing, but in fact, it does not update `_` because `__` or `___` do not match.\r\n\r\nThat is going to be really tricky to fix."
  }
]
