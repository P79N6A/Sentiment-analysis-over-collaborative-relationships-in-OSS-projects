[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68644978",
    "html_url": "https://github.com/ipython/ipython/issues/7368#issuecomment-68644978",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7368",
    "id": 68644978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQ0OTc4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T19:19:57Z",
    "updated_at": "2015-01-04T19:19:57Z",
    "author_association": "MEMBER",
    "body": "It will continue to resubmit the task until any one of:\n- it succeeds\n- retries are exhausted\n- timeout is reached\n\nis satisfied. The default timeout is forever, so it will stay in the queue forever. If you specify a timeout, the task will fail with the timeout reached.\n\nIt is not correct to say that it is blocking the engines, since the engines are not affected. Other work can be assigned while the failing task is waiting in the queue to be assigned to a new engine. It will not be re-assigned to an engine that has already failed to run it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68655754",
    "html_url": "https://github.com/ipython/ipython/issues/7368#issuecomment-68655754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7368",
    "id": 68655754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU1NzU0",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-04T23:58:06Z",
    "updated_at": "2015-01-04T23:58:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "May I suggest documenting the fact that it will not retry in the same engine in here:\n\nhttp://ipython.org/ipython-doc/2/parallel/parallel_task.html#retries\n\nAlso I can think of situations where it would be best to allow to retry on the same engine (such as when failure is non deterministic and dependant only on the task and the available engine number is small) or for debugging as in the example above.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68758186",
    "html_url": "https://github.com/ipython/ipython/issues/7368#issuecomment-68758186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7368",
    "id": 68758186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzU4MTg2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T19:05:55Z",
    "updated_at": "2015-01-05T19:05:55Z",
    "author_association": "MEMBER",
    "body": "Making the blacklist behavior optional is a reasonable request, we should consider it. I'll definitely document the blacklist behavior, thanks.\n"
  }
]
