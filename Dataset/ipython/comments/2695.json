[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11491722",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-11491722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 11491722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDkxNzIy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-18T15:42:14Z",
    "updated_at": "2012-12-18T15:42:14Z",
    "author_association": "MEMBER",
    "body": "Looks good at a glance, assigned myself to look more closely at it later. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11510890",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-11510890",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 11510890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTEwODkw",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-18T23:38:17Z",
    "updated_at": "2012-12-18T23:38:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I started thinking about limiting the size of the cache, for which an _a priori_ simple implementation would be to use a LRU cache (so I'd need to backport OrderedDict to support Python 2.6 -- by the way does anyone know why the implementation of `functools.lru_cache` in Python 3.3 does not use OrderedDict, but instead seems to reimplement it?).  However there is more to it than that, because if we actually use a LRU cache then we need to rewrite the rootmodules cache on every tab completion, which may be too costly (I don't know exactly but the IPython 0.13 version of the code writes the rootmodules cache to disk only if the list takes more than 2s to create, so I guess there was a desire to avoid writing files to the disk if possible).  Or another solution would be to cache the last value of `sys.path` as well, which would allow rewriting the rootmodules cache only when a tab completion detects that `sys.path` changed (which should be much less often; at least it should generally occur more than once per interactive session).\nAny thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11643617",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-11643617",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 11643617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjQzNjE3",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-23T07:04:45Z",
    "updated_at": "2012-12-23T07:04:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@anntzer It's hard for me to know what the right thing to do here.  In my normal use the function usually completes quickly enough that the cache mechanism does not kick in.  I'm not too worried about the size of the cache, especially if `%rehashx` continues to clear the cache.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15660468",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-15660468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 15660468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjYwNDY4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T21:00:12Z",
    "updated_at": "2013-03-29T21:00:12Z",
    "author_association": "MEMBER",
    "body": "This is broken because OrderedDict isn't imported.  What else is there to do here?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15799606",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-15799606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 15799606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzk5NjA2",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-02T20:15:24Z",
    "updated_at": "2013-04-02T20:15:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "OrderedDict does not exist in Python 2.6 so I will either have to bundle an implementation of OrderedDict to ipython (I don't think one is included right now?) or just forget about limiting the size of the cache.  As @bfroehle mentioned it may just not be worth it.  If we decide, instead to bundle an implementation of OrderedDict, then just importing it in `completerlib.py` is enough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16459441",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-16459441",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 16459441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDU5NDQx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-16T17:36:05Z",
    "updated_at": "2013-04-16T17:36:05Z",
    "author_association": "MEMBER",
    "body": "Based on @bfroehle's comments, and the fact that it doesn't work right now, let's drop the size-limit on the cache.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16462831",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-16462831",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 16462831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDYyODMx",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-16T18:32:17Z",
    "updated_at": "2013-04-16T18:32:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK.  Do you want me to `reset --hard` the branch to the first commit (which is what we want, right?), or do something else?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16464188",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-16464188",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 16464188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDY0MTg4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-16T18:49:45Z",
    "updated_at": "2013-04-16T18:49:45Z",
    "author_association": "MEMBER",
    "body": "That would be fine, or you can revert it with a new commit so it stays in the history - all up to you.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16466499",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-16466499",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 16466499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDY2NDk5",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-16T19:29:51Z",
    "updated_at": "2013-04-16T19:29:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I reseted `module-cache` to the first commit.  The second commit is still available in the new `module-cache-sizelimit` branch, which can be set aside for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16525884",
    "html_url": "https://github.com/ipython/ipython/pull/2695#issuecomment-16525884",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2695",
    "id": 16525884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTI1ODg0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T18:55:36Z",
    "updated_at": "2013-04-17T18:55:36Z",
    "author_association": "MEMBER",
    "body": "Thanks, merging.\n"
  }
]
