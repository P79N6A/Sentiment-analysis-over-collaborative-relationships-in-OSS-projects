[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/217714351",
    "html_url": "https://github.com/ipython/ipython/issues/9447#issuecomment-217714351",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9447",
    "id": 217714351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzcxNDM1MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-08T12:30:41Z",
    "updated_at": "2016-05-08T12:30:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for the thorough description!\n\nIn the abstract, I'd expect that newly registered handlers run the next time the event fires, but not for the event that's already being handled - i.e. we take a copy of the list of callbacks before running any of them.\n\nThat would still allow for a one-shot callback, I think - it would remove itself from the original list, and we'd continue iterating over the unchanged copy for the current event. It wouldn't allow one callback to remove another before it executes for the current event, but that seems like the kind of coupling that the event system shouldn't support: callbacks shouldn't depend on the order they're registered in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/217745074",
    "html_url": "https://github.com/ipython/ipython/issues/9447#issuecomment-217745074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9447",
    "id": 217745074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzc0NTA3NA==",
    "user": {
      "login": "marksandler2",
      "id": 6980056,
      "node_id": "MDQ6VXNlcjY5ODAwNTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6980056?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marksandler2",
      "html_url": "https://github.com/marksandler2",
      "followers_url": "https://api.github.com/users/marksandler2/followers",
      "following_url": "https://api.github.com/users/marksandler2/following{/other_user}",
      "gists_url": "https://api.github.com/users/marksandler2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marksandler2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marksandler2/subscriptions",
      "organizations_url": "https://api.github.com/users/marksandler2/orgs",
      "repos_url": "https://api.github.com/users/marksandler2/repos",
      "events_url": "https://api.github.com/users/marksandler2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marksandler2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-08T20:45:43Z",
    "updated_at": "2016-05-08T20:45:43Z",
    "author_association": "NONE",
    "body": "Yes. That would probably the most natural behavior though if you notice the current implementation does exactly the opposite. It executes newly added callbacks but completely breaks down if one unregister during the callback. \n\nIf I were writing it from scratch I would probably go for that behavior but if you want to keep backwards compatibility one would need to do something more complicated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/217747796",
    "html_url": "https://github.com/ipython/ipython/issues/9447#issuecomment-217747796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9447",
    "id": 217747796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzc0Nzc5Ng==",
    "user": {
      "login": "marksandler2",
      "id": 6980056,
      "node_id": "MDQ6VXNlcjY5ODAwNTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6980056?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marksandler2",
      "html_url": "https://github.com/marksandler2",
      "followers_url": "https://api.github.com/users/marksandler2/followers",
      "following_url": "https://api.github.com/users/marksandler2/following{/other_user}",
      "gists_url": "https://api.github.com/users/marksandler2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marksandler2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marksandler2/subscriptions",
      "organizations_url": "https://api.github.com/users/marksandler2/orgs",
      "repos_url": "https://api.github.com/users/marksandler2/repos",
      "events_url": "https://api.github.com/users/marksandler2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marksandler2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-08T21:39:16Z",
    "updated_at": "2016-05-08T21:39:16Z",
    "author_association": "NONE",
    "body": "FTR: We are happy to adopt Thomas's semantic, (of freezing the list) \njust wanted to point out that it breaks existing behavior, however i am not aware of any significant use cases that relies on the behavior being broken..  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/217983858",
    "html_url": "https://github.com/ipython/ipython/issues/9447#issuecomment-217983858",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9447",
    "id": 217983858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzk4Mzg1OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T20:44:20Z",
    "updated_at": "2016-05-09T20:44:20Z",
    "author_association": "MEMBER",
    "body": "Thanks Mark. I think I'm happy enough to say that one callback adding another to run on the same event is a corner case. I don't think the event system has seen much use yet, so I'd lean towards doing what makes most sense over striving to preserve compatibility.\n"
  }
]
