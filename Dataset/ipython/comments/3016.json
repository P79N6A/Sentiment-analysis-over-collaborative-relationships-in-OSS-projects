[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16412213",
    "html_url": "https://github.com/ipython/ipython/issues/3016#issuecomment-16412213",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3016",
    "id": 16412213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDEyMjEz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-15T21:21:51Z",
    "updated_at": "2013-04-15T21:21:51Z",
    "author_association": "MEMBER",
    "body": "Rendering of Sympy expressions is handled by the sympy IPython printing extension, which is part of SymPy, no longer in IPython. I would bring it up with them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16434452",
    "html_url": "https://github.com/ipython/ipython/issues/3016#issuecomment-16434452",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3016",
    "id": 16434452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDM0NDUy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-16T09:17:33Z",
    "updated_at": "2013-04-16T09:17:33Z",
    "author_association": "MEMBER",
    "body": "I don't think deactivating TeX is what is asked here, what is asked is deactivating rendering in frontend.\nand it make sens to still keep TeX for nbconvert, but do not try to render. This should already be hackable in master by changing teh display priority in javascript. What the OP suggest is to peek at the expression length and not render it if above a certain length.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16434954",
    "html_url": "https://github.com/ipython/ipython/issues/3016#issuecomment-16434954",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3016",
    "id": 16434954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDM0OTU0",
    "user": {
      "login": "alogg",
      "id": 3834686,
      "node_id": "MDQ6VXNlcjM4MzQ2ODY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3834686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alogg",
      "html_url": "https://github.com/alogg",
      "followers_url": "https://api.github.com/users/alogg/followers",
      "following_url": "https://api.github.com/users/alogg/following{/other_user}",
      "gists_url": "https://api.github.com/users/alogg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alogg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alogg/subscriptions",
      "organizations_url": "https://api.github.com/users/alogg/orgs",
      "repos_url": "https://api.github.com/users/alogg/repos",
      "events_url": "https://api.github.com/users/alogg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alogg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-16T09:29:58Z",
    "updated_at": "2013-04-16T09:32:22Z",
    "author_association": "NONE",
    "body": "This is what I ended up using in my notebook:\n\n```\n%pylab inline\nfrom sympy import *\nfrom sympy.printing import latex, pretty\nfrom IPython.display import display, Math\n\ndef _count_ops(e):\n    if hasattr(e, \"shape\"):\n        return sum(_count_ops(a) for a in e)\n    else:\n        return e.count_ops()\n\ndef eprint(e, name=None, maxsize=500):\n    \"\"\"Pretty-print expression, using either LaTeX/MathJax for small\n    expressions or SymPy unicode for large expressions, as determined\n    by the variable maxsize.\"\"\"\n    if _count_ops(e) <= maxsize:\n        s = latex(e)\n        if name is not None: s = name + \" = \" + s\n        display(Math(s))\n    else:\n        s = pretty(e)\n        if name is not None: s = name + \" = \" + s\n        disp(s)\n```\n\nIt does the trick for me.\n"
  }
]
