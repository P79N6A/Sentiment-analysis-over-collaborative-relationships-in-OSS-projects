[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50507653",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-50507653",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 50507653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTA3NjUz",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T17:15:21Z",
    "updated_at": "2014-07-29T17:15:21Z",
    "author_association": "MEMBER",
    "body": "Great!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50520584",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-50520584",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 50520584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTIwNTg0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T18:48:03Z",
    "updated_at": "2014-07-29T18:48:03Z",
    "author_association": "MEMBER",
    "body": "The JS test failure also appears to be real - at least, both runs are failing on the same test:\n\n```\nFAIL Messages throttled.\n\n# type: assert\n\n# subject: false\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51504837",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51504837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51504837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTA0ODM3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T17:34:40Z",
    "updated_at": "2014-08-07T17:34:40Z",
    "author_association": "MEMBER",
    "body": "From the dev meeting: deprecating a method and pointing to a private method doesn't make much sense. Is there a new 'right way' to do this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51547865",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51547865",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51547865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTQ3ODY1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T23:52:22Z",
    "updated_at": "2014-08-07T23:52:22Z",
    "author_association": "MEMBER",
    "body": "From the dev meeting, deprecate public API.  Change private version to not accept a selector (just make it a string traitlet).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51548996",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51548996",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51548996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTQ4OTk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T00:08:16Z",
    "updated_at": "2014-08-08T00:08:16Z",
    "author_association": "MEMBER",
    "body": "I thought the conclusion was leave it as a public API, but remove/deprecate the selector parameter?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51551569",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51551569",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51551569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTUxNTY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T00:49:24Z",
    "updated_at": "2014-08-08T00:49:24Z",
    "author_association": "MEMBER",
    "body": "I suppose we could leave the helper methods, but an eventful list trait would probably be a better fit.  i.e. `widget.class_names` which you could `widget.class_names.append(\"newclass\")' etc..\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51552128",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51552128",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51552128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTUyMTI4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T00:59:02Z",
    "updated_at": "2014-08-08T00:59:02Z",
    "author_association": "MEMBER",
    "body": "Fair enough - though is it practical to sync that with the JS side? If something adds a class using jquery, can that be easily propagated back to the Python side? If not, I think the methods are better than a list that might get out of sync.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51624657",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51624657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51624657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjI0NjU3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T16:23:39Z",
    "updated_at": "2014-08-08T16:23:39Z",
    "author_association": "MEMBER",
    "body": "> If not, I think the methods are better than a list that might get out of sync.\n\nI'll have to take a look.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51959036",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51959036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51959036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTU5MDM2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T18:47:00Z",
    "updated_at": "2014-08-12T18:47:00Z",
    "author_association": "MEMBER",
    "body": "So looking a little closer, the only way to listen for the class changes reliably is using a [mutation observer](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver).  I'm looking at implementing this now...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51962096",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51962096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51962096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTYyMDk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T19:09:42Z",
    "updated_at": "2014-08-12T19:09:42Z",
    "author_association": "MEMBER",
    "body": "These names get more Scifi every day...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51964019",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-51964019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 51964019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTY0MDE5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T19:24:01Z",
    "updated_at": "2014-08-12T19:24:01Z",
    "author_association": "MEMBER",
    "body": "In reference to mutation?  Yay for the HTML spec! lol\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52244655",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52244655",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52244655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ0NjU1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:07:28Z",
    "updated_at": "2014-08-14T21:07:28Z",
    "author_association": "MEMBER",
    "body": "In a phone conversation with @ellisonbg , he recommended just removing the functionality all together, I'm starting to like this idea more (after trying to implement the selector-less version).  Instead, common classes, like the bootstrap classes, could be handled manually using enum traits.  @takluyver opinions regarding that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52245921",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52245921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52245921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ1OTIx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:16:36Z",
    "updated_at": "2014-08-14T21:16:36Z",
    "author_association": "MEMBER",
    "body": "Not quite sure what you mean about enum traits.\n\nI think the question remains: if someone is using this at present, what will you tell them to do instead?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52247096",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52247096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52247096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ3MDk2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:26:35Z",
    "updated_at": "2014-08-14T21:26:35Z",
    "author_association": "MEMBER",
    "body": "I think 90% of the users are using it for things like the styling seen here: http://getbootstrap.com/css/#buttons\n\nIn which case, we'd add a `type` or `button_type` or `style`(insert other possible names here) enum trait that has the possible classes, or aliases for them.  i.e. primary, info, warning, etc.  We could then tell the user's to just use that trait instead of add/remove class.\n\nFor the other 10%, who are using custom classes to do magic things, we could tell them they need to inherit from the button to add that functionality.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52247303",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52247303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52247303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ3MzAz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:28:36Z",
    "updated_at": "2014-08-14T21:28:36Z",
    "author_association": "MEMBER",
    "body": "OK, so that would be specifically on the button widget, then?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52248246",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52248246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52248246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ4MjQ2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:36:54Z",
    "updated_at": "2014-08-14T21:36:54Z",
    "author_association": "MEMBER",
    "body": "Yes, and the same for other widgets that have frequently used classes (I think they're all bootstrap classes).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52248285",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52248285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52248285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ4Mjg1",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:37:13Z",
    "updated_at": "2014-08-14T21:37:13Z",
    "author_association": "MEMBER",
    "body": "Another good reason to use `add_class` and `remove_class` was that it was necessary to obtain an `hbox` container widget, which will not be necessary once  PR #6125 is merged. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52248391",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52248391",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52248391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ4Mzkx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:38:14Z",
    "updated_at": "2014-08-14T21:38:14Z",
    "author_association": "MEMBER",
    "body": "OK, that makes sense. In that case, I think I would call it something like bootstrap_class.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52248613",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52248613",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52248613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ4NjEz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:39:59Z",
    "updated_at": "2014-08-14T21:40:55Z",
    "author_association": "MEMBER",
    "body": "@SylvainCorlay right, @takluyver PR #6125 is the same kind of model, but with flexible box model classes instead of bootstrap classes.  I think it makes sense to do the same with the bootstrap classes and completely remove the add/remove class methods.  But that raises another question, should I bother with deprecating them?  Or should we just disable them?  I guess they are used frequently...  Maybe it makes sense to deprecate instead of removing?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52248949",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52248949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52248949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ4OTQ5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:42:18Z",
    "updated_at": "2014-08-14T21:42:18Z",
    "author_association": "MEMBER",
    "body": "In this case, I would favor removing outright. More comments later tonight.\n\nOn Thu, Aug 14, 2014 at 5:40 PM, Jonathan Frederic <notifications@github.com\n\n> wrote:\n> \n> @SylvainCorlay https://github.com/SylvainCorlay right, @takluyver\n> https://github.com/takluyver PR #6125\n> https://github.com/ipython/ipython/pull/6125 is the same kind of model,\n> but flexible box model classes instead of bootstrap. So I think it makes\n> sense to do it with the bootstrap classes and just completely do away with\n> the add/remove class methods. But that raises another question, should I\n> bother with deprecating them? Or should we just disable them? I guess they\n> are used frequently... Maybe it makes sense to deprecate instead of\n> removing?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6235#issuecomment-52248613.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52249196",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52249196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52249196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ5MTk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:44:01Z",
    "updated_at": "2014-08-14T21:44:01Z",
    "author_association": "MEMBER",
    "body": "I would say it's politer to the users to deprecate them. Yes, we know there are problems, but existing code that works won't break without warning, and if there are more people than you think whose use cases aren't covered by the bootstrap options, it gives us a chance to work something out for them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52249610",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52249610",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52249610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ5NjEw",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:48:01Z",
    "updated_at": "2014-08-14T21:48:01Z",
    "author_association": "MEMBER",
    "body": "@jasongrout wants to look at this discussion tomorrow, (he is leaving right now). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52253560",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52253560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52253560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjUzNTYw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T22:28:27Z",
    "updated_at": "2014-08-15T17:25:35Z",
    "author_association": "MEMBER",
    "body": "Yeah, I'm probably leaning on the side of deprecation instead of removal.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52333313",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52333313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52333313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzMzMzEz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T17:20:16Z",
    "updated_at": "2014-08-15T17:20:16Z",
    "author_association": "MEMBER",
    "body": "I thought it was @minrk that pointed out that add/remove class provided a nice way to have the functionality of set_css---if you can scope your widget with a specific class (specific to that particular instance), then you can push all sorts of css tied to that class.  That handles a huge number of the set_css needs.  For that reason, I'd still be a strong +1 on some way to set the class of the top-level element of a widget.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52334098",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52334098",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52334098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzM0MDk4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T17:26:53Z",
    "updated_at": "2014-08-15T17:26:53Z",
    "author_association": "MEMBER",
    "body": "So how about doing what @takluyver had mentioned earlier, have methods or a write-only trait to set the top-level element's class(es)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52334897",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52334897",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52334897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzM0ODk3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T17:34:13Z",
    "updated_at": "2014-08-15T17:35:16Z",
    "author_association": "MEMBER",
    "body": "I'd still prefer a string trait, like `dom_class` or `css_class`, even if it doesn't completely sync with the classes set in JS.  I think it should ignore them.\n\nThe backend would always start with `dom_class = ''`.  In the frontend the widget JS could add/remove classes, i.e. `this.$el.addClass('widget-box')`, but dom_class would remain empty (ignoring classes set in the frontend).  If the user did `widget.dom_class = 'donut snack'`, the frontend would see if `donut` exists in the $el's class attr, and then add it (same with snack).  Later if the user did `widget.dom_class = 'donut'`, the frontend would diff `donut` with `donut snack` and see that it needed to remove `snack`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52336867",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52336867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52336867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzM2ODY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T17:50:25Z",
    "updated_at": "2014-08-15T17:50:25Z",
    "author_association": "MEMBER",
    "body": "Really? I think that sounds confusing and error prone:\n- You're using a string for something that you're handling as a list. It's a string on the JS side because there's no such thing as a list in an HTML attribute, but all the important handling of it works like a list.\n- One way sync sounds like a mess. It means that what actually happens when you set the value in Python depends on the new value you're setting, the old value in Python, and the current value in Javascript, which you can't even inspect from Python.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52342959",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52342959",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52342959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQyOTU5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T18:43:14Z",
    "updated_at": "2014-08-15T18:43:14Z",
    "author_association": "MEMBER",
    "body": "Valid points, you've convinced me, a method would be best.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52393882",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52393882",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52393882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzkzODgy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-16T14:01:29Z",
    "updated_at": "2014-08-16T14:01:29Z",
    "author_association": "MEMBER",
    "body": "@takluyver, browsers now implement an interface to the class list as a list-like container: https://developer.mozilla.org/en-US/docs/Web/API/Element.classList\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52393953",
    "html_url": "https://github.com/ipython/ipython/pull/6235#issuecomment-52393953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6235",
    "id": 52393953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzkzOTUz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-16T14:03:54Z",
    "updated_at": "2014-08-16T14:03:54Z",
    "author_association": "MEMBER",
    "body": "I think it makes sense to have a simple interface to changing ui properties that is frontend agnostic (but it's hard to see what is agnostic until we have at least 2 viable frontends here; things like width, height, color seem like good candidates), and an advanced (and discouraged somewhat) interface that lets you do things like set the class names and/or css.\n"
  }
]
