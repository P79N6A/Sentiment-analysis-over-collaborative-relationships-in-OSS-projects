[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5696228",
    "html_url": "https://github.com/ipython/ipython/issues/1734#issuecomment-5696228",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1734",
    "id": 5696228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTYyMjg=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T17:23:30Z",
    "updated_at": "2012-05-14T17:24:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "For your first issue, the problem is that `code_to_run` is being set to the result of `execfile('tmp.py')`, not the string `\"execfile('tmp.py')\"`.  I'm not sure if this can be avoided in the current configuration system -- one of the developers will need to chime in.  If you add an extra set of quotation marks it does work:\n\n```\n$ ipython -c \"\\\"execfile('tmp.py')\\\"\"\nHERE\n```\n\nFor the second issue, the results are consistent with `python`:\n\n```\n$ python -c \"print('THERE')\" tmp.py\nTHERE\n```\n\nIf you do need to execute code and a file, you can currently do something like\n\n```\n$ ipython --InteractiveShellApp.exec_lines=\"[\\\"print('THERE')\\\"]\" tmp.py\nTHERE\nHERE\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5697123",
    "html_url": "https://github.com/ipython/ipython/issues/1734#issuecomment-5697123",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1734",
    "id": 5697123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTcxMjM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T17:57:33Z",
    "updated_at": "2012-05-14T17:57:33Z",
    "author_association": "MEMBER",
    "body": "I think it's possible to work round it for `-c` - the command line parsing would have to special case it so that the argument after `-c` was always treated as a string. But I'm not sure if we can do the same for `--Config.trait=\"string\"` type arguments.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5698398",
    "html_url": "https://github.com/ipython/ipython/issues/1734#issuecomment-5698398",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1734",
    "id": 5698398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTgzOTg=",
    "user": {
      "login": "jmiller515",
      "id": 1736764,
      "node_id": "MDQ6VXNlcjE3MzY3NjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1736764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmiller515",
      "html_url": "https://github.com/jmiller515",
      "followers_url": "https://api.github.com/users/jmiller515/followers",
      "following_url": "https://api.github.com/users/jmiller515/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmiller515/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmiller515/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmiller515/subscriptions",
      "organizations_url": "https://api.github.com/users/jmiller515/orgs",
      "repos_url": "https://api.github.com/users/jmiller515/repos",
      "events_url": "https://api.github.com/users/jmiller515/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmiller515/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T18:41:28Z",
    "updated_at": "2012-05-14T18:41:28Z",
    "author_association": "NONE",
    "body": "Thanks Bradley. The workarounds work.\n\n-joe\n\n---\n\n From: Bradley M. Froehle reply@reply.github.com\nTo: jmiller515 lpe540@yahoo.com \nSent: Monday, May 14, 2012 1:23 PM\nSubject: Re: [ipython] execfile statement fails from the command line (#1734)\n\nFor your first issue, the problem is that `code_to_run` is being set to the result of `execfile('tmp.py')`, not the string `\"execfile('tmp.py')\"`.  I'm not sure if this can be avoided in the current configuration system -- one of the developers will need to chime in.  If you add an extra set of quotation marks it does work:\n\n```\n$ ipython -c \"'execfile(\\'tmp.py\\')'\"\nHERE\n```\n\nFor the second issue, the results are consistent with `python`:\n\n```\n$ python -c \"print('THERE')\" tmp.py\nTHERE\n```\n\nIf you do need to execute code and a file, you can currently do something like\n\n```\n$ ipython --InteractiveShellApp.exec_lines=\"[\\\"print('THERE')\\\"]\" tmp.py\nTHERE\nHERE\n```\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ipython/ipython/issues/1734#issuecomment-5696228\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5703243",
    "html_url": "https://github.com/ipython/ipython/issues/1734#issuecomment-5703243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1734",
    "id": 5703243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDMyNDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T21:55:26Z",
    "updated_at": "2012-05-14T21:55:26Z",
    "author_association": "MEMBER",
    "body": "Others are right that it's evaluating `config.Class.trait = print('THERE')`, which will run.  When this fails, the string is used.  If you are using master, the easiest way to prevent this from happening is to add ';' on the end, which will never be accepted by the call to `eval`:\n\n```\nipython -c \"print('hi');\"\n```\n\nBut the use of simple `exec` in 0.12 means this won't help, so you have to explicitly include the quotes, or invalidate the assignment by other means, such as `ipython -c \"if 1: print('hi')\"`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40893237",
    "html_url": "https://github.com/ipython/ipython/issues/1734#issuecomment-40893237",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1734",
    "id": 40893237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODkzMjM3",
    "user": {
      "login": "robyoung",
      "id": 14287,
      "node_id": "MDQ6VXNlcjE0Mjg3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robyoung",
      "html_url": "https://github.com/robyoung",
      "followers_url": "https://api.github.com/users/robyoung/followers",
      "following_url": "https://api.github.com/users/robyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/robyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/robyoung/orgs",
      "repos_url": "https://api.github.com/users/robyoung/repos",
      "events_url": "https://api.github.com/users/robyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-20T11:45:11Z",
    "updated_at": "2014-04-20T11:45:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this still considered a high priority bug? It sounds like it's expected behaviour. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40899840",
    "html_url": "https://github.com/ipython/ipython/issues/1734#issuecomment-40899840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1734",
    "id": 40899840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODk5ODQw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-20T17:21:53Z",
    "updated_at": "2014-04-20T17:21:53Z",
    "author_association": "MEMBER",
    "body": "Dropped to low priority, since no-one has commented in a couple of years.\n"
  }
]
