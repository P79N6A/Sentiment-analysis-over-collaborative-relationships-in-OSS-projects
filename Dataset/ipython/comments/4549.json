[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28620065",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-28620065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 28620065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIwMDY1",
    "user": {
      "login": "chebee7i",
      "id": 326005,
      "node_id": "MDQ6VXNlcjMyNjAwNQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/326005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chebee7i",
      "html_url": "https://github.com/chebee7i",
      "followers_url": "https://api.github.com/users/chebee7i/followers",
      "following_url": "https://api.github.com/users/chebee7i/following{/other_user}",
      "gists_url": "https://api.github.com/users/chebee7i/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chebee7i/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chebee7i/subscriptions",
      "organizations_url": "https://api.github.com/users/chebee7i/orgs",
      "repos_url": "https://api.github.com/users/chebee7i/repos",
      "events_url": "https://api.github.com/users/chebee7i/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chebee7i/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T05:16:27Z",
    "updated_at": "2013-11-16T05:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can't figure out how to make the doctest runner skip over two examples in the docstring of one of the lexers.  The example is demonstrating code that can be read by the lexers, and so, is not intended to be a doctest.  Is it possible to skip over these?  If not, I'll just put them in commented code instead.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28624256",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-28624256",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 28624256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjI0MjU2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T10:55:54Z",
    "updated_at": "2013-11-16T10:55:54Z",
    "author_association": "MEMBER",
    "body": "Ah ! Great ! Look nice\n\n> Down the road, I suspect this could be useful for the IPython notebooks, as it looks like tracebacks are colored with ANSI and converted appropriately. I'm happy to dig into that on a separate pull request, but I'll need some help.\n\nYes, there is some thread somewhere that state that we should probably have a lexer for traceback rather than relying on ANSI escape code.\n\n> I can't figure out how to make the doctest runner skip over two examples in the docstring of one of the lexers. The example is demonstrating code that can be read by the lexers, and so, is not intended to be a doctest. Is it possible to skip over these?\n\nYou should have appropriate decorators in `IPython.testing.skipdoctest`.\n\nWill read this more carefully later and point you to where the tracebacks are lexed in general..\n\n> More generally, there is a question of whether these lexers should be added to Pygments or whether they should remain in IPython. I'm leaning towards IPython, but I'm curious to hear what others think.\n\nThat is also I guess up to people from Pygments, but I have no preferences.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28632604",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-28632604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 28632604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjMyNjA0",
    "user": {
      "login": "chebee7i",
      "id": 326005,
      "node_id": "MDQ6VXNlcjMyNjAwNQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/326005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chebee7i",
      "html_url": "https://github.com/chebee7i",
      "followers_url": "https://api.github.com/users/chebee7i/followers",
      "following_url": "https://api.github.com/users/chebee7i/following{/other_user}",
      "gists_url": "https://api.github.com/users/chebee7i/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chebee7i/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chebee7i/subscriptions",
      "organizations_url": "https://api.github.com/users/chebee7i/orgs",
      "repos_url": "https://api.github.com/users/chebee7i/repos",
      "events_url": "https://api.github.com/users/chebee7i/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chebee7i/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T18:29:43Z",
    "updated_at": "2013-11-16T18:43:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Got it.  So I guess the reason they are detected as doctests is because `InteractiveRunner` doesn't parse the docstrings as Sphinx would.  So the nested code-block below doesn't change how the \"In [1]:\" is interpreted.\n\n```\nAn IPython console lexer for IPython code-blocks and doctests, such as:\n\n.. code-block:: rst\n\n    .. code-block:: ipythoncon\n\n        In [1]: a = 'foo'\n\n        In [2]: a\n        Out[2]: 'foo'\n\n        In [3]: print a\n        foo\n\n        In [4]: 1 / 0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29428585",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-29428585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 29428585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI4NTg1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T23:24:16Z",
    "updated_at": "2013-11-27T23:24:16Z",
    "author_association": "MEMBER",
    "body": "This looks sensible to me, but I don't know much about pygments' API to check if the implementation is sound. What do we want to do here? Merge as is and be ready to fix bugs as they come up, try to get someone who knows this stuff better to review it, or punt it to pygments or an external project?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29428811",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-29428811",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 29428811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI4ODEx",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T23:28:43Z",
    "updated_at": "2013-11-27T23:28:43Z",
    "author_association": "MEMBER",
    "body": "AFAIK @chebee7i have pinged to matplotlib guys to review this one and #4570... but nobody has come yet...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29884324",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-29884324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 29884324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg0MzI0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T09:47:38Z",
    "updated_at": "2013-12-05T09:47:38Z",
    "author_association": "MEMBER",
    "body": "+1 to merge and deal with it later.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30959653",
    "html_url": "https://github.com/ipython/ipython/pull/4549#issuecomment-30959653",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4549",
    "id": 30959653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTU5NjUz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-19T19:46:50Z",
    "updated_at": "2013-12-19T19:46:50Z",
    "author_association": "MEMBER",
    "body": "Thanks!\n"
  }
]
