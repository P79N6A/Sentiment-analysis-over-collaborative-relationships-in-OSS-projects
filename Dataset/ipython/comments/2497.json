[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9513762",
    "html_url": "https://github.com/ipython/ipython/issues/2497#issuecomment-9513762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2497",
    "id": 9513762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTM3NjI=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-17T02:03:33Z",
    "updated_at": "2012-10-17T02:03:33Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report ;) I can confirm that having a cell with just `pwd` written on two lines, or even `connect_info` written on two lines borks our preprocesser (updating the bug title to reflect this)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9522479",
    "html_url": "https://github.com/ipython/ipython/issues/2497#issuecomment-9522479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2497",
    "id": 9522479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MjI0Nzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-17T10:22:06Z",
    "updated_at": "2012-10-17T10:22:06Z",
    "author_association": "MEMBER",
    "body": "This is expected behaviour: dynamic transformations only act on a single line. You can still invoke magics using the escape character: `%pwd`.\n\nThe explanation is a bit tricky, but I'll do my best. We extend Python syntax in various ways, including magic commands, system commands and aliases. To handle that, we have to process it into valid Python syntax - and for our line-oriented frontends, we have to do that processing line-by-line to work out when an input block is complete. So we apply static transformations, like escaped %magics, to each line as we get it. This code also accounts for the possibility of multi-line Python expressions. When we hit something that's not valid syntax, we mark the block as complete, and it goes to the kernel, which then has to work out whether it's simply invalid syntax, or something like an unescaped magic command. One of the rules we use to simplify that is that unescaped special syntax only works on a single line.\n\nIn short: our odd mix of Python syntax and shell-like syntax isn't easy to disentangle, and not everything that you can imagine will work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9546576",
    "html_url": "https://github.com/ipython/ipython/issues/2497#issuecomment-9546576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2497",
    "id": 9546576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NDY1NzY=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-17T22:28:24Z",
    "updated_at": "2012-10-17T22:28:24Z",
    "author_association": "MEMBER",
    "body": "I'd like to reopen this, because it seems like counter-intuitive behavior to me.\n\n`%automagic` makes no suggestion that it only works for single lines, but not multiline things.\n\nMoreover, this was not the behavior in 0.9 and 0.10:\n\n```\nPython 2.7.3 (default, Sep  9 2012, 17:41:34) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.10 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: for x in range(3):\n   ...:    pwd\n   ...: \n\nOut[1]: '/home/pi/code/ipython'\n\nOut[1]: '/home/pi/code/ipython'\n\nOut[1]: '/home/pi/code/ipython'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9546811",
    "html_url": "https://github.com/ipython/ipython/issues/2497#issuecomment-9546811",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2497",
    "id": 9546811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NDY4MTE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-17T22:36:19Z",
    "updated_at": "2012-10-17T22:36:19Z",
    "author_association": "MEMBER",
    "body": "I'll have a look at it once some of my IPEP2 work starts landing, but I'm not sure there's a good way. It's quite possible that those earlier versions also transformed in some cases where they shouldn't have done.\n\n(That example wouldn't work anyway, because we default to only making `Out` prompts for the last AST node if it's an expression, but I realise it's not a real use case).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14975480",
    "html_url": "https://github.com/ipython/ipython/issues/2497#issuecomment-14975480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2497",
    "id": 14975480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTc1NDgw",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-15T17:54:51Z",
    "updated_at": "2013-03-15T17:54:51Z",
    "author_association": "MEMBER",
    "body": "A colleague (@jbpoline) just ran into this in the middle of class. A cell with\n\n```\n ls\n```\n\nworks, but a cell with\n\n```\nls\n#comment\n```\n\nI think when #2447 is merged, this will be fixed, so I'm just tying this to that PR for now\n"
  }
]
