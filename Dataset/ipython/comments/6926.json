[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62968633",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62968633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62968633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTY4NjMz",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T21:24:12Z",
    "updated_at": "2014-11-13T21:24:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "The only thing that we have done that might fall into this use is the debugger that we rigged up:\n\nhttps://www.youtube.com/watch?v=2w-iO701g_w&list=UU5ndjVF57YWyt8Bm7_B4_mw\n\nCurrently, we are sending execute request/reply messages back and forth, with a special indication to highlight a region in a cell. \n\nI can't think of anything else that we haven't been able to do with our metakernel magic commands. But I might be limited by my lack of imagination!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62970705",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62970705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62970705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTcwNzA1",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T21:37:57Z",
    "updated_at": "2014-11-13T21:37:57Z",
    "author_association": "NONE",
    "body": "If you're going to make a new type of message, wouldn't it be more sensible to rename it `frontend_request` instead of `payload`?\n\nWhat does \"draw the pager\" mean?\n\n`set_next_input` is useful; I'm dubious about the rest of them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62987888",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62987888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62987888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTg3ODg4",
    "user": {
      "login": "gibiansky",
      "id": 1865411,
      "node_id": "MDQ6VXNlcjE4NjU0MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1865411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gibiansky",
      "html_url": "https://github.com/gibiansky",
      "followers_url": "https://api.github.com/users/gibiansky/followers",
      "following_url": "https://api.github.com/users/gibiansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/gibiansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gibiansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gibiansky/subscriptions",
      "organizations_url": "https://api.github.com/users/gibiansky/orgs",
      "repos_url": "https://api.github.com/users/gibiansky/repos",
      "events_url": "https://api.github.com/users/gibiansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gibiansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T23:45:03Z",
    "updated_at": "2014-11-13T23:45:03Z",
    "author_association": "NONE",
    "body": "I _think_ I might want to use this for configuration. For example, if I want to configure certain aspects of look and feel of the notebook, but I want the configuration to be controlled from the kernel, I might have to send a message to the frontend asking it to change look and feel.  I'm not sure this is the best way to do this, though. (As a simple example, in Haskell we have a common style where sequences of characters are replaced by their unicode alternatives; for example, `->` becomes an arrow. Some people like this and some people don't, so it would be nice to be able to toggle this with an option in the kernel. However, it's done in Javascript on the frontend, so right now the kernel can't really do anything about it without having a widget of some kind, which doesn't make sense here.)\n\nMany of the other uses I've come up with seem to be better suited for widgets; anything where part of a cell output changes over time seems to be suited for widgets instead of `payload`, I think. I like the idea of being able to add and/or modify cells though; I can envision a situation where I want running a cell to replace its contents with the output of the run. (For example, metaprogramming. I can define a \"macro\" in one cell, and invoke it in the next cell; to debug the macro, the invocation could just pretty print the code output and replace the invocation with the generated code. This isn't a perfect example. Another example may be reformatting code via the kernel. For example, Haskell has `hindent`, somewhat similar in goals to `go fmt`, and perhaps there would be a command that would ask the kernel to reformat the Haskell code, and then would replace the code in the cell with the reformatted variant.)\n\ntl;dr:\n- Widgets seem to take care of a lot of potential uses, mostly ones that involve dynamically modifying the output of cells.\n- Adding, deleting, and modifying the contents of cells is a useful application for a variety of reasons.\n- This may allow a kernel to do Javascript-specific frontend configuration.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62990807",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62990807",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62990807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTkwODA3",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T00:15:43Z",
    "updated_at": "2014-11-14T00:16:16Z",
    "author_association": "NONE",
    "body": "Speaking of controlling thing that would be nice would be to give the kernel a way to modify the global menu bar.   e.g. to add a \"Julia\" menu with specified items, where each item sends a corresponding message (e.g. with an identifier for the menu item and the contents of the current input cell).  This would be a nicer UI to do things like kernel code formatting, invoking a debugger, etcetera, than having to type `%magic` in the input cell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62991392",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62991392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62991392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTkxMzky",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T00:21:50Z",
    "updated_at": "2014-11-14T00:21:50Z",
    "author_association": "MEMBER",
    "body": "> If you're going to make a new type of message, wouldn't it be more sensible to rename it frontend_request instead of payload?\n\nYup, `frontend_request` makes sense. Though I might reserve `_request` for request-reply patterns, and these messages do not allow a corresponding reply. Maybe `frontend_event`, or something to that effect.\n\n> What does \"draw the pager\" mean?\n\nThe pager is the area for information that isn't considered output. It's invoked in IPython when you do things like `foo??`. In the terminal, it's typically passed to less/more, in qtconsole, it behaves very much like less. In the notebook, it's a pane that docks at the bottom of the screen, and we are trying to figure out a better way to deal with it.  Since pager data is basically displaypub output that goes somewhere else, there is the option that displaying things in the pager is handled as a regular display message with metadata specifying its destination.\n\n> This may allow a kernel to do Javascript-specific frontend configuration.\n\nI guess a config payload could do something like this. I'm not sure how to make that generic, but we can think about it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62991420",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62991420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62991420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTkxNDIw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T00:22:18Z",
    "updated_at": "2014-11-14T00:22:18Z",
    "author_association": "MEMBER",
    "body": "Note to self: getting rid of autocall payload will close #1730\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62993040",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-62993040",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 62993040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTkzMDQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T00:41:11Z",
    "updated_at": "2014-11-14T00:41:11Z",
    "author_association": "MEMBER",
    "body": "Invoking many payloads: #2625\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63891867",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-63891867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 63891867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODkxODY3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-20T22:28:25Z",
    "updated_at": "2014-11-20T22:28:25Z",
    "author_association": "MEMBER",
    "body": "After talking with @fperez, I think we will hold proper revisiting of the concept of payloads until after 3.0, when we have more time to consider it. For 3.0, the much smaller task of:\n- remove auto_rewrite_input, doctest_mode\n- document page, magic_edit, set_next_input, ask_exit as payloads as they are now, and mark the payloads as a deprecated concept, to be replaced, but not removed, in a minor revision.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63913160",
    "html_url": "https://github.com/ipython/ipython/issues/6926#issuecomment-63913160",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6926",
    "id": 63913160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTEzMTYw",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-21T01:52:28Z",
    "updated_at": "2014-11-21T01:52:54Z",
    "author_association": "NONE",
    "body": "Okay, sounds good.   (I think the pager has been explained to me 2 or 3 times now, and I keep forgetting because it is something I never see.)\n"
  }
]
