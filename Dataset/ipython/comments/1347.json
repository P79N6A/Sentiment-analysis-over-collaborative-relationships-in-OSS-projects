[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3730160",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3730160",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3730160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzAxNjA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:21:38Z",
    "updated_at": "2012-01-30T23:21:38Z",
    "author_association": "MEMBER",
    "body": "I have tested this and it seems to have fixed the issue.  @Carreau do you think you will be able to refactor the completion/tooltip code into its own class anytime soon?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3734997",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3734997",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3734997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQ5OTc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T07:49:16Z",
    "updated_at": "2012-01-31T07:49:16Z",
    "author_association": "MEMBER",
    "body": "Any time **soon** is really compromise. It's still on my to-do list of things I would like to improve. \nWe should also look at the autocomplete example of codemirror which might be a good start, and might add completion of the words of current cell even if it has not been executed in the kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3736732",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3736732",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3736732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzY3MzI=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T10:35:58Z",
    "updated_at": "2012-01-31T10:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Many thanks for merging the fix!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3743503",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3743503",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3743503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDM1MDM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T17:28:30Z",
    "updated_at": "2012-01-31T17:28:30Z",
    "author_association": "MEMBER",
    "body": "For the record: the existing tab completion was copied over directly\nfrom CodeMirror and made to work with our architecture - so I think we\nare already following what they do pretty closely.  When you get\nstarted on this, let me know if you want to talk design.\n\nOn Tue, Jan 31, 2012 at 2:35 AM, v923z\nreply@reply.github.com\nwrote:\n\n> Many thanks for merging the fix!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1347#issuecomment-3736732\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3760181",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3760181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3760181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjAxODE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T15:11:56Z",
    "updated_at": "2012-02-01T15:11:56Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg, I Really needed a completion based on the current text cell instead of kernel introspection, so I quickly did [this](https://github.com/Carreau/ipython/tree/pythonhint)\nWhat I can do is a PR based on that ( a little refactored because it changes code in the /codemiror/lib/ directory) and we can start to discuss on what you think  of the design.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3764285",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3764285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3764285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQyODU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T18:32:43Z",
    "updated_at": "2012-02-01T18:32:43Z",
    "author_association": "MEMBER",
    "body": "I am not quite clear on what usage case this addresses, can you say a bit more?\n\nOn Wed, Feb 1, 2012 at 7:11 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> @ellisonbg, I Really needed a completion based on the current text cell instead of kernel introspection, so I quickly did [this](https://github.com/Carreau/ipython/tree/pythonhint)\n> What I can do is a PR based on that ( a little refactored because it changes code in the /codemiror/lib/ directory) and we can start to discuss on what you think  of the design.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1347#issuecomment-3760181\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3764604",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3764604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3764604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQ2MDQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T18:50:30Z",
    "updated_at": "2012-02-01T18:50:30Z",
    "author_association": "MEMBER",
    "body": "like, when writing a class in the notebook, or in a for loop, `ctrl+space` will propose to you any word in the curent cell that match the beginnig of the current word. eg\n\n``` python\nclass Dummy(object):\n    def __init__(self):\n         self.myartrr1= 1\n         self.myatrr2= 2\n         self.myartrr3= 3\n\n    (at)property    #no at or github want to ping property...\n    def myProperty(self):\n          return null\n\n    def myfunc(self)\n          return self.my<ctrl-space>  # <-- there I ask for `text-based` completion\n```\n\nit pops `.myattr1`, `.myattr2` ,`.myattr3` ... `myProperty`,`myfunc`\n- Whatever text of the current cell which match what you have type.\n- even if the cell has not been executed and without any request to the kernel. (so also local variable)\n- It's stil a little dumb as it proposes `myProperty(self)` instead of `myProperty`\n\nBut it should be easier to cache the introspection of the kernel and \"merge\" the result with this list of completion and have a mixed completer that get completion both from kernel and also from current code cell\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3766065",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3766065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3766065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjYwNjU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T20:05:43Z",
    "updated_at": "2012-02-01T20:05:43Z",
    "author_association": "MEMBER",
    "body": "On Wed, Feb 1, 2012 at 10:50 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> like, when writing a class in the notebook, or in a for loop, `ctrl+space` will propose to you any word in the curent cell that match the beginnig of the current word. eg\n> \n> ``` python\n> class Dummy(object):\n>    def __init__(self):\n>         self.myartrr1= 1\n>         self.myatrr2= 2\n>         self.myartrr3= 3\n> \n>    (at)property    #no at or github want to ping property...\n>    def myProperty(self):\n>          return null\n> \n>    def myfunc(self)\n>          return self.my<ctrl-space>  # <-- there I ask for `text-based` completion\n> ```\n> \n> it pops `.myattr1`, `.myattr2` ,`.myattr3` ... `myProperty`,`myfunc`\n\nOK I think this functionality would be useful.\n\n>  \\* Whatever text of the current cell which match what you have type.\n>  \\* even if the cell has not been executed and without any request to the kernel. (so also local variable)\n>  \\* It's stil a little dumb as it proposes `myProperty(self)` instead of `myProperty`\n\nBut I do think we should clean up the tab completion/tooltip code\nbefore adding this in.  That part of the CodeCell is really messy and\ndifficult to deal with.\n\n> But it should be easier to cache the introspection of the kernel and \"merge\" the result with this list of completion and have a mixed completer that get completion both from kernel and also from current code cell\n\nI agree this would be nice, but if we want to go this way, then it is\nextra important that we clean up the existing code first.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1347#issuecomment-3764604\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3766264",
    "html_url": "https://github.com/ipython/ipython/pull/1347#issuecomment-3766264",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1347",
    "id": 3766264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjYyNjQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T20:15:14Z",
    "updated_at": "2012-02-01T20:15:14Z",
    "author_association": "MEMBER",
    "body": "Agreed, this was just a quick need so I've done it on the fly, nothing serious.\n"
  }
]
