[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1859179",
    "html_url": "https://github.com/ipython/ipython/pull/712#issuecomment-1859179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/712",
    "id": 1859179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTkxNzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-20T11:37:45Z",
    "updated_at": "2011-08-20T11:37:45Z",
    "author_association": "MEMBER",
    "body": "I don't think this is a good idea, unfortunately. The execution count is used to index lines in the input history, which doesn't get reset when this cache is flushed.\n\nConceptually, the prompt number is your position in your session, which isn't affected by the cache being flushed. I'd find it very offputting if it suddenly reset itself, because that implies that I'm starting with a fresh session. Looking at the file, we should probably reword the warning message that shows up when you reach the cache size.\n\nIn fact, I think there's a better solution than this. This system, without any prior warning, drops all but the last three items in history, which could be annoying if it happens at a critical moment. How about, on reaching the cache size, we drop the oldest ~20% of items from the cache, either silently or with a one-line message? This would mean that, by default, you always have at least the last 800 outputs available.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1861394",
    "html_url": "https://github.com/ipython/ipython/pull/712#issuecomment-1861394",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/712",
    "id": 1861394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjEzOTQ=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-20T23:22:37Z",
    "updated_at": "2011-08-20T23:22:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds like a much more reasonable approach to cache handling.\n\nThe reason I \"fixed\" the execution count is because the notebook relies on that number not becoming much more than 3 digits.  But, then again, how many people ever run 10,000 lines of execution in IPython (a notebook like that would be really, really slow to execute in full).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1861463",
    "html_url": "https://github.com/ipython/ipython/pull/712#issuecomment-1861463",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/712",
    "id": 1861463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjE0NjM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-20T23:52:21Z",
    "updated_at": "2011-08-20T23:52:21Z",
    "author_association": "MEMBER",
    "body": "OK, I'll have a go at reworking the cache handling.\n\nHmmm, what's the issue in the notebook if the number exceeds three digits? Is that something we can fix? But I agree, it's unlikely that a notebook will get that long. I think the notebook model also lends itself to fewer, longer, multiline cells, and we should only need one number per cell.\n\nI'm going to close this PR and open a new issue for the cache handling.\n"
  }
]
