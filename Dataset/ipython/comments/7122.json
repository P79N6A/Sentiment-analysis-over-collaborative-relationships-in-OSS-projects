[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65916688",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-65916688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 65916688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE2Njg4",
    "user": {
      "login": "mpharrigan",
      "id": 4967059,
      "node_id": "MDQ6VXNlcjQ5NjcwNTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4967059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpharrigan",
      "html_url": "https://github.com/mpharrigan",
      "followers_url": "https://api.github.com/users/mpharrigan/followers",
      "following_url": "https://api.github.com/users/mpharrigan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpharrigan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpharrigan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpharrigan/subscriptions",
      "organizations_url": "https://api.github.com/users/mpharrigan/orgs",
      "repos_url": "https://api.github.com/users/mpharrigan/repos",
      "events_url": "https://api.github.com/users/mpharrigan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpharrigan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T22:26:46Z",
    "updated_at": "2014-12-06T22:26:46Z",
    "author_association": "NONE",
    "body": "I get the same error from master as well\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72298342",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-72298342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 72298342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjk4MzQy",
    "user": {
      "login": "npyoung",
      "id": 1348767,
      "node_id": "MDQ6VXNlcjEzNDg3Njc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1348767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/npyoung",
      "html_url": "https://github.com/npyoung",
      "followers_url": "https://api.github.com/users/npyoung/followers",
      "following_url": "https://api.github.com/users/npyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/npyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/npyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/npyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/npyoung/orgs",
      "repos_url": "https://api.github.com/users/npyoung/repos",
      "events_url": "https://api.github.com/users/npyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/npyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-31T01:38:31Z",
    "updated_at": "2015-01-31T01:38:31Z",
    "author_association": "NONE",
    "body": "Same here, using IPython master commit 93217777a00c1dee0d3fa480e989cfdda87ae765\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/94574045",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-94574045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 94574045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTc0MDQ1",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-20T21:30:35Z",
    "updated_at": "2015-04-20T21:31:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I got this today, using 3.1 on python 3.4:\n\n``` python\nTraceback (most recent call last):\n  File \"/Users/klay6683/miniconda3/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/Users/klay6683/Dropbox/src/P4_sandbox/planet4/reduction.py\", line 240, in <module>\n    args.test_n_rows)\n  File \"/Users/klay6683/Dropbox/src/P4_sandbox/planet4/reduction.py\", line 196, in main\n    df = remove_duplicates(df)\n  File \"/Users/klay6683/Dropbox/src/P4_sandbox/planet4/reduction.py\", line 137, in remove_duplicates\n    lbview.map_sync(process_image_name, image_names)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 355, in map_sync\n    return self.map(f,*sequences,**kwargs)\n  File \"<string>\", line 2, in map\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 55, in sync_results\n    ret = f(self, *args, **kwargs)\n  File \"<string>\", line 2, in map\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 40, in save_ids\n    ret = f(self, *args, **kwargs)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 1123, in map\n    return pf.map(*sequences)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/remotefunction.py\", line 271, in map\n    ret = self(*sequences)\n  File \"<string>\", line 2, in __call__\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/remotefunction.py\", line 78, in sync_view_results\n    return f(self, *args, **kwargs)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/remotefunction.py\", line 243, in __call__\n    ar = view.apply(f, *args)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 222, in apply\n    return self._really_apply(f, args, kwargs)\n  File \"<string>\", line 2, in _really_apply\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 52, in sync_results\n    return f(self, *args, **kwargs)\n  File \"<string>\", line 2, in _really_apply\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 40, in save_ids\n    ret = f(self, *args, **kwargs)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/view.py\", line 1050, in _really_apply\n    metadata=metadata)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/parallel/client/client.py\", line 1280, in send_apply_request\n    metadata=metadata, track=track)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/IPython/kernel/zmq/session.py\", line 660, in send\n    tracker = stream.send_multipart(to_send, copy=False, track=True)\n  File \"/Users/klay6683/miniconda3/lib/python3.4/site-packages/zmq/sugar/socket.py\", line 276, in send_multipart\n    self.send(msg, SNDMORE|flags, copy=copy, track=track)\n  File \"zmq/backend/cython/socket.pyx\", line 574, in zmq.backend.cython.socket.Socket.send (zmq/backend/cython/socket.c:5434)\n  File \"zmq/backend/cython/socket.pyx\", line 629, in zmq.backend.cython.socket.Socket.send (zmq/backend/cython/socket.c:5299)\n  File \"zmq/backend/cython/socket.pyx\", line 156, in zmq.backend.cython.socket._send_frame (zmq/backend/cython/socket.c:1867)\n  File \"zmq/backend/cython/checkrc.pxd\", line 15, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:6112)\nzmq.error.Again: Resource temporarily unavailable\n```\n\nThis is what I tried to do:\n\n``` python\n    def process_image_name(image_name):\n\n        def process_user_group(g):\n            c_id = g.sort('created_at').classification_id.iloc[0]\n            return g[g.classification_id == c_id]\n\n        data = df[df.image_name == image_name]\n        data = data.groupby(['user_name']).apply(\n            process_user_group).reset_index(drop=True)\n        fname = 'temp_' + image_name + '.h5'\n        data.to_hdf(fname, 'df')\n\n    c = Client()\n    lbview = c.load_balanced_view()\n    lbview.map_sync(process_image_name, image_names)\n```\n\nI tried to do this in a script instead of a notebook, is that okay?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/147668466",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-147668466",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 147668466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzY2ODQ2Ng==",
    "user": {
      "login": "musically-ut",
      "id": 502876,
      "node_id": "MDQ6VXNlcjUwMjg3Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/502876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/musically-ut",
      "html_url": "https://github.com/musically-ut",
      "followers_url": "https://api.github.com/users/musically-ut/followers",
      "following_url": "https://api.github.com/users/musically-ut/following{/other_user}",
      "gists_url": "https://api.github.com/users/musically-ut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/musically-ut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/musically-ut/subscriptions",
      "organizations_url": "https://api.github.com/users/musically-ut/orgs",
      "repos_url": "https://api.github.com/users/musically-ut/repos",
      "events_url": "https://api.github.com/users/musically-ut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/musically-ut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-13T10:01:01Z",
    "updated_at": "2015-10-13T10:01:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I ran into a similar issue but wasn't sure about the root cause.\n\nHowever, switching to a load balanced view from a direct view resolved the problem. Looking at the output from the `ipcluster` command, my hypothesis is that the load balanced view divvies up the tasks and sends them piecemeal to the engines and receives the results while the direct view dispatches _all_ the data to the nodes and then waits for a collection of _all_ the results from the engines. Does this sound reasonable?\n\nIf not, I could open a new issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/147869483",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-147869483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 147869483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg2OTQ4Mw==",
    "user": {
      "login": "npyoung",
      "id": 1348767,
      "node_id": "MDQ6VXNlcjEzNDg3Njc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1348767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/npyoung",
      "html_url": "https://github.com/npyoung",
      "followers_url": "https://api.github.com/users/npyoung/followers",
      "following_url": "https://api.github.com/users/npyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/npyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/npyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/npyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/npyoung/orgs",
      "repos_url": "https://api.github.com/users/npyoung/repos",
      "events_url": "https://api.github.com/users/npyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/npyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-13T22:14:58Z",
    "updated_at": "2015-10-13T22:14:58Z",
    "author_association": "NONE",
    "body": "I found I can side-step this problem by either switching to a direct view or by using the asynchronous map. Something about dispatching jobs incrementally, but collecting them at once does not work. @musically-ut note that @michaelaye _is_ using the load balanced view.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/157549172",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-157549172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 157549172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU0OTE3Mg==",
    "user": {
      "login": "jakirkham",
      "id": 3019665,
      "node_id": "MDQ6VXNlcjMwMTk2NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakirkham",
      "html_url": "https://github.com/jakirkham",
      "followers_url": "https://api.github.com/users/jakirkham/followers",
      "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
      "organizations_url": "https://api.github.com/users/jakirkham/orgs",
      "repos_url": "https://api.github.com/users/jakirkham/repos",
      "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakirkham/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T23:56:44Z",
    "updated_at": "2015-11-18T00:04:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ran into this issue today when using a load balance view on ipyparallel 4.0.2. Normally, I haven't seen this issue and have been using the same size and type of data in this process as had caused the issue today. However, the cluster was under heavy use. It also occurred after the computation was completed and most of the data had already been serialized and sent to disk.\n\nWas this simply due the high cluster usage or is there a bug somewhere? In either case, it would be nice if there was some better resilience here. However, I am not sure what to propose as this seems to be coming from zmq itself. Is it possible to retry sending the data in smaller chunks or something like this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/157551605",
    "html_url": "https://github.com/ipython/ipython/issues/7122#issuecomment-157551605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7122",
    "id": 157551605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU1MTYwNQ==",
    "user": {
      "login": "jakirkham",
      "id": 3019665,
      "node_id": "MDQ6VXNlcjMwMTk2NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakirkham",
      "html_url": "https://github.com/jakirkham",
      "followers_url": "https://api.github.com/users/jakirkham/followers",
      "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
      "organizations_url": "https://api.github.com/users/jakirkham/orgs",
      "repos_url": "https://api.github.com/users/jakirkham/repos",
      "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakirkham/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T00:11:27Z",
    "updated_at": "2015-11-18T00:16:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, if I try to reproduce the example on a more recent version of iPython, I get a different issue, which I added elsewhere ( https://github.com/ipython/ipykernel/issues/79 ).\n\n```\n$ ipython\nPython 2.7.10 |Continuum Analytics, Inc.| (default, Oct 19 2015, 18:31:17) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.0.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: from IPython.kernel.zmq.datapub import publish_data\n/zopt/conda/envs/ipy/lib/python2.7/site-packages/IPython/kernel/__init__.py:13: ShimWarning: The `IPython.kernel` package has been deprecated. You should import from ipykernel or jupyter_client instead.\n  \"You should import from ipykernel or jupyter_client instead.\", ShimWarning)\n\nIn [2]: import numpy as np\n\nIn [3]: myarr = np.ones(2 * 1024 * 1024 * 1024 * 8 // 64) # 2 GB\n\nIn [4]: publish_data({'x': myarr})\n---------------------------------------------------------------------------\nMultipleInstanceError                     Traceback (most recent call last)\n<ipython-input-4-49f20562eb3f> in <module>()\n----> 1 publish_data({'x': myarr})\n\n/zopt/conda/envs/ipy/lib/python2.7/site-packages/ipykernel/datapub.pyc in publish_data(data)\n     55     \"\"\"\n     56     from ipykernel.zmqshell import ZMQInteractiveShell\n---> 57     ZMQInteractiveShell.instance().data_pub.publish_data(data)\n\n/zopt/conda/envs/ipy/lib/python2.7/site-packages/traitlets/config/configurable.pyc in instance(cls, *args, **kwargs)\n    389             raise MultipleInstanceError(\n    390                 'Multiple incompatible subclass instances of '\n--> 391                 '%s are being created.' % cls.__name__\n    392             )\n    393 \n\nMultipleInstanceError: Multiple incompatible subclass instances of ZMQInteractiveShell are being created.\n```\n\nEnvironment details are as follows.\n\n```\n$ conda list\n# packages in environment at /zopt/conda/envs/ipy:\n#\nappnope                   0.1.0                    py27_0    defaults\ndecorator                 4.0.4                    py27_0    defaults\nipykernel                 4.1.1                    py27_0    defaults\nipython                   4.0.0                    py27_1    defaults\nipython-genutils          0.1.0                     <pip>\nipython_genutils          0.1.0                    py27_0    defaults\njupyter-client            4.1.1                     <pip>\njupyter-core              4.0.6                     <pip>\njupyter_client            4.1.1                    py27_0    defaults\njupyter_core              4.0.6                    py27_0    defaults\nnumpy                     1.10.1                   py27_0    defaults\nopenssl                   1.0.2d                        0    defaults\npath.py                   8.1.2                    py27_0    defaults\npexpect                   3.3                      py27_0    defaults\npickleshare               0.5                      py27_0    defaults\npip                       7.1.2                    py27_0    defaults\npython                    2.7.10                        2    defaults\npython.app                1.2                      py27_4    defaults\npyzmq                     14.7.0                   py27_1    defaults\nreadline                  6.2                           2    <unknown>\nsetuptools                18.4                     py27_0    defaults\nsimplegeneric             0.8.1                    py27_0    defaults\nsqlite                    3.8.4.1                       1    <unknown>\ntk                        8.5.18                        0    <unknown>\ntraitlets                 4.0.0                    py27_0    defaults\nwheel                     0.26.0                   py27_1    defaults\nzeromq                    4.1.3                         0    defaults\nzlib                      1.2.8                         0    <unknown>\n```\n"
  }
]
