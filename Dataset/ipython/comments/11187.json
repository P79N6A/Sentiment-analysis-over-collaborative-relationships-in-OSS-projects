[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/397273406",
    "html_url": "https://github.com/ipython/ipython/issues/11187#issuecomment-397273406",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11187",
    "id": 397273406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI3MzQwNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T12:17:13Z",
    "updated_at": "2018-06-14T12:17:13Z",
    "author_association": "MEMBER",
    "body": "Have you tried it using the Python [timeit module](https://docs.python.org/3/library/timeit.html) directly?  Have you monitored memory use as it does this? `7 runs, 10000000 loops each` means you're adding 70 million elements to the deque, which is probably enough to fill up your memory.\r\n\r\nBecause `list.insert()` is slower, it runs that fewer times, so it won't take up as much memory."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/397276606",
    "html_url": "https://github.com/ipython/ipython/issues/11187#issuecomment-397276606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11187",
    "id": 397276606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI3NjYwNg==",
    "user": {
      "login": "RomanPerekhrest",
      "id": 20374372,
      "node_id": "MDQ6VXNlcjIwMzc0Mzcy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20374372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RomanPerekhrest",
      "html_url": "https://github.com/RomanPerekhrest",
      "followers_url": "https://api.github.com/users/RomanPerekhrest/followers",
      "following_url": "https://api.github.com/users/RomanPerekhrest/following{/other_user}",
      "gists_url": "https://api.github.com/users/RomanPerekhrest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RomanPerekhrest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RomanPerekhrest/subscriptions",
      "organizations_url": "https://api.github.com/users/RomanPerekhrest/orgs",
      "repos_url": "https://api.github.com/users/RomanPerekhrest/repos",
      "events_url": "https://api.github.com/users/RomanPerekhrest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RomanPerekhrest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T12:29:54Z",
    "updated_at": "2018-06-14T12:39:19Z",
    "author_association": "NONE",
    "body": "@takluyver Thanks.\r\nActually, it hangs the system up without ability for monitoring.\r\nBut, if I go with timing a much smaller `deque` it would still hanging up.\r\n`q = collections.deque(range(100))`\r\nAt the very first second of timing (before hanging) the `top` blinks with `%CPU 83.1 / %MEM 40.6` for `ipython` process.\r\nAre there any chances to not pad/fill the same queue/deque (by reference) when timing the large ones?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/397281260",
    "html_url": "https://github.com/ipython/ipython/issues/11187#issuecomment-397281260",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11187",
    "id": 397281260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI4MTI2MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T12:45:28Z",
    "updated_at": "2018-06-14T12:45:28Z",
    "author_association": "MEMBER",
    "body": "The starting size of the deque doesn't make much difference - it's all the things that are being added to it while doing the timing. Maybe you want to use a deque with maxlen set? `q = collections.deque(range(100), maxlen=100)` This will limit the size, so every time you add something to it, something is dropped from the other end."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/397284114",
    "html_url": "https://github.com/ipython/ipython/issues/11187#issuecomment-397284114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11187",
    "id": 397284114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI4NDExNA==",
    "user": {
      "login": "RomanPerekhrest",
      "id": 20374372,
      "node_id": "MDQ6VXNlcjIwMzc0Mzcy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20374372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RomanPerekhrest",
      "html_url": "https://github.com/RomanPerekhrest",
      "followers_url": "https://api.github.com/users/RomanPerekhrest/followers",
      "following_url": "https://api.github.com/users/RomanPerekhrest/following{/other_user}",
      "gists_url": "https://api.github.com/users/RomanPerekhrest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RomanPerekhrest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RomanPerekhrest/subscriptions",
      "organizations_url": "https://api.github.com/users/RomanPerekhrest/orgs",
      "repos_url": "https://api.github.com/users/RomanPerekhrest/repos",
      "events_url": "https://api.github.com/users/RomanPerekhrest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RomanPerekhrest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T12:52:58Z",
    "updated_at": "2018-06-14T12:54:05Z",
    "author_association": "NONE",
    "body": "Exactly, that's the crucial param for such deque case. Missed that parameter. Thanks.\r\n\r\n`q = collections.deque(range(1000000),  maxlen=1000000)`"
  }
]
