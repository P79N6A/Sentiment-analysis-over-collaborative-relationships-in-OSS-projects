[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25326834",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25326834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25326834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI2ODM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:15:56Z",
    "updated_at": "2013-09-29T19:15:56Z",
    "author_association": "MEMBER",
    "body": "Thanks for looking into a method of rendering rst cells all at once, this will be useful if we ever decide that we actually do want rst cells.  But I don't think we want to add rst cells at this time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25328863",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25328863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25328863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI4ODYz",
    "user": {
      "login": "mgaitan",
      "id": 2355719,
      "node_id": "MDQ6VXNlcjIzNTU3MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2355719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgaitan",
      "html_url": "https://github.com/mgaitan",
      "followers_url": "https://api.github.com/users/mgaitan/followers",
      "following_url": "https://api.github.com/users/mgaitan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgaitan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgaitan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgaitan/subscriptions",
      "organizations_url": "https://api.github.com/users/mgaitan/orgs",
      "repos_url": "https://api.github.com/users/mgaitan/repos",
      "events_url": "https://api.github.com/users/mgaitan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgaitan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:48:21Z",
    "updated_at": "2013-09-29T20:48:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm so sorry to hear that. I thought it was a \"low priority\" item in the wishlist meaning \"no effort of any core dev will be put there in a the short term\". But what if that (tiny) effort is/was from somebody else? \n\nI'm willing to do whatever it takes to move forward this, but I would appreciate very much if that involved decision could be taken. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25329175",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25329175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25329175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI5MTc1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T21:04:33Z",
    "updated_at": "2013-09-29T21:04:33Z",
    "author_association": "MEMBER",
    "body": "> I thought it was a \"low priority\" item in the wishlist meaning \"no effort of any core dev will be put there in a the short term\"\n\nThat's true, but it can also mean that there will be resistance to adding the feature, depending on the associated maintenance burden.\n\n>  But what if that (tiny) effort is/was from somebody else?\n\nThere's no such thing as no effort from core devs, and adding and supporting a new cell type is _far_ from tiny. Every time something enters master, especially something as massive as a new cell type (which requires updating the notebook format, among other things), core devs are committing to indefinite support of that feature, updating it as necessary, fixing bugs, etc.\n\nA few of the issues related to adding the rst cell:\n1. It changes the dependencies for running the notebook server (adding docutils), which means installation documentation and setup.py must be updated.\n2. rst cells would need to be understood in a first-class way for the various nbconvert output formats (a new top-level rst cell type is distinct from a raw cell with rst content).\n3. notebook format major version must be incremented, because it is a backward-incompatible change\n4. downgrade mechanism would need to be in place for converting rst cells to nbformat 3 (downgrade APIs are not yet in master).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25333608",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25333608",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25333608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMzNjA4",
    "user": {
      "login": "mgaitan",
      "id": 2355719,
      "node_id": "MDQ6VXNlcjIzNTU3MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2355719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgaitan",
      "html_url": "https://github.com/mgaitan",
      "followers_url": "https://api.github.com/users/mgaitan/followers",
      "following_url": "https://api.github.com/users/mgaitan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgaitan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgaitan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgaitan/subscriptions",
      "organizations_url": "https://api.github.com/users/mgaitan/orgs",
      "repos_url": "https://api.github.com/users/mgaitan/repos",
      "events_url": "https://api.github.com/users/mgaitan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgaitan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T01:36:36Z",
    "updated_at": "2013-09-30T01:36:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks you for clarify and the time to explain the related tasks. I apologize if my answer sounded a bit rough. \n\nAlthough I've already done a simple extension I don't know which are its limitations. Could this feature be implemented as an extension? Is the actual \"infrastructure\" enough?  \n\nThat way we avoid the future maintenance work of core devs for this feature and the extra dependencies: people who really want it could install and maintain it independently. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25334183",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25334183",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25334183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM0MTgz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T02:05:48Z",
    "updated_at": "2013-09-30T02:05:48Z",
    "author_association": "MEMBER",
    "body": "I think this _could_ be done as an extension, though I expect it will be substantially easier to implement after #3605 and #4195.  The scope of an extension implementation would be much simpler, largely because:\n1. it would not introduce a new cell type, it would simply be a render hook for raw cells with `raw_format=rst` metadata.\n2. rendering would be handled in the kernel instead of the server.\n3. no changes would need to be made in nbformat or nbconvert.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25381200",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25381200",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25381200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzgxMjAw",
    "user": {
      "login": "mgaitan",
      "id": 2355719,
      "node_id": "MDQ6VXNlcjIzNTU3MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2355719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgaitan",
      "html_url": "https://github.com/mgaitan",
      "followers_url": "https://api.github.com/users/mgaitan/followers",
      "following_url": "https://api.github.com/users/mgaitan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgaitan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgaitan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgaitan/subscriptions",
      "organizations_url": "https://api.github.com/users/mgaitan/orgs",
      "repos_url": "https://api.github.com/users/mgaitan/repos",
      "events_url": "https://api.github.com/users/mgaitan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgaitan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T16:54:46Z",
    "updated_at": "2013-09-30T16:54:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk let me know how can I help to follow that approach\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25381401",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25381401",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25381401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzgxNDAx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T16:56:37Z",
    "updated_at": "2013-09-30T16:56:37Z",
    "author_association": "MEMBER",
    "body": "Great, I will ping you when those PRs have been merged, at which point there should be some more useful APIs / events for something like this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25381482",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25381482",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25381482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzgxNDgy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T16:57:27Z",
    "updated_at": "2013-09-30T16:57:27Z",
    "author_association": "MEMBER",
    "body": "I know this opening a huge can of worms, but I think we should seriously consider offering reST cells as a first class alternative. Our markdown parsing increasingly sounds like a lot of brittle trickery, to sort out Markdown from HTML from Latex. And we're reaching the point of recommending that certain content should be manually converted with one raw cell per output format you want to convert to.\n\nWe're hitting the limits of what Markdown can do, and reST offers a lot more power for making complex documents that can be converted to multiple formats. See for instance the [Sphinx Thesis Resource](http://jterrace.github.io/sphinxtr/html/ch-intro/index.html), by someone who wrote their PhD thesis in reST.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25383263",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25383263",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25383263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzgzMjYz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T17:18:25Z",
    "updated_at": "2013-09-30T17:18:25Z",
    "author_association": "MEMBER",
    "body": "And the discussion restart again ;-)\nI think that both @minrk and @takluyver have raised valid points to support their positions. \nI also really think that a reST cells would be very valuable... and it worth by far the associated costs...\nThe re-raise of the discussion frequently, I think, it saying us some thing...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25383727",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25383727",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25383727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzgzNzI3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T17:24:16Z",
    "updated_at": "2013-09-30T17:24:16Z",
    "author_association": "MEMBER",
    "body": "I've put this on the Hackpad for the dev meeting on Thursday.\n\nhttps://hackpad.com/IPython-dev-meetings-6wTSjJt7TZK\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25384580",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25384580",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25384580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzg0NTgw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T17:35:15Z",
    "updated_at": "2013-09-30T17:35:15Z",
    "author_association": "MEMBER",
    "body": "> I've put this on the Hackpad for the dev meeting on Thursday\n\nGreat, I thought the same, thanks for add it!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25560853",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25560853",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25560853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYwODUz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-02T17:51:32Z",
    "updated_at": "2013-10-02T17:51:32Z",
    "author_association": "MEMBER",
    "body": "I should note that my biggest objection is that the all-in-one server side\nrendering adversely affects the user experience.  I am also not convinced\nthat the docutils output can be split in more complicated cases when\ncontent is nested rather than flat.\n\nOn Mon, Sep 30, 2013 at 10:35 AM, Damián Avila notifications@github.comwrote:\n\n> I've put this on the Hackpad for the dev meeting on Thursday\n> \n> Great, I thought the same, thanks for add it!\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4301#issuecomment-25384580\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25561590",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25561590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25561590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYxNTkw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-02T17:59:33Z",
    "updated_at": "2013-10-02T17:59:33Z",
    "author_association": "MEMBER",
    "body": "Besides the ambiguous heading levels, are there other reasons that it has to be rendered all-in-one? I guess there could be cross references that don't resolve, but that's the same with the current citation filter, or indeed anything that can reference another point in the document, so we'll have to find ways to handle that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25644532",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25644532",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25644532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQ0NTMy",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T18:14:26Z",
    "updated_at": "2013-10-03T18:14:26Z",
    "author_association": "MEMBER",
    "body": "Discussion related to this PR happened during the [IPython Lab Meeting 10/03/2013](http://www.youtube.com/watch?v=TB7JRe68k84)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25648767",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-25648767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 25648767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQ4NzY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T19:06:17Z",
    "updated_at": "2013-10-03T19:06:17Z",
    "author_association": "MEMBER",
    "body": "So the conclusion from the discussion in the lab meeting was that we'll proceed with Min's suggestion - we'll use raw cells with the format specified as rest, and provide a way for extensions to register a preview renderer for a given raw cell format.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26000918",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-26000918",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 26000918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDAwOTE4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T19:29:04Z",
    "updated_at": "2013-10-09T19:29:04Z",
    "author_association": "MEMBER",
    "body": "Does that mean we should close this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29294626",
    "html_url": "https://github.com/ipython/ipython/pull/4301#issuecomment-29294626",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4301",
    "id": 29294626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjk0NjI2",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T14:10:10Z",
    "updated_at": "2013-11-26T14:10:10Z",
    "author_association": "MEMBER",
    "body": "After two months, I think we can close this one...\n@mgaitan, as a reference, I am linking you another PR #4306 where is taking place the development of raw cells with raw_mimetype metadata, which is in line with Min's suggestion in the lab meeting.\n"
  }
]
