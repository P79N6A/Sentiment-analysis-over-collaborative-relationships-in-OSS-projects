[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54724324",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-54724324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 54724324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI0MzI0",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T18:50:06Z",
    "updated_at": "2014-09-06T18:50:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to put in a plug for nbagg so you get interactive as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54724488",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-54724488",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 54724488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI0NDg4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T18:55:57Z",
    "updated_at": "2014-09-06T18:55:57Z",
    "author_association": "MEMBER",
    "body": "Even better. Is it possible to set this up so that, in the kernel, it uses nbagg if available and inline otherwise?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54727319",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-54727319",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 54727319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI3MzE5",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T20:29:12Z",
    "updated_at": "2014-09-06T20:29:12Z",
    "author_association": "MEMBER",
    "body": "Totally for this (as discussed in person at Berkeley today).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54728574",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-54728574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 54728574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI4NTc0",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T21:15:49Z",
    "updated_at": "2014-09-06T21:15:49Z",
    "author_association": "MEMBER",
    "body": "@tacaswell Does nbagg do vector/svg by default, then raster when too large?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54729149",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-54729149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 54729149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI5MTQ5",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T21:35:38Z",
    "updated_at": "2014-09-06T21:35:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "nbagg is always rasterized (as it uses the AGG backend), but you can easily save the images as vector graphics as you want using `savefig('foo.svg')`.   It is some what clever and ships png deltas across the wire instead of the full image every time.\n\nAs we have an svg backend, it should be possible to hook that into the notebook as well, but I fear exactly how to do that is currently over my head on the webby side.\n\ncc @pelson @mdboom\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55629719",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-55629719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 55629719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjI5NzE5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T17:52:46Z",
    "updated_at": "2014-09-15T17:52:46Z",
    "author_association": "MEMBER",
    "body": "We decided today that it does make sense for inline to be the default backend in the kernel. For the moment, we prefer this to nbagg, because inline doesn't assume a particular frontend - it works in the Qt console, roughly works in the terminal console, and it's much easier for third party frontends to support.\n\nHowever, I think this can be done more neatly from the mpl side, by detecting if it's loaded within an IPython kernel and picking a different default backend, than from the IPython side. @minrk has an import hook which sets the default backend when matplotlib is loaded, but that seems like the wrong way to do this. @tacaswell, what do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55659620",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-55659620",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 55659620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjU5NjIw",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T21:11:38Z",
    "updated_at": "2014-09-15T21:11:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am a bit behind on all of the terminology (and day-to-day use ipython running in emacs).  My understanding is the the kernel is the backend that has the live interpreter which talks to a variety of front ends (and this is where jupiter kernels come in that now the front ends can talk to any thing which speaks ipython-wire-protocol).  The issue here is what backend the kernel should use by default and the problem with nbagg is that it assumes that it is talking to a web-front end (with all the JS magic).  If the above is wrong, the rest of this should probably be ignored.\n\nIt sounds like what you really want is a backend that can tell if it has a web-front end and decay gracefully if it does not.\n\nIt is possible to change the backend being used (which is how saving works), so the right thing to do may be for the web-front end to set the backend of the kernel to nbagg when it connects (or maybe on a cell-to-cell basis).  There are currently checks against this from pyplot, but that might be fixable.\n\nWhy does doing it with an import hook seem wrong?\n\nIs it easy to check if it is being imported from a kernel?  Is the idea that there is a `default_backend` and a `kernel_default_backend` in mpl?\n\nI am a tad wary of picking up an ipython dependency in mpl.\n\nSorry this is rambley.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55661651",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-55661651",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 55661651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjYxNjUx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T21:26:39Z",
    "updated_at": "2014-09-15T21:26:39Z",
    "author_association": "MEMBER",
    "body": "Your understanding is correct. :-)\n\nFor the moment, the model is that the kernel does not know about what frontend is running the current piece of code, and it's entirely possible to have multiple frontends connected to one kernel at the same time. We're considering giving the kernel more info about the frontend, but that's not in place yet. In the meantime, there could be a backend which produced both the HTML view for nbagg, and the static png like inline - frontends automatically select the mime type they're best able to display.\n\nIt is easy to check if you're in a kernel, and it's possible without adding a hard dependency on IPython (start with `if 'IPython' in sys.modules`). And yes, my thinking was to add a secondary config option for the default backend when in the IPython kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69623303",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-69623303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 69623303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjIzMzAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T18:53:23Z",
    "updated_at": "2015-01-12T18:53:23Z",
    "author_association": "MEMBER",
    "body": "Do we want to try to do something about this for 3.0? It would really improve the user experience...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69626084",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-69626084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 69626084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjI2MDg0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T19:08:23Z",
    "updated_at": "2015-01-12T19:08:23Z",
    "author_association": "MEMBER",
    "body": "I think it needs to happen on the mpl side; it seems much cleaner for mpl to check if it's in an IPython kernel than for IPython to watch for imports of matplotlib. Plus it's more applicable to other plotting packages.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69631832",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-69631832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 69631832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjMxODMy",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T19:41:24Z",
    "updated_at": "2015-01-12T19:41:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk mentioned he has an import hook that will take care of this.\n\nIt is not enough to know if we are in an IPython kernel, we need to know if\nthe front-end is an ipython notebook for all the js magic to work so I\nthink that the logic should live on the ipython side as it was my\nunderstanding that you shouldn't be able to tell _which_ front end is being\nused from the kernel.\n\nOn Mon Jan 12 2015 at 2:08:25 PM Thomas Kluyver notifications@github.com\nwrote:\n\n> I think it needs to happen on the mpl side; it seems much cleaner for mpl\n> to check if it's in an IPython kernel than for IPython to watch for imports\n> of matplotlib. Plus it's more applicable to other plotting packages.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6424#issuecomment-69626084.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69635462",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-69635462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 69635462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjM1NDYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T20:02:29Z",
    "updated_at": "2015-01-12T20:02:29Z",
    "author_association": "MEMBER",
    "body": "I think the backend should default to the plain inline backend, rather than the fancy nbagg, for precisely this reason (or there could be a composite backend that produces both formats). Our kernel machinery doesn't know which frontend it's currently talking to any more than code running in the kernel does, and we don't want it to. It's not even really a logical question to ask: there may be different frontends receiving the same output, and it may be saved and nbconverted into lots of different formats.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69635900",
    "html_url": "https://github.com/ipython/ipython/issues/6424#issuecomment-69635900",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6424",
    "id": 69635900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjM1OTAw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T20:05:12Z",
    "updated_at": "2015-01-12T20:05:12Z",
    "author_association": "MEMBER",
    "body": "@takluyver has a good point. The inline backend is a really safe option - it doesn 't require any of the JavaScript stuff and is easy to change on the fly to another backend if needed.\n\nI think it is a reasonable approach to simply see if the code is running in an IPython kernel and then enable the inline backend by default.\n"
  }
]
