[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48270646",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48270646",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48270646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjcwNjQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T04:20:55Z",
    "updated_at": "2014-07-08T04:20:55Z",
    "author_association": "MEMBER",
    "body": "I think PR #6050 already had a crack at this. I haven't looked at either implementation yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48271343",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48271343",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48271343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjcxMzQz",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T04:36:40Z",
    "updated_at": "2014-07-08T04:36:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "That PR is more complete and the same idea. I'm glad I'm not alone in\nwanting these.\n\nOn Monday, July 7, 2014, Thomas Kluyver notifications@github.com wrote:\n\n> I think PR #6050 https://github.com/ipython/ipython/pull/6050 already\n> had a crack at this. I haven't looked at either implementation yet.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6096#issuecomment-48270646.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48338582",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48338582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48338582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM4NTgy",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T13:54:26Z",
    "updated_at": "2014-07-08T13:54:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "One important difference is that I treat the upper and lower values as separate traits, where #6050 passes them together as a tuple.\n\nA tuple is cleaner -- less code must be added/changed -- but the separate-trait approach has an advantage that I'd like to use: I can link the lower and upper bounds separately to values in other widgets. For example:\n\n```\nlink((slider_widget, 'lower_value'), (other_widget, 'value'))\n```\n\nPerhaps this use case is not worth accommodating; I just want to mention it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48343162",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48343162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48343162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQzMTYy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T14:26:33Z",
    "updated_at": "2014-07-08T14:26:33Z",
    "author_association": "MEMBER",
    "body": "I actually think this widget needs both the separate and tuple versions.\n\nSent from my iPhone\n\n> On Jul 8, 2014, at 8:54 AM, Dan Allan notifications@github.com wrote:\n> \n> One important difference is that I treat the upper and lower values as separate traits, where #6050 passes them together as a tuple.\n> \n> A tuple is cleaner -- less code must be added/changed -- but the separate-trait approach has an advantage that I'd like to use: I can link the lower and upper bounds separately to values in other widgets. For example:\n> \n> link((slider_widget, 'lower_value'), (other_widget, 'value'))\n> Perhaps this use case is not worth accommodating; I just want to mention it.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48362501",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48362501",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48362501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzYyNTAx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T16:18:18Z",
    "updated_at": "2014-07-08T16:18:18Z",
    "author_association": "MEMBER",
    "body": "And do they both need to live in core IPython? I'm concerned that we're heading for the explosion of widgets that we specifically said we want to avoid.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48364407",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48364407",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48364407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY0NDA3",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T16:32:00Z",
    "updated_at": "2014-07-08T16:50:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "The separate and tuple versions could be part of the same widget. (I think this is what @ellisonbg meant.) That is, `lower_value`, `upper_value`, and `values` (a tuple) could be kept in sync. Hardly any more data to pass, and more flexibility.\n\n(Edited for confusing typo.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48367445",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48367445",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48367445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY3NDQ1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T16:52:55Z",
    "updated_at": "2014-07-08T16:52:55Z",
    "author_association": "MEMBER",
    "body": "We should have only one range widget. The combined attribute version can be\nhandled by a computed traitlet, rather than an separate widget. But I do\nthink the range widget should be in ipython.\n\nOn Tue, Jul 8, 2014 at 11:32 AM, Dan Allan notifications@github.com wrote:\n\n> The separate and tuple versions could be part of the them widget. (I think\n> this is what @ellisonbg https://github.com/ellisonbg meant.) That is,\n> lower_value, upper_value, and values (a tuple) could be kept in sync.\n> Hardly any more data to pass, and more flexibility.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6096#issuecomment-48364407.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48498015",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48498015",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48498015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDk4MDE1",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T16:22:34Z",
    "updated_at": "2014-07-09T16:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had a go at adding `lower` and `upper` traits bound bi-directionally to `value` to my implementation (#6050), but it turns out to be fairly tricky.\n\nIt doesn't appear possible to use the `IPython.utils.traitlets.link` mechanism to connect a single value out of a tuple, so the functionality in that class ends up being largely duplicated.\n\nSo, it can be done but it would be useful if someone more familiar with the inner workings of the traits mechanism can suggest a cleaner way.\n\n(Code at https://gist.github.com/chronitis/c142d900242b803ffe87 )\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48499348",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48499348",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48499348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDk5MzQ4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T16:32:55Z",
    "updated_at": "2014-07-09T16:32:55Z",
    "author_association": "MEMBER",
    "body": "Is this something that would make sense to do with Python properties rather than traitlets? I think it would look like this:\n\n``` python\n@property\ndef lower(self):\n    return self.value[0]\n\n@lower.setter\ndef lower(self, newval):\n    self.value = (newval, self.value[1])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48499522",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48499522",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48499522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDk5NTIy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T16:34:05Z",
    "updated_at": "2014-07-09T16:34:05Z",
    "author_association": "MEMBER",
    "body": "I guess the downside of that is that you couldn't hook up a callback for when `lower` changes - but you can have a callback for when `value` changes, and then access `self.lower`, I think.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48573278",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48573278",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48573278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTczMjc4",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-10T07:29:26Z",
    "updated_at": "2014-07-10T07:29:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "The rationale given above for having separate traits was being able to wire them like\n\n```\nlink((slider_widget, 'lower_value'), (other_widget, 'value'))\n```\n\nwhich I don't think can be done with a property (although I'm not entirely confident I understand the metaclass magic involved in traits, so this might not be true). But perhaps doing this properly should be a separate PR if a range widget is merged?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48599084",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48599084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48599084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTk5MDg0",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-10T12:43:21Z",
    "updated_at": "2014-07-10T12:43:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "What about traitlets for `lower` and `upper` that are not touched on the Javascript side, but wired to stay in sync with `values` via mutual `on_trait_change` hookups?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48599246",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48599246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48599246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTk5MjQ2",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-10T12:44:59Z",
    "updated_at": "2014-07-10T12:44:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chronitis It probably makes sense to wait to merge until the details are ironed out, but I am willing to implement this piece once we settle on the right way to do it. I can make a PR on your branch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48600357",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-48600357",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 48600357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjAwMzU3",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-10T12:57:21Z",
    "updated_at": "2014-07-10T12:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan that is pretty much what the implementation I linked in the gist above does.\n\nThe issue I had was that the `link()` utility only supports binding matching objects, so I end up more or less duplicating code and functionality from `IPython.utils.traitlets`. It would be nice to be able to do something like\n\n```\nlink((self, 'lower'), (self, 'value', 0))\nlink((self, 'upper'), (self, 'value', 1))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51543582",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-51543582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 51543582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTQzNTgy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T22:56:22Z",
    "updated_at": "2014-08-07T22:56:22Z",
    "author_association": "MEMBER",
    "body": "> That PR is more complete and the same idea. I'm glad I'm not alone in\n> wanting these.\n\nDuring the dev meeting today we decided to close this PR in favor for the long standing PR #6050, sorry @danielballan.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51549211",
    "html_url": "https://github.com/ipython/ipython/pull/6096#issuecomment-51549211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6096",
    "id": 51549211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTQ5MjEx",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T00:11:10Z",
    "updated_at": "2014-08-08T00:11:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "No apology necessary! The other PR is generally better. I hope\nindividual access to the lower and upper limits is incorporated. It sounds\nlike it will be.\n\nThanks for giving this your attention.\n\nOn Thursday, August 7, 2014, Jonathan Frederic notifications@github.com\nwrote:\n\n> That PR is more complete and the same idea. I'm glad I'm not alone in\n> wanting these.\n> \n> During the dev meeting today we decided to close this PR in favor for the\n> long standing PR #6050 https://github.com/ipython/ipython/pull/6050,\n> sorry @danielballan https://github.com/danielballan.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6096#issuecomment-51543582.\n"
  }
]
