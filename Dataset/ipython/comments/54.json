[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236162",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2Mg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:06Z",
    "updated_at": "2010-05-10T09:34:06Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Ville M. Vainio, on 2009-03-03 08:28:03+00:00 ]\n\nOn Tue, Mar 3, 2009 at 10:19 AM, Gael Varoquaux\ngael.varoquaux@normalesup.org wrote:\n\n> Public bug reported:\n> \n> When embbeding IPython, the exception hook (IPython crashed.... )\n> captures exception that are not IPython exceptions. It can be desirable\n> not to capture any exceptions and to let the application designer deal\n> with the exceptions.\n> \n> As such, it would be nice if the main exception hook could be disabled\n> by a switch on the IPython0 instance.\n\nI accomplish this in qt ui by:\n\n# cruel hack to avoid subclassing and prevent crash handler\n\nIPython.iplib.InteractiveShell.isThreaded = True\n\n## \n\nVille M. Vainio\nhttp://tinyurl.com/vainio\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236163",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236163",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2Mw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:07Z",
    "updated_at": "2010-05-10T09:34:07Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Gael Varoquaux, on 2009-03-03 08:36:24+00:00 ]\n\nOn Tue, Mar 03, 2009 at 08:28:03AM -0000, Ville M. Vainio wrote:\n\n> On Tue, Mar 3, 2009 at 10:19 AM, Gael Varoquaux\n> gael.varoquaux@normalesup.org wrote:\n> \n> > Public bug reported:\n> > \n> > When embbeding IPython, the exception hook (IPython crashed.... )\n> > captures exception that are not IPython exceptions. It can be desirable\n> > not to capture any exceptions and to let the application designer deal\n> > with the exceptions.\n> > \n> > As such, it would be nice if the main exception hook could be disabled\n> > by a switch on the IPython0 instance.\n> \n> I accomplish this in qt ui by:\n> \n> # cruel hack to avoid subclassing and prevent crash handler\n> \n> IPython.iplib.InteractiveShell.isThreaded = True\n\nOK, that will do the trick. I believe we can close this bug report.\n\nThanks,\n\nGaël\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236164",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2NA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:08Z",
    "updated_at": "2010-05-10T09:34:08Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Fernando Perez, on 2009-03-14 12:52:18.557512+00:00 ]\n\nClosing as won't fix since the solution is more of a workaround.  As we refactor things, we can offer later a nicer way to do this.  But I'm happy to close for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236165",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236165",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2NQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:09Z",
    "updated_at": "2010-05-10T09:34:09Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Gael Varoquaux, on 2009-03-15 12:27:02+00:00 ]\n\nOn Sat, Mar 14, 2009 at 12:52:18PM -0000, Fernando Perez wrote:\n\n> Closing as won't fix since the solution is more of a workaround.  As we\n> refactor things, we can offer later a nicer way to do this.  But I'm\n> happy to close for now.\n> \n> *\\* Changed in: ipython\n>        Status: New => Won't Fix\n\nI have just implemented this in the Enthought codebase (will move it up\nto the frontend code in IPython soon).\n\nThis is simply _horrible_: module-level monkey patching. In other words:\nhuge side effects. I don't think this solution is acceptabe, and I'd like\nthis bug reopened, admitedly with a milestone set for later than 0.10.\n\nThe IPython-related code in ETS is full of similar hacks (like\nmonkey-patching raw_input). It renders the whole applications fragiles.\n\nGaël\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236166",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2Ng==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:09Z",
    "updated_at": "2010-05-10T09:34:09Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 5 by: Ville M. Vainio, on 2009-03-15 12:42:19+00:00 ]\n\nOn Sun, Mar 15, 2009 at 2:27 PM, Gael Varoquaux\ngael.varoquaux@normalesup.org wrote:\n\n> This is simply _horrible_: module-level monkey patching. In other words:\n> huge side effects. I don't think this solution is acceptabe, and I'd like\n> this bug reopened, admitedly with a milestone set for later than 0.10.\n\nI agree that it's horrible. A proper solution would be to implement\nthe crash handler as a hook (and have current crash handler as the\ndefault handler if hook raises TryNext).\n\n## \n\nVille M. Vainio\nhttp://tinyurl.com/vainio\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236167",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2Nw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:10Z",
    "updated_at": "2010-05-10T09:34:10Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 6 by: Gael Varoquaux, on 2009-03-15 13:40:03+00:00 ]\n\nOn Sun, Mar 15, 2009 at 12:42:19PM -0000, Ville M. Vainio wrote:\n\n> On Sun, Mar 15, 2009 at 2:27 PM, Gael Varoquaux\n> gael.varoquaux@normalesup.org wrote:\n> \n> > This is simply _horrible_: module-level monkey patching. In other words:\n> > huge side effects. I don't think this solution is acceptabe, and I'd like\n> > this bug reopened, admitedly with a milestone set for later than 0.10.\n> \n> I agree that it's horrible. A proper solution would be to implement\n> the crash handler as a hook (and have current crash handler as the\n> default handler if hook raises TryNext).\n\nThat sounds good.\n\nGaël\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236168",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-236168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 236168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE2OA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:11Z",
    "updated_at": "2010-05-10T09:34:11Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 7 by: Fernando Perez, on 2009-03-15 20:58:59.289438+00:00 ]\n\nReopened as per feedback in thread.  We'll look into it post-0.10 though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/908285",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-908285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 908285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODI4NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T16:17:33Z",
    "updated_at": "2011-03-23T16:17:33Z",
    "author_association": "MEMBER",
    "body": "Can someone confirm whether this is still an issue in trunk?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2691704",
    "html_url": "https://github.com/ipython/ipython/issues/54#issuecomment-2691704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/54",
    "id": 2691704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTE3MDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-10T05:35:15Z",
    "updated_at": "2011-11-10T05:35:15Z",
    "author_association": "MEMBER",
    "body": "The crash handler is attached to the Application object, not the InteractiveShell, so this shouldn't be an issue anymore.  If an IPython Application is not initialized, the crash handler is never constructed.\n\nFor instance, the following code just gets a regular traceback:\n\n``` python\nfrom IPython.frontend.terminal.interactiveshell import TerminalInteractiveShell\n\nclass BadInteractiveShell(TerminalInteractiveShell):\n\n    def run_cell(self, *args, **kwargs):\n        TerminalInteractiveShell.run_cell(self, *args, **kwargs)\n        1/0\n\nBadInteractiveShell().mainloop()\n```\n"
  }
]
