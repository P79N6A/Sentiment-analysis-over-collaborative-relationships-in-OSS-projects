[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11434014",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11434014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11434014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDM0MDE0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T08:46:20Z",
    "updated_at": "2012-12-17T08:46:20Z",
    "author_association": "MEMBER",
    "body": "Out of curiosity, what are using in parallel ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11444487",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11444487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11444487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDQ0NDg3",
    "user": {
      "login": "filmor",
      "id": 30848,
      "node_id": "MDQ6VXNlcjMwODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/30848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filmor",
      "html_url": "https://github.com/filmor",
      "followers_url": "https://api.github.com/users/filmor/followers",
      "following_url": "https://api.github.com/users/filmor/following{/other_user}",
      "gists_url": "https://api.github.com/users/filmor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filmor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filmor/subscriptions",
      "organizations_url": "https://api.github.com/users/filmor/orgs",
      "repos_url": "https://api.github.com/users/filmor/repos",
      "events_url": "https://api.github.com/users/filmor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filmor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T14:54:18Z",
    "updated_at": "2012-12-17T14:54:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've written a database connector that I expose using different python handlers via a tornado websocket. In the end I want to be able to write those handlers based on cells from notebooks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11542305",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11542305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11542305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQyMzA1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T18:43:26Z",
    "updated_at": "2012-12-19T18:43:26Z",
    "author_association": "MEMBER",
    "body": "Sorry for the delay to respond, \nYou want to connect cell to those db through websoket, \nIs it to \"store\" those cells, to edit something ? \nCan't you go through the kernel to do that? \n\nI'm just trying to see how this could fit in IPython future plan, and in particular multi-user and security.\nOr wether this already falls into the multiple backend to store things. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11607554",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11607554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11607554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjA3NTU0",
    "user": {
      "login": "filmor",
      "id": 30848,
      "node_id": "MDQ6VXNlcjMwODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/30848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filmor",
      "html_url": "https://github.com/filmor",
      "followers_url": "https://api.github.com/users/filmor/followers",
      "following_url": "https://api.github.com/users/filmor/following{/other_user}",
      "gists_url": "https://api.github.com/users/filmor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filmor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filmor/subscriptions",
      "organizations_url": "https://api.github.com/users/filmor/orgs",
      "repos_url": "https://api.github.com/users/filmor/repos",
      "events_url": "https://api.github.com/users/filmor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filmor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-21T09:37:09Z",
    "updated_at": "2012-12-21T09:37:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "This maybe is a bit to hacky, point is, I want to run a specific IPython notebook server on the same port as some other applications (namely the database connector, that may also be used in Javascript widgets in the notebook itself for prototyping purposes). However what I just realised I would actually like to do would be to start a tornado server and use a notebook server as a handler for `\"/ipython/(.*)\"`, by using a profile, i.e. I want to do something like `(\"ipython/(.*)\", IPython.NotebookHandler(profile=\"nbserver\"))`. This pull request emulates this behaviour by adding the other handlers to the notebook's tornado.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11664366",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11664366",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11664366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjY0MzY2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T18:23:18Z",
    "updated_at": "2012-12-24T18:23:18Z",
    "author_association": "MEMBER",
    "body": "Ok, I'm not sure I totally follow, \n\nserving under `/ipython/*` can be done with `--NotebookApp.base_project_url` but you want a handler for databases on the same port for your cells to access it.\n\nI'm not quite sure of what you want to do with those handler. You state that you want to do it with javascript widget, but don't you want the js widget to acces this throught the kernel ? I do understand that for prototyping purpose this is usefull, but if we ship it, people will start relying on it for other purpose.\n\nIsn't it possible to do the other way around ? \nA proxy that will dispatch the request either to IPython if url start with 'ipython' or to any other program otherwise ?\n\nIf I had to guess, I would say nginx, or a simple node program.\n\nIf there is a positive answer I'm really interest in knowing how to do that for my own config. It's on the 1000 things I wan't to try and haven't got time to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11664530",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11664530",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11664530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjY0NTMw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T18:37:28Z",
    "updated_at": "2012-12-24T18:37:28Z",
    "author_association": "MEMBER",
    "body": "Sorry for the delayed response.  I won't have time to respond if full until\nafter Christmas, but I don't think we want to go in this direction.  We\nwant IPython to be hackable and extensible, but have plans to accomplish\nthat in a different manner.  More details to follow...\n\nOn Wed, Dec 19, 2012 at 10:43 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Sorry for the delay to respond,\n> You want to connect cell to those db through websoket,\n> Is it to \"store\" those cells, to edit something ?\n> Can't you go through the kernel to do that?\n> \n> I'm just trying to see how this could fit in IPython future plan, and in\n> particular multi-user and security.\n> Or wether this already falls into the multiple backend to store things.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2694#issuecomment-11542305.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11674824",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11674824",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11674824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjc0ODI0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-25T17:32:51Z",
    "updated_at": "2012-12-25T17:32:51Z",
    "author_association": "MEMBER",
    "body": "Not doable with nginx yet because of websocket, planed for 1.3. \nPotentially doable with node, but there is a huge new bug in using base_project_url in current version that prevent from doing that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11764060",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-11764060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 11764060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzY0MDYw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-30T12:25:07Z",
    "updated_at": "2012-12-30T12:25:07Z",
    "author_association": "MEMBER",
    "body": "@filmor \n\nI did it with node\n\nMapped `localhost:8000/ipython/*` to `localhost:8888/ipython/*`\nAnd at the same time `localhost:8000/whatever/*` to `anotherhost:1234/somethingelse/*`\n\nAdvantage is that you can change the bindings live without having to restart IPython notebook server. \n(and works also with other programs than IPython) \n\nAre you interested ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12070425",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-12070425",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 12070425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDcwNDI1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-09T22:31:02Z",
    "updated_at": "2013-01-09T22:31:02Z",
    "author_association": "MEMBER",
    "body": "So here is the rough outline of why we don't want to go in this direction.  The current scope of the ipython notebook app is that it is the ipython notebook application.  By, I mean that we want to limit its usefulness to serving notebooks only.  Allowing arbitrary handlers turns the main notebook script into a sort of generic web framework that just happens to have an IPython notebook in it.  That is too broad of a scope.\n\nWe do want people to write more general web applications that have notebooks in them, but these are outside the scope of ipython and should thus be done as separate projects.  But, we do want to make it easy for people to write these notebook-including web apps.  Some of the things we are thinking about:\n- Making our html/css/js more modular to allow people to grab only the pieces they need.\n- Refactoring our handlers to allow the same modularity.\n- Turning some of our main notebook app into libraries that other people can use.\n\nEventually, you should be able to grab the pieces you need, and create your own main web app script and be of to the races.  BUT, I realize we are not there yet, so solutions like Matthias's node proxy are very attractive.\n\nWith these things in mind, are you OK if we close this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12118837",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-12118837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 12118837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTE4ODM3",
    "user": {
      "login": "filmor",
      "id": 30848,
      "node_id": "MDQ6VXNlcjMwODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/30848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filmor",
      "html_url": "https://github.com/filmor",
      "followers_url": "https://api.github.com/users/filmor/followers",
      "following_url": "https://api.github.com/users/filmor/following{/other_user}",
      "gists_url": "https://api.github.com/users/filmor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filmor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filmor/subscriptions",
      "organizations_url": "https://api.github.com/users/filmor/orgs",
      "repos_url": "https://api.github.com/users/filmor/repos",
      "events_url": "https://api.github.com/users/filmor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filmor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T21:11:09Z",
    "updated_at": "2013-01-10T21:11:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am indeed, thanks. I'll think I'll go with a proxy solution for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12119034",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-12119034",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 12119034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTE5MDM0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T21:15:19Z",
    "updated_at": "2013-01-10T21:15:19Z",
    "author_association": "MEMBER",
    "body": "BTW, I released the proof of concept of proxy on [npm](https://npmjs.org/package/ipython-notebook-proxy) and [here is the source](https://github.com/Carreau/IPython-notebook-proxy) I'll be happy to get improvement. \n\nPlease ping me if you have issues using it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12119206",
    "html_url": "https://github.com/ipython/ipython/pull/2694#issuecomment-12119206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2694",
    "id": 12119206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTE5MjA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T21:18:27Z",
    "updated_at": "2013-01-10T21:18:27Z",
    "author_association": "MEMBER",
    "body": "@filmor thanks for understanding.  Look forward to seeing how you end up using the notebook in your web apps.\n"
  }
]
