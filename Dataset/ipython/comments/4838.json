[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32838324",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32838324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32838324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODM4MzI0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T10:58:18Z",
    "updated_at": "2014-01-21T10:58:18Z",
    "author_association": "MEMBER",
    "body": "Thanks, I'm sure I've seen it somewhere but don't remember where. IIRC we said we could have a dropdown on \"New Notebook\" that propose different things like \"From URL\"...etc.\n\nThere is a slight difficult issue which is that on gist number you might want to clone the repo rather than just get the file.\n\nDashboard should have a full refactor for 3.0.\n\nBTW, you should have your student use git as a good habit :-) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32838934",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32838934",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32838934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODM4OTM0",
    "user": {
      "login": "wasade",
      "id": 474290,
      "node_id": "MDQ6VXNlcjQ3NDI5MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/474290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wasade",
      "html_url": "https://github.com/wasade",
      "followers_url": "https://api.github.com/users/wasade/followers",
      "following_url": "https://api.github.com/users/wasade/following{/other_user}",
      "gists_url": "https://api.github.com/users/wasade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wasade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wasade/subscriptions",
      "organizations_url": "https://api.github.com/users/wasade/orgs",
      "repos_url": "https://api.github.com/users/wasade/repos",
      "events_url": "https://api.github.com/users/wasade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wasade/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T11:05:08Z",
    "updated_at": "2014-01-21T11:05:08Z",
    "author_association": "NONE",
    "body": "Thank you for the quick reply. The \"From URL...\" would be excellent. Regarding the gist issue, would it be possible to borrow the approach taken in the nbviewer repo?\n\nI absolutely agree re: git, but the focus of the [workshop](http://evomics.org/workshops/workshop-on-genomics/2014-workshop-on-genomics-cesky-krumlov/) is in genomics, and most of the participants are still getting familiar with the bash. We'll be using the Notebook though for a [QIIME](http://qiime.org) tutorial as well as a Python programming tutorial, and I have been doing what I can to push people to git who are at a reasonable level. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32924826",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32924826",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32924826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTI0ODI2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T18:50:33Z",
    "updated_at": "2014-01-21T18:50:33Z",
    "author_association": "MEMBER",
    "body": "Hmm, I'd already envisaged making 'New notebook' a dropdown to select the language you wanted for a new, blank notebook. I don't have my heart set on that, just another possibility to consider.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32941512",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32941512",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32941512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTQxNTEy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T19:07:47Z",
    "updated_at": "2014-01-21T19:07:47Z",
    "author_association": "MEMBER",
    "body": "The 2 are not incompatible as the downloaded notebook might already have a prefered kernel :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32959119",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32959119",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32959119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU5MTE5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T20:22:01Z",
    "updated_at": "2014-01-21T20:22:01Z",
    "author_association": "MEMBER",
    "body": "Technically they're compatible, but I don't think it would be a great user experience to pack two different kinds of options into one dropdown.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32981161",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32981161",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32981161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgxMTYx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T00:35:37Z",
    "updated_at": "2014-01-22T00:35:37Z",
    "author_association": "MEMBER",
    "body": "I like the idea of having a \"New Notebook from URL\" capability in the dashboard and have added it to the list of actions we will add to the refactored notebook dashboard here:\n\nhttps://hackpad.com/IPython-Winter-2014-Development-Meeting-fKrExqKCWmC\n\nBecause that will happen in the context of a larger refactor, I would like to close this issue and track progress inside the larger dashboard refactor (will open an issue on that).\n\n@takluyver once we have deferred kernel starting, the language selection should be done in the Notebook page. The Dashboard should only deal with the notebook documents - the session and kernel/language management will be done in the actual notebook page. I say this because I think we want to encourage users to have a very weak coupling between \"notebook document\" and \"kernel language\":\n\n\"Notebook that just happens to be attached to a Python kernel at the moment\"\n\nrather than:\n\n\"Python Notebook\"\n\nThe other reason I say this is that currently there is a semi-nasty coupling between Notebooks/Sessions/Kernels in the RESTful web services. It would help us to clean that up by not even allowing a kernel to start upon a notebook being created.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32982473",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32982473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32982473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgyNDcz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T00:58:31Z",
    "updated_at": "2014-01-22T00:58:31Z",
    "author_association": "MEMBER",
    "body": "I'm not sure that makes complete sense, though - the UI needs to know a language for syntax highlighting, and when we have the different kernel logos, we'll want to pick a logo when the notebook page opens. Conceptually, the code content makes it a \"Python notebook\", because it doesn't make sense to try to run that code with a different kernel (apart from, perhaps, Python 2 vs Python 3, but that's a bit of a corner case).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32984177",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-32984177",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 32984177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg0MTc3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T01:18:06Z",
    "updated_at": "2014-01-22T01:18:06Z",
    "author_association": "MEMBER",
    "body": "Thanks, this helps me to clarify these ideas better. Some points:\n- We will have to teach the kernels and session web services about kernel\n  languages. Sessions will only know about the language in so far as a\n  session links a kernel (with a language) to a notebook.\n- The notebooks web service will not know about the language.\n- The notebook document will know about the language, but that is internal\n  to the notebook document and not really part of the notebooks web service.\n- When a notebook opens, the following steps will happen:\n1. The notebook will be fetched.\n2. The notebook JSON will be inspected for the starting language.\n3. The notebook page will load the JS for that kernel mode like\n   python-mode.js. This will declare all of the resources (icons, syntax\n   highlighting, etc.). These resources will be hooked up to everything.\n4. The notebook will be put on the page using those resources.\n5. The Kernel Language dropdown will be put into a state that shows the\n   notebooks language.\n6. Button's+keyboard shortcuts will be hooked up to start the kernel when\n   needed or explicitly requested.\n7. Switching the kernel at runtime will simple load the JS mode for that\n   new kernel and re-init all of the resources (syntax highlighting).\n\nTo expose the language to the \"New Notebook\" action in the dashboard, we\nwould need to change how the notebook web service works. That is possible.\nMy biggest objection though is that I think the dashboard should be about\nnotebooks, not kernels. But I am open to trying it out different ways and\nseeing which works best in actual usage.\n\nOn Tue, Jan 21, 2014 at 4:58 PM, Thomas Kluyver notifications@github.comwrote:\n\n> I'm not sure that makes complete sense, though - the UI needs to know a\n> language for syntax highlighting, and when we have the different kernel\n> logos, we'll want to pick a logo when the notebook page opens.\n> Conceptually, the code content makes it a \"Python notebook\", because it\n> doesn't make sense to try to run that code with a different kernel (apart\n> from, perhaps, Python 2 vs Python 3, but that's a bit of a corner case).\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4838#issuecomment-32982473\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34469585",
    "html_url": "https://github.com/ipython/ipython/issues/4838#issuecomment-34469585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4838",
    "id": 34469585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY5NTg1",
    "user": {
      "login": "inducer",
      "id": 352067,
      "node_id": "MDQ6VXNlcjM1MjA2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/352067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inducer",
      "html_url": "https://github.com/inducer",
      "followers_url": "https://api.github.com/users/inducer/followers",
      "following_url": "https://api.github.com/users/inducer/following{/other_user}",
      "gists_url": "https://api.github.com/users/inducer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inducer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inducer/subscriptions",
      "organizations_url": "https://api.github.com/users/inducer/orgs",
      "repos_url": "https://api.github.com/users/inducer/repos",
      "events_url": "https://api.github.com/users/inducer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inducer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-07T16:54:15Z",
    "updated_at": "2014-02-07T16:54:15Z",
    "author_association": "NONE",
    "body": ":+1: \n"
  }
]
