[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10908884",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10908884",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10908884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA4ODg0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-30T23:50:13Z",
    "updated_at": "2012-11-30T23:50:13Z",
    "author_association": "MEMBER",
    "body": "That would certainly be nice, but I think it's one of those things that's tricky to do well. The frontend doesn't know the meaning of what's in the cell, it just sends it to the kernel. And the kernel doesn't know about the frontend.\n\nI guess it would be quite simple for the frontend to check if the code is a single line ending with a `?`. But even there, you have to be careful:\n\n```\nf = f + 1    # What does this mean?\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10909106",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10909106",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10909106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA5MTA2",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-30T23:59:42Z",
    "updated_at": "2012-11-30T23:59:42Z",
    "author_association": "MEMBER",
    "body": "@michaelaye does `Ctrl-Enter` partially solve this for you? It'll keep the cursor in the same cell, execute it, and highlight all of the text in that cell. That last part might not be something that you want, though.\n\nAlso, you're doing `x?` where `x` is a callable, you can also just type `x(<tab>` to get its doc string to pop up.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10909145",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10909145",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10909145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA5MTQ1",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-01T00:01:51Z",
    "updated_at": "2012-12-01T00:01:51Z",
    "author_association": "MEMBER",
    "body": "To add to what @takluyver is saying - imagine doing a \"Run all\" for a notebook with many cells - you certainly don't want it to stop executing and leave active any cell where you happen to have left behind a `?` query...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10909200",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10909200",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10909200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA5MjAw",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-01T00:04:19Z",
    "updated_at": "2012-12-01T00:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "But if my suggestion would work, there wouldn't be any left behind `?` query... ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10909256",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10909256",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10909256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA5MjU2",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-01T00:06:48Z",
    "updated_at": "2012-12-01T00:07:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Out of interest: Which part currently knows that the comment with an ending ? like the one given by @takluyver is not something to be sent to the help viewer? Because nothing bad happens with that...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10909446",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10909446",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10909446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA5NDQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-01T00:16:10Z",
    "updated_at": "2012-12-01T00:16:10Z",
    "author_association": "MEMBER",
    "body": "See this function:\nhttps://github.com/ipython/ipython/blob/master/IPython/core/inputsplitter.py#L208\n\n(Note that whole area is due for rearrangement in PR #2447, and subsequent\nwork)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10915334",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10915334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10915334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTE1MzM0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-01T09:41:10Z",
    "updated_at": "2012-12-01T09:41:10Z",
    "author_association": "MEMBER",
    "body": "Le 1 déc. 2012 à 00:59, Paul Ivanov a écrit :\n\n> @michaelaye does Ctrl-Enter partially solve this for you? It'll keep the cursor in the same cell, execute it, and highlight all of the text in that cell. That last part might not be something that you want, though.\n> \n> Also, you're doing x? where x is a callable, you can also just type x(<tab> to get its doc string to pop up.\n\nit does not **need** to be a callable, [ numpy(<tab> will work, but don't tell anyone it's a feature not a bug ] but it is really useful .\n\n## As for leaving `foo?` I think it is a reason of consistency between frontend as you can't edit previous input in console.\n\nMatthias\n\n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10915796",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-10915796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 10915796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTE1Nzk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-01T10:44:31Z",
    "updated_at": "2012-12-01T10:44:31Z",
    "author_association": "MEMBER",
    "body": "On Dec 1, 2012 9:41 AM, \"Bussonnier Matthias\" notifications@github.com\nwrote:\n\n> As for leaving `foo?` I think it is a reason of consistency between\n> frontend as you can't edit previous input in console.\n\nIn some cases, though, it does put the last input at the next prompt, minus\nthe ?. That serves much the same purpose.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11006823",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-11006823",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 11006823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDA2ODIz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T17:38:37Z",
    "updated_at": "2012-12-04T17:38:37Z",
    "author_association": "MEMBER",
    "body": "I do think it is probably important to be consistent with the behavior of\nthe terminal on this one.  I also think that this is a perfect place to use\nCtrl-Enter.  I guess I am just agreeing with what others have said.\n\nCheers,\n\nBrian\n\nOn Sat, Dec 1, 2012 at 2:44 AM, Thomas Kluyver notifications@github.comwrote:\n\n> On Dec 1, 2012 9:41 AM, \"Bussonnier Matthias\" notifications@github.com\n> wrote:\n> \n> > As for leaving `foo?` I think it is a reason of consistency between\n> > frontend as you can't edit previous input in console.\n> \n> In some cases, though, it does put the last input at the next prompt, minus\n> the ?. That serves much the same purpose.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/2633#issuecomment-10915796.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33303363",
    "html_url": "https://github.com/ipython/ipython/issues/2633#issuecomment-33303363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2633",
    "id": 33303363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAzMzYz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T22:58:54Z",
    "updated_at": "2014-01-25T22:58:54Z",
    "author_association": "MEMBER",
    "body": "The new modal UI changes all of this, not relevant any longer.\n"
  }
]
