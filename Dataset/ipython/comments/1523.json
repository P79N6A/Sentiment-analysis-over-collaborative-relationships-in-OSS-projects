[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135586",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5135586",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5135586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU1ODY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T23:29:38Z",
    "updated_at": "2012-04-14T23:29:38Z",
    "author_association": "MEMBER",
    "body": "I think that would give better behavior in the qtconsole, but I'm not sure who has the bandwidth to write the code for it.  We use matplotlib because it's a rarely unmet dependency, and lets us avoid having to manage (and thus support) any tex processing ourselves.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5136237",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5136237",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5136237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzYyMzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T01:41:29Z",
    "updated_at": "2012-04-15T01:41:29Z",
    "author_association": "MEMBER",
    "body": "Furthermore, I'm not sure that the Qtconsole widget we're using supports full-blown mathjax.  It's just a rich text widget, not a full-blown webkit one.\n\nRegarding the other tool you mention, we'd be happy to take a PR for it; the code is BSD, so if you guys test it out and find that it works well, we obviously trust you (by you I mean the sympy community, who is better positioned than we IPython devs are to know what really works well for sympy).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5141825",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5141825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5141825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDE4MjU=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T19:31:07Z",
    "updated_at": "2012-04-15T19:31:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, we still need to do more work on the sympy side to make things work better with the qtconsole and the notebook.  I'd like to factor out most of what is happening in the sympy profile into sympy itself, so that it works the same way with something like `isympy -c qtconsole`, or even just `ipython qtconsole` and then `from sympy import init_session; init_session()`.  See http://code.google.com/p/sympy/issues/detail?id=3031, http://code.google.com/p/sympy/issues/detail?id=2632, and http://code.google.com/p/sympy/issues/detail?id=2945.  \n\n> Furthermore, I'm not sure that the Qtconsole widget we're using supports full-blown mathjax. It's just a rich text widget, not a full-blown webkit one.\n\nYeah, I think I remember @ellisonbg saying something like this.  I really don't know much about this sort of thing, which is why I was asking here.  Is it maybe possible to call something external and have it return the mathjax math?\n\n> Regarding the other tool you mention, we'd be happy to take a PR for it; the code is BSD, so if you guys test it out and find that it works well, we obviously trust you (by you I mean the sympy community, who is better positioned than we IPython devs are to know what really works well for sympy).\n\nSomething like the LaTeX thing I think would have to be built into IPython to really work the best.  I've not tested it fully myself, actually (I remember having some issues with it a while back, so it may need to be fixed up before it can be included). But I think there are people in the sympy community who make heavy use of this extension, so maybe they've already fixed the issues.\n\nWe also have something very similar in sympy called `preview()`, which opens a window with a LaTeX generated form of the expression.  How hard would it be to convert that to just put it directly in the qtconsole.  Assuming it's not too slow, direct LaTeX rendering would really be the best if we can get it to work, because this will produce literally the highest possible quality math output (even higher than MathJax).\n\nBy the way, I can't really give this top priority right now due to classes and GSoC, but hopefully this summer I will have time to get to it (or I can convince someone else to do it ;-). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5142729",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5142729",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5142729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDI3Mjk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T21:21:18Z",
    "updated_at": "2012-04-15T21:21:18Z",
    "author_association": "MEMBER",
    "body": "> Yeah, I think I remember @ellisonbg saying something like this.  I really don't know much about this sort of thing, which is why I was asking here.  Is it maybe possible to call something external and have it return the mathjax math?\n> \n> Well, the point is that mathjax doesn't render to an image, it uses\n> the full modern html capabilities of browsers to position the glyphs\n> (using real fonts) into the html page.  So mathjax simply can't be\n> used in the qtconsole in any way, it has to run inside something which\n> is more or less as capable as a browser (i.e., a full webkit-type\n> widget with a real JS virtual machine and an html canvas).\n> \n> > Regarding the other tool you mention, we'd be happy to take a PR for it; the code is BSD, so if you guys test it out and find that it works well, we obviously trust you (by you I mean the sympy community, who is better positioned than we IPython devs are to know what really works well for sympy).\n> \n> Something like the LaTeX thing I think would have to be built into IPython to really work the best.  I've not tested it fully myself, actually (I remember having some issues with it a while back, so it may need to be fixed up before it can be included). But I think there are people in the sympy community who make heavy use of this extension, so maybe they've already fixed the issues.\n\nNo, it makes no sense to put a latex dependency into ipython.  Our\ndisplay protocol is 100% extensible, so that other projects can do\nthese extensions themselves without having to change IPython at all.\nWe're happy to ship the extension with IPython itself like we do now,\nbut things like these _must_ be possible strictly through our\nprotocol.  If they are not, it means we must fix the protocol itself.\nOtherwise, for every new external project with similar needs (sympy is\nnot the only one) we'd need to extend IPython, which is impractical.\n\nSo if you find limitations in our protocols for this, let us know and\nby all means we'll fix those, which is the right point in the\nabstraction layers to do it at.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143014",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5143014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5143014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMwMTQ=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:03:01Z",
    "updated_at": "2012-04-15T22:03:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Well, the point is that mathjax doesn't render to an image, it uses\n> the full modern html capabilities of browsers to position the glyphs\n> (using real fonts) into the html page.  So mathjax simply can't be\n> used in the qtconsole in any way, it has to run inside something which\n> is more or less as capable as a browser (i.e., a full webkit-type\n> widget with a real JS virtual machine and an html canvas).\n\nI see.  I was thinking there might be some kind of mathjax to image service.  But it sounds like this is not really the way to go.\n\n> No, it makes no sense to put a latex dependency into ipython.  Our\n> display protocol is 100% extensible, so that other projects can do\n> these extensions themselves without having to change IPython at all.\n> We're happy to ship the extension with IPython itself like we do now,\n> but things like these _must_ be possible strictly through our\n> protocol.  If they are not, it means we must fix the protocol itself.\n> Otherwise, for every new external project with similar needs (sympy is\n> not the only one) we'd need to extend IPython, which is impractical.\n\nI was just thinking that it should go in IPython instead of SymPy so that even non-SymPy users could take advantage of it.  Of course, if LaTeX is not installed or doesn't work for some reason, it will have to fallback to another printer (just like if matplotlib is not installed right now).  It wouldn't be a hard dependency; just a requirement for that specific display printer.  \n\nBut if you don't think it should be part of IPython, we can ship it with SymPy instead.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143078",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5143078",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5143078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMwNzg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:13:03Z",
    "updated_at": "2012-04-15T22:13:03Z",
    "author_association": "MEMBER",
    "body": "This could go into the current sympy extension.  But it would need to test the dependencies (matplotlib, latex) and use the best available one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143303",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5143303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5143303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMzMDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:44:41Z",
    "updated_at": "2012-04-15T22:44:41Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 15, 2012 at 3:03 PM, Aaron Meurer\nreply@reply.github.com\nwrote:\n\n> But if you don't think it should be part of IPython, we can ship it with SymPy instead.\n\nAs Brian says, it could be part of the extension we currently ship.  I\nguess I misunderstood you in that I thought you wanted sympy-specific\nmachinery in the core of IPython.  If we find some display tools for\nmath that prove useful as building blocks for other projects then yes,\nwe can certainly ship them in IPython.  I just misunderstood you.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143385",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5143385",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5143385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMzODU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:54:53Z",
    "updated_at": "2012-04-15T22:54:53Z",
    "author_association": "MEMBER",
    "body": "I think the general issue is that Matplotlib doesn't do a great job rendering latex, and doesn't cover the full subset of latex that SymPy uses.  I think it does make some sense for the QtConsole to actually support latex output (it does not), in which case calling out to subprocess tex rendering might make some sense.  Of course, this would be optional, and only work if the user has a functional latex install.  The difference between this and anything you could do in the plugin is that this would be `_repr_latex_` support in the QtConsole, whereas everything we are doing now / could do in the kernel involves rendering to PNG (makes no difference to the QtConsole that it started out as latex, or how it became a PNG - matplotlib is just the easiest way to get there by far).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143431",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5143431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5143431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDM0MzE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T23:00:19Z",
    "updated_at": "2012-04-15T23:00:19Z",
    "author_association": "MEMBER",
    "body": "I like Min's idea of using this to enable any object with a\n`_repr_latex_` to display properly in the qtconsole.\n\nOn Sun, Apr 15, 2012 at 3:54 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> I think the general issue is that Matplotlib doesn't do a great job rendering latex, and doesn't cover the full subset of latex that SymPy uses.  I think it does make some sense for the QtConsole to actually support latex output (it does not), in which case calling out to subprocess tex rendering might make some sense.  Of course, this would be optional, and only work if the user has a functional latex install.  The difference between this and anything you could do in the plugin is that this would be `_repr_latex_` support in the QtConsole, whereas everything we are doing now / could do in the kernel involves rendering to PNG (makes no difference to the QtConsole that it started out as latex, or how it became a PNG - matplotlib is just the easiest way to get there by far).\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1523#issuecomment-5143385\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143701",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5143701",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5143701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDM3MDE=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T23:41:49Z",
    "updated_at": "2012-04-15T23:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that's exactly what I meant.  This is what the ipy_tex thing I linked to does.  As it stands, it has nothing to do with SymPy (but getting SymPy to work with it is just a matter of piping the output of the `latex()` function to it).  Actually, now that I remember, much of what had to be done to get it to \"work\" was just getting it to work with SymPy, so not much work may need to be done after all.\n\nTechnical question: would it be possible to display a vector form of the LaTeX, such as dvi, ps, or pdf, so that it scales nicely, and is maybe even selectable?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5144061",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5144061",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5144061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQwNjE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T00:38:14Z",
    "updated_at": "2012-04-16T00:38:14Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 15, 2012 at 4:41 PM, Aaron Meurer\nreply@reply.github.com\nwrote:\n\n> Technical question: would it be possible to display a vector form of the LaTeX, such as dvi, ps, or pdf, so that it scales nicely, and is maybe even selectable?\n\nThe qt widget does support SVG, but I don't know if it supports inline\nPDF rendering.  In principle the pdf output could be converted to svg,\nthough that may start to get expensive.  It may introduce enough lag\nto be annoying in the display pipeline, if a third-party converter\nneeds to be called to do pdf2svg; but obviously one should just try\nand measure the real impact.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5144097",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5144097",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5144097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQwOTc=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T00:43:48Z",
    "updated_at": "2012-04-16T00:43:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, LaTeX rendering itself might cause a lag too.   My concern with svg was that pdf2svg is not a standard thing that people have installed (but I guess as with everything else it could just fallback).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5144184",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5144184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5144184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQxODQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T00:58:17Z",
    "updated_at": "2012-04-16T00:58:17Z",
    "author_association": "MEMBER",
    "body": "actually I don't think almost anyone will have pdf2svg available; I\njust mentioned it as a hypothetical name.  Now that you bring it up\nspecifically I looked around and there seems to [be such a\nproject](http://www.cityinthesky.co.uk/opensource/pdf2svg), but it\nlooks like a small, personal utility somebody wrote.\n\nThe reason I mentioned SVG is that I don't think the Qt widget we use\nsupports PDF natively, but it does support SVG.  So in practice, the\nsolution may be to use png.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5144216",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-5144216",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 5144216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQyMTY=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T01:05:16Z",
    "updated_at": "2012-04-16T01:05:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh you weren't referring specifically to that? :)\n\nI guess actually something like http://dvisvg.sourceforge.net/ would be better (it's a waste of time to go to pdf first).  No idea how fast it is, though.  And my point is that most people won't have any of the svg tools installed, as they don't come with LaTeX.\n\nPng should be fine too, though.  If we render with enough resolution, it should look fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6220334",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-6220334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 6220334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjAzMzQ=",
    "user": {
      "login": "nilqed",
      "id": 1512802,
      "node_id": "MDQ6VXNlcjE1MTI4MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1512802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nilqed",
      "html_url": "https://github.com/nilqed",
      "followers_url": "https://api.github.com/users/nilqed/followers",
      "following_url": "https://api.github.com/users/nilqed/following{/other_user}",
      "gists_url": "https://api.github.com/users/nilqed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nilqed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nilqed/subscriptions",
      "organizations_url": "https://api.github.com/users/nilqed/orgs",
      "repos_url": "https://api.github.com/users/nilqed/repos",
      "events_url": "https://api.github.com/users/nilqed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nilqed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-09T14:36:09Z",
    "updated_at": "2012-06-09T14:36:09Z",
    "author_association": "NONE",
    "body": "Well, we use https://github.com/scios/IPyXt for quite a long time now (sample output: http://edu.scios.ch/sympy/qt_sample_sympy.html). It looks fine in qtconsole (as well as in the nb). Meanwhile there is a new method which pipes directly into latex's stdin, avoiding tmp files, leaving no traces and is quite fast. I could it move form bitbucket to github.\nJack\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6221238",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-6221238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 6221238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjEyMzg=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-09T16:30:37Z",
    "updated_at": "2012-06-09T16:30:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would be nice. Is it BSD licensed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11747759",
    "html_url": "https://github.com/ipython/ipython/issues/1523#issuecomment-11747759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1523",
    "id": 11747759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzQ3NzU5",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-29T05:21:15Z",
    "updated_at": "2012-12-29T05:21:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "The IPython printing extension is now part of SymPy, so I've moved this to the SymPy issue tracker.  See https://code.google.com/p/sympy/issues/detail?id=3579.\n"
  }
]
