[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/273686949",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-273686949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 273686949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzY4Njk0OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-19T05:39:49Z",
    "updated_at": "2017-01-19T05:39:49Z",
    "author_association": "MEMBER",
    "body": "First step in reintegrating Jedi\r\n\r\nIf Jedi is installed expose a private API use it with prompt toolkit.\r\nJedi does not _yet_ provide all the completion IPython has, so this is\r\nstill a bit awkward. In order to debug this (and see what is Jedi\r\nprovided we for now inject a fake Jedi/IPython delimiter in the menu.\r\n\r\nNext step would to tag completions we don't expect Jedi to have and not\r\nmark them as \"missing\".\r\n\r\nJedi completion and this behavior are enabled by default, but could\r\nlikely be opt-in.\r\n\r\n---- \r\n\r\nHere you can see that jedi does not propose `.cache` as a completion as Jedi does not complete path.\r\n\r\n<img width=\"481\" alt=\"screen shot 2017-01-18 at 21 38 20\" src=\"https://cloud.githubusercontent.com/assets/335567/22095018/77d94096-ddc6-11e6-960c-6d939a6c3881.png\">\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274204819",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-274204819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 274204819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIwNDgxOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T23:13:06Z",
    "updated_at": "2017-01-20T23:13:06Z",
    "author_association": "MEMBER",
    "body": "@takluyver I have a feeling you'll have opinions on this one. As a first pass to ward jedi integration and high level views. Thoughs ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274226635",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-274226635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 274226635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIyNjYzNQ==",
    "user": {
      "login": "pylang",
      "id": 10778668,
      "node_id": "MDQ6VXNlcjEwNzc4NjY4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10778668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pylang",
      "html_url": "https://github.com/pylang",
      "followers_url": "https://api.github.com/users/pylang/followers",
      "following_url": "https://api.github.com/users/pylang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pylang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pylang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pylang/subscriptions",
      "organizations_url": "https://api.github.com/users/pylang/orgs",
      "repos_url": "https://api.github.com/users/pylang/repos",
      "events_url": "https://api.github.com/users/pylang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pylang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T02:28:33Z",
    "updated_at": "2017-01-21T02:28:33Z",
    "author_association": "NONE",
    "body": "hmm.  Jedi.  You mentioned to ask how can we help.  Anything I can do? : )"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274227593",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-274227593",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 274227593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIyNzU5Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T02:41:19Z",
    "updated_at": "2017-01-21T02:41:19Z",
    "author_association": "MEMBER",
    "body": "> hmm. Jedi. You mentioned to ask how can we help. Anything I can do? : )\r\n\r\nSure ! How comfortable are you with Python ?\r\n\r\nRight now I need to know if:\r\n  - What I wrote make sens.\r\n  - Help writing some documentation\r\n  - work in parallel on a patch to ipykernel repo (`ipykernel.py`, `do_complete` method) for this to be availlablein the notebook, and figureout a way to work both with the old and new API.\r\n\r\nOther things that should be worked on: assuming you do `im<tab>`\r\nJedi will tell to replace chars `0` to `2` with import. While current completion machinery will say replace`2` to `2` py `port`. Obviously the 2 completions are the same, but the deduplication logic does not handle this.\r\n\r\nThe current API return `text:str, matches:List[str]`, the jedi based completion are discarded by the old API (because they are of different form). It would be nice to figure out how to convert from the Jedi way to the old API.\r\n\r\nThe old API is also relatively not well documented so understanding (and documenting) would be great. \r\n\r\nLastly there are a number of issues tagged `tab-completion` on this repo; I'm pretty sure a number of them should be fixed by this pull-request. We should go through them and look at which ones would be fixed by this.\r\n\r\nIn a first iteration if you already managed to get that to work on your machine, and test to find bugs, that would be super-helpful !\r\n\r\nAlso I'm testing with Jedi-dev, I need to make sure it also work with Jedi stable !\r\n\r\nHere is a high level view, if you have any more detailed questions feel free to ask !\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274230706",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-274230706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 274230706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIzMDcwNg==",
    "user": {
      "login": "pylang",
      "id": 10778668,
      "node_id": "MDQ6VXNlcjEwNzc4NjY4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10778668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pylang",
      "html_url": "https://github.com/pylang",
      "followers_url": "https://api.github.com/users/pylang/followers",
      "following_url": "https://api.github.com/users/pylang/following{/other_user}",
      "gists_url": "https://api.github.com/users/pylang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pylang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pylang/subscriptions",
      "organizations_url": "https://api.github.com/users/pylang/orgs",
      "repos_url": "https://api.github.com/users/pylang/repos",
      "events_url": "https://api.github.com/users/pylang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pylang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T03:29:21Z",
    "updated_at": "2017-01-21T03:29:21Z",
    "author_association": "NONE",
    "body": "I can try bug testing and reading the code.  Thanks."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274974626",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-274974626",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 274974626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDk3NDYyNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-24T23:37:49Z",
    "updated_at": "2017-01-24T23:37:49Z",
    "author_association": "MEMBER",
    "body": "Ok, I think this is ready-ish for review, with tests, docs. I rebased/squashed everything and here is the commit message for the current commit:\r\n\r\n--- \r\n\r\nFirst step in reintegrating Jedi\r\n\r\nIf Jedi is installed expose a private API use it with prompt toolkit.\r\nJedi does not _yet_ provide all the completion IPython has, so this is\r\nstill a bit awkward. In order to debug this (and see what is Jedi\r\nprovided we for now inject a fake Jedi/IPython delimiter in the menu.\r\n\r\nJedi completion and this behavior are enabled by default, but could\r\nlikely be opt-in.\r\n\r\nAdd also a number of debug flags to be able to track why jedi is not\r\nworking, and/or what completions are found by IPython and not Jedi.\r\nThat should give us a bit of heads up and feedback to know whether we\r\ncan remove part of the IPython completer, and more especially if we can\r\ndrop `python_matches`.\r\n\r\nOnce `python_matches` is dropped and some other of the current matchers\r\nare either dropped or converted to the new API, that should simplify the\r\ninternal quite a bit.\r\n\r\nThat would just be too much for an already BIG pull-request.\r\n\r\n----\r\n\r\n@willingc I did a pass on documenting thing better, I would appreciate hints on where to do things better."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275003053",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-275003053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 275003053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTAwMzA1Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T02:33:20Z",
    "updated_at": "2017-01-25T02:33:20Z",
    "author_association": "MEMBER",
    "body": "There is a duplication issue of `import` in the `from foo im<tab>` case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275483747",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-275483747",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 275483747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ4Mzc0Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-26T19:16:30Z",
    "updated_at": "2017-01-26T19:16:30Z",
    "author_association": "MEMBER",
    "body": "> There is a duplication issue of import in the from foo im<tab> case.\r\n\r\nOk, that's an edge case and not a bug. One completer returns `import` with space, the other without space so they _are_ different. One we drop `python_matches` that will be self-solved. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276486611",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-276486611",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 276486611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjQ4NjYxMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T20:45:44Z",
    "updated_at": "2017-01-31T20:45:44Z",
    "author_association": "MEMBER",
    "body": "Rebased. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276769428",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-276769428",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 276769428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc2OTQyOA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T20:17:15Z",
    "updated_at": "2017-02-01T20:17:15Z",
    "author_association": "MEMBER",
    "body": "Signing up for these completion threads -- is there a good way for me to run the changes you have for ipykernel and ipython together? Check out the branches for both of these into a virtual environment and set them up as a kernel?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276792122",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-276792122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 276792122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc5MjEyMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T21:43:43Z",
    "updated_at": "2017-02-01T21:43:43Z",
    "author_association": "MEMBER",
    "body": "> Signing up for these completion threads -- is there a good way for me to run the changes you have for ipykernel and ipython together? Check out the branches for both of these into a virtual environment and set them up as a kernel?\r\n\r\nI hope someone to merge that soonish, I'll update my ipykernel branch then. \r\n\r\nYes checking the branches in an env would work. The ipykernel one does not sed his extra info in metadata, but that should \"just\" take me 30 min to do "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276804209",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-276804209",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 276804209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjgwNDIwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T22:30:29Z",
    "updated_at": "2017-02-01T22:30:29Z",
    "author_association": "MEMBER",
    "body": "Because I saw in another thread that you're frustrated by the wait for review: this is on my queue to look at, but it falls into the same trap I told Mike about. Things that I know I want longer to look at tend to get pushed down the queue, because bashing through the easy issues is more effective in keeping down the number waiting for attention."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276809265",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-276809265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 276809265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjgwOTI2NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T22:51:41Z",
    "updated_at": "2017-02-01T22:51:41Z",
    "author_association": "MEMBER",
    "body": "> Because I saw in another thread that you're frustrated by the wait for review: this is on my queue to look at, but it falls into the same trap I told Mike about. Things that I know I want longer to look at tend to get pushed down the queue, because bashing through the easy issues is more effective in keeping down the number waiting for attention.\r\n\r\nThanks, I appreciate, and I understand. I've tried to push your PR and notebook 5.0 issues as well to give you some review time. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/277031040",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-277031040",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 277031040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzAzMTA0MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T17:51:51Z",
    "updated_at": "2017-02-02T17:51:51Z",
    "author_association": "MEMBER",
    "body": "I've had a brief scan through this; it looks OK. As before, I think the main thing is to land it in master and start trying it out.\r\n\r\nThe `provisional` context manager is clever, but I'm not convinced that it's that useful for this. Most consumers are using it as part of IPython, not the API."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/277259095",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-277259095",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 277259095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzI1OTA5NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T14:27:24Z",
    "updated_at": "2017-02-03T14:27:24Z",
    "author_association": "MEMBER",
    "body": "Let's see what happens :-)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/277304772",
    "html_url": "https://github.com/ipython/ipython/pull/10182#issuecomment-277304772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10182",
    "id": 277304772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzMwNDc3Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T17:09:57Z",
    "updated_at": "2017-02-03T17:09:57Z",
    "author_association": "MEMBER",
    "body": "Thank you !"
  }
]
