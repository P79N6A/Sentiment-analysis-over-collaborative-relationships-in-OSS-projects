[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/147327776",
    "html_url": "https://github.com/ipython/ipython/issues/8898#issuecomment-147327776",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8898",
    "id": 147327776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzMyNzc3Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-12T08:28:13Z",
    "updated_at": "2015-10-12T08:28:13Z",
    "author_association": "MEMBER",
    "body": "IPython notices when it's not in a virtualenv, but a virtualenv is active when it's launched. This happens because people expect IPython to work in virtualenvs even when it's not installed there. When this happens, IPython adds the virtualenv to sys.path, mimicking the behavior of a `--system-site-packages` env. I'm personally of the opinion that we shouldn't be doing this at all, but disabling the env should be a fine way to prevent it. Or just unsetting the env variable should do it. Travis won't be upset. There isn't another good way to prevent the behavior at this point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/196068595",
    "html_url": "https://github.com/ipython/ipython/issues/8898#issuecomment-196068595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8898",
    "id": 196068595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjA2ODU5NQ==",
    "user": {
      "login": "dopplershift",
      "id": 221526,
      "node_id": "MDQ6VXNlcjIyMTUyNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/221526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dopplershift",
      "html_url": "https://github.com/dopplershift",
      "followers_url": "https://api.github.com/users/dopplershift/followers",
      "following_url": "https://api.github.com/users/dopplershift/following{/other_user}",
      "gists_url": "https://api.github.com/users/dopplershift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dopplershift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dopplershift/subscriptions",
      "organizations_url": "https://api.github.com/users/dopplershift/orgs",
      "repos_url": "https://api.github.com/users/dopplershift/repos",
      "events_url": "https://api.github.com/users/dopplershift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dopplershift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-13T22:24:21Z",
    "updated_at": "2016-03-13T22:24:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just lost a few hours to this executing Jupyter notebooks on Travis. At the very least, you could detect if running under conda python and warn or not enable virtualenv.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/398847266",
    "html_url": "https://github.com/ipython/ipython/issues/8898#issuecomment-398847266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8898",
    "id": 398847266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODg0NzI2Ng==",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T18:17:27Z",
    "updated_at": "2018-06-20T18:17:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why is IPython doing this? It seems like pretty bad practice for a library to try to fix people's environments for them. Usually what ends up happening is that people become even more confused about how environments work, and don't understand why things work sometimes and don't work other times (i.e., when they do or don't use IPython). "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/398856853",
    "html_url": "https://github.com/ipython/ipython/issues/8898#issuecomment-398856853",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8898",
    "id": 398856853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODg1Njg1Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T18:48:36Z",
    "updated_at": "2018-06-20T18:48:36Z",
    "author_association": "MEMBER",
    "body": "IPython is primarily an application, not a library, and it modifies various global state that I wouldn't want a library to modify.\r\n\r\nThe virtualenv-adaptation feature was written back when the norm was to make virtualenvs with system-site-packages enabled, and when Python packaging was still rough enough that reinstalling IPython in every environment was a chore. I probably wouldn't add it today. But what's obvious and simple to you will confuse other people, especially if they're used to how IPython currently handles virtualenvs.\r\n\r\nThis is no longer used when IPython is running as a Jupyter kernel. We have a whole different kind of environment confusion with Jupyter."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/398858730",
    "html_url": "https://github.com/ipython/ipython/issues/8898#issuecomment-398858730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8898",
    "id": 398858730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODg1ODczMA==",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T18:54:41Z",
    "updated_at": "2018-06-20T18:54:41Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  But what's obvious and simple to you will confuse other people, \r\n\r\nNothing about virtualenvs is obvious or simple to me. My point is simply that by modifying their behavior inside IPython, they become more complex (whether they started out as obvious and simple or nonobvious and complex is irrelevant to my point). \r\n\r\n> especially if they're used to how IPython currently handles virtualenvs.\r\n\r\nHow many people know that IPython is actually doing this. I would expect most people who notice this behavior would just assume that it's the way virtualenvs work.  And then they would get very confused when \"sometimes\" they don't work that way (and may never guess that IPython is the culprit). c.f. @dopplershift above who lost hours trying to figure out why virtualenvs were behaving weirdly on Travis (though to be fair, under conda in Travis, IPython prints a warning, which is how I came across this issue myself). "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/398860728",
    "html_url": "https://github.com/ipython/ipython/issues/8898#issuecomment-398860728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8898",
    "id": 398860728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODg2MDcyOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T19:01:20Z",
    "updated_at": "2018-06-20T19:01:20Z",
    "author_association": "MEMBER",
    "body": "It always prints a warning when this happens, and we no longer do it when acting as a Jupyter kernel, which is the case @dopplershift was running into.\r\n\r\n> My point is simply that by modifying their behavior inside IPython, they become more complex\r\n\r\nFrom your understanding of them. Other people assume that because activating a virtualenv changes what `python` does, it will also change what `ipython` does. You and I know enough about virtualenvs to understand why `python` and `ipython` are different, but that's not clear to everyone.\r\n\r\nWe get yelled at whenever we change anything, and as this issue has gone over a year with no comments, it doesn't seem like it's causing too many issues. As compared to how Jupyter kernelspecs interact with environments, which I'm always trying to explain."
  }
]
