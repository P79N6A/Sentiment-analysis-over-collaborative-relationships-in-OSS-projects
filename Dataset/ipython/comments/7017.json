[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64102877",
    "html_url": "https://github.com/ipython/ipython/pull/7017#issuecomment-64102877",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7017",
    "id": 64102877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTAyODc3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-23T01:41:11Z",
    "updated_at": "2014-11-23T01:41:11Z",
    "author_association": "MEMBER",
    "body": "I think I'd rather just special case .pyx files instead of trying to detect what's a text file. I know hypothetically other tools could do something similar to Cython, and a special case wouldn't fix that, but it's simple, and in practical terms, there aren't that many such tools.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64102931",
    "html_url": "https://github.com/ipython/ipython/pull/7017#issuecomment-64102931",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7017",
    "id": 64102931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTAyOTMx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-23T01:43:27Z",
    "updated_at": "2014-11-23T01:43:27Z",
    "author_association": "MEMBER",
    "body": "> Still try to display source lines for binary files, you never know what linecache got from that file.\n\nAm I understanding this right: you mean trying to read a line of text from binary files, and if it happens to succeed, displaying that? This doesn't sound like a good idea. Under what circumstances would that be useful?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64111055",
    "html_url": "https://github.com/ipython/ipython/pull/7017#issuecomment-64111055",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7017",
    "id": 64111055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTExMDU1",
    "user": {
      "login": "jdemeyer",
      "id": 3625785,
      "node_id": "MDQ6VXNlcjM2MjU3ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdemeyer",
      "html_url": "https://github.com/jdemeyer",
      "followers_url": "https://api.github.com/users/jdemeyer/followers",
      "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
      "repos_url": "https://api.github.com/users/jdemeyer/repos",
      "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-23T08:54:37Z",
    "updated_at": "2014-11-23T08:54:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Am I understanding this right: you mean trying to read a line of text from binary files\n\nNo, that's not what I mean! What I mean is the following: the reading of lines is done in `_fixed_getinnerframes()` using `ulinecache` (which is IPython's wrapper of `linecache`). What I mean is: if `ulinecache` read some lines of code, then display them.\n\nThe confusing part of this code is that\n(1) the reading of source code lines and\n(2) determining the filename to display above those lines\nare done completely independently in two different functions.\n\nImagine that (1) succeeds but because of (2) we wrongly conclude that this file is a binary file. That being said, if (2) works perfectly then this part of my patch isn't needed. So I see it more like an extra layer of defense against mishandled filenames.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64111220",
    "html_url": "https://github.com/ipython/ipython/pull/7017#issuecomment-64111220",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7017",
    "id": 64111220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTExMjIw",
    "user": {
      "login": "jdemeyer",
      "id": 3625785,
      "node_id": "MDQ6VXNlcjM2MjU3ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdemeyer",
      "html_url": "https://github.com/jdemeyer",
      "followers_url": "https://api.github.com/users/jdemeyer/followers",
      "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
      "repos_url": "https://api.github.com/users/jdemeyer/repos",
      "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-23T09:01:50Z",
    "updated_at": "2014-11-23T09:01:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think I'd rather just special case .pyx files instead of trying to detect what's a text file.\n\nThen it's probably better to blacklist known non-text-files (ending with `.so`, `.dll`, `.pyd`) like you already do. But still, that would be less robust than my patch.\n\nOn the other hand, I personally don't care much _how_ these bugs are fixed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65033022",
    "html_url": "https://github.com/ipython/ipython/pull/7017#issuecomment-65033022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7017",
    "id": 65033022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDMzMDIy",
    "user": {
      "login": "jdemeyer",
      "id": 3625785,
      "node_id": "MDQ6VXNlcjM2MjU3ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdemeyer",
      "html_url": "https://github.com/jdemeyer",
      "followers_url": "https://api.github.com/users/jdemeyer/followers",
      "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
      "repos_url": "https://api.github.com/users/jdemeyer/repos",
      "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T08:28:07Z",
    "updated_at": "2014-12-01T08:28:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I messed up my branches, causing this pull request to be automatically closed (without merging). I will resubmit my patches as a new pull request.\n"
  }
]
