[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4814207",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-4814207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 4814207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTQyMDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-29T12:41:27Z",
    "updated_at": "2012-03-29T12:41:27Z",
    "author_association": "MEMBER",
    "body": "Yes-ish, although it might only be able to work in certain situations. Have a look at [IPython.core.completer](https://github.com/ipython/ipython/blob/master/IPython/core/completer.py) and [IPython.core.completerlib](https://github.com/ipython/ipython/blob/master/IPython/core/completerlib.py).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8131803",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-8131803",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 8131803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzE4MDM=",
    "user": {
      "login": "anushs",
      "id": 2203357,
      "node_id": "MDQ6VXNlcjIyMDMzNTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2203357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anushs",
      "html_url": "https://github.com/anushs",
      "followers_url": "https://api.github.com/users/anushs/followers",
      "following_url": "https://api.github.com/users/anushs/following{/other_user}",
      "gists_url": "https://api.github.com/users/anushs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anushs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anushs/subscriptions",
      "organizations_url": "https://api.github.com/users/anushs/orgs",
      "repos_url": "https://api.github.com/users/anushs/repos",
      "events_url": "https://api.github.com/users/anushs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anushs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-29T16:41:39Z",
    "updated_at": "2012-08-29T16:44:15Z",
    "author_association": "NONE",
    "body": "Hey,\nI am trying to add the above feature. I am confronted with a problem.\n- The logic conflicts with the tab-completion to populate lists and hence IPython.core.completer recognizes '[' as a delimiter.\n\nExample:\n- Objects in the namespace -> xa, xb, xc, mydict = {'xy':10, 'xz':20}\n  \n  > > > mydict[x   <Press Tab>\n  > > >       ---> xa xb xc\n\nAny help/pointers to overcome this?\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10011127",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-10011127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 10011127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDExMTI3",
    "user": {
      "login": "thisch",
      "id": 206581,
      "node_id": "MDQ6VXNlcjIwNjU4MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thisch",
      "html_url": "https://github.com/thisch",
      "followers_url": "https://api.github.com/users/thisch/followers",
      "following_url": "https://api.github.com/users/thisch/following{/other_user}",
      "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thisch/subscriptions",
      "organizations_url": "https://api.github.com/users/thisch/orgs",
      "repos_url": "https://api.github.com/users/thisch/repos",
      "events_url": "https://api.github.com/users/thisch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thisch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T11:10:42Z",
    "updated_at": "2012-11-02T11:10:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why don't you just look for the opening bracket followed by either ' or \" in your completion logic. Thus, if you want to complete keys which are strings then you have to type mydict[\"TAB. This simplifies your completion logic because you don't have to ignore objects in your namespace.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17057676",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-17057676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 17057676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU3Njc2",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T06:35:36Z",
    "updated_at": "2013-04-26T06:35:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this may only apply to literal string keys, in which case @thisch is right it should apply after [\" or [' (assuming there's no intention to support `.get('`, etc.). It would be nice if this also supported the keys of numpy records!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19080416",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-19080416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 19080416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDgwNDE2",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-06T23:18:04Z",
    "updated_at": "2013-06-06T23:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I hacked up a solution to this (https://gist.github.com/jnothman/5725776), which given a dict `d = {'abcde': 1}` would make suggestions like:\n\n```\nd[ -> 'abcde']\nd[' -> abcde']\nd[\"a -> abcde\"]\n```\n\nIt seems to work (add `dict_key_completer` to `IPCompleter.matchers`), but when completing a line with an odd number of quotes in it, `readline` adds a closing quote after tab completion, ignoring the fact that my completion already closes the quote (and the bracket). (`rl.readline` has an option called `completion_suppress_quote`, but `readline` doesn't, and I don't even know if `pyreadline` would add it.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21520166",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-21520166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 21520166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTIwMTY2",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-24T22:08:49Z",
    "updated_at": "2013-07-24T22:09:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is a nice solution that already exists which avoids the problem: use attribute access instead of key access.\n\n```\nfrom IPython.config import Config\n\nd = {\"H\": 1, \"He\": 2}\nd2 = Config(d)\n```\n\n`Config` takes the dictionary `d` and makes a new one `d2` which has access via attributes: we can now do\n\n```\nprint d.H\nd.He = 3\n```\n\nAnd, magically, completion works!:\n\n`d.H<TAB>`\n\nThe only problem occurs when the keys themselves contain `.`.\nThis is the case, for example, in `matplotlib.rcParams`; see https://github.com/matplotlib/matplotlib/issues/2249\n\nAttribute access is (apart from this `.` problem) nicer, in my opinion, since it requires 5 fewer key strokes (counting `Shift`), and has less visual noise.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37113589",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-37113589",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 37113589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTEzNTg5",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-08T23:40:47Z",
    "updated_at": "2014-03-08T23:44:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dpsanders, apart from its inconvenience, your solution works only for keys that are valid identifiers. It also assumes that a copy of the dict is cheap, while for some `Mapping` objects, values may not be stored in memory.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42618615",
    "html_url": "https://github.com/ipython/ipython/issues/1533#issuecomment-42618615",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1533",
    "id": 42618615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjE4NjE1",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-08T23:27:19Z",
    "updated_at": "2014-05-08T23:27:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I assume this can be closed.\n"
  }
]
