[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50217206",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50217206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50217206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE3MjA2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T00:16:02Z",
    "updated_at": "2014-07-26T00:16:02Z",
    "author_association": "MEMBER",
    "body": "Thanks, this looks sensible. For the TODO parts, I think you can just leave those methods out.\n\nI'm a bit concerned about whether we should encourage embedding video data in notebooks - that seems like it would make the notebook inconveniently big for any non-trivial case. Maybe it should be limited to including videos by URL?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50235056",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50235056",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50235056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjM1MDU2",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T14:09:37Z",
    "updated_at": "2014-07-26T14:09:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Being able to embed external materials would be a step toward allowing notebooks to remain \"complete\" over time even if the external video is deleted, and would allow the notebook to work off-line. This could be quite useful in many settings. Of course, the notebook size will become huge, and notebook copies will replicate this data. But the option of embedding or not should be left to the notebook author.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50244248",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50244248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50244248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ0MjQ4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T18:12:43Z",
    "updated_at": "2014-07-26T18:12:43Z",
    "author_association": "MEMBER",
    "body": "I get the 'it's up to the author' argument, but putting that option into core IPython is implicitly saying that using it will work smoothly, and I don't know that that's the case. And if we don't offer that option, it's still perfectly possible to achieve the same thing manually or using a third party module - I think that might better convey the potential problems with embedding that much data.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50244589",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50244589",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50244589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ0NTg5",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T18:27:58Z",
    "updated_at": "2014-07-26T18:27:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking at the Jupyter Notebook project in the big picture, the goal should be to create and share replicable notebooks. I agree that having large amounts of data embedded in the notebook might not be the best, or even only, solution for stand-alone notebooks. \n\nWould nbviewer be able to display a 3rd-party embedded video? What would be the best practices advice for such embeddings?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50244715",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50244715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50244715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ0NzE1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T18:32:27Z",
    "updated_at": "2014-07-26T18:32:27Z",
    "author_association": "MEMBER",
    "body": "Yes, if you embed it manually or using a third party module, nbviewer would display it. It should also be able to display it if it's referenced with a relative URL rather than embedded. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50244932",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50244932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50244932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ0OTMy",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T18:42:22Z",
    "updated_at": "2014-07-26T18:42:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I see, and that is a compelling and principled argument against this feature.\n\nIt might also suggest a version of a \"notebook\" that is a zipped file containing the notebook, and associated contents (like media and data). It would be nice to have a viewer that could take such a zipped notebook and be able to view it, and also allow users to download the whole zip. Then, notebooks could remain small files, and the images, movies, data, and sounds could be loaded as needed from the .zip.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50245238",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50245238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50245238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ1MjM4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T18:53:40Z",
    "updated_at": "2014-07-26T18:53:40Z",
    "author_association": "MEMBER",
    "body": "> It might also suggest a version of a \"notebook\" that is a zipped file containing the notebook, and associated contents (like media and data). It would be nice to have a viewer that could take such a zipped notebook and be able to view it, and also allow users to download the whole zip. Then, notebooks could remain small files, and the images, movies, data, and sounds could be loaded as needed from the .zip.\n\nThat's basically what Konrad Hinsen active paper does. We do offer pluggable backend, so it is potentially doable to have custom files format for notebook. And while we try to provide a nice fileformat for reproductible research, we agreed that the \"all in one\" thing is out of scope for Jupyter/IPython, at least with current bandwidth and funding.\n\nThe \"zip\" format has also a lot of things that are against ipynb nature of beeing human-fixable and as version control friendly as possible (yes, it will get better).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50246105",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50246105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50246105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ2MTA1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T19:29:51Z",
    "updated_at": "2014-07-26T19:29:51Z",
    "author_association": "MEMBER",
    "body": "Question: I thought that browser support for embedding video like this was spotty. IIRC, @fperez did some tests with Chris Kees on this a while back.\n\nA separate issue is that I probably lean towards not adding this capability to the notebook. I would prefer to encourage people to bundle their notebooks into repos that have the videos next to them and distribute those repos. That approach should also work on nbviewer. There is a fine line to walk in embedding commonly used things in the notebook and trying to effectively embed an entire repo in a notebook (along with all data, etc.). I want to resist turning the notebook into a repo for all things.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50246732",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-50246732",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 50246732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ2NzMy",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T19:55:57Z",
    "updated_at": "2014-07-26T19:55:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Yes, I have been following Konrad's active paper ideas. But I was just suggesting the simplest idea to support a notebook + materials. Anything Jupyter can do to promote best practices and standards towards reproducibility would be good. For example, maybe a notebook metadata field whose value is a URL to a complete zip file would make it easy for nbviewer to provide an option for download, when available (rather than just a link to downloading the notebook).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52259512",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-52259512",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 52259512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjU5NTEy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T23:46:23Z",
    "updated_at": "2014-08-14T23:46:23Z",
    "author_association": "MEMBER",
    "body": "We discussed this in the dev meeting today. The result was that the option to embed video data can stay in, but it should be non-default: you should have to pass `embed=True` to get a video embedded. Without that parameter, it should either use a regular URL for src, or throw an informative error if there isn't a practical way to calculate a URL. We're considering whether Audio should behave like that too, but we're not quite sure about that yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59397915",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-59397915",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 59397915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mzk3OTE1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T17:23:31Z",
    "updated_at": "2014-10-16T17:23:31Z",
    "author_association": "MEMBER",
    "body": "Merging now, and we can make the explicit embedding a separate PR. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/366540873",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-366540873",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 366540873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU0MDg3Mw==",
    "user": {
      "login": "JhonnyBillM",
      "id": 18747072,
      "node_id": "MDQ6VXNlcjE4NzQ3MDcy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18747072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JhonnyBillM",
      "html_url": "https://github.com/JhonnyBillM",
      "followers_url": "https://api.github.com/users/JhonnyBillM/followers",
      "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}",
      "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions",
      "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs",
      "repos_url": "https://api.github.com/users/JhonnyBillM/repos",
      "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-18T19:31:45Z",
    "updated_at": "2018-02-18T19:31:45Z",
    "author_association": "NONE",
    "body": "Hi, since this is kind of old, I would to know what can I do to help here?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368562370",
    "html_url": "https://github.com/ipython/ipython/pull/5992#issuecomment-368562370",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5992",
    "id": 368562370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODU2MjM3MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-26T16:32:53Z",
    "updated_at": "2018-02-26T16:32:53Z",
    "author_association": "MEMBER",
    "body": "I think this is all done. Try `from IPython.display import Video`."
  }
]
