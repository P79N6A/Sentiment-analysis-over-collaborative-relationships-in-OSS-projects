[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35536095",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-35536095",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 35536095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM2MDk1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-19T19:13:21Z",
    "updated_at": "2014-02-19T19:13:21Z",
    "author_association": "MEMBER",
    "body": "Looks good to me :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36410043",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36410043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36410043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDEwMDQz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T00:51:09Z",
    "updated_at": "2014-03-01T00:51:09Z",
    "author_association": "MEMBER",
    "body": "Can you add a test for the None behavior?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36410440",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36410440",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36410440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDEwNDQw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T00:59:51Z",
    "updated_at": "2014-03-01T00:59:51Z",
    "author_association": "MEMBER",
    "body": "We have been talking more about this (with @jdfreder). The meaning of passing `None` in Python as a keyword arg, is not standardized. The pattern you mention is common, but not universal. More importantly, traitlets is most definitely diverges from regular Python in that it always validates. Before this PR, `None` is accepted as a valid value by some traits, some of the time (`allow_none`), and rejected in other cases. Why is this not sufficient? Why doesn't it work to not pass `None` to traits that don't accept it. Overall, I think we are -1 on this change unless there is a good usage case we are missing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36410588",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36410588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36410588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDEwNTg4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T01:03:42Z",
    "updated_at": "2014-03-01T01:03:42Z",
    "author_association": "MEMBER",
    "body": "Also the baseline for traitlet behavior is to match traits, if traits has this behavior you are proposing here, then we should change it.  If not, I think @ellisonbg is right, we will need a good example of why this is needed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36422286",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36422286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36422286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDIyMjg2",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T11:19:49Z",
    "updated_at": "2014-03-01T11:19:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "My use case was something like this:\n\n```\nw = widgets.TextWidget(description = inp.name, value = inp.value,\n                                   default = inp.default)\n```\n\nWhere the parameters come from an ORM (mongoengine) which follows the convention None <-> Not set (as the parameters do not need to even be present in the db). But the traitlets want to validate the None values and complain. The workaround is explicitly filtering the dictionary of parameters (as in general I wouldn't want the unset values to override the traitlets' defaults).\n\nOn the other hand, I realize this change could lead to inconsistencies elsewhere. \nIf the traitlets where to be implemented from scratch (ie, not this case) I feel it would be more consistent to use None instead of things like NotDefaultSpecified and Undefined, and handle the corner cases where you actually want to set something to None explicitly. In mongoengine for example setting a value to None actually sets it to the default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36536934",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36536934",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36536934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM2OTM0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T17:49:36Z",
    "updated_at": "2014-03-03T17:49:36Z",
    "author_association": "MEMBER",
    "body": "I have just tested the real traits package and it behaves the same as traitlets does now. The is because the main idea of traits is to always validate. Silently swallowing None as you are proposing would lead to difficult to diagnose bugs (they are silent). I also don't think it is worth diverging from the traits API.\n\nIt should be trivial for you to write a function that builds a traited class, filtering the arguments for None: `build_trait(IntSliderWidget, min=0, max=10, value=None)`.\n\nI would like to close this PR. Is everyone OK with this outcome?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36537569",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36537569",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36537569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM3NTY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T17:55:33Z",
    "updated_at": "2014-03-03T17:55:33Z",
    "author_association": "MEMBER",
    "body": "> I would like to close this PR. Is everyone OK with this outcome?\n\nI'm okay with this\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36541431",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36541431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36541431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQxNDMx",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T18:29:51Z",
    "updated_at": "2014-03-03T18:29:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I understand your point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36544706",
    "html_url": "https://github.com/ipython/ipython/pull/5144#issuecomment-36544706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5144",
    "id": 36544706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQ0NzA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T18:51:52Z",
    "updated_at": "2014-03-03T18:51:52Z",
    "author_association": "MEMBER",
    "body": "Closing.\n"
  }
]
