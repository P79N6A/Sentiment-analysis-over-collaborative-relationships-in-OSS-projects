[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133708302",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133708302",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133708302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcwODMwMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T14:19:17Z",
    "updated_at": "2015-08-22T14:19:17Z",
    "author_association": "MEMBER",
    "body": "I believe that might be the same bug as  https://github.com/jupyter/jupyter_client/pull/61.\nYou might need to modify your kernelspec to launch the kernel with the `--profile=foo` flag.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133715343",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133715343",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133715343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcxNTM0Mw==",
    "user": {
      "login": "Evfro",
      "id": 5283394,
      "node_id": "MDQ6VXNlcjUyODMzOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5283394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evfro",
      "html_url": "https://github.com/Evfro",
      "followers_url": "https://api.github.com/users/Evfro/followers",
      "following_url": "https://api.github.com/users/Evfro/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evfro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evfro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evfro/subscriptions",
      "organizations_url": "https://api.github.com/users/Evfro/orgs",
      "repos_url": "https://api.github.com/users/Evfro/repos",
      "events_url": "https://api.github.com/users/Evfro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evfro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T15:26:35Z",
    "updated_at": "2015-08-22T15:26:35Z",
    "author_association": "NONE",
    "body": "Thanks for the great idea!\nI tried to add `--profile=foo` to the end of argv:\n\n```\n\"argv\": [\n  \"python.exe\", \n  \"-m\", \n  \"IPython.kernel\", \n  \"-f\", \n  \"{connection_file}\",\n  \"--profile=foo\"\n ]\n```\n\nand it looks like it did the trick. However, in that case `ip.config.ProfileDir` is still empty. I'm not sure whether it affects anything. \nThat lead me to the idea of directly adding `--ProfileDir.location=<path_to_the_foo_profile>` instead of `--profile=foo` and it looks like it works as well. So I wonder what is the most appropriate way?\n\nAnd this way kernelspec becomes dependent on at least the profile name which is not really convenient and is hard to automate. Would be really great to have independent kernelspecs and specify profile only once as a flag to ipython notebook launch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133727684",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133727684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133727684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcyNzY4NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T17:09:44Z",
    "updated_at": "2015-08-22T17:09:44Z",
    "author_association": "MEMBER",
    "body": "Why are you looking in `ip.config.ProfileDir`? If you want to know the profile directory, it's `ip.profile_dir.location`.\n\nThe `config` object is used to set up real objects, but it's not where anything is actually stored at runtime. It's not the place to lookup the current state.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133727796",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133727796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133727796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcyNzc5Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T17:12:11Z",
    "updated_at": "2015-08-22T17:12:11Z",
    "author_association": "MEMBER",
    "body": "> Would be really great to have independent kernelspecs and specify profile only once as a flag to ipython notebook launch.\n\nThis wouldn't make sense for the dozens of kernels that are not IPython. That's why we no longer relay notebook arguments to kernels. But we could add a mechanism for specifying extra args for the kernel. It may be tricky to do in a way that is safe, but should be doable and would be useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133739929",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133739929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133739929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzczOTkyOQ==",
    "user": {
      "login": "Evfro",
      "id": 5283394,
      "node_id": "MDQ6VXNlcjUyODMzOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5283394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evfro",
      "html_url": "https://github.com/Evfro",
      "followers_url": "https://api.github.com/users/Evfro/followers",
      "following_url": "https://api.github.com/users/Evfro/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evfro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evfro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evfro/subscriptions",
      "organizations_url": "https://api.github.com/users/Evfro/orgs",
      "repos_url": "https://api.github.com/users/Evfro/repos",
      "events_url": "https://api.github.com/users/Evfro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evfro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T18:54:10Z",
    "updated_at": "2015-08-22T18:54:10Z",
    "author_association": "NONE",
    "body": "@minrk, thanks for the info!\n\n> Why are you looking in  ip.config.ProfileDir ?\n\nIt was not clear where to look in considering my specific problem. In order to understand why specifying the profile doesn't make any effect on where logs are stored I started to compare config parameters of 2 sessions: one within default profile and one within custom profile, both with same the custom kernelspec. And the first difference I could find was exactly the value of `ip.config.ProfileDir` as I described in the initial post.\n\n> If you want to know the profile directory  it's  ip.profile_dir.location\n\nMy actual goal is to have ipython storing the history in the right place. If I put either  _--ProfileDir.location=<path_to_the_foo_profile>_ or _--profile=foo_ into the kernelspec it solves the problem, although I'm not a fan of such a hardcoding.\nI'm not sure if I understand correctly, are you saying that's it's better/more safe to specify `ip.profile_dir.location` in the kernelspec rather than `ProfileDir.location` or `profile` until there's a better solution?\n\n> we could add a mechanism for specifying extra args for the kernel\n\nThat's probably really what I wanted to say. I surely don't need to pass all flags from notebook to kernel. For my particular case I just need both ipython kernel and ipython notebook working in the same profile. I know the Big Split concept, but still it's a bit unintuitive for me why launching notebook like this:\n`\nipython notebook --profile=foo\n`\nleads to notebook working in the foo profile and ipython kernel (with custom kernelspec) working in the default profile. It's important to emphasize that the problem happens only with custom kernel (which is identical to default kernel, except the display name). When I use default Python 2 kernel logs are stored in the `foo` profile as expected. So there's definitely a working mechanism, but it doesn't work with custom kernel for some reason.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133740508",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133740508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133740508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzc0MDUwOA==",
    "user": {
      "login": "Evfro",
      "id": 5283394,
      "node_id": "MDQ6VXNlcjUyODMzOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5283394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evfro",
      "html_url": "https://github.com/Evfro",
      "followers_url": "https://api.github.com/users/Evfro/followers",
      "following_url": "https://api.github.com/users/Evfro/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evfro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evfro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evfro/subscriptions",
      "organizations_url": "https://api.github.com/users/Evfro/orgs",
      "repos_url": "https://api.github.com/users/Evfro/repos",
      "events_url": "https://api.github.com/users/Evfro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evfro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T19:05:55Z",
    "updated_at": "2015-08-22T19:05:55Z",
    "author_association": "NONE",
    "body": "I also wonder whether the **env** argument can be used somehow for solving the problem without hardcoding profile name or profile path?\n\n> env (optional): A dictionary of environment variables to set for the kernel. These will be added to the current environment variables before the kernel is started.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133799052",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133799052",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133799052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzc5OTA1Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T08:18:41Z",
    "updated_at": "2015-08-23T08:18:41Z",
    "author_association": "MEMBER",
    "body": "With 4.0 the notebook does not have a notion of profile, you already have to set up env variable. And kernel should already be able to get extra env variable, so it should be possible to do something with that.\n\nip.config.ProfileDir vs ip.profile_dir.location the first is a class default, the second is the value of an instance. \n\n`--profile-dir` and `--ProfileDir.location` are aliases. `--profile` is like `--profile-dir` but you don't have to specify the full dir path. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133877833",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-133877833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 133877833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg3NzgzMw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T16:45:31Z",
    "updated_at": "2015-08-23T16:45:31Z",
    "author_association": "MEMBER",
    "body": "Sorry, missed the actual goal. Specifying the kernel profile at the notebook command-line has actually stopped working with the current version of IPython/Jupyter (4.0), so the two kernels python2 and my-python2 will both use the default profile. The concept of profiles is not inherited by the Jupyter projects, so there is no `jupyter notebook --profile anything`.\n\nI have been working on [a tool](https://github.com/minrk/a2km) to make it easier to manipulate kernelspecs, which would make things like adding and removing the profile arg to a kernel relatively easy:\n\n```\na2km add-argv mykernel -- --profile foo\na2km rm-argv mykernel -- --profile foo\n```\n\n> I also wonder whether the env argument can be used somehow for solving the problem without hardcoding profile name or profile path?\n\nThe env will not have an effect on which profile is used, but even if it did, it would be the same as specifying the profile in argv, just a different field.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/138190043",
    "html_url": "https://github.com/ipython/ipython/issues/8759#issuecomment-138190043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8759",
    "id": 138190043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODE5MDA0Mw==",
    "user": {
      "login": "Evfro",
      "id": 5283394,
      "node_id": "MDQ6VXNlcjUyODMzOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5283394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Evfro",
      "html_url": "https://github.com/Evfro",
      "followers_url": "https://api.github.com/users/Evfro/followers",
      "following_url": "https://api.github.com/users/Evfro/following{/other_user}",
      "gists_url": "https://api.github.com/users/Evfro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Evfro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Evfro/subscriptions",
      "organizations_url": "https://api.github.com/users/Evfro/orgs",
      "repos_url": "https://api.github.com/users/Evfro/repos",
      "events_url": "https://api.github.com/users/Evfro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Evfro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T05:24:06Z",
    "updated_at": "2015-09-07T05:24:06Z",
    "author_association": "NONE",
    "body": "Thanks for explanations to both of you! Sorry, I've been out for a while. I'll try to setup environmental variables and in case it's not very convenient to work with them I'll play with @minrk a2km tool, which looks like a very handy utility.\n"
  }
]
