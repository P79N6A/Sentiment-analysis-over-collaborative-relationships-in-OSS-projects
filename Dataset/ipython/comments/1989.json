[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6434399",
    "html_url": "https://github.com/ipython/ipython/issues/1989#issuecomment-6434399",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1989",
    "id": 6434399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzQzOTk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-19T19:01:46Z",
    "updated_at": "2012-06-19T19:01:46Z",
    "author_association": "MEMBER",
    "body": "Yes, this is expected.  The initial view created for magics has the non-default initial state `block=True`.  If you set `dvtmp.block = dvroot.block = True`, then they will be blocking as well, or do `%pxconfig --no-block`, then they will match in the other direction.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6436971",
    "html_url": "https://github.com/ipython/ipython/issues/1989#issuecomment-6436971",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1989",
    "id": 6436971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzY5NzE=",
    "user": {
      "login": "thisch",
      "id": 206581,
      "node_id": "MDQ6VXNlcjIwNjU4MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thisch",
      "html_url": "https://github.com/thisch",
      "followers_url": "https://api.github.com/users/thisch/followers",
      "following_url": "https://api.github.com/users/thisch/following{/other_user}",
      "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thisch/subscriptions",
      "organizations_url": "https://api.github.com/users/thisch/orgs",
      "repos_url": "https://api.github.com/users/thisch/repos",
      "events_url": "https://api.github.com/users/thisch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thisch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-19T20:48:13Z",
    "updated_at": "2012-06-19T20:48:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do you mean by initial view? The one associated with the return value of the first invocation of Client() ? \n\nIs it possible to block the Client() function s.t. it blocks until the cluster is available? Until now I have observed 3 different return types/values of the Client function: one where `len(c)` has the desired length, one where the length is 0 and one where an exception is thrown due to a missing json file.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6438039",
    "html_url": "https://github.com/ipython/ipython/issues/1989#issuecomment-6438039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1989",
    "id": 6438039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzgwMzk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-19T21:26:41Z",
    "updated_at": "2012-06-19T21:26:41Z",
    "author_association": "MEMBER",
    "body": "> What do you mean by initial view? The one associated with the return value of the first invocation of Client() ?\n\nWhen you create a client for the first time, it does this:\n\n``` python\nview = rc.direct_view(targets='all')\nview.block = True\nview.activate()\n```\n\nThe result is a blocking view always mapping to all engines, which can be a function of time.\n\n> Is it possible to block the Client() function s.t. it blocks until the cluster is available?\n\nSure.  To wait for the connection file:\n\n``` python\nfrom IPython.utils.path import get_security_file\n# 100 * 0.1 = 10s timeout\nfor i in range(100):\n    try:\n        cf = get_security_file('ipcontroller-client.json')\n    except IOError:\n        time.sleep(0.1)\n    else:\n        break\n```\n\nTo wait for a specific number of engines:\n\n``` python\nwhile len(rc) < expected_engines:\n    time.sleep(0.1)\n    rc.spin()\n```\n\nIt makes sense for the first case to be builtin to the Client itself (engines already do this).  It _does not_ make sense for the second, because a cluster with zero engines is perfectly valid, and there is no mechanism for the client to know how many engines to expect beyond you just telling it, and it is trivial for you to do this waiting yourself.  I could add a `wait_for_engines(n=1)` method, with the two-line loop above.  But this certainly would not be called from the Client constructor.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6438912",
    "html_url": "https://github.com/ipython/ipython/issues/1989#issuecomment-6438912",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1989",
    "id": 6438912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzg5MTI=",
    "user": {
      "login": "thisch",
      "id": 206581,
      "node_id": "MDQ6VXNlcjIwNjU4MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thisch",
      "html_url": "https://github.com/thisch",
      "followers_url": "https://api.github.com/users/thisch/followers",
      "following_url": "https://api.github.com/users/thisch/following{/other_user}",
      "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thisch/subscriptions",
      "organizations_url": "https://api.github.com/users/thisch/orgs",
      "repos_url": "https://api.github.com/users/thisch/repos",
      "events_url": "https://api.github.com/users/thisch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thisch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-19T22:00:36Z",
    "updated_at": "2012-06-19T22:01:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thx, your get_security_file() code does the trick! I would be +1 for a builtin version.\n"
  }
]
