[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48521704",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48521704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48521704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTIxNzA0",
    "user": {
      "login": "pwuertz",
      "id": 1819283,
      "node_id": "MDQ6VXNlcjE4MTkyODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1819283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwuertz",
      "html_url": "https://github.com/pwuertz",
      "followers_url": "https://api.github.com/users/pwuertz/followers",
      "following_url": "https://api.github.com/users/pwuertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwuertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwuertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwuertz/subscriptions",
      "organizations_url": "https://api.github.com/users/pwuertz/orgs",
      "repos_url": "https://api.github.com/users/pwuertz/repos",
      "events_url": "https://api.github.com/users/pwuertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwuertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T19:21:10Z",
    "updated_at": "2014-07-09T19:21:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I wrote in #5458, PyQt5 now automatically calls the default init() methods (with no arguments) of all Mixin classes. Some classes are currently not default constructable. I added default inits for the classes required to launch the embedded console, but apparently there are others that need to be adapted for running qtconsole.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48522394",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48522394",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48522394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTIyMzk0",
    "user": {
      "login": "pwuertz",
      "id": 1819283,
      "node_id": "MDQ6VXNlcjE4MTkyODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1819283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwuertz",
      "html_url": "https://github.com/pwuertz",
      "followers_url": "https://api.github.com/users/pwuertz/followers",
      "following_url": "https://api.github.com/users/pwuertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwuertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwuertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwuertz/subscriptions",
      "organizations_url": "https://api.github.com/users/pwuertz/orgs",
      "repos_url": "https://api.github.com/users/pwuertz/repos",
      "events_url": "https://api.github.com/users/pwuertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwuertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T19:26:28Z",
    "updated_at": "2014-07-09T19:26:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "So at the moment, the PyQt5.QtCore.QObject constructor first calls **init** of Mixin classes with no arguments (which fails if there are additional arguments without default values). Then the SuperQObject continues by calling the **init** methods again and provides the required arguments for proper initialization.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48526265",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48526265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48526265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTI2MjY1",
    "user": {
      "login": "mfitzp",
      "id": 126239,
      "node_id": "MDQ6VXNlcjEyNjIzOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/126239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfitzp",
      "html_url": "https://github.com/mfitzp",
      "followers_url": "https://api.github.com/users/mfitzp/followers",
      "following_url": "https://api.github.com/users/mfitzp/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfitzp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfitzp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfitzp/subscriptions",
      "organizations_url": "https://api.github.com/users/mfitzp/orgs",
      "repos_url": "https://api.github.com/users/mfitzp/repos",
      "events_url": "https://api.github.com/users/mfitzp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfitzp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T19:58:40Z",
    "updated_at": "2014-07-09T19:58:40Z",
    "author_association": "NONE",
    "body": "Thanks for the clarification @pwuertz I hadn't understood what you meant the first time. I've added default values to the channel **init** e.g. in IPython/kernel/channels.py\n\n```\nclass HBChannel(ZMQSocketChannel):\n    def __init__(self, context=None, session=None, address=None):\n```\n\n...(repeated for each channel constructor) and this resolves the bug. Is this what you had in mind? I'm happy to do the pull-request if so. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48527405",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48527405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48527405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTI3NDA1",
    "user": {
      "login": "pwuertz",
      "id": 1819283,
      "node_id": "MDQ6VXNlcjE4MTkyODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1819283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwuertz",
      "html_url": "https://github.com/pwuertz",
      "followers_url": "https://api.github.com/users/pwuertz/followers",
      "following_url": "https://api.github.com/users/pwuertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwuertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwuertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwuertz/subscriptions",
      "organizations_url": "https://api.github.com/users/pwuertz/orgs",
      "repos_url": "https://api.github.com/users/pwuertz/repos",
      "events_url": "https://api.github.com/users/pwuertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwuertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T20:08:21Z",
    "updated_at": "2014-07-09T20:08:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes exactly. We (or the IPython core developers) have to keep in mind though that for PyQt5 the init methods are called two times. This isn't a problem if init just initializes object members.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48531538",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48531538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48531538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTMxNTM4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T20:44:53Z",
    "updated_at": "2014-07-09T20:44:53Z",
    "author_association": "MEMBER",
    "body": "Wait, `__init__` is called twice? I'd rather avoid that if it's practical - even if it works now, it could cause very hard to understand bugs later if someone adds code that doesn't allow that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48542495",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48542495",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48542495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTQyNDk1",
    "user": {
      "login": "pwuertz",
      "id": 1819283,
      "node_id": "MDQ6VXNlcjE4MTkyODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1819283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwuertz",
      "html_url": "https://github.com/pwuertz",
      "followers_url": "https://api.github.com/users/pwuertz/followers",
      "following_url": "https://api.github.com/users/pwuertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwuertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwuertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwuertz/subscriptions",
      "organizations_url": "https://api.github.com/users/pwuertz/orgs",
      "repos_url": "https://api.github.com/users/pwuertz/repos",
      "events_url": "https://api.github.com/users/pwuertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwuertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T22:18:04Z",
    "updated_at": "2014-07-09T22:18:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, because QObject in PyQt5 basically includes the functionality of SuperQObject from IPython. At the time it wasn't clear to me how SuperQObject worked, neither the implicit init calls that originated from PyQt5-QObject. I guess in order to avoid double inits one would have to exclude the init calls within SuperQObject based on the loaded QtApi, and if so, provide **kwargs to QObject.**init** directly since it now handles additional args..\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48552713",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-48552713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 48552713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTUyNzEz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-10T00:33:54Z",
    "updated_at": "2014-07-10T00:33:54Z",
    "author_association": "MEMBER",
    "body": "OK, I'm inclined to say that we should actually do that - have a different code path for PyQt5 from the other PyQt APIs. It might be a bit ugly, but I think it's better to record that difference in the code now than try to rediscover it when something breaks further down the line. Do you have time to make a PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50317347",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-50317347",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 50317347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzE3MzQ3",
    "user": {
      "login": "pwuertz",
      "id": 1819283,
      "node_id": "MDQ6VXNlcjE4MTkyODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1819283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwuertz",
      "html_url": "https://github.com/pwuertz",
      "followers_url": "https://api.github.com/users/pwuertz/followers",
      "following_url": "https://api.github.com/users/pwuertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwuertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwuertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwuertz/subscriptions",
      "organizations_url": "https://api.github.com/users/pwuertz/orgs",
      "repos_url": "https://api.github.com/users/pwuertz/repos",
      "events_url": "https://api.github.com/users/pwuertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwuertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T09:35:50Z",
    "updated_at": "2014-07-28T09:35:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I gave that idea a try but I'm getting really confusing errors. Since I never worked with Python Meta-Classes, the complexity of the Meta-Class, Mixin, Multi-Inheritance structure puzzles me. In order to get to the bottom of this I'm letting SuperQObject print any `__new__` and `__init__` calls. This is what happens:\n\n```\nNew <class 'IPython.qt.manager.QtKernelManager'>\nNew <class 'IPython.qt.manager.QtKernelRestarter'>\nNew <class 'IPython.qt.client.QtKernelClient'>\nNew <class 'IPython.qt.client.QtShellChannel'>\nInit <class 'IPython.qt.client.QtShellChannel'>\nNew <class 'IPython.qt.client.QtIOPubChannel'>\nInit <class 'IPython.qt.client.QtIOPubChannel'>\nNew <class 'IPython.qt.client.QtStdInChannel'>\nInit <class 'IPython.qt.client.QtStdInChannel'>\nNew <class 'IPython.qt.client.QtHBChannel'>\nInit <class 'IPython.qt.client.QtHBChannel'>\n```\n\nThen the application crashes because the QtKernelClient object is used before calling its `__init__` method. As far as I can see the objects that didn't initialize properly are based on the MetaQObjectHasTraits structure.\nSwitching the order of SuperQObject and HasTraits in MetaQObjectHasTraits seems to get me one step further, but then the Trait-framework raises critical errors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65958663",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-65958663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 65958663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTU4NjYz",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-07T22:30:05Z",
    "updated_at": "2014-12-07T23:05:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk Why did you close this issue? Qtconsole still doesn't work with PyQt5. I'm working on it right now :-) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65959195",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-65959195",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 65959195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTU5MTk1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-07T22:42:05Z",
    "updated_at": "2014-12-07T22:42:05Z",
    "author_association": "MEMBER",
    "body": "Not sure, probably auto-closed by something. Reopened.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66120054",
    "html_url": "https://github.com/ipython/ipython/issues/6103#issuecomment-66120054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6103",
    "id": 66120054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTIwMDU0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T14:09:48Z",
    "updated_at": "2014-12-08T14:09:48Z",
    "author_association": "MEMBER",
    "body": "> Not sure, probably auto-closed by something. Reopened.\n\nProbably a service like waffle, the one that make @ivanov tagging all issues immediately and keep assigning me to tasks.\n"
  }
]
