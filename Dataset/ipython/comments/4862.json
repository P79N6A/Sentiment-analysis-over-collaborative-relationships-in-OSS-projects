[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33251159",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-33251159",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 33251159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjUxMTU5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T19:04:17Z",
    "updated_at": "2014-01-24T19:04:17Z",
    "author_association": "MEMBER",
    "body": "That's correct, without a remote signaling mechanism, it is impossible to abort running tasks, only queued tasks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33251187",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-33251187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 33251187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjUxMTg3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T19:04:38Z",
    "updated_at": "2014-01-24T19:04:38Z",
    "author_association": "MEMBER",
    "body": "A remote signaling mechanism is planned, but not yet implemented.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/89716802",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-89716802",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 89716802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5NzE2ODAy",
    "user": {
      "login": "secondwtq",
      "id": 2009799,
      "node_id": "MDQ6VXNlcjIwMDk3OTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2009799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/secondwtq",
      "html_url": "https://github.com/secondwtq",
      "followers_url": "https://api.github.com/users/secondwtq/followers",
      "following_url": "https://api.github.com/users/secondwtq/following{/other_user}",
      "gists_url": "https://api.github.com/users/secondwtq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/secondwtq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/secondwtq/subscriptions",
      "organizations_url": "https://api.github.com/users/secondwtq/orgs",
      "repos_url": "https://api.github.com/users/secondwtq/repos",
      "events_url": "https://api.github.com/users/secondwtq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/secondwtq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-05T05:06:04Z",
    "updated_at": "2015-04-05T05:06:04Z",
    "author_association": "NONE",
    "body": "So it is still not implemented yet?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/102362584",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-102362584",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 102362584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjM2MjU4NA==",
    "user": {
      "login": "sebastien-bratieres",
      "id": 4493404,
      "node_id": "MDQ6VXNlcjQ0OTM0MDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4493404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebastien-bratieres",
      "html_url": "https://github.com/sebastien-bratieres",
      "followers_url": "https://api.github.com/users/sebastien-bratieres/followers",
      "following_url": "https://api.github.com/users/sebastien-bratieres/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebastien-bratieres/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebastien-bratieres/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebastien-bratieres/subscriptions",
      "organizations_url": "https://api.github.com/users/sebastien-bratieres/orgs",
      "repos_url": "https://api.github.com/users/sebastien-bratieres/repos",
      "events_url": "https://api.github.com/users/sebastien-bratieres/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebastien-bratieres/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T10:27:45Z",
    "updated_at": "2015-05-15T10:27:45Z",
    "author_association": "NONE",
    "body": "Hi, is there a workaround for this? \nSimilar to http://mail.scipy.org/pipermail/ipython-dev/2014-March/013426.html, I sometimes launch jobs which don't run as intended etc, and which I'd like to stop after they have started running. Typically, I start my cluster using `ipcluster start`. I start my jobs with eg `LoadBalancedView.apply_async` or `.map_async`. I receive eg an `AsyncMapResult`.\nIf I knew the pid of the client under which the faulty job is running, I could kill the client as MinRK described [here](http://mail.scipy.org/pipermail/ipython-dev/2014-March/013426.html); and then . But `asr.metadata` won't report the `engine_id` until after the job is completed (even if running `client.spin()` beforehand). So how to obtain the faulty job's engine_id/ pid (workaround: have every job report their pid independently) ?\nTo me, this state of affairs is a bummer, I'd appreciate (a pointer to) a workaround recipe.\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/102501587",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-102501587",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 102501587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjUwMTU4Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T19:30:47Z",
    "updated_at": "2015-05-15T19:30:47Z",
    "author_association": "MEMBER",
    "body": "You should be able to ask the Hub what engine a task is running on with:\n\n``` python\ndef locate_task(client, ar):\n    msg_id = ar.msg_ids[0]\n    qs = client.queue_status(verbose=True)\n    qs.pop('unassigned')\n    for eid, einfo in qs.items():\n        if msg_id in einfo['tasks']:\n            return eid\n    raise KeyError(\"msg_id %s not found running on any engine\" % msg_id)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/104183778",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-104183778",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 104183778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE4Mzc3OA==",
    "user": {
      "login": "sebastien-bratieres",
      "id": 4493404,
      "node_id": "MDQ6VXNlcjQ0OTM0MDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4493404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebastien-bratieres",
      "html_url": "https://github.com/sebastien-bratieres",
      "followers_url": "https://api.github.com/users/sebastien-bratieres/followers",
      "following_url": "https://api.github.com/users/sebastien-bratieres/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebastien-bratieres/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebastien-bratieres/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebastien-bratieres/subscriptions",
      "organizations_url": "https://api.github.com/users/sebastien-bratieres/orgs",
      "repos_url": "https://api.github.com/users/sebastien-bratieres/repos",
      "events_url": "https://api.github.com/users/sebastien-bratieres/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebastien-bratieres/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T08:47:00Z",
    "updated_at": "2015-05-21T08:47:00Z",
    "author_association": "NONE",
    "body": "Thanks, that works. \nInterestingly, AsyncResult.msg_ids is populated, while AsyncResult.metadata (which I was relying on) isn't: all fields are empty except for metadata[0][\"submitted\"] timestamps.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/104367495",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-104367495",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 104367495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDM2NzQ5NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T17:38:21Z",
    "updated_at": "2015-05-21T17:38:21Z",
    "author_association": "MEMBER",
    "body": "most metadata is populated when the result arrives, so that makes sense.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/250703659",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-250703659",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 250703659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDcwMzY1OQ==",
    "user": {
      "login": "feilchenfeldt",
      "id": 4295843,
      "node_id": "MDQ6VXNlcjQyOTU4NDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4295843?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feilchenfeldt",
      "html_url": "https://github.com/feilchenfeldt",
      "followers_url": "https://api.github.com/users/feilchenfeldt/followers",
      "following_url": "https://api.github.com/users/feilchenfeldt/following{/other_user}",
      "gists_url": "https://api.github.com/users/feilchenfeldt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feilchenfeldt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feilchenfeldt/subscriptions",
      "organizations_url": "https://api.github.com/users/feilchenfeldt/orgs",
      "repos_url": "https://api.github.com/users/feilchenfeldt/repos",
      "events_url": "https://api.github.com/users/feilchenfeldt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feilchenfeldt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T09:42:12Z",
    "updated_at": "2016-09-30T09:42:12Z",
    "author_association": "NONE",
    "body": "Hello,\n\nI am also concerned by the originals posters problem. I have tasks that have become unresponsive and want to abort/kill them, but without killing the engines.\n\nI can use MinRKs workaround to kill engines, but the problem is that engines were submitted through a scheduler on a compute cluster. Hence, when I manually kill the engines, I do not see a way to restart them. I can only resubmit new ipcluster engines through the scheduler, but the original compute jobs seem to be wasted. (They are basically running as ghosts\n\nIs there a way to either abort running tasks without killing the engines, or to let the engines auto-restart?\n\nMany thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285968451",
    "html_url": "https://github.com/ipython/ipython/issues/4862#issuecomment-285968451",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4862",
    "id": 285968451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2ODQ1MQ==",
    "user": {
      "login": "llvilanova",
      "id": 326386,
      "node_id": "MDQ6VXNlcjMyNjM4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/326386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/llvilanova",
      "html_url": "https://github.com/llvilanova",
      "followers_url": "https://api.github.com/users/llvilanova/followers",
      "following_url": "https://api.github.com/users/llvilanova/following{/other_user}",
      "gists_url": "https://api.github.com/users/llvilanova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/llvilanova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/llvilanova/subscriptions",
      "organizations_url": "https://api.github.com/users/llvilanova/orgs",
      "repos_url": "https://api.github.com/users/llvilanova/repos",
      "events_url": "https://api.github.com/users/llvilanova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/llvilanova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T19:27:12Z",
    "updated_at": "2017-03-12T19:27:12Z",
    "author_association": "NONE",
    "body": "I just tried again with ipykernel and the problem is still present. Is there any planned progress? Should I reopen this bug in ipyparallel?"
  }
]
