[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/237905490",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-237905490",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 237905490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzkwNTQ5MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T17:03:04Z",
    "updated_at": "2016-08-05T17:03:04Z",
    "author_association": "MEMBER",
    "body": "> cc @Carreau, @takluyver for the right thing to do about _eventloop.close(), since I doubt this is the right thing. Maybe register close with atexit.register?\n\nProbably, or should we have an event loop \"reference counting\" and a  `with eventloop` context manager that hold the eventloop ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238271405",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238271405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238271405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODI3MTQwNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T15:21:26Z",
    "updated_at": "2016-08-08T15:21:26Z",
    "author_association": "MEMBER",
    "body": "> should we have an event loop \"reference counting\" and a with eventloop context manager that hold the eventloop ?\n\nI don't think that quite works because it seems like the refcount would never be anything other than one after the class is instantiated, since the loop is setup in `__init__`, and shouldn't be closed until the object is garbage collected (atexit or `__del__`). It's not recursive, so the count doesn't go up, it's starting and stopping the same IPython instance once in a while.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238278603",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238278603",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238278603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODI3ODYwMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T15:44:10Z",
    "updated_at": "2016-08-08T15:44:10Z",
    "author_association": "MEMBER",
    "body": "I've just had a look at the prompt_toolkit code, and it doesn't look like there should be any ill effects of not calling `eventloop.close()`. Some fds will remain open, but you probably only have one InteractiveShell object, so a few fds lingering shouldn't be a problem.\n\nIf we do call it anywhere, I think `__del__` would be the best place. That assumes that no-one is taking a reference to the event loop and using it outside of the shell object, but I think that's probably safe. Or maybe prompt_toolkit should have a `__del__` method on the event loop classes to clear up their fds. (@jonathanslenders)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238567749",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238567749",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238567749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODU2Nzc0OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T14:19:31Z",
    "updated_at": "2016-08-09T14:19:31Z",
    "author_association": "MEMBER",
    "body": "I tried putting it in `__del__`, but it doesn't seem to ever be called, perhaps due to circular references/global links created between pt and/or IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238573916",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238573916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238573916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODU3MzkxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T14:38:38Z",
    "updated_at": "2016-08-09T14:38:38Z",
    "author_association": "MEMBER",
    "body": "There certainly are going to be circular references through `IPythonPTCompleter` and `TerminalInteractiveShell.inputhook`. But recent versions of Python should be able to break the cycle and call `__del__`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238577169",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238577169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238577169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODU3NzE2OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T14:48:13Z",
    "updated_at": "2016-08-09T14:48:13Z",
    "author_association": "MEMBER",
    "body": "Python 3.5 isn't recent enough, at least.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238822375",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238822375",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238822375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODgyMjM3NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T10:04:26Z",
    "updated_at": "2016-08-10T10:04:26Z",
    "author_association": "MEMBER",
    "body": "I've just tested with a `__del__` method on TerminalInteractiveShell, and it does get called when the interpreter (3.5) exits. I was doing this to check that I hadn't misunderstood something. I don't think it's terribly important to do cleanup in `__del__`, and it would be better done in `Eventloop.__del__` anyway. So I'm merging this as is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238882221",
    "html_url": "https://github.com/ipython/ipython/pull/9843#issuecomment-238882221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9843",
    "id": 238882221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODg4MjIyMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T14:22:44Z",
    "updated_at": "2016-08-10T14:22:44Z",
    "author_association": "MEMBER",
    "body": "> 've just tested with a **del** method on TerminalInteractiveShell, and it does get called when the interpreter (3.5) exits\n\nI did the same and it didn't (and again just now, with conda CPython 3.5.1 on OS X), so it's at least not a trustworthy event.\n\nAgreed on the other points, though. Thanks!\n"
  }
]
