[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50604650",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50604650",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50604650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjA0NjUw",
    "user": {
      "login": "pmacaodh",
      "id": 2162045,
      "node_id": "MDQ6VXNlcjIxNjIwNDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2162045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmacaodh",
      "html_url": "https://github.com/pmacaodh",
      "followers_url": "https://api.github.com/users/pmacaodh/followers",
      "following_url": "https://api.github.com/users/pmacaodh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmacaodh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmacaodh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmacaodh/subscriptions",
      "organizations_url": "https://api.github.com/users/pmacaodh/orgs",
      "repos_url": "https://api.github.com/users/pmacaodh/repos",
      "events_url": "https://api.github.com/users/pmacaodh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmacaodh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T11:51:45Z",
    "updated_at": "2014-07-30T11:51:45Z",
    "author_association": "NONE",
    "body": "For my application, an idle timeout feature would be very useful in the context of saving system resources.  Working with large datasets, too many idle notebooks can consume the available system memory.\n\nIs there a way currently to poll for notebook kernel age programmatically and shutdown as desired?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50653996",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50653996",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50653996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUzOTk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T17:54:55Z",
    "updated_at": "2014-07-30T17:54:55Z",
    "author_association": "MEMBER",
    "body": "I don't think the server currently records when the kernel was started, but it would be easy enough to add that. I guess what you really want is 'last interaction with the kernel', which might be a bit more complex\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50657422",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50657422",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50657422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjU3NDIy",
    "user": {
      "login": "jeroen",
      "id": 216319,
      "node_id": "MDQ6VXNlcjIxNjMxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeroen",
      "html_url": "https://github.com/jeroen",
      "followers_url": "https://api.github.com/users/jeroen/followers",
      "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
      "organizations_url": "https://api.github.com/users/jeroen/orgs",
      "repos_url": "https://api.github.com/users/jeroen/repos",
      "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeroen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T18:18:26Z",
    "updated_at": "2014-07-30T18:18:26Z",
    "author_association": "NONE",
    "body": "What about shutting down a kernel when the client disconnects, or `n` seconds after the client has disconnected?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50658190",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50658190",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50658190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjU4MTkw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T18:23:31Z",
    "updated_at": "2014-07-30T18:23:31Z",
    "author_association": "MEMBER",
    "body": "I'll bring that up in the dev meeting tomorrow - it should be possible to enable that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50948898",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50948898",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50948898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTQ4ODk4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-02T00:43:46Z",
    "updated_at": "2014-08-02T00:43:46Z",
    "author_association": "MEMBER",
    "body": "while it would be possible to enable that, I'm not sure it would be desirable to do that... \n\nDisconnecting all clients from a kernel and reconnecting them much later, expecting all of the state to be there is just as valid of a use case as trying to reap zombie kernels in a classroom setting. So I'm :+1: on adding functionality that would make doing something like this possible, but :-1: on enabling it by default or shipping it as a feature, outside of just an example.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50967312",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50967312",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50967312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTY3MzEy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-02T16:27:57Z",
    "updated_at": "2014-08-02T16:27:57Z",
    "author_association": "MEMBER",
    "body": "Agreed with @ivanov not to activate it by default. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50982300",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50982300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50982300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTgyMzAw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T05:08:41Z",
    "updated_at": "2014-08-03T05:08:41Z",
    "author_association": "MEMBER",
    "body": "I don't think anyone's suggesting activating it by default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50985222",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-50985222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 50985222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg1MjIy",
    "user": {
      "login": "pmacaodh",
      "id": 2162045,
      "node_id": "MDQ6VXNlcjIxNjIwNDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2162045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmacaodh",
      "html_url": "https://github.com/pmacaodh",
      "followers_url": "https://api.github.com/users/pmacaodh/followers",
      "following_url": "https://api.github.com/users/pmacaodh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmacaodh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmacaodh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmacaodh/subscriptions",
      "organizations_url": "https://api.github.com/users/pmacaodh/orgs",
      "repos_url": "https://api.github.com/users/pmacaodh/repos",
      "events_url": "https://api.github.com/users/pmacaodh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmacaodh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T08:40:31Z",
    "updated_at": "2014-08-03T08:40:31Z",
    "author_association": "NONE",
    "body": "That's right, not by default, but possible somehow.\n\nOn 3 August 2014 07:08, Thomas Kluyver notifications@github.com wrote:\n\n> I don't think anyone's suggesting activating it by default.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5539#issuecomment-50982300.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51001282",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-51001282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 51001282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAxMjgy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T20:03:30Z",
    "updated_at": "2014-08-03T20:03:30Z",
    "author_association": "MEMBER",
    "body": "I am fine with something like this (not on by default) but it will be very challenging to come up with a robust and reasonable way of implementing it\n\nSent from my iPhone\n\n> On Aug 2, 2014, at 9:27 AM, Matthias Bussonnier notifications@github.com wrote:\n> \n> Agreed with @ivanov not to activate it by default.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51001641",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-51001641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 51001641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAxNjQx",
    "user": {
      "login": "jeroen",
      "id": 216319,
      "node_id": "MDQ6VXNlcjIxNjMxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeroen",
      "html_url": "https://github.com/jeroen",
      "followers_url": "https://api.github.com/users/jeroen/followers",
      "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
      "organizations_url": "https://api.github.com/users/jeroen/orgs",
      "repos_url": "https://api.github.com/users/jeroen/repos",
      "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeroen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T20:15:42Z",
    "updated_at": "2014-08-03T20:15:42Z",
    "author_association": "NONE",
    "body": "Even the simple case of shutdown notebook on disconnect? A disconnected websocket is usually easy to detect?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51005955",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-51005955",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 51005955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDA1OTU1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-03T22:53:54Z",
    "updated_at": "2014-08-03T22:53:54Z",
    "author_association": "MEMBER",
    "body": "The problem is that websockets can be disconnected for a wide range of\nreasons (spotty wifi). Most of those reasons should not kill the kernel as\nthat action destroys user data. Thus the websocket connections can't be\nused as the signal for killing the kernel. Because killing a kernel\ninvolves data loss we have to err on the side of preservation. We need some\nsignal we can watch that won't ever lead to premature kernel killing.\n\nOn Sun, Aug 3, 2014 at 1:15 PM, Jeroen Ooms notifications@github.com\nwrote:\n\n> Even the simple case of shutdown notebook on disconnect? A disconnected\n> websocket is usually easy to detect?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5539#issuecomment-51001641.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51516213",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-51516213",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 51516213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTE2MjEz",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T18:59:07Z",
    "updated_at": "2014-08-07T19:01:19Z",
    "author_association": "MEMBER",
    "body": "We had a long discussion about this [about an hour and a half into this week's dev meeting](https://www.youtube.com/watch?v=4eySTKTwmGc#t=4862)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52102889",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-52102889",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 52102889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTAyODg5",
    "user": {
      "login": "jeroen",
      "id": 216319,
      "node_id": "MDQ6VXNlcjIxNjMxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeroen",
      "html_url": "https://github.com/jeroen",
      "followers_url": "https://api.github.com/users/jeroen/followers",
      "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
      "organizations_url": "https://api.github.com/users/jeroen/orgs",
      "repos_url": "https://api.github.com/users/jeroen/repos",
      "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeroen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T20:04:32Z",
    "updated_at": "2014-08-13T20:04:32Z",
    "author_association": "NONE",
    "body": "Thanks for the elaborate discussion of this request. Not sure what the final conclusion was, but I hope the \"simple\" approach can be further explored. A simple option that sets a timer to kill a kernel `n` seconds after the websocket disconnects (and resets in the event of a reconnect), would be tremendously powerful.\n\nMost websites and web applications use timeouts to prevent sessions from hanging around indefinitely while the user has long forgotten about it. I don't quite understand the argument that timing out sessions is by definition a very complex and application/case specific policy. It seems pretty common sense to me. Sure, the feature can indeed also serve as use case for a potential future generic event-handling policy framework, but that kind of feels like overkill at this point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52126995",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-52126995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 52126995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTI2OTk1",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T23:45:49Z",
    "updated_at": "2014-08-13T23:45:49Z",
    "author_association": "MEMBER",
    "body": "@jeroenooms The point we were trying to make is that \"timeout\" for some may mean \"no client connected\" (a kernel can have a web client connected to it via websockets, but it might also have other clients connected to it over zeromq), while others will want it to be \"no execution happening\" regardless of connections, and to some people sessions hanging around indefinitely is actually a feature. We don't want to put one of these options into IPython, we want to enable others to implement any of them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52157600",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-52157600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 52157600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTU3NjAw",
    "user": {
      "login": "pmacaodh",
      "id": 2162045,
      "node_id": "MDQ6VXNlcjIxNjIwNDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2162045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmacaodh",
      "html_url": "https://github.com/pmacaodh",
      "followers_url": "https://api.github.com/users/pmacaodh/followers",
      "following_url": "https://api.github.com/users/pmacaodh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmacaodh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmacaodh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmacaodh/subscriptions",
      "organizations_url": "https://api.github.com/users/pmacaodh/orgs",
      "repos_url": "https://api.github.com/users/pmacaodh/repos",
      "events_url": "https://api.github.com/users/pmacaodh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmacaodh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T08:42:45Z",
    "updated_at": "2014-08-14T08:43:42Z",
    "author_association": "NONE",
    "body": "Thanks for bringing this up at the latest meeting.\n\nMonitoring kernel events and therefore status through the kernel manager, which can start and stop kernels, would go a long way toward solving the urgent problem in my use case.  This sounds like a quick turnaround, so if my opinion counted for anything, I'd side with Thomas' proposal of adding\nthe relatively small set of additional event info while the optimal complete solution is developed.  While the admin http API  and interfacing with ZeroMQ would be neat, I can't really wait for that.\n\nDoes anyone have an example of where I could implement a policy that checks for kernel activity (by subclassing the kernel manager right? which method gets kernel info?).  It would be really appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52226902",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-52226902",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 52226902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI2OTAy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T18:57:35Z",
    "updated_at": "2014-08-14T18:57:35Z",
    "author_association": "MEMBER",
    "body": "There's no example that I know of at present, but I think that you would need to start at `IPython.html.services.kernels.handlers.ZMQChannelHandler`. The `on_message` method is called on every incoming message, and it knows its `kernel_id`. That could schedule a callback to stop the kernel if there's nothing happening for some period of time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52388620",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-52388620",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 52388620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzg4NjIw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-16T09:32:14Z",
    "updated_at": "2014-08-16T09:32:14Z",
    "author_association": "MEMBER",
    "body": "Why not have another \"process\" that subscribe to pub/sub and if no \"busy\" message have come for x-amount of time, send a `ask_exit` ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/120976210",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-120976210",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 120976210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDk3NjIxMA==",
    "user": {
      "login": "gebetix",
      "id": 4972649,
      "node_id": "MDQ6VXNlcjQ5NzI2NDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4972649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gebetix",
      "html_url": "https://github.com/gebetix",
      "followers_url": "https://api.github.com/users/gebetix/followers",
      "following_url": "https://api.github.com/users/gebetix/following{/other_user}",
      "gists_url": "https://api.github.com/users/gebetix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gebetix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gebetix/subscriptions",
      "organizations_url": "https://api.github.com/users/gebetix/orgs",
      "repos_url": "https://api.github.com/users/gebetix/repos",
      "events_url": "https://api.github.com/users/gebetix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gebetix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T15:53:10Z",
    "updated_at": "2015-07-13T15:53:10Z",
    "author_association": "NONE",
    "body": "Hi, guys! Do you have any progress in this issue? I would like to use ipython for teaching too :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/120998675",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-120998675",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 120998675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDk5ODY3NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T17:24:12Z",
    "updated_at": "2015-07-13T17:24:12Z",
    "author_association": "MEMBER",
    "body": "I think Jupyterhub now has an API that you can talk to to find inactive notebook servers and shut them down. @minrk can tell you more about this. tmpnb also automatically culls inactive notebook servers periodically.\n\nIt's still not easy to shut down an individual kernel based on inactivity, but in the things we're currently doing, shutting down a user's notebook server is more useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/121122707",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-121122707",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 121122707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTEyMjcwNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T03:23:40Z",
    "updated_at": "2015-07-14T03:23:40Z",
    "author_association": "MEMBER",
    "body": "JupyterHub tracks user activity, and this information is made available via a REST API. JupyterHub itself does not cull idle servers or notebooks, but an [adjacent service](https://github.com/jupyter/jupyterhub/blob/0.2.0/examples/cull-idle/cull_idle_servers.py) can use the API to cull with whatever logic you would like.\n\nThe single-user server does not track activity like the JupyterHub does, so we don't have the information to do similar culling on a per-notebook basis, but we could add it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/148118339",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-148118339",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 148118339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODExODMzOQ==",
    "user": {
      "login": "Balajideivam",
      "id": 13024164,
      "node_id": "MDQ6VXNlcjEzMDI0MTY0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13024164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Balajideivam",
      "html_url": "https://github.com/Balajideivam",
      "followers_url": "https://api.github.com/users/Balajideivam/followers",
      "following_url": "https://api.github.com/users/Balajideivam/following{/other_user}",
      "gists_url": "https://api.github.com/users/Balajideivam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Balajideivam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Balajideivam/subscriptions",
      "organizations_url": "https://api.github.com/users/Balajideivam/orgs",
      "repos_url": "https://api.github.com/users/Balajideivam/repos",
      "events_url": "https://api.github.com/users/Balajideivam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Balajideivam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-14T17:02:38Z",
    "updated_at": "2015-10-14T17:02:38Z",
    "author_association": "NONE",
    "body": "Is there any way to implement this? I used the code provided by @minrk but it throws SSL Certificate error. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/148315774",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-148315774",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 148315774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODMxNTc3NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T08:24:20Z",
    "updated_at": "2015-10-15T08:24:20Z",
    "author_association": "MEMBER",
    "body": "@Balajideivam can you provide some more details? Is your server running with a self-signed untrusted certificate?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/148953711",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-148953711",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 148953711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODk1MzcxMQ==",
    "user": {
      "login": "Balajideivam",
      "id": 13024164,
      "node_id": "MDQ6VXNlcjEzMDI0MTY0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13024164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Balajideivam",
      "html_url": "https://github.com/Balajideivam",
      "followers_url": "https://api.github.com/users/Balajideivam/followers",
      "following_url": "https://api.github.com/users/Balajideivam/following{/other_user}",
      "gists_url": "https://api.github.com/users/Balajideivam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Balajideivam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Balajideivam/subscriptions",
      "organizations_url": "https://api.github.com/users/Balajideivam/orgs",
      "repos_url": "https://api.github.com/users/Balajideivam/repos",
      "events_url": "https://api.github.com/users/Balajideivam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Balajideivam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-17T21:36:29Z",
    "updated_at": "2015-10-20T17:05:30Z",
    "author_association": "NONE",
    "body": "@minrk Yes. Correct. If i remove the SSL and tested it out the same, I am getting HTTP error. \n\n[root@okdev1368 bin]# export JPY_API_TOKEN=`jupyterhub token`\n[I 2015-10-20 11:56:49.964 JupyterHub app:619] Not using whitelist. Any authenticated user will be allowed.\n\n```\n[W 151020 11:58:06 iostream:1216] SSL Error on 7 ('10.9.137.168', 8000): [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:600)\nTraceback (most recent call last):\n.........\nssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:600)\n\n\nwithout SSL: I am not passing any parameter to that program. I just updated default values in the .py itself. \n\n[root@oktst1368 ~]# export JPY_API_TOKEN=`jupyterhub token`\n[I 2015-10-20 12:03:18.963 JupyterHub app:654] Not using whitelist. Any authenticated user will be allowed.\n[root@oktst1368 ~]# python34 /seamnt/int001/sea/jupyterhub/oauthenticator/src/jupyterhub/examples/cull-idle/cull_idle_servers.py\nTraceback (most recent call last):\n  File \"/seamnt/int001/sea/jupyterhub/oauthenticator/src/jupyterhub/examples/cull-idle/cull_idle_servers.py\", line 76, in <module>\n    loop.run_sync(cull)\n  File \"/opt/sea/jupyterhub/anaconda3/lib/python3.4/site-packages/tornado/ioloop.py\", line 421, in run_sync\n    return future_cell[0].result()\n  File \"/opt/sea/jupyterhub/anaconda3/lib/python3.4/site-packages/tornado/concurrent.py\", line 209, in result\n    raise_exc_info(self._exc_info)\n  File \"<string>\", line 3, in raise_exc_info\n  File \"/opt/sea/jupyterhub/anaconda3/lib/python3.4/site-packages/tornado/gen.py\", line 810, in run\n    yielded = self.gen.throw(*sys.exc_info())\n  File \"/seamnt/int001/sea/jupyterhub/oauthenticator/src/jupyterhub/examples/cull-idle/cull_idle_servers.py\", line 43, in cull_idle\n    resp = yield client.fetch(req)\n  File \"/opt/sea/jupyterhub/anaconda3/lib/python3.4/site-packages/tornado/gen.py\", line 807, in run\n    value = future.result()\n  File \"/opt/sea/jupyterhub/anaconda3/lib/python3.4/site-packages/tornado/concurrent.py\", line 209, in result\n    raise_exc_info(self._exc_info)\n  File \"<string>\", line 3, in raise_exc_info\ntornado.httpclient.HTTPError: HTTP 403: Forbidden\n[root@oktst1368 ~]#\n\nCould you please help me? \n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/151967054",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-151967054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 151967054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTk2NzA1NA==",
    "user": {
      "login": "SelenaBaset",
      "id": 8004209,
      "node_id": "MDQ6VXNlcjgwMDQyMDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8004209?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SelenaBaset",
      "html_url": "https://github.com/SelenaBaset",
      "followers_url": "https://api.github.com/users/SelenaBaset/followers",
      "following_url": "https://api.github.com/users/SelenaBaset/following{/other_user}",
      "gists_url": "https://api.github.com/users/SelenaBaset/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SelenaBaset/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SelenaBaset/subscriptions",
      "organizations_url": "https://api.github.com/users/SelenaBaset/orgs",
      "repos_url": "https://api.github.com/users/SelenaBaset/repos",
      "events_url": "https://api.github.com/users/SelenaBaset/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SelenaBaset/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-28T19:36:17Z",
    "updated_at": "2015-10-28T19:36:17Z",
    "author_association": "NONE",
    "body": "Following. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172049774",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-172049774",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 172049774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA0OTc3NA==",
    "user": {
      "login": "etejedor",
      "id": 8089558,
      "node_id": "MDQ6VXNlcjgwODk1NTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8089558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etejedor",
      "html_url": "https://github.com/etejedor",
      "followers_url": "https://api.github.com/users/etejedor/followers",
      "following_url": "https://api.github.com/users/etejedor/following{/other_user}",
      "gists_url": "https://api.github.com/users/etejedor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etejedor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etejedor/subscriptions",
      "organizations_url": "https://api.github.com/users/etejedor/orgs",
      "repos_url": "https://api.github.com/users/etejedor/repos",
      "events_url": "https://api.github.com/users/etejedor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etejedor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T18:49:48Z",
    "updated_at": "2016-01-15T18:49:48Z",
    "author_association": "NONE",
    "body": "I had the same issue and I solved it by adding my user to the list of admins, in the JupyterHub configuration file:\n\n```\nc.Authenticator.admin_users = {'youruser'}\n```\n\nAnd then you do:\n\n```\nexport JPY_API_TOKEN=`jupyterhub token youruser`\npython cull_idle_servers.py\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/311352214",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-311352214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 311352214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTM1MjIxNA==",
    "user": {
      "login": "chultquist",
      "id": 6599754,
      "node_id": "MDQ6VXNlcjY1OTk3NTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6599754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chultquist",
      "html_url": "https://github.com/chultquist",
      "followers_url": "https://api.github.com/users/chultquist/followers",
      "following_url": "https://api.github.com/users/chultquist/following{/other_user}",
      "gists_url": "https://api.github.com/users/chultquist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chultquist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chultquist/subscriptions",
      "organizations_url": "https://api.github.com/users/chultquist/orgs",
      "repos_url": "https://api.github.com/users/chultquist/repos",
      "events_url": "https://api.github.com/users/chultquist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chultquist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T13:06:23Z",
    "updated_at": "2017-06-27T13:06:23Z",
    "author_association": "NONE",
    "body": "Has any progress been made on supporting this for individual kernels? I'm working on a tool that uses jupyter-js-services to spawn Python kernels, and it would be great to have a way to shut these down when the webapp client has been MIA for some time (e.g. a few minutes). I can tell when the webapp is MIA using something like a heartbeat + a Timer thread in Python, so I just need a mechanism on the Python side to actually shut the kernel down. sys.exit() and exit() don't work, and so I'm guessing that Jupyter is doing something clever to prevent users from accidentally killing their kernels."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/311392989",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-311392989",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 311392989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTM5Mjk4OQ==",
    "user": {
      "login": "chultquist",
      "id": 6599754,
      "node_id": "MDQ6VXNlcjY1OTk3NTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6599754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chultquist",
      "html_url": "https://github.com/chultquist",
      "followers_url": "https://api.github.com/users/chultquist/followers",
      "following_url": "https://api.github.com/users/chultquist/following{/other_user}",
      "gists_url": "https://api.github.com/users/chultquist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chultquist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chultquist/subscriptions",
      "organizations_url": "https://api.github.com/users/chultquist/orgs",
      "repos_url": "https://api.github.com/users/chultquist/repos",
      "events_url": "https://api.github.com/users/chultquist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chultquist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T15:22:38Z",
    "updated_at": "2017-06-27T15:22:38Z",
    "author_association": "NONE",
    "body": "FWIW to add to my previous update, I'm able to get somewhere by calling get_ipython().kernel.do_shutdown(False), although then the kernel process ends up as a zombie and so isn't really dead yet. I'm guessing this is because the Jupyter notebook server is keeping a reference to the child."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/312605944",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-312605944",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 312605944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjYwNTk0NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-03T10:09:47Z",
    "updated_at": "2017-07-03T10:09:47Z",
    "author_association": "MEMBER",
    "body": "There's machinery to cull idle kernels coming in notebook 5.1 - see jupyter/notebook#2215."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/318146372",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-318146372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 318146372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODE0NjM3Mg==",
    "user": {
      "login": "avi-ram",
      "id": 9190714,
      "node_id": "MDQ6VXNlcjkxOTA3MTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9190714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avi-ram",
      "html_url": "https://github.com/avi-ram",
      "followers_url": "https://api.github.com/users/avi-ram/followers",
      "following_url": "https://api.github.com/users/avi-ram/following{/other_user}",
      "gists_url": "https://api.github.com/users/avi-ram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avi-ram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avi-ram/subscriptions",
      "organizations_url": "https://api.github.com/users/avi-ram/orgs",
      "repos_url": "https://api.github.com/users/avi-ram/repos",
      "events_url": "https://api.github.com/users/avi-ram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avi-ram/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T18:46:10Z",
    "updated_at": "2017-07-26T18:46:10Z",
    "author_association": "NONE",
    "body": "Following"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/458447511",
    "html_url": "https://github.com/ipython/ipython/issues/5539#issuecomment-458447511",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5539",
    "id": 458447511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ0NzUxMQ==",
    "user": {
      "login": "JafarShaik6",
      "id": 24790539,
      "node_id": "MDQ6VXNlcjI0NzkwNTM5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/24790539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JafarShaik6",
      "html_url": "https://github.com/JafarShaik6",
      "followers_url": "https://api.github.com/users/JafarShaik6/followers",
      "following_url": "https://api.github.com/users/JafarShaik6/following{/other_user}",
      "gists_url": "https://api.github.com/users/JafarShaik6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JafarShaik6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JafarShaik6/subscriptions",
      "organizations_url": "https://api.github.com/users/JafarShaik6/orgs",
      "repos_url": "https://api.github.com/users/JafarShaik6/repos",
      "events_url": "https://api.github.com/users/JafarShaik6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JafarShaik6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T08:17:36Z",
    "updated_at": "2019-01-29T08:17:36Z",
    "author_association": "NONE",
    "body": "Is there anyway to automatic shutdown of notebook through script or config file. "
  }
]
