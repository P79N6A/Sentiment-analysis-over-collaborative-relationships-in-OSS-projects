[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15542626",
    "html_url": "https://github.com/ipython/ipython/issues/3093#issuecomment-15542626",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3093",
    "id": 15542626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQyNjI2",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-27T18:19:25Z",
    "updated_at": "2013-03-27T18:19:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "A few ideas:\n- [ipdb](https://pypi.python.org/pypi/ipdb): Run as `python -m ipdb script.py` and you'll get put into a IPython debugger on exception. There is some support for IPython features, like `pdef`, `pinfo`, `psource`, etc.  I'm not sure if you can spawn an IPython shell at a particular frame -- that would be a neat feature if it is possible.\n- [pudb](https://pypi.python.org/pypi/pudb): Line by line debugger.  You can set breakpoints and then drop into an IPython shell whenever you want by hitting `!`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15546430",
    "html_url": "https://github.com/ipython/ipython/issues/3093#issuecomment-15546430",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3093",
    "id": 15546430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQ2NDMw",
    "user": {
      "login": "amelio-vazquez-reina",
      "id": 1993919,
      "node_id": "MDQ6VXNlcjE5OTM5MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1993919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amelio-vazquez-reina",
      "html_url": "https://github.com/amelio-vazquez-reina",
      "followers_url": "https://api.github.com/users/amelio-vazquez-reina/followers",
      "following_url": "https://api.github.com/users/amelio-vazquez-reina/following{/other_user}",
      "gists_url": "https://api.github.com/users/amelio-vazquez-reina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amelio-vazquez-reina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amelio-vazquez-reina/subscriptions",
      "organizations_url": "https://api.github.com/users/amelio-vazquez-reina/orgs",
      "repos_url": "https://api.github.com/users/amelio-vazquez-reina/repos",
      "events_url": "https://api.github.com/users/amelio-vazquez-reina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amelio-vazquez-reina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-27T19:03:32Z",
    "updated_at": "2013-03-27T19:50:12Z",
    "author_association": "NONE",
    "body": "Thanks @bfroehle. Those are good ideas. \n\nThere is a way to temporarily disable (make silent) an embedded shell with `ipshell.dummy_mode = True`, which can be used to effectively turn off calls to subsequent calls to  `ipshell()`. This is akin to disabling a `breakpoint` in a debugger.\n\nIdeally it would be nice if **embedded IPython** shells accepted a set of special magics that allow for the addition/enabling/disabling of breakpoints as well as normal code continuation. I think they already accept one such magic, e.g. `%kill_embedded` so it looks like things are moving in that direction already.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/262843632",
    "html_url": "https://github.com/ipython/ipython/issues/3093#issuecomment-262843632",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3093",
    "id": 262843632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mjg0MzYzMg==",
    "user": {
      "login": "musically-ut",
      "id": 502876,
      "node_id": "MDQ6VXNlcjUwMjg3Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/502876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/musically-ut",
      "html_url": "https://github.com/musically-ut",
      "followers_url": "https://api.github.com/users/musically-ut/followers",
      "following_url": "https://api.github.com/users/musically-ut/following{/other_user}",
      "gists_url": "https://api.github.com/users/musically-ut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/musically-ut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/musically-ut/subscriptions",
      "organizations_url": "https://api.github.com/users/musically-ut/orgs",
      "repos_url": "https://api.github.com/users/musically-ut/repos",
      "events_url": "https://api.github.com/users/musically-ut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/musically-ut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-24T20:55:37Z",
    "updated_at": "2016-11-24T20:55:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found a hacky solution which I often use for some quick and dirty debugging: http://blog.musicallyut.in/2016/11/17/explode-out-of-your-function.html"
  }
]
