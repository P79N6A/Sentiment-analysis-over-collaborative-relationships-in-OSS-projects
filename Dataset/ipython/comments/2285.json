[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7654899",
    "html_url": "https://github.com/ipython/ipython/issues/2285#issuecomment-7654899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2285",
    "id": 7654899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTQ4OTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T19:51:10Z",
    "updated_at": "2012-08-10T19:51:10Z",
    "author_association": "MEMBER",
    "body": "I'm not sure whether this regression is a bug we can fix or an unavoidable side-effect of the improvements @minrk made in general to special character handling in the notebook.  That logic was very involved and I know he went to a lot of trouble to handle as many special cases correctly as possible, so I'll defer to him on the handling of this one.  Thanks for reporting it!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7775244",
    "html_url": "https://github.com/ipython/ipython/issues/2285#issuecomment-7775244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2285",
    "id": 7775244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzUyNDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T01:48:26Z",
    "updated_at": "2012-08-16T01:48:26Z",
    "author_association": "MEMBER",
    "body": "The issue is the difference between how our js interprets '\\r' and how a regular terminal does.\n\nWe interpret '\\r' as _clearing_ the line before it, whereas a terminal simply moves the cursor.  This is rarely an issue, because in the following, the two interpretations behave the same:\n\n``` python\nmarkers = '|/-\\\\'\nfor i in range(32):\n    m = markers[i % len(markers)]\n    sys.stdout.write('\\r' + (m * 10))\n    sys.stdout.flush()\n    time.sleep(0.1)\n```\n\nThere are two cases where they _do not_ behave the same:\n1. where subsequent lines are shorter than previous (terminals will only overwrite a partial line, leaving remnants (this is rarely desirable).\n2. if you put `\\r` at the _end_ of each line, instead of the beginning.  In a terminal, this is perfectly identical to `\\r`  at the beginning (barring edge cases of the line before / after the progress bar), but in the Notebook it means each line is cleared before it ever gets drawn.\n\nprogressbar does 2., hence this issue.\n\nYou can actually fix this by changing [this line](http://code.google.com/p/python-progressbar/source/browse/progressbar/__init__.py#283) in progressbar to putting `\\r` at the head of the line instead of the tail.\n\nGetting full `\\r` support in the notebook is far from trivial, but we might be able to change fixCarriageReturn to handle `\\r` at the end of a line specially.\n"
  }
]
