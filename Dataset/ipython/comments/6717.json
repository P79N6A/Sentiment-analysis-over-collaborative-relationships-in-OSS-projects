[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59402512",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59402512",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59402512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDAyNTEy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T17:55:49Z",
    "updated_at": "2014-10-16T17:55:49Z",
    "author_association": "MEMBER",
    "body": "I wonder if we should do this for all types registered in pprint - check whether the instance is actually an instance of a subclass that has overridden `__repr__`, and use that in preference to the registered printer if so. I don't think there's anything actually specific to type objects about this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59403091",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59403091",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59403091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDAzMDkx",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T17:59:50Z",
    "updated_at": "2014-10-16T18:00:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "It probably makes sense for pprinter to be tried first. Most classes don't have a pprinter, but have a `__repr__` (not meant for IPython); we wouldn't be able to override things if `__repr__` was used first.\n\nThe thing specific to type objects is that there is a registered pprinter, although it is apparently only meant to avoid some issues with Python's default `type.__repr__` (I'm guessing here).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59405532",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59405532",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59405532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDA1NTMy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T18:16:04Z",
    "updated_at": "2014-10-16T18:16:04Z",
    "author_association": "MEMBER",
    "body": "If I have a class `A` with a **repr** and a pprint function registered, the pprint function should take priority, because we assume that whoever wrote it knew about `A.__repr__` and thought it could be displayed better. But if there is a subclass `B` that overrides `__repr__`, that should (arguably) take precedence over the pprint function registered for A, because it might display extra information about B instances.\n\n`type` is not alone in having a pprinter registered by default - a bunch of builtin types have them: https://github.com/ipython/ipython/blob/master/IPython/lib/pretty.py#L730\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59405870",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59405870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59405870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDA1ODcw",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T18:18:37Z",
    "updated_at": "2014-10-16T18:18:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, you are right. I don't have time to look into the more general case though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59406085",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59406085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59406085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDA2MDg1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T18:20:23Z",
    "updated_at": "2014-10-16T18:20:23Z",
    "author_association": "MEMBER",
    "body": "Fair enough. Do you have time to add a test for the behaviour you fixed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59406250",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59406250",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59406250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDA2MjUw",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T18:21:21Z",
    "updated_at": "2014-10-16T18:21:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, I'll look into that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59570990",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59570990",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59570990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTcwOTkw",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-17T20:28:16Z",
    "updated_at": "2014-10-17T20:28:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here comes!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59581084",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59581084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59581084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTgxMDg0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-17T21:48:37Z",
    "updated_at": "2014-10-17T21:48:37Z",
    "author_association": "MEMBER",
    "body": "Thanks! I'm just looking over the tests, and I notice we don't currently have one for pretty printing a regular type object. Can you add a test for that, while we're on this, to check that the registered pprinter is used over `type.__repr__`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59653050",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59653050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59653050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjUzMDUw",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T15:22:18Z",
    "updated_at": "2014-10-19T15:22:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here you go. A bit involved, couldn't just call `pretty.pretty()` since I need to mock the `_type_pprinter` on the `RepresentationPrinter` object.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59654167",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59654167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59654167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjU0MTY3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T15:55:49Z",
    "updated_at": "2014-10-19T15:55:49Z",
    "author_association": "MEMBER",
    "body": "Travis seem happy. \n\n+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59817433",
    "html_url": "https://github.com/ipython/ipython/pull/6717#issuecomment-59817433",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6717",
    "id": 59817433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODE3NDMz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T18:35:42Z",
    "updated_at": "2014-10-20T18:35:42Z",
    "author_association": "MEMBER",
    "body": "Thanks.\n"
  }
]
