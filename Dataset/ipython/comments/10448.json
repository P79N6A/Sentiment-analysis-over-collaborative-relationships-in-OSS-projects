[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/293896822",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-293896822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 293896822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg5NjgyMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T13:34:41Z",
    "updated_at": "2017-04-13T13:34:41Z",
    "author_association": "MEMBER",
    "body": "Normally we recommend that people enable the matplotlib integration (via `%matplotlib` or the `--matplotlib` option) before plotting. I haven't seen it combined with embed() before.\r\n\r\nOne thing you could try to get a similar effect is to write your script without calling IPython, and then run it like this:\r\n\r\n```\r\nipython --matplotlib -i my_script.py\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/297170694",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-297170694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 297170694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzE3MDY5NA==",
    "user": {
      "login": "Lunderberg",
      "id": 3888575,
      "node_id": "MDQ6VXNlcjM4ODg1NzU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3888575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Lunderberg",
      "html_url": "https://github.com/Lunderberg",
      "followers_url": "https://api.github.com/users/Lunderberg/followers",
      "following_url": "https://api.github.com/users/Lunderberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Lunderberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Lunderberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Lunderberg/subscriptions",
      "organizations_url": "https://api.github.com/users/Lunderberg/orgs",
      "repos_url": "https://api.github.com/users/Lunderberg/repos",
      "events_url": "https://api.github.com/users/Lunderberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Lunderberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-25T21:29:12Z",
    "updated_at": "2017-04-25T21:29:12Z",
    "author_association": "NONE",
    "body": "Running it by starting `ipython` from the command line does prevent the issue, but doesn't work with my normal workflow.  I will often have an ipython prompt open, using embed, at various parts of a program.  I will interact with the data that is currently plotted and examine the plots as they are displayed, in order to make small tweaks to how they look.  Running the `ipython` command as you have given it does not let me drop into the interpreter at any location, only at the end of the script's execution.\r\n\r\nI've done some experimentation on it, and it seems to be related to callbacks added using tkinter's `after_idle` not being called.  Matplotlib uses this to update the plots displayed.  Under the previous input scheme, ipython 4.2.1 and below, the plot would be updated whenever the `input` function is called (or `raw_input` on python 2).  With the updated user interface, `input` is never called, and control never passes back to matplotlib's callback."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/297322082",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-297322082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 297322082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzMyMjA4Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T09:41:34Z",
    "updated_at": "2017-04-26T09:41:34Z",
    "author_association": "MEMBER",
    "body": "We have code to integrate the GUI event loop with IPython so that it can keep running callbacks to update windows - that's what the `%matplotlib` magic uses. But I don't know how it interacts with `IPython.embed()`. Python itself has some special integration with the tk event loop when you use `input()`, which is why this worked for you in earlier versions of IPython.\r\n\r\nHave you tried specifying `%matplotlib tk` explicitly? Or is it possible to try with another mpl backend, like Qt?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/297408833",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-297408833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 297408833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQwODgzMw==",
    "user": {
      "login": "Lunderberg",
      "id": 3888575,
      "node_id": "MDQ6VXNlcjM4ODg1NzU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3888575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Lunderberg",
      "html_url": "https://github.com/Lunderberg",
      "followers_url": "https://api.github.com/users/Lunderberg/followers",
      "following_url": "https://api.github.com/users/Lunderberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Lunderberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Lunderberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Lunderberg/subscriptions",
      "organizations_url": "https://api.github.com/users/Lunderberg/orgs",
      "repos_url": "https://api.github.com/users/Lunderberg/repos",
      "events_url": "https://api.github.com/users/Lunderberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Lunderberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T13:31:22Z",
    "updated_at": "2017-04-26T13:31:22Z",
    "author_association": "NONE",
    "body": "After testing, it seems that any plots currently displayed when `%matplotlib` or `%matplotlib tk` are called disappear.  Figures generated after that in the interpreter appear immediately, without needing a call to `plt.show(block=False)`.  I also tried calling `IPython.embed()` before the figure is created, using the `%matplotlib` magic method to enable the integration, then exiting to allow the script to make the plot itself.  This does not appear to change anything, as the second call to `IPython.embed()` also prevents the plot from updating.\r\n\r\nTesting with the `Qt4Agg` backend, and I see identical behavior.  That is, in ipython versions 4.2.1 and below, both the plot and the interpreter are usable at the same time, while in versions 5.0.0 and above, the interpreter prevents the plot from updating."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/297429426",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-297429426",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 297429426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQyOTQyNg==",
    "user": {
      "login": "Lunderberg",
      "id": 3888575,
      "node_id": "MDQ6VXNlcjM4ODg1NzU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3888575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Lunderberg",
      "html_url": "https://github.com/Lunderberg",
      "followers_url": "https://api.github.com/users/Lunderberg/followers",
      "following_url": "https://api.github.com/users/Lunderberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/Lunderberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Lunderberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Lunderberg/subscriptions",
      "organizations_url": "https://api.github.com/users/Lunderberg/orgs",
      "repos_url": "https://api.github.com/users/Lunderberg/repos",
      "events_url": "https://api.github.com/users/Lunderberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Lunderberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T14:38:41Z",
    "updated_at": "2017-04-26T14:38:41Z",
    "author_association": "NONE",
    "body": "Following up, it seems to be a more general issue, rather than just a matplotlib issue.  In some GUIs that I have, I will have a button to open an interpreter, allowing for more general access to the data being analyzed.  A simple example of this usage is as follows.  Here, a progress bar continually fills, representing additional work being done by the program.  If I click the button to start the interpreter, the progress bar continues to advance if I am using the old version of ipython, and the GUI remains responsive, but in newer versions, the GUI freezes.\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport tkinter as tk\r\nfrom tkinter import ttk\r\n\r\nclass SimpleWindow(tk.Frame):\r\n    def __init__(self, master=None):\r\n        super().__init__(master)\r\n        self.pack()\r\n\r\n        self.progress = ttk.Progressbar(self, orient='horizontal',\r\n                                        length=200, mode='determinate')\r\n        self.progress['value'] = 0\r\n        self.progress['maximum'] = 100\r\n        self.progress.pack(side='top')\r\n\r\n        self.button = tk.Button(self)\r\n        self.button['text'] = 'Start Interpreter'\r\n        self.button['command'] = self.start_interpreter\r\n        self.button.pack(side='top')\r\n        self.interpreter_running = False\r\n\r\n        self.advance_progress()\r\n\r\n    def advance_progress(self):\r\n        self.progress['value'] = (self.progress['value'] + 1) % 100\r\n        self.after(100, self.advance_progress)\r\n\r\n    def start_interpreter(self):\r\n        if not self.interpreter_running:\r\n            self.interpreter_running = True\r\n            import IPython; IPython.embed()\r\n            self.interpreter_running = False\r\n\r\n\r\nroot = tk.Tk()\r\napp = SimpleWindow(master=root)\r\napp.mainloop()\r\n```\r\n\r\nI started digging into the integration between `input()` and tkinter's update loop, to see if there would be any way to adapt it to the new interpreter.  There is a periodic call to `PyOS_InputHook` that happens inside `input()`, which then calls tkinter's update step.  Unfortunately, as far as I can tell, there is no way to directly call `PyOS_InputHook` from within python.  That would be the ideal solution, as it would support any update loop that uses it, rather than being specific to matplotlib, tkinter, or pyqt."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/297431078",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-297431078",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 297431078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQzMTA3OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T14:43:49Z",
    "updated_at": "2017-04-26T14:43:49Z",
    "author_association": "MEMBER",
    "body": "Only tkinter has native integration with PyOS_InputHook, as far as I know. We used to have code to integrate other event loops with it, but it was ugly stuff involving ctypes.\r\n\r\nI think part of the problem is that `embed()` effectively recreates the shell each time, so it loses the event loop integration from one time to the next. I think I can see a way round that; I'll try something out and post it in a few minutes."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/297434044",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-297434044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 297434044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQzNDA0NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T14:52:57Z",
    "updated_at": "2017-04-26T14:52:57Z",
    "author_association": "MEMBER",
    "body": "The code below works for me. You need to enable mpl integration before drawing the plot, because it calls `plt.switch_backend()`, which closes any open figures.\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport matplotlib.pyplot as plt\r\nfrom IPython.terminal.embed import InteractiveShellEmbed\r\n\r\nshell = InteractiveShellEmbed()\r\nshell.enable_matplotlib()\r\n\r\nfig,axes = plt.subplots()\r\naxes.plot([1,2,3,4,5],[1,2,1,2,1])\r\nplt.show(block=False)\r\n\r\nshell()\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/407045483",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-407045483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 407045483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA0NTQ4Mw==",
    "user": {
      "login": "Shivaspace4",
      "id": 41578222,
      "node_id": "MDQ6VXNlcjQxNTc4MjIy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/41578222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shivaspace4",
      "html_url": "https://github.com/Shivaspace4",
      "followers_url": "https://api.github.com/users/Shivaspace4/followers",
      "following_url": "https://api.github.com/users/Shivaspace4/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shivaspace4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shivaspace4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shivaspace4/subscriptions",
      "organizations_url": "https://api.github.com/users/Shivaspace4/orgs",
      "repos_url": "https://api.github.com/users/Shivaspace4/repos",
      "events_url": "https://api.github.com/users/Shivaspace4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shivaspace4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T12:45:42Z",
    "updated_at": "2018-07-23T12:45:42Z",
    "author_association": "NONE",
    "body": "I am using Python 2.7 and the code above does not work. I get the I python cell but the matplotlib figure is hanging. Please any help on how to properly use an embedded Ipython console with matplotlib? I am trying to freeze an application which should first plot matplotlib figures and  Mayavi scenes and then prompting to an Ipython console for further data analysis. I was able to do this with Ipython 4.x but I got some annoying problems with copy paste operation into the Ipython console. I had to move to Ipython 5.x. Copy paste now is smooth but if I add the commands plt.show(block=False) or the mlab.show() from mayavi, before embedding Ipython, then all figures hang! In a little bit different code structure I can visualize all figures, but I have to close them all in order to arrive at an active Ipython console. I am using a qt4 backend."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/427382987",
    "html_url": "https://github.com/ipython/ipython/issues/10448#issuecomment-427382987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10448",
    "id": 427382987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzM4Mjk4Nw==",
    "user": {
      "login": "Shivaspace4",
      "id": 41578222,
      "node_id": "MDQ6VXNlcjQxNTc4MjIy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/41578222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shivaspace4",
      "html_url": "https://github.com/Shivaspace4",
      "followers_url": "https://api.github.com/users/Shivaspace4/followers",
      "following_url": "https://api.github.com/users/Shivaspace4/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shivaspace4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shivaspace4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shivaspace4/subscriptions",
      "organizations_url": "https://api.github.com/users/Shivaspace4/orgs",
      "repos_url": "https://api.github.com/users/Shivaspace4/repos",
      "events_url": "https://api.github.com/users/Shivaspace4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shivaspace4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T14:22:22Z",
    "updated_at": "2018-10-05T14:22:22Z",
    "author_association": "NONE",
    "body": "any suggestions on the above issue?"
  }
]
