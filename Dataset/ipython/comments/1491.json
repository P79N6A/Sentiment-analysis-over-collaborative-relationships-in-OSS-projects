[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4500696",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-4500696",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 4500696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDA2OTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T15:43:14Z",
    "updated_at": "2012-03-14T15:43:14Z",
    "author_association": "MEMBER",
    "body": "At present, code always gets the static transformations, like escaped %magic commands, !shell commands, help? - these are done by inputsplitter. Then single lines get run through prefilter to do more dynamic transformations. This whole area could do with some reworking and consolidation, so we'll need to hash out how we want things to work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4503099",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-4503099",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 4503099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDMwOTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T17:22:05Z",
    "updated_at": "2012-03-14T17:22:05Z",
    "author_association": "MEMBER",
    "body": "I should mention that this part of our code is quite complex.  @fperez knows these issues best.  I have a vague memory that there were problems with multiline prefilters, but don't recall what the issues are.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4503286",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-4503286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 4503286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDMyODY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T17:28:51Z",
    "updated_at": "2012-03-14T17:28:51Z",
    "author_association": "MEMBER",
    "body": "I think part of the issue is that it's tricky to determine whether a line is part of a multiline string (and therefore shouldn't be altered). There may well be other difficulties.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7567002",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-7567002",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 7567002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjcwMDI=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-07T21:10:38Z",
    "updated_at": "2012-08-07T21:10:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "But don't you already have the logic to determine that somewhere?  How else does IPython know to let the user continue entering text instead of executing?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7567215",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-7567215",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 7567215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjcyMTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-07T21:18:08Z",
    "updated_at": "2012-08-07T21:18:08Z",
    "author_association": "MEMBER",
    "body": "Yes, that's done by inputsplitter. inputsplitter does some transformations itself, but prefilter is the public API for transforming input. The two need to be unified somehow. It's certainly not impossible, just complex, because there's lots of odd corner cases. Happily, I think it's got quite a lot of tests, so at least we'll know when we break things.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7567409",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-7567409",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 7567409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Njc0MDk=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-07T21:25:45Z",
    "updated_at": "2012-08-07T21:25:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the [discussion on the mailing list](http://mail.scipy.org/pipermail/ipython-user/2012-August/010846.html), here are some things to consider here:\n- The transformations should happen on whole cells, not on lines.  If the user really wants lines, he can do `.split(\"\\n\")`, but that should probably be discouraged anyway, because nine times out of ten it won't work correctly on line continuations.  Perhaps IPython can provide a convenience function that splits the input into \"real\" lines (i.e., a line continuation would be counted as a single line, as would perhaps an entire triple quoted string).  Or maybe something like that already exists in the standard library.  \n- I'm not convinced that the current priority system is expressive enough to really do things.  For example, suppose I want to add a prefilter that modifies Python syntax.  This should work on any valid Python code.  The problem is that it should also work on magic that operates on Python code, like `%timeit`, but obviously, not on magic that doesn't, like `%run`.  Clearly just running the filter before or after magic won't cut it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19715612",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-19715612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 19715612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzE1NjEy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-19T21:16:15Z",
    "updated_at": "2013-06-19T21:16:15Z",
    "author_association": "MEMBER",
    "body": "@takluyver did this get fixed by IPEP 2?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19719637",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-19719637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 19719637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzE5NjM3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-19T22:29:26Z",
    "updated_at": "2013-06-19T22:29:26Z",
    "author_association": "MEMBER",
    "body": "I've shifted some of the logic away from prefilter to inputsplitter, which is called for multiline cells. I don't think that we should try to apply the remaining prefilter logic to multiline cells, because of the potential for confusing bugs like #3334.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19728051",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-19728051",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 19728051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzI4MDUx",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-20T02:50:10Z",
    "updated_at": "2013-06-20T02:50:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe only do it if the syntax is not valid Python. It could still lead to confusing results, though, especially with `%`. You could also play with using special markers that are obviously and unambiguously not valid Python, like `!identifier!` or something. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19752583",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-19752583",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 19752583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzUyNTgz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-20T13:35:54Z",
    "updated_at": "2013-06-20T13:35:54Z",
    "author_association": "MEMBER",
    "body": "The idea now is that inputsplitter handles the bits that clearly aren't valid Python, like escaped %magics. prefilter remains, for the time being, for the more seriously magical bits, that allow magic commands without the % prefix, but may also be valid syntax (e.g. `bookmark -l`).\n\nI don't think we should be too aggressive about trying to transform things that are invalid syntax, because:\n- In a block of code, it's not entirely trivial to detect which lines aren't valid syntax (e.g. the lineno of a SyntaxError may point to the beginning of the next line).\n- If there's a SyntaxError because someone actually made a mistake, they want to see a SyntaxError, not the results of an attempt to transform it as IPython syntax.\n\nAs we've discussed elsewhere, the notebook has shifted our focus from speed and convenience a bit towards clarity and readability (though we still fly a bit closer to convenience than the Python language). In that context, I think having the escape sequences as a clear marker of where IPython magic is going on is a good thing, so I'm inclined to minimise the role of unescaped magics. They work in single-line notebook cells for historical reasons, but I think the drawbacks of bringing them to multi-line cells outweigh the benefits.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19753096",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-19753096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 19753096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzUzMDk2",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-20T13:44:08Z",
    "updated_at": "2013-06-20T13:44:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, that's the reason to make it \"_obvious_ and unambiguous\". No one will ever accidentally type `!%magic!`. \n\nBut maybe some use-cases are in order. Do you gain anything other than not having to assign the output of a magic to a variable?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19765536",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-19765536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 19765536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzY1NTM2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-20T16:41:09Z",
    "updated_at": "2013-06-20T16:41:09Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what you're trying to achieve over and above the existing escape sequences for %magic and !system commands? We already have an unambiguous syntax which works in single line and multiline cells. Prefilter exists to support the ambiguous syntax.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33331759",
    "html_url": "https://github.com/ipython/ipython/issues/1491#issuecomment-33331759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1491",
    "id": 33331759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzMxNzU5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-26T21:54:10Z",
    "updated_at": "2014-01-26T21:54:10Z",
    "author_association": "MEMBER",
    "body": "@takluyver can we close this one?\n"
  }
]
