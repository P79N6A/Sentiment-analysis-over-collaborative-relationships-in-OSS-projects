[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218548120",
    "html_url": "https://github.com/ipython/ipython/issues/2585#issuecomment-218548120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2585",
    "id": 218548120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODU0ODEyMA==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T18:30:06Z",
    "updated_at": "2016-05-11T18:30:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "This exact same issue is still present as of IPython 4.2.0.  Kindly bumping.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218575286",
    "html_url": "https://github.com/ipython/ipython/issues/2585#issuecomment-218575286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2585",
    "id": 218575286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODU3NTI4Ng==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T20:10:52Z",
    "updated_at": "2016-05-11T20:10:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, so there's a pretty trivial fix for this specific issue: completely get rid of quoting on Windows.\n\nThe patch is as follows:\n\n```\n--- a/IPython/core/completer.py\n+++ b/IPython/core/completer.py\n@@ -125,9 +125,9 @@ def has_open_quotes(s):\n\n def protect_filename(s):\n     \"\"\"Escape a string to protect certain characters.\"\"\"\n-\n-    return \"\".join([(ch in PROTECTABLES and '\\\\' + ch or ch)\n-                    for ch in s])\n+    # Lifted from shlex.quote.\n+    return (s if sys.plaform == \"win32\" or not set(s) & set(PROTECTABLES)\n+            else \"'\" + s.replace(\"'\", \"'\\\"'\\\"'\") + \"'\")\n\ndiff --git a/IPython/utils/path.py b/IPython/utils/path.py\nindex 94b3d95a..5b2e06d 100644\n--- a/IPython/utils/path.py\n+++ b/IPython/utils/path.py\n@@ -72,11 +72,8 @@ def get_long_path_name(path):\n\n\n def unquote_filename(name, win32=(sys.platform=='win32')):\n-    \"\"\" On Windows, remove leading and trailing quotes from filenames.\n+    \"\"\"Deprecated.\n     \"\"\"\n-    if win32:\n-        if name.startswith((\"'\", '\"')) and name.endswith((\"'\", '\"')):\n-            name = name[1:-1]\n     return name\n\n def compress_user(path):\n```\n\nThis allows cd'ing in path with all kinds of weird characters on Windows.  I haven't looked at implications (if any) for the rest of the codebase though.  Does someone want to look more into it?\n"
  }
]
