[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75858390",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75858390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75858390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODU4Mzkw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:14:18Z",
    "updated_at": "2015-02-24T22:14:18Z",
    "author_association": "MEMBER",
    "body": "We deprecated `nbformat.current` since by definition it would be an API that changes over time, which wasn't a great choice. Instead, we have replaced it with `nbformat.read[s], nbformat.write[s]` methods, which should be stable across nbformat versions. The same functionality should continue to work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75858657",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75858657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75858657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODU4NjU3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:15:49Z",
    "updated_at": "2015-02-24T22:15:49Z",
    "author_association": "MEMBER",
    "body": "You could update the code to work with current IPython, but I think it was mainly a proof of concept: we're not encouraging people to build large projects by using notebooks as modules. Python already has a module system, that's not a wheel we want to reinvent.\n\nIPython 3 will be include a simple text editor which can view and edit `.py` source files (along with any other text files). Will that help at all?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75861009",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75861009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75861009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODYxMDA5",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:29:33Z",
    "updated_at": "2015-02-24T22:38:05Z",
    "author_association": "NONE",
    "body": "So that the wheel is not being reinvented, (just plugged into), would it be possible to have a cell magic which when written at the top of a cell would cause the notebooks \"save feature\" to automatically include that cell (along with other cells with this magic) to be autosaved into a python script by the same name?\n\n[Maybe have in comments at the top of the python script 'This script was auto created by jupyter notebook, direct editing will likely result in overwritten code' ... or something to that extent.]\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75862646",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75862646",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75862646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODYyNjQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:39:08Z",
    "updated_at": "2015-02-24T22:39:08Z",
    "author_association": "MEMBER",
    "body": "In IPython 3 you can set a save hook (technically, pre save or post save) which is passed the notebook object when it's saved. You could write a function that extracts certain cells and writes them to a .py file - I think there's already an example of writing all the code cells to a .py file.\n\nFor marking certain cells within a notebook in a way that doesn't affect their execution, cell metadata is better than a cell magic. There's no need to add anything to the kernel to handle cell metadata, and it's automatically language agnostic.\n\nI don't think there's anything extra we want to do in IPython core, so I'm closing this for now. We can reopen it if there's something we need to add. Comments will still work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75863590",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75863590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75863590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODYzNTkw",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:44:54Z",
    "updated_at": "2015-02-24T22:44:54Z",
    "author_association": "NONE",
    "body": "Thanks for your help. I'll have a look into it.\n\nCan I ask why you are not encouraging people to build large projects with modules as notebooks? There are definitely downsides, but the transparency of each of the pieces will significantly increase the number of people who are able to contribute.\n\nIn my example, if someone who cannot code, but is able to see step by step how my program is built is able to find a mistake in my underlying physics that is massive. Building modules as notebooks with examples included allows me to explain inline to the user what the program is doing.\n\nThank you so much for making such a wonderful program.\n\nCheers for your help,\nSimon\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75864520",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75864520",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75864520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODY0NTIw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:50:35Z",
    "updated_at": "2015-02-24T22:50:35Z",
    "author_association": "MEMBER",
    "body": "Among other, making library as program make it impossible for people not having IPython to import them. Also this requires you to use IPython to read and/or edit (Yes there is nbviewer, and pychar can read/write notebooks, but this is not much used).\n\nWe also feel that notebooks are nice to show a linear workflow but are not that much useful for a full library. \n\nWe would be happy for that to change in the future, where you can have rich documents, \nbut I'm not sure it is the time yet. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75865835",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75865835",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75865835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODY1ODM1",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T22:58:15Z",
    "updated_at": "2015-02-24T23:05:15Z",
    "author_association": "NONE",
    "body": "Thanks for the feedback. \n\nWhen I get the chance I think I will use the save hook method described by takluyver. That way I get to have the best of both worlds. People will be able to import/read the modules without ipython because they would also be autosaving to python scripts\n\nI do agree they are great for a linear workflow. I have kind of been cheating by putting a link at the top that sends the user \"down\" to the linear section. This can be seen [here](http://nbviewer.ipython.org/github/SimonBiggs/equivalent-ellipse-spline-modelling/blob/master/program/EquivalentEllipse/EllipseFitting.ipynb).\n\n...not sure if this is a good method... I guess I'll see how easy it is for people to understand once I flesh out the examples.\n\nI guess I also hope it would encourage users to \"play\" with the objects. The notebook provides them with a little playground to see how each object handles things... that way they can see if I have done something silly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75868430",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75868430",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75868430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODY4NDMw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T23:07:25Z",
    "updated_at": "2015-02-24T23:07:25Z",
    "author_association": "MEMBER",
    "body": "I don't think _storing_ library code in notebooks is a big plus for transparency. If it's easy to look at the code, why would a big class definition in a notebook be easier to understand than a big class definition in a text file?\n\nThere's certainly a case for showing pieces of library code in a notebook to illustrate what's going on - and that should be possible, using things like the `%psource` and `%pycat` magics.\n\nWe're also interested in ways to abstract out reusable code that's been developed and tested interactively in a notebook. My [cell2function](https://github.com/takluyver/cell2function) project was one exploration of that, and we have also talked about a 'modulify' tool that would save a piece of code to a module and replace it with an import from that module. But for now, moving code to modules seems like a better approach than using notebooks as libraries.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75869277",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75869277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75869277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODY5Mjc3",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T23:12:18Z",
    "updated_at": "2015-02-24T23:12:18Z",
    "author_association": "NONE",
    "body": "That makes sense. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75870240",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75870240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75870240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODcwMjQw",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T23:19:11Z",
    "updated_at": "2015-02-24T23:19:11Z",
    "author_association": "NONE",
    "body": "There are situations where the big class definition has value being stored within the notebook. When I was working on making an interactive GEANT4 example with IPython found [here](http://nbviewer.ipython.org/github/SimonBiggs/ipython-geant4-linac/blob/master/main.ipynb), the real beneifit was having users be able to fiddle with the class interactively and see the resulting simulation.\n\nI guess I was just carrying this mindset over to building a bigger application. ...And maybe I need to do as you said, have both a notebook version and a script version with the save hooks.\n\nI will avoid removing the class defined within the notebook so that users can still fiddle with the class there and then and see what the result is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75871152",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75871152",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75871152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODcxMTUy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T23:25:06Z",
    "updated_at": "2015-02-24T23:25:06Z",
    "author_association": "MEMBER",
    "body": "Where it's small enough that you can have the class and the experimentation code in one notebook, I can see the benefit. When it gets big enough that you need multiple files, I think it's worth stopping to think about how to organise the code, and at that point I'd start to separate out library code from experimentation/example code. But it is interesting to see how different people approach this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75874206",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75874206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75874206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODc0MjA2",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T23:37:28Z",
    "updated_at": "2015-02-24T23:39:46Z",
    "author_association": "NONE",
    "body": "Yehh, that's where I am at. \"How am I going to organise this code\". In general, in my situation, everyone who has access to this code will be limited by using IPython alone.\n\nSo I guess, may I ask for some advice?\n\nMy planned setup is having the final package all bundled up on a virtual machine server within the hospital / cancer centre. Users will login via jupyter hub.\n\nIt was for this reason that I hoped to make the code and its library as interactive as possible. I am imagining it won't be a \"large project\" instead \"medium sized\" / \"small\". The program is divided into four clear parts:\n- Pulling patient shielding shapes from the treatment planning system via telnet / ssh\n  - about 5 notebooks\n- Parameterising the shapes (that's the 'equivalentellipse' code I have been linking to)\n  - about 5 notebooks\n- Creating the bivariate spline model, validation, statistics, and uncertainty calcs\n  - no more than 2 notebooks\n- Top level base user interaction notebook, takes user input, creates reports etc.\n  - about 2 notebooks\n\nDo you think this would get messy if I keep going the way I am going? Or is it \"small\" enough that making the library out of notebooks would be okay?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75876390",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-75876390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 75876390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODc2Mzkw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T23:47:07Z",
    "updated_at": "2015-02-24T23:47:07Z",
    "author_association": "MEMBER",
    "body": "My gut feeling is that, for now, if you need to share code between notebooks, you're better off putting that code in regular Python modules and importing it, reserving notebooks for examples, explanations, and the top level parts you expect users to run interactively. But with ~15 notebooks, you could probably manage with those notebooks importing each other.\n\nIn IPython 3 the notebook will come with an in-browser text editor, so even when it's on a remote server, users can examine .py files easily. I understand that a notebook is somehow more friendly than a text file, but I think much of that benefit is lost when you're writing classes, because you can't split a class over several cells.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76077715",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-76077715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 76077715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDc3NzE1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T22:45:28Z",
    "updated_at": "2015-02-25T22:45:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can try the `writeandexecute` magic (https://github.com/minrk/ipython_extensions/blob/master/extensions/writeandexecute.py), which makes it possible to write some cells to a py file, which can then be imported.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77273733",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-77273733",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 77273733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjczNzMz",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T23:28:37Z",
    "updated_at": "2015-03-04T23:31:50Z",
    "author_association": "NONE",
    "body": "Hi @takluyver,\n\nI was thinking, without knowing very much at all, how hard would it be to pull the Atom editor to display inside a browser the same way jupyter notebook does? That way I could serve both the jupyter notebook server and also an \"Atom server\" to users of the application. This would give them a powerful text editor for the .py files to go along with the notebook for the .ipnb files.\n\nI have a hunch I am spouting crazy talk, if that is the case, thanks for humouring me :).\n\nCheers,\nSimon\n\nPS: I took your advice and am keeping the library as .py files, however I am making a stash of notebooks explaining each element of the library.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77274550",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-77274550",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 77274550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mjc0NTUw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T23:34:34Z",
    "updated_at": "2015-03-04T23:34:34Z",
    "author_association": "MEMBER",
    "body": "We have a very basic text editor embedded in IPython 3, which you can use with zero work.\n\nI haven't used atom, but I understand that it's written as a local web app, so it might be possible to serve it like IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77280841",
    "html_url": "https://github.com/ipython/ipython/issues/7854#issuecomment-77280841",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7854",
    "id": 77280841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjgwODQx",
    "user": {
      "login": "SimonBiggs",
      "id": 6559099,
      "node_id": "MDQ6VXNlcjY1NTkwOTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6559099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonBiggs",
      "html_url": "https://github.com/SimonBiggs",
      "followers_url": "https://api.github.com/users/SimonBiggs/followers",
      "following_url": "https://api.github.com/users/SimonBiggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonBiggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonBiggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonBiggs/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonBiggs/orgs",
      "repos_url": "https://api.github.com/users/SimonBiggs/repos",
      "events_url": "https://api.github.com/users/SimonBiggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonBiggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-05T00:21:42Z",
    "updated_at": "2015-03-05T00:22:37Z",
    "author_association": "NONE",
    "body": "Yehh, unfortunately, it might be worth the work due to things like autocomplete, linter-flake8, and a filetree which Atom would bring to work alongside the notebook.\n\nI'll do a bit of research.\n\nThanks for your help.\n"
  }
]
