[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381275541",
    "html_url": "https://github.com/ipython/ipython/issues/11094#issuecomment-381275541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11094",
    "id": 381275541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTI3NTU0MQ==",
    "user": {
      "login": "dnut",
      "id": 15116250,
      "node_id": "MDQ6VXNlcjE1MTE2MjUw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15116250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dnut",
      "html_url": "https://github.com/dnut",
      "followers_url": "https://api.github.com/users/dnut/followers",
      "following_url": "https://api.github.com/users/dnut/following{/other_user}",
      "gists_url": "https://api.github.com/users/dnut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dnut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dnut/subscriptions",
      "organizations_url": "https://api.github.com/users/dnut/orgs",
      "repos_url": "https://api.github.com/users/dnut/repos",
      "events_url": "https://api.github.com/users/dnut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dnut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T22:28:30Z",
    "updated_at": "2018-04-16T21:12:21Z",
    "author_association": "NONE",
    "body": "```colorama.init()``` messes with sys.stdout like this:\r\n```python\r\ndef init(autoreset=False, convert=None, strip=None, wrap=True):\r\n...\r\n    sys.stdout = wrapped_stdout = \\\r\n        wrap_stream(orig_stdout, convert, strip, autoreset, wrap)\r\n```\r\nCommenting out that assignment (or anything downstream that results in calling init) fixes the problem.\r\nThis is what wrap_stream looks like:\r\n```python\r\nfrom .ansitowin32 import AnsiToWin32\r\n\r\ndef wrap_stream(stream, convert, strip, autoreset, wrap):\r\n    if wrap:\r\n        wrapper = AnsiToWin32(stream,\r\n            convert=convert, strip=strip, autoreset=autoreset)\r\n        if wrapper.should_wrap():\r\n            stream = wrapper.stream\r\n    return stream\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381311066",
    "html_url": "https://github.com/ipython/ipython/issues/11094#issuecomment-381311066",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11094",
    "id": 381311066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMxMTA2Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-14T07:45:08Z",
    "updated_at": "2018-04-14T07:45:08Z",
    "author_association": "MEMBER",
    "body": "Hmm. IPython *also* uses colorama. Maybe colorama doesn't like being initialized twice?\r\n\r\ncc @wiggin15, who appears to be the main maintainer of colorama."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381318229",
    "html_url": "https://github.com/ipython/ipython/issues/11094#issuecomment-381318229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11094",
    "id": 381318229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMxODIyOQ==",
    "user": {
      "login": "wiggin15",
      "id": 1686212,
      "node_id": "MDQ6VXNlcjE2ODYyMTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1686212?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wiggin15",
      "html_url": "https://github.com/wiggin15",
      "followers_url": "https://api.github.com/users/wiggin15/followers",
      "following_url": "https://api.github.com/users/wiggin15/following{/other_user}",
      "gists_url": "https://api.github.com/users/wiggin15/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wiggin15/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wiggin15/subscriptions",
      "organizations_url": "https://api.github.com/users/wiggin15/orgs",
      "repos_url": "https://api.github.com/users/wiggin15/repos",
      "events_url": "https://api.github.com/users/wiggin15/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wiggin15/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-14T10:02:16Z",
    "updated_at": "2018-04-14T10:02:16Z",
    "author_association": "NONE",
    "body": "IIRC colorama will forget the \"original stdout\" if initializing twice (causes trouble when calling `colorama.deinit`) so it's not really recommended, but it should continue to work and shouldn't cause the hang described.\r\nI currently don't have access to a Win 10 machine, and I can't reproduce this on Windows 7.\r\n@dnut can you try to run:\r\n```python\r\nimport colorama\r\ncolorama.init()\r\ncolorama.init()\r\n<ctrl+D>\r\n```\r\nand see if this causes trouble?\r\nAlso, please make sure you have the latest version of colorama installed."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381656319",
    "html_url": "https://github.com/ipython/ipython/issues/11094#issuecomment-381656319",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11094",
    "id": 381656319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY1NjMxOQ==",
    "user": {
      "login": "dnut",
      "id": 15116250,
      "node_id": "MDQ6VXNlcjE1MTE2MjUw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15116250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dnut",
      "html_url": "https://github.com/dnut",
      "followers_url": "https://api.github.com/users/dnut/followers",
      "following_url": "https://api.github.com/users/dnut/following{/other_user}",
      "gists_url": "https://api.github.com/users/dnut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dnut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dnut/subscriptions",
      "organizations_url": "https://api.github.com/users/dnut/orgs",
      "repos_url": "https://api.github.com/users/dnut/repos",
      "events_url": "https://api.github.com/users/dnut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dnut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T15:59:05Z",
    "updated_at": "2018-04-16T15:59:05Z",
    "author_association": "NONE",
    "body": "@wiggin15 \r\nI am using colorama 0.3.9.\r\n```python\r\nimport colorama\r\ncolorama.init()\r\ncolorama.init()\r\n<ctrl+D>\r\n```\r\nThis works fine. It even works if I run it within IPython shell. The problem seems exclusive to having colorama.init() called before embedding an IPython shell, then an IPython shell is embedded, and then ctrl-D within the embedded shell is handled by IPython which somehow causes a problem."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381721070",
    "html_url": "https://github.com/ipython/ipython/issues/11094#issuecomment-381721070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11094",
    "id": 381721070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTcyMTA3MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T19:28:36Z",
    "updated_at": "2018-04-16T19:28:36Z",
    "author_association": "MEMBER",
    "body": "On Windows with Python 2.7, IPython also loads [win_unicode_console](https://pypi.org/project/win_unicode_console/), another library which wraps standard streams. It does this before loading colorama, so if you have initialised colorama yourself before starting IPython, you've probably got:\r\n\r\n- colorama streams, wrappin\r\n- win_unicode_console streams, wrapping\r\n- colorama streams again, wrapping\r\n- the regular Python stdout/stderr objects\r\n\r\nMaybe that combination causes a problem!\r\n\r\nPython 3.6 effectively integrated win_unicode_console into the standard streams, so we can skip that layer of the stack, which might avoid this problem.\r\n\r\nIt's also possible that we're missing some teardown code that's needed in the embedded use case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381755855",
    "html_url": "https://github.com/ipython/ipython/issues/11094#issuecomment-381755855",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11094",
    "id": 381755855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTc1NTg1NQ==",
    "user": {
      "login": "dnut",
      "id": 15116250,
      "node_id": "MDQ6VXNlcjE1MTE2MjUw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15116250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dnut",
      "html_url": "https://github.com/dnut",
      "followers_url": "https://api.github.com/users/dnut/followers",
      "following_url": "https://api.github.com/users/dnut/following{/other_user}",
      "gists_url": "https://api.github.com/users/dnut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dnut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dnut/subscriptions",
      "organizations_url": "https://api.github.com/users/dnut/orgs",
      "repos_url": "https://api.github.com/users/dnut/repos",
      "events_url": "https://api.github.com/users/dnut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dnut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T21:28:44Z",
    "updated_at": "2018-04-16T21:28:44Z",
    "author_association": "NONE",
    "body": "> Python 3.6 effectively integrated win_unicode_console into the standard streams, so we can skip that layer of the stack, which might avoid this problem.\r\n\r\nOn the same Windows machine, using Python 3.6, it works as expected without hanging, so maybe you're onto something.\r\n\r\nUnfortunately, my application depends on a package written in Python 2, but for the time being I have a workaround that effectively does this:\r\n```python\r\nimport colorama\r\nimport IPython\r\nimport sys\r\n\r\norig_stdout = sys.stdout\r\ncolorama.init()\r\nsys.stdout = orig_stdout\r\nIPython.embed()\r\n```"
  }
]
