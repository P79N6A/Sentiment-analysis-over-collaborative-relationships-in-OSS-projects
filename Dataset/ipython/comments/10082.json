[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265464646",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265464646",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265464646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTQ2NDY0Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T14:43:50Z",
    "updated_at": "2016-12-07T14:43:50Z",
    "author_association": "MEMBER",
    "body": "Does `%xdel a` remove it? Once we have displayed something, you need our machinery to get rid of it."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265483184",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265483184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265483184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTQ4MzE4NA==",
    "user": {
      "login": "jboucasier",
      "id": 18445637,
      "node_id": "MDQ6VXNlcjE4NDQ1NjM3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/18445637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboucasier",
      "html_url": "https://github.com/jboucasier",
      "followers_url": "https://api.github.com/users/jboucasier/followers",
      "following_url": "https://api.github.com/users/jboucasier/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboucasier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboucasier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboucasier/subscriptions",
      "organizations_url": "https://api.github.com/users/jboucasier/orgs",
      "repos_url": "https://api.github.com/users/jboucasier/repos",
      "events_url": "https://api.github.com/users/jboucasier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboucasier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T15:48:12Z",
    "updated_at": "2016-12-07T15:48:29Z",
    "author_association": "NONE",
    "body": "Yes it does. If I do a `del a` and after a `%xdel _4`, it works too.\r\n\r\n(I am the guy who ask Carreau by mail about this behavior)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265535328",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265535328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265535328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTUzNTMyOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T18:47:17Z",
    "updated_at": "2016-12-07T18:47:17Z",
    "author_association": "MEMBER",
    "body": "It's still unclear to my why we keep track of _N in the hidden namespace. for `_,__,___` it make sens as we shift them around. But I believe for _N it's not necessary. So I would lean toward this being a bug. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265751817",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265751817",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265751817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTc1MTgxNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T14:25:45Z",
    "updated_at": "2016-12-08T14:25:45Z",
    "author_association": "MEMBER",
    "body": "The hidden namespace means things don't show up when you do `%whos`. I looked into making it a set years ago, but there was some issue - possibly that if you explicitly set a variable to a value, you want it to be visible, even if the name would normally be hidden."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265822180",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265822180",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265822180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTgyMjE4MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T18:53:03Z",
    "updated_at": "2016-12-08T18:53:03Z",
    "author_association": "MEMBER",
    "body": "> The hidden namespace means things don't show up when you do %whos. I looked into making it a set years ago, but there was some issue - possibly that if you explicitly set a variable to a value, you want it to be visible, even if the name would normally be hidden.\r\n\r\nWell I get it's there to _hide_ it. But if it's _also_ in user_ns then user_ns_hidden would be a weakref dict, right ? is (AFAICU) still work, but don't keep object around if they get deleted"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265873291",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265873291",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265873291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTg3MzI5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T22:20:48Z",
    "updated_at": "2016-12-08T22:20:48Z",
    "author_association": "MEMBER",
    "body": "I don't at the moment see any reason why a weakrefdict wouldn't work, but we should nonetheless check fairly carefully if you want to implement it."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/265890080",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-265890080",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 265890080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTg5MDA4MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T23:44:04Z",
    "updated_at": "2016-12-08T23:44:04Z",
    "author_association": "MEMBER",
    "body": "Hum... you can't weakref core objects like `dicts` and `list` (or actually any object that cannot define a `__weakref__` attribute AFAICT from stackoverflow). \r\n\r\nThat's... problematic. That would require a bigger refactor. \r\n\r\nI can see us \"faking\" a weakref by actually keeping an actual ref (that, we can)  and for the pool of non-weakrefable objects, drop them when the count is 1. We can do that on every dict update.\r\n\r\nThe other annoying thing is that there are no method to check if an object is weakrefable. It just throw a TypeError."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/266004480",
    "html_url": "https://github.com/ipython/ipython/issues/10082#issuecomment-266004480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10082",
    "id": 266004480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjAwNDQ4MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-09T12:39:59Z",
    "updated_at": "2016-12-09T12:39:59Z",
    "author_association": "MEMBER",
    "body": "> I can see us \"faking\" a weakref\r\n\r\nI can see us dealing with weird, confusing bugs. ;-) I think the cure's worse than the disease here. We've long recommended using `%xdel` if you need to expunge all of IPython's internal references to an object."
  }
]
