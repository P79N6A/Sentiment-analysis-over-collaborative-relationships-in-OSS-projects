[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55579789",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55579789",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55579789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTc5Nzg5",
    "user": {
      "login": "mblondel",
      "id": 233706,
      "node_id": "MDQ6VXNlcjIzMzcwNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/233706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mblondel",
      "html_url": "https://github.com/mblondel",
      "followers_url": "https://api.github.com/users/mblondel/followers",
      "following_url": "https://api.github.com/users/mblondel/following{/other_user}",
      "gists_url": "https://api.github.com/users/mblondel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mblondel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mblondel/subscriptions",
      "organizations_url": "https://api.github.com/users/mblondel/orgs",
      "repos_url": "https://api.github.com/users/mblondel/repos",
      "events_url": "https://api.github.com/users/mblondel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mblondel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T11:47:38Z",
    "updated_at": "2014-09-15T11:47:38Z",
    "author_association": "NONE",
    "body": "So the question is whether the object a method is called on should be copied before benchmarking the method call if the method has side effects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55615209",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55615209",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55615209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjE1MjA5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T16:18:45Z",
    "updated_at": "2014-09-15T16:18:45Z",
    "author_association": "MEMBER",
    "body": "I don't think %timeit should try to do anything clever with the code you give it. There are all sorts of ways to cache a result (on attributes, globally, functools.lru_cache()...). We can't reasonably work out whether and how code is caching results, and any attempt to get round that will probably break some other code.\n\nIf you know your code is going to cache, it's up to you to either measure just one repeat (using the `-r1 -n1` options to timeit, or the %time magic), or reset the cache inside your timed code:\n\n```\n%%timeit\nself.coef_ = None\nclf.recurrent()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55620462",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55620462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55620462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjIwNDYy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T16:52:00Z",
    "updated_at": "2014-09-15T16:52:00Z",
    "author_association": "MEMBER",
    "body": "This is a known limitation of the timeit line magic. Use the cell magic with the setup line to clear your class state. \n\nThe timeit magic is just a thin wrapper around the timeit module.\nFor complex use case, you should refer to the timeit module documentation, and probably use the module directly. \n\nThough if you think you can add some extra magic to %timeit please feel free to open a PR.\n\nEnvoyé de mon iPhone\n\n> Le 15 sept. 2014 à 13:47, Mathieu Blondel notifications@github.com a écrit :\n> \n> So the question is whether the object a method is called on should be copied before benchmarking the method call if the method has side effects.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55640846",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55640846",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55640846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQwODQ2",
    "user": {
      "login": "MechCoder",
      "id": 1867024,
      "node_id": "MDQ6VXNlcjE4NjcwMjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1867024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MechCoder",
      "html_url": "https://github.com/MechCoder",
      "followers_url": "https://api.github.com/users/MechCoder/followers",
      "following_url": "https://api.github.com/users/MechCoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/MechCoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MechCoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MechCoder/subscriptions",
      "organizations_url": "https://api.github.com/users/MechCoder/orgs",
      "repos_url": "https://api.github.com/users/MechCoder/repos",
      "events_url": "https://api.github.com/users/MechCoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MechCoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T18:59:32Z",
    "updated_at": "2014-09-15T18:59:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Great. But before I try to, I want to know if will be considered useful or not.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55642658",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55642658",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55642658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQyNjU4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T19:12:01Z",
    "updated_at": "2014-09-15T19:12:01Z",
    "author_association": "MEMBER",
    "body": "> But before I try to, I want to know if will be considered useful or not.\n\nDepend what 'it' is. I definitively do use the fact that timeit does not count warm-up time, as usually it is not this thing which is interesting in the end, so a change of behavior will most-likely be refused. \n\nThough, if you decide to \"detect\" that the first run did take much longer and print a warning that the time might be biased, and that one need to be carefull about interpreting the timeing I suppose that would have more chances to be accepted.\n\nIf you have a rough idea, you can even submit a ugly-PR with bunch of badly-written code that say \"here is a proof of concept, do you like it ?\", or a detailed explanation of what you would like to do, then we'll discuss the pros-and cons.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55648117",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55648117",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55648117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQ4MTE3",
    "user": {
      "login": "MechCoder",
      "id": 1867024,
      "node_id": "MDQ6VXNlcjE4NjcwMjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1867024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MechCoder",
      "html_url": "https://github.com/MechCoder",
      "followers_url": "https://api.github.com/users/MechCoder/followers",
      "following_url": "https://api.github.com/users/MechCoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/MechCoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MechCoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MechCoder/subscriptions",
      "organizations_url": "https://api.github.com/users/MechCoder/orgs",
      "repos_url": "https://api.github.com/users/MechCoder/repos",
      "events_url": "https://api.github.com/users/MechCoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MechCoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T19:52:22Z",
    "updated_at": "2014-09-15T19:52:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "By \"it\" I mean the fact that when I find the time for a given method or function in which a given number of loops are run internally, I expect that the runs be independent from each other or give a warning if the runtime of each loop differs a lot (but I'm not sure how to determine \"how much\" is \"too much\"), so that the user is alerted.\n\nBut then on hindsight, it does seem that I'm asking too much from IPython, in that case I'll gladly refrain.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55648706",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55648706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55648706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQ4NzA2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T19:56:54Z",
    "updated_at": "2014-09-15T19:56:54Z",
    "author_association": "MEMBER",
    "body": "I think showing a message if the slowest run was >5x slower than the fastest is reasonable. Making the runs completely independent isn't practical, and not everyone necessarily wants that - as @Carreau said, you might be interested in the 'warm start' timings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55649069",
    "html_url": "https://github.com/ipython/ipython/issues/6471#issuecomment-55649069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6471",
    "id": 55649069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQ5MDY5",
    "user": {
      "login": "MechCoder",
      "id": 1867024,
      "node_id": "MDQ6VXNlcjE4NjcwMjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1867024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MechCoder",
      "html_url": "https://github.com/MechCoder",
      "followers_url": "https://api.github.com/users/MechCoder/followers",
      "following_url": "https://api.github.com/users/MechCoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/MechCoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MechCoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MechCoder/subscriptions",
      "organizations_url": "https://api.github.com/users/MechCoder/orgs",
      "repos_url": "https://api.github.com/users/MechCoder/repos",
      "events_url": "https://api.github.com/users/MechCoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MechCoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-15T19:59:36Z",
    "updated_at": "2014-09-15T19:59:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "sounds good. I'll try taking a stab at it and submit a PR in a few days.\n"
  }
]
