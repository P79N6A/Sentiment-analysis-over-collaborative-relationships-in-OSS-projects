[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/121709507",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-121709507",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 121709507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTcwOTUwNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T18:45:24Z",
    "updated_at": "2015-07-15T18:45:24Z",
    "author_association": "MEMBER",
    "body": "I was thinking it might be summer friendly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/121713849",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-121713849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 121713849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTcxMzg0OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T19:02:01Z",
    "updated_at": "2015-07-15T19:02:01Z",
    "author_association": "MEMBER",
    "body": "haha, fixed. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133864865",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-133864865",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 133864865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg2NDg2NQ==",
    "user": {
      "login": "Achifaifa",
      "id": 5968349,
      "node_id": "MDQ6VXNlcjU5NjgzNDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5968349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Achifaifa",
      "html_url": "https://github.com/Achifaifa",
      "followers_url": "https://api.github.com/users/Achifaifa/followers",
      "following_url": "https://api.github.com/users/Achifaifa/following{/other_user}",
      "gists_url": "https://api.github.com/users/Achifaifa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Achifaifa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Achifaifa/subscriptions",
      "organizations_url": "https://api.github.com/users/Achifaifa/orgs",
      "repos_url": "https://api.github.com/users/Achifaifa/repos",
      "events_url": "https://api.github.com/users/Achifaifa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Achifaifa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T15:23:57Z",
    "updated_at": "2015-08-23T15:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks like something interesting to do, Â¿Do you mind if I work on it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133871478",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-133871478",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 133871478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg3MTQ3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T16:21:14Z",
    "updated_at": "2015-08-23T16:21:14Z",
    "author_association": "MEMBER",
    "body": "It should be pretty easy to do. \n\nI would though wait for 4.1 to be out before working on a 5.0 feature.\n\nYou can though make the PR now, but it might not be merge before we start working on 5.0 which I guess will be around mid-semptember start-of-october ish. \nUp to you. \n\n@minrk what do you think ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133878263",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-133878263",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 133878263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg3ODI2Mw==",
    "user": {
      "login": "Achifaifa",
      "id": 5968349,
      "node_id": "MDQ6VXNlcjU5NjgzNDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5968349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Achifaifa",
      "html_url": "https://github.com/Achifaifa",
      "followers_url": "https://api.github.com/users/Achifaifa/followers",
      "following_url": "https://api.github.com/users/Achifaifa/following{/other_user}",
      "gists_url": "https://api.github.com/users/Achifaifa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Achifaifa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Achifaifa/subscriptions",
      "organizations_url": "https://api.github.com/users/Achifaifa/orgs",
      "repos_url": "https://api.github.com/users/Achifaifa/repos",
      "events_url": "https://api.github.com/users/Achifaifa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Achifaifa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T16:51:41Z",
    "updated_at": "2015-08-23T16:51:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have some free time now, so I'll just issue a PR when I figure it out so I can get it done and work on other stuff :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133879865",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-133879865",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 133879865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg3OTg2NQ==",
    "user": {
      "login": "Achifaifa",
      "id": 5968349,
      "node_id": "MDQ6VXNlcjU5NjgzNDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5968349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Achifaifa",
      "html_url": "https://github.com/Achifaifa",
      "followers_url": "https://api.github.com/users/Achifaifa/followers",
      "following_url": "https://api.github.com/users/Achifaifa/following{/other_user}",
      "gists_url": "https://api.github.com/users/Achifaifa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Achifaifa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Achifaifa/subscriptions",
      "organizations_url": "https://api.github.com/users/Achifaifa/orgs",
      "repos_url": "https://api.github.com/users/Achifaifa/repos",
      "events_url": "https://api.github.com/users/Achifaifa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Achifaifa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T17:16:44Z",
    "updated_at": "2015-08-23T17:40:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Removing the function from IPython/core/magics/extension.py is enough since it's not referenced from anywhere else, right? I haven't found anything else that would end up dead, but asking just in case.\n\nIncidentally, Â¿How can I figure out where is a function called? Â¿Is there some sort of punction or block diagram somewhere? I have made a script that cats every file and then greps for the function, but it seems a bit crappy-ish to me and there must be a better way to do it :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133882221",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-133882221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 133882221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg4MjIyMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T17:50:55Z",
    "updated_at": "2015-08-23T17:50:55Z",
    "author_association": "MEMBER",
    "body": "> Removing the function from IPython/core/magics/extension.py is enough since it's not referenced from anywhere else, right?\n\nThere might be a test lying around somewhere. But that should be about it. \n\n> Incidentally, Â¿How can I figure out where is a function called? Â¿Is there some sort of punction or block diagram somewhere? I have made a script that cats every file and then greps for the function, but it seems a bit crappy-ish to me and there must be a better way to do it :)\n\nMost of the time I grep also:\n\n```\n$ grep -r install_ext **.py **.txt **.rst\nIPython/core/extensions.py:    def install_extension(self, url, filename=None):\nIPython/core/magics/extension.py:    def install_ext(self, parameter_s=''):\nIPython/core/magics/extension.py:            %install_ext https://bitbucket.org/birkenfeld/ipython-physics/raw/d1310a2ab15d/physics.py\nIPython/core/magics/extension.py:        warn(\"%install_ext` is deprecated, please distribute your extension \"\nIPython/core/magics/extension.py:            filename = self.shell.extension_manager.install_extension(args,\nIPython/core/tests/test_magic.py:        _ip.magic(\"install_ext %s\" % url)\ndocs/source/interactive/magics-generated.txt:.. magic:: install_ext\ndocs/source/interactive/magics-generated.txt:        %install_ext https://bitbucket.org/birkenfeld/ipython-physics/raw/d1310a2ab15d/physics.py\ndocs/source/whatsnew/github-stats-0.13.rst:* :ghpull:`1419`: Add %install_ext magic function.\ndocs/source/whatsnew/github-stats-0.13.rst:* :ghissue:`1419`: Add %install_ext magic function.\ndocs/source/whatsnew/version0.13.rst:* **%install_ext**: A new magic function to install an IPython extension from\ndocs/source/whatsnew/version0.13.rst:  a URL. E.g. ``%install_ext\n```\n\n(`**.smth` is fish shell syntax, you can use `*` in bash) \n\nYou might also want to drop a file describing that it has been removed in `docs/source/whatsnew/pr` that describe the changes. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133905295",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-133905295",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 133905295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzkwNTI5NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-23T19:22:19Z",
    "updated_at": "2015-08-23T19:22:19Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what the timeline is for 5.0. For compatibility-breaking things like this that have minimal benefit, I'd want to wait for at least a compelling _new_ thing before starting the 5.0 fork.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/216372529",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-216372529",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 216372529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjM3MjUyOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T21:39:32Z",
    "updated_at": "2016-05-02T21:39:32Z",
    "author_association": "MEMBER",
    "body": "closed by #8763 \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242269690",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-242269690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 242269690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI2OTY5MA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T03:08:21Z",
    "updated_at": "2016-08-25T03:08:21Z",
    "author_association": "MEMBER",
    "body": "Is the reason why it was deprecated and removed because it's inclusion demanded relying on setuptools as described https://github.com/ipython/ipython/issues/5742 (referencing https://github.com/ipython/ipython/pull/4673)? \n\nBased on the recent pro setuptools statements found in https://github.com/jupyter/nbconvert/pull/352 by the strongest opponents of including setuptools in ipython (@minrk @takluyver), perhaps the `%install_ext` magic could be revived with better better safety and reproducibility aspects through the use of setuptools now that it does not affect `sys.path` by default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242276625",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-242276625",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 242276625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI3NjYyNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T04:11:15Z",
    "updated_at": "2016-08-25T04:11:15Z",
    "author_association": "MEMBER",
    "body": "> Based on the recent pro setuptools statements found in jupyter/nbconvert#352 by the strongest opponents of including setuptools in ipython (@minrk @takluyver), perhaps the %install_ext magic could be revived with better better safety and reproducibility aspects through the use of setuptools now that it does not affect sys.path by default.\n\nNo, nothing related to that; see among other thread of August first [on IPython-dev](https://mail.scipy.org/pipermail/ipython-dev/2016-August/017233.html), quoting myself:\n\n---\n\nAll the use case of install_ext are covered by pip.\nInstall_ext has also a lot of issues:\n- less secure than pip [can of euphemism to say gigantic potential\n  security nightmare]\n- no way to \"uninstall_ext\"\n- no way to \"upgrade ext\"\n- no way to express versions\n- no way to list extensions.\n- no way to express dependencies.\n\nI think you see the pattern... improving install_ext was reinventing\nmanaging packages\nAnd as an IPython extension is \"just\" a python module that define some\nmagics methods, we now recommend\nthat extension should just be packages on PyPI.\n\nIf you find that publishing a package is too hard, I would suggest\nhaving a look at flit[1]\n\n1: https://pypi.python.org/pypi/flit\n\n---\n\nNote that \"install_ext\" is removed, not \"load_ext\" there are often a confusion with user. \n\n`%install_ext` is an historical artefact from a time were packaging was harder than today. \nThe answer now is \"use pip\", (or conda...whatever), all the functionality that people require from install_ext should be in package manager and are one less things we have to care about.  \n\nOne of the thing we might want to look at is how to invoke the right pip (or conda) from within a python kernel. But there is already an issue for that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242277254",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-242277254",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 242277254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI3NzI1NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T04:18:01Z",
    "updated_at": "2016-08-25T04:29:18Z",
    "author_association": "MEMBER",
    "body": "See https://github.com/ipython/ipython/pull/8601 as well as original post [on Mailing list](https://mail.scipy.org/pipermail/ipython-dev/2015-July/016689.html)\n\nEdit: if you're coming here after reading https://penandpants.com/2012/11/03/wanted-testing-frameworks-in-the-ipython-notebook/, you can have a look at  https://github.com/taavi/ipython_nose you should be able to install with : \n\n``` bash\npip install git+https://github.com/taavi/ipython_nose\n```\n\nor see [`ipython_doctester`](https://pypi.python.org/pypi/ipython_doctester/)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242319700",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-242319700",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 242319700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMxOTcwMA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T08:46:57Z",
    "updated_at": "2016-08-25T08:48:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just one aspect of install_ext isn't covered: that extensions added via `install_ext` were available in all kernels, extensions added via pip/conda have to be added (and updated) in all individual kernels (I use envs as kernels and have a lot of them :-()\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242451138",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-242451138",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 242451138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ1MTEzOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T16:25:47Z",
    "updated_at": "2016-08-25T16:25:47Z",
    "author_association": "MEMBER",
    "body": "> Just one aspect of install_ext isn't covered: that extensions added via install_ext were available in all kernels, extensions added via pip/conda have to be added (and updated) in all individual kernels (I use envs as kernels and have a lot of them :-()\n\nYou can use `pip install --prefix`with the right things on your $PATH that will work covers this use case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242721678",
    "html_url": "https://github.com/ipython/ipython/issues/8634#issuecomment-242721678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8634",
    "id": 242721678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjcyMTY3OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-26T12:26:08Z",
    "updated_at": "2016-08-26T12:26:08Z",
    "author_association": "MEMBER",
    "body": "With conda environments, `pip install --user` will work, because conda envs still see packages in your user site-packages (unless you've manually turned this off, as I have). If we keep adding `~/.ipython/extensions` to sys.path for loading extensions, you could also `pip install -t ~/.ipython/extensions`.\n\nI agree that it's a bit inconvenient, but not enough to warrant making our own package manager.\n"
  }
]
