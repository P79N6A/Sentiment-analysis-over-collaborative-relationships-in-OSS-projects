[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7314268",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7314268",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7314268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTQyNjg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-27T19:40:09Z",
    "updated_at": "2012-07-27T19:40:09Z",
    "author_association": "MEMBER",
    "body": "In terms of the UI, could you summarize what the current special marks are?\n\nI don't know how sophisticated we want to get.  What about using something really simple, like using a markdown cell with an `<hr>` to indicate slides.  The thing that is nice about that is that it looks good in the regular notebook.  But I agree that if we want to use a more sophisticated approach, using metadata is a good idea.  Also, I think we want to keep things really simple so it is trivial to use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7314585",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7314585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7314585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTQ1ODU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-27T19:53:53Z",
    "updated_at": "2012-07-27T19:53:53Z",
    "author_association": "MEMBER",
    "body": "Right now, the used separator is `#====` for code cell\n`<!--#====-->`for markdown to be invisible.\nIf I remember correctly, we agreed on not using special cell for separation.\n\nJust see this PR as an area of discusion of\n- first, what do me want the slideshow to be able to do\n- second, what should be the UI/marks\n- then i'll do something and force push as the code right now is just a big hack.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7328630",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7328630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7328630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjg2MzA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-28T00:11:37Z",
    "updated_at": "2012-07-28T00:11:37Z",
    "author_association": "MEMBER",
    "body": "My memory is fuzzy; I don't remember agreeing to not use a special cell type for this.  I don't like the idea of having to put comments the the cells - it gets in the way of using the notebook as a regular notebook and it looks ugly.  We need to get other's comments, but as of right now I see two options:\n1. Just use a markdown cell with `<hr>` as the slide separator.  This is simple and also looks good as a regular notebook.  It is also easy to work with a move cells around between slides.\n2. Go all of the way and attach metadata to cells to specify how they function in the slideshow.  This would be much more complex and require some UI work to implement the editing of that metadata.  It would also be more difficult to see where slide boundaries are in regular mode and would be difficult to move cells around.\n\nI guess I favor the simplified approach.  Instead of using just a markdown cell with `<hr>` we could have users use a div with some custom class.  We could use that class to style the slide boundary and could also use HTML data attributes to allow the user to pass in options for that slide.  Or I suppose we could wrap that logic into Javascript and create a Python `Slide` object that a user creates in a cell.  Hmmm...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7332014",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7332014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7332014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzIwMTQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-28T10:29:03Z",
    "updated_at": "2012-07-28T10:29:03Z",
    "author_association": "MEMBER",
    "body": "> My memory is fuzzy; I don't remember agreeing to not use a special cell type for this. \n\nSorry, the \"we\" where we at SciPy\n\n> Just use a markdown cell with `<hr>` as the slide separator. This is simple and also looks good as a regular notebook. It is also easy to work with a move cells around between slides.\n\nbut it takes a non negligeable amount of space.\n\nIf I remember correctly, at scipy we agreed on the fact that both special cells and comment will make people copy their notebook only to get one for presentation. \n\nWhat I would do is something closer that what github does when you want to edit comment. when over in the upper right corner of a cell is show 2 buttons. \n\nSo imagine the following :\n- in the menubar an 'edit slides mode' button\n- when clicked those button apear.\n- you can toggle/cycle  them.\n  - first cell of a group\n  - next stop inside a group.\n  - cell where [ `input should not be shown` | `output should not be shown` | `out should be shown in the step after input` | `inpu t should be shown line by line`|`cell not show at all`]\n- it changes the metadata.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7377667",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7377667",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7377667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzc2Njc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-30T18:46:12Z",
    "updated_at": "2012-07-30T18:46:12Z",
    "author_association": "MEMBER",
    "body": "Sent from my iPad\n\nOn Jul 28, 2012, at 3:29 AM, Bussonnier Matthiasreply@reply.github.com wrote:\n\n> > My memory is fuzzy; I don't remember agreeing to not use a special cell type for this. \n> \n> Sorry, the \"we\" where we at SciPy\n\nAh, OK\n\n> > Just use a markdown cell with `<hr>` as the slide separator. This is simple and also looks good as a regular notebook. It is also easy to work with a move cells around between slides.\n> \n> but it takes a non negligeable amount of space.\n> \n> If I remember correctly, at scipy we agreed on the fact that both special cells and comment will make people copy their notebook only to get one for presentation. \n\nYes, this is a good point and I think you are right that using metadata is a better option.\n\n> What I would do is something closer that what github does when you want to edit comment. when over in the upper right corner of a cell is show 2 buttons. \n> \n> So imagine the following :\n> - in the menubar an 'edit slides mode' button\n> - when clicked those button apear.\n> - you can toggle/cycle  them.\n>   - first cell of a group\n>   - next stop inside a group.\n>   - cell where [ `input should not be shown` | `output should not be shown` | `out should be shown in the step after input` | `inpu t should be shown line by line`|`cell not show at all`]\n\nI think we should keep it as simple as possible.  As a first iteration, I think we should do something that only allows a user to indicate the first cell of each slide.  That is really the I minimal data needed to present a notebook as a presentation, and it shouldnt take a user more than a few seconds to set that up.\n\n> - it changes the metadata.\n\nSounds good.  Why don't you see what you can do for a ui for this as you describe.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/2193#issuecomment-7332014\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7393338",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7393338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7393338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTMzMzg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-31T09:19:07Z",
    "updated_at": "2012-07-31T09:19:07Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg \n\ncan you tell me what you think about an UI like this ? https://github.com/Carreau/ipython/compare/_pmode\n( it's a draft branch, so there is no need to review the code)\n\nthere are button on the top right of the cells, that can cycle through states, reflect this state in metadata, and fade away when in default state, stay visible otherwise.\n\nOf course this should be visible only when edit presentation mode is activated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7418813",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7418813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7418813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTg4MTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T05:41:52Z",
    "updated_at": "2012-08-01T05:41:52Z",
    "author_association": "MEMBER",
    "body": "I will have a look at this tomorrow.\n\nOn Tue, Jul 31, 2012 at 2:19 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> @ellisonbg\n> \n> can you tell me what you think about an UI like this ? https://github.com/Carreau/ipython/compare/_pmode\n> ( it's a draft branch, so there is no need to review the code)\n> \n> there are button on the top right of the cells, that can cycle through states, reflect this state in metadata, and fade away when in default state, stay visible otherwise.\n> \n> Of course this should be visible only when edit presentation mode is activated.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/2193#issuecomment-7393338\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7671523",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7671523",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7671523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzE1MjM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T00:11:28Z",
    "updated_at": "2012-08-12T00:11:28Z",
    "author_association": "MEMBER",
    "body": "I am trying out the simply UI you created.  Not sure if I am seeing the right thing.  I see 3 buttons that stay in the same place on the page (upper R corner).  They are labeled \"button 1\", \"button 2\" and \"button 3\".  Not obvious what they do.  Are you thinking that these buttons would set the relevant metadata on the currently active cell?  The only problem I have with that approach is that it takes lots of clicks to do things: you have to go back and forth to activate cells and click the buttons.  What about buttons that appear in the R part of each cell's input area when slide show edit mode is enabled?  That way it is trivial to config the metadata for that cell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7675383",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7675383",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7675383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzUzODM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T12:51:13Z",
    "updated_at": "2012-08-12T12:51:13Z",
    "author_association": "MEMBER",
    "body": "hum, weird. \nYou should see 3 buttons on the upper-right corner of each cell.\nI had this bug, I may have forgot some commits.\ni'll check that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7675469",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7675469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7675469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzU0Njk=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T13:03:32Z",
    "updated_at": "2012-08-12T13:03:32Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2100752) (merged faedbd7f into 31afb62f).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7675486",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7675486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7675486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzU0ODY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T13:05:49Z",
    "updated_at": "2012-08-12T13:05:49Z",
    "author_association": "MEMBER",
    "body": "Please Try again now. \nshould look like this :\n![Imgur](http://i.imgur.com/GD0e4.png)\n\nButtons shows only when hovered, or not in default state.\n\nCode is not worth looking at, this is a junk branch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7677385",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7677385",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7677385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzczODU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T16:40:31Z",
    "updated_at": "2012-08-12T16:40:31Z",
    "author_association": "MEMBER",
    "body": "OK this is better and I see roughly what you are saying I should.  Comments:\n- There is a bug with the hover in/out.  Often after I unhover, the buttons\n  stay showing.  It seems somehow related to if I have clicked on a button.\n  When the notebook first loaded, all the buttons on all the cells were\n  showing.\n- I am not sure we want the buttons to always be active.  What about a\n  \"slideshow edit\" mode that shows the buttons for each cell _always_.  That\n  would make it easier to see how each cell is configured without hovering\n  over it.  This would also allow us to use this area of the cells for other\n  UIs in different modes.\n- The different button states seem a bit complex, and it is not at all\n  obvious what each state does.  Whatever we do, we need to develop a UI that\n  requires no explanation.  Can you summarize what each state does so we can\n  think of how to simplify the model.  Simplicity is key in the notebook.\n- Overall, I think this is a good place to put this UI and I like the\n  button idea.\n- In my browser (Chrome OS X) the bottoms of the buttons are cutoff by\n  something so you can't see their lower border.  Maybe make the buttons\n  slightly smaller?\n\nOn Sun, Aug 12, 2012 at 6:05 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Please Try again now.\n> should look like this :\n> [image: Imgur]https://a248.e.akamai.net/camo.github.com/772789c913065ca879d7ca42bb9a919e32c373b7/687474703a2f2f692e696d6775722e636f6d2f47443065342e706e67\n> \n> Buttons shows only when hovered, or not in default state.\n> \n> Code is not worth looking at, this is a junk branch.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2193#issuecomment-7675486.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7678112",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-7678112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 7678112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzgxMTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T17:56:22Z",
    "updated_at": "2012-08-12T17:56:22Z",
    "author_association": "MEMBER",
    "body": "> - There is a bug with the hover in/out.  Often after I unhover, the buttons\n>   stay showing.  It seems somehow related to if I have clicked on a button.\n>   When the notebook first loaded, all the buttons on all the cells were\n>   showing.\n\nYes, this is something I tried, see if I can get the button to stick in some state and not in others. \n\n> - I am not sure we want the buttons to always be active.  What about a\n>   \"slideshow edit\" mode that shows the buttons for each cell _always_.  That\n>   would make it easier to see how each cell is configured without hovering\n>   over it.  This would also allow us to use this area of the cells for other\n>   UIs in different modes.\n\nA slideshow edit mode was planed of course :-)\n\n> - The different button states seem a bit complex, and it is not at all\n>   obvious what each state does.  Whatever we do, we need to develop a UI that\n>   requires no explanation.  Can you summarize what each state does so we can\n>   think of how to simplify the model.  Simplicity is key in the notebook.\n\nThat was just to try. Id does not \"do\" anything right now. If I remember correctly\n- Group Stop  == 'new header slide'\n- Slide Stop == 'show next cell af current slide'\n- In, Out  : when showing a cell show In, then Out, \n- In & Out  : when showing a cell show In and Out at the same time\n- In  : when showing a cell show only In\n\n... you see the idea\n\n> - Overall, I think this is a good place to put this UI and I like the\n>   button idea.\n\nGreat, then i'll start to write something that does this but in a clean way.\n\n> - In my browser (Chrome OS X) the bottoms of the buttons are cutoff by\n>   something so you can't see their lower border.  Maybe make the buttons\n>   slightly smaller?\n\nI do have this on chrome dev, but only for toolbar for a while... no idea why.\nwe'll tweek the css later.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8998752",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-8998752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 8998752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5OTg3NTI=",
    "user": {
      "login": "bnmnetp",
      "id": 51115,
      "node_id": "MDQ6VXNlcjUxMTE1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/51115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bnmnetp",
      "html_url": "https://github.com/bnmnetp",
      "followers_url": "https://api.github.com/users/bnmnetp/followers",
      "following_url": "https://api.github.com/users/bnmnetp/following{/other_user}",
      "gists_url": "https://api.github.com/users/bnmnetp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bnmnetp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bnmnetp/subscriptions",
      "organizations_url": "https://api.github.com/users/bnmnetp/orgs",
      "repos_url": "https://api.github.com/users/bnmnetp/repos",
      "events_url": "https://api.github.com/users/bnmnetp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bnmnetp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-28T23:57:10Z",
    "updated_at": "2012-09-28T23:57:10Z",
    "author_association": "NONE",
    "body": "This is brilliant.\nI've been using ipython notebooks in two of my courses this fall to prepare lecture materials.  (Computer Graphics and Computer Networking)  Its so great to be able to demonstrate a lot of the vector applications in computer graphics without getting bogged down in my arithmetic errors on the whiteboard.  \n\nI've been looking for some way to make the material a bit more presentable than simply scrolling up and down in the browser.  Then, I found this pull request and have been experimenting and running my notebooks with it and its great.  I hope this is accepted and added to the main ipython distribution soon.\n\nBrad\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9001923",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9001923",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9001923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDE5MjM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-29T08:22:41Z",
    "updated_at": "2012-09-29T08:22:41Z",
    "author_association": "MEMBER",
    "body": "@bnmnetp Happy you got it running :-) we'll be happy to have feedback on it. \nIt is planned to add it, but it needs refactor under the hood :-)\n\nIf you use smth like this often, feel free to comment on what you wish you had, or what is wrong/annoying.\nAt least it will give us a clear view of what we have to achieve.\n\nThanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9083679",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9083679",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9083679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODM2Nzk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T19:30:36Z",
    "updated_at": "2012-10-02T19:30:36Z",
    "author_association": "MEMBER",
    "body": "Now that the toolbar JS PR is merged this one can hopefully move forward.  I am giving a talk using the notebook at PyData NY on Oct 26-28.  Would love to use this to give the talk :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9084044",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9084044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9084044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODQwNDQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T19:41:15Z",
    "updated_at": "2012-10-02T19:41:15Z",
    "author_association": "MEMBER",
    "body": "I won't have much time to work on it a lot before end of next week, but i'll do my best to give you at least a working experimental branch. \n\nFrom SciPy example, I know more or less what have to be done for it to be usable, and slide to be changed with keyboard or remote control. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9084428",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9084428",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9084428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODQ0Mjg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T19:52:51Z",
    "updated_at": "2012-10-02T19:52:51Z",
    "author_association": "MEMBER",
    "body": "About the design.  could imagine that in the long run we will want many\ndifferent metadata attributes:for controlling slide shows.  I think we\nshould develop this in an iterative manner:\n- Let's start with the simplest possible metadata attribute: \"newslide\".\n  With that one alone, you can give slide shows.\n- Let's develop the UI that goes with that and make sure we like the design.\n- Let's merge that simple version to get it in people's hands.\n- Then let's add more features based on the feedback we get.\n\nAnother thing we should think about = some way of namespacing the slideshow\nmode metadata attributes.  I can imagine two ways:\n- Use a subdict name \"slideshow\"\n- Using name prefixes like \"slideshow-newslide\"\n\nIt would be good to standardize on this now.  @minrk @fperez @takluyver,\nany thoughts on this?\n\nOn Tue, Oct 2, 2012 at 12:41 PM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> I won't have much time to work on it a lot before end of next week, but\n> i'll do my best to give you at least a working experimental branch.\n> \n> From SciPy example, I know more or less what have to be done for it to be\n> usable, and slide to be changed with keyboard or remote control.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2193#issuecomment-9084044.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9084633",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9084633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9084633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODQ2MzM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T19:58:45Z",
    "updated_at": "2012-10-02T19:58:45Z",
    "author_association": "MEMBER",
    "body": "Please have a look at this UI prototype. https://github.com/ipython/ipython/pull/2333\n\n> Another thing we should think about = some way of namespacing the slideshow\n> mode metadata attributes.  I can imagine two ways:\n> - Use a subdict name \"slideshow\"\n> - Using name prefixes like \"slideshow-newslide\"\n\nI vote for #1. \n\nThe main problem I have now with the UI to edit metadata is how do I add a button to every cell if the UI is already instanciated. I'm still thinking of this one, and haven't found a good way to do it, with a clean api to add buttons.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9084822",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9084822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9084822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODQ4MjI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T20:03:56Z",
    "updated_at": "2012-10-02T20:10:14Z",
    "author_association": "MEMBER",
    "body": "OK I am fine with the subdict approach for namespacing.\n\nAre you thinking that the slideshow mode will be an extension, or something builtin?  If it is builtin, then let's just create a methods on `Cell` called `show_slideshow_ui` and `hide slideshow_ui`.  Would something like that work?  Or are you thinking that you want a more generic way of adding UI buttons to cells.  If that is the case, then let's create a div in the upper R corner of a cell when it is created and make a simple ui for adding buttons to that area.  We could then have `show_buttons` and `hide_buttons` to hide or show all of them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9085200",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9085200",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9085200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODUyMDA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T20:15:26Z",
    "updated_at": "2012-10-02T20:15:26Z",
    "author_association": "MEMBER",
    "body": "I would like a more generic way of editting metadata/adding button to cell. Nothing fancy but the ability to register a button that :\n  1) toggle state (good candidate for new slide)\n  2) cycle state ? drop down list ? (to see) \n  3) call custom function that does what it have to do.\n  4) others, but i don't remember.\n\nIn #2333 the only button is a type 3 button that pops the raw metadata as a dict, and edit it yourself. \n\nIt works great. and the toggling is css only by adding a simple class to `<body>`. So no need to cycle through cells. \nmy only problem is designing an api to register such a button function to all cell at once. Both already created cells, and cels that would be created later, without having to reload the notebook. \n\nIt is just the limit of my JS knowledge. And i'm reluctant to do something that will both loop through all notebook cells, and modify Cell class. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9086025",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9086025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9086025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODYwMjU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T20:39:49Z",
    "updated_at": "2012-10-02T20:39:49Z",
    "author_association": "MEMBER",
    "body": "I think I would prefer to keep the UI simple and focused on presenting only the slideshow information for now.  We can consider the general UI when the next set of usage cases comes up and we see exactly what it looks like.  I worry that if we overdesign this now, we will have to redesign it later when we see exactly how it is used.\n\nBut if you want to tackle the general issue of cell level UIs and you see a nice way of handling it I would go for it.\n\nI don't think we want to have the user edit the raw JSON dict in the UI.  We want something that is more button and menu driven.  Also, something that is keyboard shortcut friendly.  Ha - wait I have an idea.  The simplest way of getting this out the door would be to have no UI at all - just use a simple keyboard shortcut for toggling the newslide attribute.  We could use our notification area to provide feedback like \"New Slide On\" and \"New Slide Off\".  The only problem is that we couldn't look at the notebook as a whole and easily tell which cells are the start of new slides.  But it might be worth thinking more about this approach.  \n\nI am fine with iterating through cells like you describe.  Don't really see another way of doing it.  You could put helper methods on the Notebook object that do the iteration for you - we already have methods like that - such as run all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9096280",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9096280",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9096280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTYyODA=",
    "user": {
      "login": "aterrel",
      "id": 30583,
      "node_id": "MDQ6VXNlcjMwNTgz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/30583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aterrel",
      "html_url": "https://github.com/aterrel",
      "followers_url": "https://api.github.com/users/aterrel/followers",
      "following_url": "https://api.github.com/users/aterrel/following{/other_user}",
      "gists_url": "https://api.github.com/users/aterrel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aterrel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aterrel/subscriptions",
      "organizations_url": "https://api.github.com/users/aterrel/orgs",
      "repos_url": "https://api.github.com/users/aterrel/repos",
      "events_url": "https://api.github.com/users/aterrel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aterrel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T05:39:04Z",
    "updated_at": "2012-10-03T05:39:04Z",
    "author_association": "NONE",
    "body": "I've played around with the branch a bit. The hand editing the ipython notebook is clunky, but it is a great working draft.  I could imagine a menu button that looks for the frame separators and pops up if they exist (or just a dropdown under View).\n\nAs far as visual component for the slides, I've been putting a horiztonal rule between each slide.  That way for printing it makes since as one slide to the next rather than a long uninterrupted document.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9116600",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9116600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9116600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTY2MDA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T18:21:05Z",
    "updated_at": "2012-10-03T18:21:05Z",
    "author_association": "MEMBER",
    "body": "On Tue, Oct 2, 2012 at 12:58 PM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Another thing we should think about = some way of namespacing the slideshow\n> mode metadata attributes. I can imagine two ways:\n> - Use a subdict name \"slideshow\"\n> - Using name prefixes like \"slideshow-newslide\"\n>   \n>   I vote for #1 https://github.com/ipython/ipython/issues/1.\n> \n> Hmm... Let's think about it for a sec: do we really envision needing full\n> nested dicts?  Why not make a simple convention that we use dots to\n> simulate nesting, just like in python, without the need to actually create\n> a new data structure?\n\nI'm thinking of the metadata as having the following structure: keys can be\ndotted, case in which they automatically create a nested namespace (much\nlike our config objects do).  Furthermore, keys can have a value or not:\nkeys without a value are functionally equivalent to having an implicit\n'True' value.  This corresponds to using a defaultdict data structure with\n`lambda : True` as the factory.\n\nThis would let us simply set `slideshow.newslide` as a key for new slides,\nyet support more complex scenarios with minimal overhead.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9119292",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9119292",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9119292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTkyOTI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T19:40:38Z",
    "updated_at": "2012-10-03T19:40:38Z",
    "author_association": "MEMBER",
    "body": "I was thinking along these lines at first, but then starting to think about\nthe following:\n- It becomes difficult to query sets of attributes.  For example, you could\n  test to see if any \"slideshow\" attributes are set with a simple call to the\n  JS equivalent of haskey('slideshow').  In the flat dotted approach, we have\n  to write our own code for that logic - basically rewriting haskey for our\n  flat dotted namespace.\n- It becomes easy to add/remove a full subdict easily in a way that doesn't\n  require knowing anything about the inner keys.\n- We don't really have control over what people put into the metadata dict\n- eventually someone _will_ put subdicts there.\n- Consumers/users of metadata can simply pull off the subdict they need and\n  work with that.  Otherwise they have to a) use the entire metadata dict or\n  b) read individual attributes.\n- I imagine we will run into cases where there are default values of\n  metadata attributes and then we will need to be able to merge default\n  values with overrides.  If we go with subdicts, it is easy to call $.extend\n  on the subdicts.  Doing so on the entire metadata dict would require us to\n  first merge together all possible defaults into a single dict.\n\nOn Wed, Oct 3, 2012 at 11:21 AM, Fernando Perez notifications@github.comwrote:\n\n> On Tue, Oct 2, 2012 at 12:58 PM, Bussonnier Matthias <\n> notifications@github.com> wrote:\n> \n> > Another thing we should think about = some way of namespacing the\n> > slideshow\n> > mode metadata attributes. I can imagine two ways:\n> > - Use a subdict name \"slideshow\"\n> > - Using name prefixes like \"slideshow-newslide\"\n> > \n> > I vote for #1 https://github.com/ipython/ipython/issues/1.\n> > \n> > Hmm... Let's think about it for a sec: do we really envision needing full\n> > nested dicts? Why not make a simple convention that we use dots to\n> > simulate nesting, just like in python, without the need to actually create\n> > a new data structure?\n> \n> I'm thinking of the metadata as having the following structure: keys can be\n> dotted, case in which they automatically create a nested namespace (much\n> like our config objects do). Furthermore, keys can have a value or not:\n> keys without a value are functionally equivalent to having an implicit\n> 'True' value. This corresponds to using a defaultdict data structure with\n> `lambda : True` as the factory.\n> \n> This would let us simply set `slideshow.newslide` as a key for new slides,\n> yet support more complex scenarios with minimal overhead.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2193#issuecomment-9116600.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9122251",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9122251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9122251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjIyNTE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T21:08:08Z",
    "updated_at": "2012-10-03T21:08:08Z",
    "author_association": "MEMBER",
    "body": "the distinction key/ attribute make no sens in js :\n\n```\n> a = {}\nObject\n> a['whatever']='data'\n\"data\"\n> a.whatever\n\"data\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9122391",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9122391",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9122391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjIzOTE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T21:11:51Z",
    "updated_at": "2012-10-03T21:11:51Z",
    "author_association": "MEMBER",
    "body": "Right, but Fernando is not proposing making the subdict have attribute\nstyle access - he is proposing having the keys of the top level metadata\ndict be _strings_ with forms like `a.b`.\n\nOn Wed, Oct 3, 2012 at 2:08 PM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> the distinction key/ attribute make no sens in js :\n> \n> > a = {}\n> > Object\n> > a['whatever']='data'\n> > \"data\"\n> > a.whatever\n> > \"data\"\n> \n>  —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2193#issuecomment-9122251.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9122566",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9122566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9122566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjI1NjY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T21:16:45Z",
    "updated_at": "2012-10-03T21:16:45Z",
    "author_association": "MEMBER",
    "body": "@Carreau - that's only true for keys that are valid identifiers, e.g. those without dots, spaces, etc.\n\nFernando's proposal seems to match matplotlib rc, if that has any relevance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9131852",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9131852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9131852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzE4NTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-04T06:27:07Z",
    "updated_at": "2012-10-04T06:27:07Z",
    "author_association": "MEMBER",
    "body": ">  that's only true for keys that are valid identifiers\n\nYes I know that.\n\n> Fernando's proposal seems to match matplotlib rc, if that has any relevance.\n\nI misunderstood.\n\nBut I agree with brian that nested dict are much easier IMHO.\nFor some configuration you could just grab a subkey (eg `metadata.slideshow`) and pass it as is to the slideshow object without having to merge all 'slideshow.smth' keys. This allow extension that would rely on metadata to use the structure they wish in their prefixed subkey. \n\nMore over in one day one extension is so much used that it becomes a `i*nb` standard. It will be easier to maby move it \"outside\" of metadata. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9156179",
    "html_url": "https://github.com/ipython/ipython/pull/2193#issuecomment-9156179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2193",
    "id": 9156179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNTYxNzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-04T20:36:01Z",
    "updated_at": "2012-10-04T20:36:01Z",
    "author_association": "MEMBER",
    "body": "> I think I would prefer to keep the UI simple and focused on presenting only the slideshow information for now. We can consider the general UI when the next set of usage cases comes up and we see exactly what it looks like. I worry that if we overdesign this now, we will have to redesign it later when we see exactly how it is used.\n\nOk, let's go for Presentation only for now. \n\n> But if you want to tackle the general issue of cell level UIs and you see a nice way of handling it I would go for it.\n> \n> I don't think we want to have the user edit the raw JSON dict in the UI. We want something that is more button and menu driven.  \n\nNo of course, raw is not ment for that, but is really powerful to develop. It would be great to have it enabled but css hidden. \n\n> Also, something that is keyboard shortcut friendly. \n\nWe are short on shortcut...\n\n> Ha - wait I have an idea. The simplest way of getting this out the door would be to have no UI at all - just use a simple keyboard shortcut for toggling the newslide attribute. We could use our notification area to provide feedback like \"New Slide On\" and \"New Slide Off\".\n\nFor some cases, I strongly disagree. for 2 reasons. \n- You send a notebook to SO. (this SO is you in 6month for example how do you know which slides are the new one ? Or if you have set one by mistake ? You need a permanent visual feedback( but you raised the point later) .\n- do a select/shortcut cycle is long and repetitive some actions woud be much better on cell level toollbar (I think of copy/execute/edit/cut) and are much more 'touch friendly'\n\nOf course such a per cell toolbar would be hidden by default.\n\n>  The only problem is that we couldn't look at the notebook as a whole and easily tell which cells are the start of new slides. But it might be worth thinking more about this approach.\n> \n> I am fine with iterating through cells like you describe. Don't really see another way of doing it. You could put helper methods on the Notebook object that do the iteration for you - we already have methods like that - such as run all\n\nI'll see what I can do, but i'm low on bandwidth. \n"
  }
]
