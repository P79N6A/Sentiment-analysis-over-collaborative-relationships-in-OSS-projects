[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3650211",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-3650211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 3650211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTAyMTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-25T13:08:44Z",
    "updated_at": "2012-01-25T13:08:44Z",
    "author_association": "MEMBER",
    "body": "This may actually be more of an issue with pyreadline than ipython... @jstenar, does this ring any bells?  Do you think it could be on the pyreadline side?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3657730",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-3657730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 3657730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTc3MzA=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-25T19:54:42Z",
    "updated_at": "2012-01-25T19:54:42Z",
    "author_association": "MEMBER",
    "body": "I don't think so. I thought pyreadline wasn't used in the qtconsole.\n\nEven without pyreadline installed enter stops working after pressing ctrl-c at the raw_input prompt.\nCtrl-break doesn't affect things for me. (This is in the qtconsole, python2.7 32-bit, windows 7 64-bit).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3664285",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-3664285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 3664285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQyODU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T04:39:46Z",
    "updated_at": "2012-01-26T04:39:46Z",
    "author_association": "MEMBER",
    "body": "Sorry @jstenar, I missed the fact that this was on the qtconsole and misinterpreted it.\n\n@m-paradox, I've confirmed the problem on windows, and it does _not_ happen on Linux.  I also updated to the current pyside (1.1.0) and pyzmq (2.1.11) and I still see it, so it's either a pyside or pyzmq bug that persists in their most current versions, or in the qtconsole itself.\n\nAt this point, I'd like to enlist @minrk  and @epatters: any thoughts on what could be going on?  On Linux, hitting `Ctrl-C` during a `raw_input` produces a traceback:\n\n```\nIn [1]: raw_input(\"test: \")\n\ntest: ---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n/home/fperez/tmp/junk/<ipython-input-1-3df6ba257b63> in <module>()\n----> 1 raw_input(\"test: \")\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/zmq/ipkernel.pyc in <lambda>(prompt)\n    249         # raw_input in the user namespace.\n\n    250         if content.get('allow_stdin', False):\n--> 251             raw_input = lambda prompt='': self._raw_input(prompt, ident, parent)\n    252         else:\n    253             raw_input = lambda prompt='' : self._no_raw_input()\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/zmq/ipkernel.pyc in _raw_input(self, prompt, ident, parent)\n    459         while True:\n    460             try:\n--> 461                 ident, reply = self.session.recv(self.stdin_socket, 0)\n    462             except Exception:\n    463                 self.log.warn(\"Invalid Message:\", exc_info=True)\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/zmq/session.pyc in recv(self, socket, mode, content, copy)\n    629             socket = socket.socket\n    630         try:\n--> 631             msg_list = socket.recv_multipart(mode)\n    632         except zmq.ZMQError as e:\n    633             if e.errno == zmq.EAGAIN:\n\n/usr/lib/python2.6/dist-packages/zmq/core/socket.so in zmq.core.socket.Socket.recv_multipart (zmq/core/socket.c:5962)()\n\n/usr/lib/python2.6/dist-packages/zmq/core/socket.so in zmq.core.socket.Socket.recv (zmq/core/socket.c:5596)()\n\n/usr/lib/python2.6/dist-packages/zmq/core/socket.so in zmq.core.socket.Socket.recv (zmq/core/socket.c:5471)()\n\n/usr/lib/python2.6/dist-packages/zmq/core/socket.so in zmq.core.socket._recv_copy (zmq/core/socket.c:1567)()\n\n/usr/lib/python2.6/dist-packages/zmq/core/error.so in zmq.core.error.ZMQError.__init__ (zmq/core/error.c:910)()\n\nKeyboardInterrupt: \n\nIn [2]: \n```\n\nthat seems pretty sensible.  Traceback, then back to normal (we could perhaps catch these and present them more compactly but still, they are technically correct). On Windows, I get no traceback and it hangs as stated above.\n\nWhat I'm not sure right now is if the problem is coming from zmq or our `raw_input`/messaging code... Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35303305",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-35303305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 35303305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzAzMzA1",
    "user": {
      "login": "bennettbrowniowa",
      "id": 4366701,
      "node_id": "MDQ6VXNlcjQzNjY3MDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4366701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bennettbrowniowa",
      "html_url": "https://github.com/bennettbrowniowa",
      "followers_url": "https://api.github.com/users/bennettbrowniowa/followers",
      "following_url": "https://api.github.com/users/bennettbrowniowa/following{/other_user}",
      "gists_url": "https://api.github.com/users/bennettbrowniowa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bennettbrowniowa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bennettbrowniowa/subscriptions",
      "organizations_url": "https://api.github.com/users/bennettbrowniowa/orgs",
      "repos_url": "https://api.github.com/users/bennettbrowniowa/repos",
      "events_url": "https://api.github.com/users/bennettbrowniowa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bennettbrowniowa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T17:09:34Z",
    "updated_at": "2014-02-17T17:09:34Z",
    "author_association": "NONE",
    "body": "This issue has come up several times for us. Ctrl-c while waiting for raw_input() hangs the kernel. We're piloting a CS intro course in 60 schools and have written iPython into the curriculum as part of the Enthought Canopy distribution. Sorry for bumping without contributing, and thank you!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/269317754",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-269317754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 269317754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTMxNzc1NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T12:09:22Z",
    "updated_at": "2016-12-27T12:09:22Z",
    "author_association": "MEMBER",
    "body": "I'm going to attempt migrating this using the bot I'm writing. Sorry for the noise if it does not work, I've tested extensively on test repos, and it works, but one never know.\r\n\r\n@Meeseeksdev[bot] migrate to jupyter/qtconsole"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/269317761",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-269317761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 269317761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTMxNzc2MQ==",
    "user": {
      "login": "meeseeksdev[bot]",
      "id": 24485218,
      "node_id": "MDM6Qm90MjQ0ODUyMTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meeseeksdev%5Bbot%5D",
      "html_url": "https://github.com/apps/meeseeksdev",
      "followers_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2016-12-27T12:09:24Z",
    "updated_at": "2016-12-27T12:09:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done as jupyter/qtconsole#177."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/269318072",
    "html_url": "https://github.com/ipython/ipython/issues/1322#issuecomment-269318072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1322",
    "id": 269318072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTMxODA3Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T12:12:25Z",
    "updated_at": "2016-12-27T12:12:25Z",
    "author_association": "MEMBER",
    "body": "It seem to work :-) I'm now happy. Though it is hardcoded to respond only to a couple of users in a couple of repositories."
  }
]
