[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360299762",
    "html_url": "https://github.com/ipython/ipython/issues/10994#issuecomment-360299762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10994",
    "id": 360299762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI5OTc2Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T22:45:46Z",
    "updated_at": "2018-01-24T22:45:46Z",
    "author_association": "MEMBER",
    "body": "This is an issue with Jupyter/Notebook , or jupyterlab/jupyterlab not ipython/ipython, but we are aware of it, and jupyterlab (that should be officially released soon, but is already available) allows you to choose whether indent is done with space or tab. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360486834",
    "html_url": "https://github.com/ipython/ipython/issues/10994#issuecomment-360486834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10994",
    "id": 360486834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ4NjgzNA==",
    "user": {
      "login": "esternin",
      "id": 29458452,
      "node_id": "MDQ6VXNlcjI5NDU4NDUy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29458452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esternin",
      "html_url": "https://github.com/esternin",
      "followers_url": "https://api.github.com/users/esternin/followers",
      "following_url": "https://api.github.com/users/esternin/following{/other_user}",
      "gists_url": "https://api.github.com/users/esternin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esternin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esternin/subscriptions",
      "organizations_url": "https://api.github.com/users/esternin/orgs",
      "repos_url": "https://api.github.com/users/esternin/repos",
      "events_url": "https://api.github.com/users/esternin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esternin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T14:44:47Z",
    "updated_at": "2018-01-25T14:44:47Z",
    "author_association": "NONE",
    "body": "I did not realize ipython is still a thing, I assumed jupyter was a rebrand/replacement.\r\n\r\nBut I also see that your comment betrays a continuous misunderstanding, so perhaps I better elaborate. Every time an issue of tabs comes up, everyone assumes it's about the automatic indentation style.  It is not! - and in fact I personally prefer and always use spaces, not tabs, to indent code.  But the **ability** to enter a TAB character when desired must be available, as other programs and environments may require it (Makefile being one example).\r\n\r\nSo, for example, including somewhere in the notebook this:\r\n```\r\n%%javascript\r\n\r\nIPython.tab_as_tab_everywhere = function(use_tabs) {\r\n    if (use_tabs === undefined) {\r\n        use_tabs = true; \r\n    }\r\n\r\n    // apply setting to all current CodeMirror instances\r\n    IPython.notebook.get_cells().map(\r\n        function(c) {  return c.code_mirror.options.indentWithTabs=use_tabs;  }\r\n    );\r\n    // make sure new CodeMirror instances created in the future also use this setting\r\n    CodeMirror.defaults.indentWithTabs=use_tabs;\r\n\r\n    };\r\n\r\nIPython.tab_as_tab_everywhere()\r\n```\r\nconverts ALL cells to tabs. This is a poor solution, distracts from the flow of the notebook, and not at all what I am asking for.\r\n\r\nI would like to have, say, Alt-TAB or Ctl-TAB generate a raw tab and not be replaced with 4 spaces, but only when I need that.  It's not even a per-cell control, it's just one special character. \r\n\r\nIs there an equivalent to vi's Ctl-v entry mode in ipython/Jupyter/jupyterlab (what is that? and how is it different from jupyter?)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360546986",
    "html_url": "https://github.com/ipython/ipython/issues/10994#issuecomment-360546986",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10994",
    "id": 360546986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU0Njk4Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T17:55:45Z",
    "updated_at": "2018-01-25T17:55:45Z",
    "author_association": "MEMBER",
    "body": "> I did not realize ipython is still a thing,\r\n\r\nNo worries\r\n\r\n> I assumed jupyter was a rebrand/replacement.\r\n\r\nYes and No. Jupyter is the language agnostic part. IPython is still the tiny part that does Python execution. That is to say you can use Jupyter+IPython , Jupyter+Scala,  Jupyter+Haskell...\r\n\r\nAnd Yes, I understood your problem, that you want to have a tab in a specific location, but not generally. The reason you can't get tabs is indeed because we replace by 4 spaces as many user copy past and end up with mix of tab and space. Of course there are cases where you want to insert tabs. \r\n\r\nIt's a tiny bit harder than in vim, emacs or any \"native\" application because of browser limitation. Typically we have to stay away from any alt- or shift- related shortcut as otherwise we'll break non-english layout. You may think \"it's ok if a tine portion of user can't use some shortcut\", and we may agree that this may not be a big issue, though in general each time we've tried to extend shortcuts, we've hit roadblock, from the top of my head:\r\n  - typing `-` (minus) on a german keyboard was splitting cells, because minus needs `alt-` to be pressed. \r\n  - preventing French users from typing `|` \r\n  - preventing French users  from typing numbers\r\n\r\n(Yes I used to have a french keyboard so I remember those one).\r\n\r\nWe are thus relatively restricted. \r\n\r\nThere are some plans to provide \"localized keymaps\", disable by default, but a click away, and then we can add more convenient shortcuts we know work on some layouts. \r\n\r\nFor now I believe in JupyterLab(more info below) going to the \"Edit\" menu and deactivate \"Indent with space\" (or whatever the menu is named), should allow you to insert tabs, at least temporarily, then you can revert to \"indent with space\". Yes it is inconvenient, and why I'm only suggesting it as a workaround. \r\n\r\nNotebook 5.3 should already allow custom commands and keyboard shortcuts (Help > edit Keyboard shortcut). The commands can be registerd by `custom.js` or notebook extensions, so I believed you should ba able to include that with custom keybinding on your system, and if it works we'll be happy to include it. We would have to discuss the exact keyboard shortcut but worst case it's still `Ctrl-P` then search for `insert a tab character` and then `Enter` in the command palette.\r\n\r\n\r\nAs for [JupyterLab](https://github.com/jupyterlab/jupyterlab) it's the new frontend (completely compatible with current notebook), that has been in dev for quite some time, and should be released soon (already unofficially released you can pip-install it). The team is currently polishing the docs.\r\nHere is a not-so-recent screenshot to give you an idea:\r\n\r\n![1_nlqmkeckc7u70j-5ynpk0a](https://user-images.githubusercontent.com/335567/35403787-af136244-01b5-11e8-8574-68dce477bf3f.png)\r\n\r\n\r\nAlmost no code is shared with current notebook and most of the keyboard handling has been redone, so most tricky things should be fixed or easier to fix."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360843112",
    "html_url": "https://github.com/ipython/ipython/issues/10994#issuecomment-360843112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10994",
    "id": 360843112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg0MzExMg==",
    "user": {
      "login": "esternin",
      "id": 29458452,
      "node_id": "MDQ6VXNlcjI5NDU4NDUy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29458452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esternin",
      "html_url": "https://github.com/esternin",
      "followers_url": "https://api.github.com/users/esternin/followers",
      "following_url": "https://api.github.com/users/esternin/following{/other_user}",
      "gists_url": "https://api.github.com/users/esternin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esternin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esternin/subscriptions",
      "organizations_url": "https://api.github.com/users/esternin/orgs",
      "repos_url": "https://api.github.com/users/esternin/repos",
      "events_url": "https://api.github.com/users/esternin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esternin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T17:03:03Z",
    "updated_at": "2018-01-26T17:03:44Z",
    "author_association": "NONE",
    "body": "Thanks for your explanations, @Carreau.  I am probably a rare user, as I know very little about python, so my use is Jupyter+gnuplot, Jupyter+octave, Jupyter+bash/file/fortran, for teaching purposes.\r\n\r\nBecause of that I must stick to the current versions that my sysadmin installs for me, cluster-wide, otherwise what I see and what the students see would not be the same. When Jupyterlab is released, I may make use of it - next year.\r\n\r\nSo the answer to my original question - is there a way to enter a raw TAB into a `%%file` - is NO.\r\n\r\nI appreciate the difficulties of encoding and I would not want to impose an English keyboard on French users.  But being in a browser offers a different opportunity, of using markup, to bypass local keyboard bindings.  Is there a `%%file -translate-html ` option, so I could enter `&#9;` when I wanted a TAB and have it translate into a raw TAB when the file is written out?\r\n\r\nAgain, I am not looking for a universal handling of TAB vs. space, just something specific to %%file cell, which is effectively a built-in text editor.  TAB-based auto completion should not be enabled in those cells anyway, and so TAB handling is a purely stylistic issue in those cells. Whatever one's choice, an editor should enable the user to enter any character possible into the file, hence my asking for a Ctl-v-like mode.\r\n\r\nFinally, I do not understand that bit about custom.js. Ctl-P (? you probably meant Ctl-F to search) searches in the page, not in the pop-up that Help->Edit Keyboard Shortcuts generates, but in any case, \"insert a tab character\" is not one of the available options.\r\n\r\nWhere should custom.js be, to be noticed? - in the Home ? somewhere in the .local or .config before the `jupyter notebook` server is launched? What should it contain to generate a toggle-like option in the menu?  If this route works, I would happily use it now, by telling students to download and place this file in their home spaces - a one-time operation.  Or are you talking about options only available in the future (Jupyterlab) ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360845089",
    "html_url": "https://github.com/ipython/ipython/issues/10994#issuecomment-360845089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10994",
    "id": 360845089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg0NTA4OQ==",
    "user": {
      "login": "esternin",
      "id": 29458452,
      "node_id": "MDQ6VXNlcjI5NDU4NDUy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29458452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esternin",
      "html_url": "https://github.com/esternin",
      "followers_url": "https://api.github.com/users/esternin/followers",
      "following_url": "https://api.github.com/users/esternin/following{/other_user}",
      "gists_url": "https://api.github.com/users/esternin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esternin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esternin/subscriptions",
      "organizations_url": "https://api.github.com/users/esternin/orgs",
      "repos_url": "https://api.github.com/users/esternin/repos",
      "events_url": "https://api.github.com/users/esternin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esternin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T17:10:12Z",
    "updated_at": "2018-01-26T17:10:27Z",
    "author_association": "NONE",
    "body": "One other thought.  I just looked up the list of Edit Mode keystrokes:\r\n\r\n- Tab : code completion or indent\r\n- Shift-Tab : tooltip\r\n- Ctrl-] : indent\r\n- Ctrl-[ : dedent\r\n- Ctrl-A : select all\r\n- Ctrl-Z : undo\r\n\r\netc.  And I see there is room for `Ctrl-V : enter next character as-is. `"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360885302",
    "html_url": "https://github.com/ipython/ipython/issues/10994#issuecomment-360885302",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10994",
    "id": 360885302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDg4NTMwMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T19:44:13Z",
    "updated_at": "2018-01-26T19:44:13Z",
    "author_association": "MEMBER",
    "body": "> So the answer to my original question - is there a way to enter a raw TAB into a %%file - is NO.\r\n\r\nUnfortunately, without custom modification indeed, the answer is no. (but see below it might work on \"recent enough\" notebooks)\r\n\r\n> I appreciate the difficulties of encoding and I would not want to impose an English keyboard on French users. But being in a browser offers a different opportunity, of using markup, to bypass local keyboard bindings. Is there a %%file -translate-html option, so I could enter &#9; when I wanted a TAB and have it translate into a raw TAB when the file is written out?\r\n\r\nThere is not, but it is not hard to do either execute that in a notebook, or create a file and have it imported:\r\n\r\n```\r\nfrom IPython.core.magic import register_cell_magic\r\n\r\n@register_cell_magic\r\ndef hfile(line, cell):\r\n    with open(line.strip(), 'w') as f:\r\n        f.write(cell.replace('&#9;', '\\t'))\r\n```\r\n\r\nNow use `%%hfile`\r\n\r\n\r\n> Again, I am not looking for a universal handling of TAB vs. space, just something specific to %%file cell, which is effectively a built-in text editor. TAB-based auto completion should not be enabled in those cells anyway, and so TAB handling is a purely stylistic issue in those cells.\r\n\r\nYes, that's in progress, the fill content of the `%%file` cell is sent to IPython which decide how to complete. in `%file`, I agree that it might not be always useful (unless you are actually creating a python file on disc).\r\n\r\nI'll investivate Ctrl-V on Mac (we have to be careful on windows/linux  it may be the \"Past\" action.\r\n\r\n> Finally, I do not understand that bit about custom.js. Ctl-P (? you probably meant Ctl-F to search) searches in the page, not in the pop-up that Help->Edit Keyboard Shortcuts generates, but in any case, \"insert a tab character\" is not one of the available options.\r\n\r\nSorry let me take a step bak,\r\n\r\nJupyter notebook allow user to drop a files named `custom.js` in their config folder (for me ~/.jupyter/custom/custom.js, but that may differ, try `jupyter --config-dir` to know yours). This javascript file allow to customize whatever (no guarantied API, but you can poke at, or replace , any existing methods to experiment). One thing you can do is defined custom command, for example insert a tab at current cursor position, the good thing is the underlying library already have a hook for \"insertTab\" which make things quite easy:\r\n\r\n```\r\nrequire(['base/js/namespace'], function (Jupyter) { // roughly of \"wait for Jupyter to be loaded\"\r\n  var insert_tab  = {\r\n        help: 'Insert tab at current cursor position',\r\n        icon : 'fa-long-arrow-right',\r\n        help_index : '',\r\n        handler : function (env) {\r\n            console.info(\"Inserting tab\")\r\n            var cell = env.notebook.get_selected_cell(); \r\n            var cur = cell.code_mirror.execCommand('insertTab') \r\n      }\r\n  }\r\n  Jupyter.notebook.keyboard_manager.actions.register(insert_tab, 'insert-tab-at-cursor', 'my-prefix')\r\n  console.info('insert-tab-extension loaded')\r\n})\r\n```\r\n\r\nThese commands (previously named `actions` hence the above api, are automatically listed  in the command palette (Cmd-Shift-P, on mac, that I rebinded to Ctrl-P, sorry for the confusion). So the above looks like the following: \r\n\r\n![com1](https://user-images.githubusercontent.com/335567/35456376-12fa62d8-028a-11e8-99d8-eb8dcbaec612.gif)\r\n\r\nYou can then bind it to a _command mode_ keyboard shortcut:\r\n\r\n<img width=\"686\" alt=\"screen shot 2018-01-26 at 11 15 45\" src=\"https://user-images.githubusercontent.com/335567/35456450-561823fc-028a-11e8-8c64-bf79906dd3d9.png\">\r\n\r\n\r\nThere are way to change keymaps _in edit mode_ but that requires messing with [codemirror keymaps](https://codemirror.net/doc/manual.html#keymaps), (codemirror being the underlying library that edit code) and can be a bit brittle. You are also limited to predefined Codemirror commands which list you can find [here](https://codemirror.net/doc/manual.html#commands) instead of arbitrary programatic functions.\r\n\r\nIn our case we are lucky I was not aware but \"insertTab\" is one of these.\r\nThere is no official API or UI to change that so we're going to modify a config file by hand from a Python script, not sure how reliable or which version of the notebook that requires.\r\n\r\n```\r\nimport os\r\nconffile = os.path.expanduser('~/.jupyter/nbconfig/notebook.json')\r\nimport json\r\nwith open(conffile, 'r') as f:\r\n    data = json.loads(f.read())\r\nsub = data\r\nfor path in ['CodeCell','cm_config', 'extraKeys']:  # replace CodeCell by Cell to do that in all cells.\r\n    val = sub.get(path)\r\n    if not val:\r\n        sub[path] = {}\r\n    sub = sub[path]\r\nsub['Ctrl-T'] = 'insertTab'\r\nwith open(conffile, 'w') as f:\r\n    f.write(json.dumps(data, indent=2))\r\n```\r\n\r\nBe careful and backup your `~/.jupyter/nbconfig/notebook.json` in case you have other configuration. You'll see  that it stores other informations from the notebook, here is mine, with comments:\r\n\r\n```\r\n{\r\n  \"Cell\": {\r\n    \"cm_config\": {\r\n      \"lineNumbers\": true   // line numbers for all cells by default\r\n    }\r\n  },\r\n  \"CodeCell\": {\r\n    \"cm_config\": {\r\n      \"extraKeys\": {\r\n        \"Ctrl-T\": \"insertTab\"   // Code cell only have Ctrl-T bind to insert tab see codemirror docs for which modifiers (Ctrl-Cmd... are alllowed)\r\n      }\r\n    }\r\n  },\r\n  \"Header\": false,\r\n  \"Notebook\": {\r\n    \"Header\": true,\r\n    \"Toolbar\": false\r\n  },\r\n  \"keys\": {\r\n    \"command\": { // command mode extra bindings. This section is automatically updated when you change things in \"Help > Edit keyboard shortcuts.\"\r\n      \"bind\": {\r\n        \"0,9\": \"jupyter-notebook:restart-kernel-and-run-all-cells\",\r\n        \"ctrl-[\": \"jupyter-notebook:close-pager\",\r\n        \"ctrl-r,t,l\": \"jupyter-notebook:toggle-rtl-layout\",\r\n        \"ctrl-shift-o\": \"jupyter-notebook:clear-all-cells-output\",\r\n        \"ctrl-x,meta-c,meta-b,u,t,t,e,r,f,l,y\": \"jupyter-notebook:edit-command-mode-keyboard-shortcuts\",\r\n        \"space\": \"jupyter-notebook:scroll-notebook-down\",\r\n        \"t\": \"my-prefix:insert-tab-at-cursor\"\r\n      },\r\n      \"unbind\": [\r\n        \"space\"  // unbind some default actions.\r\n      ]\r\n    }\r\n  },\r\n  \"load_extensions\": {\r\n    \"jupyter-js-widgets/extension\": true\r\n  }\r\n}\r\n```\r\n\r\n\r\nAs you can see all the pieces are actually there (I am surprised, I did not remembered all of that) and need a bit of documentation and UI work to be more accessible.\r\n\r\nDoes that help a bit more and make things clearer ? We could try the `Ctrl-V`, `Tab` trick but it may be a bit harder as it would require keeping track as to whether we are in raw mode or not."
  }
]
