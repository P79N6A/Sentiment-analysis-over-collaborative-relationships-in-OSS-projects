[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22995331",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-22995331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 22995331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTk1MzMx",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T04:49:32Z",
    "updated_at": "2013-08-21T04:49:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is deliberate.\n\n`%who` always excludes anything internal to IPython or any executed names through your configuration file.\n\nThe purpose of `%who` is to show only the things that you have manually defined. You could load many modules (as `%pylab` does), but we avoid listing these in this magic.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23000748",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23000748",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23000748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDAwNzQ4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T07:50:39Z",
    "updated_at": "2013-08-21T07:50:39Z",
    "author_association": "MEMBER",
    "body": "@Zsailer is right about the historical reason for this behavior, but I think we should reconsider it in the face of the current role of `%pylab`.  Populating the shadow namespace further obscures what `%pylab` does, while flooding the output of `%who` further _clarifies_ why `%pylab` is not a great idea.\n\nOpinion, @fperez?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23030438",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23030438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23030438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDMwNDM4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T16:31:25Z",
    "updated_at": "2013-08-21T16:31:25Z",
    "author_association": "MEMBER",
    "body": "I think the original reason is still valid. We can certainly recommend people don't use pylab, but we shouldn't make it a worse experience to dissuade people who do want to use it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23033539",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23033539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23033539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDMzNTM5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T17:13:37Z",
    "updated_at": "2013-08-21T17:13:37Z",
    "author_association": "MEMBER",
    "body": "I don't mean to suggest that showing pylab names in `%who` makes it worse, I only meant that it makes it clearer / more explicit what `%pylab` really does.  I'm not convinced that it is worse.  The reason we are moving away from pylab is that it is too magical, and hiding the names we imported so that our normal tools for seeing what names are available don't work is just more magic, and I think it actively prevents users from understanding what happened.\n\nI think this output is confusing:\n\n``` python\nIn [1]: %pylab\nUsing matplotlib backend: MacOSX\nPopulating the interactive namespace from numpy and matplotlib\n\nIn [2]: %who\nInteractive namespace is empty.\n\nIn [3]: e = 5\n\nIn [4]: %who\nInteractive namespace is empty.\n\nIn [5]: f = 6\n\nIn [6]: %who\nInteractive namespace is empty.\n\nIn [7]: g = 7\n\nIn [8]: %who\ng   \n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23033563",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23033563",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23033563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDMzNTYz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T17:14:03Z",
    "updated_at": "2013-08-21T17:14:03Z",
    "author_association": "MEMBER",
    "body": "Can we just get rid of the shadow namespace altogether?\n\nOn Wed, Aug 21, 2013 at 10:13 AM, Brian Granger ellisonbg@gmail.com wrote:\n\n> I think it would be nice to simplify this logic so that the pylab imports\n> are not treated specially when it comes to `%who`.  I think it is\n> appropriate in this case to apply a bit of pressure to people by including\n> the pylab names in `%who`.  Our code is complex enough - we should take\n> every chance to simplifying it when we can.\n> \n> On Wed, Aug 21, 2013 at 9:31 AM, Thomas Kluyver notifications@github.comwrote:\n> \n> > I think the original reason is still valid. We can certainly recommend\n> > people don't use pylab, but we shouldn't make it a worse experience to\n> > dissuade people who do want to use it.\n> > \n> > —\n> > Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4076#issuecomment-23030438\n> > .\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23033649",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23033649",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23033649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDMzNjQ5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T17:15:04Z",
    "updated_at": "2013-08-21T17:15:04Z",
    "author_association": "MEMBER",
    "body": "I think it would be nice to simplify this logic so that the pylab imports\nare not treated specially when it comes to `%who`.  I think it is\nappropriate in this case to apply a bit of pressure to people by including\nthe pylab names in `%who`.  Our code is complex enough - we should take\nevery chance to simplifying it when we can.\n\nOn Wed, Aug 21, 2013 at 9:31 AM, Thomas Kluyver notifications@github.comwrote:\n\n> I think the original reason is still valid. We can certainly recommend\n> people don't use pylab, but we shouldn't make it a worse experience to\n> dissuade people who do want to use it.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4076#issuecomment-23030438\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23034191",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23034191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23034191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDM0MTkx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T17:23:09Z",
    "updated_at": "2013-08-21T17:23:09Z",
    "author_association": "MEMBER",
    "body": "This behavior is horrible - I didn't realize it was this bad.  Let's fix\nthis.\n\nOn Wed, Aug 21, 2013 at 10:13 AM, Min RK notifications@github.com wrote:\n\n> I don't mean to suggest that showing pylab names in %who makes it worse,\n> I only meant that it makes it clearer / more explicit what %pylab really\n> does. I'm not convinced that it is worse. The reason we are moving away\n> from pylab is that it is too magical, and hiding the names we imported so\n> that our normal tools for seeing what names are available don't work is\n> just more magic, and I think it actively prevents users from understanding\n> what happened.\n> \n> I think this output is confusing:\n> \n> In [1]: %pylabUsing matplotlib backend: MacOSXPopulating the interactive namespace from numpy and matplotlib\n> In [2]: %whoInteractive namespace is empty.\n> In [3]: e = 5\n> In [4]: %whoInteractive namespace is empty.\n> In [5]: f = 6\n> In [6]: %whoInteractive namespace is empty.\n> In [7]: g = 7\n> In [8]: %whog\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4076#issuecomment-23033539\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23035162",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23035162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23035162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDM1MTYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T17:36:52Z",
    "updated_at": "2013-08-21T17:36:52Z",
    "author_association": "MEMBER",
    "body": "Just showing everything pylab imports would certainly be worse - there's so much that it makes %who completely useless. I agree that it's awkward to hide redefined variables, but I think there are better ways to fix this.\n\nI think this code is useful for other scenarios besides pylab - e.g. isympy loads so many variables that %who is completely useless, and it could take advantage of this mechanism.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23142164",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-23142164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 23142164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQyMTY0",
    "user": {
      "login": "computo-fc",
      "id": 5230358,
      "node_id": "MDQ6VXNlcjUyMzAzNTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5230358?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/computo-fc",
      "html_url": "https://github.com/computo-fc",
      "followers_url": "https://api.github.com/users/computo-fc/followers",
      "following_url": "https://api.github.com/users/computo-fc/following{/other_user}",
      "gists_url": "https://api.github.com/users/computo-fc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/computo-fc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/computo-fc/subscriptions",
      "organizations_url": "https://api.github.com/users/computo-fc/orgs",
      "repos_url": "https://api.github.com/users/computo-fc/repos",
      "events_url": "https://api.github.com/users/computo-fc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/computo-fc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-23T04:00:31Z",
    "updated_at": "2013-08-23T04:00:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> there's so much that it makes %who completely useless\n> @takluyver Isn't that the point? -- it shows exactly why `%pylab` or `from ... import *` is such a bad idea.\n> I don't see that the magical shadow namespace is a better solution. How am I supposed to know what has been imported there? -- it is (as far as I can see) actually _impossible_ (for the average user, of course) to find out what's in there.\n\nOn the other hand, this points to the need for a more refined version of `%who`, which is able to show only a subset of what's in the interactive namespace. (I see that there is already an option that I didn't know about, but e.g. `%who function` still shows too much after `from pylab import *`.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33889881",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-33889881",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 33889881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODg5ODgx",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T02:14:32Z",
    "updated_at": "2014-02-02T02:14:32Z",
    "author_association": "MEMBER",
    "body": "The original idea behind `%who/s` was to display variables you've defined _while working interactively_. Originally, `-pylab` could only be done as a startup flag (there was no `%pylab` magic you could invoke at runtime), so hiding all pylab names in who was fully consistent.\n\nEven though today it's possible to call pylab later on (deprecated/discouraged as it may be for production use), I still think that it makes sense to leave `%who` to be _useful_: if we change the behavior as suggested here, as @takluyver indicates it simply becomes completely useless.\n\nIt's one thing to strive for cleanliness and simplicity in our code (which we should do), it's another to break user's working habits that they may be happy with because of our own concerns for purity.\n\nHere, I very much subscribe to the Zen of Python and Linus Torvalds:\n- Practicality beats purity.\n- You never, never, _ever_ break userspace.\n\nFor us, userspace is the user experience we've already exposed users to for over a decade. The fact that today we might make some decisions differently is, by itself, _not_ sufficient reason to break existing behaviors.\n\nFurthermore, despite sometimes adding quirky code, those behaviors often had a very clear rationale behind them. So the bar for changing them should be very, very high.\n\nClosing this one, `%who` stays as-is, including its tracking of startup variables with the shadow namespace.  If someone really wants to see _all_ variables, we could simply add a `-a/--all` flag to it that would have it really dump all of `user_ns`. But the current behavior stays.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38161860",
    "html_url": "https://github.com/ipython/ipython/issues/4076#issuecomment-38161860",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4076",
    "id": 38161860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTYxODYw",
    "user": {
      "login": "cwsoft",
      "id": 1426817,
      "node_id": "MDQ6VXNlcjE0MjY4MTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1426817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cwsoft",
      "html_url": "https://github.com/cwsoft",
      "followers_url": "https://api.github.com/users/cwsoft/followers",
      "following_url": "https://api.github.com/users/cwsoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/cwsoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cwsoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cwsoft/subscriptions",
      "organizations_url": "https://api.github.com/users/cwsoft/orgs",
      "repos_url": "https://api.github.com/users/cwsoft/repos",
      "events_url": "https://api.github.com/users/cwsoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cwsoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T12:41:11Z",
    "updated_at": "2014-03-20T12:41:11Z",
    "author_association": "NONE",
    "body": "To demonstrate the polution via `%pylab` in a iPython notebook, one could execute the following naive code in a clean notebook.\n\n```\nn1 = set(dir())\n%pylab\nn2 = set(dir())\nn3 = n2.difference(n1)\n\nprint \"namespace iPython:\", len(n1)\nprint \"namespace iPython+pylab: \", len(n2)\nprint \"namespace pylab: \", len(n3)\n```\n\nOutput:\nUsing matplotlib backend: TkAgg\nPopulating the interactive namespace from numpy and matplotlib\n21\n971\n950\n\nCheers\n"
  }
]
