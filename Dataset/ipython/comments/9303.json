[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193221410",
    "html_url": "https://github.com/ipython/ipython/issues/9303#issuecomment-193221410",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9303",
    "id": 193221410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzIyMTQxMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T12:03:33Z",
    "updated_at": "2016-03-07T12:03:33Z",
    "author_association": "MEMBER",
    "body": "One way you can approach this at present is the `%rerun` magic. For instance, `%rerun ~1/1-6` means 'run inputs 1-6 from the previous session'.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193225479",
    "html_url": "https://github.com/ipython/ipython/issues/9303#issuecomment-193225479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9303",
    "id": 193225479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzIyNTQ3OQ==",
    "user": {
      "login": "the-efi",
      "id": 6472642,
      "node_id": "MDQ6VXNlcjY0NzI2NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6472642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/the-efi",
      "html_url": "https://github.com/the-efi",
      "followers_url": "https://api.github.com/users/the-efi/followers",
      "following_url": "https://api.github.com/users/the-efi/following{/other_user}",
      "gists_url": "https://api.github.com/users/the-efi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/the-efi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/the-efi/subscriptions",
      "organizations_url": "https://api.github.com/users/the-efi/orgs",
      "repos_url": "https://api.github.com/users/the-efi/repos",
      "events_url": "https://api.github.com/users/the-efi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/the-efi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T12:11:59Z",
    "updated_at": "2016-03-07T12:11:59Z",
    "author_association": "NONE",
    "body": "I know about this, but I've never used it. First of all, I'm bad at remembering numbers. Second, I'm mostly using one session (that may last several days). Third, I need the \"latest\" (i.e most recent) edition and not the original. But mainly, I like to see what's about to be executed before I execute it.\n\nIn `bash` they also have e.g. `!316` meaning \"rerun the command number 316 in history\" and I've never used that either.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193230707",
    "html_url": "https://github.com/ipython/ipython/issues/9303#issuecomment-193230707",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9303",
    "id": 193230707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzIzMDcwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T12:24:22Z",
    "updated_at": "2016-03-07T12:24:22Z",
    "author_association": "MEMBER",
    "body": "You can also do `%hist -ng foo` to search the history and get the numbers, and `%recall 316-321` to bring a bunch of lines to the prompt so you can see them before running them.\n\nMost of the bash keyboard shortcuts are actually readline keyboard shortcuts, and IPython up to version 4 also uses readline, so the same shortcut may actually work in released versions of IPython (or it may be possible to configure it using `~/.inputrc`). For IPython 5, we're changing to a more powerful library called `prompt_toolkit`. This probably won't have Ctrl-O by default, but it should be possible to configure it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193237188",
    "html_url": "https://github.com/ipython/ipython/issues/9303#issuecomment-193237188",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9303",
    "id": 193237188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzIzNzE4OA==",
    "user": {
      "login": "the-efi",
      "id": 6472642,
      "node_id": "MDQ6VXNlcjY0NzI2NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6472642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/the-efi",
      "html_url": "https://github.com/the-efi",
      "followers_url": "https://api.github.com/users/the-efi/followers",
      "following_url": "https://api.github.com/users/the-efi/following{/other_user}",
      "gists_url": "https://api.github.com/users/the-efi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/the-efi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/the-efi/subscriptions",
      "organizations_url": "https://api.github.com/users/the-efi/orgs",
      "repos_url": "https://api.github.com/users/the-efi/repos",
      "events_url": "https://api.github.com/users/the-efi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/the-efi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T12:52:41Z",
    "updated_at": "2016-03-07T12:52:41Z",
    "author_association": "NONE",
    "body": "Well here's my usual workflow:\n\n```\nIn [3]: from my_module import * # iPython rereads the files on disk\n\nIn [4]: v = my_obj(param1='test', param2=10, param3=None)\n\nIn [5]: v.do_something()\n```\n\nSome debugging with pdb, ^C is pressed, pages of output.\n\nNow I have a choice of the following:\n\n_Option A_\nup-arrow, up-arrow, up-arrow, (`from... import ...`) Enter.\nup-arrow, up-arrow, up-arrow, (`v = ...`) Enter.\nup-arrow, up-arrow, up-arrow, (`v.do_...`) Enter.\n\n_Option B_\n`%hist` Enter\nCheck and remember lines numbers\n`%recall 316-319` Enter\nVisually check and possibly edit the bunch (lots of character movement)\nEnter\n\nI think it can be seen that Option A is more reasonable choice at this stage from the pure keypresses point of view.\n\nMy suggestion (with Ctrl-O):\n\nup-arrow, up-arrow, up-arrow, (`from... import ...`) Ctrl-O\n(`v = ...`) Ctrl-O.\n(`v.do_...`) Ctrl-O.\n(`from... import ...`) \nAt this stage, I can press Ctrl-O to re-run the cycle again, or Ctrl-C if I'm not interested.\n\nThis actually saves a lot of keystrokes.\n\nI'm using iPython on Mac and it's my understanding that GNU readline is not used on OS X, but maybe I'm wrong on this and iPython still installs it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193242556",
    "html_url": "https://github.com/ipython/ipython/issues/9303#issuecomment-193242556",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9303",
    "id": 193242556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI0MjU1Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T13:11:28Z",
    "updated_at": "2016-03-07T13:11:44Z",
    "author_association": "MEMBER",
    "body": "IPython 4.x does depend on the gnureadline package (on Mac).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193245362",
    "html_url": "https://github.com/ipython/ipython/issues/9303#issuecomment-193245362",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9303",
    "id": 193245362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI0NTM2Mg==",
    "user": {
      "login": "the-efi",
      "id": 6472642,
      "node_id": "MDQ6VXNlcjY0NzI2NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6472642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/the-efi",
      "html_url": "https://github.com/the-efi",
      "followers_url": "https://api.github.com/users/the-efi/followers",
      "following_url": "https://api.github.com/users/the-efi/following{/other_user}",
      "gists_url": "https://api.github.com/users/the-efi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/the-efi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/the-efi/subscriptions",
      "organizations_url": "https://api.github.com/users/the-efi/orgs",
      "repos_url": "https://api.github.com/users/the-efi/repos",
      "events_url": "https://api.github.com/users/the-efi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/the-efi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T13:20:13Z",
    "updated_at": "2016-03-07T13:23:37Z",
    "author_association": "NONE",
    "body": "I entered `\"\\C-o\": operate-and-get-next` into my `~/.inputrc`, but it didn't yield the desired result.\n\nNamely, if I'm issuing Ctrl-O in iPython running under iTerm2, nothing happens.\n\nIf I run `stty discard undef` before running iPython, issuing Ctrl-O in iPython leads to bell.\n"
  }
]
