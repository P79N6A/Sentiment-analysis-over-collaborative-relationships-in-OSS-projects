[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29867116",
    "html_url": "https://github.com/ipython/ipython/issues/4127#issuecomment-29867116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4127",
    "id": 29867116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODY3MTE2",
    "user": {
      "login": "mgummelt",
      "id": 153734,
      "node_id": "MDQ6VXNlcjE1MzczNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgummelt",
      "html_url": "https://github.com/mgummelt",
      "followers_url": "https://api.github.com/users/mgummelt/followers",
      "following_url": "https://api.github.com/users/mgummelt/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgummelt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgummelt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgummelt/subscriptions",
      "organizations_url": "https://api.github.com/users/mgummelt/orgs",
      "repos_url": "https://api.github.com/users/mgummelt/repos",
      "events_url": "https://api.github.com/users/mgummelt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgummelt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T02:40:11Z",
    "updated_at": "2013-12-29T22:01:16Z",
    "author_association": "NONE",
    "body": "+1\n\nWerkzeug has a development mode that detects source code changes and recompiles automatically.  This means that I can't use Werkzeug and %autoreload at the same time, because werkzeug updates the .pyc files before %autoreload can detect that they're out of date.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38589869",
    "html_url": "https://github.com/ipython/ipython/issues/4127#issuecomment-38589869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4127",
    "id": 38589869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTg5ODY5",
    "user": {
      "login": "eddy-geek",
      "id": 2772505,
      "node_id": "MDQ6VXNlcjI3NzI1MDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2772505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eddy-geek",
      "html_url": "https://github.com/eddy-geek",
      "followers_url": "https://api.github.com/users/eddy-geek/followers",
      "following_url": "https://api.github.com/users/eddy-geek/following{/other_user}",
      "gists_url": "https://api.github.com/users/eddy-geek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eddy-geek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eddy-geek/subscriptions",
      "organizations_url": "https://api.github.com/users/eddy-geek/orgs",
      "repos_url": "https://api.github.com/users/eddy-geek/repos",
      "events_url": "https://api.github.com/users/eddy-geek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eddy-geek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-25T16:49:49Z",
    "updated_at": "2014-03-25T16:49:49Z",
    "author_association": "NONE",
    "body": "I am running into the related \"RuntimeError: maximum recursion depth exceeded\" (probably because of PyCharm compiling stuff)\n\nIs there a workaround in the meantime (i.e. until this reaches stable) ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38593233",
    "html_url": "https://github.com/ipython/ipython/issues/4127#issuecomment-38593233",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4127",
    "id": 38593233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTkzMjMz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-25T17:15:09Z",
    "updated_at": "2014-03-25T17:15:09Z",
    "author_association": "MEMBER",
    "body": "@eddy-geek That sounds like a different problem to me. If it's reproducible, feel free to make a new issue with details of that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38802162",
    "html_url": "https://github.com/ipython/ipython/issues/4127#issuecomment-38802162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4127",
    "id": 38802162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODAyMTYy",
    "user": {
      "login": "mjwillson",
      "id": 4502,
      "node_id": "MDQ6VXNlcjQ1MDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjwillson",
      "html_url": "https://github.com/mjwillson",
      "followers_url": "https://api.github.com/users/mjwillson/followers",
      "following_url": "https://api.github.com/users/mjwillson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjwillson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjwillson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjwillson/subscriptions",
      "organizations_url": "https://api.github.com/users/mjwillson/orgs",
      "repos_url": "https://api.github.com/users/mjwillson/repos",
      "events_url": "https://api.github.com/users/mjwillson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjwillson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-27T13:31:20Z",
    "updated_at": "2014-03-27T13:31:20Z",
    "author_association": "NONE",
    "body": "Another request for this -- I found that IPython autoreload stops working when I have [sniffer](https://pypi.python.org/pypi/sniffer/0.3.2) auto-running my tests.\n\nSniffer watches for filesystem changes and presumably sees them before ipython's autoreload and recompiles the .pyc files meaning ipython no longer sees the file as being stale.\n"
  }
]
