[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6304051",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6304051",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6304051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQwNTE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T15:22:55Z",
    "updated_at": "2012-06-13T15:22:55Z",
    "author_association": "MEMBER",
    "body": "This might take a bit more thought, because I understand that before long, the notebook server will be able to navigate to different directories, so the idea of a fixed 'notebook directory' isn't something to rely on. I agree that there should be some means of accessing the location of the notebook, though - perhaps we should define the `__file__` variable in the interactive namespace.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6304980",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6304980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6304980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ5ODA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T15:55:29Z",
    "updated_at": "2012-06-13T15:55:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, probably this magic should not go into the master until some server-kernel communication is available.  I don't think having **file** which points to non-python file is a good idea.  I guess it should be in the shell instance.  Maybe providing short-hand notation such as `__notebook__` is good idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6305545",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6305545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6305545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDU1NDU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T16:14:05Z",
    "updated_at": "2012-06-13T16:14:05Z",
    "author_association": "MEMBER",
    "body": "Also, maybe not register the Notebooks magics where it is registered now, as it would appear in the qtconsole menu...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6305992",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6305992",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6305992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDU5OTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T16:31:33Z",
    "updated_at": "2012-06-13T16:31:33Z",
    "author_association": "MEMBER",
    "body": "Yes, `__file__` might not be the best name. We shouldn't use other `__foo__` names, but we could call it something like `nb_file` (we already define `get_ipython()`, so there's some precedent).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6306527",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6306527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6306527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY1Mjc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T16:51:35Z",
    "updated_at": "2012-06-13T16:51:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Could you tell me where it should go, as I am not yet familiar with the code base? I just grep through the source code and find that place.  Although maybe having the magic in Qt is OK because you can share the kernel with notebook.\n\nSo, what is the opinion about server-kernel interaction?  I guess current notebook server just pass the message around to/from kernel and do not care about what is inside.  Adding server-kernel interaction changes this design so I'd like to know if this change is acceptable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6307230",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6307230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6307230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDcyMzA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T17:16:03Z",
    "updated_at": "2012-06-13T17:16:03Z",
    "author_association": "MEMBER",
    "body": "hum, notebook i'm not sure. \nyou can inspire from `IPython/fontend/qt/console/ipython_widget.py` and  `_load_guiref_magic` that is launched at kernel startup to register the new magic.\n\nYou should be able to find the corresponding code somewhere in `IPython/frontend/html/notebook` , but it is not my area of expertise.\n\nRight now you could just build this as an extension, that can be loaded with `%load_ext`. It would then be available event if it does not make it's way into 0.13\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6307807",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6307807",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6307807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDc4MDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T17:38:02Z",
    "updated_at": "2012-06-13T17:38:02Z",
    "author_association": "MEMBER",
    "body": "To echo @Carreau, I suspect doing this properly will be postponed until after 0.13. As Fernando puts it, a half-working feature is often worse than none at all.\n\nIf you want to put them in an extension, I'd suggest changing %pnd to something a bit more descriptive - perhaps %notebook_dir. But if you can wait to do this the right way, there's no obligation to make an extension.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6308843",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6308843",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6308843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg4NDM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T18:14:43Z",
    "updated_at": "2012-06-13T18:14:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Thanks, I got an idea.  It looks like enabling this magic must happen at the time sending the notebook information from the server, at start time.  So, again, server to kernel communication is needed.\n\n@takluyver I can wait until the right way to do it is available.  Currently I am fine with hard-coded directory in my notebooks.\n\nI think sending information and enabling magic from server to kernel is rather easy (although it may change the design principle; but I am not sure about what is the principle anyway).\n\nThe problem is where and how to put the notebook information.  My idea is to put (possibly None) `notebook_info` attribute in the instance of `ZMQInteractiveShell` and this attribute holds an instance of hypothetical `NotebookInfo` class.  Are there any class something like this?  `NotebookInfo` should have, at least, `nodebook_dir` and `notebook_path` attribute and `get_notebook` method to get the notebook contents from the file system, so that other utility methods can use metadata information in the notebook file.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6309704",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6309704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6309704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDk3MDQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T18:43:30Z",
    "updated_at": "2012-06-13T18:43:30Z",
    "author_association": "MEMBER",
    "body": "I don't know much of the inner workings of the notebook system. But one complication with that model is that it requires duplicate state - the file of the notebook can be changed while the kernel is running, so the kernel and the server would have to be kept in sync.\n\nAnother approach - no doubt with its own problems - is for the kernel to have some way to request data from the notebook server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311037",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6311037",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6311037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTEwMzc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:34:35Z",
    "updated_at": "2012-06-13T19:34:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, you need to update information when the notebook name is changed or the notebook is deleted.  In the future, maybe there will be more events that requires update, for example when the notebook is move to another directory (if the notebook server supports multiple directory).\n\nI think the question is that whether we want to access the notebook contents from the kernel in the different machine than the notebook server.  Currently you have the kernel and the server in the same machine, but if the system is changed and having them in different machines is allowed, file system based notebook contents retrieve doesn't work.  If you want the kernel in the different machine to access notebook metadata/contents, I guess you need another ZMQ sockets.  But as the primary aim is to access notebook file/directory from kernel, I don't think we need to consider that situation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311153",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6311153",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6311153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTExNTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:38:56Z",
    "updated_at": "2012-06-13T19:38:56Z",
    "author_association": "MEMBER",
    "body": "That reminds me of another point: the plan is to support other storage backends, i.e. databases. So there's no guarantee that the notebook will even _have_ a file or a directory.\n\nMaybe this isn't worth doing. There's already `%pushd` and `%popd` magics to navigate around the filesystem and have a way back.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311470",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6311470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6311470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTE0NzA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:50:49Z",
    "updated_at": "2012-06-13T19:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think returning notebook location only when it exists on the file system is still useful.\n\nThis is the use case I have in mind.  Let's say you have this files in the `notebook_dir`.\n\n```\nMyNotebook.ipynb\nscript.sh\nsommequickmodule.py\n```\n\nand this is what you have in the notebook:\n\n``` python\nIn [1]: %cdnb\n\nIn [2]: !sh script.sh\n\nIn [3]: import sommequickmodule\n```\n\nWhat is important is that the result is always the same if you have these file in the same place, regardless the place of `notebook_dir`.\n\nThis cannot be done with `%pushd` and `%popd`, right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311868",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6311868",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6311868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTE4Njg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:05:34Z",
    "updated_at": "2012-06-13T20:05:34Z",
    "author_association": "MEMBER",
    "body": "I think we should make the kernel start up in the same directory that the notebook lives in, then your example would work without cell 1. In fact I'm surprised it doesn't already behave like that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312032",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312032",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTIwMzI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:10:34Z",
    "updated_at": "2012-06-13T20:10:34Z",
    "author_association": "MEMBER",
    "body": "Wait, my mistake, it _does_ behave like that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312244",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTIyNDQ=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:17:17Z",
    "updated_at": "2012-06-13T20:17:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about this?\n\n```\nMyNotebook.ipynb\nMyNotebook/script.sh\nMyNotebook/sommequickmodule.py\n```\n\n```\nIn [1]: %cd %notebook_path\n\nIn [2]: !sh script.sh\n\nIn [3]: import sommequickmodule\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312283",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312283",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTIyODM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:18:45Z",
    "updated_at": "2012-06-13T20:18:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, no. What I mean was something like this:\n\n```\nIn [1]: %cdnb\n\nIn [2]: %cd %notebook_name\n\nIn [3]: !sh script.sh\n\nIn [4]: import sommequickmodule\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312372",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTIzNzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:21:54Z",
    "updated_at": "2012-06-13T20:21:54Z",
    "author_association": "MEMBER",
    "body": "@takluyver is right that the notebook file itself is not necessarily guaranteed to be there in the long run, but the starting dir of the Kernel is set, and presumably that's where you want to get back to.\n\nSo this can be covered by any one of the following commands in your startup:\n\n``` python\n%pushd # only works if you don't actually use pushd/popd for other things\n\n%bookmark nbd # unsafe if you have multiple values for nbd, because bookmarks are shared across a profile\n\nnbd = %pwd # should always work, and have no problems.\n```\n\nThe last one seems to work best, as you can always do `cd $nbd` to get back, and it doesn't have any conflict with other uses of the tools.\n\nBut just because it can be done easily doesn't mean it shouldn't be exposed in a manner similar to this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312388",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312388",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTIzODg=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:22:42Z",
    "updated_at": "2012-06-13T20:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think cwd of the newly created of the kernel is same as the cwd of the server.  So it won't be same as the notebook_dir unless you start the kernel at the notebook_dir, no?  At least, newly created kernels in my machine is always $HOME, because it is where I start the notebook server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312526",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312526",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI1MjY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:27:36Z",
    "updated_at": "2012-06-13T20:27:36Z",
    "author_association": "MEMBER",
    "body": "Well, the notebook server only currently offers you notebooks in the directory where it's started. When it gains the ability to navigate the file system, I would consider it a bug if kernels didn't start where the notebook was saved.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312715",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI3MTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:34:03Z",
    "updated_at": "2012-06-13T20:34:03Z",
    "author_association": "MEMBER",
    "body": "@tkf is right - kernels start where the notebook server is running, and the notebook-dir is configurable.  I always thought we set cwd to the notebook-dir, and I think we certainly should be doing that.  We probably just never noticed because people ~always do: `cd /path/to/notebooks; ipython notebook` rather than `ipython notebook --notebook-dir=/path/to/notebooks`.\n\nThis particular approach (reading config files) will not work in the long run, because ultimately it will not be guaranteed that kernels are on the same filesystem as the notebook server, nor that the notebook server's config is even readable by the kernel's user/process.  It also doesn't help if the notebook dir was specified at the command-line, as in my sample above.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312879",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6312879",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6312879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI4Nzk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:40:39Z",
    "updated_at": "2012-06-13T20:40:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't know that cwd of the notebook server will be notebook_dir if it is not set...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6465796",
    "html_url": "https://github.com/ipython/ipython/pull/1949#issuecomment-6465796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1949",
    "id": 6465796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjU3OTY=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-20T20:11:01Z",
    "updated_at": "2012-06-20T20:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "#1951 fixes this issue.  Thanks.\n"
  }
]
