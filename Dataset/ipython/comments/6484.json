[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55790520",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55790520",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55790520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzkwNTIw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T18:30:09Z",
    "updated_at": "2014-09-16T18:30:09Z",
    "author_association": "MEMBER",
    "body": "IPython relies on pandoc for md→latex, so if there is such an option, it would be on pandoc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55792751",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55792751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55792751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzkyNzUx",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T18:43:22Z",
    "updated_at": "2014-09-16T18:43:22Z",
    "author_association": "NONE",
    "body": "That is good to know. Unfortunatlye, the problem exists for both latex AND\nmarkdown output. So I would still need to know how to get nbconvert to\noutput markdown text that respects user entered line breaks. Is there such\nan option? Is it hard to fix?\n\nOn Tue, Sep 16, 2014 at 2:30 PM, Min RK notifications@github.com wrote:\n\n> IPython relies on pandoc for md→latex, so if there is such an option, it\n> would be on pandoc.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6484#issuecomment-55790520.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55797865",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55797865",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55797865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzk3ODY1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T19:15:31Z",
    "updated_at": "2014-09-16T19:15:37Z",
    "author_association": "MEMBER",
    "body": "The markdown output one is definitely our fault, and should be fixed by #6487. There's nothing we can do about latex if pandoc doesn't support preserving line breaks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55804154",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55804154",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55804154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODA0MTU0",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T19:58:08Z",
    "updated_at": "2014-09-16T19:58:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "A possible, although hacky, solution to get the line breaks in latex is to use a custom template to replace the line breaks with some marker and insert the linebreaks after the conversion to latex again.\nA simple template could look like:\n\n```\n((*- extends 'article.tplx' -*))\n\n((* block markdowncell scoped *))\n((( cell.source | replace('\\n','QQQQ\\n') | replace('   QQQQ','   ') | citation2latex | strip_files_prefix | markdown2latex | replace('QQQQ','\\n'))))\n((* endblock markdowncell *))\n```\n\nI haven't tested this thoroughly but with simple tests it worked fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55811913",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55811913",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55811913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODExOTEz",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T20:53:28Z",
    "updated_at": "2014-09-16T20:53:28Z",
    "author_association": "NONE",
    "body": "I have found that pandoc has an option --columns which sets the max number of characters in each column for the purposes of word wrapping. So if I use it on a correct markdown file, such as:\npandoc testNotes.md -t latex --columns 10000\n\nI get the desired output. Seeing as this _should_ be the desired default output, I would argue that ipython should use that option when internally calling pandoc. I don't have the technical knowledge to make that change, so is that something that someone could do? (maybe @minrk ?)\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55814394",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55814394",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55814394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODE0Mzk0",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T21:12:32Z",
    "updated_at": "2014-09-16T21:12:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you try the `--no-wrap` option as well? This seems more suited to your needs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55815316",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55815316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55815316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODE1MzE2",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T21:19:54Z",
    "updated_at": "2014-09-16T21:19:54Z",
    "author_association": "NONE",
    "body": "Ha! I somehow missed that one. Thanks. \n\nThe same question still applies to whether this can be incorporated internally into ipython (since it is clearly the desired behavior).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55825407",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55825407",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55825407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI1NDA3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T22:45:56Z",
    "updated_at": "2014-09-16T22:45:56Z",
    "author_association": "MEMBER",
    "body": "Does `--no-wrap` actually do what you want? In my tests, it doesn't seem to.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55832507",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55832507",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55832507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMyNTA3",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T00:13:28Z",
    "updated_at": "2014-09-17T00:22:19Z",
    "author_association": "NONE",
    "body": "Yes, --no-wrap works as expected. If I issue the following command on a\nmarkdown file with a really long line\n\n```\npandoc --no-wrap testNotes.md -o testNotes.tex\n```\n\nthen the resulting latex file has a really long line in it as well, just\nlike the markdown file.\n\nOn Tue, Sep 16, 2014 at 6:46 PM, Min RK notifications@github.com wrote:\n\n> Does --no-wrap actually do what you want? In my tests, it doesn't seem to.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6484#issuecomment-55825407.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55834739",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55834739",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55834739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM0NzM5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T00:45:38Z",
    "updated_at": "2014-09-17T00:45:38Z",
    "author_association": "MEMBER",
    "body": "ah, I see. You seem more concerned by pandoc adding newlines than you are by it removing them. `--no-wrap` prevents pandoc from inserting newlines in long lines, but it does _not_ prevent pandoc from concatenating short lines.\n\nSince `--no-wrap` ensures that every paragraph is a single line, I don't agree that it is clearly the desired behavior (it absolutely isn't for me).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55842420",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-55842420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 55842420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODQyNDIw",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T02:48:34Z",
    "updated_at": "2014-09-17T02:48:34Z",
    "author_association": "NONE",
    "body": "actually, you've got me there. I was so focused on the long lines that I didn't notice the short ones. I agree this is not the right behavior (and should probably be posted on pandoc's issues page. Thanks for the catch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/333380657",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-333380657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 333380657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzM4MDY1Nw==",
    "user": {
      "login": "Sriharsha-hatwar",
      "id": 14826535,
      "node_id": "MDQ6VXNlcjE0ODI2NTM1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14826535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sriharsha-hatwar",
      "html_url": "https://github.com/Sriharsha-hatwar",
      "followers_url": "https://api.github.com/users/Sriharsha-hatwar/followers",
      "following_url": "https://api.github.com/users/Sriharsha-hatwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sriharsha-hatwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sriharsha-hatwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sriharsha-hatwar/subscriptions",
      "organizations_url": "https://api.github.com/users/Sriharsha-hatwar/orgs",
      "repos_url": "https://api.github.com/users/Sriharsha-hatwar/repos",
      "events_url": "https://api.github.com/users/Sriharsha-hatwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sriharsha-hatwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-01T14:32:48Z",
    "updated_at": "2017-10-01T14:32:48Z",
    "author_association": "NONE",
    "body": "Is this issue similar to wherein when we leave a line space in a markdown cell after writing some text , it doesn't appear the same as is in the cell when we run the cell (with a line break wherever we have put one )?. I am a newbie in understanding why latex is used in this issue. Could anybody explain? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/333796816",
    "html_url": "https://github.com/ipython/ipython/issues/6484#issuecomment-333796816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6484",
    "id": 333796816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzc5NjgxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T10:03:06Z",
    "updated_at": "2017-10-03T10:03:06Z",
    "author_association": "MEMBER",
    "body": "The issue was about converting markdown to Latex using nbconvert.\r\n\r\nI think it is by design that the Markdown flavour we use treats consecutive lines as a paragraph, rather than preserving every newline you enter."
  }
]
