[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10172689",
    "html_url": "https://github.com/ipython/ipython/pull/2558#issuecomment-10172689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2558",
    "id": 10172689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTcyNjg5",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-08T01:30:22Z",
    "updated_at": "2012-11-08T01:30:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also I've tried and cannot reproduce this on Mac OS X... can you provide some directions?  Also, in your case what is the before an after of what `module_list` returns:\n\n``` python\nfrom IPython.core.completerlib import module_list\nmodule_list('/path/to/my.egg')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10173056",
    "html_url": "https://github.com/ipython/ipython/pull/2558#issuecomment-10173056",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2558",
    "id": 10173056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTczMDU2",
    "user": {
      "login": "didzis",
      "id": 70663,
      "node_id": "MDQ6VXNlcjcwNjYz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/didzis",
      "html_url": "https://github.com/didzis",
      "followers_url": "https://api.github.com/users/didzis/followers",
      "following_url": "https://api.github.com/users/didzis/following{/other_user}",
      "gists_url": "https://api.github.com/users/didzis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/didzis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/didzis/subscriptions",
      "organizations_url": "https://api.github.com/users/didzis/orgs",
      "repos_url": "https://api.github.com/users/didzis/repos",
      "events_url": "https://api.github.com/users/didzis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/didzis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-08T01:49:41Z",
    "updated_at": "2012-11-08T01:49:41Z",
    "author_association": "NONE",
    "body": "For me this problem appeared with sqlalchemy (http://www.sqlalchemy.org/). Installed the latest version (0.8.0b1) from source.\nAs I researched why import sqlalchemy completion doesn't work, I found that sqlachemy installed an .egg file, not a directory:\n/Library/Python/2.7/site-packages/SQLAlchemy-0.8.0b1-py2.7-macosx-10.8-intel.egg\n\nThe following piece from module_list()\n\n``` python\n    if os.path.isdir(path):\n        folder_list = os.listdir(path)\n    elif path.endswith('.egg'):\n        try:\n            folder_list = [f for f in zipimporter(path)._files]\n        except:\n            folder_list = []\n    else:\n        folder_list = []\n```\n\nsets folder_list to a list of all filenames in form:\n\n``` python\n['sqlalchemy/__init__.py',\n...\n'sqlalchemy/somedir/somefile.py',\n...]\n```\n\nAnd the module_list() returned an empty list, and after the patch it returns\n\n``` python\n['sqlalchemy']\n```\n\nAfter the patch it should return a list of module directory names.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10294640",
    "html_url": "https://github.com/ipython/ipython/pull/2558#issuecomment-10294640",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2558",
    "id": 10294640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk0NjQw",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T16:44:31Z",
    "updated_at": "2012-11-12T16:44:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, I see what you're saying now.  However, I think we can refactor the logic in this function to make it a lot more readable.  It's a bit odd that we repeat similar logic (\"ends in '.egg'\" and \"is a file\"/\"is not a directory\") in two different parts of the function where `folder_list` has two different meanings.  Yick!\n\nTo begin, it might be best to separate out the zipimport functionality into its own function:\n\nSomething like:\n\n``` py\n    elif path.endswith('.egg'):\n        try:\n            return _zipimport_module_list(path)\n        except:\n            ...\n```\n\nor\n\n``` py\n    elif path.endswith('.egg'):\n        try:\n            contents = zipimporter(path)._files\n            return _module_list_from_contents(contents)\n        except:\n            ...\n```\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10740351",
    "html_url": "https://github.com/ipython/ipython/pull/2558#issuecomment-10740351",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2558",
    "id": 10740351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzQwMzUx",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-27T00:00:30Z",
    "updated_at": "2012-11-27T00:00:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I mocked up two approaches to this problem.  To recap, the issue is that `module_list(path)` fails when `path` is the path to a `.egg` _file_.  In that case, we can only really work with `zipimporter(path)._files.keys()` which is a list like:\n\n``` python\n['EGG-INFO/PKG-INFO',\n 'EGG-INFO/SOURCES.txt',\n 'EGG-INFO/dependency_links.txt',\n 'EGG-INFO/native_libs.txt',\n 'EGG-INFO/top_level.txt',\n 'EGG-INFO/zip-safe',\n 'sqlalchemy/__init__.py',\n 'sqlalchemy/__init__.pyc',\n 'sqlalchemy/connectors/__init__.py',\n 'sqlalchemy/connectors/__init__.pyc',\n 'sqlalchemy/connectors/mxodbc.py',\n 'sqlalchemy/connectors/mxodbc.pyc',\n 'sqlalchemy/connectors/mysqldb.py',\n 'sqlalchemy/connectors/mysqldb.pyc',\n ...\n]\n```\n\nMy general approach here was to expand `import_re` to match packages:\n\n``` python\nimport_re = re.compile('(?P<name>[a-zA-Z_][a-zA-Z0-9_]*)'\n                       '(?P<package>/__init__)?'\n                       '(?P<suffix>%s)$' %\n                       '|'.join(re.escape(s[0]) for s in imp.get_suffixes()))\n```\n\nThen we can essentially just run `import_re.match(...)` on the list of files, and take the capture group `name` as the module name.\n\nTwo approaches:\n1. Keep the existing `module_list` code for _directories_ pretty similar, but move it to a separate function.  Then `module_list` looks like:\n\n``` py\ndef module_list(path):\n    if isdir(path):\n        return _module_list_directory(path)\n    elif isegg(path):\n        return _module_list_egg(path)\n    else:\n        return []\n```\n\n[source](https://github.com/bfroehle/ipython/blob/import_egg_completion/IPython/core/completerlib.py#L63) / [comparison view](https://github.com/bfroehle/ipython/compare/import_egg_completion)\n1. In the case that `path` is a directory rework the logic to build a list of all files in that directory and in one level of subdirectories.  Then use the `import_re` regex to match potential modules and packages.\n\n[source](https://github.com/bfroehle/ipython/blob/import_egg_completion2/IPython/core/completerlib.py#L63) / [comparison view](https://github.com/bfroehle/ipython/compare/import_egg_completion2)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11148154",
    "html_url": "https://github.com/ipython/ipython/pull/2558#issuecomment-11148154",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2558",
    "id": 11148154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ4MTU0",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T21:57:12Z",
    "updated_at": "2012-12-07T21:57:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "This pull request would close #2555.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11428306",
    "html_url": "https://github.com/ipython/ipython/pull/2558#issuecomment-11428306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2558",
    "id": 11428306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDI4MzA2",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T02:00:06Z",
    "updated_at": "2012-12-17T02:00:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've created #2690 to supersede this pull request.\n"
  }
]
