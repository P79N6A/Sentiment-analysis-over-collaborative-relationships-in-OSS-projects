[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/364697369",
    "html_url": "https://github.com/ipython/ipython/issues/11003#issuecomment-364697369",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11003",
    "id": 364697369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDY5NzM2OQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-10T21:52:25Z",
    "updated_at": "2018-02-10T21:52:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a persistent issue due to PyQt having a number of import-time configurations which are mutually exclusive.\r\n\r\nI suggest:\r\n\r\n a) importing `PyQt4` before you import anything from matplotlib (as mpl has enough logic to sort out what you imported and work with that).  This means you should not launch ipython with `--matplotlib=qt`\r\n b) import the `QtCore` from `matplotlib.backends.qt_compat` which uses the version matplotlib/ipython has already imported\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/364699397",
    "html_url": "https://github.com/ipython/ipython/issues/11003#issuecomment-364699397",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11003",
    "id": 364699397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDY5OTM5Nw==",
    "user": {
      "login": "ahmadryan",
      "id": 25327981,
      "node_id": "MDQ6VXNlcjI1MzI3OTgx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/25327981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadryan",
      "html_url": "https://github.com/ahmadryan",
      "followers_url": "https://api.github.com/users/ahmadryan/followers",
      "following_url": "https://api.github.com/users/ahmadryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadryan/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadryan/orgs",
      "repos_url": "https://api.github.com/users/ahmadryan/repos",
      "events_url": "https://api.github.com/users/ahmadryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-10T22:10:49Z",
    "updated_at": "2018-02-10T22:12:55Z",
    "author_association": "NONE",
    "body": "@tacaswell That works perfectly well, thank you.\r\nThough importing `QtCore` from `matplotlib.backends.qt_compat` does mean that I can't import the others like `QObject`, `SIGNAL` etc etc from `QtCore` directly, and hence at all the places where I was initially using just  `SIGNAL,`  now I have to use  `QtCore.SIGNAL`.\r\nIf I try to do `from matplotlib.backends.qt_compat.QtCore import SIGNAL` it throws up the error \r\n> ImportError: No module named QtCore"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368204621",
    "html_url": "https://github.com/ipython/ipython/issues/11003#issuecomment-368204621",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11003",
    "id": 368204621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIwNDYyMQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T06:29:10Z",
    "updated_at": "2018-02-24T06:29:10Z",
    "author_association": "MEMBER",
    "body": "@ahmadryan - glad you got a workaround. @tacaswell is the orginal something we can/should reliably detect and then provide your suggested workaround?"
  }
]
