[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430072086",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430072086",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430072086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA3MjA4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T01:46:16Z",
    "updated_at": "2018-10-16T01:46:16Z",
    "author_association": "NONE",
    "body": "This fixed things for the small test in #11362 \r\n\r\nI'm giving it a try on pandas docs."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430074777",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430074777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430074777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA3NDc3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T02:03:21Z",
    "updated_at": "2018-10-16T02:03:21Z",
    "author_association": "NONE",
    "body": "It seems like exceptions fail the build. With the same setup from #11362, \r\n\r\n```python\r\n# index.rst\r\nWelcome to test's documentation!\r\n================================\r\n\r\n.. ipython:: python\r\n\r\n   def f(x):\r\n       x = 2\r\n       raise ValueError('bad')\r\n       return x\r\n\r\n   f(2)\r\n\r\n.. ipython:: python\r\n\r\n   print('hi')\r\n\r\n\r\nTesting\r\n```\r\n\r\nthen `make html` results in \r\n\r\n```\r\nRunning Sphinx v1.8.1\r\nmaking output directory...\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [html]: targets for 1 source files that are out of date\r\nupdating environment: 1 added, 0 changed, 0 removed\r\nreading sources... [100%] index\r\n\r\n>>>-------------------------------------------------------------------------\r\nException in /Users/taugspurger/sandbox/sphinx-test/index.rst at block ending on line 12\r\nSpecify :okexcept: as an option in the ipython:: block to suppress this message\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-c510dc86724b> in <module>\r\n----> 1 f(2)\r\n\r\n<ipython-input-1-fe8b2c77be70> in f(x)\r\n      1 def f(x):\r\n      2     x = 2\r\n----> 3     raise ValueError('bad')\r\n      4     return x\r\n\r\nValueError: bad\r\n<<<-------------------------------------------------------------------------\r\n\r\n\r\nException occurred:\r\n  File \"/Users/taugspurger/sandbox/IPython/IPython/sphinxext/ipython_directive.py\", line 562, in process_input\r\n    raise RuntimeError('Non Expected exception in `{}` line {}'.format(filename, lineno))\r\nRuntimeError: Non Expected exception in `/Users/taugspurger/sandbox/sphinx-test/index.rst` line 12\r\nThe full traceback has been saved in /var/folders/hz/f43khqfn7b1b1g8z_z6y3bsw0000gp/T/sphinx-err-6psc98eb.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\nmake: *** [html] Error 2\r\n```\r\n\r\nI I include `okexcept` as an argument to the directive, things do finish. IIRC, the behavior on 6.x was to print a warning to stdout with a message telling you to use `okexcept`.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430086789",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430086789",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430086789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA4Njc4OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T03:18:43Z",
    "updated_at": "2018-10-16T03:18:43Z",
    "author_association": "MEMBER",
    "body": "> I I include `okexcept` as an argument to the directive, things do finish. IIRC, the behavior on 6.x was to print a warning to stdout with a message telling you to use `okexcept`.\r\n\r\nYes but that was changed explicitley in https://github.com/ipython/ipython/pull/11321 (should maybe have been better documented) to actually start to catch regression in documentation.... \r\n\r\nI can try to make it configurable though. One other discussion was to make `okexcept` fail if there is actually no exception... "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430089318",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430089318",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430089318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA4OTMxOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T03:36:12Z",
    "updated_at": "2018-10-16T03:36:12Z",
    "author_association": "MEMBER",
    "body": "You can now set `ipython_strict_fail = False` in your `config.py` to get back previous behavior. \r\n\r\nif you have a better name... \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430190574",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430190574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430190574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDE5MDU3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T10:45:04Z",
    "updated_at": "2018-10-16T10:45:04Z",
    "author_association": "NONE",
    "body": "Thanks, that name seems fine, but if you want to match Sphinx I think it would be `ipython_warning_is_error` to match `warning-is-error`."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430296761",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430296761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430296761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDI5Njc2MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T16:04:53Z",
    "updated_at": "2018-10-16T16:04:53Z",
    "author_association": "MEMBER",
    "body": "> `ipython_warning_is_error` to match `warning-is-error`\r\n\r\nDone, \r\n\r\nSyntaxError is now detected as a error as well, I restored the old documentation from 0.13... that may need some polish. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/430844548",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-430844548",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 430844548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg0NDU0OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T01:31:58Z",
    "updated_at": "2018-10-18T01:31:58Z",
    "author_association": "MEMBER",
    "body": "Thanks @choldgraf for the feedback, I've open #11410 as a easy first issue to follow up on. \r\n\r\nI'm going to get that in as it fixes some functionalities."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/431689271",
    "html_url": "https://github.com/ipython/ipython/pull/11402#issuecomment-431689271",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11402",
    "id": 431689271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTY4OTI3MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-21T17:52:00Z",
    "updated_at": "2018-10-21T17:52:00Z",
    "author_association": "MEMBER",
    "body": "No problem, restructured text can be complicated at time.\n\nOn Sun, Oct 21, 2018, 10:49 Luciana da Costa Marques <\nnotifications@github.com> wrote:\n\n> *@LucianaMarques* commented on this pull request.\n> ------------------------------\n>\n> In docs/source/development/ipython_directive.rst\n> <https://github.com/ipython/ipython/pull/11402#discussion_r226871658>:\n>\n> > +\n> +@suppress\n> +\n> +    execute the ipython input block, but suppress the input and output\n> +    block from the rendered output.  Also, can be applied to the entire\n> +    ``.. ipython`` block as a directive option with ``:suppress:``.\n> +\n> +@verbatim\n> +\n> +    insert the input and output block in verbatim, but auto-increment\n> +    the line numbers. Internally, the interpreter will be fed an empty\n> +    string, so it is a no-op that keeps line numbering consistent.\n> +    Also, can be applied to the entire ``.. ipython`` block as a\n> +    directive option with ``:verbatim:``.\n> +\n> +@savefig OUTFILE [IMAGE_OPTIONS]\n>\n> Hey Carreau, I think I had this doubt because I was not familiar with\n> reStructureText until today. Thank you for your reply!\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/pull/11402#discussion_r226871658>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez1fiY8gzr6ON8z8Rv6StIRy3XyYRks5unLONgaJpZM4XdZXN>\n> .\n>\n"
  }
]
