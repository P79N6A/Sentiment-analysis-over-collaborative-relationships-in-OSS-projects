[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2686986",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2686986",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2686986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODY5ODY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T20:44:42Z",
    "updated_at": "2011-11-09T20:44:42Z",
    "author_association": "MEMBER",
    "body": "Good point. The fix will need to be reviewed _very carefully_ to ensure it works on Windows as well: it's really easy with these filesystem things to do something that breaks badly on windows, especially given that by and large, the core devs are not windows experts.  I doubt we'll want to make such a dangerous change before 0.12 is out, but it's certainly something that needs fixing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687156",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2687156",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2687156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODcxNTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T20:56:39Z",
    "updated_at": "2011-11-09T20:57:01Z",
    "author_association": "MEMBER",
    "body": "I presume this means that `IPython/frontend/html/notebook/static` should go in `data_files` instead of `package_data`, rather than being included.  What is the mechanism for determining where this data has ended up after install?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687251",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2687251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2687251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODcyNTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:03:40Z",
    "updated_at": "2011-11-09T21:03:40Z",
    "author_association": "MEMBER",
    "body": "On Wed, Nov 9, 2011 at 12:56 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> I presume this means that `IPython/frontend/html/notebook/static' should go in`data_files`instead of`package_data`, rather than being included.  What is the mechanism for determining where this data has ended up after install?\n\nYes.  And that's the problem, I don't remember right now that\nmechanism.  But I think the rule is sys.prefix+'share', though we'd\nneed to double check and make sure it's the same thing on win32.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687777",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2687777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2687777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODc3Nzc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:37:35Z",
    "updated_at": "2011-11-09T21:37:35Z",
    "author_association": "MEMBER",
    "body": "[ref](http://docs.python.org/distutils/setupscript.html#installing-additional-files)\n\n> If `directory` is a relative path, it is interpreted relative to the installation prefix (Python’s `sys.prefix` for pure-Python packages, `sys.exec_prefix` for packages that contain extension modules)\n\nOn my machines, these are:\n- windows 7-x64: `C:\\Python27`\n- OSX (10.7): `/System/Library/Frameworks/Python.framework/Versions/2.7` for system (remove leading `/System` for user-installed Pythons)\n- Linux (Ubuntu 10.04): `/usr`\n\nBut this is actually not helpful - it is based on the _install_ prefix, which can be different for users why install with `--user` or `--prefix` args.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2690687",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2690687",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2690687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA2ODc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-10T02:16:59Z",
    "updated_at": "2011-11-10T02:16:59Z",
    "author_association": "MEMBER",
    "body": "As far as I can tell (and @fperez and I chatted about this today), Python doesn't provide a good way for _code_ to find where `data_files` actually went (for instance, sys.prefix is actually wrong.  That means that IPython is going to continue to ship things like the `notebook/static` dir, logos, etc. inside the package.  What we should do is make it as easy as possible for deb/rpm/etc packagers to change this, as they _can_ know where the data files are going to go.\n\nThe lowest friction path I see is to treat everything that would go in data_files if that were a reasonable thing to do in Python, and put it all relative to `IPython.share` (or some such).  That should, in theory, allow package managers to put that stuff in /usr/share with a minimal patch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2701563",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2701563",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2701563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDE1NjM=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-10T21:41:02Z",
    "updated_at": "2011-11-10T21:41:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "from debian packaging perspective it is not a large issue, the python2 packaging helpers already symlinks the whole package into usr/share anyway. So I agree this should not be done hastily before 0.12.\nIt still is an issue in python3. That helper does not do this symlinking anymore because shared python files do not need to be split anymore thanks to the improved **pycache**.\n\nI like the idea to place all shared data (=also the ressources of qtconsole) into one single folder in the package. It is then easy to symlink it all manually.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2701751",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2701751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2701751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDE3NTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-10T21:54:45Z",
    "updated_at": "2011-11-10T21:54:45Z",
    "author_association": "MEMBER",
    "body": "On Thu, Nov 10, 2011 at 1:41 PM, Julian Taylor\nreply@reply.github.com\nwrote:\n\n> I like the idea to place all shared data (=also the ressources of qtconsole) into one single folder in the package. It is then easy to symlink it all manually.\n\nThat's probably the best solution going forward, since distutils makes\nit pretty much impossible for packages to know at runtime where their\nbits ended up being installed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2702429",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2702429",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2702429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI0Mjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-10T22:46:01Z",
    "updated_at": "2011-11-10T22:46:01Z",
    "author_association": "MEMBER",
    "body": "Right - data_files is absolutely the right approach for this sort of thing, we just have to redirect it into the package dir, because there isn't a general way to reconstruct where data_files actually went.  That should make it quite easy for package maintainers who don't have to allow for arbitrary install prefixes to use the proper mechanism.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2799116",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2799116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2799116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTkxMTY=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-19T14:59:00Z",
    "updated_at": "2011-11-19T15:00:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "somewhat related: these files installed as copies into two different folders, once _images once _static\nusr/share/doc/ipython/html/_images/ms_visual_studio.png usr/share/doc/ipython/html/_static/ms_visual_studio.png\nusr/share/doc/ipython/html/_images/qtconsole.png usr/share/doc/ipython/html/_static/qtconsole.png\n\nas they are rather large (1XXkb) there should only be one copy\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2802676",
    "html_url": "https://github.com/ipython/ipython/issues/983#issuecomment-2802676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/983",
    "id": 2802676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDI2NzY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-20T06:03:07Z",
    "updated_at": "2011-11-20T06:03:07Z",
    "author_association": "MEMBER",
    "body": "@juliantaylor: in the source tree there's only one copy of each.  It's sphinx who makes the copies of all images out to the `_images` directory at build time.  I don't know if it's possible to prevent that, a cursory look through the sphinx docs didn't turn up anything useful for this...\n\nSo I suspect this will stay as-is, unless sphinx improves (it could at least hardlink on filesystems that support it), because I think the issue is really a sphinx one, not ours.\n"
  }
]
