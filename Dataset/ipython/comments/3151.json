[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16122785",
    "html_url": "https://github.com/ipython/ipython/issues/3151#issuecomment-16122785",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3151",
    "id": 16122785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTIyNzg1",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-09T16:11:46Z",
    "updated_at": "2013-04-09T16:11:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I can reproduce.  Please note you can use the cell magic version of `%%timeit` as follows:\n\n```\nIn [12]: %%timeit x=128\n   ....: x^=255\n   ....:\n10000000 loops, best of 3: 66.5 ns per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16126946",
    "html_url": "https://github.com/ipython/ipython/issues/3151#issuecomment-16126946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3151",
    "id": 16126946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTI2OTQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-09T17:21:33Z",
    "updated_at": "2013-04-09T17:21:33Z",
    "author_association": "MEMBER",
    "body": "It's not, however, specific to IPython - I see the same error from doing `timeit.timeit(\"x^=255\")`. It's ultimately because timeit creates a function around the code you give it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16154338",
    "html_url": "https://github.com/ipython/ipython/issues/3151#issuecomment-16154338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3151",
    "id": 16154338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU0MzM4",
    "user": {
      "login": "lebigot",
      "id": 5793,
      "node_id": "MDQ6VXNlcjU3OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lebigot",
      "html_url": "https://github.com/lebigot",
      "followers_url": "https://api.github.com/users/lebigot/followers",
      "following_url": "https://api.github.com/users/lebigot/following{/other_user}",
      "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions",
      "organizations_url": "https://api.github.com/users/lebigot/orgs",
      "repos_url": "https://api.github.com/users/lebigot/repos",
      "events_url": "https://api.github.com/users/lebigot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lebigot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T04:07:18Z",
    "updated_at": "2013-04-10T04:21:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good points!\n\nHowever, it would be convenient and more natural to have IPython be more flexible than `timeit.timeit()`: `%timeit y = x` works, but not `%timeit x = x`, which is surprising because `%timeit` looks like it knows about globals (for users who do not know that the limitation comes from wrapping the code inside a function).\n\nThe problem can be solved more generally by doing:\n\n```\n>>> %%timeit global x, y\n... x ^= 255\n... y ^= 1\n```\n\nwhich has the advantage of not forcing the user to input again variables that might result from longer calculations.\n\nHowever, I think that it would be even better if `%timeit` had a slightly different semantics and automatically used the global variables: this would be consistent with the absence of an explicit function around %timeit in IPython (which makes users assume that the variables manipulated by `%timeit` are global, like in the shell). What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16171014",
    "html_url": "https://github.com/ipython/ipython/issues/3151#issuecomment-16171014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3151",
    "id": 16171014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTcxMDE0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T12:29:56Z",
    "updated_at": "2013-04-10T12:29:56Z",
    "author_association": "MEMBER",
    "body": "I think to do that, we'd have to embed all the timing and reporting code into the block that gets run in the user namespace. I think that's doable, but it's somewhat awkward, and we'd have to take care to only use variables that the user is unlikely to have set.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41953127",
    "html_url": "https://github.com/ipython/ipython/issues/3151#issuecomment-41953127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3151",
    "id": 41953127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTUzMTI3",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-01T20:30:13Z",
    "updated_at": "2014-05-01T20:30:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that mutating global state in `%timeit` is a bad idea, because it runs the code several times, and ideally you want that code that it runs to be exactly the same each time. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41980167",
    "html_url": "https://github.com/ipython/ipython/issues/3151#issuecomment-41980167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3151",
    "id": 41980167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTgwMTY3",
    "user": {
      "login": "lebigot",
      "id": 5793,
      "node_id": "MDQ6VXNlcjU3OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lebigot",
      "html_url": "https://github.com/lebigot",
      "followers_url": "https://api.github.com/users/lebigot/followers",
      "following_url": "https://api.github.com/users/lebigot/following{/other_user}",
      "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions",
      "organizations_url": "https://api.github.com/users/lebigot/orgs",
      "repos_url": "https://api.github.com/users/lebigot/repos",
      "events_url": "https://api.github.com/users/lebigot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lebigot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-02T02:54:13Z",
    "updated_at": "2014-05-02T02:54:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "While I agree about the need to have the code run to be the same at each iteration, this does not imply that mutating the global state is a bad idea (even though it might be a bad idea). For example, the intent of `%timeit x ^= 255` is obvious, and the code run at each iteration is the same, despite the fact that a global is modified.\n"
  }
]
