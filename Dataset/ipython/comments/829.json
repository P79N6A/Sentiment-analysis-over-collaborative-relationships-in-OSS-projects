[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2254149",
    "html_url": "https://github.com/ipython/ipython/issues/829#issuecomment-2254149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/829",
    "id": 2254149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQxNDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-30T21:29:24Z",
    "updated_at": "2011-09-30T21:29:24Z",
    "author_association": "MEMBER",
    "body": "This needs to be thought about a little carefully.  We don't 'insert newlines', rather each published message (caused by stream.flush) gets its own div.  In order to match the single-line flush behavior, we would need to append to an existing div.  That's not hard to do, but it's slightly ambiguous what should be done, given that there can be stdout, stderr, and display data all produce messages.\n1. only append if the _last_ output was from the same stream - this is the easiest, and probably most logical\n2. streams always stay contiguous for a given message - this lets you easily grab stdout or stderr from a given command, but will result in out-of-order messages if one prints to stdout, then stderr (or publish), then stdout again.\n\nNeither should be difficult, we just have to pick (and there might even be further choices).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2254412",
    "html_url": "https://github.com/ipython/ipython/issues/829#issuecomment-2254412",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/829",
    "id": 2254412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0MTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-30T22:16:57Z",
    "updated_at": "2011-09-30T22:16:57Z",
    "author_association": "MEMBER",
    "body": "@yarikoptic, @minrk and I just chatted and he already knows how to implement approach #1 above, which should pretty much take care of this problem.  Thanks for the report!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2410594",
    "html_url": "https://github.com/ipython/ipython/issues/829#issuecomment-2410594",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/829",
    "id": 2410594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTA1OTQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T19:41:09Z",
    "updated_at": "2011-10-14T19:41:09Z",
    "author_association": "MEMBER",
    "body": "fixed by PR #830\n"
  }
]
