[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12715888",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12715888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12715888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzE1ODg4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T19:11:08Z",
    "updated_at": "2013-01-25T19:11:08Z",
    "author_association": "MEMBER",
    "body": "I think run all is far too big an action to be bound to the single most likely accidental shortcut.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12717342",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12717342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12717342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzE3MzQy",
    "user": {
      "login": "wking",
      "id": 209920,
      "node_id": "MDQ6VXNlcjIwOTkyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/209920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wking",
      "html_url": "https://github.com/wking",
      "followers_url": "https://api.github.com/users/wking/followers",
      "following_url": "https://api.github.com/users/wking/following{/other_user}",
      "gists_url": "https://api.github.com/users/wking/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wking/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wking/subscriptions",
      "organizations_url": "https://api.github.com/users/wking/orgs",
      "repos_url": "https://api.github.com/users/wking/repos",
      "events_url": "https://api.github.com/users/wking/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wking/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T19:43:18Z",
    "updated_at": "2013-01-25T19:43:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Fri, Jan 25, 2013 at 11:11:20AM -0800, Min RK wrote:\n\n> I think run all is far too big an action to be bound to the single\n> most likely accidental shortcut.\n\nCan we mask it behind a configuration option so we can agree to\ndisagree? ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12718153",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12718153",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12718153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzE4MTUz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T20:01:39Z",
    "updated_at": "2013-01-25T20:01:39Z",
    "author_association": "MEMBER",
    "body": "Yes we plan on making shortcut configurable, but the faculty to make\nnotebook configurable is not there yet. So one step at a time.\nLe 25 janv. 2013 20:43, \"W. Trevor King\" notifications@github.com a\nécrit :\n\n> On Fri, Jan 25, 2013 at 11:11:20AM -0800, Min RK wrote:\n> \n> > I think run all is far too big an action to be bound to the single\n> > most likely accidental shortcut.\n> \n> Can we mask it behind a configuration option so we can agree to\n> disagree? ;)\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2846#issuecomment-12717342.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12721133",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12721133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12721133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzIxMTMz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T21:13:21Z",
    "updated_at": "2013-01-25T21:13:21Z",
    "author_association": "MEMBER",
    "body": "A couple of point:\n- I agree with Min that this is too big of an action to bind to this keystroke.\n- I don't think that run all is so common that it deserves a keyboard shortcut.  My vision of keyboard shortcuts is that only the really common actions should get them.\n- The whole idea of of \"we can't agree so let's make it configurable\" is a direction we don't want to go in.  There are cases where configuration makes sense, but not for resolving disagreement.  Configuration add complexity to the code base and is worse then simply making a good choice in most cases.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12721229",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12721229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12721229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzIxMjI5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T21:16:16Z",
    "updated_at": "2013-01-25T21:16:16Z",
    "author_association": "MEMBER",
    "body": "For what it's worth, +1 to Brian's comment points.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12721513",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12721513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12721513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzIxNTEz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T21:23:13Z",
    "updated_at": "2013-01-25T21:23:13Z",
    "author_association": "MEMBER",
    "body": "> The whole idea of of \"we can't agree so let's make it configurable\" is a direction we don't want to go in. There are cases where configuration makes sense, but not for resolving disagreement. Configuration add complexity to the code base and is worse then simply making a good choice in most cases.\n\nStill at some point we will have to make shortcut key configurable, as otherwise we will be blocked by some combinaison of Os/keyboard layout/browser. I agree with not making everything configurable, but personaly working with a non-english keyboard I came to often in contact with software that I couldn't use because of the non-configurability of the keyboard, \n\nLike those that have Ctrl+1 and Ctrl+Shift+1 as 2 shortcut but on french keyboard you need shift to get the 1...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12721715",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12721715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12721715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzIxNzE1",
    "user": {
      "login": "wking",
      "id": 209920,
      "node_id": "MDQ6VXNlcjIwOTkyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/209920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wking",
      "html_url": "https://github.com/wking",
      "followers_url": "https://api.github.com/users/wking/followers",
      "following_url": "https://api.github.com/users/wking/following{/other_user}",
      "gists_url": "https://api.github.com/users/wking/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wking/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wking/subscriptions",
      "organizations_url": "https://api.github.com/users/wking/orgs",
      "repos_url": "https://api.github.com/users/wking/repos",
      "events_url": "https://api.github.com/users/wking/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wking/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T21:27:56Z",
    "updated_at": "2013-01-25T21:27:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Fri, Jan 25, 2013, Bussonnier Matthias wrote:\n\n> Yes we plan on making shortcut configurable, but the faculty to make\n> notebook configurable is not there yet. So one step at a time.\n\nThat's a better fix, yes.\n\nI'll work on managing my mouse-aversion in the meantime ;).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12806642",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-12806642",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 12806642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODA2NjQy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T21:43:37Z",
    "updated_at": "2013-01-28T21:43:37Z",
    "author_association": "MEMBER",
    "body": "I think consensus is that we are not going forward with this one right now, so I am going to close it.  We will try to make progress on the larger keyboard shortcut config situation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15322397",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-15322397",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 15322397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzIyMzk3",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-22T21:27:57Z",
    "updated_at": "2013-03-22T21:27:57Z",
    "author_association": "MEMBER",
    "body": "since this came up on the SWC list again, I want to clarify the [IPython policy on closing pull requests](https://github.com/ipython/ipython/wiki/Dev:-Closing-pull-requests)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109319857",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-109319857",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 109319857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTMxOTg1Nw==",
    "user": {
      "login": "lexelby",
      "id": 4446653,
      "node_id": "MDQ6VXNlcjQ0NDY2NTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4446653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lexelby",
      "html_url": "https://github.com/lexelby",
      "followers_url": "https://api.github.com/users/lexelby/followers",
      "following_url": "https://api.github.com/users/lexelby/following{/other_user}",
      "gists_url": "https://api.github.com/users/lexelby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lexelby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lexelby/subscriptions",
      "organizations_url": "https://api.github.com/users/lexelby/orgs",
      "repos_url": "https://api.github.com/users/lexelby/repos",
      "events_url": "https://api.github.com/users/lexelby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lexelby/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T14:57:10Z",
    "updated_at": "2015-06-05T14:57:10Z",
    "author_association": "NONE",
    "body": "I too wanted to be able to quickly restart the kernel and rerun all of my code blocks.  I've found a solution that I'm pretty happy with, and it requires no modification of ipython's code.\n\nFirst off, I noted that restarting the kernel takes a long time, and that annoyed me, so I found a different way to do what I wanted.  I just want to be able to modify code buried in modules and then rerun my test code entirely, reimporting everything to get the latest version of all of my modules.  A kernel restart will do that, but it turns out it's not necessary.  Instead, we can blow away all modules which will cause them to be reloaded by the next `import` statement.  I do this by carefully manipulating `sys.modules` and `locals()`.  I put this in `~/.ipython/<profile>/startup/restart.py`:\n\n```\ndef _iprestart():\n    import sys\n    for module in sys.modules.keys():\n        if module not in _initial_modules:\n            del sys.modules[module]\n\n    scope_pointer = _scope_pointer\n    scope_copy = _scope_copy\n    scope_pointer.clear()\n    scope_pointer.update(scope_copy)\n    scope_pointer['_scope_pointer'] = scope_pointer\n    scope_pointer['_scope_copy'] = scope_copy\n\nimport sys\n_initial_modules = sys.modules.keys()\n_scope_pointer = locals()\n_scope_copy = locals().copy()\n```\n\nThe code here is rather bizarre because I'm modifying a scope that `_iprestart()` is in the middle of using.  It boils down to:\n- Save a copy of sys.modules after ipython starts up.\n- Also save a copy of the contents of locals().\n- When _iprestart is called:\n  1. remove all modules from sys.modules that were added after startup\n  2. erase the interpreter's locals()\n  3. replace the interpreter's locals() with the saved copy of locals()\n  4. replace references that we'll need next time _iprestart() is called\n\nConvoluted, but it works.\n\nNext, we need to bind this to a shortcut in IPython Notebook.  Add this to `static/custom/custom.js` in your profile directory:\n\n```\nvar rerun = function (event) {\n        IPython.notebook.kernel.execute('_iprestart()');\n        IPython.notebook.execute_cell_range(0, IPython.notebook.ncells());\n        return false;\n    };\n\n$([IPython.events]).on('app_initialized.NotebookApp', function(){\n    IPython.keyboard_manager.command_shortcuts.add_shortcut('Ctrl-r', rerun);\n    IPython.keyboard_manager.edit_shortcuts.add_shortcut('Ctrl-r', rerun);\n    IPython.toolbar.add_buttons_group([\n        {\n             'label'   : 'reload and rerun',\n             'icon'    : 'icon-refresh',\n             'callback': rerun\n        }\n    ]);\n\n    IPython.keyboard_manager.command_shortcuts.remove_shortcut('Ctrl-k');\n});\n```\n\nThe removal of Ctlr-k is just because I hate that ipython eats chrome's ctrl-k, which is used to focus the location bar in search mode.\n\nNow you'll have ctrl-R which will wipe the interpreter's slate clean and rerun all cells.  The shortcut can be used anywhere (command mode or edit mode).  A toolbar button is also added.\n\nVictory!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109363230",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-109363230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 109363230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTM2MzIzMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T17:00:16Z",
    "updated_at": "2015-06-05T17:00:16Z",
    "author_association": "MEMBER",
    "body": "That’s nice. \n\nDid you had a look at deep-reload (in IPython.lib) as well as `%reset` and `%reset_selective` magics ? \n— \nm\n\n> On Jun 5, 2015, at 07:57, Lex Neva notifications@github.com wrote:\n> \n> I too wanted to be able to quickly restart the kernel and rerun all of my code blocks. I've found a solution that I'm pretty happy with, and it requires no modification of ipython's code.\n> \n> First off, I noted that restarting the kernel takes a long time, and that annoyed me, so I found a different way to do what I wanted. I just want to be able to modify code buried in modules and then rerun my test code entirely, reimporting everything to get the latest version of all of my modules. A kernel restart will do that, but it turns out it's not necessary. Instead, we can blow away all modules which will cause them to be reloaded by the next import statement. I do this by carefully manipulating sys.modules and locals(). I put this in ~/.ipython/<profile>/startup/restart.py:\n> \n> def _iprestart():\n>     import sys\n>     for module in sys.modules.keys():\n>         if module not in _initial_modules:\n>             del sys.modules[module]\n> \n> ```\n> scope_pointer = _scope_pointer\n> scope_copy = _scope_copy\n> scope_pointer.clear()\n> scope_pointer.update(scope_copy)\n> scope_pointer['_scope_pointer'] = scope_pointer\n> scope_pointer['_scope_copy'] = scope_copy\n> ```\n> \n> import sys\n> _initial_modules = sys.modules.keys()\n> _scope_pointer = locals()\n> _scope_copy = locals().copy()\n> The code here is rather bizarre because I'm modifying a scope that _iprestart() is in the middle of using. It boils down to:\n> \n> Save a copy of sys.modules after ipython starts up.\n> Also save a copy of the contents of locals().\n> When _iprestart is called:\n> remove all modules from sys.modules that were added after startup\n> erase the interpreter's locals()\n> replace the interpreter's locals() with the saved copy of locals()\n> replace references that we'll need next time _iprestart() is called\n> Convoluted, but it works.\n> \n> Next, we need to bind this to a shortcut in IPython Notebook. Add this to static/custom/custom.js in your profile directory:\n> \n> var rerun = function (event) {\n>         IPython.notebook.kernel.execute('_iprestart()');\n>         IPython.notebook.execute_cell_range(0, IPython.notebook.ncells());\n>         return false;\n>     };\n> \n> $([IPython.events]).on('app_initialized.NotebookApp', function(){\n>     IPython.keyboard_manager.command_shortcuts.add_shortcut('Ctrl-r', rerun);\n>     IPython.keyboard_manager.edit_shortcuts.add_shortcut('Ctrl-r', rerun);\n>     IPython.toolbar.add_buttons_group([\n>         {\n>              'label'   : 'reload and rerun',\n>              'icon'    : 'icon-refresh',\n>              'callback': rerun\n>         }\n>     ]);\n> \n> ```\n> IPython.keyboard_manager.command_shortcuts.remove_shortcut('Ctrl-k');\n> ```\n> \n> });\n> The removal of Ctlr-k is just because I hate that ipython eats chrome's ctrl-k, which is used to focus the location bar in search mode.\n> \n> Now you'll have ctrl-R which will wipe the interpreter's slate clean and rerun all cells. The shortcut can be used anywhere (command mode or edit mode). A toolbar button is also added.\n> \n> Victory!\n> \n> —\n> Reply to this email directly or view it on GitHub https://github.com/ipython/ipython/pull/2846#issuecomment-109319857.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109661379",
    "html_url": "https://github.com/ipython/ipython/pull/2846#issuecomment-109661379",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2846",
    "id": 109661379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTY2MTM3OQ==",
    "user": {
      "login": "lexelby",
      "id": 4446653,
      "node_id": "MDQ6VXNlcjQ0NDY2NTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4446653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lexelby",
      "html_url": "https://github.com/lexelby",
      "followers_url": "https://api.github.com/users/lexelby/followers",
      "following_url": "https://api.github.com/users/lexelby/following{/other_user}",
      "gists_url": "https://api.github.com/users/lexelby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lexelby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lexelby/subscriptions",
      "organizations_url": "https://api.github.com/users/lexelby/orgs",
      "repos_url": "https://api.github.com/users/lexelby/repos",
      "events_url": "https://api.github.com/users/lexelby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lexelby/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-07T00:39:09Z",
    "updated_at": "2015-06-07T00:39:09Z",
    "author_association": "NONE",
    "body": "I considered dreload, but it's not really the solution I wanted because it requires me to manually reload each module I use every time I want to test my code.  %reset is interesting, but it doesn't include unloading modules, so I'd still have to do that.  Plus it would blow away any attempt I made to save the initial module list (unless I stuffed it in sys or something).\n\nMy use case is that I want the convenience of ipython (having every line run in a REPL so that I can experiment) with the ability to design and run a test case on the fly.  A test script isn't really what I want because I want the REPL.  My solution works perfectly for my use case -- it's really the missing piece of Python development that I've been searching for.\n"
  }
]
