[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61112971",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61112971",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61112971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTEyOTcx",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T15:34:51Z",
    "updated_at": "2014-10-30T15:34:51Z",
    "author_association": "MEMBER",
    "body": "@jdfreder @jasongrout \nThis is pretty bad. Any idea about what would be the best way to solve this? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61126301",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61126301",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61126301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTI2MzAx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T16:49:42Z",
    "updated_at": "2014-10-30T16:49:42Z",
    "author_association": "MEMBER",
    "body": "I think that the validation should happen on both ends and the values should be sent in batch.  Here's my timeline of the events taking place.  Red means set in the given context, blue means set as a result of a message from the other end, and the carrot in front of the second backend line means that it was set by the validation logic.\n\n![photo on 10-30-14 at 9 41 am](https://cloud.githubusercontent.com/assets/3292874/4847581/1615fcce-6054-11e4-9d46-dbcc94046fd2.jpg)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61127061",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61127061",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61127061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTI3MDYx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T16:53:59Z",
    "updated_at": "2014-10-30T16:53:59Z",
    "author_association": "MEMBER",
    "body": "In other words, this is how it should look:\n![photo on 10-30-14 at 9 52 am](https://cloud.githubusercontent.com/assets/3292874/4847772/56c2efc4-6055-11e4-8025-5bb90c10dc71.jpg)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61131216",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61131216",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61131216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTMxMjE2",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T17:18:20Z",
    "updated_at": "2014-10-30T17:18:20Z",
    "author_association": "MEMBER",
    "body": "Yeah, using `hold_sync` solves the issue as well, but should not be necessary. \nThe validation on both sides that you propose would work for us. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61132414",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61132414",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61132414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTMyNDE0",
    "user": {
      "login": "ssunkara1",
      "id": 6981114,
      "node_id": "MDQ6VXNlcjY5ODExMTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6981114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssunkara1",
      "html_url": "https://github.com/ssunkara1",
      "followers_url": "https://api.github.com/users/ssunkara1/followers",
      "following_url": "https://api.github.com/users/ssunkara1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssunkara1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssunkara1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssunkara1/subscriptions",
      "organizations_url": "https://api.github.com/users/ssunkara1/orgs",
      "repos_url": "https://api.github.com/users/ssunkara1/repos",
      "events_url": "https://api.github.com/users/ssunkara1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssunkara1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T17:24:49Z",
    "updated_at": "2014-10-30T17:24:49Z",
    "author_association": "NONE",
    "body": "I think validation if the value is between the min and max on one side, i.e., the python side, will be sufficient. \n\nBecause on the JS side, we cannot make the value go beyond the min and the max, and also, the min and max cannot be changed from JS. The only place where the value might go beyond the min and max is when any of the attributes are changed from the python side.  \n\nMost likely I am missing something. What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61132943",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61132943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61132943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTMyOTQz",
    "user": {
      "login": "ssunkara1",
      "id": 6981114,
      "node_id": "MDQ6VXNlcjY5ODExMTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6981114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssunkara1",
      "html_url": "https://github.com/ssunkara1",
      "followers_url": "https://api.github.com/users/ssunkara1/followers",
      "following_url": "https://api.github.com/users/ssunkara1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssunkara1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssunkara1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssunkara1/subscriptions",
      "organizations_url": "https://api.github.com/users/ssunkara1/orgs",
      "repos_url": "https://api.github.com/users/ssunkara1/repos",
      "events_url": "https://api.github.com/users/ssunkara1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssunkara1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T17:27:21Z",
    "updated_at": "2014-10-30T17:27:21Z",
    "author_association": "NONE",
    "body": "And the reason I a bit wary about setting the value from the JS side as response to something which happened on the python side is that we might run into race conditions where it is set to a different value on the python side in subsequent statements.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61165299",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61165299",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61165299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY1Mjk5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T20:37:53Z",
    "updated_at": "2014-10-30T20:37:53Z",
    "author_association": "MEMBER",
    "body": "The min, max, and value can all be changed in javascript (for example, using the infamous javascript link widget to link traits together :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61166602",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61166602",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61166602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY2NjAy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T20:46:24Z",
    "updated_at": "2014-10-30T20:46:24Z",
    "author_association": "MEMBER",
    "body": "One high-overhead way to get around it is to maintain a counter of state changes for the changes on a widget.  Or we can sometimes ignore messages with parent_message of something we sent (so the validation coming back from javascript should have parent_message of the original min).  Or we can do validation on python side _before_ sending the message, so the state is always consistent with the validation.  I think I like this last one best.  The state sent over the wire should always be consistent with the assumptions of the relations between the attributes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61166604",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61166604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61166604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY2NjA0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T20:46:26Z",
    "updated_at": "2014-10-30T20:46:26Z",
    "author_association": "MEMBER",
    "body": "I think your concern is justified because we'd have to maintain two separate implementations of the same validation logic (error prone); however, like @jasongrout mentions, you can set the values from the front-end via `model.set` and I think that should behave the same as the back-end counterpart.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61167909",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61167909",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61167909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY3OTA5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T20:55:08Z",
    "updated_at": "2014-10-30T20:55:08Z",
    "author_association": "MEMBER",
    "body": "> Or we can do validation on python side before sending the message, so the state is always consistent with the validation. I think I like this last one best.\n\n:+1: , actually I've already done this type of thing before, to stop an infinite loop problem related to validation (see https://github.com/ipython/ipython/pull/6481).  Maybe all that's needed is to batch the state before sending it to the front-end. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61169229",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61169229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61169229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY5MjI5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T21:04:24Z",
    "updated_at": "2014-10-30T21:04:24Z",
    "author_association": "MEMBER",
    "body": "Don't wait for the user to set the value (e.g., don't batch the user changes).  Just make sure that the validation happens before the sync.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61178516",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61178516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61178516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTc4NTE2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T22:09:57Z",
    "updated_at": "2014-10-30T22:09:57Z",
    "author_association": "MEMBER",
    "body": "Reading the code, that's how the current implementation should work..  Maybe it's just not working as intended?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61178702",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61178702",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61178702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTc4NzAy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T22:11:29Z",
    "updated_at": "2014-10-30T22:11:29Z",
    "author_association": "MEMBER",
    "body": "``` python\n  def _notify_trait(self, name, old_value, new_value):\n        \"\"\"Called when a property has been changed.\"\"\"\n        # Trigger default traitlet callback machinery.  This allows any user\n        # registered validation to be processed prior to allowing the widget\n        # machinery to handle the state.\n        LoggingConfigurable._notify_trait(self, name, old_value, new_value)\n\n        # Send the state after the user registered callbacks for trait changes\n        # have all fired (allows for user to validate values).\n        if self.comm is not None and name in self.keys:\n        # Make sure this isn't information that the front-end just sent us.\n            if self._should_send_property(name, new_value):\n                # Send new state to front-end\n                self.send_state(key=name)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61178772",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-61178772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 61178772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTc4Nzcy",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T22:12:04Z",
    "updated_at": "2014-10-30T22:12:04Z",
    "author_association": "MEMBER",
    "body": "The validation of the min on the python side does not changes the value.\nOn Oct 30, 2014 6:10 PM, \"Jonathan Frederic\" notifications@github.com\nwrote:\n\n> Reading the code, that's how the current implementation should work..\n> Maybe it's just not working as intended?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6814#issuecomment-61178516.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69519111",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-69519111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 69519111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTE5MTEx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T00:12:43Z",
    "updated_at": "2015-01-12T00:12:43Z",
    "author_association": "MEMBER",
    "body": "What is the status of this? @jdfreder should be fixed for 3.0?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71284660",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-71284660",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 71284660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjg0NjYw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T23:30:25Z",
    "updated_at": "2015-01-23T23:30:25Z",
    "author_association": "MEMBER",
    "body": "Anyone object to bumping this past 3.0? I don't think it's critical.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71293167",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-71293167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 71293167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjkzMTY3",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-24T01:17:51Z",
    "updated_at": "2015-01-24T01:17:51Z",
    "author_association": "MEMBER",
    "body": "It is an easy fix, I can open a PR tomorrow or Sunday if you like. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71293523",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-71293523",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 71293523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjkzNTIz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-24T01:24:31Z",
    "updated_at": "2015-01-24T01:24:31Z",
    "author_association": "MEMBER",
    "body": "Thanks! If there are other widget bugs you think should be fixed before\n3.0, let us know and we can try to figure out how to get them done.\n\nOn Fri, Jan 23, 2015 at 5:18 PM, Sylvain Corlay notifications@github.com\nwrote:\n\n> It is an easy fix, I can open a PR tomorrow or Sunday if you like.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6814#issuecomment-71293167.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71740263",
    "html_url": "https://github.com/ipython/ipython/issues/6814#issuecomment-71740263",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6814",
    "id": 71740263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzQwMjYz",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-27T22:19:46Z",
    "updated_at": "2015-01-27T22:19:46Z",
    "author_association": "MEMBER",
    "body": "Solved with #7602.\n"
  }
]
