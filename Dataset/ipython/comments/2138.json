[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6987543",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6987543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6987543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODc1NDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-14T23:21:09Z",
    "updated_at": "2012-07-14T23:21:09Z",
    "author_association": "MEMBER",
    "body": "This is getting complicated.  Can you add a few tests?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6987759",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6987759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6987759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODc3NTk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-14T23:53:16Z",
    "updated_at": "2012-07-14T23:53:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure.  To do so, can I add a context manager like this?:\n\n``` python\n@contextmanager\ndef monkeypatch(obj, name, attr):\n    orig = getattr(obj, name)\n    setattr(obj, name, attr)\n    yield\n    setattr(obj, name, orig)\n```\n\nI don't know other easy way to test the case when the external program fails.  If adding this is ok, where should it be?  `IPython/testing/tools.py`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6987969",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6987969",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6987969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODc5Njk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T00:38:34Z",
    "updated_at": "2012-07-15T00:38:34Z",
    "author_association": "MEMBER",
    "body": "I don't understand, what would you monkeypatch?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6988035",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6988035",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6988035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODgwMzU=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T00:53:30Z",
    "updated_at": "2012-07-15T00:53:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Use case I have in mind is something like this.\nYou can dynamically patch code (function, class, whatever...) during specific test.\n\n``` python\nfrom IPython.lib import latextools\n\n\ndef fake_find_cmd(*_ignore_):\n    raise FindCmdError\n\n\ndef test_latex_to_png_when_find_cmd_fail():\n    with monkeypatch(latextools, \"find_cmd\", fake_find_cmd):\n        latextools.latex_to_png(...)\n        # test goes here...\n```\n\nIf it is possible to add dependency to test codes, I think I can do more with external mocking library, like checking the arguments given to the fake functions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6988261",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6988261",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6988261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODgyNjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T01:38:56Z",
    "updated_at": "2012-07-15T01:38:56Z",
    "author_association": "MEMBER",
    "body": "Ah, sure.  We do that in a few tests (namely utils.tests.test_path), but perhaps not as cleanly as with a context manager.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6990621",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6990621",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6990621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTA2MjE=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T10:33:06Z",
    "updated_at": "2012-07-15T10:33:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a few tests.  I checked that tests for IPython.lib pass in Python 2.6 and 2.7.  I couldn't check that it doesn't effect to the other tests because they fail like crazy.  I also couldn't test for Python 3.2 because tox fails with InvocationError (fail to make virtualenv?).\n\nIf tests are OK, can you tell me where should I put configuration variables?  Variables I have in mind are:\n- `backend` (default=`mpl`) -- preferred backend\n  \n  Note that we need to use `dvipng` for display style anyway.\n- `use_breqn` (default=`True`) -- use breqn.sty when installed\n- `packages` (default=`['amsmath', 'amsthm', 'amssymb', 'bm']`)\n  \n  LaTeX packages to load.\n- `textwidth` (default=`None`) -- set `\\textwidth` if specified.\n- (or, probably even `preamble`; but this will make it difficult to work with `use_breqn`)\n\nBTW, how do IPython people use tox?  It is very annoying to use because of this bug http://code.google.com/p/pytox/issues/detail?id=27; I need to start with clean install every time...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6990663",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6990663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6990663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTA2NjM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T10:42:26Z",
    "updated_at": "2012-07-15T10:42:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I just do `cd .tox/py27/; rm local; mkdir local; for d in *; do ln -vs $(pwd)/$d local/$d; done; rm local/local`.  What a dirty fix...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6995719",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6995719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6995719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTU3MTk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T22:29:30Z",
    "updated_at": "2012-07-15T22:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a configurable class.  It almost works, except for that in shell what in `get_ipython().configurables` and what `LaTeXTool.instance()` returns are different.  Meaning that writing `c.LaTeXTool.backends = ...` in configuration file does not work.  Probably I am misusing SingletonConfigurable class?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6995768",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-6995768",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 6995768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTU3Njg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T22:34:45Z",
    "updated_at": "2012-07-15T22:34:45Z",
    "author_association": "MEMBER",
    "body": "I'm pretty sure the number of people using tox is zero, so it may well not be fully functional.  The normal way to test IPython is with `iptest`, or you can use `tools/test_pr` to test a PR applied to master.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7149745",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-7149745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 7149745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDk3NDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T03:58:11Z",
    "updated_at": "2012-07-21T03:58:11Z",
    "author_association": "MEMBER",
    "body": "**Test results for commit 4c09df2 merged into master**\nPlatform: darwin\n- python2.6: OK (libraries not available: cython matplotlib oct2py pygments pymongo qt rpy2 tornado wx wx.aui)\n- python2.7: OK (libraries not available: oct2py wx wx.aui)\n- python3.2: OK (libraries not available: cython matplotlib oct2py pymongo qt rpy2 wx wx.aui)\n\nNot available for testing: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7149751",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-7149751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 7149751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDk3NTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T03:59:14Z",
    "updated_at": "2012-07-21T03:59:14Z",
    "author_association": "MEMBER",
    "body": "Anything more to do here?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7151549",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-7151549",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 7151549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTE1NDk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T09:47:11Z",
    "updated_at": "2012-07-21T09:47:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have anything in mind.  Please merge if it's fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7153256",
    "html_url": "https://github.com/ipython/ipython/pull/2138#issuecomment-7153256",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2138",
    "id": 7153256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTMyNTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T14:14:44Z",
    "updated_at": "2012-07-21T14:14:44Z",
    "author_association": "MEMBER",
    "body": "okay, then.  Merging away.\n"
  }
]
