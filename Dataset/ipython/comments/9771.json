[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233154430",
    "html_url": "https://github.com/ipython/ipython/issues/9771#issuecomment-233154430",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9771",
    "id": 233154430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE1NDQzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-16T22:31:56Z",
    "updated_at": "2016-07-16T22:31:56Z",
    "author_association": "MEMBER",
    "body": "Sorry, this is by design. Although the notebook frontend prefers HTML, we store any output formats that are available, because if you convert the notebook document to other formats, a different output format may be used. We've discussed before whether we might filter e.g. image types for plots, but I don't think we'd ever skip the plain text repr.\n\nThe eval-able repr is a guideline rather than a rule, and there are common cases where large objects do not provide a full repr:\n\n```\nIn [2]: numpy.zeros((1000, 1000))\nOut[2]: \narray([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n       ..., \n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.]])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233165279",
    "html_url": "https://github.com/ipython/ipython/issues/9771#issuecomment-233165279",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9771",
    "id": 233165279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE2NTI3OQ==",
    "user": {
      "login": "EntilZha",
      "id": 1382460,
      "node_id": "MDQ6VXNlcjEzODI0NjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1382460?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EntilZha",
      "html_url": "https://github.com/EntilZha",
      "followers_url": "https://api.github.com/users/EntilZha/followers",
      "following_url": "https://api.github.com/users/EntilZha/following{/other_user}",
      "gists_url": "https://api.github.com/users/EntilZha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EntilZha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EntilZha/subscriptions",
      "organizations_url": "https://api.github.com/users/EntilZha/orgs",
      "repos_url": "https://api.github.com/users/EntilZha/repos",
      "events_url": "https://api.github.com/users/EntilZha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EntilZha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-17T04:57:44Z",
    "updated_at": "2016-07-17T04:57:44Z",
    "author_association": "NONE",
    "body": "Makes sense. I am guessing providing an option flag to tell ipython not to call repr also gets messy so the best solution is to truncate `repr` in the first place.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233171214",
    "html_url": "https://github.com/ipython/ipython/issues/9771#issuecomment-233171214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9771",
    "id": 233171214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE3MTIxNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-17T08:27:22Z",
    "updated_at": "2016-07-17T08:27:22Z",
    "author_association": "MEMBER",
    "body": "If you want to provide a different repr in IPython, I think defining the `_repr_pretty_()`, which is intended for customising pretty-printing, should override `__repr__`. I haven't checked that `__repr__` is not called at all in that case, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233176123",
    "html_url": "https://github.com/ipython/ipython/issues/9771#issuecomment-233176123",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9771",
    "id": 233176123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE3NjEyMw==",
    "user": {
      "login": "EntilZha",
      "id": 1382460,
      "node_id": "MDQ6VXNlcjEzODI0NjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1382460?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EntilZha",
      "html_url": "https://github.com/EntilZha",
      "followers_url": "https://api.github.com/users/EntilZha/followers",
      "following_url": "https://api.github.com/users/EntilZha/following{/other_user}",
      "gists_url": "https://api.github.com/users/EntilZha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EntilZha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EntilZha/subscriptions",
      "organizations_url": "https://api.github.com/users/EntilZha/orgs",
      "repos_url": "https://api.github.com/users/EntilZha/repos",
      "events_url": "https://api.github.com/users/EntilZha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EntilZha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-17T10:50:24Z",
    "updated_at": "2016-07-17T10:50:24Z",
    "author_association": "NONE",
    "body": "Still calls `__repr__` even if `_repr_pretty_` is defined. I think in any case it would be better for me to make `__repr__` truncate since the main use case for it is inspecting data and I have various functions for persisting said data anyway. Thanks for the pointer to `_repr_pretty_`, might implement that as well possibly\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233711614",
    "html_url": "https://github.com/ipython/ipython/issues/9771#issuecomment-233711614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9771",
    "id": 233711614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzcxMTYxNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T17:47:44Z",
    "updated_at": "2016-07-19T17:47:44Z",
    "author_association": "MEMBER",
    "body": "Closing as this is expected behavior. \n"
  }
]
