[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22536044",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-22536044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 22536044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM2MDQ0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T00:31:31Z",
    "updated_at": "2013-08-13T00:31:31Z",
    "author_association": "MEMBER",
    "body": "Do we actually need a magic function for environment variables? `os.environ` is convenient enough. Maybe we should just drop this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22536371",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-22536371",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 22536371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM2Mzcx",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T00:40:48Z",
    "updated_at": "2013-08-13T00:40:48Z",
    "author_association": "MEMBER",
    "body": "given that we have `%` versions for pushd, popd, cd, alias, rehashx - i'd say fixing up `%env` would make a nice PR. @markusbaden do you want to try to tackle this? \n\nThe version of `%env` referred to in the docs used to live in [IPython/quarantine/envpersist.py](https://github.com/ipython/ipython/commit/83a5d322d248bf8a12dc1c1b1b83387a321cb217#diff-2), but was recently removed. You can use that as your starting point and incorporate it back into the `osm.py` version of the magic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58560700",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-58560700",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 58560700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTYwNzAw",
    "user": {
      "login": "orodbhen",
      "id": 4573865,
      "node_id": "MDQ6VXNlcjQ1NzM4NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4573865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orodbhen",
      "html_url": "https://github.com/orodbhen",
      "followers_url": "https://api.github.com/users/orodbhen/followers",
      "following_url": "https://api.github.com/users/orodbhen/following{/other_user}",
      "gists_url": "https://api.github.com/users/orodbhen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orodbhen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orodbhen/subscriptions",
      "organizations_url": "https://api.github.com/users/orodbhen/orgs",
      "repos_url": "https://api.github.com/users/orodbhen/repos",
      "events_url": "https://api.github.com/users/orodbhen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orodbhen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T19:04:40Z",
    "updated_at": "2014-10-09T19:04:40Z",
    "author_association": "NONE",
    "body": "it would be nice to have a command like this, if you want to use IPython as a full shell replacement.\n\nIs it possible to change variables like LD_LIBRARY_PATH, though? That could obviously cause some issues, if the loader path is changed while IPython is running. I'm not sure how this is handled by other shells. I imagine the shell uses one path, and exports another to processes run within it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62132085",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-62132085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 62132085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTMyMDg1",
    "user": {
      "login": "mattvonrocketstein",
      "id": 182887,
      "node_id": "MDQ6VXNlcjE4Mjg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/182887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattvonrocketstein",
      "html_url": "https://github.com/mattvonrocketstein",
      "followers_url": "https://api.github.com/users/mattvonrocketstein/followers",
      "following_url": "https://api.github.com/users/mattvonrocketstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattvonrocketstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattvonrocketstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattvonrocketstein/subscriptions",
      "organizations_url": "https://api.github.com/users/mattvonrocketstein/orgs",
      "repos_url": "https://api.github.com/users/mattvonrocketstein/repos",
      "events_url": "https://api.github.com/users/mattvonrocketstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattvonrocketstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T11:47:26Z",
    "updated_at": "2014-11-07T11:47:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "i will fix this, assuming there is still consensus the change belongs in ipython core instead of an extension?  instead of the magic being named \"env\" though, how about calling it \"export\"?  that might conform better with expectations from bash, if we're talking about this command modifying os.environ\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62181961",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-62181961",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 62181961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTgxOTYx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T17:32:03Z",
    "updated_at": "2014-11-07T17:32:03Z",
    "author_association": "MEMBER",
    "body": "I think it's reasonable to have this in IPython, so long as the implementation is fairly simple.\n\nI would leave it called %env, though. I don't think bash's 'export' is at all obvious, and I don't think consistency with bash is an aim.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62558879",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-62558879",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 62558879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTU4ODc5",
    "user": {
      "login": "mattvonrocketstein",
      "id": 182887,
      "node_id": "MDQ6VXNlcjE4Mjg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/182887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattvonrocketstein",
      "html_url": "https://github.com/mattvonrocketstein",
      "followers_url": "https://api.github.com/users/mattvonrocketstein/followers",
      "following_url": "https://api.github.com/users/mattvonrocketstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattvonrocketstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattvonrocketstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattvonrocketstein/subscriptions",
      "organizations_url": "https://api.github.com/users/mattvonrocketstein/orgs",
      "repos_url": "https://api.github.com/users/mattvonrocketstein/repos",
      "events_url": "https://api.github.com/users/mattvonrocketstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattvonrocketstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T15:03:24Z",
    "updated_at": "2014-11-11T15:03:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Question: when using \"env var=val\" should the set-env behaviour work only for quoted string literals or should it also resolve names where <val> is in shell.user_ns?  Should it work for nonquoted string literals?  For \"env foo=bar\", where bar is not in user_ns, should it successfully set os.environ['foo']='bar' even though bar was not quoted?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62642570",
    "html_url": "https://github.com/ipython/ipython/issues/3992#issuecomment-62642570",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3992",
    "id": 62642570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjQyNTcw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T23:41:12Z",
    "updated_at": "2014-11-11T23:41:12Z",
    "author_association": "MEMBER",
    "body": "I would treat the right hand side as text by default, and to interpolate Python expressions, you need to do `var={foo}` or `var=$foo`. This is in keeping with other magics, and you get it for free by using the magic system (the string is expanded before it's passed to the magic function).\n\nAlso, if you want to set an environment variable from a Python expression, it's pretty easy to do `os.environ['var'] = foo`\n"
  }
]
