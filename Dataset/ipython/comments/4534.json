[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28459489",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28459489",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28459489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDU5NDg5",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T04:53:33Z",
    "updated_at": "2013-11-14T04:53:33Z",
    "author_association": "NONE",
    "body": "With multiple dispatch, argspec could be a list of argspecs...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28502341",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28502341",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28502341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTAyMzQx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T17:08:37Z",
    "updated_at": "2013-11-14T17:08:37Z",
    "author_association": "MEMBER",
    "body": "good point, that's exactly the kind of thing I'm looking for.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28502493",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28502493",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28502493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTAyNDkz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T17:10:12Z",
    "updated_at": "2013-11-14T17:10:12Z",
    "author_association": "MEMBER",
    "body": "ping @gibiansky from IHaskell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28504182",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28504182",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28504182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA0MTgy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T17:28:30Z",
    "updated_at": "2013-11-14T17:28:30Z",
    "author_association": "MEMBER",
    "body": "In `object_info`, cursor is not always just a position, you could select a text and request info on it in a context. \nThat already how shift-tab work in notebook if you have a selection. And yes,  I thought sending the  selection  as the all text but as you could have things like  `np.|histogram|(...)` and ask object info (where`|...|`mark the selection), you want to know about the `np.`\nAlso I guess that Julia would like in case like that to take a peak at argument type so that `|methods|( args..)` have a change to know args type.\n\nIn general, `cursor = (int begin, int end)`, both beeing potentially equal (or the second undefined)\n\nFor complete, the list or dict should probably return a replace `from-to` range also. it would be much simpler for magics completion for example where we use sheningan to decide in `ma<tab>` the common part between `%magic`,`%%magnify` and `magnetic` for example. with the `from-to` range instead/in supplement of matched-text.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28504814",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28504814",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28504814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA0ODE0",
    "user": {
      "login": "gibiansky",
      "id": 1865411,
      "node_id": "MDQ6VXNlcjE4NjU0MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1865411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gibiansky",
      "html_url": "https://github.com/gibiansky",
      "followers_url": "https://api.github.com/users/gibiansky/followers",
      "following_url": "https://api.github.com/users/gibiansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/gibiansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gibiansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gibiansky/subscriptions",
      "organizations_url": "https://api.github.com/users/gibiansky/orgs",
      "repos_url": "https://api.github.com/users/gibiansky/repos",
      "events_url": "https://api.github.com/users/gibiansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gibiansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T17:35:42Z",
    "updated_at": "2013-11-14T17:35:42Z",
    "author_association": "NONE",
    "body": "@Carreau, thanks for pinging me. This is a really good step forward, i was just struggling with these issues recently in IHaskell... \n\nA few comments/questions:\n- How does IPython know when to trigger these, other than when using '?' and such? Right now, it's after a pause after a parenthesis - I ended up changing this in `tooltip.js` because parentheses have no such significance in Haskell.\n- It would be really nice if the popup tooltips could include auxiliary information in addition to the main completion. For instance, in Haskell, the type signature of a function is _incredibly_ informative, so it would be really great if the completion would have the function (or constant) name on the left, and a little bit over would have the type signature. This would require support from both the kernel and the frontend, but the frontend support would be pretty easy by just fiddling with `tooltip.js`; but perhaps this auxiliary information could be added as a field in the object_info_reply or completion_reply messages? \n- It seems like `argspec` is a bit geared towards dynamically typed languages, though I am not really sure how frontends would use this so maybe not. But if I were designing this just for Haskell, there would be some sort of type field for each argument, as that is a crucial bit of information. I'm not quite sure how you could integrate this in that definition, though...\n\nI'll take a more thorough look soon and see if I can't offer any more concrete suggestions or other concerns. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28506491",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28506491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28506491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA2NDkx",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T17:54:54Z",
    "updated_at": "2013-11-14T17:54:54Z",
    "author_association": "NONE",
    "body": "Ping @loladiro for Julia completion...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28509436",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28509436",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28509436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA5NDM2",
    "user": {
      "login": "StefanKarpinski",
      "id": 153596,
      "node_id": "MDQ6VXNlcjE1MzU5Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/153596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StefanKarpinski",
      "html_url": "https://github.com/StefanKarpinski",
      "followers_url": "https://api.github.com/users/StefanKarpinski/followers",
      "following_url": "https://api.github.com/users/StefanKarpinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/StefanKarpinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StefanKarpinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StefanKarpinski/subscriptions",
      "organizations_url": "https://api.github.com/users/StefanKarpinski/orgs",
      "repos_url": "https://api.github.com/users/StefanKarpinski/repos",
      "events_url": "https://api.github.com/users/StefanKarpinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StefanKarpinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T18:30:54Z",
    "updated_at": "2013-11-14T18:30:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Having Python, Haskell and Julia represented here is a pretty great sampling of quite different languages to make sure this can satisfy everyone's requirements :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28510995",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28510995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28510995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTEwOTk1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T18:48:39Z",
    "updated_at": "2013-11-14T18:48:46Z",
    "author_association": "MEMBER",
    "body": "@Carreau - I think sending two positions, perhaps `cursor_start` and `cursor_end`, where cursor_end defaults to start should cover the selection case.  Or we could specifically include a `selection` key, which is the selected string, if any. The latter may send a few redundant bytes, but it seems like it communicates intent a bit more clearly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28511940",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28511940",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28511940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExOTQw",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T18:59:31Z",
    "updated_at": "2013-11-14T18:59:31Z",
    "author_association": "NONE",
    "body": "Note also that we can have multiple constructors, so `init_definition` also needs to be a list.  (And shouldn't `init_definition` be an argspec-like list rather than a string?)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28512743",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28512743",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28512743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTEyNzQz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T19:08:28Z",
    "updated_at": "2013-11-14T19:08:28Z",
    "author_association": "MEMBER",
    "body": "> How does IPython know when to trigger these, other than when using '?' and such? Right now, it's after a pause after a parenthesis - I ended up changing this in tooltip.js because parentheses have no such significance in Haskell.\n\n`?` does not actually trigger an object_info request, it's an IPython execution kernel-side that accesses the same inner API.\n\nSince both IJulia and IHaskell override tooltip.js, we probably want to make sure we have some configuration there so that the right behavior can be changed.\n\n> It would be really nice if the popup tooltips could include auxiliary information in addition to the main completion. \n\nThis is a trickier one, and points to @Carreau's original idea of merging the two requests, as it is hard for the frontend to know what should be done. Maybe a completion reply should include some information about the context in which it is completing.\n\n> It seems like argspec is a bit geared towards dynamically typed languages\n\nit's used for building a signature, such as:\n\n``` python\nIn [11]: info = ip.inspector.info(foo)\nIn [12]: info['argspec']\nOut[12]: {'args': ['a', 'b'], 'defaults': (5,), 'varargs': None, 'varkw': None}\n```\n\nwhich can be used to generate a signature:\n\n```\nfoo(a, b=5)\n```\n\nif you built the args as `'args' : ['str a', 'int b']`, then the signature would be\n\n```\nfoo(str a, int b=5)\n```\n\nWe could add a separate 'types' key to argspec, which may be a dictionary of type info for each arg, rather than cramming it in an existing key. In Python 3, this could be populated from annotations.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28513363",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28513363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28513363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTEzMzYz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T19:15:56Z",
    "updated_at": "2013-11-14T19:15:56Z",
    "author_association": "MEMBER",
    "body": "> Note also that we can have multiple constructors, so init_definition also needs to be a list. (And shouldn't init_definition be an argspec-like list rather than a string?)\n\nmakes sense.\n\nWe could also try to replace argspec with something that maps more directly onto Python [Signature objects](http://www.python.org/dev/peps/pep-0362/), adding any missing bits that Julia or Haskell might want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28515882",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28515882",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28515882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE1ODgy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T19:44:19Z",
    "updated_at": "2013-11-14T19:44:19Z",
    "author_association": "MEMBER",
    "body": "> I think sending two positions, perhaps cursor_start and cursor_end, where cursor_end defaults to start should cover the selection case. Or we could specifically include a selection key, which is the selected string, if any. The latter may send a few redundant bytes, but it seems like it communicates intent a bit more clearly.\n\nWhatever. 2 positions seem easier to deal with, implementation side\n\n> This is a trickier one, and points to @Carreau's original idea of merging the two requests, as it is hard for the frontend to know what should be done. Maybe a completion reply should include some information about the context in which it is completing.\n\nI think this can be done with the frontend sending many request.\nCompletion, then while use scroll through completion do a `oinfo` on that object. \nI think we might want to take a step back and do mockups first then think. like, for example, in julia\n`ad<tab>` might want to show in the completion list `add(Int,Int)` and `add(Cplx, Cplx)` but complete to add, \nstill if it want more info on one of the two how does it tell the kernel : I want oinfo only on `add(Int,Int)`.\n\nIMHO, this is one of the things where we want to have draft of UI and do a top-down approach at the same time that bottom-up. I'll try to mock-up some UI for Julia (and Haskell, but my knowledge in haskell is pretty limited, so coming up with what people would like is hard).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28515928",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28515928",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28515928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE1OTI4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T19:44:38Z",
    "updated_at": "2013-11-14T19:57:15Z",
    "author_association": "MEMBER",
    "body": "After asking @takluyver behind me, I think using the Signature approach makes more sense than the current argspec. In which case, the arguments would be of the form (after making it JSON-friendly):\n\n``` python\n[{'default': None, # or str repr of default value\n  'kind': 'POSITIONAL_OR_KEYWORD', # one of 'KEYWORD_ONLY', 'POSITIONAL_ONLY', 'POSITIONAL_OR_KEYWORD', 'VAR_KEYWORD', 'VAR_POSITIONAL'\n  'name': 'a',\n  'annotation': 'the first arg'\n },\n {'default': None,\n  'kind': 'VAR_POSITIONAL',\n  'name': 'args',\n  'annotation': None, # or str annotation\n },\n {'default': '5',\n  'kind': 'KEYWORD_ONLY',\n  'name': 'b',\n  'annotation': 'int'\n },\n {'default': None, \n  'kind': 'VAR_KEYWORD', \n  'name': 'kw', \n  'annotation': 'annot'\n}\n]\n```\n\nis the signature of\n\n``` python\ndef foo(a : \"the first arg\", *args, b:'int'=5, **kw: 'annot') -> 5 + 9:\n    pass\n```\n\nIs there anything that the Python signature object doesn't cover for Julia or Haskell (is the annotation field sufficient for type information, etc.)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28516096",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28516096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28516096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE2MDk2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T19:46:44Z",
    "updated_at": "2013-11-14T19:46:44Z",
    "author_association": "MEMBER",
    "body": "Great idea, @Carreau, I think that will help clarify what we need.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28518944",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28518944",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28518944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE4OTQ0",
    "user": {
      "login": "gibiansky",
      "id": 1865411,
      "node_id": "MDQ6VXNlcjE4NjU0MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1865411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gibiansky",
      "html_url": "https://github.com/gibiansky",
      "followers_url": "https://api.github.com/users/gibiansky/followers",
      "following_url": "https://api.github.com/users/gibiansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/gibiansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gibiansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gibiansky/subscriptions",
      "organizations_url": "https://api.github.com/users/gibiansky/orgs",
      "repos_url": "https://api.github.com/users/gibiansky/repos",
      "events_url": "https://api.github.com/users/gibiansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gibiansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-14T20:19:15Z",
    "updated_at": "2013-11-14T20:19:15Z",
    "author_association": "NONE",
    "body": "@Carreau With regards to Haskell, you probably just want the object name followed by the type signature, like so:\n\n``` haskell\nzip :: [a] -> [b] -> [(a, b)]\n```\n\nThe expanded object info beyond just that should just contain the haddock documentation if there is any, which would just be an arbitrary HTML string from the kernel...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28574335",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28574335",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28574335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc0MzM1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-15T14:56:00Z",
    "updated_at": "2013-11-15T14:56:00Z",
    "author_association": "MEMBER",
    "body": "Some static prototype.\n\nhttp://nbviewer.ipython.org/7485410\n\nAnd screen shot. \n\nJulia one show some kind of \"merge\" between tooltip and completion. \nI improved Python one to put in bold current argument if in function call. \nHaskell on also highlight current argument, \n\nUI of julia one is challenging if we want to select next/previous entry in left pannel.\nFeel free to fork/update with more relevant/ different example.\n\n![capture decran 2013-11-15 a 15 53 07](https://f.cloud.github.com/assets/335567/1550521/757eaefc-4e05-11e3-9f89-f4cd52cdd598.png)\n![capture decran 2013-11-15 a 15 53 11](https://f.cloud.github.com/assets/335567/1550523/770312a4-4e05-11e3-99b7-a64ce81379a9.png)\n![capture decran 2013-11-15 a 15 53 16](https://f.cloud.github.com/assets/335567/1550525/788f71b2-4e05-11e3-8b12-20d9c55606c7.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28582893",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28582893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28582893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTgyODkz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-15T16:36:16Z",
    "updated_at": "2013-11-15T16:36:16Z",
    "author_association": "MEMBER",
    "body": "> How does IPython know when to trigger these, other than when using '?' and such? Right now, it's after a pause after a parenthesis - I ended up changing this in tooltip.js because parentheses have no such significance in Haskell.\n\nShift Tab should also trigger tooltip wherever pressed, or even on selection in notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28649438",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-28649438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 28649438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ5NDM4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-17T14:29:49Z",
    "updated_at": "2013-11-17T14:29:49Z",
    "author_association": "MEMBER",
    "body": "Would like also to revive the idea of a general help message more general and keyed by mime type.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29486307",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-29486307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 29486307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDg2MzA3",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-28T21:40:58Z",
    "updated_at": "2013-11-28T21:40:58Z",
    "author_association": "NONE",
    "body": "@Carreau, yes, it would be nice to be able to send back more than text.  e.g. in IJulia we are investigating making method listings display as HTML with links to the source code on github (JuliaLang/julia#4952), and it would be nice to put this into tooltips too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52858689",
    "html_url": "https://github.com/ipython/ipython/issues/4534#issuecomment-52858689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4534",
    "id": 52858689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODU4Njg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T23:16:31Z",
    "updated_at": "2014-08-20T23:16:31Z",
    "author_association": "MEMBER",
    "body": "This should have been closed by #4536.\n"
  }
]
