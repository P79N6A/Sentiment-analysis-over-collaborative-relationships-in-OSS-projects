[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83169962",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83169962",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83169962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTY5OTYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T20:52:30Z",
    "updated_at": "2015-03-18T20:52:30Z",
    "author_association": "MEMBER",
    "body": "-1 - I want to remove these kinds of special cases from our code, not add more. It should be up to the matlab Python bridge to provide access to docs and introspection by standard Python mechanisms.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83178671",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83178671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83178671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTc4Njcx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T21:11:54Z",
    "updated_at": "2015-03-18T21:11:54Z",
    "author_association": "MEMBER",
    "body": "Agreed, if you need hooks, or configurability we might be able to add them. But you shouldn't need to modify IPython kernel. We don't do it for rpy2, cython and other bindings. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83182094",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83182094",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83182094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTgyMDk0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T21:16:47Z",
    "updated_at": "2015-03-18T21:16:47Z",
    "author_association": "MEMBER",
    "body": "I think all the relevant hooks are already there:\n- For docstrings, you can make `__doc__` a property that looks up the docs you want. I just checked that this works, but if for some reason it doesn't, we also look for and call `obj.getdoc()`, so you could define that.\n- For providing a list of attributes, define the `__dir__()` method - [Python docs](https://docs.python.org/3/reference/datamodel.html#object.__dir__).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83185059",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83185059",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83185059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTg1MDU5",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T21:23:36Z",
    "updated_at": "2015-03-18T21:23:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Given that IPython special-cases Traits and PyCrust objects (via `trait_names` and `_getAttributeNames`), I thought that it would also accept a special case for MATLAB, but I don't feel strongly about it either.  Feel free to close this if you want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83186475",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83186475",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83186475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTg2NDc1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T21:28:57Z",
    "updated_at": "2015-03-18T21:28:57Z",
    "author_association": "MEMBER",
    "body": "Those special case were put in years ago - I doubt we'd accept them today.\n\nI will close this - if enough people feel it's reasonable to add another special case, we can reopen it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83207551",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83207551",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83207551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjA3NTUx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T22:24:47Z",
    "updated_at": "2015-03-18T22:24:47Z",
    "author_association": "MEMBER",
    "body": "Opened #8081 to remove the PyCrust special case. I hope we can ultimately remove the special case for traits too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83218591",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83218591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83218591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjE4NTkx",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T22:59:01Z",
    "updated_at": "2015-03-18T22:59:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually there is another reason to remove the attempts to call `_getAttributeNames` and `trait_names`, which is that the object could be dynamically providing attributes (especially `trait_names`, which is not even private) and thus calling them could have some unspecified side-effects.  As usual, anything can have side-effects in Python but I now agree that relying on the standard `__dir__` is the least likely to cause problems.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83219324",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83219324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83219324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjE5MzI0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T23:05:01Z",
    "updated_at": "2015-03-18T23:05:01Z",
    "author_association": "MEMBER",
    "body": "Yep, we've run into a few things, typically object-proxying code, that has problems when we check for attributes like those.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83358622",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83358622",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83358622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzU4NjIy",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-19T06:19:38Z",
    "updated_at": "2015-03-19T06:19:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a side note, relying on trying to call a `getdoc` method for the documentation suffers from the same issue and I would thus suggest getting rid of this too, if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83659098",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83659098",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83659098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNjU5MDk4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-19T16:48:56Z",
    "updated_at": "2015-03-19T16:48:56Z",
    "author_association": "MEMBER",
    "body": "That's true. I suspect it might be harder to get rid of, though. E.g. for something like the `MatlabFunc` class, you might want a standard docstring for the class itself, and dynamically retrieved docstrings for instances - and I don't think it's possible to do both with `__doc__`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/83732718",
    "html_url": "https://github.com/ipython/ipython/pull/8079#issuecomment-83732718",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8079",
    "id": 83732718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzMyNzE4",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-19T19:32:52Z",
    "updated_at": "2015-03-19T19:32:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do this with a not-so-complicated descriptor:\n\n```\nclass instanceprop:\n    def __init__(self, classval, getinstanceval):\n        self._classval = classval\n        self._getinstanceval = getinstanceval\n\n    def __get__(self, instance, owner):\n        return self._classval if instance is None else self._getinstanceval(instance)\n\n\nclass C:\n    __doc__ = instanceprop(\"class doc\", lambda self: \"instance doc\")\n```\n\nThen\n\n```\nIn [2]: c = C()\n\nIn [3]: c?\nType:            C\nString form:     <instanceprop.C object at 0x7fd4a5cb8a20>\nFile:            /home/antony/tests/instanceprop.py\nDocstring:       instance doc\nClass docstring: class doc\n```\n\nBecause `__doc__` is set in the locals before the rest of the class definition is executed you could even write the proper decorator so that you can use a normal-looking docstring in the source (left as an exercise to the reader, you need some stack-walking :-)).\n"
  }
]
