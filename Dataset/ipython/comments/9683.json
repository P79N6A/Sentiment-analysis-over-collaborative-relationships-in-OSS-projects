[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299493022",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-299493022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 299493022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ5MzAyMg==",
    "user": {
      "login": "segevfiner",
      "id": 24731903,
      "node_id": "MDQ6VXNlcjI0NzMxOTAz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24731903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segevfiner",
      "html_url": "https://github.com/segevfiner",
      "followers_url": "https://api.github.com/users/segevfiner/followers",
      "following_url": "https://api.github.com/users/segevfiner/following{/other_user}",
      "gists_url": "https://api.github.com/users/segevfiner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segevfiner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segevfiner/subscriptions",
      "organizations_url": "https://api.github.com/users/segevfiner/orgs",
      "repos_url": "https://api.github.com/users/segevfiner/repos",
      "events_url": "https://api.github.com/users/segevfiner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segevfiner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T15:17:04Z",
    "updated_at": "2017-05-05T15:17:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I vaguely remember having had to press UP multiple times to skip duplicate/identical history entries in some IPython version, but I'm not seeing this behavior after testing recently. Searching around the code I found this: [jonathanslenders/python-prompt-toolkit/prompt_toolkit/buffer.py#L1127-L1130](https://github.com/jonathanslenders/python-prompt-toolkit/blob/4a27a142de525bb5a84edfb7df0bfa673ef9847e/prompt_toolkit/buffer.py#L1127-L1130) and there is obviously also the referenced PR #9943 which suggests that the version I saw this at were `IPython>=5.0,<5.2`.\r\n\r\nOr did you mean something else entirely in this issue? ðŸ˜ƒ"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299498018",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-299498018",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 299498018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ5ODAxOA==",
    "user": {
      "login": "ritiek",
      "id": 20314742,
      "node_id": "MDQ6VXNlcjIwMzE0NzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20314742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ritiek",
      "html_url": "https://github.com/ritiek",
      "followers_url": "https://api.github.com/users/ritiek/followers",
      "following_url": "https://api.github.com/users/ritiek/following{/other_user}",
      "gists_url": "https://api.github.com/users/ritiek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ritiek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ritiek/subscriptions",
      "organizations_url": "https://api.github.com/users/ritiek/orgs",
      "repos_url": "https://api.github.com/users/ritiek/repos",
      "events_url": "https://api.github.com/users/ritiek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ritiek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T15:35:24Z",
    "updated_at": "2017-05-05T15:35:24Z",
    "author_association": "NONE",
    "body": "I use 5.1.0 but it works fine for me. Using same command consecutively shows up the command only once in the history when pressing up.."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299505176",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-299505176",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 299505176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUwNTE3Ng==",
    "user": {
      "login": "segevfiner",
      "id": 24731903,
      "node_id": "MDQ6VXNlcjI0NzMxOTAz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24731903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segevfiner",
      "html_url": "https://github.com/segevfiner",
      "followers_url": "https://api.github.com/users/segevfiner/followers",
      "following_url": "https://api.github.com/users/segevfiner/following{/other_user}",
      "gists_url": "https://api.github.com/users/segevfiner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segevfiner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segevfiner/subscriptions",
      "organizations_url": "https://api.github.com/users/segevfiner/orgs",
      "repos_url": "https://api.github.com/users/segevfiner/repos",
      "events_url": "https://api.github.com/users/segevfiner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segevfiner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T16:02:17Z",
    "updated_at": "2017-05-05T16:02:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Ritiek I'm not entirely sure, but I think you will get duplicates only after re-opening IPython since the code in PR #9943 is only used during init. During an IPython session PTK prevents duplicates in the in-memory history but before PR #9943 IPython added duplicates to the history on history load at startup."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299506461",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-299506461",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 299506461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUwNjQ2MQ==",
    "user": {
      "login": "ritiek",
      "id": 20314742,
      "node_id": "MDQ6VXNlcjIwMzE0NzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20314742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ritiek",
      "html_url": "https://github.com/ritiek",
      "followers_url": "https://api.github.com/users/ritiek/followers",
      "following_url": "https://api.github.com/users/ritiek/following{/other_user}",
      "gists_url": "https://api.github.com/users/ritiek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ritiek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ritiek/subscriptions",
      "organizations_url": "https://api.github.com/users/ritiek/orgs",
      "repos_url": "https://api.github.com/users/ritiek/repos",
      "events_url": "https://api.github.com/users/ritiek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ritiek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T16:07:17Z",
    "updated_at": "2017-05-05T16:07:17Z",
    "author_association": "NONE",
    "body": "@segevfiner Yeah, you're right. I can see the duplicates now."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/307418505",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-307418505",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 307418505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQxODUwNQ==",
    "user": {
      "login": "srinivasreddy",
      "id": 198396,
      "node_id": "MDQ6VXNlcjE5ODM5Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/198396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srinivasreddy",
      "html_url": "https://github.com/srinivasreddy",
      "followers_url": "https://api.github.com/users/srinivasreddy/followers",
      "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions",
      "organizations_url": "https://api.github.com/users/srinivasreddy/orgs",
      "repos_url": "https://api.github.com/users/srinivasreddy/repos",
      "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srinivasreddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T15:21:25Z",
    "updated_at": "2017-06-09T15:21:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver  safely closed? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/307496943",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-307496943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 307496943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQ5Njk0Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T20:52:52Z",
    "updated_at": "2017-06-09T20:52:52Z",
    "author_association": "MEMBER",
    "body": "Yup, thanks."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309269564",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-309269564",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 309269564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI2OTU2NA==",
    "user": {
      "login": "segevfiner",
      "id": 24731903,
      "node_id": "MDQ6VXNlcjI0NzMxOTAz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24731903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segevfiner",
      "html_url": "https://github.com/segevfiner",
      "followers_url": "https://api.github.com/users/segevfiner/followers",
      "following_url": "https://api.github.com/users/segevfiner/following{/other_user}",
      "gists_url": "https://api.github.com/users/segevfiner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segevfiner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segevfiner/subscriptions",
      "organizations_url": "https://api.github.com/users/segevfiner/orgs",
      "repos_url": "https://api.github.com/users/segevfiner/repos",
      "events_url": "https://api.github.com/users/segevfiner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segevfiner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-18T10:42:07Z",
    "updated_at": "2017-06-18T10:42:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems thst IPython might ignore saving and loading consecutive duplicates. But when there are distant duplicates that are still the same they are not skipped over when doing an up/down arrows history search (When you type a partial command and then use the up/down arrows to search though history) or from ctrl-r. That means that you can do:\r\n```python\r\nIn [1]: 123\r\nOut [1]: 123\r\n\r\nIn [2]: 456\r\nOut [2]: 456\r\n\r\nIn [3]: 123\r\nOut [3]: 123\r\n```\r\n\r\nAnd you will find `123` twice in the history search.\r\n\r\nMaybe that's what @Carreau meant or is that a different issue?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309496347",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-309496347",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 309496347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTQ5NjM0Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T16:38:15Z",
    "updated_at": "2017-06-19T16:38:15Z",
    "author_association": "MEMBER",
    "body": "> Maybe that's what @Carreau meant or is that a different issue?\r\n\r\nI honestly don't remember. I think having no consecutive duplicate is already good. If the question re-present itself, we can think about non-consecutive duplicate. I can see case where non-consecutive are useful. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309744038",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-309744038",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 309744038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTc0NDAzOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T12:54:59Z",
    "updated_at": "2017-06-20T12:54:59Z",
    "author_association": "MEMBER",
    "body": "Yeah, I think non-consecutive duplicates is fine, and this is now working as expected."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309799226",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-309799226",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 309799226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTc5OTIyNg==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T15:39:13Z",
    "updated_at": "2017-06-20T15:39:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, but I can't think of any use case for loading duplicates when the user is scrolling though their history. Obviously, dupes must be kept in the history, as each input is indexed, but why would anyone scroll past an item to get to an identical item? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/309804243",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-309804243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 309804243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTgwNDI0Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T15:55:08Z",
    "updated_at": "2017-06-20T15:55:08Z",
    "author_association": "MEMBER",
    "body": "To re-run an analysis with slight modification.\n\n$ ipython\nIn [ ]: Do stuff\nIn [ ]: exit\nModify file.\n$ IPython\nIn [ ]: # press up 5 times, enter\nIn [ ]: # press up 5 times, enter\nIn [ ]: # press up 5 times, enter\nIn [ ]: # press up 5 times, enter\nIn [ ]: # press up 5 times, enter\n\nIf you remove duplicate then the \"press 5 times\" can vary in length.\nEspecially when you step through a process not having gaps in what you did\nin history is extremely convenient.\nOf course this is just an example and you should (likely), put that in a\nfile, but it is a used wokflow :-)\n\n\n\n\nOn Tue, Jun 20, 2017 at 8:39 AM, Carl Smith <notifications@github.com>\nwrote:\n\n> Sorry, but I can't think of any use case for loading duplicates when the\n> user is scrolling though their history. Obviously, dupes must be kept in\n> the history, as each input is indexed, but why would anyone scroll past an\n> item to get to an identical item?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/issues/9683#issuecomment-309799226>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez1Zt-Mii1LI7c44oy7eLfXzdd7Myks5sF-ekgaJpZM4JCoH5>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/328880517",
    "html_url": "https://github.com/ipython/ipython/issues/9683#issuecomment-328880517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9683",
    "id": 328880517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg4MDUxNw==",
    "user": {
      "login": "MrMino",
      "id": 6691643,
      "node_id": "MDQ6VXNlcjY2OTE2NDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6691643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrMino",
      "html_url": "https://github.com/MrMino",
      "followers_url": "https://api.github.com/users/MrMino/followers",
      "following_url": "https://api.github.com/users/MrMino/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrMino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrMino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrMino/subscriptions",
      "organizations_url": "https://api.github.com/users/MrMino/orgs",
      "repos_url": "https://api.github.com/users/MrMino/repos",
      "events_url": "https://api.github.com/users/MrMino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrMino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T15:01:58Z",
    "updated_at": "2017-09-12T15:01:58Z",
    "author_association": "NONE",
    "body": "I noticed, after updating my IPython package to 6.1, that the duplicate entries still don't get ignored. IPython does indeed omit them when tracking what you type, but if they are already there, they will not get ignored.\r\n\r\nThis might make some people think that this ?bug? is still there."
  }
]
