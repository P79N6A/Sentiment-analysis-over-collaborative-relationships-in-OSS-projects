[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1865222",
    "html_url": "https://github.com/ipython/ipython/pull/714#issuecomment-1865222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/714",
    "id": 1865222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjUyMjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-21T22:33:07Z",
    "updated_at": "2011-08-21T22:33:07Z",
    "author_association": "MEMBER",
    "body": "I actually was asking @ellisonbg about the same of switching priorities. On Friday for some odd reason the mathjax CDN was timing out on my firefox session (it seems to be some dd interaction with firebug, couldn't quite figure it out) and I had to do this switch locally just so I could keep working.  But I'd like Brian to give us his take on it.\n\nIn terms of the other code, a couple of comments.\n- Let's keep IPython.external to be for the actual external library hosting, so that we know that IPython.external in principle can be empty if all dependencies are provided, for example, by a linux distro.\n- would it be possible/sensible to offer the option to do a user-level install (like the `--local` option)?  So that people could install it without sudo access?\n\nI'm not sure how much the latter is really needed, since you tend to only not have sudo on servers, which by definition need good net connectivity.  This is mostly needed for laptops likely to be offline.  I just want to float the thought before we finalize it and merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1865285",
    "html_url": "https://github.com/ipython/ipython/pull/714#issuecomment-1865285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/714",
    "id": 1865285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjUyODU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-21T22:51:56Z",
    "updated_at": "2011-08-21T22:51:56Z",
    "author_association": "MEMBER",
    "body": "- Let's keep IPython.external to be for the actual external library hosting, so that we know that IPython.external in principle can be empty if all dependencies are provided, for example, by a linux distro.\n\nI think this makes perfect sense...but then where should we move the Qt import code to, since it doesn't qualify?  And where should the mathjax install go? IPython.utils? IPython.frontend.html.notebook.util?\n\nThe ssh code was also put into external, with the argument that it is really a standalone tool, that could be brought into another package (specifically pyzmq). It can be moved to IPython.utils as well\n- would it be possible/sensible to offer the option to do a user-level install (like the --local option)? So that people could install it without sudo access?\n\nIt would be possible, as I think was discussed on IRC or Skype, to add some location in `IPYTHON_DIR`, but it would mean adding three-level logic for loading MathJax: 1. user-installed, 2. IPython-lib installed, 3. CDN.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1865787",
    "html_url": "https://github.com/ipython/ipython/pull/714#issuecomment-1865787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/714",
    "id": 1865787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjU3ODc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-22T01:02:09Z",
    "updated_at": "2011-08-22T01:02:09Z",
    "author_association": "MEMBER",
    "body": "It seems to me that IPython.utils is fine...  I didn't realize that we had let other things slip into external.  We should probably clean that up later on, though by now we'll have to be more careful and put in deprecation warnings, as someone is likely to have started using those locations.\n\nAs for the local install, we can leave that for a future pass, if you prefer.  I don't have strong feelings about it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1874014",
    "html_url": "https://github.com/ipython/ipython/pull/714#issuecomment-1874014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/714",
    "id": 1874014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzQwMTQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-22T20:19:43Z",
    "updated_at": "2011-08-22T20:19:43Z",
    "author_association": "MEMBER",
    "body": "I think external is a much better place than this.  MathJax _is_ a an external dependency that we would ship if it were not smaller.  If we don't do external, then I think it should be in IPython.frontend.html.notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1874737",
    "html_url": "https://github.com/ipython/ipython/pull/714#issuecomment-1874737",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/714",
    "id": 1874737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzQ3Mzc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-22T21:33:23Z",
    "updated_at": "2011-08-22T21:33:23Z",
    "author_association": "MEMBER",
    "body": "`IPython.frontend.html.notebook.util` is where I put it the first time, but I moved it to external, based on the idea that no users should ever actually import a 5-level-down module.\n\nIf we want IPython.external to be something that distributors can easily ship without, then we should change all our conditional external imports, such that the try/except is in the actual import, rather then relying on IPython.external to do the logic:\n\n``` python\ntry:\n    import package\nexcept ImportError:\n    from IPython.external import package\n```\n\nWe frequently do _just_ the external import, and let the `IPython.external` package perform the `try/except`for whether to use the bundled version or not.\n"
  }
]
