[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28922438",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28922438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28922438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTIyNDM4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T19:41:54Z",
    "updated_at": "2013-11-20T19:41:54Z",
    "author_association": "MEMBER",
    "body": "I don't know how many people are using this API, but if we were concerned about backwards compatibility, but didn't want the rather unintuitive reversal, we could `None` for querying, and have a separate sentinel for removal.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28930770",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28930770",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28930770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTMwNzcw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T21:03:59Z",
    "updated_at": "2013-11-20T21:03:59Z",
    "author_association": "MEMBER",
    "body": "Why not create a new set of `remove` methods?\n\nOn Wed, Nov 20, 2013 at 11:41 AM, Thomas Kluyver\nnotifications@github.comwrote:\n\n> I don't know how many people are using this API, but if we were concerned\n> about backwards compatibility, but didn't want the rather unintuitive\n> reversal, we could None for querying, and have a separate sentinel for\n> removal.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4561#issuecomment-28922438\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28936581",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28936581",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28936581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM2NTgx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:10:32Z",
    "updated_at": "2013-11-20T22:10:32Z",
    "author_association": "MEMBER",
    "body": "Actually, yes, I think an explicit `remove` method is preferable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28936959",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28936959",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28936959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM2OTU5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:15:06Z",
    "updated_at": "2013-11-20T22:15:06Z",
    "author_association": "MEMBER",
    "body": "What is the benefit of `remove_for_type` over `type_printers.pop`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28937866",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28937866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28937866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM3ODY2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:25:34Z",
    "updated_at": "2013-11-20T22:25:34Z",
    "author_association": "MEMBER",
    "body": "Does nobody else find it surprising that registering None as a formatter via `for_type(type, None)` _doesn't_ clear the formatter?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28938345",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28938345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28938345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM4MzQ1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:31:00Z",
    "updated_at": "2013-11-20T22:31:00Z",
    "author_association": "MEMBER",
    "body": "Mildly surprising, perhaps, but not enough to make me keen on an API-breaking change. Especially because the failure mode if people are using that to check the current formatter is quite annoying - it will still return the value they expect, but then stop using that function, with no warning.\n\nTo change my position again: `type_printers.pop` seems adequate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28939558",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28939558",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28939558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM5NTU4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:45:56Z",
    "updated_at": "2013-11-20T22:45:56Z",
    "author_association": "MEMBER",
    "body": "I should also note that the changed behavior was entirely undocumented, and a search on GitHub found no evidence of users of the undocumented behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28940144",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28940144",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28940144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQwMTQ0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:53:11Z",
    "updated_at": "2013-11-20T22:53:11Z",
    "author_association": "MEMBER",
    "body": "I am fine with `pop`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28940310",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28940310",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28940310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQwMzEw",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T22:55:18Z",
    "updated_at": "2013-11-20T22:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW: the API originates in the upstream `pretty.py` on which the type-dispatch was modelled:\n\nhttp://dev.pocoo.org/hg/sandbox/file/98ce1ce17c7c/pretty/pretty.py#l634\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28943118",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28943118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28943118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQzMTE4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T23:28:46Z",
    "updated_at": "2013-11-20T23:28:46Z",
    "author_association": "MEMBER",
    "body": "Thanks, @rkern, makes more sense now.\n\nAny preferences between:\n1. no change, just publicize pop as official API\n2. add `remove_for_type`\n3. interpret None formatter as unregistration\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28972449",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-28972449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 28972449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTcyNDQ5",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-21T10:21:50Z",
    "updated_at": "2013-11-21T10:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a preference for adding `remove_for_type()` and `query()` methods and making `for_type(typ, None)` an error (after deprecation, if you like). Ideally, `remove_for_type()` and `query()` would be implemented to check both `type_printers` and `deferred_printers` since the deferred printers will get moved over to the `type_printers` cache when they are resolved. You can't do that if a raw `type_printers.pop()`/`deferred_printers.pop()` is your API.\n\nIt's too bad that I stuck you guys with separate methods for registering by type and type name. In my more recent incarnations of this pattern, I have put both in the same method. That makes it less of a load on the API to add removal and query methods.\n\nhttps://github.com/enthought/apptools/blob/master/apptools/type_registry/type_registry.py\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29923380",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-29923380",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 29923380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTIzMzgw",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T18:26:08Z",
    "updated_at": "2013-12-05T18:26:08Z",
    "author_association": "MEMBER",
    "body": "Just a note, please add a `docs/source/whatsnew/pr/formatter.rst` to document this change, regardless of what we go with.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29965911",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-29965911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 29965911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY1OTEx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T06:16:41Z",
    "updated_at": "2013-12-17T18:56:38Z",
    "author_association": "MEMBER",
    "body": "Okay, I copied some of the logic from apptools, thanks @rkern.\n\nThe current behavior:\n- `lookup(instance)` - return appropriate callback or a given object\n- `lookup_by_type(type_or_str)` - return appropriate callback for a given type or `'mod.name'` type string\n- `for_type(type_or_str)` - behaves the same, only adding support for type strings for consistency\n- `pop(type_or_str)` - remove a type (by type or string)\n\nThe inner data structures are unchanged, so people reaching in and calling pop already should be unaffected.\n\n@ivanov I will make sure to add the what's new notes, and also propagate usage of this API in the few places we would have used them if they existed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29966434",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-29966434",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 29966434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY2NDM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T06:32:10Z",
    "updated_at": "2013-12-06T06:32:10Z",
    "author_association": "MEMBER",
    "body": "what's new added, and pop usage propagated. Should be ready for another review pass.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30013529",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-30013529",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 30013529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDEzNTI5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T17:42:01Z",
    "updated_at": "2013-12-06T17:42:01Z",
    "author_association": "MEMBER",
    "body": "The lookup, pop behavior is directly from apptools, but I was considering making the following changes:\n- lookup_by_type doesn't support type strings, unlike for_type and pop. I think it should, for consistency.\n- I want to add a dict.pop(typ, None) behavior like `dict.pop` to prevent KeyError\n- map `__contains__` to `lookup_by_type`, so one can check `typ in Formatter`\n\nAny objections to those?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30022363",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-30022363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 30022363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIyMzYz",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T19:35:13Z",
    "updated_at": "2013-12-06T19:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "1. I can't think of an actual use case for a string typename for `lookup_by_type()`. YAGNI, but it does no harm.\n2. Good thought.\n3. `__contains__` should return a `bool`, IMO.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30023111",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-30023111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 30023111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIzMTEx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T19:44:01Z",
    "updated_at": "2013-12-06T19:44:01Z",
    "author_association": "MEMBER",
    "body": "> 1. I can't think of an actual use case for a string typename for lookup_by_type().\n\nI was mainly thinking of wanting to register a formatter for a not-yet-imported type, but only if one doesn't already exist:\n\n``` python\nif 'not_yet_imported.type' not in formatter:\n    formatter.for_type('not_yet_imported.type', my_formatter)\n```\n\nAlso, it was just for consistency, since I kept trying to use it this way in the tests to verify that things were working properly, and all of the other API calls support it.\n\n> **contains** should return a bool, IMO.\n\nyes, definitely. I only meant to use lookup_for_type to perform the check, the return is still bool.\n\nThe code should reflect these changes now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30024396",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-30024396",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 30024396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI0Mzk2",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T19:59:05Z",
    "updated_at": "2013-12-06T19:59:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "The docstrings could use another pass (for instance, rationalizing the type description of `typ` across all of the methods), but that shouldn't hold up merging.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30353673",
    "html_url": "https://github.com/ipython/ipython/pull/4561#issuecomment-30353673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4561",
    "id": 30353673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzUzNjcz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T19:23:01Z",
    "updated_at": "2013-12-11T19:23:01Z",
    "author_association": "MEMBER",
    "body": "I didn't saw anything specific to say, but this is a place of the code where I'm not confortable.\n"
  }
]
