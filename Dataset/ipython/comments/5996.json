[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46216304",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46216304",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46216304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE2MzA0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T18:32:12Z",
    "updated_at": "2014-06-16T18:32:12Z",
    "author_association": "MEMBER",
    "body": "We rely on `$` all over IPython. Can you use Prototype.js in a no-conflict mode instead of changing code all over IPython?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46217278",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46217278",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46217278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE3Mjc4",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T18:39:46Z",
    "updated_at": "2014-06-16T18:39:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Prototype.js doesnot have a no-conflict mode(as of now). Also with the new functionality of flexibility to add external javascripts in IPython2, It might get problems in future, since many Javascript libraries use `$` for their selectors(or for other purposes), and this will affect adding(embedding?) many other javascript libraries(not only Prototype.js).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46217745",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46217745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46217745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE3NzQ1",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T18:43:46Z",
    "updated_at": "2014-06-16T18:43:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "It might be some work to change jQuery selector alias in IPython(and some change in developer's documentation too!), but will be useful in the sense that it will allow zero conflicts from IPython's native notebooks(since `$` is the most widely repeated selector in Javascript libraries).\n\nOr If we can come upon some other(smarter) way to resolve conflicts!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46225947",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46225947",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46225947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjI1OTQ3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T19:48:50Z",
    "updated_at": "2014-06-16T19:48:50Z",
    "author_association": "MEMBER",
    "body": "@jdfreder could we start to just require jquery to eliminate our usage of\nthe `$` global?\n\nOn Mon, Jun 16, 2014 at 11:43 AM, Tarun Gaba notifications@github.com\nwrote:\n\n> It might be some work to change jQuery selector alias in IPython(and some\n> change in developer's documentation too!), but will be useful in the sense\n> that it will allow zero conflicts from IPython's native notebooks(since $\n> is the most widely repeated selector in Javascript libraries).\n> \n> Or If we can come upon some other(smarter) way to resolve conflicts!\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5996#issuecomment-46217745.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46232709",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46232709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46232709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjMyNzA5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T20:33:22Z",
    "updated_at": "2014-06-16T20:33:22Z",
    "author_association": "MEMBER",
    "body": "> @jdfreder could we start to just require jquery to eliminate our usage of\n> the `$` global?\n\nI'm already doing that in the requrie.js PR.  I'm explicitly importing jQuery under the $ alias:\n\n``` js\n// Copyright (c) IPython Development Team.\n// Distributed under the terms of the Modified BSD License.\n\ndefine([\n    'base/js/namespace',\n    'components/jquery/jquery.min',\n], function(IPython, $) {\n    \"use strict\";\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46232899",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46232899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46232899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjMyODk5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T20:35:07Z",
    "updated_at": "2014-06-16T20:35:07Z",
    "author_association": "MEMBER",
    "body": "Arg, everything about javascript is awful, even its conventions. I really think jquery should be available as `$` in user javascript, without any call to require.\n\n@tarzzz if you do something like:\n\n``` javascript\nrequire('Prototype', function ($) {...})\n```\n\ndoes it work?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46233450",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46233450",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46233450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjMzNDUw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T20:39:52Z",
    "updated_at": "2014-06-16T20:39:52Z",
    "author_association": "MEMBER",
    "body": "@jdfreder OK great, for our code that is what I think we should do.\n\n@minrk in a way require.js is an infectious disease (once our code base has\nit, everything that touches our code base must have it). I don't see much\nway around this though in general. We can probably get jQuery's `$` global\nto work, but we still have to tell people if they want to do it right and\nnot worry about global conflicts, they have to use require. I think you are\nright in suggesting using require to load Prototype.\n\nOn Mon, Jun 16, 2014 at 1:35 PM, Min RK notifications@github.com wrote:\n\n> Arg, everything about javascript is awful, even its conventions. I really\n> think jquery should be available as $ in user javascript, without any\n> call to require.\n> \n> @tarzzz https://github.com/tarzzz if you do something like:\n> \n> require('Prototype', function ($) {...})\n> \n> does it work?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5996#issuecomment-46232899.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46234287",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46234287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46234287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjM0Mjg3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T20:46:07Z",
    "updated_at": "2014-06-16T20:46:07Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg Using it in our code is one thing, but that need not affect simple user code in `display(Javascript)`, which should have access to jQuery as `$` without including any require code. In fact, I think the require PR may fix the issue described here, since our own code won't rely on the `$` being global anymore.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46238223",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46238223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46238223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjM4MjIz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T21:09:10Z",
    "updated_at": "2014-06-16T21:09:10Z",
    "author_association": "MEMBER",
    "body": "Right, for jQuery that isn't too much of a problem. And I think that the\nrequire PR probably does fix the immediate conflict at hand.\n\nBut for other libraries such as d3, simply having require.js on the page\nwhen they are loaded forces _everyone_ to load d3 using require (it doesn't\ndefine the d3 global).\n\nOn Mon, Jun 16, 2014 at 1:46 PM, Min RK notifications@github.com wrote:\n\n> @ellisonbg https://github.com/ellisonbg Using it in our code is one\n> thing, but that need not affect simple user code in display(Javascript),\n> which should have access to jQuery as $ without including any require\n> code. In fact, I think the require PR may fix the issue described here,\n> since our own code won't rely on the $ being global anymore.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5996#issuecomment-46234287.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46289478",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-46289478",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 46289478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjg5NDc4",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T10:13:30Z",
    "updated_at": "2014-06-17T10:13:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk Umm it is slightly more complicated then it seems. Actually, It is not my Javascripts which are breaking, but notebooks' javascripts are broken, after prototype.js is loaded(in output cell). \n\nnotebook's native jQuery is loaded in the head(when notebook is initialized), and prototype.js is loaded when I call the visualizer in output cell. After it is loaded, the visualizer works fine, but other notebook's elements(like toolbar, and input cells) start breaking, and I get a hell lot of \n\n```\nundefined is not a function\n```\n\nerrors in console. Even if I use require.js, after prototype.js is loaded, it overwrites  `$` selector(of native notebook's jQuery).\n\nHere is a screenshot of my console:\n\n![screenshot from 2014-06-17 15 41 59](https://cloud.githubusercontent.com/assets/1546532/3298847/e3377636-f607-11e3-87e4-c900a007af45.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52175477",
    "html_url": "https://github.com/ipython/ipython/issues/5996#issuecomment-52175477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5996",
    "id": 52175477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTc1NDc3",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T12:12:49Z",
    "updated_at": "2014-08-14T12:12:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is fixed now .. \n\nClosing!!\n"
  }
]
