[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304175036",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304175036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304175036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE3NTAzNg==",
    "user": {
      "login": "rtilk89",
      "id": 3302930,
      "node_id": "MDQ6VXNlcjMzMDI5MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3302930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtilk89",
      "html_url": "https://github.com/rtilk89",
      "followers_url": "https://api.github.com/users/rtilk89/followers",
      "following_url": "https://api.github.com/users/rtilk89/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtilk89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtilk89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtilk89/subscriptions",
      "organizations_url": "https://api.github.com/users/rtilk89/orgs",
      "repos_url": "https://api.github.com/users/rtilk89/repos",
      "events_url": "https://api.github.com/users/rtilk89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtilk89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T02:33:04Z",
    "updated_at": "2017-05-26T02:33:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for the spam - made a tiny git mistake :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304179021",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304179021",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304179021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE3OTAyMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T03:05:07Z",
    "updated_at": "2017-05-26T03:05:07Z",
    "author_association": "MEMBER",
    "body": "Sweet, thanks ! You did indeed messed up the git history a bit (likely rebasing ?) do you want to attempt to fix that ? Otherwise I can do it. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304180858",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304180858",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304180858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE4MDg1OA==",
    "user": {
      "login": "rtilk89",
      "id": 3302930,
      "node_id": "MDQ6VXNlcjMzMDI5MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3302930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtilk89",
      "html_url": "https://github.com/rtilk89",
      "followers_url": "https://api.github.com/users/rtilk89/followers",
      "following_url": "https://api.github.com/users/rtilk89/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtilk89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtilk89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtilk89/subscriptions",
      "organizations_url": "https://api.github.com/users/rtilk89/orgs",
      "repos_url": "https://api.github.com/users/rtilk89/repos",
      "events_url": "https://api.github.com/users/rtilk89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtilk89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T03:20:30Z",
    "updated_at": "2017-05-26T03:20:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I think I messed the history up even more. Would you mind cleaning it up in the merge?\r\nI will be more careful with my rebase next time!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304185082",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304185082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304185082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE4NTA4Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T03:59:18Z",
    "updated_at": "2017-05-26T03:59:18Z",
    "author_association": "MEMBER",
    "body": "Ok, I think I got the rebase right, and you should appear as the Author and Committer  of the last commit."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304298093",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304298093",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304298093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDI5ODA5Mw==",
    "user": {
      "login": "rtilk89",
      "id": 3302930,
      "node_id": "MDQ6VXNlcjMzMDI5MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3302930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtilk89",
      "html_url": "https://github.com/rtilk89",
      "followers_url": "https://api.github.com/users/rtilk89/followers",
      "following_url": "https://api.github.com/users/rtilk89/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtilk89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtilk89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtilk89/subscriptions",
      "organizations_url": "https://api.github.com/users/rtilk89/orgs",
      "repos_url": "https://api.github.com/users/rtilk89/repos",
      "events_url": "https://api.github.com/users/rtilk89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtilk89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T14:30:48Z",
    "updated_at": "2017-05-26T14:30:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah I think that worked. Sorry about the churn!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304321913",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304321913",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304321913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMyMTkxMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T16:05:05Z",
    "updated_at": "2017-05-26T16:05:05Z",
    "author_association": "MEMBER",
    "body": "This appears to be changing what the `Pretty` object does. Generally, I think the idea with these core display objects is to act as wrappers for pre-formatted content, so you can load some data from a file or something and display it. I think we should keep the core object not manipulating its data at all, and add a new object if we want to do the text wrapping thing."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304463985",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304463985",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304463985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ2Mzk4NQ==",
    "user": {
      "login": "rtilk89",
      "id": 3302930,
      "node_id": "MDQ6VXNlcjMzMDI5MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3302930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rtilk89",
      "html_url": "https://github.com/rtilk89",
      "followers_url": "https://api.github.com/users/rtilk89/followers",
      "following_url": "https://api.github.com/users/rtilk89/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtilk89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rtilk89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtilk89/subscriptions",
      "organizations_url": "https://api.github.com/users/rtilk89/orgs",
      "repos_url": "https://api.github.com/users/rtilk89/repos",
      "events_url": "https://api.github.com/users/rtilk89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rtilk89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-27T16:58:03Z",
    "updated_at": "2017-05-27T16:58:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver - how can I test what the Pretty object is doing? \r\n\r\nI was playing around with it in the following way: \r\n```\r\nfrom IPython.core.display import Pretty\r\n\r\np = Pretty(<Some long string>)\r\n```\r\nShould it have a simple print function like the documentation at the top of IPython.lib.pretty?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304562202",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304562202",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304562202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDU2MjIwMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-29T02:55:17Z",
    "updated_at": "2017-05-29T02:55:17Z",
    "author_association": "MEMBER",
    "body": "Hum, I missed that but @takluyver is right, None of the object in `display.py` are trying to be smart.\r\n\r\nBut, if Pretty is just a pass-through, I also don't really see the benefit of the PrettyObject,as it would not be much different from a plain object with a `__repr__`\r\n\r\nWrapping text is a nice default, though I would use `textwrap.textwrap` that have a slighly better implementation  (yours seem to keep leading spaces:-) )\r\n\r\n```\r\nIn [3]: lorem =\"\"\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printe\r\n   ...: r took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unch\r\n   ...: anged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker inclu\r\n   ...: ding versions of Lorem Ipsum\"\"\"\r\n\r\nIn [4]: lorem\r\nOut[4]: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n\r\nIn [5]: Pretty(lorem)\r\nOut[5]:\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\r\n Ipsum has been the industry's standard dummy text ever since the 1500s, when an\r\n unknown printer took a galley of type and scrambled it to make a type specimen\r\n book. It has survived not only five centuries, but also the leap into\r\n electronic typesetting, remaining essentially unchanged. It was popularised in\r\n the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\r\n and more recently with desktop publishing software like Aldus PageMaker\r\n including versions of Lorem Ipsum\r\n\r\nIn [7]: import textwrap\r\n\r\nIn [9]: print('\\n'.join(textwrap.wrap(lorem)))\r\nLorem Ipsum is simply dummy text of the printing and typesetting\r\nindustry. Lorem Ipsum has been the industry's standard dummy text ever\r\nsince the 1500s, when an unknown printer took a galley of type and\r\nscrambled it to make a type specimen book. It has survived not only\r\nfive centuries, but also the leap into electronic typesetting,\r\nremaining essentially unchanged. It was popularised in the 1960s with\r\nthe release of Letraset sheets containing Lorem Ipsum passages, and\r\nmore recently with desktop publishing software like Aldus PageMaker\r\nincluding versions of Lorem Ipsum\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304883229",
    "html_url": "https://github.com/ipython/ipython/pull/10608#issuecomment-304883229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10608",
    "id": 304883229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg4MzIyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T13:46:54Z",
    "updated_at": "2017-05-30T13:46:54Z",
    "author_association": "MEMBER",
    "body": "@kr1m I would do that and then call `IPython.display.display(p)`. But I don't think it's meant to be doing anything clever.\r\n\r\n@Carreau \r\n> But, if Pretty is just a pass-through, I also don't really see the benefit of the PrettyObject\r\n\r\nIt still has the functionality for loading data from a file or a URL, and it's there for parity with the other raw display objects, like `HTML()` or `Markdown()`.\r\n"
  }
]
