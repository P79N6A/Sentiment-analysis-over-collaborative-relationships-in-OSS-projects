[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3344840",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3344840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3344840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ4NDA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-03T19:32:16Z",
    "updated_at": "2012-01-03T19:32:16Z",
    "author_association": "MEMBER",
    "body": "There is a huge amount of complexity lurking in this direction that we don't want to get into at this point.  It was a deliberate choice to stick with the 1 notebook = 1 kernel constraint for now.  To go this direction we would need to completely rethink how kernels and notebooks are related and develop a UI for linking arbitrary notebooks to arbitrary kernels.  It would also require a complete reworking of the server backend.  There are a number of other more pressing things on the table for the notebook right now so I don't think it makes sense to pursue this right now.  \n\nBut even more important is that we are aiming to keep the notebook as simple as possible and that would introduce a huge amount of complexity that many users will find confusing.  It is an additional level of abstraction that requires user to keep track the various kernel namespaces in their head.  One feature we do plan on implementing that would provide some of the same user experience without the confusing aspects is having multiple \"worksheets\" in a single notebook.  This would basically provide tabs in the notebook where all tabs point to the same kernels.  This would allow users to organize their notebook into logical sections, but maintain the 1 kernel = 1 notebook constraint.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3344892",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3344892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3344892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ4OTI=",
    "user": {
      "login": "madhusudancs",
      "id": 10183,
      "node_id": "MDQ6VXNlcjEwMTgz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madhusudancs",
      "html_url": "https://github.com/madhusudancs",
      "followers_url": "https://api.github.com/users/madhusudancs/followers",
      "following_url": "https://api.github.com/users/madhusudancs/following{/other_user}",
      "gists_url": "https://api.github.com/users/madhusudancs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madhusudancs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madhusudancs/subscriptions",
      "organizations_url": "https://api.github.com/users/madhusudancs/orgs",
      "repos_url": "https://api.github.com/users/madhusudancs/repos",
      "events_url": "https://api.github.com/users/madhusudancs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madhusudancs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-03T19:36:19Z",
    "updated_at": "2012-01-03T19:36:19Z",
    "author_association": "NONE",
    "body": "Oh Ok. I honestly do not know the complexities involved since I do not have the full picture. If that is the reason why this doesn't exist, it makes sense. Just one question about the feature of multiple worksheets. Will that work across machines?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3344914",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3344914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3344914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ5MTQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-03T19:38:52Z",
    "updated_at": "2012-01-03T19:38:52Z",
    "author_association": "MEMBER",
    "body": "On Tue, Jan 3, 2012 at 11:36 AM, Madhusudan.C.S\nreply@reply.github.com\nwrote:\n\n> Oh Ok. I honestly do not know the complexities involved since I do not have the full picture. If that is the reason why this doesn't exist, it makes sense. Just one question about the feature of multiple worksheets. Will that work across machines?\n\nNot quite sure what you mean by across machines.  Could you clarify that?\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1220#issuecomment-3344892\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3344927",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3344927",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3344927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ5Mjc=",
    "user": {
      "login": "madhusudancs",
      "id": 10183,
      "node_id": "MDQ6VXNlcjEwMTgz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madhusudancs",
      "html_url": "https://github.com/madhusudancs",
      "followers_url": "https://api.github.com/users/madhusudancs/followers",
      "following_url": "https://api.github.com/users/madhusudancs/following{/other_user}",
      "gists_url": "https://api.github.com/users/madhusudancs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madhusudancs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madhusudancs/subscriptions",
      "organizations_url": "https://api.github.com/users/madhusudancs/orgs",
      "repos_url": "https://api.github.com/users/madhusudancs/repos",
      "events_url": "https://api.github.com/users/madhusudancs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madhusudancs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-03T19:40:00Z",
    "updated_at": "2012-01-03T19:40:00Z",
    "author_association": "NONE",
    "body": "Will it be possible to open a different worksheet on a different computer?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3350731",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3350731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3350731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTA3MzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T05:01:15Z",
    "updated_at": "2012-01-04T05:01:15Z",
    "author_association": "MEMBER",
    "body": "Brian, I haven't read the code yet so I'm not sure of all the details, but my understanding from Madhu's description was not that it changed the 1-1 mapping of notebooks to kernels, but rather that it enabled notebooks to be hooked to already running kernels.  That's precisely what the qt console and console both do with the `--existing` flag, and it is something that is missing from the notebook currently.  We may want to revisit how to most cleanly achieve that, but if that was the intent of this PR, then I think it is something that we do want very much.\n\nNow, the only thing I'm talking about is _what_ kernel a notebook is opened against when freshly opened.  For example, once a notebook server has associated a notebook file with a kernel, it should _not_ be possible to reopen the same file with a different kernel (to avoid the confusion Brian alludes to). But at first shot, when no kernel has been created yet, it should definitely be possible to say 'open this notebook file -- or make a new one-- against this existing kernel' just like the `--existing` flag works today.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3360071",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3360071",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3360071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjAwNzE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T19:55:05Z",
    "updated_at": "2012-01-04T19:55:05Z",
    "author_association": "MEMBER",
    "body": "You are right that it primarily addresses the usage case of an existing kernel that was started outside the notebook.  But I think this still does break the 1-1 mapping.  By that, I mean that the change would allow a single notebook to be hooked up to a number of different kernels.  It doesn't matter that those other kernels were started outside the notebook.  It becomes a 1-N mapping, although the notebook is hooked up to a single kernel at one time (not sure how a notebook could be hooked up to multiple kernels simultaneously).\n\nImplementing this in the right way would involve changing the URL scheme in significant ways and introducing new abstractions in the server side code for linking kernels to notebooks.  We are about to embark on a radical refactoring of the URL scheme and I don't want to introduce new things in a semi-thought-out way at this point.  The refactoring process would give us a chance to consider how these things could be handled properly.\n\nWhile I see the usage case for hooking a notebook up to existing kernels there is a significant complexity cost in going down this path that we can't ignore.  It forces the user into thinking abstractly about notebooks and kernels in a manner that is quite subtle.  And it does so the second the user tries to open a new notebook.  For us, the abstraction of the kernel and frontend is completely natural.  But we have been thinking about this for years and most python users, even relatively advanced ones, don't think in these terms.  I would almost (not quite though) say that the kernel abstraction is an implementation detail that new users should never need to worry about.  If we ever go down this path (I am still not convinced), we would need to design a UI that completely hides these things from new users and only exposes them to advanced users when they ask for it.\n\nI feel strongly that the notebook needs to have a UI that inexperienced users can use with 0 documentation.  It needs to be as simple as angry birds for these users.  Think of a freshman in college with no programming experience for whom the statement \"a=10\" involves a significant cognitive load.  The (fun!) challenge for us is that we also want the notebook to be a powerful almost-IDE environment for the best and brightest programmers in the world.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3504136",
    "html_url": "https://github.com/ipython/ipython/pull/1220#issuecomment-3504136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1220",
    "id": 3504136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQxMzY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-15T23:00:36Z",
    "updated_at": "2012-01-15T23:00:36Z",
    "author_association": "MEMBER",
    "body": "This will be continued in #1274.\n"
  }
]
