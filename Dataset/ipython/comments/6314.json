[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52333517",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-52333517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 52333517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzMzNTE3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T17:22:06Z",
    "updated_at": "2014-08-15T17:22:06Z",
    "author_association": "MEMBER",
    "body": "Yes, the regular IPython display machinery works through parts of the IPython kernel that aren't initialised for wrapper kernels. This came up recently on the mailing list. We'll add a convenience method to make display easier, but for the meantime, see my response here for how to display data:\nhttp://mail.scipy.org/pipermail/ipython-dev/2014-July/014563.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54625865",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-54625865",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 54625865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjI1ODY1",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T13:41:00Z",
    "updated_at": "2014-09-05T13:41:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a note to let you know that we have extended wrapperkernel by adding magics and many useful methods. See: https://github.com/blink1073/jupyter_kernel\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56660541",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-56660541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 56660541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjYwNTQx",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T12:12:26Z",
    "updated_at": "2014-09-24T12:12:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Need help with two more items to use the wrapperkernel:\n1. Can the widgets be used, or do we need to re-implement all of the plumbing? If it depends on `get_ipython()`, what is the bare minimum that we need to implement?\n2. How do you use raw_input? Currently calling `wrapperkernel.raw_input()` gives: `UnhandledException: raw_input was called, but this frontend does not support input requests.`\n\nPS - you don't really need to add too many convenience methods... it is actually quite useful for this interface to be more minimal, so that it is easy to see what is going on, and for kernel extenders to write their own abstractions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56713486",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-56713486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 56713486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzEzNDg2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T18:08:23Z",
    "updated_at": "2014-09-24T18:08:23Z",
    "author_association": "MEMBER",
    "body": "1. Currently, there's no support for the comm/widget infrastructure. At least comm_manager should be able to work without an InteractiveShell instance, but that's not currently the case. Volunteers welcome.\n2. Looking at the code, it looks like you need to set `wrapperkernel._allow_stdin = allow_stdin` (where allow_stdin is one of the arguments to do_execute), and then provide whatever input functions make sense for your language as (wrappers around) `wk.raw_input()`. Again, if the abstractions aren't quite right here, do lend a hand to fix them. The wrapper kernel interface is the result of separating our own kernel implementation from the serialisation and communication framework, and I'm sure there are parts where the separation is not yet very clean.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56730074",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-56730074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 56730074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzMwMDc0",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T20:05:24Z",
    "updated_at": "2014-09-24T20:05:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Ok, thanks for the feedback! We'll dive into these and see what we can do. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56749413",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-56749413",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 56749413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzQ5NDEz",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T22:33:07Z",
    "updated_at": "2014-09-24T22:33:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Confirmed that that was all that was needed for raw_input:\n\n```\n   def do_execute(self, code, silent, store_history=True, user_expressions=None,\n                   allow_stdin=False):\n        # Set the ability for the kernel to get standard-in:                    \n        self._allow_stdin = allow_stdin\n\n```\n\nNow, where should this information go? I was going to add it to the echo kernel, but it isn't useful in that kernel (ie, you can test it). Perhaps it would be better to turn the echo example into a kernel more like our eval kernel [1], where things can actually be tried.\n\n[1] - https://github.com/blink1073/jupyter_kernel/blob/master/eval_kernel/eval_kernel.py\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56750025",
    "html_url": "https://github.com/ipython/ipython/issues/6314#issuecomment-56750025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6314",
    "id": 56750025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzUwMDI1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T22:38:41Z",
    "updated_at": "2014-09-24T22:38:41Z",
    "author_association": "MEMBER",
    "body": "Possibly that should be set in the base Kernel implementation, before do_execute is called. I can't think of a situation where you'd want to not set it.\n"
  }
]
