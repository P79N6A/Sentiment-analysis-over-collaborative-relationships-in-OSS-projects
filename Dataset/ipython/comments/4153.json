[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23795286",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-23795286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 23795286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzk1Mjg2",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T14:50:21Z",
    "updated_at": "2013-09-04T14:50:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau: If I remember correctly, `__repr__` should return `str` (not `unicode`) in Python 2 and `str` (not `bytes`) in Python 3.  So our issue with returning a string containing `µ` is really only an issue in Python 2.\n\nFor example, in Python 3:\n\n```\nython 3.3.1 (default, Apr 17 2013, 22:30:32)\n[GCC 4.7.3] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> class b(object):\n...     def __repr__(self):\n...         return u'Took 4 \\xb5s'\n...\n>>> b()\nTook 4 µs\n```\n\nSo how to work around this in Python 2?  We could define a `__unicode__` method so that at least `unicode(...)` looks nice.  Also could use a spelled out version (`µs` -> `microseconds`) in `__repr__`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23800411",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-23800411",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 23800411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAwNDEx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T15:49:23Z",
    "updated_at": "2013-09-04T15:49:23Z",
    "author_association": "MEMBER",
    "body": "right - `__repr__` must always be `str`.  If you want unicode everywhere, you can always define `_repr_pretty_`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23805446",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-23805446",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 23805446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODA1NDQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T16:53:21Z",
    "updated_at": "2013-09-04T16:53:21Z",
    "author_association": "MEMBER",
    "body": "`_format_time()` only uses the micro symbol if it determines it's safe for stdout, so I think you should be able to do something like this:\n\n```\nif (not py3compat.PY3):\n    return unic.encode(getattr(sys.stdout, 'encoding', None))\nreturn unic\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24313401",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24313401",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24313401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzEzNDAx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T12:12:16Z",
    "updated_at": "2013-09-12T12:12:16Z",
    "author_association": "MEMBER",
    "body": "I know `__repr__` should return `str`, I went with `_repr_pretty_`. and cleaned things up a bit. \n\n```\nIn[1]:%timeit -n10 -r2000 [x for x in range(100)]\n10 loops, best of 2000: 5.7 µs per loop\nOut[1]: <TimeitResult : 10 loops, best of 2000: 5.7 µs per loop>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24359232",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24359232",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24359232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzU5MjMy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T21:57:21Z",
    "updated_at": "2013-09-12T21:57:21Z",
    "author_association": "MEMBER",
    "body": "If the results object contains all the info that it would print, should we just dispense with the `-q` flag, and just return this object instead? The only major difference would be that if you used a %timeit line magic with commands after it in the same cell, you wouldn't see the output.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24374272",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24374272",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24374272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzc0Mjcy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-13T05:38:13Z",
    "updated_at": "2013-09-13T05:38:13Z",
    "author_association": "MEMBER",
    "body": "I would prefer to be conservative about this one and not disable the print by default.\nIt is not obvious to everyone that you can put a print in front of a magic, and I would say that most of the time you are interested in `%timeit` printing more than the result itself, it is not so uncommon to have many timeit in the same cell to compare many functions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24410052",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24410052",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24410052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDEwMDUy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-13T17:18:06Z",
    "updated_at": "2013-09-13T17:18:06Z",
    "author_association": "MEMBER",
    "body": "OK, that makes sense.\n\nI'm not sure about potentially putting the compiler time into the repr. It would look something like this:\n\n```\nIn  [1]: %timeit ...\nTimeitResult : 10 loops, best of 2000: 5.7 µs per loop\nCompiler time 0.12 s\nOut [1]: <TimeitResult : 10 loops, best of 2000: 5.7 µs per loop - Compiler time 0.12 s>\n```\n\nThat feels a bit too long, to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24414326",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24414326",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24414326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE0MzI2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-13T18:21:53Z",
    "updated_at": "2013-09-13T18:21:53Z",
    "author_association": "MEMBER",
    "body": "The print is what people want almost every time - we don't want to print and return by default, that's annoying.  Maybe the return should be activated by a flag, then?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24447612",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24447612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24447612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ3NjEy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T14:21:36Z",
    "updated_at": "2013-09-14T14:21:36Z",
    "author_association": "MEMBER",
    "body": "@minrk \n\nI think we were moving toward having magics return vs print. (#3725). \n\nHaving to explicitly tell magics or function to return is extremely weird (and make this hard to discover).\n\nI personally think the opposite, magic should return (a rich object), not print, and if you use many lines magics in the same cell then you are responsible to print (display if rich). Here I keep the behavior of printing for legacy.\n\n@takluyver \nDo you think of just removing compile time from repr totally ? I would have though repr would completely replace print at some point, but will remove.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24449766",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24449766",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24449766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ5NzY2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T16:03:25Z",
    "updated_at": "2013-09-14T16:03:25Z",
    "author_association": "MEMBER",
    "body": "If the repr replaces print, then I would leave the extra info in the repr.\nBut I don't think it should replace print, for the reason you explained.\nTelling everyone to call display if they have more than one timeit in the\ncell is suboptimal, given that magics are convenience functions.\n\nThomas\nOn Sep 14, 2013 7:21 AM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> @minrk https://github.com/minrk\n> \n> I think we were moving toward having magics return vs print. (#3725https://github.com/ipython/ipython/issues/3725).\n> \n> Having to explicitly tell magics or function to return is extremely weird\n> (and make this hard to discover).\n> \n> I personally think the opposite, magic should return (a rich object), not\n> print, and if you use many lines magics in the same cell then you are\n> responsible to print (display if rich). Here I keep the behavior of\n> printing for legacy.\n> \n> @takluyver https://github.com/takluyver\n> Do you think of just removing compile time from repr totally ? I would\n> have though repr would completely replace print at some point, but will\n> remove.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4153#issuecomment-24447612\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24750231",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24750231",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24750231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzUwMjMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T15:56:08Z",
    "updated_at": "2013-09-19T15:56:08Z",
    "author_association": "MEMBER",
    "body": "Do not return unless explicitely specified, removed compilation time from repr. Update usage docstring.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24793370",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24793370",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24793370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzkzMzcw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T07:08:32Z",
    "updated_at": "2013-09-20T07:08:32Z",
    "author_association": "MEMBER",
    "body": "Dedented ; no `tic_min`; `x in opts`; `-o` instead of `-s`; squashed; rebased on master; force pushed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24828282",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24828282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24828282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI4Mjgy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T17:50:09Z",
    "updated_at": "2013-09-20T17:50:09Z",
    "author_association": "MEMBER",
    "body": "Looks good to me. However (with apologies for asking for yet another change), I think it should have at least a simple test in `IPython.core.tests.test_magics`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24881510",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24881510",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24881510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgxNTEw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T12:54:48Z",
    "updated_at": "2013-09-22T12:54:48Z",
    "author_association": "MEMBER",
    "body": "test `-q`and `-o` options.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24947272",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24947272",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24947272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTQ3Mjcy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T19:30:29Z",
    "updated_at": "2013-09-23T19:30:29Z",
    "author_association": "MEMBER",
    "body": "Thanks for your patience ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24947435",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24947435",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24947435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTQ3NDM1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T19:32:35Z",
    "updated_at": "2013-09-23T19:32:35Z",
    "author_association": "MEMBER",
    "body": "No problem, mostly occupied with PhD. Thanks for the review, and the incitation to write tests :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24950480",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24950480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24950480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTUwNDgw",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T20:14:35Z",
    "updated_at": "2013-09-23T20:14:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for this.  Super-useful!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24975966",
    "html_url": "https://github.com/ipython/ipython/pull/4153#issuecomment-24975966",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4153",
    "id": 24975966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc1OTY2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T05:36:09Z",
    "updated_at": "2013-09-24T05:36:09Z",
    "author_association": "MEMBER",
    "body": "I think one of the rules of IPython is that we code what we need :-)\n\nEnvoyé de mon iPhone\n\nLe 23 sept. 2013 à 22:14, ahmadia notifications@github.com a écrit :\n\n> Thanks for this. Super-useful!\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  }
]
