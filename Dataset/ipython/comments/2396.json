[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8403734",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8403734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8403734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDM3MzQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-09T13:40:18Z",
    "updated_at": "2012-09-09T13:40:18Z",
    "author_association": "MEMBER",
    "body": "I added a quick implementation off json-references, so that you could references other part of the json file, \nthis help the reading of the schema by allowing thing like `\"a_key\" : {\"$ref\": \"/code_cell\"}` , where `{\"$ref\": \"/code_cell\"}` will be replaced at load time with the correct part of the json file.\n\nthe validation seem to work :\n\n```\n./validator.py  ~/ipython/docs/examples/notebooks/*.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/00_notebook_tour.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/01_notebook_introduction.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/Animations_and_Progress.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/Capturing Output.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/Script Magics.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/cython_extension.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/display_protocol.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/formatting.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/octavemagic_extension.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/publish_data.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/rawraw.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/rmagic_extension.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/sympy.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/sympy_quantum_computing.ipynb\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/test.ipynb (56)\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/test_diff.ipynb (20)\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/trapezoid_rule.ipynb\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/truc.ipynb (6) \n```\n\nand should be refined. \n\nHere is a test example, where I require `code_cell` to have a prompt_number property (even if set to null: \n\n```\n./validator.py  ~/ipython/docs/examples/notebooks/*.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/00_notebook_tour.ipynb\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/01_notebook_introduction.ipynb (1)\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/Animations_and_Progress.ipynb (8)\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/Capturing Output.ipynb (13)\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/Script Magics.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/cython_extension.ipynb\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/display_protocol.ipynb (15)\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/formatting.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/octavemagic_extension.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/publish_data.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/rawraw.ipynb\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/rmagic_extension.ipynb (1)\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/sympy.ipynb\n[Pass] /Users/bussonniermatthias/ipython/docs/examples/notebooks/sympy_quantum_computing.ipynb\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/test.ipynb (56)\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/test_diff.ipynb (20)\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/trapezoid_rule.ipynb (1)\n[    ] /Users/bussonniermatthias/ipython/docs/examples/notebooks/truc.ipynb (6)\n```\n\nand indeed, some code cell have an empty prompt number. \nAlso, through this way, I discovered that `prompt_number` is of type `number` or `string` as some prompt number are...`nbsp;`. I don't think it should happend, and prompt number should be `number` or `null`.\n\nThought ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8408456",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8408456",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8408456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDg0NTY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-09T19:48:00Z",
    "updated_at": "2012-09-09T19:48:00Z",
    "author_association": "MEMBER",
    "body": "When I wrote the python code to create the various notebook parts, I tried to not assume that various elements would always be present as much as possible.  If we move to a schema (I like the idea) we might want to revisit that code to make sure that notebooks created using that Python code have all the right elements.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8408614",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8408614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8408614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDg2MTQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-09T20:01:38Z",
    "updated_at": "2012-09-09T20:01:38Z",
    "author_association": "MEMBER",
    "body": "Well, we can put element as not required, this is not a problem.\n\nI would just like to have a nice descriptive of what the ipynb format is, even if for now it only gives warning for non conform instances.\n\nI wrote that to be able to validate some test I made to generate notebook, and it can make a solid base to discuss the notebook format or make it evolve. Especially if we do cell by cell syncing, it would be great to be sure the format is always consistent. \n\nWe could also validate the [messaging api](http://ipython.org/ipython-doc/dev/development/messaging.html) with schema also. I still have to take a look ad wether there is a way to validate value and not only keys and structures. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8408667",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8408667",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8408667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDg2Njc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-09T20:05:59Z",
    "updated_at": "2012-09-09T20:05:59Z",
    "author_association": "MEMBER",
    "body": "Again, I really like the idea of having a validator.  For example, the\nserver should validate newly uploaded notebooks.  How about the following.\n Why don't you go through the nbformat and take a first guess and which\nattributes should be required and which should be optional.  Then we can\nlook through that list, discuss and finalize it.  But I _love_ this idea\nand appreciate your looking into this.\n\nOn Sun, Sep 9, 2012 at 1:01 PM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Well, we can put element as not required, this is not a problem.\n> \n> I would just like to have a nice descriptive of what the ipynb format is,\n> even if for now it only gives warning for non conform instances.\n> \n> I wrote that to be able to validate some test I made to generate notebook,\n> and it can make a solid base to discuss the notebook format or make it\n> evolve. Especially if we do cell by cell syncing, it would be great to be\n> sure the format is always consistent.\n> \n> We could also validate the messaging apihttp://ipython.org/ipython-doc/dev/development/messaging.htmlwith schema also. I still have to take a look ad wether there is a way to\n> validate value and not only keys and structures.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2396#issuecomment-8408614.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8415953",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8415953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8415953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTU5NTM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-10T07:33:20Z",
    "updated_at": "2012-09-10T07:33:20Z",
    "author_association": "MEMBER",
    "body": "That's seem fine with me. \nl guess this would then be notebook 3.1 maybe.\nI'll look into that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8457055",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8457055",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8457055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTcwNTU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-11T11:52:11Z",
    "updated_at": "2012-09-11T11:52:11Z",
    "author_association": "MEMBER",
    "body": "So, here we go.\nI did most of the changes I think are reasonable,\n\nbiggest changes are :\n\n`prompt_number`, required for code cell, can't be string, but can be null.\ncommits name are more or less explicit.\n\nresult of `./validator.py -s v3.withref.json ~/ipython/**/*.ipynb` (-v is a little too verbose)\n\n```\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/lib/BackgroundJobs.ipynb (22)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/00_notebook_tour.ipynb (1)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/01_notebook_introduction.ipynb (1)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/Animations_and_Progress.ipynb (8)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/Capturing Output.ipynb (13)\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/Script Magics.ipynb\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/cython_extension.ipynb\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/display_protocol.ipynb (15)\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/formatting.ipynb\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/octavemagic_extension.ipynb\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/publish_data.ipynb\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/rmagic_extension.ipynb (1)\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/sympy.ipynb\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/sympy_quantum_computing.ipynb\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/notebooks/trapezoid_rule.ipynb (1)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/parallel/Parallel Magics.ipynb (24)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/parallel/helloworld.ipynb (1)\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/parallel/options/Parallel MC Options.ipynb\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/parallel/parallel_mpi.ipynb\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/parallel/rmt/rmt.ipynb (29)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/parallel/task1.ipynb (1)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/parallel/taskmap.ipynb (1)\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/tests/heartbeat/gilsleep.ipynb (6)\n[Pass] /Users/matthiasbussonnier/ipython/docs/examples/tests/pylab-switch/Pylab Switching.ipynb\n[    ] /Users/matthiasbussonnier/ipython/docs/examples/widgets/directview/directview.ipynb (3)\n```\n\nOne thing that could be added is to require name for worksheets.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8978898",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-8978898",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 8978898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5Nzg4OTg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-28T14:55:35Z",
    "updated_at": "2012-09-28T14:55:35Z",
    "author_association": "MEMBER",
    "body": "Put dependencies in external with licences.\n\nThought ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9086678",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-9086678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 9086678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODY2Nzg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T20:57:52Z",
    "updated_at": "2012-10-02T20:57:52Z",
    "author_association": "MEMBER",
    "body": "@Carreau what else do you think needs discussion on this.  Did you have a chance to look through the nbformat and decide which attributes can be null?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9086906",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-9086906",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 9086906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODY5MDY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-02T21:04:34Z",
    "updated_at": "2012-10-02T21:04:34Z",
    "author_association": "MEMBER",
    "body": "I don't saw anything obvious, and I don't want to spend too much time on this as draft4 should come out \"soon\". \nMeaning that hopefully a few weeks later the python implementation will be up to date.\n\nI also have to study if we can validate further (like check if instance of sting ends with `\\n`for example. but this will not be in the draft itself, more on what `jsonschema.py`allow to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9110176",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-9110176",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 9110176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTAxNzY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T15:23:11Z",
    "updated_at": "2012-10-03T15:23:11Z",
    "author_association": "MEMBER",
    "body": "removed `jsonpointer.py` from `nbformat/v3` and rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9110201",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-9110201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 9110201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTAyMDE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T15:23:45Z",
    "updated_at": "2012-10-03T15:23:45Z",
    "author_association": "MEMBER",
    "body": "removed `jsonpointer.py` from `nbformat/v3` and rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9110328",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-9110328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 9110328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTAzMjg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-03T15:27:16Z",
    "updated_at": "2012-10-03T15:27:16Z",
    "author_association": "MEMBER",
    "body": "removed `jsonpointer.py` from `nbformat/v3` and rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9997481",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-9997481",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 9997481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTc0ODE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-01T21:54:16Z",
    "updated_at": "2012-11-01T21:54:16Z",
    "author_association": "MEMBER",
    "body": "Did the updated draft come out?  What do you think we should do with this PR?  It would be great to get it merged, but I am not quite sure what else needs to be done/answered.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10008598",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-10008598",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 10008598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDA4NTk4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T09:14:54Z",
    "updated_at": "2012-11-02T09:14:54Z",
    "author_association": "MEMBER",
    "body": "well, I so that draft 4 was due \"soon\" but I didn't looked at what \"soon\" was meaning between draft 2 and 3... So i'll look at why it is failing on travis and after we can merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10464733",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-10464733",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 10464733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDY0NzMz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-16T22:25:06Z",
    "updated_at": "2012-11-16T22:25:06Z",
    "author_association": "MEMBER",
    "body": "hum... travis build passes, but github say 'merge with caution'...why ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12071083",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12071083",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12071083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDcxMDgz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-09T22:45:10Z",
    "updated_at": "2013-01-09T22:45:10Z",
    "author_association": "MEMBER",
    "body": "@Carreau I would like to merge this soon, but I see one issue.  The command line script will be buried deep in the IPython package, so no one will know it is there and few will ever run it.  Do you think it would make sense to create a top level subcommand/application so users could do:\n\n```\nipython nbvalidate mynotebook.ipynb\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12071120",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12071120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12071120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDcxMTIw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-09T22:46:05Z",
    "updated_at": "2013-01-09T22:46:05Z",
    "author_association": "MEMBER",
    "body": "Also, the top level `nbvalidate` function should have a nice docstring as that is what most people would call.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12084617",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12084617",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12084617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDg0NjE3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T08:20:50Z",
    "updated_at": "2013-01-10T08:20:50Z",
    "author_association": "MEMBER",
    "body": "Short from my phone.\n\nThe problems are that:\nLibrary is not user friendly and throw unreadable traceback reason of why\nit is not valid.\nMost of our notebook are not.\nNotebook generate invalid one.\n\nI would suggest a 3 step approach.\n- use as internal tool test manually until all notebooks are fixed.\n- auto test with nose.\n- make the tool public/top level.\n\nHow does that sound?\n Le 9 janv. 2013 23:46, \"Brian E. Granger\" notifications@github.com a\nécrit :\n\n> Also, the top level nbvalidate function should have a nice docstring as\n> that is what most people would call.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2396#issuecomment-12071120.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12110538",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12110538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12110538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTEwNTM4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T18:13:41Z",
    "updated_at": "2013-01-10T18:13:41Z",
    "author_association": "MEMBER",
    "body": "Matthias,\n\nOn Thu, Jan 10, 2013 at 12:20 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Short from my phone.\n> \n> The problems are that:\n> Library is not user friendly and throw unreadable traceback reason of why\n> it is not valid.\n> Most of our notebook are not.\n> Notebook generate invalid one.\n> \n> What makes them invalid?  I would prefer if the notebooks we currently\n> use/generate are _defined_ to be the reference standard.  Or is it minor\n> things?\n> \n> I would suggest a 3 step approach.\n> - use as internal tool test manually until all notebooks are fixed.\n> - auto test with nose.\n> - make the tool public/top level.\n> \n> How does that sound?\n\nSounds good.  I think the first step would be to write a top -level\nnbvalidate function that returns True/False (valid or not) and then gives a\nlist of the things that were found to be invalid.  Then that can be used to\nbuild the other tools.  Do you want to do any more work on this PR, or\nshould we merge it and continue work on a later PR.\n\nCheers,\n\nBrian\n\n> Le 9 janv. 2013 23:46, \"Brian E. Granger\" notifications@github.com a\n> écrit :\n> \n> > Also, the top level nbvalidate function should have a nice docstring as\n> > that is what most people would call.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ipython/ipython/pull/2396#issuecomment-12071120>.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2396#issuecomment-12084617.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12113930",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12113930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12113930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTEzOTMw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T19:22:45Z",
    "updated_at": "2013-01-10T19:22:45Z",
    "author_association": "MEMBER",
    "body": "> What makes them invalid?  I would prefer if the notebooks we currently\n> use/generate are _defined_ to be the reference standard.  Or is it minor\n> things?\n\nAlmost nothing, some not converted to v3\nother just because prompt are '_' or ' '. \nIt would be better to have a 'real' value because right now '_' and ' ' are coupling format and interface as some frontend might not want to display '*' for busy and ' ' from not run. also this mean that the value of 'prompt_number' is either a string or a number... which I don't like. \n\n> and then gives a list of the things that were found to be invalid\n> This is a problem with current version of the library it can't tell you the issue specifically. \n\nIt make sens as it can't really now what you ment. Assuming you have a cell that have only 'input' and 'level' attribute, \nwhat error do you throw ? \"header cell can't have input\" or \"codecell can't have level attribute\" ? (it's a little more complicated than that in reality) So it just throw \"invalid object\".\n\n> Do you want to do any more work on this PR, or\n> should we merge it and continue work on a later PR.\n\nI would personally merge as is. All or Nothing is already quite good. We can build custom test as we feel the need.\n\nLet still wait until monday so I have some time to look at it again and see if I can upgrade (if needed) the embeded version of the lib I use. If I don't I can still upgrade this later. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12117831",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12117831",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12117831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTE3ODMx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T20:47:46Z",
    "updated_at": "2013-01-10T20:47:46Z",
    "author_association": "MEMBER",
    "body": "Matthias,\n\nOn Thu, Jan 10, 2013 at 11:22 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> What makes them invalid? I would prefer if the notebooks we currently\n> use/generate are _defined_ to be the reference standard. Or is it minor\n> things?\n> \n> Almost nothing, some not converted to v3\n> other just because prompt are '_' or ' '.\n> It would be better to have a 'real' value because right now '_' and ' '\n> are coupling format and interface as some frontend might not want to\n> display '*' for busy and ' ' from not run. also this mean that the value of\n> 'prompt_number' is either a string or a number... which I don't like.\n> \n> and then gives a list of the things that were found to be invalid\n> This is a problem with current version of the library it can't tell you\n> the issue specifically.\n> \n> It make sens as it can't really now what you ment. Assuming you have a\n> cell that have only 'input' and 'level' attribute,\n> what error do you throw ? \"header cell can't have input\" or \"codecell\n> can't have level attribute\" ? (it's a little more complicated than that in\n> reality) So it just throw \"invalid object\".\n\nOK I understand, probably the best we can do it to just return True or\nFalse then.\n\n>  Do you want to do any more work on this PR, or\n> should we merge it and continue work on a later PR.\n> \n> I would personally merge as is. All or Nothing is already quite good. We\n> can build custom test as we feel the need.\n> \n> Let still wait until monday so I have some time to look at it again and\n> see if I can upgrade (if needed) the embeded version of the lib I use. If I\n> don't I can still upgrade this later.\n\nOK I am fine with merging as is, but I will let you have a look and do the\nmerge yourself.  Great work!\n\n>  —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2396#issuecomment-12113930.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12233059",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12233059",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12233059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjMzMDU5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T18:44:44Z",
    "updated_at": "2013-01-14T18:44:44Z",
    "author_association": "MEMBER",
    "body": "@Carreau did you get a chance to look at this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12233262",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12233262",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12233262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjMzMjYy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T18:49:11Z",
    "updated_at": "2013-01-14T18:49:11Z",
    "author_association": "MEMBER",
    "body": "Not quite with all the PR around. \nIf you wish you can merge and open an issue assigned to me to upgrade this code.\nI do my best but moving this one forward before end of week will be tough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12234076",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12234076",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12234076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjM0MDc2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T19:06:47Z",
    "updated_at": "2013-01-14T19:06:47Z",
    "author_association": "MEMBER",
    "body": "Ok I will merge and create an issue.\n\nOn Mon, Jan 14, 2013 at 10:49 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Not quite with all the PR around.\n> If you wish you can merge and open an issue assigned to me to upgrade this\n> code.\n> I do my best but moving this one forward before end of week will be tough.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2396#issuecomment-12233262.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12234260",
    "html_url": "https://github.com/ipython/ipython/pull/2396#issuecomment-12234260",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2396",
    "id": 12234260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjM0MjYw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T19:10:27Z",
    "updated_at": "2013-01-14T19:10:27Z",
    "author_association": "MEMBER",
    "body": "Merging this.  I have created an issue #2786 to track further work.  Thanks for the code!\n"
  }
]
