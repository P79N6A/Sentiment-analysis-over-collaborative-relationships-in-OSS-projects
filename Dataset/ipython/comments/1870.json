[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6171854",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6171854",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6171854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE4NTQ=",
    "user": {
      "login": "Krastanov",
      "id": 705248,
      "node_id": "MDQ6VXNlcjcwNTI0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/705248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krastanov",
      "html_url": "https://github.com/Krastanov",
      "followers_url": "https://api.github.com/users/Krastanov/followers",
      "following_url": "https://api.github.com/users/Krastanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krastanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krastanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krastanov/subscriptions",
      "organizations_url": "https://api.github.com/users/Krastanov/orgs",
      "repos_url": "https://api.github.com/users/Krastanov/repos",
      "events_url": "https://api.github.com/users/Krastanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krastanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T09:27:57Z",
    "updated_at": "2012-06-07T09:27:57Z",
    "author_association": "NONE",
    "body": "I do not know well your codebase so my opinion is not worth much, however after looking at this it seems very nice and I will be very happy to see it merged.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6225053",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6225053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6225053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjUwNTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T01:03:38Z",
    "updated_at": "2012-06-10T01:03:38Z",
    "author_association": "MEMBER",
    "body": "@ctb, this may also come in handy for some of the issues you've brought up regarding more graceful handling of low-level i/o...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6225079",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6225079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6225079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjUwNzk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T01:10:18Z",
    "updated_at": "2012-06-10T01:10:18Z",
    "author_association": "MEMBER",
    "body": "I think the behavior you have now is good, as often people just want one of out/err.  But I also think a custom object with `.out` and `.err` attributes would be very convenient, especially if it also had a `__repr__` that did:\n\n```\nsys.stdout.write(self.out)\nsys.stderr.write(self.err)\nreturn None\n```\n\nthen simply typing the name of the object would nicely print the two fields without further fidgeting by the user.\n\nWhat do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6225323",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6225323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6225323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjUzMjM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T02:05:01Z",
    "updated_at": "2012-06-10T02:05:01Z",
    "author_association": "MEMBER",
    "body": "A `__repr__` method with side effects is rather against the principle of least surprise, I think. If the convenience of just typing `foo` is important, let's use the same autocall system we use for `exit`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233023",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6233023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6233023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMwMjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T23:35:03Z",
    "updated_at": "2012-06-10T23:35:03Z",
    "author_association": "MEMBER",
    "body": "I think @takluyver is right on this one.  A better approach would be perhaps a `.show()` method that does that on explicit request from the user.  Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233405",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6233405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6233405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM0MDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:35:12Z",
    "updated_at": "2012-06-11T00:35:12Z",
    "author_association": "MEMBER",
    "body": "I think adding `.show()`, and `__call__` that triggers that to the existing CapturedIO object, so autocall will (under the right circumstances) give you the result you want seems like a good balance.\n\nI will remove the out/err args, and just use a single optional positional arg for the name of the io object.\n\nI did this originally, but realized that ~99% of cases will only have stdout, and having `--out foo` store the _text_ removes one layer of attr access, but if you guys this this is preferable, I will go with that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233487",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6233487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6233487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM0ODc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:43:15Z",
    "updated_at": "2012-06-11T00:43:15Z",
    "author_association": "MEMBER",
    "body": "On Sun, Jun 10, 2012 at 5:35 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> I did this originally, but realized that ~99% of cases will only have stdout, and having `--out foo` store the _text_ removes one layer of attr access, but if you guys this this is preferable, I will go with that.\n\nMmh, how about a trivial subclass of str, which has a `.err` attribute\nand a `.show()` method?  The main object would just have stdout, but\nusers can check for err (None by default) or call `.show()` if they\nwant.\n\nSeems to cover the 99% use case just like you suggested, with an easy\nAPI for the extra 1%...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233527",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6233527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6233527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM1Mjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:50:51Z",
    "updated_at": "2012-06-11T00:50:51Z",
    "author_association": "MEMBER",
    "body": "An interesting idea, but perhaps too magical for something like this.  I think the simple obj.stdout/err / obj.show() model is very clear, and that clarity is probably more important than the convenience of a string subclass.  I also think in my first pass I overestimated the cost of that one attribute access.\n\nI did add `captured.__str__`, so `str(captured)` gives stdout.  That at least lets it be printed, etc. like a string.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233559",
    "html_url": "https://github.com/ipython/ipython/pull/1870#issuecomment-6233559",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1870",
    "id": 6233559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM1NTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:56:35Z",
    "updated_at": "2012-06-11T00:56:35Z",
    "author_association": "MEMBER",
    "body": "OK, good enough. Diminishing returns and all that, let's merge this puppy.  Thanks for the patience on review, and grat job as always!!  Merging.\n"
  }
]
