[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3852314",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3852314",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3852314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTIzMTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T17:33:27Z",
    "updated_at": "2012-02-07T17:33:27Z",
    "author_association": "MEMBER",
    "body": "Quick q: why do we need to load d3 ourselves?  I'm not too happy about enshrining a particular JS library right away... I mean, from what I've seen d3 is awesome, but I'd prefer if we could take a more hands-off approach there, and let various users and projects figure out which JS tools they end up using.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3852803",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3852803",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3852803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTI4MDM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T17:59:23Z",
    "updated_at": "2012-02-07T17:59:23Z",
    "author_association": "MEMBER",
    "body": "There are two aspects:\n\n1) It has to be hosted somewhere.  I don't know of any place that is\nhosting d3 in a CDN like manner.  This is why we need to include it in\nour source code.\n2) It has to be loaded using a script tag.  Doing that dynamically is\na bit of a pain.\n\nPoint 2 is an annoyance, point 1 has to be solved and the simplest way\nof doing that is to include it ourselves.  I will look around to see\nif I can find a CDN version of it.\n\nCheers,\n\nBrian\n\nOn Tue, Feb 7, 2012 at 9:33 AM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> Quick q: why do we need to load d3 ourselves? Â I'm not too happy about enshrining a particular JS library right away... I mean, from what I've seen d3 is awesome, but I'd prefer if we could take a more hands-off approach there, and let various users and projects figure out which JS tools they end up using.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3852314\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3852994",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3852994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3852994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTI5OTQ=",
    "user": {
      "login": "cschin",
      "id": 1320747,
      "node_id": "MDQ6VXNlcjEzMjA3NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1320747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cschin",
      "html_url": "https://github.com/cschin",
      "followers_url": "https://api.github.com/users/cschin/followers",
      "following_url": "https://api.github.com/users/cschin/following{/other_user}",
      "gists_url": "https://api.github.com/users/cschin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cschin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cschin/subscriptions",
      "organizations_url": "https://api.github.com/users/cschin/orgs",
      "repos_url": "https://api.github.com/users/cschin/repos",
      "events_url": "https://api.github.com/users/cschin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cschin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T18:10:49Z",
    "updated_at": "2012-02-07T18:10:49Z",
    "author_association": "NONE",
    "body": "I think it will be great to make it more general to be used other than d3, but it might be a good idea to start with one framework before it gets to complicated.  It will be nice that a codecell can run javascript, but there is a good chance that arbitrary can totally mess up the whole notebook DOM.  My earlier hacking uses IFRAME or open a new window to avoid that (e.g. https://github.com/cschin/IPython-Notebook---d3.js-mashup).  It seems to me we need some \"namespace\" to constrain about what and where the javascript can manipulate. I don't have a good solution except the IFRAME thing now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3853443",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3853443",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3853443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM0NDM=",
    "user": {
      "login": "wilsaj",
      "id": 303866,
      "node_id": "MDQ6VXNlcjMwMzg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/303866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsaj",
      "html_url": "https://github.com/wilsaj",
      "followers_url": "https://api.github.com/users/wilsaj/followers",
      "following_url": "https://api.github.com/users/wilsaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsaj/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsaj/orgs",
      "repos_url": "https://api.github.com/users/wilsaj/repos",
      "events_url": "https://api.github.com/users/wilsaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T18:35:37Z",
    "updated_at": "2012-02-07T18:43:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I saw this on the list and got really excited about it. \n\njQuery has a getScript method for dynamically loading a file which seems to work regarding issue 2.  With a sym link to an external d3 dir in frontend/html/notebook/static\n\n```\nfrom IPython.core.display import Javascript\nJavascript(\"$.getScript('/static/d3/d3.js')\")\n```\n\nworks as expected. For security reasons, you can't load local resources via \"file:///*\" urls but if you add a mechanism to expose additional static directories via the webserver then that would let people load any code they want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3854444",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3854444",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3854444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQ0NDQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T19:31:08Z",
    "updated_at": "2012-02-07T19:31:08Z",
    "author_association": "MEMBER",
    "body": "I wasn't aware of the getScript function of jquery.  That definitely\nhelps.  On the CDN side of things there is this CDN:\n\nhttp://www.cdnjs.com/\n\nThat allows the community to add new JS packages.  Someone could add\nd3.  I think something like that is probably best.\n\nOn the security side of things: it is impossible to prevent the JS\nfrom hacking/destroying/modifying/mucking with the DOM, kernel and\nnotebook server.  An attacker could easily write code that lists all\nof the users notebook and delete them all.  They could launch a\nmillion kernels and crash the server.  They could access all of the\nusers private data in the notebook directories.  There is simply no\nway of preventing these things if we want to enable this feature.\nPeriod.  In my mind, the usual warning applies: don't run code you\ndon't completely trust!\n\nOn Tue, Feb 7, 2012 at 10:35 AM, Andy Wilson\nreply@reply.github.com\nwrote:\n\n> I saw this on the list and got really excited about it.\n> \n> jQuery has a getScript method for dynamically loading a file which seems to work regarding issue 2. Â With a sym link to an external d3 dir in frontend/html/notebook/static\n> \n> Â  Â from IPython.core.display import Javascript\n> Â  Â Javascript(\"$.getScript('/static/d3/d3.js')\")\n> \n> works as expected. For security reasons, you can't load local resources via \"file:///*\" urls, but if you add a mechanism to expose additional static directories via the webserver, then that would let people load any code they want.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3853443\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3854801",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3854801",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3854801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQ4MDE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T19:48:33Z",
    "updated_at": "2012-02-07T19:48:33Z",
    "author_association": "MEMBER",
    "body": "This addresses issue #879\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3857011",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3857011",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3857011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTcwMTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T21:24:48Z",
    "updated_at": "2012-02-07T21:24:48Z",
    "author_association": "MEMBER",
    "body": "On Tue, Feb 7, 2012 at 11:31 AM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> On the security side of things: it is impossible to prevent the JS\n> from hacking/destroying/modifying/mucking with the DOM, kernel and\n> notebook server. Â An attacker could easily write code that lists all\n> of the users notebook and delete them all. Â They could launch a\n> million kernels and crash the server. Â They could access all of the\n> users private data in the notebook directories. Â There is simply no\n> way of preventing these things if we want to enable this feature.\n> Period. Â In my mind, the usual warning applies: don't run code you\n> don't completely trust!\n\nAnd that's OK: IPython is a full-blown, system-level shell with zero\nsandboxing, so there's no point pretending.  We can't keep ipython\nbeing what it is, while making it 'secure'  in any way.  A user has\nthe ability to run `os.system('rm -rf $HOME')`, and they can do the\nsame in JS via `IPython.kernel....execute(\"os.system...)`.  That's\njust reality, and there's no point in sugarcoating it or trying to\nmake it any different.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3857557",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3857557",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3857557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTc1NTc=",
    "user": {
      "login": "Sharpie",
      "id": 54181,
      "node_id": "MDQ6VXNlcjU0MTgx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/54181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sharpie",
      "html_url": "https://github.com/Sharpie",
      "followers_url": "https://api.github.com/users/Sharpie/followers",
      "following_url": "https://api.github.com/users/Sharpie/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sharpie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sharpie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sharpie/subscriptions",
      "organizations_url": "https://api.github.com/users/Sharpie/orgs",
      "repos_url": "https://api.github.com/users/Sharpie/repos",
      "events_url": "https://api.github.com/users/Sharpie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sharpie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T21:51:59Z",
    "updated_at": "2012-02-07T21:51:59Z",
    "author_association": "NONE",
    "body": "> 2) It has to be loaded using a script tag. Doing that dynamically is a bit of a pain.\n\nPerhaps [require.js](http://requirejs.org) could help with this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3859451",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3859451",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3859451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk0NTE=",
    "user": {
      "login": "wilsaj",
      "id": 303866,
      "node_id": "MDQ6VXNlcjMwMzg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/303866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsaj",
      "html_url": "https://github.com/wilsaj",
      "followers_url": "https://api.github.com/users/wilsaj/followers",
      "following_url": "https://api.github.com/users/wilsaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsaj/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsaj/orgs",
      "repos_url": "https://api.github.com/users/wilsaj/repos",
      "events_url": "https://api.github.com/users/wilsaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T23:43:24Z",
    "updated_at": "2012-02-07T23:43:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the security reasons you've outlined, executing any externally-linked javascript within the notebook is a bit dangerous. If malicious code ended up at the other end of any external link (or was injected along the way) that would be a **very** bad thing.\n\nAlso external links require internet connectivity, which can sometimes be a frustrating dependency.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3859616",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3859616",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3859616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk2MTY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T23:52:59Z",
    "updated_at": "2012-02-07T23:52:59Z",
    "author_association": "MEMBER",
    "body": "On Tue, Feb 7, 2012 at 3:43 PM, Andy Wilson\nreply@reply.github.com\nwrote:\n\n> For the security reasons you've outlined, executing any externally-linked javascript within the notebook is a bit dangerous. If malicious code ended up at the other end of any external link (or was injected along the way) that would be a **very** bad thing.\n\nWe are only executing JS code that come from the user's python code.\nThey have to trust that Python code to not do bad things.  We\ndefinitely would not execute externally-linked JS code.  Although if a\nuser wants, they can write python code, that write JS code that does\nthat.\n\nBut keep in mind: IPython is already like a big gun.  With regular\nIPython - not even the notebook - you can completely destroy your user\nfiles and DOS your system.  I could send you a simple Python script\nright now and tell you to do:\n\nIn [1]: %run danger.py\n\nand create this type of destruction.  Bottom line: you have to trust\nthe Python code you run in IPython.  This new feature in the IPython\nnotebook doesn't change that one bit.  The only additional risk the\nnotebook has is that someone could use it to get remote access to your\nsystem.  But if they do that, they surely don't need to execute JS\ncode to create trouble.\n\nCheers,\n\nBrian\n\n> Also external links require internet connectivity, which can sometimes be a frustrating dependency.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3859451\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3860269",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3860269",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3860269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAyNjk=",
    "user": {
      "login": "wilsaj",
      "id": 303866,
      "node_id": "MDQ6VXNlcjMwMzg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/303866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsaj",
      "html_url": "https://github.com/wilsaj",
      "followers_url": "https://api.github.com/users/wilsaj/followers",
      "following_url": "https://api.github.com/users/wilsaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsaj/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsaj/orgs",
      "repos_url": "https://api.github.com/users/wilsaj/repos",
      "events_url": "https://api.github.com/users/wilsaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T00:46:00Z",
    "updated_at": "2012-02-08T00:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We are only executing JS code that come from the user's python code.\n\nI'm thinking of CDN-hosted code. Maybe I'm misinterpreting the CDN thing, but in my mind that means a link to some .js files that are hosted on some server(s) somewhere.\n\nI agree that something like `<script src=\"/static/user/danger.js\">` doesn't change the nature of the trust relationship we users have with IPython, since it is just executing code that lives somewhere on our machines and that's equivalent to executing arbitrary python code that lives somewhere on our machines.\n\nBut `<script src=\"http://cdn.example.com/danger.js\">` is different because we don't have complete control - and therefore we shouldn't completely trust - what will get returned by that HTTP request. We now also have to trust whoever controls \"http://cdn.example.com/danger.js\" and that's a much bigger leap.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3861453",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3861453",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3861453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE0NTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T02:36:24Z",
    "updated_at": "2012-02-08T02:36:24Z",
    "author_association": "MEMBER",
    "body": "On Tue, Feb 7, 2012 at 4:46 PM, Andy Wilson\nreply@reply.github.com\nwrote:\n\n> > We are only executing JS code that come from the user's python code.\n> \n> I'm thinking of CDN-hosted code. Maybe I'm misinterpreting the CDN thing, but in my mind that means a link to some .js files that are hosted on some server(s) somewhere.\n\nYes, the CDN does introduce an extra indirection of trust.\n\n> I agree that something like `<script src=\"/static/user/danger.js\">` doesn't change the nature of the trust relationship we users have with IPython, since it is just executing code that lives somewhere on our machines and that's equivalent to executing arbitrary python code that lives somewhere on our machines.\n> \n> But `<script src=\"http://cdn.example.com/danger.js\">` is different because we don't have complete control - and therefore we shouldn't completely trust - what will get returned by that HTTP request. We now also have to trust whoever controls \"http://cdn.example.com/danger.js\" and that's a much bigger leap.\n\nBut _we_ (IPython) won't load code from the CDN.  The only way to load\nit is to put the calls inside some  `<script\nsrc=\"/static/user/danger.js\">` and do it dynamically.  Ultimately\nyou still have to trust the author of  `<script\nsrc=\"/static/user/danger.js\">` to do his/her homework on the CDN.\n\nI guess another way of saying it is this:  the CDN example makes it\nclear that the author of the scripts that we do load can do _anything_\nincluding loading code from other sites.  Their ability to do bad\nthings is not limited or sandboxed in any manner other than the OS\nlevel permissions the IPython kernel is running under.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3860269\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862362",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862362",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIzNjI=",
    "user": {
      "login": "wilsaj",
      "id": 303866,
      "node_id": "MDQ6VXNlcjMwMzg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/303866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsaj",
      "html_url": "https://github.com/wilsaj",
      "followers_url": "https://api.github.com/users/wilsaj/followers",
      "following_url": "https://api.github.com/users/wilsaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsaj/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsaj/orgs",
      "repos_url": "https://api.github.com/users/wilsaj/repos",
      "events_url": "https://api.github.com/users/wilsaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T04:33:40Z",
    "updated_at": "2012-02-08T04:33:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But _we_ (IPython) won't load code from the CDN.  The only way to load\n> it is to put the calls inside some  `<script\n> src=\"/static/user/danger.js\">` and do it dynamically.  Ultimately\n> you still have to trust the author of  `<script\n> src=\"/static/user/danger.js\">` to do his/her homework on the CDN.\n\nThis makes sense. I was concerned about a CDN-hosted copy of d3.js being included in the notebook by default.\n\nIf there is a way for users to specify their own js files then does d3 need to be included at all? If someone wants d3, then he/she can just make that part of their user js files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862384",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIzODQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T04:37:48Z",
    "updated_at": "2012-02-08T04:37:48Z",
    "author_association": "MEMBER",
    "body": "A user can definitely put any JS code they want into the following dir:\n\nIPython/frontend/html/notebook/static\n\nAnd refer to it in the code as:\n\n/static/...\n\nThe only thing that would change that is if they were using a\ndifferent base URL for the notebook.\n\nOn Tue, Feb 7, 2012 at 8:33 PM, Andy Wilson\nreply@reply.github.com\nwrote:\n\n> > But _we_ (IPython) won't load code from the CDN. Â The only way to load\n> > it is to put the calls inside some Â `<script\n> > src=\"/static/user/danger.js\">` and do it dynamically. Â Ultimately\n> > you still have to trust the author of Â `<script\n> > src=\"/static/user/danger.js\">` to do his/her homework on the CDN.\n> \n> This makes sense. I was concerned about a CDN-hosted copy of d3.js being included in the notebook by default.\n> \n> If there is a way for users to specify their own js files then does d3 need to be included at all? If someone wants d3, then he/she can just make that part of their user js files.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3862362\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862388",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862388",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIzODg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T04:38:13Z",
    "updated_at": "2012-02-08T04:38:13Z",
    "author_association": "MEMBER",
    "body": "Is this ready to merge.  I don't think we should include d3.\n\nOn Tue, Feb 7, 2012 at 8:37 PM, Brian Granger ellisonbg@gmail.com wrote:\n\n> A user can definitely put any JS code they want into the following dir:\n> \n> IPython/frontend/html/notebook/static\n> \n> And refer to it in the code as:\n> \n> /static/...\n> \n> The only thing that would change that is if they were using a\n> different base URL for the notebook.\n> \n> On Tue, Feb 7, 2012 at 8:33 PM, Andy Wilson\n> reply@reply.github.com\n> wrote:\n> \n> > > But _we_ (IPython) won't load code from the CDN. Â The only way to load\n> > > it is to put the calls inside some Â `<script\n> > > src=\"/static/user/danger.js\">` and do it dynamically. Â Ultimately\n> > > you still have to trust the author of Â `<script\n> > > src=\"/static/user/danger.js\">` to do his/her homework on the CDN.\n> > \n> > This makes sense. I was concerned about a CDN-hosted copy of d3.js being included in the notebook by default.\n> > \n> > If there is a way for users to specify their own js files then does d3 need to be included at all? If someone wants d3, then he/she can just make that part of their user js files.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ipython/ipython/pull/1386#issuecomment-3862362\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862464",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862464",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI0NjQ=",
    "user": {
      "login": "cschin",
      "id": 1320747,
      "node_id": "MDQ6VXNlcjEzMjA3NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1320747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cschin",
      "html_url": "https://github.com/cschin",
      "followers_url": "https://api.github.com/users/cschin/followers",
      "following_url": "https://api.github.com/users/cschin/following{/other_user}",
      "gists_url": "https://api.github.com/users/cschin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cschin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cschin/subscriptions",
      "organizations_url": "https://api.github.com/users/cschin/orgs",
      "repos_url": "https://api.github.com/users/cschin/repos",
      "events_url": "https://api.github.com/users/cschin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cschin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T04:47:17Z",
    "updated_at": "2012-02-08T04:47:17Z",
    "author_association": "NONE",
    "body": "I think it would be fine if a user want to put any javascript lib, he/she can do himself/herself.  d3.js is just one of a lot possibles interesting js libraries.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862498",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI0OTg=",
    "user": {
      "login": "cschin",
      "id": 1320747,
      "node_id": "MDQ6VXNlcjEzMjA3NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1320747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cschin",
      "html_url": "https://github.com/cschin",
      "followers_url": "https://api.github.com/users/cschin/followers",
      "following_url": "https://api.github.com/users/cschin/following{/other_user}",
      "gists_url": "https://api.github.com/users/cschin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cschin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cschin/subscriptions",
      "organizations_url": "https://api.github.com/users/cschin/orgs",
      "repos_url": "https://api.github.com/users/cschin/repos",
      "events_url": "https://api.github.com/users/cschin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cschin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T04:50:03Z",
    "updated_at": "2012-02-08T04:50:03Z",
    "author_association": "NONE",
    "body": "In the meantime, does it make sense to have a new window just for displaying dynamic content? I am looking into the handlers.py to see a potential way to do that within ipython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862719",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI3MTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T05:24:13Z",
    "updated_at": "2012-02-08T05:24:13Z",
    "author_association": "MEMBER",
    "body": "The dynamic content should definitely be inline as it is now - at the\nsame time, the JS code _can_ put content elsewhere if it wants to.\nBut the usual browser constraints would prevent putting it in other\nwindows (no pop-ups allowed).\n\nOn Tue, Feb 7, 2012 at 8:50 PM, Jason Chin\nreply@reply.github.com\nwrote:\n\n> In the meantime, does it make sense to have a new window just for displaying dynamic content? I am looking into the handlers.py to see a potential way to do that within ipython.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3862498\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862792",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862792",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI3OTI=",
    "user": {
      "login": "cschin",
      "id": 1320747,
      "node_id": "MDQ6VXNlcjEzMjA3NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1320747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cschin",
      "html_url": "https://github.com/cschin",
      "followers_url": "https://api.github.com/users/cschin/followers",
      "following_url": "https://api.github.com/users/cschin/following{/other_user}",
      "gists_url": "https://api.github.com/users/cschin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cschin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cschin/subscriptions",
      "organizations_url": "https://api.github.com/users/cschin/orgs",
      "repos_url": "https://api.github.com/users/cschin/repos",
      "events_url": "https://api.github.com/users/cschin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cschin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T05:34:20Z",
    "updated_at": "2012-02-08T05:34:20Z",
    "author_association": "NONE",
    "body": "good point. I forget we can use JS to put the element any place.  My original though it more like to open a new notebook, but it has only output cell for dynamic content. This will allow developing some dynamic visualization easier.    \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862869",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3862869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3862869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI4Njk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T05:45:14Z",
    "updated_at": "2012-02-08T05:45:14Z",
    "author_association": "MEMBER",
    "body": "We really want the dynamic content on the same page - all of the\nconnections to the server - mainly the kernel are per page.  We want\nthe dynamic content to be able to reuse all of that so things need to\nbe on page.\n\nOn Tue, Feb 7, 2012 at 9:34 PM, Jason Chin\nreply@reply.github.com\nwrote:\n\n> good point. I forget we can use JS to put the element any place. Â My original though it more like to open a new notebook, but it has only output cell for dynamic content. This will allow developing some dynamic visualization easier.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1386#issuecomment-3862792\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3864215",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3864215",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3864215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQyMTU=",
    "user": {
      "login": "cschin",
      "id": 1320747,
      "node_id": "MDQ6VXNlcjEzMjA3NDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1320747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cschin",
      "html_url": "https://github.com/cschin",
      "followers_url": "https://api.github.com/users/cschin/followers",
      "following_url": "https://api.github.com/users/cschin/following{/other_user}",
      "gists_url": "https://api.github.com/users/cschin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cschin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cschin/subscriptions",
      "organizations_url": "https://api.github.com/users/cschin/orgs",
      "repos_url": "https://api.github.com/users/cschin/repos",
      "events_url": "https://api.github.com/users/cschin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cschin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T08:32:00Z",
    "updated_at": "2012-02-09T02:48:53Z",
    "author_association": "NONE",
    "body": "Here is a screen shot using the \"Javascript\" function:\n\n<img src=\"https://github.com/cschin/IPython-Notebook---d3.js-mashup/raw/master/images/example3_d3.jpg\" /img>\n\nfrom [this notebook](http://bit.ly/wu2Ige).  I also have an experimental one:\n\n<img src=\"https://github.com/cschin/IPython-Notebook---d3.js-mashup/raw/master/images/example2_d3.jpg\" /img>\n\nfrom [this notebook](http://bit.ly/ywc68G) where I move the zmq / websocket bridge that sends javascript to a iframe into the handler.py. No extra server is needed. One advantage of this setup is that one can control the animations by python code and it could be used to make two way communication too.) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3881014",
    "html_url": "https://github.com/ipython/ipython/pull/1386#issuecomment-3881014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1386",
    "id": 3881014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODEwMTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-09T02:49:35Z",
    "updated_at": "2012-02-09T02:49:35Z",
    "author_association": "MEMBER",
    "body": "Thanks for those, @cschin, I just edited your post to inline the figs so the post would read better, left content unchanged.\n"
  }
]
