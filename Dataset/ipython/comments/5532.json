[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39648054",
    "html_url": "https://github.com/ipython/ipython/issues/5532#issuecomment-39648054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5532",
    "id": 39648054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQ4MDU0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-05T19:14:38Z",
    "updated_at": "2014-04-05T19:14:38Z",
    "author_association": "MEMBER",
    "body": "Thanks, we'll keep an eye on that issue in Caja. I don't see a good reason why non-js data URIs are excluded, assuming they are sufficiently distinguishable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39655063",
    "html_url": "https://github.com/ipython/ipython/issues/5532#issuecomment-39655063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5532",
    "id": 39655063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU1MDYz",
    "user": {
      "login": "philippjfr",
      "id": 1550771,
      "node_id": "MDQ6VXNlcjE1NTA3NzE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1550771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philippjfr",
      "html_url": "https://github.com/philippjfr",
      "followers_url": "https://api.github.com/users/philippjfr/followers",
      "following_url": "https://api.github.com/users/philippjfr/following{/other_user}",
      "gists_url": "https://api.github.com/users/philippjfr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philippjfr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philippjfr/subscriptions",
      "organizations_url": "https://api.github.com/users/philippjfr/orgs",
      "repos_url": "https://api.github.com/users/philippjfr/repos",
      "events_url": "https://api.github.com/users/philippjfr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philippjfr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-06T00:23:23Z",
    "updated_at": "2014-04-06T00:24:20Z",
    "author_association": "NONE",
    "body": "I should have mentioned that SVG is also completely unsupported by Google Caja [(see this issue)](https://code.google.com/p/google-caja/issues/detail?id=1799). \n\nI just commented out the Caja sanitization in security.js and everything seems to work so would it be possible to provide a flag in the IPython notebook profile to disable it, at least until they address these issues?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39655285",
    "html_url": "https://github.com/ipython/ipython/issues/5532#issuecomment-39655285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5532",
    "id": 39655285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU1Mjg1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-06T00:36:35Z",
    "updated_at": "2014-04-06T00:36:35Z",
    "author_association": "MEMBER",
    "body": "You can disable sanitization in custom.js with:\n\n``` javascript\nIPython.security.sanitize_html = function (html) { return html; };\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39667021",
    "html_url": "https://github.com/ipython/ipython/issues/5532#issuecomment-39667021",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5532",
    "id": 39667021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY3MDIx",
    "user": {
      "login": "jlstevens",
      "id": 890576,
      "node_id": "MDQ6VXNlcjg5MDU3Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlstevens",
      "html_url": "https://github.com/jlstevens",
      "followers_url": "https://api.github.com/users/jlstevens/followers",
      "following_url": "https://api.github.com/users/jlstevens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlstevens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlstevens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlstevens/subscriptions",
      "organizations_url": "https://api.github.com/users/jlstevens/orgs",
      "repos_url": "https://api.github.com/users/jlstevens/repos",
      "events_url": "https://api.github.com/users/jlstevens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlstevens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-06T12:24:51Z",
    "updated_at": "2014-04-06T12:24:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is good to hear that there is a reasonable way to disable HTML sanitization. To better understand the problem, I've gone through all my notebooks to check for inline HTML and find out what else might now be broken by default.\n\nThe release notes state that \"HTML and Javascript in Markdown are never trusted\". This is a little misleading as some HTML elements do seem to work - thankfully! The Twitter Bootstrap tags still work (e.g. various alerts, description lists) as do anchor tags (which I've needed to link to headings containing spaces).\n\nAs Markdown is only appropriate for very simple formatting tasks, it is important that these additions to the basic Markdown syntax continue to work. I'm sure I am not the only IPython user that relies on these extra tags to make Markdown cells more useful.\n\nInline base64 encoded raster images and SVG definitely do not work with sanitization enabled. Even if data URIs become supported by Google Caja, this still won't allow for inline SVG images. The %%SVG magic would be viable if you could just hide the contents of the code cell - there is way too much content in a typical SVG to always be displaying the raw contents. Is this feature still planned for a future release?\n\nAs notebooks containing inline SVG (which include base64 rasters) have already been committed to the [Topographica](http://www.topographica.org) project, we will have to supply a custom.js file  to work around this issue (should we plan to support IPython 2.0). We will probably be forced to disable HTML sanitization until we find a sensible, alternative approach that allows inlining of SVGs.\n\nThank you.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39677582",
    "html_url": "https://github.com/ipython/ipython/issues/5532#issuecomment-39677582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5532",
    "id": 39677582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc3NTgy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-06T19:21:56Z",
    "updated_at": "2014-04-06T19:22:09Z",
    "author_association": "MEMBER",
    "body": "> The release notes state that \"HTML and Javascript in Markdown are never trusted\". This is a little misleading...\n\nThe relevant bullet points are:\n- untrusted HTML is sanitized\n- HTML in markdown is not trusted\n\nThat means that the HTML in markdown is _sanitized_, not that it is entirely removed. HTML that Caja considers safe will work just fine. I will try to add some clarification that sanitization != removal to the doc.\n"
  }
]
