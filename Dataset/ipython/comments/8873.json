[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146131851",
    "html_url": "https://github.com/ipython/ipython/issues/8873#issuecomment-146131851",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8873",
    "id": 146131851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjEzMTg1MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T09:34:19Z",
    "updated_at": "2015-10-07T09:34:19Z",
    "author_association": "MEMBER",
    "body": "> when I made sure of the first one, only the ipython version fitting to the version of the active environment is on the path\n\nThis is exactly the goal. You activate the environment of the IPython kernel you want to install, then run `ipython kernelspec install-self` in that environment.\n\n> On a side note, I am wondering if it's not possible to include this step into the conda install routine? \n\nIt is not, because conda only ever touches files in one env at a time. If IPython is installed in one env, it can only put its kernelspec files into that same env. This defeats the purpose, because then the kernelspec isn't accessible to Jupyter in another env.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146181362",
    "html_url": "https://github.com/ipython/ipython/issues/8873#issuecomment-146181362",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8873",
    "id": 146181362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjE4MTM2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T12:28:01Z",
    "updated_at": "2015-10-07T12:28:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk is the documentation not out of date? Looking back at https://github.com/jupyter/jupyter/issues/23, it seems that `ipython kernelspec install-self` is deprecated, and that you should use `ipython kernel install` instead (https://github.com/ipython/ipykernel/pull/43)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146185652",
    "html_url": "https://github.com/ipython/ipython/issues/8873#issuecomment-146185652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8873",
    "id": 146185652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjE4NTY1Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T12:45:59Z",
    "updated_at": "2015-10-07T12:45:59Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche yes, `ipython kernel install` is the way forward. But it's only been out for an hour or so, so it will take a bit for the docs to be updated. See #8877. We will probably try to keep `ipython kernelspec install-self` working, for backward-compatibility reasons.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146186869",
    "html_url": "https://github.com/ipython/ipython/issues/8873#issuecomment-146186869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8873",
    "id": 146186869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjE4Njg2OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T12:49:45Z",
    "updated_at": "2015-10-07T12:49:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk OK, I was a bit quick :-) (I looked at the dev docs, and since it was already some time in master ..) \nNice explanation in #8877!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146268632",
    "html_url": "https://github.com/ipython/ipython/issues/8873#issuecomment-146268632",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8873",
    "id": 146268632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI2ODYzMg==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T17:23:27Z",
    "updated_at": "2015-10-07T17:23:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It is not, because conda only ever touches files in one env at a time. If IPython is installed in one env, it can only put its kernelspec files into that same env. This defeats the purpose, because then the kernelspec isn't accessible to Jupyter in another env.\n\nI didn't mean the conda install to work across environments, I meant to have it install itself only the current kernel for the current environment. I did a fresh install of miniconda yesterday and was faced with a kernel not found error, even so every required package was installed. Had to execute the lines from the docs to have the kernel found. Would be nice if that at least per environment would work out of the box.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146458847",
    "html_url": "https://github.com/ipython/ipython/issues/8873#issuecomment-146458847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8873",
    "id": 146458847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQ1ODg0Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T08:37:10Z",
    "updated_at": "2015-10-08T08:37:10Z",
    "author_association": "MEMBER",
    "body": "Ah, yes. It makes sense for the conda ipykernel package to include its kernelspec in the env. That won't solve every problem (it will still be lower priority than `--user` kernels), but it will at least be present.\n"
  }
]
