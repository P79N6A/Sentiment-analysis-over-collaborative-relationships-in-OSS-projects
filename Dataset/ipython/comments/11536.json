[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/455622627",
    "html_url": "https://github.com/ipython/ipython/issues/11536#issuecomment-455622627",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11536",
    "id": 455622627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTYyMjYyNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T17:20:34Z",
    "updated_at": "2019-01-18T17:20:34Z",
    "author_association": "MEMBER",
    "body": "After you `fork()`, you have two IPython processes which try to write your command to the same entry in the history database. It notices the clash, rejects whichever one was second, so that one starts a new history session.\r\n\r\n`fork()` is tricky to use directly; unless you're sure of what you're doing with it, it's often best to use a higher-level library like `multiprocessing` or `subprocess`."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/455790110",
    "html_url": "https://github.com/ipython/ipython/issues/11536#issuecomment-455790110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11536",
    "id": 455790110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc5MDExMA==",
    "user": {
      "login": "krassowski",
      "id": 5832902,
      "node_id": "MDQ6VXNlcjU4MzI5MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5832902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krassowski",
      "html_url": "https://github.com/krassowski",
      "followers_url": "https://api.github.com/users/krassowski/followers",
      "following_url": "https://api.github.com/users/krassowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/krassowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krassowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krassowski/subscriptions",
      "organizations_url": "https://api.github.com/users/krassowski/orgs",
      "repos_url": "https://api.github.com/users/krassowski/repos",
      "events_url": "https://api.github.com/users/krassowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krassowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-19T15:34:42Z",
    "updated_at": "2019-01-19T15:34:42Z",
    "author_association": "NONE",
    "body": "I got this message after interrupting `multiprocessing` (there was also an error of autoreload just before) in JupyterLab. The error persists - with each attempt to execute a command the session number increases but it's still there (and apparently my commands are not executed). Is there a way to restore variables from the kernel in such a situation?"
  }
]
