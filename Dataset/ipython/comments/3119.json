[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15735058",
    "html_url": "https://github.com/ipython/ipython/pull/3119#issuecomment-15735058",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3119",
    "id": 15735058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM1MDU4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-01T20:23:55Z",
    "updated_at": "2013-04-01T20:23:55Z",
    "author_association": "MEMBER",
    "body": "I don't think stuffing the implicit cd code into `run_cell` and `run_code`, which are the absolute heart of IPython, is the way to go. This should be implemented as an input transformer that turns a bare directory path into a line like `get_ipython().run_line_magic('cd foo')`. Unfortunately, the input transformer stuff is in kind of an uncertain state until #2447 is landed. I'm also not sure if this is something we want in the main codebase - it might be better living as an extension ([extension docs](http://ipython.org/ipython-doc/dev/config/extensions/), [extension index](http://wiki.ipython.org/Extensions_Index)\n\nIf you're doing anything with tab completion, you should also be aware of [IPEP 11](https://github.com/ipython/ipython/wiki/IPEP-11%3A-Tab-Completion-System-Refactor).\n\nThis stuff would also definitely need tests to accompany it - have a look in `IPython.core.tests` for examples.\n\nMore generally, I'd encourage you to do things like this as separate pull requests which we can consider individually - there are really three distinct proposals here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15739089",
    "html_url": "https://github.com/ipython/ipython/pull/3119#issuecomment-15739089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3119",
    "id": 15739089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM5MDg5",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-01T21:40:50Z",
    "updated_at": "2013-04-01T21:40:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, please split into three pull requests, one for each proposal.  I'll provide feedback on each individually once that is done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15757261",
    "html_url": "https://github.com/ipython/ipython/pull/3119#issuecomment-15757261",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3119",
    "id": 15757261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU3MjYx",
    "user": {
      "login": "boxed",
      "id": 332428,
      "node_id": "MDQ6VXNlcjMzMjQyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boxed",
      "html_url": "https://github.com/boxed",
      "followers_url": "https://api.github.com/users/boxed/followers",
      "following_url": "https://api.github.com/users/boxed/following{/other_user}",
      "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boxed/subscriptions",
      "organizations_url": "https://api.github.com/users/boxed/orgs",
      "repos_url": "https://api.github.com/users/boxed/repos",
      "events_url": "https://api.github.com/users/boxed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boxed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-02T06:15:33Z",
    "updated_at": "2013-04-02T06:15:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "From my fiddling around it seemed to me that I can't get implicit cd to work because there's code, as you say, in the heart of ipython that throws a syntax error on \"..\", which is why I had to put the code where I did.\n\nI will look into separating these fixes into separate pull requests and writing tests where applicable.\n\nThanks for the feedback!\n"
  }
]
