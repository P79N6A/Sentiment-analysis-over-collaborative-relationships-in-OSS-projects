[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7506206",
    "html_url": "https://github.com/ipython/ipython/issues/2215#issuecomment-7506206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2215",
    "id": 7506206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDYyMDY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-04T23:03:47Z",
    "updated_at": "2012-08-04T23:03:47Z",
    "author_association": "MEMBER",
    "body": "I don't think it's possible for `_wait_for_outputs` to be called if `_ready` is not set, since it is inside a `if self._ready:` block.\n\nCan you post code to reproduce this?  I have seen it a while ago, but can't reproduce it well enough to actually test and find a fix.\n\nI agree that relaying the timeout would be a decent band-aid, but there's a more serious bug causing this that I would like to actually find and fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7577243",
    "html_url": "https://github.com/ipython/ipython/issues/2215#issuecomment-7577243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2215",
    "id": 7577243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzcyNDM=",
    "user": {
      "login": "cgevans",
      "id": 2054509,
      "node_id": "MDQ6VXNlcjIwNTQ1MDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2054509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgevans",
      "html_url": "https://github.com/cgevans",
      "followers_url": "https://api.github.com/users/cgevans/followers",
      "following_url": "https://api.github.com/users/cgevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgevans/subscriptions",
      "organizations_url": "https://api.github.com/users/cgevans/orgs",
      "repos_url": "https://api.github.com/users/cgevans/repos",
      "events_url": "https://api.github.com/users/cgevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-08T07:49:40Z",
    "updated_at": "2012-08-08T08:53:32Z",
    "author_association": "NONE",
    "body": "So here's the problem with reproducing this. I have minimal code right now that will reproduce it _in my configuration_:\n\n``` python\nfrom IPython.parallel import Client\n\nrc = Client()\n\nlv = rc.load_balanced_view()\n\nimport time\n\ndef stupidfunction(r):\n    import numpy.random\n    return numpy.random.randn(100) # You may need to increase this to see the problem.\n\na = lv.map_async(stupidfunction,zeros(10))\n\ntime.sleep(0.5) # Run wait too quickly and the problem won't have time to arise.\n\na.wait(0)\n```\n\nHowever, this _doesn't_ cause the problem in a local cluster, as I don't think the problem is really noticeable in that case. I'm running my client at home through SSH through a VPN to the controller at work, which is then connected to engines through fast SSH; the link is therefore not incredibly fast. I've not yet tried it in my office, which has a 100Mb line to the controller, but is still through SSH. If I run this with a local controller and engines, it's fine. This is why I believe it's a problem with results being transferred to either the controller or the client, probably the client.\n\nActually, I've now also checked with the engines running on the same machine as the controller, and the problem still occurs, so it seems that the client-controller connection is the culprit. From what I can tell, self._ready _is_ set to True by self._client.wait, but 'outputs_ready' in self._metadata are still False, which causes the loop in _wait_for_outputs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7578861",
    "html_url": "https://github.com/ipython/ipython/issues/2215#issuecomment-7578861",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2215",
    "id": 7578861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Nzg4NjE=",
    "user": {
      "login": "cgevans",
      "id": 2054509,
      "node_id": "MDQ6VXNlcjIwNTQ1MDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2054509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgevans",
      "html_url": "https://github.com/cgevans",
      "followers_url": "https://api.github.com/users/cgevans/followers",
      "following_url": "https://api.github.com/users/cgevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgevans/subscriptions",
      "organizations_url": "https://api.github.com/users/cgevans/orgs",
      "repos_url": "https://api.github.com/users/cgevans/repos",
      "events_url": "https://api.github.com/users/cgevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-08T09:16:21Z",
    "updated_at": "2012-08-08T09:16:21Z",
    "author_association": "NONE",
    "body": "I can also confirm, actually, that this does not happen now that #2255 has been merged, but I'm not sure if that's just because of the timeout changes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7593262",
    "html_url": "https://github.com/ipython/ipython/issues/2215#issuecomment-7593262",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2215",
    "id": 7593262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTMyNjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-08T18:47:04Z",
    "updated_at": "2012-08-08T18:47:04Z",
    "author_association": "MEMBER",
    "body": "Thanks for the test case. It should behave the same as before if you do wait(10), but I will also try to reproduce the underlying issue myself by rolling back the fix.\n\nYou can set client.debug=True to see all messages as they come through.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20454993",
    "html_url": "https://github.com/ipython/ipython/issues/2215#issuecomment-20454993",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2215",
    "id": 20454993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDU0OTkz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T01:37:39Z",
    "updated_at": "2013-07-04T01:37:39Z",
    "author_association": "MEMBER",
    "body": "closed by #2255.\n"
  }
]
