[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236073",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-236073",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 236073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA3Mw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:26:21Z",
    "updated_at": "2010-05-10T09:26:21Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Michele Mattioni, on 2010-01-18 11:54:43.261168+00:00 ]\n\nExpected:\n- The window should respond to the command (zoom, rotate...) \n  and not freeze.\n- The prompt should be back and be responsive.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236074",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-236074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 236074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA3NA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:26:21Z",
    "updated_at": "2010-05-10T09:26:21Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Michele Mattioni, on 2010-01-18 12:02:03.250363+00:00 ]\n\nOk, this is weird.\n\nSometimes the window freeze, sometimes respond to the command (like zoom and rotate).\n\nHowever I can't get the prompt back and ready to insert a new command.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236075",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-236075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 236075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA3NQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:26:22Z",
    "updated_at": "2010-05-10T09:26:22Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Brian Granger, on 2010-01-18 16:42:52+00:00 ]\n\nMayavi and pylab are probably doing some funny things with the event\nloop that is messing up\nthings.  It will probably require someone looking through the\nMayavi/pylab/traits code carefully\nto look for these things.\n\nCheers,\n\nBrian\n\nOn Mon, Jan 18, 2010 at 4:02 AM, Michele Mattioni mattions@gmail.com wrote:\n\n> Ok, this is weird.\n> \n> Sometimes the window freeze, sometimes respond to the command (like zoom\n> and rotate).\n> \n> However I can't get the prompt back and ready to insert a new command.\n> \n> ## \n> \n> Ensure %gui qt works with new Mayavi and pylab\n> https://bugs.launchpad.net/bugs/508953\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> Right now mayavi/qt is only on SVN, but eventually we need to ensure that %gui qt allows mayavi/qt and pylab/qt to work together.\n> \n> For more details:\n> http://mail.scipy.org/pipermail/ipython-dev/2010-January/005728.html\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236076",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-236076",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 236076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA3Ng==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:26:23Z",
    "updated_at": "2010-05-10T09:26:23Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Fernando Perez, on 2010-01-18 23:16:28.353993+00:00 ]\n\nThe attached script can be run in ipython trunk-dev, and shows the problem:\n\nmaqroll[Desktop]> ip\nPython 2.6.4 (r264:75706, Dec  7 2009, 18:45:15) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.11.bzr.r1346 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: gui -a qt\nOut[1]: <PyQt4.QtGui.QApplication object at 0x93086ac>\n\nIn [2]: run qt_embedding.py \n\nButton pushed\n\n### Terminal is frozen here, until we close the mayavi window.\n\nIn contrast, if we run the same script in 0.10 with -q4thread:\n\n(ipython-0.10)maqroll[Desktop]> ip -q4thread\nPython 2.6.2 (release26-maint, Apr 19 2009, 01:56:41) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.10 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: run qt_embedding.py \n\nIn [2]: 1+1  # terminal accepts input though window remains open\nOut[2]: 2\n\nIn [3]: Button pushed\n\nThanks to Gael for the feedback to fix the api calls in the example script.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/240868",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-240868",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 240868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg2OA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-05-13T22:09:30Z",
    "updated_at": "2010-05-13T22:09:30Z",
    "author_association": "MEMBER",
    "body": "I think this is related to the larger issues we are having with Traits and IPython's new even t loop stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/908689",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-908689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 908689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODY4OQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T17:37:35Z",
    "updated_at": "2011-03-23T17:37:35Z",
    "author_association": "MEMBER",
    "body": "The example script is at (since we can't attach anything on gh yet):\n\nhttps://bugs.launchpad.net/ipython/+bug/508953/+attachment/1107754/+files/qt_embedding.py\n\nThat script still blocks, but I suspect that it's a matter of updating the script to use the event loop integration code we now have.  I'm going to put Brian and myself on this one so we sort it out, because what we probably need is simply to finish _documenting_ how this must be done.\n\nNormal use of mayavi via mlab functions now works fine with Qt, including multiple figure, matplotlib integration, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/908728",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-908728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 908728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODcyOA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T17:44:55Z",
    "updated_at": "2011-03-23T17:44:55Z",
    "author_association": "MEMBER",
    "body": "So in the end, this may be either bug or docs, but I want to discuss it with Brian before making the final call.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/978713",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-978713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 978713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODcxMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T02:20:11Z",
    "updated_at": "2011-04-10T02:20:11Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg, I'll take care of this one.  It's pretty clear that for 0.11 we'll have traits/mayavi/mpl support but not (and perhaps never) generic gui support.  So I think code-wise we're done, and what's left to be done is documentation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/991604",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-991604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 991604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MTYwNA==",
    "user": {
      "login": "unidesigner",
      "id": 136799,
      "node_id": "MDQ6VXNlcjEzNjc5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/136799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unidesigner",
      "html_url": "https://github.com/unidesigner",
      "followers_url": "https://api.github.com/users/unidesigner/followers",
      "following_url": "https://api.github.com/users/unidesigner/following{/other_user}",
      "gists_url": "https://api.github.com/users/unidesigner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unidesigner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unidesigner/subscriptions",
      "organizations_url": "https://api.github.com/users/unidesigner/orgs",
      "repos_url": "https://api.github.com/users/unidesigner/repos",
      "events_url": "https://api.github.com/users/unidesigner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unidesigner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-12T19:42:18Z",
    "updated_at": "2011-04-12T19:42:18Z",
    "author_association": "NONE",
    "body": "i'm looking forward to this piece of documentation - as i would like to understand how a non-blocking ipython behavior with a pyglet window(s) could be achieved.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/992367",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-992367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 992367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjM2Nw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-12T21:58:05Z",
    "updated_at": "2011-04-12T21:58:05Z",
    "author_association": "MEMBER",
    "body": "I won't have time to update the docs right away, but you may want to look at this file:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/guisupport.py\n\nThe basic idea is to initialize any singleton objects and the event loop only once.  But the gui event loop will need to be integrated with python's inputhook, here's the integration we have so far:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/inputhook.py\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/inputhookgtk.py\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/inputhookwx.py\n\nit may be necessary to write similar support for pyglet.  We'd welcome a contribution on this front!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/995890",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-995890",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 995890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTg5MA==",
    "user": {
      "login": "unidesigner",
      "id": 136799,
      "node_id": "MDQ6VXNlcjEzNjc5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/136799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unidesigner",
      "html_url": "https://github.com/unidesigner",
      "followers_url": "https://api.github.com/users/unidesigner/followers",
      "following_url": "https://api.github.com/users/unidesigner/following{/other_user}",
      "gists_url": "https://api.github.com/users/unidesigner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unidesigner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unidesigner/subscriptions",
      "organizations_url": "https://api.github.com/users/unidesigner/orgs",
      "repos_url": "https://api.github.com/users/unidesigner/repos",
      "events_url": "https://api.github.com/users/unidesigner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unidesigner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-13T15:05:16Z",
    "updated_at": "2011-08-26T08:37:16Z",
    "author_association": "NONE",
    "body": "Thanks for the links. Strange enough, it already seems to work for our fos project http://fos.me - we use pyglet and some of sympy logic. Running an example script opens the window with the OpenGL context, the Ipython shell stays interactive and it possible to add and remove actors (without calling ipython with -q4thread or -wxthread).\n\n==EDIT==\nFor fos, we managed to use pyglet's OpenGL bindings through Pyside with the new Ipython 0.11 threading model. In case somebody is interested, the code is here: https://github.com/fos/fos-pyside/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/996993",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-996993",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 996993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5Njk5Mw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-13T18:33:02Z",
    "updated_at": "2011-04-13T18:33:02Z",
    "author_association": "MEMBER",
    "body": "OK, thanks for letting me know.  Please post any additional (good or\nbad) info you find out about this, so we can mention it when we update\nthe docs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1255696",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1255696",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1255696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTU2OTY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-29T01:02:37Z",
    "updated_at": "2011-05-29T01:15:27Z",
    "author_association": "MEMBER",
    "body": "Hey @rkern, @epatters, I think I could use some help on this one from you guys... I can get the docs sorted out, all matplotlib support seems fine, and mayavi can also be run, but I'm getting a weird problem that I have no clue what to do with...  The following code can be used to test and illustrate, and shows the issue with just traits so we know it has nothing to do with mayavi/vtk/opengl/etc:\n\n<pre>\n\"\"\"Tests for Traits GUI behavior\n\n%run simpletraits [backend]\n\nwhere the optional backend can be one of:  qt4, wx.\n\nThis code is crashing with Qt but OK with WX...\n\"\"\"\nfrom __future__ import print_function\n\nimport sys\nimport os\nimport time\n\nip = get_ipython()\n\ntry:\n    toolkit = sys.argv[1]\nexcept IndexError:\n    toolkit = 'qt4'\n\napp = ip.magic('gui %s' % toolkit)\n\nprint(\"using toolkit:\", toolkit)\nos.environ.pop('ETS_TOOLKIT', None)\n\nfrom enthought.etsconfig.api import ETSConfig\nETSConfig.toolkit = toolkit\n\nfrom enthought.traits.api import HasTraits, Float\nclass X(HasTraits):\n    value = Float(0)\n\nx = X()\nx.edit_traits()\n\nprint(\"Sleeping for 2 seconds, hit Ctrl-C or wait until prompt returns\")\nsys.stdout.flush()\ntime.sleep(2)\n</pre>\n\n\nWith the WX backend, you can run this as many times as you want and it's fine, and you can interrupt the last time.sleep() call (or a manually made one) and it behaves OK (IPython started without any command-line flags at all, ETS_TOOLKIT not set at all):\n\n<pre>\nIn [1]: run simpletraits.py wx\nusing toolkit: wx\nSleeping for 2 seconds, hit Ctrl-C or wait until prompt returns\n^C---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n/home/fperez/ipython/test/simpletraits.py in <module>()\n     36 print(\"Sleeping for 2 seconds, hit Ctrl-C or wait until prompt returns\")\n     37 sys.stdout.flush()\n---> 38 time.sleep(2)\n\nKeyboardInterrupt: \n\nIn [2]: \n</pre>\n\n\nBut if we run this against the Qt backend (on my ubuntu 10.10 box, with the ubuntu-provided packages), I get:\n\n<pre>\nIn [1]: run simpletraits.py qt4\nusing toolkit: qt4\nSleeping for 2 seconds, hit Ctrl-C or wait until prompt returns\n^C\namirbar[test]>   ### Back to system shell, instant and silent crash\n</pre>\n\n\nBasically, _any_ `Ctrl-C` use once the traits machinery has been initialized with the Qt backend will instantly crash the interpreter, no messages, nothing.\n\nSo the questions are:\n- can you guys reproduce this on your ends?\n- if so, do you have any idea of what could be going on? Would the fix be on our side or the Traits/ETS side?\n\nI hadn't seen this failure mode before, and it's obviously pretty serious.  I know many traits users are moving to Qt quickly, so putting out an ipython that segfaults on Ctrl-C with any traits code would be not very nice.\n\nI've tried installing signal handlers myself to no avail, and the code won't produce a core dump.  I tried stracing the process, and all I get is this:\n\n<pre>\n....\nselect(0, NULL, NULL, NULL, {5, 0}\n\n)     = ? ERESTARTNOHAND (To be restarted)\n--- SIGINT (Interrupt) @ 0 (0) ---\nProcess 11303 detached\n</pre>\n\n\nwhere I had hit `Ctrl-C` while `time.sleep(5)` was waiting.\n\nI'm really quite stumped, so help from any front would be great.  I'll ping the list as well.\n\nAs a final data point, `Ctrl-C` behaves OK with matplotlib using the Qt4 backend, the problem only shows up once any traits code is activatedm as illustrated here:\n\n<pre>\namirbar[test]> ip -pylab qt4 --no-banner\n\nWelcome to pylab, a matplotlib-based Python environment [backend: Qt4Agg].\nFor more information, type 'help(pylab)'.\n\nIn [1]: plot(rand(100))\nOut[1]: [<matplotlib.lines.Line2D at 0x99b564c>]\n\nIn [2]: import time;time.sleep(5)\n^C---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n/home/fperez/ipython/test/<ipython-input-2-766a5ce2c74a> in <module>()\n----> 1 import time;time.sleep(5)\n\nKeyboardInterrupt: \n\nIn [3]: from enthought.mayavi import mlab\n\nIn [4]:  # Ctrl-C here\namirbar[test]>   # instant crash\n</pre>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1258888",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1258888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1258888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTg4ODg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-29T21:59:31Z",
    "updated_at": "2011-05-29T21:59:31Z",
    "author_association": "MEMBER",
    "body": "I should correct something in the above: we're not really seeing a segfault, rather an uncaught SIGINT that simply interrupts the interpreter.  The problem is basically that for some reason, SIGINT is being handled by Qt, ignoring any handler we may try to install at the python level with `signal.signal`.  But from the perspective of the user it feels like a crash, since there's an immediate, unconditional termination of the work session.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1262248",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1262248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1262248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjIyNDg=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-30T16:41:09Z",
    "updated_at": "2011-05-30T16:41:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I know what the culprits are here:\n\nhttps://github.com/enthought/traitsui/blob/master/traitsui/qt4/toolkit.py#L36\nhttps://github.com/enthought/pyface/blob/master/pyface/ui/qt4/gui.py#L105\n\nThese were added for the reason described in the comment: sometimes KeyboardInterrupts would fail to interrupt the application because Qt ate them. Obviously, this is not an acceptable solution for interactive use. It is probably best to just remove them. If Ctrl+C doesn't always kill Qt applications, then so be it. At least it won't lead to surprising behavior like this.\n\n@rkern\nWhat do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1262976",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1262976",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1262976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjI5NzY=",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-30T19:01:54Z",
    "updated_at": "2011-05-30T19:01:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1. It might be worth adding a `GUI.allow_sigint()` classmethod, or similar, so that we can explicitly enable that behavior in our standalone GUI applications.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1263147",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1263147",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1263147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjMxNDc=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-30T19:32:42Z",
    "updated_at": "2011-05-30T19:32:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should be fixed in:\n\nhttps://github.com/enthought/pyface/commit/831f6f3e4630a3bd449d82e7af8be51a3262c2d9\nhttps://github.com/enthought/traitsui/commit/391f9ac085f29b00a282d006d6ecb391e7c590d4\n\nThis may be worth a port to the old-namespace branch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1444709",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1444709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1444709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDQ3MDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T01:03:14Z",
    "updated_at": "2011-06-27T01:03:14Z",
    "author_association": "MEMBER",
    "body": "@epatters Does this mean this issue should be closed as far as IPython is concerned?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1444758",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1444758",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1444758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDQ3NTg=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T01:24:02Z",
    "updated_at": "2011-06-27T01:24:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think so. That said, I will test it out this week and _then_ close it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1456949",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1456949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1456949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTY5NDk=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-28T16:39:26Z",
    "updated_at": "2011-06-28T16:39:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I confirmed that the quitting issue is fixed, but another problem remains with PyQt4: incompatible SIP APIs. ETS (like IPython) uses the v2 QString and QVariant APIs, which are the default under Python 3 PyQt4 and the only option under PySide. Unfortunately, the default is v1 for PyQt4 under Python 2, so when the IPython sets the Qt4 toolkit here:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/inputhook.py#L184\n\nthe SIP APIs become fixed in stone, and subsequent ETS imports fail. One workaround to make sure that ETS imports are done before selecting the GUI toolkit in IPython. Another is to import from IPython.external.qt instead of PyQt4 in the IPython kernel. This would have the following benefits:\n1. The IPython kernel would support PySide by the same mechanism as the IPython Qt frontend and ETS \n2. ETS will always import correctly\n\nThe downside is that code relying on the old SIP APIs will break. Matplotlib's trunk version will do the right thing, but 1.0.1 version will not, which is probably unacceptable for the 0.11 release.\n\nIn summary, the situation stinks and is bound to create a great deal of confusion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1457340",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1457340",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1457340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTczNDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-28T17:25:53Z",
    "updated_at": "2011-06-28T17:25:53Z",
    "author_association": "MEMBER",
    "body": "That's really ugly, thanks for working it out, though.\n\nI imagine the most common combination for people the least likely to be able to handle doing something weird is Python 2, PyQt4, matplotlib release, so that's probably the most important situation to not break.\n\nIf we make sure matplotlib is imported prior to setting the inputhook, then we could have the following logic in the enable_qt4 method in inputhook:\n\nif matplotlib has been imported and is <= 1.0.1: import PyQt4\nelse: import external.qt\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1458048",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1458048",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1458048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTgwNDg=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-28T18:55:57Z",
    "updated_at": "2011-06-28T18:55:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the `enable_pylab` method in `InteractiveShell`, it seems that matplotlib will always be imported before the inputhook, so I will implement the hack as you suggest.\n\nOf course, if matplotlib is imported manually or someone tries to use ETS in pylab mode, all bets are off.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1477886",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1477886",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1477886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzc4ODY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-30T20:35:09Z",
    "updated_at": "2011-06-30T20:35:09Z",
    "author_association": "MEMBER",
    "body": "Great! @epatters, how is the patch going?  I think this might be the last non-docs code we are waiting for before we cut 0.11.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1479493",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1479493",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1479493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk0OTM=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-30T22:35:00Z",
    "updated_at": "2011-06-30T22:35:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, sorry. This is not hard; I've just been busy. I'll have something submitted tonight.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1479584",
    "html_url": "https://github.com/ipython/ipython/issues/8#issuecomment-1479584",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8",
    "id": 1479584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1ODQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-30T22:49:41Z",
    "updated_at": "2011-06-30T22:49:41Z",
    "author_association": "MEMBER",
    "body": "Sorry, I don't mean to imply there is a rush, if you need the weekend or something.\n\nWe do still have a bit of docs to finish.\n"
  }
]
