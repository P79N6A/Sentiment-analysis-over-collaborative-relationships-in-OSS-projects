[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/485271",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-485271",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 485271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTI3MQ==",
    "user": {
      "login": "markvoorhies",
      "id": 433907,
      "node_id": "MDQ6VXNlcjQzMzkwNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/433907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markvoorhies",
      "html_url": "https://github.com/markvoorhies",
      "followers_url": "https://api.github.com/users/markvoorhies/followers",
      "following_url": "https://api.github.com/users/markvoorhies/following{/other_user}",
      "gists_url": "https://api.github.com/users/markvoorhies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markvoorhies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markvoorhies/subscriptions",
      "organizations_url": "https://api.github.com/users/markvoorhies/orgs",
      "repos_url": "https://api.github.com/users/markvoorhies/repos",
      "events_url": "https://api.github.com/users/markvoorhies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markvoorhies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T04:50:13Z",
    "updated_at": "2010-10-22T04:50:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, insanely cool!\n\nI had to jump through a few hoops to make it work, perhaps because I'm not doing a system level install.\nHere's what I did:\n\nPatch setupbase.py to install frontend.html:\nmvoorhie@virgil:~/Cpackages/iPython/ipython$ git diff\ndiff --git a/setupbase.py b/setupbase.py\nindex 9d4215d..2530623 100644\n--- a/setupbase.py\n+++ b/setupbase.py\n@@ -111,7 +111,8 @@ def find_packages():\n     add_package(packages, 'frontend')\n     add_package(packages, 'frontend.qt')\n     add_package(packages, 'frontend.qt.console', tests=True)\n-    add_package(packages, 'frontend.terminal', tests=True)  \n-    add_package(packages, 'frontend.terminal', tests=True)\n-    add_package(packages, 'frontend.html')\n   add_package(packages, 'kernel', config=False, tests=True, scripts=True)\n   add_package(packages, 'kernel.core', config=False, tests=True)\n   add_package(packages, 'lib', tests=True)\n\nRun setup.py for local install (zmq and pyzmq are in the same location):\npython setup.py install --prefix=/home/mvoorhie/Cpackages/iPython/local/\n\nSymlink the static web bits:\ncd /home/mvoorhie/Cpackages/iPython/local/bin/\nln --symbolic /home/mvoorhie/Cpackages/iPython/ipython/IPython/frontend/html/css/ .\nln --symbolic /home/mvoorhie/Cpackages/iPython/ipython/IPython/frontend/html/js/ .\nln --symbolic /home/mvoorhie/Cpackages/iPython/ipython/IPython/frontend/html/notebook.html .\ncd -\n\nInvoke:\nexport PYTHONPATH=\"$PYTHONPATH:/home/mvoorhie/Cpackages/iPython/local/lib/python2.6/site-packages/:/home/mvoorhie/Cpackages/iPython/local/lib/\"\nexport LD_LIBRARY_PATH=/home/mvoorhie/Cpackages/iPython/local/lib/\nexport PATH=\"$PATH:/home/mvoorhie/Cpackages/iPython/local/bin/\"\nipython-http --pylab inline\n\nLooks beautiful in Firefox 3.6.10 and Konqueror/Webkit 4.4.2 _simultaneosly_ =)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/485273",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-485273",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 485273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTI3Mw==",
    "user": {
      "login": "markvoorhies",
      "id": 433907,
      "node_id": "MDQ6VXNlcjQzMzkwNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/433907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markvoorhies",
      "html_url": "https://github.com/markvoorhies",
      "followers_url": "https://api.github.com/users/markvoorhies/followers",
      "following_url": "https://api.github.com/users/markvoorhies/following{/other_user}",
      "gists_url": "https://api.github.com/users/markvoorhies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markvoorhies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markvoorhies/subscriptions",
      "organizations_url": "https://api.github.com/users/markvoorhies/orgs",
      "repos_url": "https://api.github.com/users/markvoorhies/repos",
      "events_url": "https://api.github.com/users/markvoorhies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markvoorhies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T04:52:18Z",
    "updated_at": "2010-10-22T04:52:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oops, forgot to preview my last comment.  The patch should look like this:\n\n<PRE>\nmvoorhie@virgil:~/Cpackages/iPython/ipython$ git diff\ndiff --git a/setupbase.py b/setupbase.py\nindex 9d4215d..2530623 100644\n--- a/setupbase.py\n+++ b/setupbase.py\n@@ -111,7 +111,8 @@ def find_packages():\n     add_package(packages, 'frontend')\n     add_package(packages, 'frontend.qt')\n     add_package(packages, 'frontend.qt.console', tests=True)\n-    add_package(packages, 'frontend.terminal', tests=True)    \n+    add_package(packages, 'frontend.terminal', tests=True)\n+    add_package(packages, 'frontend.html')\n     add_package(packages, 'kernel', config=False, tests=True, scripts=True)\n     add_package(packages, 'kernel.core', config=False, tests=True)\n     add_package(packages, 'lib', tests=True)\n</PRE>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/485455",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-485455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 485455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTQ1NQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T07:52:10Z",
    "updated_at": "2010-10-22T07:52:10Z",
    "author_association": "MEMBER",
    "body": "James, Mark's comment is the patch we talked about today right before you left.  It would be great if you could apply this little fix soon, to make it easier for others to test your code (which is really, really cool :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/485578",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-485578",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 485578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTU3OA==",
    "user": {
      "login": "jamesgao",
      "id": 22802,
      "node_id": "MDQ6VXNlcjIyODAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesgao",
      "html_url": "https://github.com/jamesgao",
      "followers_url": "https://api.github.com/users/jamesgao/followers",
      "following_url": "https://api.github.com/users/jamesgao/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesgao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesgao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesgao/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesgao/orgs",
      "repos_url": "https://api.github.com/users/jamesgao/repos",
      "events_url": "https://api.github.com/users/jamesgao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesgao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T09:24:30Z",
    "updated_at": "2010-10-22T09:24:30Z",
    "author_association": "NONE",
    "body": "Thanks Mark, I've added your patch. As for linking the html files, I'm not sure what's the best solution to this. Currently, the html, css, and javascript files are in the same directory as the main module. The module sets its own basepath using its **main**.**file**, and looks for the path from there. Evidently, this does not work with the install script. Since I'm not familiar with the distutils and setup, can someone suggest the best way to make /usr/local/bin/ipython-http work directly?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/486168",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-486168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 486168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjE2OA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T15:29:50Z",
    "updated_at": "2010-10-22T15:29:50Z",
    "author_association": "MEMBER",
    "body": "I can't help right now (leaving town shortly) but if you don't get help separately, I'll explain how to do it after the weekend...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/493893",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-493893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 493893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzg5Mw==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-26T14:37:21Z",
    "updated_at": "2010-10-26T14:37:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the page should be named \"IPython session\" instead of \"Ajax Test\". It could use the project's logo as favicon too, or maybe just [I]:\n\nBesides, I think the frontend should be named ipython-webnb instead of ipython-http, per the discussion that took place on the dev list a few days ago.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/498885",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-498885",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 498885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODg4NQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-28T07:20:23Z",
    "updated_at": "2010-10-28T07:22:07Z",
    "author_association": "MEMBER",
    "body": "Hey James,\n\nthis looks great, and I really want to get it merged in sooner rather than later, so you don't have to work in isolation for very long.\n\nA few small notes from random testing:\n- you may want to move the code that opens the web browser to happen a little bit later, once you know the kernel is actively listening.  Right now by default it tries to open the browser too early, and  the user gets an error page.  A few seconds later reloading works fine, but it would be better not to show the error page in the first place.\n- Similarly, you should trap KeyboardInterrupt in the main loop, and use that to shut down cleanly.  It's a good way to stop the service from a terminal, and likely to be used by regular users.  Just catch the KeyboardInterrupt exception, use that as your exit request, and do any shutdown operations you need.\n- You should add the standard copyright notice \n\n<pre>\n#-----------------------------------------------------------------------------\n# Copyright (c) 2010, IPython Development Team.\n#\n# Distributed under the terms of the Modified BSD License.\n#\n# The full license is in the file COPYING.txt, distributed with this software.\n#-----------------------------------------------------------------------------\n</pre>\n\n\nin the files as you have a chance.  It's best that these are carried regularly.\n- Could you also add at the top of the JS files a comment block indicating the intent of the file?  I know JS doesn't have docstrings in the Python sense,  but a comment block similar to the top-level docstrings will still help.  And in general, try to err on the side of verbosity with comments on JS code: most of us in the team know a lot more python than JS, so having the JS code well commented will help us a lot when we dig into it.\n- In html/kernelmanager:\n  - Threading module is imported but not needed (you can catch these things by using pyflakes regularly, let me know if you need a hand setting it up; it's a great habit to get into).\n  - Try to organize the file a little better overall: imports at the top organized by section, classes, functions, etc.  I've added a sample template you can use for reference, to the docs:\n\nhttp://ipython.scipy.org/doc/nightly/html/development/coding_guide.html#new-files\n- Could you add a reference to the Comet design pattern?  I'm not familiar with it, and a URL in the code would help to make sure we look up the same thing you had in mind.\n- Global objects should be clearly declared in a globals section at the top.  If some globals are needed that are instances of classes defined in the file itself, then put them all together at the bottom so they stand out clearly (they get easily lost otherwise).\n- Unit tests?  Not everything here is easy to auto-test, but objects like the CometManger are quite easy to have tests written for them.  Look in the tests/ directories in IPython for test examples, or let me know if you want a hand getting going with this and we can work together.  We really, really need to have as tight of a test harness as possible for these codes right off the start.\n- Also add at least some basic docstrings for the various methods, so that other developers know what each of them is for.  For user-facing code we want very well documented/formatted docstrings (http://ipython.scipy.org/doc/nightly/html/development/doc_guide.html#docstring-format) but we're not quite that exacting for developer-only code.  Still, a basic docstring and parameter explanation goes a long way towards helping everyone be able to work with the code later on.\n- Similarly, could you drop a little reST file in the  docs with a basic description of the architecture?  Even the text from your pull request (above) would be a great start.  In docs/source, add a directory called frontend/ and put in there a file called webnb.txt (to match the top-level script name).\n- Are the various Http*socketChannel classes still missing some implementation work?  I see a few 'pass' in there.  Do you think you can finish them off before merging?  If not that's OK, just mark clearly with #FIXME roughly what's missing, so we know when looking again.\n\nNote: if you need icons, http://ipython.scipy.org/ipython-icons/ has our current set of icons in png format.  We can ask Min for the original svg later.\n\n## Summary\n\nThis is fantastic work.  I'm very, very excited about this, and I hope we can get it merged very soon.  Let me know if you want a hand with any of the review items above, and we'll get this in.  I'll make a note on the list asking for further review on more web-specific stuff, as I know very little about those architectures.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/499105",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-499105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 499105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTEwNQ==",
    "user": {
      "login": "jamesgao",
      "id": 22802,
      "node_id": "MDQ6VXNlcjIyODAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesgao",
      "html_url": "https://github.com/jamesgao",
      "followers_url": "https://api.github.com/users/jamesgao/followers",
      "following_url": "https://api.github.com/users/jamesgao/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesgao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesgao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesgao/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesgao/orgs",
      "repos_url": "https://api.github.com/users/jamesgao/repos",
      "events_url": "https://api.github.com/users/jamesgao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesgao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-28T09:48:06Z",
    "updated_at": "2010-10-28T09:48:06Z",
    "author_association": "NONE",
    "body": "Hi Fernando,\nThanks for your comments! I did some code reshuffling and made everything more clear. I also tightened up message handling on the javascript side, so strange cases like this:\n\nsys.stdout.write(\"Hello \")\nsys.stdout.flush()\ntime.sleep(2)\nsys.stdout.write(\"World\")\nsys.stdout.flush()\n\nactually work correctly now. As a side effect (feature!) of this reorganization, now graphs are pushed to all web clients, regardless of who made the request. I'll try to get the documentation and unit-testing up to par over the next few days, although I need to get up to speed on Sphinx. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/500630",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-500630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 500630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDYzMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-28T21:19:04Z",
    "updated_at": "2010-10-28T21:19:04Z",
    "author_association": "MEMBER",
    "body": "Hey James,\n\nthanks, this looks like good progress.  One minor point I failed to notice yesterday: we're trying to use pep-8 names by default, which means calling module files with lowercase only: CometManager.py -> cometmanager.py (I'd actually just call it 'comet.py' for short).\n\nthe rest of the changes in the last two commits look good.  Ping us here when you've completed things and we'll go over it again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/501234",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-501234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 501234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTIzNA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-29T03:21:37Z",
    "updated_at": "2010-10-29T03:21:37Z",
    "author_association": "MEMBER",
    "body": "This is my first round of comment, mostly focusing on the UI.\n- Use a monospaced font for all code and the In/Out prompts.  I noticed that the font while you are entering code is not monospaced, but after you are done editing, it becomes monospaced.\n- Less horizontal space between the end of the prompts and the beginning of code and payloads.  There is currently about ~10 chars worth of it.\n- The first time you press ctrl-return, it pauses for a second and put an extra space before the next line of input.  From then on it doesn't pause to put the extra line in.\n- Use Return for newline, not for code execution.  Use shift-return for code execution.\n- The little dot should probably be red when the kernel is busy.  I like the green dot for idle though.\n- How do you delete a cell?  Insert a new one between existing ones? Reorder cells?\n- I think we should split the Ui into 2 tabs, one tab for the notebook view, which is like the main pane you currently have and another for \"timeline\" or history view, which would basically be your history side pane.  The current history pane will be too small for larger code blocks. This would allow you to make the timeline view look nicer and include plots, etc.  It will also keep the main pane less distracting.\n- Should be some sort of title or outer framing to indicate what this is like \"IPython Notebook\" and maybe even include the ip/port and a link you can email to others.\n- Probably want the ability to collapse large cells and hide the output.\n- When the kernel is busy, we should indicate (with visual highlights) which cell is running.\n\nMore comments on the way about the actual code and architecture.  Great work though!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/501256",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-501256",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 501256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTI1Ng==",
    "user": {
      "login": "jamesgao",
      "id": 22802,
      "node_id": "MDQ6VXNlcjIyODAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesgao",
      "html_url": "https://github.com/jamesgao",
      "followers_url": "https://api.github.com/users/jamesgao/followers",
      "following_url": "https://api.github.com/users/jamesgao/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesgao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesgao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesgao/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesgao/orgs",
      "repos_url": "https://api.github.com/users/jamesgao/repos",
      "events_url": "https://api.github.com/users/jamesgao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesgao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-29T03:41:43Z",
    "updated_at": "2010-10-29T03:41:43Z",
    "author_association": "NONE",
    "body": "Thanks for the comments. A lot of these features are planned for a full notebook interface, which would allow cell shuffling, grouping, etc. That's probably a big enough merge by itself to be a separate pull request. Let's look through this list:\n\n1) Good call on the monospace font -- the styles are not very tight yet, I have to review what looks best.\n2-3) This sounds like an animation bug, can you send a screenshot? Which browser / version are you running?\n4) Currently, return on a single line will execute, whereas shift-return is required for multi-line input. It's an easy thing to change -- what's the best default?\n5) The dot becomes red when the kernel is \"dead\", when the COMET requests have ceased.\n6) Deleting a cell is currently accomplished by erasing the entire input, and return. I'm planning to add a context menu that would accomplish this.\n7) UI tabs: I like this idea! I'll probably implement it for a more full fledged notebook interface\n8-9) These features are mostly planned for the full notebook interface\n10) Another great idea! I'll try to add that tonight maybe?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/501297",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-501297",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 501297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTI5Nw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-29T04:22:50Z",
    "updated_at": "2010-10-30T04:04:26Z",
    "author_association": "MEMBER",
    "body": "4) You almost have the interface that the Qt console has, which is that return executes _complete_ single-line statements, but does newline for incomplete ones (colon at end of line, open quotes, open parens, etc).  However, it's very hard to do that in JS, because you need a real python compiler to reliably detect incomplete python statements (that's what we use, the actual compiler).\n\nSo I suggest in the NB to simply have, without any smarts:\n- Return: newline always\n- Shift-return: unconditional code execution.\n\nLater, I'd use Ctrl-Return to split up a cell in two, which can be very handy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/502594",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-502594",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 502594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjU5NA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-29T17:02:02Z",
    "updated_at": "2010-10-29T17:02:02Z",
    "author_association": "MEMBER",
    "body": "1) Great\n2-3) This sounds like an animation bug, can you send a screenshot? Which browser / version are you running?\n\nI get the bug in Chrome 7.  I will post a screenshot to the list.  Also, get a minor issue at the same place with Firefox.\n\n4) Currently, return on a single line will execute, whereas shift-return is required for multi-line input. It's an easy thing to change -- what's the best default?\n\nI agree with Fernando about Return = newline, Shift-Return=execute code.\n\n5) The dot becomes red when the kernel is \"dead\", when the COMET requests have ceased.\n\nAhh, maybe something like this:\n- Green dot = idle\n- Red dot = busy\n- Invert the entire div to red put \"Dead\" in while text = dead\n\n6) Deleting a cell is currently accomplished by erasing the entire input, and return. I'm planning to add a context menu that would accomplish this.\n\nWe should have a keyboard stroke dedicated to this...ctrl-D?  command-D on Mac?\n\n7) UI tabs: I like this idea! I'll probably implement it for a more full fledged notebook interface\n8-9) These features are mostly planned for the full notebook interface\n\nGreat\n\n10) Another great idea! I'll try to add that tonight maybe?\n\nAwesome.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/502598",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-502598",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 502598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjU5OA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-29T17:03:44Z",
    "updated_at": "2010-10-29T17:03:44Z",
    "author_association": "MEMBER",
    "body": "OK, some additional issue:\n\n1) When I tab complete, I get:\n\n  File \"/Users/bgranger/Documents/Computation/IPython/code/ipython/IPython/frontend/html/kernelmanager.py\", line 95, in do_POST\n    resp = manager.complete(data[\"code\"].value, data[\"pos\"].value)\n  File \"/Users/bgranger/Documents/Computation/IPython/code/ipython/IPython/frontend/html/CometManager.py\", line 62, in complete\n    chunk = re.split('\\s|(|=|;', code[:int(pos)])[-1]\nNameError: global name 're' is not defined\n\nLooks like simply an import error.\n\n2) When it starts up it has two cells showing In[0] and In[1], both blank.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/503805",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-503805",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 503805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzgwNQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-30T04:07:30Z",
    "updated_at": "2010-10-30T04:07:30Z",
    "author_association": "MEMBER",
    "body": "James, Brian and I had a long talk about the web architecture and things him and Min are doing on the pyzmq side.  The short of it is that in a little while, it will likely be possible to refactor some of your http code to run on top of the Tornado web server (imported from pyzmq).  This will give us ssl support, a better async model and better scalability.\n\nThis is just to give you a heads-up not to worry too much about major work on the http serving part of your code right now.  I think if you have a chance to wrap up the various items pointed in this review, we're pretty much ready to merge once those are fixed.\n\nOnce merged, we can then continue to build on it and later in the month revisit the http serving part of things.  But your code as it is, is a great starting point to build on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/503819",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-503819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 503819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzgxOQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-30T04:19:31Z",
    "updated_at": "2010-10-30T04:19:31Z",
    "author_association": "MEMBER",
    "body": "James, I noticed one more problem: if you actually _install_ your branch, then it doesn't work right.  I did an install to a temporary throw-away directory, and in the browser I get:\n\n<pre>\nXML Parsing Error: no element found\nLocation: http://localhost:8080/notebook\nLine Number 1, Column 1:\n</pre>\n\n\nwhile the terminal shows:\n\n<pre>\n----------------------------------------\nlocalhost.localdomain - - [29/Oct/2010 21:16:31] \"GET /notebook HTTP/1.1\" 200 -\n----------------------------------------\nException happened during processing of request from ('127.0.0.1', 57620)\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/SocketServer.py\", line 560, in process_request_thread\n    self.finish_request(request, client_address)\n  File \"/usr/lib/python2.6/SocketServer.py\", line 322, in finish_request\n    self.RequestHandlerClass(request, client_address, self)\n  File \"/usr/lib/python2.6/SocketServer.py\", line 617, in __init__\n    self.handle()\n  File \"/usr/lib/python2.6/BaseHTTPServer.py\", line 329, in handle\n    self.handle_one_request()\n  File \"/usr/lib/python2.6/BaseHTTPServer.py\", line 323, in handle_one_request\n    method()\n  File \"/home/fperez/tmp/junk/lib/python2.6/site-packages/IPython/frontend/html/kernelmanager.py\", line 60, in do_GET\n    page_text = Template(open(basepath + \"notebook.html\").read())\nIOError: [Errno 2] No such file or directory: '/home/fperez/tmp/junk/lib/python2.6/site-packages/IPython/frontend/html/notebook.html'\n----------------------------------------\n</pre>\n\n\nYou may need to play with the data_files and/or package_data (I can't remember precisely which right now, have a look at the distutils docs for both of these flags), because I think the problem is that the js/css code isn't getting put in the installed version.\n\nWith new code like this, it's always a good idea to test it both from a source tree and from a temporary installation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/505223",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-505223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 505223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTIyMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-31T01:18:17Z",
    "updated_at": "2010-10-31T01:20:59Z",
    "author_association": "MEMBER",
    "body": "Hey James,\n\nSatra made a good suggestion in general, but the html notebook is probably the most critical place to put it in.  How about we add a warning at the top of the opening page for now that reads:\n\n<pre>\nSince the ZMQ code currently has no security, listening on an external-facing IP is dangerous. \nYou are giving any computer that can see you on the network the ability to issue arbitrary shell commands as you on your machine. \nBe very careful with this.\n</pre>\n\n\nHopefully we can remove it soon, but it's probably a good idea to have in there for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/508517",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-508517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 508517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODUxNw==",
    "user": {
      "login": "ivanistheone",
      "id": 163966,
      "node_id": "MDQ6VXNlcjE2Mzk2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/163966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanistheone",
      "html_url": "https://github.com/ivanistheone",
      "followers_url": "https://api.github.com/users/ivanistheone/followers",
      "following_url": "https://api.github.com/users/ivanistheone/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanistheone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanistheone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanistheone/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanistheone/orgs",
      "repos_url": "https://api.github.com/users/ivanistheone/repos",
      "events_url": "https://api.github.com/users/ivanistheone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanistheone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-11-01T07:59:54Z",
    "updated_at": "2010-11-01T07:59:54Z",
    "author_association": "NONE",
    "body": "How does the sage notebook handle security?\nhttp://nb.sagemath.org/\n\nvery cool!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/919984",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-919984",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 919984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxOTk4NA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-26T10:09:02Z",
    "updated_at": "2011-03-26T10:09:02Z",
    "author_association": "MEMBER",
    "body": "What is the status of this pull request?  It seems very relevant to our new rewrite of the Sage notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/920901",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-920901",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 920901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDkwMQ==",
    "user": {
      "login": "jamesgao",
      "id": 22802,
      "node_id": "MDQ6VXNlcjIyODAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesgao",
      "html_url": "https://github.com/jamesgao",
      "followers_url": "https://api.github.com/users/jamesgao/followers",
      "following_url": "https://api.github.com/users/jamesgao/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesgao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesgao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesgao/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesgao/orgs",
      "repos_url": "https://api.github.com/users/jamesgao/repos",
      "events_url": "https://api.github.com/users/jamesgao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesgao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-26T19:01:59Z",
    "updated_at": "2011-03-26T19:01:59Z",
    "author_association": "NONE",
    "body": "Unfortunately, I haven't had enough time to develop this further. I would like to get back into it soon though, so please keep watching. I'm planning to move over to tornado as per the suggestions above.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/921588",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-921588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 921588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMTU4OA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-27T00:31:56Z",
    "updated_at": "2011-03-27T00:31:56Z",
    "author_association": "MEMBER",
    "body": "Several students and I are working on a \"single cell Sage notebook\" which shares a lot of similarities with your project.  At the recent Sage Days 29, I talked a lot with Fernando and others about using the ipython protocol to implement our project.  We are implementing our project using uwsgi and flask, so we wouldn't be using websockets, but instead use a database as a huge cache of the requests between the client and server.\n\nAnyways, I'm following this and may use or extend the javascript code here as part of our implementation of the messaging spec.  We will probably work on this pretty heavily starting in May.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/943028",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-943028",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 943028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MzAyOA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-31T20:56:17Z",
    "updated_at": "2011-03-31T20:56:17Z",
    "author_association": "MEMBER",
    "body": "The html notebook work is being continued in the htmlnotebook branch here:\n\nhttps://github.com/ipython/ipython/tree/htmlnotebook\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/943033",
    "html_url": "https://github.com/ipython/ipython/pull/179#issuecomment-943033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/179",
    "id": 943033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MzAzMw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-31T20:57:40Z",
    "updated_at": "2011-03-31T20:57:40Z",
    "author_association": "MEMBER",
    "body": "Great; thanks!\n"
  }
]
