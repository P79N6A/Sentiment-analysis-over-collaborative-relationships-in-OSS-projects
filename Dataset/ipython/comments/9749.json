[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/232461818",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-232461818",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 232461818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjQ2MTgxOA==",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T19:31:13Z",
    "updated_at": "2016-07-13T19:49:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is what I'm currently doing to get a nice custom base16 theme:\n\n```\nfrom base16 import Base16Style, GREEN, RED\nfrom IPython.terminal import interactiveshell\nfrom pygments.token import Token\n\ndef get_style_by_name(name, original=interactiveshell.get_style_by_name):\n    return Base16Style if name == 'base16' else original(name)\ninteractiveshell.get_style_by_name = get_style_by_name\n\nc.TerminalInteractiveShell.highlighting_style = 'base16'\nc.TerminalInteractiveShell.highlighting_style_overrides = {\n    Token.Prompt: GREEN,\n    Token.PromptNum: '%s bold' % GREEN,\n    Token.OutPrompt: RED,\n    Token.OutPromptNum: '%s bold' % RED\n}\n```\n\nIt's far from ideal:\n1. I'm monkey patching `get_style_by_name` to avoid either modifying the pygments installation or going all the setuptools way just to register an entrypoint.\n2. I need to define 4 overrides because ipython is being too liberal in defining its own colors.\n\nRegarding 1 I proposed a simple solution: to allow `c.TerminalInteractiveShell.highlighting_style = Base16Style`.\n\nThe second issue is a bit more difficult but I think ipython should either:\n\na. strive to use the standard pygments token colors, or\nb. at least honour the terminal emulator palette as before.\n\nCurrently ipython is being inconsistent both with my terminal color settings and with my highlighting settings (both base16 default). There is the `overrides` hook but a more consistent default behavior will simplify configuration a lot. Ideally I would like to reduce the above code to:\n\n```\nfrom base16 import Base16Style\n\nc.TerminalInteractiveShell.highlighting_style = Base16Style\n```\n\nand still expect a reasonably consistent appearance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/232502886",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-232502886",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 232502886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjUwMjg4Ng==",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-13T22:15:00Z",
    "updated_at": "2016-07-13T22:17:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Recognizing that it's not that easy to fix point 2, since there are many prompt toolkit specific colors, I decided to implement a template for base16 that works out of the box for the combo ipython+pygments+prompt_toolkit and closely matches the vim base16 theme.\n\nI have simplified, sorted and updated the template at https://github.com/idleberg/base16-pygments to match vim theme and added ipython specific styles (paren matching, completion menu, prompts, etc.). [Here](https://gist.github.com/memeplex/0088a470036786bea54b43a1f2db2b80) is the output for  base16-default together with the required ipython configuration (simpler but still needs the monkey patching :().\n\nI will be testing and fixing this one for a couple of weeks and then I will add the template to the base16 suite. The beauty of this approach is that out-of-the-box ipython will get dozens of consistent, term-friendly themes.\n\nLast but not least, here is an ![screenshot](https://cloud.githubusercontent.com/assets/2845433/16821711/3023c050-492e-11e6-85ca-e406d51c9531.png).\n\nPS: what is the highlighting being used for the traceback?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233793472",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-233793472",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 233793472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzc5MzQ3Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T23:08:20Z",
    "updated_at": "2016-07-19T23:08:20Z",
    "author_association": "MEMBER",
    "body": "Hi there, Sorry we were at scipy last week. \n\nSimplifying color handling is definitely the kind  of things we'd like to do, but we likely want to uniformize how color are used across the IPython codebase. In particular in the debugger and UltraTB. \nI hope to make the coloring of the tracback simpler in a later version one we move our codebase to python3 only, as we will be able to `yield from` pais of (Token, types) instead of the decade old system that does string formatting manually. \n\n> The second issue is a bit more difficult but I think ipython should either:\n> \n> a. strive to use the standard pygments token colors, or\n> b. at least honour the terminal emulator palette as before.\n\nYes we are aware of this one, and it is fix in pygments master, the issue is that pygments used to only emit extended ansi escape sequence, and was not allowing to create themes with short ansi names. \nThe other issue is that pygments has no themes that use these short escape sequences. There is an common agreement among the xonsh/ipython/prompt_toolkit developers, that we should do something  about that an unify the stack. \n\nIt is not too hard to do, but require quite a bit of cleanup work. \n\nIf you want to submit a PR that does some of that, or are interested in this, we would be happy to help you. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/233793573",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-233793573",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 233793573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzc5MzU3Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T23:08:58Z",
    "updated_at": "2016-07-19T23:09:08Z",
    "author_association": "MEMBER",
    "body": "Sidenote, marking as wishlist, as this is likely long term ground work, which is not really blocking but would be nice to have. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235334111",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-235334111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 235334111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMzNDExMQ==",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T17:00:31Z",
    "updated_at": "2016-07-26T17:00:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau for the time being I would like to submit a PR that just allows `highlighting_style` to be a string or a class, in order to avoid the cumbersome procedures extending pygments requires, which I described in my first comment. Is that ok?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235953519",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-235953519",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 235953519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk1MzUxOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T16:44:41Z",
    "updated_at": "2016-07-28T16:44:41Z",
    "author_association": "MEMBER",
    "body": "> @Carreau for the time being I would like to submit a PR that just allows highlighting_style to be a string or a class, in order to avoid the cumbersome procedures extending pygments requires, which I described in my first comment. Is that ok?\n\nI think that would be ok. You would have to change the traitlets to be either Type, or DottedObjectName, I would have to verify that. We have to check how much complexity added there is. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/238095780",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-238095780",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 238095780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODA5NTc4MA==",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-07T17:29:25Z",
    "updated_at": "2016-08-08T14:13:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I've submitted a PR, there is not much added complexity IMO.\n\nEdit: the PR is #9848 (not #9845). They're both the same but I decided to rename the source branch since I'm working in another change on top upstream. Sorry for that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/372762721",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-372762721",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 372762721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc2MjcyMQ==",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T18:04:54Z",
    "updated_at": "2018-03-13T18:04:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "How is the process to port this to jupyter console? Should I just create an issue there and reference this one? I'm afraid a number of potentially common improvements are being lost in the way. Is there any periodic merging process of both projects?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/372764019",
    "html_url": "https://github.com/ipython/ipython/issues/9749#issuecomment-372764019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9749",
    "id": 372764019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc2NDAxOQ==",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T18:08:43Z",
    "updated_at": "2018-03-13T18:08:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well I'm still interested in the methodological approach but, for the time being, I already created a new issue: https://github.com/jupyter/jupyter_console/issues/154"
  }
]
