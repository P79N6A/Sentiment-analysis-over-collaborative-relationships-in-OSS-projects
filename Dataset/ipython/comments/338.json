[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975041",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-975041",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 975041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTA0MQ==",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T18:32:33Z",
    "updated_at": "2011-04-08T18:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "It could be made like the readline behavior. If you edit a \"cell\" in the history, that edited text remains even as you move up and down in the history. When you execute or cancel, the original text takes its place back in the history, and the new text (if you executed) appends to the history.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975122",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-975122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 975122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTEyMg==",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T18:48:36Z",
    "updated_at": "2011-04-08T18:48:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I second Robert's idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975614",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-975614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 975614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTYxNA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T20:42:52Z",
    "updated_at": "2011-04-08T20:42:52Z",
    "author_association": "MEMBER",
    "body": "On Fri, Apr 8, 2011 at 11:32 AM, rkern\nreply@reply.github.com\nwrote:\n\n> It could be made like the readline behavior. If you edit a \"cell\" in the history, that edited text remains even as you move up and down in the history. When you execute or cancel, the original text takes its place back in the history, and the new text (if you executed) appends to the history.\n\nThat sounds good, but do you mean to suggest not stopping the cursor\nat cell boundaries once the cell has been edited?  Part of what's very\njarring is the jumps that happen if you accidentally up-arrow through\nthe first line, and your big multiline cell gets replaced by 'ls'.\nEven if we can recover it by going back down, I think ui-wise it would\nbe better to 'lock' the cell from exit at that point.\n\nBut I have no idea if that's easy to do in qt or not...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975660",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-975660",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 975660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTY2MA==",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T20:51:26Z",
    "updated_at": "2011-04-08T20:51:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm always leery of preventing people from doing stuff, especially if the only way to \"unlock\" things is to execute something or lose what you've written. Someone might legitimately want to go up or down in the history while they're in the middle of typing something. This is particularly important when the history is from previous sessions so the user cannot simply scroll up to see it.\n\nRather, I think the principle to follow is one of \"safe exploration\". They can move around freely without losing their work. Yes, it might be visually jarring from time to time, but that's all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/978833",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-978833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 978833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODgzMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T03:40:32Z",
    "updated_at": "2011-04-10T03:40:32Z",
    "author_association": "MEMBER",
    "body": "OK, I can agree to that.  I think I would prefer a \"safety stop\" once the cell has been edited, just requiring perhaps an extra Ctrl-arrow to get out, or somesuch... But if that's hard to implement, it's OK.\n\nDo you guys have any available cycles to implement this over the next few weeks?  I don't know enough qt to do it... But I think it's still an important usability limitation of the console to lose edits from an accidental up-arrow.  It has happened several times to me and it's really annoying...\n\nPeople have been very impressed when I've demoed the qt console, but things like this still make it a bit unappealing for actual heavy-duty work.  I think we're very close, but not quite there.\n\nBut since I can't really do the work myself right now, I can only ask :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/980254",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-980254",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 980254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MDI1NA==",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T17:03:56Z",
    "updated_at": "2011-04-10T17:03:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will implement this, Fernando. \n\nFor now, I will go with the readline approach since that satisfies the principle of least surprise. If time permits, I will add a configuration option for some kind of lock, with a keybinding (Shift+Up/Down?) to disable it. But I think that the locking should be off by default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/980377",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-980377",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 980377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MDM3Nw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T17:37:58Z",
    "updated_at": "2011-04-10T17:37:58Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 10, 2011 at 10:03 AM, epatters\nreply@reply.github.com\nwrote:\n\n> I will implement this, Fernando.\n> \n> For now, I will go with the readline approach since that satisfies the principle of least surprise. If time permits, I will add a configuration option for some kind of lock, with a keybinding (Shift+Up/Down?) to disable it. But I think that the locking should be off by default.\n\nThis sounds great, Evan.  Many thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/981175",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-981175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 981175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTE3NQ==",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T21:34:29Z",
    "updated_at": "2011-04-10T21:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez\nShould the locking apply to any \"edited\" cell, or only those with multiple lines? I think the latter makes more sense, and would fit in nicely with the Enter/Shift+Enter distinction for multi-line inputs.\n\nAlso, you mentioned above that there were certain usability issues making the console difficult to use for \"heavy-duty work\". Could you create tickets for any such issues that you can recall? We would like the Qt console to provide as nice an experience as possible.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/981200",
    "html_url": "https://github.com/ipython/ipython/issues/338#issuecomment-981200",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/338",
    "id": 981200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTIwMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T21:43:01Z",
    "updated_at": "2011-04-10T21:43:01Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 10, 2011 at 2:34 PM, epatters\nreply@reply.github.com\nwrote:\n\n> Should the locking apply to any \"edited\" cell, or only those with multiple lines? I think the latter makes more sense, and would fit in nicely with the Enter/Shift+Enter distinction for multi-line inputs.\n\nGo with the latter, that sounds good.\n\n> Also, you mentioned above that there were certain usability issues making the console difficult to use for \"heavy-duty work\". Could you create tickets for any such issues that you can recall? We would like the Qt console to provide as nice an experience as possible.\n\nI will, thanks.  This was the biggest, I'll make one as I think of\nthem, mark them with the qtconsole label and tentatively assign them\nto you.  Feel free to un-assign any of them you feel you can't deal\nwith for any reason (or re-assign to someone else if you think they\ncan handle it better).\n\nThanks!\n"
  }
]
