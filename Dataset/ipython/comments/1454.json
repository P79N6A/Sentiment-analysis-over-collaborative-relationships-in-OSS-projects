[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4317266",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-4317266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 4317266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTcyNjY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-05T06:06:10Z",
    "updated_at": "2012-03-05T06:06:10Z",
    "author_association": "MEMBER",
    "body": "If you know what code you need to run when you are bringing up an engine, you can add it as startup script or command, either as:\n\n```\n$> ipengine -s myscript.py\n$> ipengine -c \"do_stuff()\"\n```\n\nWhich correspond to the `IPEngineApp.startup_script` and `IPEngineApp.startup_command` configurables, respectively, if you want to set them more permanently.\n\nThis code is run before the engine is made available to the Scheduler.  Can you describe your case in more detail if this doesn't suffice?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5169017",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-5169017",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 5169017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkwMTc=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T06:23:08Z",
    "updated_at": "2012-04-17T06:23:08Z",
    "author_association": "NONE",
    "body": "I would like to get some information about each engine on startup and store it in MongoDB for later use (engine_id, hostname, arch, os, proctype, nbits, procspeed, ncpus, ncpucores, memory, load, address, pools). Depending on these information, I can give tasks to specific engines.\nWhen I try to get these information via dview while long-running tasks are already running, my client is blocked / gets a timeout. That's why I would like to get that information first, before allowing the controller to give tasks to the engine.\n\nI will try out your hint. But I guess that the engine isn't registered at the time excuting startup_script / startup_command, which would mean that the engine_id is unknown.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5262658",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-5262658",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 5262658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjI2NTg=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-21T18:49:37Z",
    "updated_at": "2012-04-21T18:49:37Z",
    "author_association": "NONE",
    "body": "Is it possible to get the engine_id inside of the called startup_script?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5263419",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-5263419",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 5263419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjM0MTk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-21T20:43:53Z",
    "updated_at": "2012-04-21T20:43:53Z",
    "author_association": "MEMBER",
    "body": "Hm,\n\nIt's technically possible, though I'm not certain these are fully public APIs that I would trust to remain stable:\n\n``` python\nfrom IPython.config.application import Application\n\n# grab the global application instance\napp = Application.instance()\n# and its integer engine ID\nengine_id = app.engine.id\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5263531",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-5263531",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 5263531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjM1MzE=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-21T21:00:08Z",
    "updated_at": "2012-04-21T21:01:52Z",
    "author_association": "NONE",
    "body": "Thanks a lot, this works!\n\nNow I can get all needed information about a connected engine at startup and store that info in MongoDB. Later, I can lookup that information with the engine_id of each engine stored in client.ids, without having to wait until the current task is finished. Sadly IPython doesn't seem to support a out-of-band DirectView on engines while LoadBalanced tasks are running.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5263752",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-5263752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 5263752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjM3NTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-21T21:29:16Z",
    "updated_at": "2012-04-21T21:29:16Z",
    "author_association": "MEMBER",
    "body": "> Sadly IPython doesn't seem to support a out-of-band DirectView on engines while LoadBalanced tasks are running.\n\nYes and no.  Obviously, only one task can run at a time (it is Python, after all), but task and mux queues are fair-queued, so if you submit a direct task, it will run before any queued LoadBalanced tasks, as soon as the current task finishes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5264110",
    "html_url": "https://github.com/ipython/ipython/issues/1454#issuecomment-5264110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1454",
    "id": 5264110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjQxMTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-21T22:23:58Z",
    "updated_at": "2012-04-21T22:23:58Z",
    "author_association": "MEMBER",
    "body": "Also, I realize that you can possibly get your own 'disabled' mode in the startup script by running a command that blocks until a certain condition is met.  I'm not sure if this would actually work in practice, but it's an idea.\n"
  }
]
