[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25650417",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-25650417",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 25650417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjUwNDE3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T19:27:26Z",
    "updated_at": "2013-10-03T19:27:26Z",
    "author_association": "MEMBER",
    "body": "I know HTMLParser is not the most tolerant parser around, but does it fail by ignoring things and carrying on, or does it fail loudly?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25661219",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-25661219",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 25661219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjYxMjE5",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T21:48:31Z",
    "updated_at": "2013-10-03T21:48:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll try to test this more thoroughly. So far my simple test worked without any noise. But lets see.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25776978",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-25776978",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 25776978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Nzc2OTc4",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-06T21:15:46Z",
    "updated_at": "2013-10-06T21:15:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did some tests with all the possible mistakes I could figure out, see http://nbviewer.ipython.org/6859103.\nSo far it looks good!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26001386",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26001386",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26001386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDAxMzg2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T19:35:14Z",
    "updated_at": "2013-10-09T19:35:14Z",
    "author_association": "MEMBER",
    "body": "I am really hesitant to use `HTMLParser`.  Are we absolutely positive we can't make some changes to how we are using lxml and fix that implementation?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26008802",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26008802",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26008802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA4ODAy",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:07:06Z",
    "updated_at": "2013-10-09T21:07:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "The ampersand issue is rather trivial to fix. The issue with open brackets #4283 might be more demanding, but I haven't had a look at it yet.\n\nLike with the previous approach (regex) I'm not really against lxml but the issues have to be resolved somehow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26008994",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26008994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26008994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA4OTk0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:09:32Z",
    "updated_at": "2013-10-09T21:09:32Z",
    "author_association": "MEMBER",
    "body": "Could you have a look to see if this can be fixed without getting rid of\nlxml?\n\nOn Wed, Oct 9, 2013 at 2:07 PM, Jakob Gager notifications@github.comwrote:\n\n> The ampersand issue is rather trivial to fix. The issue with open brackets\n> #4283 https://github.com/ipython/ipython/issues/4283 might be more\n> demanding, but I haven't had a look at it yet.\n> \n> Like with the previous approach (regex) I'm not really against lxml but\n> the issues have to be resolved somehow.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4323#issuecomment-26008802\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26009617",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26009617",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26009617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA5NjE3",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:17:33Z",
    "updated_at": "2013-10-09T21:17:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll try to look at it in the next few days.\nThe only thing I wanted to point out is, that IMHO any pre and postprocessing steps are a rather inelegant way of dealing with this stuff. And the ampersand issue would be (currently) handled by a postprocessing step (`from xml.sax.saxutils import unescape`). \nBut I'll see if I find a better solution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26173926",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26173926",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26173926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTczOTI2",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T21:04:25Z",
    "updated_at": "2013-10-11T21:05:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg I've tried different things, but using plain lxml alone, it was not possible to parse the invalid xml correctly (I also got this answer on stackoverflow). However, using BeautifulSoup as Parser seems to work fine. \nI've updated my gist (http://nbviewer.ipython.org/6859103) to compare htmlparser, lxml and beautifulsoup.\nInteresting is the different behavior at In [13] and [14] - (both are actual wrong defined inputs).\nThe only drawback I see is that BeautfulSoup is another requirement an not a standard python package.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26180119",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26180119",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26180119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTgwMTE5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T22:41:36Z",
    "updated_at": "2013-10-11T22:41:36Z",
    "author_association": "MEMBER",
    "body": "Another drawback: BeautifulSoup 3 doesn't support Python 3. BeautifulSoup 4 does, but doesn't have its own parser - it uses the parser from lxml, html5lib, or HTMLParser. You could look into the [html5lib](https://pypi.python.org/pypi/html5lib) parser.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26208122",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-26208122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 26208122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjA4MTIy",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T23:20:45Z",
    "updated_at": "2013-10-12T23:20:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I've added a html5lib based filter approach and a markdown2html>current lxml filter in the example notebook.\n\nActually I'm still not convinced that, using a full fledged html/xml parser is necessary here. As we are delaing with markdown, we don't have valid xml > issue with lxml. BeautifulSoup is too much voodoo and the md2html preprocessor step induces issues with equations.\nWell, IMHO the HTMLParser approach still looks like the most robust and understandable one and requires no additional dependency. If we could specify some citation syntax the regex approach might be even better.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29249520",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29249520",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29249520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ5NTIw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:32:14Z",
    "updated_at": "2013-11-25T22:32:14Z",
    "author_association": "MEMBER",
    "body": "@jakobgager what are your plans on this one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29338728",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29338728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29338728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzM4NzI4",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-26T21:59:50Z",
    "updated_at": "2013-11-26T21:59:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, somehow I think that python's HTMLParser is not the most accepted tool here :smile: however, it is IMHO the most reliable approach. If we can live with the issues #4251 and #4283 then I'm fine with keeping the current lxml based approach.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29350753",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29350753",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29350753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUwNzUz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T00:35:21Z",
    "updated_at": "2013-11-27T00:35:21Z",
    "author_association": "MEMBER",
    "body": "@takluyver @ellisonbg do you still think against the HTMLParser? If this is the case, since @jakobgager is fine with the current lxml approach (with live issues), I think we could close this one...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29351455",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29351455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29351455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUxNDU1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T00:50:45Z",
    "updated_at": "2013-11-27T00:50:45Z",
    "author_association": "MEMBER",
    "body": "I don't mind HTMLParser if it does what we need. As I said above, I know HTMLParser is not the most tolerant of badly formed HTML, but I don't know whether it fails by simply ignoring anything it can't understand, or if it will make a mess of our content if something is wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29351589",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29351589",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29351589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUxNTg5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T00:53:50Z",
    "updated_at": "2013-11-27T00:53:50Z",
    "author_association": "MEMBER",
    "body": "@jakobgager could you give information about how HTMLParser fails? Do you have experienced some fails to know its behaviour?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29365082",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29365082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29365082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzY1MDgy",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T07:33:08Z",
    "updated_at": "2013-11-27T07:33:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the gist I posted above (http://nbviewer.ipython.org/6859103) I did some testing of various possible mistakes when doing citations. Maybe I should add some arbitrary (bad) HTML code in these tests as well. Are there any experiences or ideas on such badly formed HTML I should test?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29406904",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29406904",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29406904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA2OTA0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T18:12:05Z",
    "updated_at": "2013-11-27T18:12:05Z",
    "author_association": "MEMBER",
    "body": "Opening tags that don't get closed, non nested tags (i.e. not closed in reverse order of opening), invalid tag names (`<frog>`), <>& symbols which aren't part of tags...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29421825",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29421825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29421825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDIxODI1",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T21:31:33Z",
    "updated_at": "2013-11-27T21:31:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK...\n- opening tags that don't get closed are tested in `In[18,19,20,24,25,26]`\n- non nested tags in `In[27]`\n- invalid tag names in `In[24,26]`\n- symbols ><& in `In[28,29,30]`\n\nNote that in In[26,27] LXML, Soup and md2html_cite try to correct the wrong order (I don't think this is a good idea!)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29425300",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29425300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29425300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1MzAw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-27T22:25:41Z",
    "updated_at": "2013-11-27T22:25:41Z",
    "author_association": "MEMBER",
    "body": "OK, it looks like the failure mode of HTMLParser is what we want - it carries on, and leaves invalid code unchanged. Can you also do a brief test of the equivalent in Python 3.3, [html.parser](http://docs.python.org/3.3/library/html.parser.html), because the documentation suggests that the implementation has changed (\"The parser is now able to accept and parse invalid markup too.\")\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29842869",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29842869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29842869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQyODY5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-04T20:36:54Z",
    "updated_at": "2013-12-04T20:36:54Z",
    "author_association": "MEMBER",
    "body": "OK I finally have had the time to look at the different approaches. @jakobgager thanks so much for the example notebook, it really helped understand how the different approaches work/fail.\n\nI agree that the HTMLParser is the best, with a few caveats:\n- [ ] Let's turn all of your examples into tests that are run by our test suite.\n- [ ] Let's make sure that the `html.parser` in Python 3.3 works in the same way.\n\nOnce these things are done, let's merge this PR!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29846208",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-29846208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 29846208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQ2MjA4",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-04T21:14:47Z",
    "updated_at": "2013-12-04T21:14:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll try to address these points in the next few days.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30841971",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-30841971",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 30841971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQxOTcx",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T13:40:41Z",
    "updated_at": "2013-12-18T13:40:41Z",
    "author_association": "MEMBER",
    "body": "@jakobgager, any update addressing @ellisonbg's points? Thanks...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30958370",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-30958370",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 30958370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTU4Mzcw",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-19T19:31:52Z",
    "updated_at": "2013-12-19T19:31:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for the delay, unfortunately I'm quite busy these days with moving into a new flat. If someone could do the python 3.3 tests I would be really grateful (I don't have a working python 3 environment yet).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33650767",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-33650767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 33650767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjUwNzY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T01:07:11Z",
    "updated_at": "2014-01-30T01:07:11Z",
    "author_association": "MEMBER",
    "body": "Are we basically happy with this? If so, I can rebase and try to get the tests working with Python 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33653290",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-33653290",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 33653290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjUzMjkw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T01:53:06Z",
    "updated_at": "2014-01-30T01:53:06Z",
    "author_association": "MEMBER",
    "body": "> Are we basically happy with this?\n> I am enough happy... yes :wink: \n> \n> If so, I can rebase and try to get the tests working with Python 3.\n\nOnly the current tests? or you are going to transform any example from @jakobgager notebook into new tests as requested by @ellisonbg?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33654339",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-33654339",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 33654339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjU0MzM5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T02:14:22Z",
    "updated_at": "2014-01-30T02:14:22Z",
    "author_association": "MEMBER",
    "body": "There is still some work to do I think and @jdfreder was going to look at\ntaking it over.\n\nOn Wed, Jan 29, 2014 at 5:53 PM, Damián Avila notifications@github.comwrote:\n\n> Are we basically happy with this?\n> I am enough happy... yes [image: :wink:]\n> \n> If so, I can rebase and try to get the tests working with Python 3.\n> \n> Only the current tests? or you are going to transform any example from\n> @jakobgager https://github.com/jakobgager notebook into new tests as\n> requested by @ellisonbg https://github.com/ellisonbg?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4323#issuecomment-33653290\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33662600",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-33662600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 33662600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjYyNjAw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T06:04:10Z",
    "updated_at": "2014-01-30T06:04:10Z",
    "author_association": "MEMBER",
    "body": "Tomorrow after I have the widget tests sleep free, I'll move onto this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33669353",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-33669353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 33669353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY5MzUz",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T08:45:56Z",
    "updated_at": "2014-01-30T08:45:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry guys that I'm a bit lazy on this PR. Thanks @jdfreder for taking over!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34096471",
    "html_url": "https://github.com/ipython/ipython/pull/4323#issuecomment-34096471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4323",
    "id": 34096471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDk2NDcx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-04T19:23:24Z",
    "updated_at": "2014-02-04T19:23:24Z",
    "author_association": "MEMBER",
    "body": "I opened a new PR- #5025 , closing this one here.\n"
  }
]
