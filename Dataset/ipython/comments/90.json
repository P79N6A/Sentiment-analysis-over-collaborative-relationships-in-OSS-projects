[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236214",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-236214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 236214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIxNA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:57Z",
    "updated_at": "2010-05-10T09:38:57Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Brian Granger, on 2010-01-06 14:11:31+00:00 ]\n\n> Embedded shells should work in doctest.  They fail currently because\n> doctest captures stdout.  A workaround is to redirect output to stderr.\n> For 0.11 we should either implement the workaround out of the box, or\n> see if a diffderent solution is better.\n\nJust off the top of my head, redirecting stdout->stderr seems like it\nmight have undesired\nside effects.  But, if we go this route, the try/finally should be\nreplace by a context manager/with\nstatement.\n\nCheers,\n\nBrian\n\n> Bug reported on-list by Philip Gatt, see for further details:\n> \n> http://mail.scipy.org/pipermail/ipython-user/2010-January/006765.html\n> \n> Example code that works around the problem, for 0.10:\n> \n> #!/usr/bin/env python\n> \n> import sys\n> \n> from IPython.Shell import IPShellEmbed\n> \n> class IPShellDoctest(IPShellEmbed):\n>    def **call**(self, _a, *_kw):\n>        sys_stdout_saved = sys.stdout\n>        sys.stdout = sys.stderr\n>        try:\n>            IPShellEmbed.**call**(self, _a, *_kw)\n>        finally:\n>            sys.stdout = sys_stdout_saved\n> \n> def some_function():\n>   \"\"\"\n>   >>> some_function()\n>   'someoutput'\n>   \"\"\"\n>   # now try to drop into an ipython shell to help\n>   # with development\n>   IPShellDoctest()()\n>   return 'someoutput'\n> \n> if **name** == '**main**':\n>   import doctest\n>   print \"Running doctest . . .\"\n>   doctest.testmod()\n> \n> *\\* Affects: ipython\n>     Importance: Medium\n>     Assignee: Fernando Perez (fdo.perez)\n>         Status: Confirmed\n> \n> *\\* Changed in: ipython\n>   Importance: Undecided => Medium\n> \n> *\\* Changed in: ipython\n>     Assignee: (unassigned) => Fernando Perez (fdo.perez)\n> \n> ## \n> \n> Allow embedded shells to work in doctest\n> https://bugs.launchpad.net/bugs/503698\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> Embedded shells should work in doctest.  They fail currently because doctest captures stdout.  A workaround is to redirect output to stderr.  For 0.11 we should either implement the workaround out of the box, or see if a diffderent solution is better.\n> \n> Bug reported on-list by Philip Gatt, see for further details:\n> \n> http://mail.scipy.org/pipermail/ipython-user/2010-January/006765.html\n> \n> Example code that works around the problem, for 0.10:\n> \n> #!/usr/bin/env python\n> \n> import sys\n> \n> from IPython.Shell import IPShellEmbed\n> \n> class IPShellDoctest(IPShellEmbed):\n>    def **call**(self, _a, *_kw):\n>        sys_stdout_saved = sys.stdout\n>        sys.stdout = sys.stderr\n>        try:\n>            IPShellEmbed.**call**(self, _a, *_kw)\n>        finally:\n>            sys.stdout = sys_stdout_saved\n> \n> def some_function():\n>   \"\"\"\n>   >>> some_function()\n>   'someoutput'\n>   \"\"\"\n>   # now try to drop into an ipython shell to help\n>   # with development\n>   IPShellDoctest()()\n>   return 'someoutput'\n> \n> if **name** == '**main**':\n>   import doctest\n>   print \"Running doctest . . .\"\n>   doctest.testmod()\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236215",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-236215",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 236215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIxNQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:58Z",
    "updated_at": "2010-05-10T09:38:58Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Fernando Perez, on 2010-01-06 22:15:31+00:00 ]\n\nOn Wed, Jan 6, 2010 at 6:11 AM, Brian Granger ellisonbg@gmail.com wrote:\n\n> Just off the top of my head, redirecting stdout->stderr seems like it\n> might have undesired\n> side effects.  But, if we go this route, the try/finally should be\n> replace by a context manager/with\n> statement.\n\nGood points both, thanks.  We may have to live with the weird side\neffects of stderr reuse, since doctest is already hijacking stdout for\nits own purposes, but at least we should point it out.\n\nAnd a context manager is indeed a good approach for this type of\nproblem.  It may be a bit of overkill if all we end up needing is\nreally the above code, but we'll see: if we need that pattern more\nthan once or it gets more complicated, we'll use a CM, otherwise I\nthink a simply try/finally is still OK for cases like this.\n\nThanks again for the feedback!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236216",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-236216",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 236216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIxNg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:59Z",
    "updated_at": "2010-05-10T09:38:59Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Brian Granger, on 2010-01-06 22:28:26+00:00 ]\n\n> And a context manager is indeed a good approach for this type of\n> problem.  It may be a bit of overkill if all we end up needing is\n> really the above code, but we'll see: if we need that pattern more\n> than once or it gets more complicated, we'll use a CM, otherwise I\n> think a simply try/finally is still OK for cases like this.\n\nI may already have context managers that do things like this (we do\nthis type of thing all over IPython).\n\nBrian\n\n> Thanks again for the feedback!\n> \n> ## \n> \n> Allow embedded shells to work in doctest\n> https://bugs.launchpad.net/bugs/503698\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> Embedded shells should work in doctest.  They fail currently because doctest captures stdout.  A workaround is to redirect output to stderr.  For 0.11 we should either implement the workaround out of the box, or see if a diffderent solution is better.\n> \n> Bug reported on-list by Philip Gatt, see for further details:\n> \n> http://mail.scipy.org/pipermail/ipython-user/2010-January/006765.html\n> \n> Example code that works around the problem, for 0.10:\n> \n> #!/usr/bin/env python\n> \n> import sys\n> \n> from IPython.Shell import IPShellEmbed\n> \n> class IPShellDoctest(IPShellEmbed):\n>    def **call**(self, _a, *_kw):\n>        sys_stdout_saved = sys.stdout\n>        sys.stdout = sys.stderr\n>        try:\n>            IPShellEmbed.**call**(self, _a, *_kw)\n>        finally:\n>            sys.stdout = sys_stdout_saved\n> \n> def some_function():\n>   \"\"\"\n>   >>> some_function()\n>   'someoutput'\n>   \"\"\"\n>   # now try to drop into an ipython shell to help\n>   # with development\n>   IPShellDoctest()()\n>   return 'someoutput'\n> \n> if **name** == '**main**':\n>   import doctest\n>   print \"Running doctest . . .\"\n>   doctest.testmod()\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236218",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-236218",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 236218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIxOA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:39:00Z",
    "updated_at": "2010-05-10T09:39:00Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Fernando Perez, on 2010-01-06 22:52:22+00:00 ]\n\nOn Wed, Jan 6, 2010 at 2:28 PM, Brian Granger ellisonbg@gmail.com wrote:\n\n> I may already have context managers that do things like this (we do\n> this type of thing all over IPython).\n\nGreat, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/908967",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-908967",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 908967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODk2Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T18:30:30Z",
    "updated_at": "2011-03-23T18:30:30Z",
    "author_association": "MEMBER",
    "body": "Marking as dormant because IPython.frontend.terminal.InteractiveShellEmbed seems to have larger problems in trunk.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33861611",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-33861611",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 33861611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODYxNjEx",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-01T02:55:47Z",
    "updated_at": "2014-02-01T02:55:47Z",
    "author_association": "MEMBER",
    "body": "Honestly, I'm not convinced anymore this is worth the added complexity of any solution... The combination of an embedded IPython shell and doctest is already a bit exotic, and given how simple it is for users to have a little personal utility they can call with the above fix, I'd rather not put it into the code. \n\nBecause for us to put it into IPython itself, we'd want it to be configurable in the main shell (rather than exposing multiple classes), which means putting conditional code and a new context manager... Our embedding code is already kind of a rat's nest as it is, I don't really want to make it any worse.\n\nI've updated the code above to reflect how to use the current APIs, and that should be enough.\n\nClosing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33862550",
    "html_url": "https://github.com/ipython/ipython/issues/90#issuecomment-33862550",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/90",
    "id": 33862550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODYyNTUw",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-01T03:39:52Z",
    "updated_at": "2014-02-01T03:39:52Z",
    "author_association": "MEMBER",
    "body": "Note: I put the example code [in a gist](https://gist.github.com/fperez/8747615) for reference.\n"
  }
]
