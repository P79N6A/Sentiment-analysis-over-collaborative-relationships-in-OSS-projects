[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218859987",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-218859987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 218859987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODg1OTk4Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T19:25:13Z",
    "updated_at": "2016-05-12T19:25:13Z",
    "author_association": "MEMBER",
    "body": "Hi there, \n\nSorry for the delayed response, \n\nboth of the requests make sens, but are impractical or quasi impossible to implement. \n\nThe basically require too much instrumentation of the code, or, in some case prediction of the future. \nIt's roughly the equivalent of saying:\n\"I'm throwing a ball in the air, and catching it up, if i'm not going to catch it, prevent me from launching it, and give me the occasion to adjust the trajectory\". \n\nBy definition you don't know wether or not you are going to catch it, of course you **could** analyse the initial velocity and predict where the ball would fall and wether you have a chance to catch it, but it's difficult to predict that your phone will ring, and you will let the ball drop. \n\nIt's roughly the same with exceptions, you raise, (or throw) it; so there you **could** instrument your code by manipulating the ast and insert a debugger call, but there are plenty of good reason to thing that the exception will likely be caught, later and never reach user, that's likely predictable, but extremely hard seeing the highly dynamic nature of Python.\n\nTry to imagine that when you see an exception in IPython, you basically wake up from the emergency landing of a plane with the 4 reactors on fire. The traceback is the recording of the blackbox during the descent. You're already lucky to be alive, there is slim chance for you to resume your journey in the current plane, unless the plane had enough equipment to allow engineer to fix the plane in flight, in which case  that put an unreasonable price on the ticket.\n\nThe first feature, if roughly a subset of the second one, where you filter by exception type, might be easier to hack around if you explicitly execute your code with this intent, but not in deep library, probably only in user code.\n\nI invite you to (try to) play with the ast, for example look at [greenstreesnake](https://greentreesnakes.readthedocs.io/en/latest/) and wrap each statement in a `try/except KeyboardInterrupt`, you might be able to get something similar to your first request. \n\nI'm curious on how it works in emacs, is that for the lisp interpreter ? Or is code run under a debugger at all time ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218874905",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-218874905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 218874905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODg3NDkwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T20:24:33Z",
    "updated_at": "2016-05-12T20:24:33Z",
    "author_association": "MEMBER",
    "body": "It must be Analogy Thursday! ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218891837",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-218891837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 218891837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODg5MTgzNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T21:30:25Z",
    "updated_at": "2016-05-12T21:30:25Z",
    "author_association": "MEMBER",
    "body": "Well, if days of weeks were dwarfs, today would be Sneezy. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218895192",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-218895192",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 218895192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODg5NTE5Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T21:45:09Z",
    "updated_at": "2016-05-12T21:45:09Z",
    "author_association": "MEMBER",
    "body": "I'm thinking more Dopey, but perhaps that's just because I'm that much closer to tomorrow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218896288",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-218896288",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 218896288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODg5NjI4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T21:49:48Z",
    "updated_at": "2016-05-12T21:49:48Z",
    "author_association": "MEMBER",
    "body": "> I'm that much closer to tomorrow.\n\nYesterday will so be today when you will be in our tomorrow but still today for us. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/219019867",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-219019867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 219019867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTAxOTg2Nw==",
    "user": {
      "login": "antoine-levitt",
      "id": 88065,
      "node_id": "MDQ6VXNlcjg4MDY1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/88065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antoine-levitt",
      "html_url": "https://github.com/antoine-levitt",
      "followers_url": "https://api.github.com/users/antoine-levitt/followers",
      "following_url": "https://api.github.com/users/antoine-levitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/antoine-levitt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antoine-levitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antoine-levitt/subscriptions",
      "organizations_url": "https://api.github.com/users/antoine-levitt/orgs",
      "repos_url": "https://api.github.com/users/antoine-levitt/repos",
      "events_url": "https://api.github.com/users/antoine-levitt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antoine-levitt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-13T11:37:33Z",
    "updated_at": "2016-05-13T11:37:33Z",
    "author_association": "NONE",
    "body": "Hi,\n\nI have no idea how the internals of how python and ipython work, so if you tell me that can't be done I believe you. But forget about recovering from an exception: surely the ctrl-c event goes through ipython first, so ipython might be able to somehow tell the python process to break on the debugger, no?\n\nI just thought that, since gdb is able to do it on compiled code, surely ipython would be able to do it on python code, which is easier to control, but maybe that's stupid :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/219066958",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-219066958",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 219066958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTA2Njk1OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-13T14:54:26Z",
    "updated_at": "2016-05-13T14:54:26Z",
    "author_association": "MEMBER",
    "body": "You may be able to set a [signal handler](https://docs.python.org/3/library/signal.html) for SIGINT (Ctrl-C) which calls `sys.settrace` with a debugger. I haven't tried, but it's worth playing with.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/219121882",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-219121882",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 219121882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTEyMTg4Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-13T18:23:20Z",
    "updated_at": "2016-05-13T18:23:20Z",
    "author_association": "MEMBER",
    "body": "Hum, [signal.signal's handler](https://docs.python.org/3.5/library/signal.html#signal.signal) does gat as an argument the current frame, which can help, still I'm not sure how to resume from there. Also IPython and the code are literally the same process, so doesn't this has a lot of change to just break in the middle of IPython's code instead of user's one ?\n\nSo we might be able to pull that one of, but I'm unsure what would happen if we resume execution, and how to resume execution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/219136153",
    "html_url": "https://github.com/ipython/ipython/issues/9354#issuecomment-219136153",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9354",
    "id": 219136153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTEzNjE1Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-13T19:20:38Z",
    "updated_at": "2016-05-13T19:20:38Z",
    "author_association": "MEMBER",
    "body": "I haven't tried it in IPython, but running a plain script, you can do it super easily: https://gist.github.com/takluyver/8c25dcf1f175159b0c741207a6dda94a\n\nI think this could actually make a neat extension for IPython - use the [events](http://ipython.readthedocs.io/en/stable/config/callbacks.html) to toggle the debugging sigint handler when user code is running, and the normal handler that raises KeyboardInterrupt when it's in IPython internal code.\n"
  }
]
