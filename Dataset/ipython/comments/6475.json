[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55679184",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-55679184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 55679184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Njc5MTg0",
    "user": {
      "login": "ngoldbaum",
      "id": 3126246,
      "node_id": "MDQ6VXNlcjMxMjYyNDY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3126246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngoldbaum",
      "html_url": "https://github.com/ngoldbaum",
      "followers_url": "https://api.github.com/users/ngoldbaum/followers",
      "following_url": "https://api.github.com/users/ngoldbaum/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngoldbaum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngoldbaum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngoldbaum/subscriptions",
      "organizations_url": "https://api.github.com/users/ngoldbaum/orgs",
      "repos_url": "https://api.github.com/users/ngoldbaum/repos",
      "events_url": "https://api.github.com/users/ngoldbaum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngoldbaum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T00:22:15Z",
    "updated_at": "2014-09-16T00:22:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "On second thought, might it be better to check for a list or tuple of arbitrary hashable objects?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55680320",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-55680320",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 55680320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjgwMzIw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T00:39:10Z",
    "updated_at": "2014-09-16T00:39:10Z",
    "author_association": "MEMBER",
    "body": "-1 on adding this to the abbreviation syntax. interact and interactive can take full widget objects, like this:\n\n``` python\n@interact(foo=Dropdown(...))\ndef bar(foo):\n    ...\n```\n\nThe abbreviations are only for a few very simple cases, and I don't think passing a list of tuples is simple enough to justify an abbreviation like this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55681031",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-55681031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 55681031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjgxMDMx",
    "user": {
      "login": "ngoldbaum",
      "id": 3126246,
      "node_id": "MDQ6VXNlcjMxMjYyNDY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3126246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngoldbaum",
      "html_url": "https://github.com/ngoldbaum",
      "followers_url": "https://api.github.com/users/ngoldbaum/followers",
      "following_url": "https://api.github.com/users/ngoldbaum/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngoldbaum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngoldbaum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngoldbaum/subscriptions",
      "organizations_url": "https://api.github.com/users/ngoldbaum/orgs",
      "repos_url": "https://api.github.com/users/ngoldbaum/repos",
      "events_url": "https://api.github.com/users/ngoldbaum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngoldbaum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T00:49:22Z",
    "updated_at": "2014-09-16T00:50:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This came up in the context of yt fields, which are two-element tuples of strings. In that case, I was calling `keys()` on a dictionary that had yt field tuples as keys. \n\nThat's what made me comment a little while ago: perhaps it would be worth the extra complexity to be able to quickly create a dropdown list using arbitrary dictionary keys? The nice thing about `interact` and `interactive` is that it allows me to very quickly create widgets, and I think calling `keys()` on a dictionary is a pretty common thing to want to do.\n\nIf you're still -1 on that approach, I'll go ahead and close the PR and create the dropdown widget manually in my code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55681964",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-55681964",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 55681964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjgxOTY0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T01:03:28Z",
    "updated_at": "2014-09-16T01:03:28Z",
    "author_association": "MEMBER",
    "body": "I still I think it's clearer for the code to have `interact(Dropdown(d.keys())`, instead of being able to skip the `Dropdown` bit. I'd wait for a second opinion, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56035235",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-56035235",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 56035235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM1MjM1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T13:08:26Z",
    "updated_at": "2014-09-18T13:08:26Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I understand, as dict can already be passed as interact values and give dropdown. \n\nIs what you want to do reducing the key to it's string value : \n\n```\nfrom IPython.html.widgets import interact, Dropdown\n\nd = {('a','b'):1,('b','c'):2}\n\n@interact(x={str(k):v for k,v in d.items()})\ndef pp(x):\n    print(x)\n```\n\nIt shoudl work for almost all cases, and I'm not sure trying to do some magics will work in al cases. so -0.5\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56074642",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-56074642",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 56074642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDc0NjQy",
    "user": {
      "login": "ngoldbaum",
      "id": 3126246,
      "node_id": "MDQ6VXNlcjMxMjYyNDY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3126246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngoldbaum",
      "html_url": "https://github.com/ngoldbaum",
      "followers_url": "https://api.github.com/users/ngoldbaum/followers",
      "following_url": "https://api.github.com/users/ngoldbaum/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngoldbaum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngoldbaum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngoldbaum/subscriptions",
      "organizations_url": "https://api.github.com/users/ngoldbaum/orgs",
      "repos_url": "https://api.github.com/users/ngoldbaum/repos",
      "events_url": "https://api.github.com/users/ngoldbaum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngoldbaum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T17:36:07Z",
    "updated_at": "2014-09-18T17:36:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, I guess I don't agree that having IPython convert the keys to strings internally is magic, especially if it allows naive code from users to work without raising confusing exceptions inside the interactive machinery.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56074967",
    "html_url": "https://github.com/ipython/ipython/pull/6475#issuecomment-56074967",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6475",
    "id": 56074967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDc0OTY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T17:38:27Z",
    "updated_at": "2014-09-18T17:38:27Z",
    "author_association": "MEMBER",
    "body": "-1 on that as well. The abbreviations should be a minimal, consistent set of things that can be converted to widgets in obvious ways, not an attempt to hammer whatever naive users provide into some kind of widget.\n"
  }
]
