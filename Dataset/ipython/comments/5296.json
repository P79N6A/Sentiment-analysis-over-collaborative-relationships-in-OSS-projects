[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37085975",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37085975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37085975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg1OTc1",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-08T02:06:08Z",
    "updated_at": "2014-03-08T02:06:08Z",
    "author_association": "MEMBER",
    "body": "pinging fellow keyboard handling co-conspirators @ellisonbg and @jdfreder\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37218389",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37218389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37218389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjE4Mzg5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T18:41:20Z",
    "updated_at": "2014-03-10T18:41:20Z",
    "author_association": "MEMBER",
    "body": "First impressions:\n- I am strongly +1 on this cleanup. Fantastic!\n- I am hesitant to try to get this into 2.0. The changes are substantial, it doesn't fix any bugs, and would need a good amount of time to bake in master before release. We are having enough trouble as it is trying to kill all the focus bugs without another significant change like this. @minrk @takluyver @fperez thoughts?\n- I view the current behavior of `at_top` and `at_bottom` as desirable. This is how text areas usually behave and I think it is confusing to go to the next/prev cell as this PR implements unconditionally. Is this absolutely required to get the vim stuff working properly?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37218783",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37218783",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37218783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjE4Nzgz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T18:44:28Z",
    "updated_at": "2014-03-10T18:44:28Z",
    "author_association": "MEMBER",
    "body": "I'm inclined to agree - unless there's a bug that can't practically be fixed without it, it seems best to push refactoring to after the release.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37219208",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37219208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37219208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjE5MjA4",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T18:47:57Z",
    "updated_at": "2014-03-10T18:47:57Z",
    "author_association": "MEMBER",
    "body": "+1 for treading lightly on this so close to release. We already have a candidate out, let's leave this for post-2.0, no matter how good. We _always_ find surprises with big changes :)\n\nIt could go into 2.1, which I'm sure we'll need to put out before too long. @ivanov, thanks for the great work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37221897",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37221897",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37221897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjIxODk3",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T19:11:04Z",
    "updated_at": "2014-03-10T19:11:04Z",
    "author_association": "MEMBER",
    "body": "I understand the hesitation, so let me work on a summary of the things that would not be possible to do if this doesn't go in, just so we can make an informed decision about whether or not this would be worth it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37222210",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37222210",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37222210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjIyMjEw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T19:13:53Z",
    "updated_at": "2014-03-10T19:13:53Z",
    "author_association": "MEMBER",
    "body": "Thanks @ivanov that would help\n\nOn Mon, Mar 10, 2014 at 12:11 PM, Paul Ivanov notifications@github.comwrote:\n\n> I understand the hesitation, so let me work on a summary of the things\n> that would not be possible to do if this doesn't go in, just so we can make\n> an informed decision about whether or not this would be worth it.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5296#issuecomment-37221897\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37263208",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37263208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37263208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYzMjA4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T04:50:21Z",
    "updated_at": "2014-03-11T04:50:21Z",
    "author_association": "MEMBER",
    "body": "Ok, so here are the issues this PR fixes which are currently in master:\n\nIt is not possible to have `Ctrl-Enter`, `Shift-Enter`, `Alt-Enter` be handled by CodeMirror, even if user removes those shortcuts from our edit mode shortcuts. This means, for example, that one can't swap out using `Enter` for execution, and using `Shift-Enter` to insert a new line in CodeMirror.\n\nIn `master`, we have code that lets CodeMirror handle `Esc` when in `vim-insert` mode. That's great, but most vimmers use `Ctrl-[`, which acts the same as `Esc` in the terminal, since it's actually the traditional escape sequence.\n\nThis inconsistency leads to the following: you cannot get `Ctrl-[` to act like `Esc`. Either `Ctrl-[` is handled by CodeMirror vim mode _only_, or `Ctrl-[` is specified as an Edit Mode shorcut, in which case it is still passed along to CodeMirror - thus pressing `Ctrl-[` in vim-insert mode leaves _both_ vim-insert mode and IPython Edit Mode. (Whereas `Esc` behavior is to leave vim-insert mode on first keypress, and require another `Esc` to leave IPython Edit Mode).\n\nBut the special casing for `vim-insert` mode in `master` is not enough. `Esc` should also be passed along to CodeMirror when CM is in vim visual mode, but our code doesn't pass it along. So a user who sets up vim-mode for CodeMirror will be in for a rude awakening when he presses escape to cancel a visual selection, only to find himself in IPython Command mode.\n\nThe check for that is \n\n```\nif ( IPython.notebook.get_selected_cell().code_mirror.vim.visualMode )\n```\n\nI don't expect such code to make it into IPython proper, which is why I created [vimception](http://github.com/ivanov/ipython-vimception/).\n\nMore generally, any IPython Edit Mode keyboard shortcuts that a user wishes to have will still be passed along to code mirror.\n\nExcept for up and down arrow keys. Even though it is possible to remove them from IPython Edit Mode shortcuts,  they cannot be replaced with anything else (for example, to go to the next cell), because an event involving either of those two  in `master` is passed along to be handled by our shortcut system _only_ if the cursor is before the first character at the top line for up arrow,  and _only_ if the cursor is after the last character at the bottom of a cell for down arrow.\n\nSo, overall, this PR minimizes the number of keyboard shortcuts which are hard-coded, allowing for their removal and re-assignment, and reduces the number of places customization of non-default behavior needs to happen (due to `master` code duplication between TextCell and CodeCell).\n\nPinging @minrk who wanted to weigh in on this as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37318313",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37318313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37318313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE4MzEz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T16:42:58Z",
    "updated_at": "2014-03-11T16:42:58Z",
    "author_association": "MEMBER",
    "body": "I was waiting for Paul to enumerate the issues this fixes, but I would prefer this to get into 2.0. The changes here have been planned for quite a while, but Paul kept having to rebase as events and keyboard stuff kept being refactored in master. To me, this is a basic fix for shortcut customization.\n\nIf I had known people would be hesitant about this change, I would not have cut the beta without it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37340837",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37340837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37340837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQwODM3",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:44:21Z",
    "updated_at": "2014-03-11T19:44:21Z",
    "author_association": "MEMBER",
    "body": "Fair enough, I didn't originally realize that they really were necessary for things we want now. At first, I thought it was mostly refactoring/cleanup to make future work easier.\n\nGiven it seems like it's really important work for 2.0, let's just be extra careful in the review process, so we don't miss anything surprising.  We should also cut an RC with this included, just to be safe.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37341008",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37341008",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37341008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQxMDA4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:45:53Z",
    "updated_at": "2014-03-11T19:45:53Z",
    "author_association": "MEMBER",
    "body": "I am fine with this, but do feel that this stuff should be used in master for more than a few days. +1 for an RC with this stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37576471",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37576471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37576471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTc2NDcx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T19:29:53Z",
    "updated_at": "2014-03-13T19:29:53Z",
    "author_association": "MEMBER",
    "body": "@pi I just had a chance to look through this code some more, looks good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37587105",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37587105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37587105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg3MTA1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T21:08:50Z",
    "updated_at": "2014-03-13T21:08:50Z",
    "author_association": "MEMBER",
    "body": "Let's move `Cell.prototype.handle_keyevent` up next to `handle_codemirror_keyevent`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37588643",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37588643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37588643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg4NjQz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T21:23:45Z",
    "updated_at": "2014-03-13T21:23:45Z",
    "author_association": "MEMBER",
    "body": "Two problems in interactive testing:\n- The down arrow key doesn't work sometimes in a multiline code cell. \n- The up arrow key unconditionally leaves the code cell - it should behave like master: first go to position 0 on that line, then to previous cell.\n- If you have two multiline cells. 1) use the mouse to put the cursor at the end of the 2nd cell, 2) use the mouse to put the cursor at the end of the 1st cell, 3) press down. The result is that the cursor will be at the end of the 2nd cell, rather than at the beginning. The bug is that when we enter a cell using mouse navigation, we should not use the cells previous cursor state. We should always put it at the beginning (if entering from above) or end (if entering from below).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37589178",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37589178",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37589178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg5MTc4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T21:28:53Z",
    "updated_at": "2014-03-13T21:28:53Z",
    "author_association": "MEMBER",
    "body": "- Down arrow: can't reproduce yet - any pattern as to when you see a problem\n- Up arrow leaving the code cell: I see that it works like that, though I can see a case to be made that this behaviour is more natural. I guess with long output between cells, though, you want more protection against jumping between cells.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37589364",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37589364",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37589364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg5MzY0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T21:30:44Z",
    "updated_at": "2014-03-13T21:30:44Z",
    "author_association": "MEMBER",
    "body": "I can also replicate the problem you describe with moving between multiline cells.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37707319",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37707319",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37707319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA3MzE5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T23:24:46Z",
    "updated_at": "2014-03-14T23:26:25Z",
    "author_association": "MEMBER",
    "body": "I think ↑ at the top of a cell moving to the previous cell is at least as reasonable as treating a cell boundary as a document boundary _unless_ you are at cursor position zero. I think the two most logical choices are:\n1. the cursor treats all cells together as the document (↑ on the first line moves to the previous cell)\n2. the cursor treats the single cell as the document (↑ on the first line moves to the beginning, never to the previous cell without entering command mode first)\n\nI think the current in-between behavior is the most confusing choice we could make. I would lean toward 1, personally.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37707917",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37707917",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37707917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA3OTE3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T23:37:17Z",
    "updated_at": "2014-03-14T23:37:17Z",
    "author_association": "MEMBER",
    "body": "I agree that 1 is better than 2, but still feel that our current behavior\nis the best. It has a nice balance between acting just like all browser\ntext areas (up on the top line moves to position 0), but still allowing\nintercell navigation without entering command mode.\n\nOn Fri, Mar 14, 2014 at 4:24 PM, Min RK notifications@github.com wrote:\n\n> I think ↑ at the top of a cell moving to the previous cell is at least as\n> reasonable as treating a cell boundary as a document boundary _unless_you are at cursor position zero. I think the two most logical choices are:\n> 1. the cursor treats the whole document together (↑ on the first line\n>    moves to the previous cell)\n> 2. the cursor treats the single text area as a document (↑ on the\n>    first line moves to the beginning, never to the previous cell without\n>    entering command mode first)\n> \n> I think the current in-between behavior is the most confusing choice we\n> could make. I would lean toward 1, personally.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5296#issuecomment-37707319\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37882568",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37882568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37882568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODgyNTY4",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-17T23:13:17Z",
    "updated_at": "2014-03-17T23:13:17Z",
    "author_association": "MEMBER",
    "body": "@ivanov just came over to bring this to my attention; just by chatting about it, it appears I'm on the side of @ellisonbg on this one. Paul can provide further details if needed, and we also talked about the edge case for vim-mode extensively.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37896008",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37896008",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37896008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk2MDA4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-18T03:16:56Z",
    "updated_at": "2014-03-18T03:16:56Z",
    "author_association": "MEMBER",
    "body": "I've fixed the multi-line cursor memory behavior. The up and down arrow keys didn't work properly in the top and bottom cells, that's also been fixed.\n\nAlso, upon further thought and experimentation with this, it doesn't really make sense to have any kind of logic for vim mode here, since up and down keys still work the right way even when vim mode is enabled, and getting `j` and `k` keys to behave like `↓` and `↑` keys involves too much trickery to put logic for it in ipython.\n\nThis is now ready for final review and merge. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37956494",
    "html_url": "https://github.com/ipython/ipython/pull/5296#issuecomment-37956494",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5296",
    "id": 37956494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU2NDk0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-18T16:46:00Z",
    "updated_at": "2014-03-18T16:46:00Z",
    "author_association": "MEMBER",
    "body": "Strictly an improvement over master, merging.\n"
  }
]
