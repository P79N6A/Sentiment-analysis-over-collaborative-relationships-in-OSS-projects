[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70348070",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-70348070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 70348070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzQ4MDcw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-17T01:23:17Z",
    "updated_at": "2015-01-17T01:23:17Z",
    "author_association": "MEMBER",
    "body": "What do you mean by \"spit out escaped markdown\"?\n\nYou can set the display_priority config to exclude markdown altogether. Since sanitization happens in js, I'm not sure how we can add sanitization to nbconvert without including a massive js library.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70384333",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-70384333",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 70384333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzg0MzMz",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-17T21:03:58Z",
    "updated_at": "2015-01-17T21:04:10Z",
    "author_association": "MEMBER",
    "body": "By \"spit out escaped markdown\", I mean \"render markdown with the same escaping/sanitization semantics as are applied with the live notebook\".  \n\nA more fancy version of this would be something like adding an HTMLExporter option to configure a whitelist of tags to render as HTML, with any other tags being removed and/or escaped.  (If this route were considered the issue probably wouldn't be Markdown-specific so much as it would be about making it possible to configure the escaping behavior of nbconvert). I've had some success playing with [Bleach](https://pypi.python.org/pypi/bleach) locally to accomplish this.  I can probably make this work with my own local subclass of `HTMLExporter`, but I suspect that other people might benefit from having this be configurable in the default distribution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70421323",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-70421323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 70421323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDIxMzIz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-18T19:19:30Z",
    "updated_at": "2015-01-18T19:19:30Z",
    "author_association": "MEMBER",
    "body": "We should probably consider adding Bleach in the future. Marking as 4.0.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71220427",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-71220427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 71220427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjIwNDI3",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T16:31:11Z",
    "updated_at": "2015-01-23T16:31:11Z",
    "author_association": "MEMBER",
    "body": "@minrk it turns out it's actually really straightforward to do this nicely with an nbconvert Preprocessor.  Would you guys be interested in a PR to add it to the existing preprocessor library?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71222292",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-71222292",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 71222292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjIyMjky",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T16:40:48Z",
    "updated_at": "2015-01-23T16:40:48Z",
    "author_association": "MEMBER",
    "body": "> @minrk it turns out it's actually really straightforward to do this nicely with an nbconvert Preprocessor. Would you guys be interested in a PR to add it to the existing preprocessor library?\n\nSure, we can always review it, even if it it not merged, at least it is reviewed and easy to make standalone.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71240554",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-71240554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 71240554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjQwNTU0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T18:32:43Z",
    "updated_at": "2015-01-23T18:32:43Z",
    "author_association": "MEMBER",
    "body": "I think it makes sense, but we can review it after we get 3.0 out the door.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71474517",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-71474517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 71474517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDc0NTE3",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-26T15:08:29Z",
    "updated_at": "2015-01-26T15:08:29Z",
    "author_association": "MEMBER",
    "body": "Proposal for this lives at #7595 \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316769619",
    "html_url": "https://github.com/ipython/ipython/issues/7488#issuecomment-316769619",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7488",
    "id": 316769619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2OTYxOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:09:27Z",
    "updated_at": "2017-07-20T17:09:27Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  }
]
