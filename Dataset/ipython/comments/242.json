[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/665168",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-665168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 665168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTE2OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-09T23:31:17Z",
    "updated_at": "2011-01-09T23:31:17Z",
    "author_association": "MEMBER",
    "body": "I've updated it after Brian pointed out that the test suite was having trouble too. Now the thread's stop() method is called by the `atexit` handler. I've also rewritten the thread's stopping system to use a `threading.Event`, rather than a `threading.Condition` and boolean flag.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/666754",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-666754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 666754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Njc1NA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T17:13:42Z",
    "updated_at": "2011-01-10T17:13:42Z",
    "author_association": "MEMBER",
    "body": "I do think we should try to figure out a good way of handling this, rather than just removing it entirely.  But I have a few questions about the history save mechanism:\n- Prior to the recent history refactor, there was no need to to use a thread to save the history.  Why is this approach needed now?  Why can't we do what we always were?\n- How does the kernel for the qtconsole save the history?\n\nBut, I do like the usage of the Event better than the condition variable approach.  The only comment I have about the code is that the initialization of this stuff in interactiveshell should happen in the init_history method.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/666873",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-666873",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 666873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Njg3Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T18:00:37Z",
    "updated_at": "2011-01-10T18:00:37Z",
    "author_association": "MEMBER",
    "body": "I confess I'm not entirely sure about the reasons behind it--I don't really use history beyond hitting up once or twice. Presumably, the point of a periodic autosave is to preserve your history in case of a crash. In which case, we'd probably need a repeatable crash to test that it's working. I'll drop the author an e-mail.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667010",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667010",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzAxMA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T18:50:22Z",
    "updated_at": "2011-01-10T18:50:22Z",
    "author_association": "MEMBER",
    "body": "Thanks for following up on this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667056",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667056",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzA1Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T19:08:20Z",
    "updated_at": "2011-01-10T19:08:20Z",
    "author_association": "MEMBER",
    "body": "I think this fix looks good.  I don't ever use the exit command, so I missed this during the review (it came up in the prompted exit, and we fixed it there).\n\nThe reason behind it is periodic autosave, to preserve history even in case of a crash.  It also means that if you have a long running session, and you start another session, it will have a more current history at load.\n\nIn answer to Brian:\n- This is entirely new, so there's no 'do what we always did' option, unless you mean 'lose everything if it crashes', which is what we did before.  \n- qtconsole does not save the history, the Kernel does, and it still saves at exit as before.  This background thread is purely in addition to the regular behavior.\n\nI should probably stop reviewing IPython code, as there always seems to be a problem when I do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667079",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzA3OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T19:18:44Z",
    "updated_at": "2011-01-10T19:18:44Z",
    "author_association": "MEMBER",
    "body": "Min, thanks for the comments.  So you are saying that the original behavior is that the history gets saved at exit and that this happens in both the terminal based ipython and the ipkernel.  The new behavior simply adds autosaving that happens _while_ the processes run.  Is that a good description?  If so, let's do the following:\n- Add docs to the history saving class that indicate that this is what it does.\n- Move the initialization of this stuff from **init** to init_history.\n\nOnce that is done I will give it a final review and merge into master.\n\n> I should probably stop reviewing IPython code, as there always seems to be a problem when I do\n\nMin, oh no, please continue reviewing.  IPython is a huge project and things like this are difficult to test.  I can hardly keep track of things myself.  My rule is that _any review is better than none._  Thanks for helping out with this stuff!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667117",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667117",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzExNw==",
    "user": {
      "login": "mchandra",
      "id": 527239,
      "node_id": "MDQ6VXNlcjUyNzIzOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/527239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mchandra",
      "html_url": "https://github.com/mchandra",
      "followers_url": "https://api.github.com/users/mchandra/followers",
      "following_url": "https://api.github.com/users/mchandra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mchandra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mchandra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mchandra/subscriptions",
      "organizations_url": "https://api.github.com/users/mchandra/orgs",
      "repos_url": "https://api.github.com/users/mchandra/repos",
      "events_url": "https://api.github.com/users/mchandra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mchandra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T19:34:07Z",
    "updated_at": "2011-01-10T19:35:33Z",
    "author_association": "NONE",
    "body": "Hi,\n    I'm sorry for the trouble caused by the patch I sent. I should have done an exhaustive check before sending a pull request. I intended for it to periodically backup the commands since I frequently use ipython remotely and have lost many sessions due to network problems. I tried to put it in the main kernel so that it will work for both the terminal and qt interfaces but it didn't work out. I can try again to fix it or perhaps the concept can be implemented in a better way?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667209",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667209",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzIwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T20:05:28Z",
    "updated_at": "2011-01-10T20:05:28Z",
    "author_association": "MEMBER",
    "body": "Regarding having two IPython instances open: what does history do in this case? It appears there is a common file for the user, in ~/.ipython/history.json. Does it just end up with whichever interpreter happened to last save it? If they exit normally, that should be the last one to close, which is probably sane behaviour. We probably don't want the two histories interleaved. And could the file get corrupted if two processes attempt to write to it simultaneously?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667246",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzI0Ng==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T20:19:23Z",
    "updated_at": "2011-01-10T20:19:23Z",
    "author_association": "MEMBER",
    "body": "I don't think anyone has thought about these issues yet.  Minimally we need to add some notes to the code about this.  Because the history is so extremely useful, I think we should leave it in, but continue to discuss the best model.  Currently, it is entirely possible that the history file would be corrupted and multiple histories would definitely be interleaved.  This definitely needs some further though.  I would love to get Fernando and Santra's thoughts on this as they implemented the history functionality.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667286",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzI4Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T20:35:15Z",
    "updated_at": "2011-01-10T20:35:15Z",
    "author_association": "MEMBER",
    "body": "I've filled out the docstrings a bit.\n\nBrian: I agree, lets move discussion of that onto the mailing list.\n\nMani: Don't worry, these things happen. I don't know that I'd have spotted it, either--I almost always use Ctrl-D to exit. If you've got time, can you test my branch, and check that it's doing what you expect if you lose a connection?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667321",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzMyMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T20:45:00Z",
    "updated_at": "2011-01-10T20:45:00Z",
    "author_association": "MEMBER",
    "body": "As for multiple histories, it's the same for autosave as for regular save.  If two processes try writing to a file at the exact same time, you can have corruption.  We could add a lock file for this if we want to be fairly rigorous, but it's only during the time of a pending write that that can happen, which is quite short, unless you have an enormous history and/or incredibly slow filesystem.\n\nSince the new history is now json, and not the line-based readline history, if they are interleaved it will no longer be valid, and thus corrupted, so it's more important to avoid than it used to be.\n\nJSON was chosen since it can support multiline history.  If you have ever tried to go reconstruct multiline entries from your history in 0.10 between sessions, it was pretty painful.\n\nBrian - yes, your description of autosave was accurate.  I don't know how to go about making the tweaks, since there is already this pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/667789",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-667789",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 667789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzc4OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T23:42:03Z",
    "updated_at": "2011-01-10T23:42:03Z",
    "author_association": "MEMBER",
    "body": "I've added a try/except block in `reload_history`, so that it will ignore previous history if the JSON file is corrupt. Without that, breaking the JSON left IPython unable to start.\n\nAt present, it will just silently ignore it, and the next `save_history` will overwrite it. I don't know if we want to print a warning, log the problem, or clear the history file straight away.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/668219",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-668219",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 668219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODIxOQ==",
    "user": {
      "login": "mchandra",
      "id": 527239,
      "node_id": "MDQ6VXNlcjUyNzIzOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/527239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mchandra",
      "html_url": "https://github.com/mchandra",
      "followers_url": "https://api.github.com/users/mchandra/followers",
      "following_url": "https://api.github.com/users/mchandra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mchandra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mchandra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mchandra/subscriptions",
      "organizations_url": "https://api.github.com/users/mchandra/orgs",
      "repos_url": "https://api.github.com/users/mchandra/repos",
      "events_url": "https://api.github.com/users/mchandra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mchandra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-11T04:13:35Z",
    "updated_at": "2011-01-12T10:23:02Z",
    "author_association": "NONE",
    "body": "Hi Thomas, I've tested out your branch and it works nicely. I have simulated crashes by running ipython in a screen session and killing the session without exiting ipython. The history was saved and I was able to recover all the commands.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/677294",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-677294",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 677294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NzI5NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-14T10:47:26Z",
    "updated_at": "2011-01-14T10:47:26Z",
    "author_association": "MEMBER",
    "body": "Thanks, Mani. If someone's got time to review this and merge it this weekend, then we should be passing the tests again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/698083",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-698083",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 698083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODA4Mw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T04:49:23Z",
    "updated_at": "2011-01-22T04:49:23Z",
    "author_association": "MEMBER",
    "body": "I've reviewed this, and it looks solid, thanks!\n But I think someone other than me should do the sign-off and merge, since it's my error that's being fixed here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/698713",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-698713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 698713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODcxMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T15:56:19Z",
    "updated_at": "2011-01-22T15:56:19Z",
    "author_association": "MEMBER",
    "body": "Thanks, Min.\n\nBrian, if you've got a few minutes, could you do a final review on this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/699166",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-699166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 699166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTE2Ng==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T19:38:48Z",
    "updated_at": "2011-01-22T19:38:48Z",
    "author_association": "MEMBER",
    "body": "Fernando had a great idea about this yesterday.  Currently, the existing approach is not thread safe as the history save method is called from a thread.  To make this thread safe, we can put a condition variable in the IPython \"event loop\" that the thread can set.  When it is set, IPython will save the history, but that happens in the main thread.  How does this sound?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/699169",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-699169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 699169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTE2OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T19:39:19Z",
    "updated_at": "2011-01-22T19:39:19Z",
    "author_association": "MEMBER",
    "body": "I will be on #ipython around 12:30 PST today if you want to chat about this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/699568",
    "html_url": "https://github.com/ipython/ipython/pull/242#issuecomment-699568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/242",
    "id": 699568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTU2OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T23:36:22Z",
    "updated_at": "2011-01-22T23:36:22Z",
    "author_association": "MEMBER",
    "body": "Autosave system modified following discussion with Brian on IRC.\n\nI've refactored somewhat - the autosave timer thread is now an attribute of the history manager, rather than directly of the InteractiveShell. This led to an error on shutdown in the tests, as one test created a separate HistoryManager, thereby starting a second autosave thread, which wasn't stopped. So now the HistorySaveThread registers its stop method with atexit upon creation, separate from the cleanup in `InteractiveShell.atexit_operations`. I think this makes for a neater encapsulation.\n"
  }
]
