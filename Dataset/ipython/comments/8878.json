[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146212062",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146212062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146212062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIxMjA2Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T14:32:44Z",
    "updated_at": "2015-10-07T14:32:44Z",
    "author_association": "MEMBER",
    "body": "There does appear to be a difference in your two cases, where one has a trailing slash and the other doesn't. I'm not sure if that's relevant, but can you verify that the behavior is different with the _exact same env_?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146215939",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146215939",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146215939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIxNTkzOQ==",
    "user": {
      "login": "nicolavianello",
      "id": 524279,
      "node_id": "MDQ6VXNlcjUyNDI3OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/524279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolavianello",
      "html_url": "https://github.com/nicolavianello",
      "followers_url": "https://api.github.com/users/nicolavianello/followers",
      "following_url": "https://api.github.com/users/nicolavianello/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolavianello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolavianello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolavianello/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolavianello/orgs",
      "repos_url": "https://api.github.com/users/nicolavianello/repos",
      "events_url": "https://api.github.com/users/nicolavianello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolavianello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T14:41:52Z",
    "updated_at": "2015-10-07T14:41:52Z",
    "author_association": "NONE",
    "body": "Hi I've checked now the answer is exactly the same in both the env\nPython \n\n```\n>>> os.getenv('DYLD_LIBRARY_PATH')\n'/usr/local/mdsplus/lib'\n```\n\nIpython \n\n```\nIn [2]: os.getenv('DYLD_LIBRARY_PATH')\nOut[2]: '/usr/local/mdsplus/lib'\n```\n\nand the same with LD_LIBRARY_PATH\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146217280",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146217280",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146217280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIxNzI4MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T14:46:52Z",
    "updated_at": "2015-10-07T14:46:52Z",
    "author_association": "MEMBER",
    "body": "Hm. IPython doesn't touch anything to do with library paths, so I don't really understand what could be different. Can you share `env | grep LIBRARY` in the shell prior to starting IPython or Python? Can you try setting the env in the shell, and make sure you _don't_ modify os.environ once the interpreter has started up?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146226199",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146226199",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146226199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIyNjE5OQ==",
    "user": {
      "login": "nicolavianello",
      "id": 524279,
      "node_id": "MDQ6VXNlcjUyNDI3OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/524279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolavianello",
      "html_url": "https://github.com/nicolavianello",
      "followers_url": "https://api.github.com/users/nicolavianello/followers",
      "following_url": "https://api.github.com/users/nicolavianello/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolavianello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolavianello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolavianello/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolavianello/orgs",
      "repos_url": "https://api.github.com/users/nicolavianello/repos",
      "events_url": "https://api.github.com/users/nicolavianello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolavianello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T15:14:03Z",
    "updated_at": "2015-10-07T15:14:03Z",
    "author_association": "NONE",
    "body": "so the output of the command \n\n```\nenv | grep LIBRARY\n```\n\nis empty actually (the setting is done directly on /etc/profile), whereas if I do an\n\n```\necho $DYLD_LIBRARY_PATH\n/usr/local/mdsplus/lib\n```\n\nI've tried to set in the shell the environment again\n\n```\nexport DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/usr/local/mdsplus/lib\nexport LD_LIBRARY_PATH=/usr/local/mdsplus/lib\n```\n\nand this is the answer\n\n```\nPython 2.7.10 |Anaconda 2.3.0 (x86_64)| (default, Sep 15 2015, 14:29:08) \n[GCC 4.2.1 (Apple Inc. build 5577)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n>>> import MDSplus\n>>> import os\n>>> os.getenv('DYLD_LIBRARY_PATH')\n'/usr/local/mdsplus/lib:/usr/local/mdsplus/lib'\n```\n\nwhereas for ipython\n\n```\nPython 2.7.10 |Anaconda 2.3.0 (x86_64)| (default, Sep 15 2015, 14:29:08) \nType \"copyright\", \"credits\" or \"license\" for more information.\nIPython 4.0.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\nUsing matplotlib backend: MacOSX\n\nIn [1]: import os\nIn [2]: os.getenv('DYLD_LIBRARY_PATH')\n```\n\nAs you can see, setting the library in the shell before opening ipython does not load the environment settings. I have to add that this problem only happened after upgrading to OSX 10.11\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146229427",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146229427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146229427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIyOTQyNw==",
    "user": {
      "login": "jenshnielsen",
      "id": 548266,
      "node_id": "MDQ6VXNlcjU0ODI2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jenshnielsen",
      "html_url": "https://github.com/jenshnielsen",
      "followers_url": "https://api.github.com/users/jenshnielsen/followers",
      "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions",
      "organizations_url": "https://api.github.com/users/jenshnielsen/orgs",
      "repos_url": "https://api.github.com/users/jenshnielsen/repos",
      "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jenshnielsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T15:24:03Z",
    "updated_at": "2015-10-07T15:24:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can reproduce this on OSX but only when using Conda. It seems to be caused by by the hash bang in the conda script.\n\n```\n#!/bin/bash /Users/jhn/miniconda3/bin/python.app\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146256944",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146256944",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146256944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI1Njk0NA==",
    "user": {
      "login": "nicolavianello",
      "id": 524279,
      "node_id": "MDQ6VXNlcjUyNDI3OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/524279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolavianello",
      "html_url": "https://github.com/nicolavianello",
      "followers_url": "https://api.github.com/users/nicolavianello/followers",
      "following_url": "https://api.github.com/users/nicolavianello/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolavianello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolavianello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolavianello/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolavianello/orgs",
      "repos_url": "https://api.github.com/users/nicolavianello/repos",
      "events_url": "https://api.github.com/users/nicolavianello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolavianello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T16:39:11Z",
    "updated_at": "2015-10-07T16:39:11Z",
    "author_association": "NONE",
    "body": "Is there a fix I can use for this hash bang problem?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146263330",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146263330",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146263330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI2MzMzMA==",
    "user": {
      "login": "jenshnielsen",
      "id": 548266,
      "node_id": "MDQ6VXNlcjU0ODI2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jenshnielsen",
      "html_url": "https://github.com/jenshnielsen",
      "followers_url": "https://api.github.com/users/jenshnielsen/followers",
      "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions",
      "organizations_url": "https://api.github.com/users/jenshnielsen/orgs",
      "repos_url": "https://api.github.com/users/jenshnielsen/repos",
      "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jenshnielsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T17:03:56Z",
    "updated_at": "2015-10-07T17:03:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I got it working by modifying the hashbang to be \n\n```\n#!/Users/jhn/miniconda3/bin/python\n```\n\nbut I don't know why the Conda hashbang looks like this and modifying it is on your own risk. It may cause other things to fail \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/146466453",
    "html_url": "https://github.com/ipython/ipython/issues/8878#issuecomment-146466453",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8878",
    "id": 146466453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQ2NjQ1Mw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T09:13:31Z",
    "updated_at": "2015-10-08T09:13:31Z",
    "author_association": "MEMBER",
    "body": "This appears to be a conda issue. They seem to be explicitly stripping DYLD_LIBRARY_PATH on entrypoints:\n\n```\n(test) $ export DYLD_LIBRARY_PATH=foo\n(test) $ ~/conda/envs/test/bin/python -c \"import os; print(os.environ.get('DYLD_LIBRARY_PATH'))\"\nfoo\n(test) $ ~/conda/envs/test/bin/python.app -c \"import os; print(os.environ.get('DYLD_LIBRARY_PATH'))\"\nNone\n(test) $ ~/conda/envs/test/bin/ipython -c \"import os; print(os.environ.get('DYLD_LIBRARY_PATH'))\"\nNone\n(test) $ ~/conda/envs/test/bin/python -m IPython -c \"import os; print(os.environ.get('DYLD_LIBRARY_PATH'))\"\nfoo\n(test) $ export OTHER_ENV=bar\n(test) $ ~/conda/envs/test/bin/python.app -c \"import os; print(os.environ.get('OTHER_ENV'))\"\nbar\n```\n"
  }
]
