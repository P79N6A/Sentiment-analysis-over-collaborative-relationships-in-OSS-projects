[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12460466",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12460466",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12460466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDYwNDY2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-19T20:18:40Z",
    "updated_at": "2013-01-19T20:18:40Z",
    "author_association": "MEMBER",
    "body": "This would be nice.  It points to a general shortcoming of the config system as it is:  We have no way of making changes to config at runtime, and then persisting those changes for future sessions. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12802579",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12802579",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12802579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODAyNTc5",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T20:27:36Z",
    "updated_at": "2013-01-28T20:27:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12802921",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12802921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12802921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODAyOTIx",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T20:33:33Z",
    "updated_at": "2013-01-28T20:33:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also this should be fixed:\n\nWM_CLASS(STRING) = \"\", \"\"\n\nin order to let WMs config their own rules to set geometry.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12803244",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12803244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12803244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODAzMjQ0",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T20:38:59Z",
    "updated_at": "2013-01-28T20:38:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Meanwhile here's a workaround if you use an EWMH/NetWM compatible X Window Manager. Also you will need wmctrl.\n\n#!/bin/bash\n\nrules=\"$1\"\nshift\n\"$@\" &\npid=$!\n\nfor i in {1..50}\ndo\n  wid=$(wmctrl -lp | sed -nr \"s/^([^ ]+) +[^ ]+ +$pid.*$/\\1/p\")\n  [[ $wid ]] && exec wmctrl -i -r $wid $rules\n  sleep .05\ndone\n\nSave this as -say- xexec and then execute:\n\nxexec \"-e 0,118,0,1042,975\" ipython2 qtconsole\n\nin order to get a x1=118,y1=0,x2=1042,y2=975 geometry.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12803406",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12803406",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12803406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODAzNDA2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T20:41:51Z",
    "updated_at": "2013-01-28T20:41:51Z",
    "author_association": "MEMBER",
    "body": "What is the relevance of WM_CLASS to IPython?  That string appears nowhere in IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12804075",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12804075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12804075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODA0MDc1",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T20:54:41Z",
    "updated_at": "2013-01-28T20:56:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "WM_CLASS is a property of X windows that should be provided by well behaved applications in order to let the Window Manager and other applications identify the window. This is used for resource settings, startup rules, etc. The relevance is for qtconsole only. In the case of the zmq and terminal consoles the terminal emulator is responsible for setting its own class and name properties.\n\nBTW: this was part of the output of xprop for the qtconsole client:\n\nWM_CLASS(STRING) = \"\", \"\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12805328",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12805328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12805328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODA1MzI4",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T21:18:20Z",
    "updated_at": "2013-01-28T21:18:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Possibly relevant: http://stackoverflow.com/questions/11846029/customize-wm-name-and-wm-class-as-shown-by-xprop-in-pyqt4\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12805576",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-12805576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 12805576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODA1NTc2",
    "user": {
      "login": "memeplex",
      "id": 2845433,
      "node_id": "MDQ6VXNlcjI4NDU0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/memeplex",
      "html_url": "https://github.com/memeplex",
      "followers_url": "https://api.github.com/users/memeplex/followers",
      "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
      "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
      "organizations_url": "https://api.github.com/users/memeplex/orgs",
      "repos_url": "https://api.github.com/users/memeplex/repos",
      "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/memeplex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-28T21:23:30Z",
    "updated_at": "2013-01-28T21:26:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to add that usually it's ok if the application just set this properties with appropriate values that the user is not able to customize afterwards. Further customization is a nice too have, but something fixed forever like \"IPQtConsole\", \"ipqtconsole\" would be fine. If the user could then apply custom settings per profile would be cool but lowest priority.\n\nAlso window managers are able to apply settings according to properties at the time they start managing the client. Later, when the ipython configuration run may be too late to set them (I don't know the precise timing of events that take place during ipython initialization). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234366543",
    "html_url": "https://github.com/ipython/ipython/issues/1221#issuecomment-234366543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1221",
    "id": 234366543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM2NjU0Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T20:01:16Z",
    "updated_at": "2016-07-21T20:01:16Z",
    "author_association": "MEMBER",
    "body": "Hi, \n\nThe qtconsole has been moved to https://github.com/jupyter/qtconsole, and this issue had no activity for quite some time. If this is still relevant I would suggest this issue to be reopen on the above cited repository. \n\nThis will allow us to keep the number of IPython issues smaller and focussed on IPython. As currently there is an extremely high number of opened issues , it make it really hard to find if a problem is actually known, or going to be worked one. \n\nFeel free to reopen if need, for the time being I'm going to close this. \n\nThanks.\n"
  }
]
