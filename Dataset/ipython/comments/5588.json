[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40224164",
    "html_url": "https://github.com/ipython/ipython/issues/5588#issuecomment-40224164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5588",
    "id": 40224164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI0MTY0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-11T16:42:03Z",
    "updated_at": "2014-04-11T16:42:03Z",
    "author_association": "MEMBER",
    "body": "I don't think we're going to do this any time soon, because we'd have to build a different wheel for each Python version. It's easy for distributions to add if they want to, and you can do `python3.4 -m IPython` if you want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40236534",
    "html_url": "https://github.com/ipython/ipython/issues/5588#issuecomment-40236534",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5588",
    "id": 40236534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjM2NTM0",
    "user": {
      "login": "mgorny",
      "id": 110765,
      "node_id": "MDQ6VXNlcjExMDc2NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgorny",
      "html_url": "https://github.com/mgorny",
      "followers_url": "https://api.github.com/users/mgorny/followers",
      "following_url": "https://api.github.com/users/mgorny/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions",
      "organizations_url": "https://api.github.com/users/mgorny/orgs",
      "repos_url": "https://api.github.com/users/mgorny/repos",
      "events_url": "https://api.github.com/users/mgorny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgorny/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-11T18:11:01Z",
    "updated_at": "2014-04-11T18:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't understand your concern. I'm just pretty much asking for extra suffix on scripts based e.g. on `sys.version_info[:2]`.\n\nAFAICS IPython has already some suffixing code. I'd guess something like the following could work (can re-submit as pull request if you like the idea):\n\n```\ndiff --git a/setupbase.py b/setupbase.py\nindex 9120369..bbaee67 100644\n--- a/setupbase.py\n+++ b/setupbase.py\n@@ -371,7 +371,9 @@ def find_entry_points():\n             'iptest%s = IPython.testing.iptestcontroller:main',\n         ]\n     suffix = str(sys.version_info[0])\n-    return [e % '' for e in ep] + [e % suffix for e in ep]\n+    suffix_full = '.'.join([str(x) for x in sys.version_info[:2]])\n+    return ([e % '' for e in ep] + [e % suffix for e in ep]\n+            + [e % suffix_full for e in ep])\n\n script_src = \"\"\"#!{executable}\n # This script was automatically generated by setup.py\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40240226",
    "html_url": "https://github.com/ipython/ipython/issues/5588#issuecomment-40240226",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5588",
    "id": 40240226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQwMjI2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-11T18:47:20Z",
    "updated_at": "2014-04-11T18:47:20Z",
    "author_association": "MEMBER",
    "body": "When you install a wheel, as pip now does by default, setup.py isn't run. The metadata on wheels doesn't allow specifying scripts conditionally yet. So if we built a wheel with Python 3.3 and you installed it with Python 3.4, you'd get scripts named `ipython3.3`, which would start IPython with 3.4. To get round that, we'd have to build one wheel for each supported Python version, which I don't think we want to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40240497",
    "html_url": "https://github.com/ipython/ipython/issues/5588#issuecomment-40240497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5588",
    "id": 40240497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQwNDk3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-11T18:49:58Z",
    "updated_at": "2014-04-11T18:49:58Z",
    "author_association": "MEMBER",
    "body": "My understanding is that this will be possible with wheel metadata format 2.0. So we can do this when that is finalized, but probably not before.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/239599930",
    "html_url": "https://github.com/ipython/ipython/issues/5588#issuecomment-239599930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5588",
    "id": 239599930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTU5OTkzMA==",
    "user": {
      "login": "moloney",
      "id": 1376566,
      "node_id": "MDQ6VXNlcjEzNzY1NjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1376566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moloney",
      "html_url": "https://github.com/moloney",
      "followers_url": "https://api.github.com/users/moloney/followers",
      "following_url": "https://api.github.com/users/moloney/following{/other_user}",
      "gists_url": "https://api.github.com/users/moloney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moloney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moloney/subscriptions",
      "organizations_url": "https://api.github.com/users/moloney/orgs",
      "repos_url": "https://api.github.com/users/moloney/repos",
      "events_url": "https://api.github.com/users/moloney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moloney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T03:44:33Z",
    "updated_at": "2016-08-13T03:44:33Z",
    "author_association": "NONE",
    "body": "Currently trying to do parallel python2/python3 installs from wheels is broken for what I gather is the same reason.\n\nDoing \"pip install ipython\" creates the entry points `ipython` and `ipython3` but they both end up using python2.  Doing \"pip3 install ipython\" leaves you with the same two entry points but now they both end up using python3. \n\nI can use the `--no-binary ipython` option for pip to avoid installing from wheels and then the situation improves. Installing with python2 gives me `ipython` and `ipython2` entry points. Installing with python3 gives me a new `ipython3` entry point and leaves the `ipython2` entry point alone, but it does clobber the `ipython` entry point so it becomes python3 instead of python2.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/239617912",
    "html_url": "https://github.com/ipython/ipython/issues/5588#issuecomment-239617912",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5588",
    "id": 239617912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYxNzkxMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T12:14:08Z",
    "updated_at": "2016-08-13T12:14:08Z",
    "author_association": "MEMBER",
    "body": "We built the wheels incorrectly for 5.0; see #9869 \n"
  }
]
