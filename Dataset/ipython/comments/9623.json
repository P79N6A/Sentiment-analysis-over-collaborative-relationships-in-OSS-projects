[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226333015",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226333015",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226333015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjMzMzAxNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T21:59:54Z",
    "updated_at": "2016-06-15T21:59:54Z",
    "author_association": "MEMBER",
    "body": "That's extremely hard:\n\n```\nIn [34]: len(get_ipython()._app.key_bindings_registry.key_bindings)\nOut[34]: 491\n```\n\nThe following can help getting started, but with all the filters, it's difficult to auto generate docs on when are some keybindings active. \n\n```\nIn [35]: for kb in get_ipython()._app.key_bindings_registry.key_bindings:\n    ...:     print(kb.keys)\n    ...:     doc = kb.handler.__doc__\n    ...:     print(indent(dedent(doc if doc else '<NoDocs>'), '    '))\n    ...:     print('\\n')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226478120",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226478120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226478120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjQ3ODEyMA==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T13:01:52Z",
    "updated_at": "2016-06-16T13:04:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, I would like to try and generate this, but I'm not familiar with PTK as you are ;)\n\nFor example, for many shortcuts I get just default doctring: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/prompt_toolkit/key_binding/bindings/basic.py#L108 i.e.:\n\n``` python\nIn [3]: kb.keys\nOut[3]: (Key('<C-D>'),)\n\nIn [4]: print(kb.handler.__doc__)\n\n        First, for any of these keys, Don't do anything by default. Also don't\n        catch them in the 'Any' handler which will insert them as data.\n\n        If people want to insert these characters as a literal, they can always\n        do by doing a quoted insert. (ControlQ in emacs mode, ControlV in Vi\n        mode.)\n```\n\nWhile I would like to get filter definition and this doctring for Ctrl+D: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/prompt_toolkit/key_binding/bindings/basic.py#L134\n\nAny tips?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226542046",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226542046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226542046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU0MjA0Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T16:39:19Z",
    "updated_at": "2016-06-16T16:39:19Z",
    "author_association": "MEMBER",
    "body": "Hum, I'm not sure, I hacked that together yesterday...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226546938",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226546938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226546938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU0NjkzOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T16:57:22Z",
    "updated_at": "2016-06-16T16:57:22Z",
    "author_association": "MEMBER",
    "body": "It's there it just duplicated\n\n```\nfrom textwrap import indent, dedent\n\nfor i,kb in enumerate(get_ipython()._app.key_bindings_registry.key_bindings[:180]):\n    doc = kb.handler.__doc__\n    if not doc or doc.strip().startswith(\"First\"):\n        continue\n\n    strkey = kb.keys[0] if isinstance(kb.keys[0], str) else kb.keys[0].name\n    if 'C-D' not in strkey:\n        continue\n    print(i, strkey)\n\n\n    print(indent(dedent(doc if doc else '<NoDocs>'), '    '))\n    print('\\n')\n```\n\n```\nIn [19]: run kb\n73 <C-D>\n    Delete text before cursor.\n\n\n104 <C-D>\n    Exit on Control-D when the input is empty.\n\n\n133 <C-Delete>\n\n    Delete word after cursor.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226583621",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226583621",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226583621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU4MzYyMQ==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T19:09:12Z",
    "updated_at": "2016-06-16T19:09:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @Carreau :)\n\nI further limited keys to `Ctrl+`, but results are not satisfactory for making it into docs, while I can't see other ways to get bindings:\n\n```\n<C-A> Start of line\n<C-B> Character back\n<C-C> Abort an incremental search and restore the original line\n<C-C> Abort when Control-C has been pressed\n<C-C> Cancel search\n<C-C> Indent selected text\n<C-C> Unindent selected text\n<C-D> Delete text before cursor\n<C-D> Exit on Control-D when the input is empty\n<C-Delete> Delete word after cursor\n<C-E> Accept suggestion\n<C-E> Cancel completion\n<C-E> End of line\n<C-F> Accept suggestion\n<C-F> Character forward\n<C-G> Abort an incremental search and restore the original line\n<C-G> Cancel selection\n<C-G> Control + G: Cancel completion menu and validation state\n<C-H> Backspace: delete before cursor\n<C-H> Cancel search\n<C-H> In navigation-mode, move cursor\n<C-I> Ctrl-I is identical to \"\\t\" Traditional tab-completion, where the first tab completes the common suffix and the second tab lists all the completions\n<C-J> Apply the search\n<C-J> Enter, accept input\n<C-J> In navigation mode, pressing enter will always return the input\n<C-J> Newline (in case of multiline input\n<C-J> When enter pressed in isearch, quit isearch mode\n<C-K> Go into digraph mode\n<C-L> Clear whole screen and redraw\n<C-Left> Cursor to start of previous word\n<C-N> Arrow down and Control-N in navigation mode\n<C-N> Control-N in vi edit mode on readline is history previous, unlike default prompt toolkit\n<C-N> Next line\n<C-O> Insert newline, but don't move the cursor\n<C-P> Arrow up and ControlP in navigation mode go up\n<C-P> Control-P in vi edit mode on readline is history next, unlike default prompt toolkit\n<C-P> Control-P: To previous completion\n<C-P> Previous line\n<C-Q> Quoted insert\n<C-R> Vi-style backward search\n<C-Right> Cursor to end of next word\n<C-S> Vi-style forward search\n<C-Space> Start of the selection (if the current buffer is not empty)\n<C-SquareClose> When Ctl-] + a character is pressed\n<C-T> Emulate Emacs transpose-char behavior: at the beginning of the buffer, do nothing\n<C-U> Clears the line before the cursor position\n<C-Underscore> Undo\n<C-V> Enter block selection mode\n<C-V> Exit block selection mode, or go from non block selection mode to block selection mode\n<C-V> Insert a character literally (quoted insert)\n<C-W> Cut selected text\n<C-W> Delete the word before the cursor\n<C-X> Complete file names\n<C-X> Cut selected text\n<C-X> Move cursor back and forth between the start and end of the current line\n<C-X> Paste before cursor\n<C-X> Pressing the ControlX - ControlL sequence in Vi mode does line completion based on the other lines in the document and the history\n<C-Y> Accept current completion\n<C-Y> Paste before cursor\n<C-Z> By default, control-Z should literally insert Ctrl-Z\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226585325",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226585325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226585325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU4NTMyNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T19:15:59Z",
    "updated_at": "2016-06-16T19:15:59Z",
    "author_association": "MEMBER",
    "body": "Yeah, we'll need to also sort by filter (here we're likely mixing up vi and emacs shortcut) plus a few things like whether the default buffer is focused. \n\nSee `kb.filter`, `kb.filter.filters`. I **guess** once we have a reasonable solution we can try to push that on the prompt_toolkit side.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226589585",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226589585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226589585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU4OTU4NQ==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T19:33:00Z",
    "updated_at": "2016-06-16T19:33:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, will look into filter\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226855953",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-226855953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 226855953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjg1NTk1Mw==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-17T19:09:56Z",
    "updated_at": "2016-06-17T21:01:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I made my first step: https://gist.github.com/klonuo/534931b300744bed00caefeb2cd0615a\n\nI added also `index.rst`, you can see it better in raw mode. In my local repo it is located in a new `shortcuts` subfolder relative to `source/config` folder and it is included in toc inside `source/config/index.rst` \n\nThis is sample output: http://output.jsbin.com/nacizeg/1\n\nOverall, shortcuts w/o documentation are skipped, and the rest are divided in 2 tables depending on filter - table for simple filers and one for conditional filters.\n\nWaiting for suggestions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/227249392",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-227249392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 227249392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzI0OTM5Mg==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T19:49:30Z",
    "updated_at": "2016-06-20T19:49:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting to see what you are doing here.\n\nSo far, I haven't really thought about listing key bindings like this. So, in a way, it's experimental to use prompt-toolkit for doing this, but I'll keep this in mind.\n\nBy the way, if you don't like any of the docstrings, feel free to create pull requests. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/227489244",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-227489244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 227489244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzQ4OTI0NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T16:07:57Z",
    "updated_at": "2016-06-21T16:07:57Z",
    "author_association": "MEMBER",
    "body": "> Interesting to see what you are doing here.\n> \n> So far, I haven't really thought about listing key bindings like this. So, in a way, it's experimental to use prompt-toolkit for doing this, but I'll keep this in mind.\n> \n> By the way, if you don't like any of the docstrings, feel free to create pull requests. ;)\n\nThe other thing that seem to be requested is a way to customize shortcuts, I might have a shot at that at some point and likely have a shot at a declarative way that might be less powerful but allow some flexibility. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/227583515",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-227583515",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 227583515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzU4MzUxNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T21:50:56Z",
    "updated_at": "2016-06-21T21:50:56Z",
    "author_association": "MEMBER",
    "body": "BTW @klonuo I think that's really great ! Even if it's not perfect, I would be +1 in incorporating that in the documentation build-step, we can add on top that it is a limited list, that is autogenerated, but that might help People a lot. @willingc what do you think ? \n\n@klonuo Do you want to make a PR ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/228522641",
    "html_url": "https://github.com/ipython/ipython/issues/9623#issuecomment-228522641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9623",
    "id": 228522641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODUyMjY0MQ==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-25T08:18:40Z",
    "updated_at": "2016-06-25T08:20:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonathanslenders I'd contribute with docstrings, only if I knew anything about vi/emacs ;)\n"
  }
]
