[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76019298",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76019298",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76019298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDE5Mjk4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T18:04:07Z",
    "updated_at": "2015-02-25T18:04:07Z",
    "author_association": "MEMBER",
    "body": "Thanks for working on both of these pieces, I expect they'll be really useful!\n\nWe're just about to break the single big IPython repository up into a number of smaller repositories. So for both of these pieces, I think we should work out ways to develop and install them separately, rather than making them part of the IPython codebase.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76025812",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76025812",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76025812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDI1ODEy",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T18:35:18Z",
    "updated_at": "2015-02-25T18:35:18Z",
    "author_association": "MEMBER",
    "body": "@takluyver from having worked on UI modules like this for Quantopian's codebase, my guess is that it will be easy to pull the python pieces of this into a relatively stable package, but difficult to make the diff UI a separate package.  Diffing feels like a general enough feature that it might belong in the main project.  Any thoughts on making a diff UI a feature of the HTML notebook (and building a protocol for representing diffs of notebooks and/or text files)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76027223",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76027223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76027223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDI3MjIz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T18:42:01Z",
    "updated_at": "2015-02-25T18:42:01Z",
    "author_association": "MEMBER",
    "body": "My take on it is that rich diffing is something where we shouldn't bless one solution by integrating it into the notebook UI at present. I'd rather let people build these tools as separate, standalone things, and work out how best to integrate them once the possible approaches have been better explored.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76032476",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76032476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76032476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDMyNDc2",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T19:07:13Z",
    "updated_at": "2015-02-25T19:07:13Z",
    "author_association": "MEMBER",
    "body": "> My take on it is that rich diffing is something where we shouldn't bless one solution by integrating it into the notebook UI at present. \n\n@takluyver the issue with this for UI work is that it's so hard to make a stable UI extension that it's hard to justify the time investment necessary to build something polished.  A policy of \"wait and see what the community builds\" only makes sense if the community has the tools and incentives to explore the space of possible implementations.  (I don't mean this as a knock against IPython's architecture btw; it's just genuinely hard to build a UI that's both pleasant to use and extensible).\n\nMaybe what's needed is support for something like [Tornado's UI Modules](http://tornado.readthedocs.org/en/latest/guide/templates.html?highlight=module), which would allow people to build UI extensions against a set API.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76038068",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76038068",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76038068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDM4MDY4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T19:35:30Z",
    "updated_at": "2015-02-25T19:35:30Z",
    "author_association": "MEMBER",
    "body": "I mean that notebook diffing should for now be a separate, user facing tool, not something integrated into the notebook. i.e. you would run `nbdiff foo.1.ipynb foo.2.ipynb`. This is useful anyway so it can be integrated with git hooks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76039647",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76039647",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76039647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDM5NjQ3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T19:42:17Z",
    "updated_at": "2015-02-25T19:42:17Z",
    "author_association": "MEMBER",
    "body": "Though I understand the point the UI integration is difficult, maintaining UI is a lot of work, and we don't have the bandwidth to work on that without more full time developper.\n\nWith more regular contributor we might probably accept, but right not this is completely against what we are doing, which is separating into many repo. \n\nThough it is a perfect use case for defining the right API to work with different backend. After skimming I think it works only with git for the time beeing. I guess it could be refactor to use different backend postgress ? mercurial ? Google drive ? \n\nAt quick glance I see `Diff` with an lcs method (longuest common subsequence ?) is it a general difflib ?\nIf so I tried to do a generic pure python [diff package](https://github.com/Carreau/difflib2.py), it would be nice to work on that separately. and reblace the stupid broken difflib in python stdlib. \n\nWill get a deeper look later though, and really exited to see people working on that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76164436",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76164436",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76164436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTY0NDM2",
    "user": {
      "login": "smoskwa",
      "id": 7674711,
      "node_id": "MDQ6VXNlcjc2NzQ3MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7674711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smoskwa",
      "html_url": "https://github.com/smoskwa",
      "followers_url": "https://api.github.com/users/smoskwa/followers",
      "following_url": "https://api.github.com/users/smoskwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/smoskwa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smoskwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smoskwa/subscriptions",
      "organizations_url": "https://api.github.com/users/smoskwa/orgs",
      "repos_url": "https://api.github.com/users/smoskwa/repos",
      "events_url": "https://api.github.com/users/smoskwa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smoskwa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T11:42:16Z",
    "updated_at": "2015-02-26T11:42:16Z",
    "author_association": "NONE",
    "body": "One of the reasons I asked Alex to modify IPython was that nbdiff did not meet the requirements of our organisation. It works well if you run it locally however our users connect to notebook servers that are running on remote shared hosts (e.g. login nodes for high performance computing clusters)\n\nThat means launching nbdiff requires a ssh or VNC session to the remote host, navigating to the underlying notebook, etc.. which I’ll admit is merely inconvenient. More importantly, nbdiff presents results to at http://localhost:5000 but what we really wanted is a secure per-user port so that it operates when there are many users on the same host.\n\nI’ve proposed that he make some changes:\n- all the git-specific code becomes part of his git multiple checkpoint implementation and that is provided as an extension (GitContentsManager)\n- the file_diff is added to the default contents manager, a barebones NBDiff class provided, and the tree notebook diff button retained\n- the full NBDiff class above can be an extension, and others could provide their own that implement different algorithms\n- the diff dropdown menu is removed and instead an option is provided for diffing against checkpoints (similar to the existing revert to checkpoint). this would do very little in the default single-checkpoint environment but if the above GitContentsManager is loaded you basically get the full functionality\n\nThat said, I’m not wedded to a particular path forward, it just didn’t seem clear we could achieve what we wanted purely through extensions or as a standalone tool.\n\nI’m keen to support further work on this as it would benefit our users but I’m also aware that Alex’s vacation scholarship ends tomorrow and there are no guarantees on his future availability.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76240282",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76240282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76240282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjQwMjgy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T18:44:10Z",
    "updated_at": "2015-02-26T18:44:10Z",
    "author_association": "MEMBER",
    "body": "It is now possible to have server extensions - third party code which can add HTTP handlers to the notebook web application. See [an example in cite2c](https://github.com/takluyver/cite2c/blob/master/cite2c_handlers.py). This would make it possible to serve this on the same port as the notebook application.\n\nWe're really happy to see people building things like this, but please feel free to get in touch with us at an earlier stage in the project. It takes some time to work out what makes sense in IPython, what should be distributed separately, how to integrate things, and so on. We're not really ready to handle a thousand lines of new code out of the blue, especially a couple of days before the person working on it is due to move on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76241872",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76241872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76241872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjQxODcy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T18:50:15Z",
    "updated_at": "2015-02-26T18:50:15Z",
    "author_association": "MEMBER",
    "body": "> One of the reasons I asked Alex to modify IPython was that nbdiff did not meet the requirements of our organisation. It works well if you run it locally however our users connect to notebook servers that are running on remote shared hosts (e.g. login nodes for high performance computing clusters)\n> \n> That means launching nbdiff requires a ssh or VNC session to the remote host, navigating to the underlying notebook, etc.. which I’ll admit is merely inconvenient. More importantly, nbdiff presents results to at http://localhost:5000 but what we really wanted is a secure per-user port so that it operates when there are many users on the same host.\n\nSure the requirement make sens. I suppose you have seen [JupyterHub](github.com/jupyter/jupyterhub) which is here for multi-user.\n\n> all the git-specific code becomes part of his git multiple checkpoint implementation and that is provided as an extension (GitContentsManager)\n\nSound great, ping us on the repo once you have it, or even before if you need some help.\n\n> the file_diff is added to the default contents manager, a barebones NBDiff class provided, and the tree notebook diff button retained\n\nI think I would rediscuss that on the PR, but a smaller PR will be easier to handle. I think that \"filediff\" might make sens on non-file backends like postgress. where you could still do diff betzeen 2 notebook versions, or even 2 notebooks. \n\nBut that would definitively get the discussion started, and/or make us think of the needed API. \n\n> That said, I’m not wedded to a particular path forward, it just didn’t seem clear we could achieve what we wanted purely through extensions or as a standalone tool.\n\nIt might be difficult with extension if we don't have the right API, and we woudl gladely consider adding modifying API if needed. \n\nThis is one of the reason we encourage People to ask first and open PR early, even when not complete, so that we can quickly iterate and review while things are developed. It is relatively hard to review a few thousand lines at once, but easier if you see the PR grow and get/give feedback all along.\nAlex did a huge work and probably had to dig a lot into IPython to figure that out. We would have been happy to help you while you were doing it, and we don't bite. \n\nEven if this does not get merged now, and Alex does not come back, this is a starting point for future work, and we will give you credit for that.\n\nI suppose this is also a good example at how bad we are at communicating how we work and what our future plan are. And we'll do our best to improve that in the future.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76305973",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76305973",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76305973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzA1OTcz",
    "user": {
      "login": "Gruek",
      "id": 10591509,
      "node_id": "MDQ6VXNlcjEwNTkxNTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10591509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gruek",
      "html_url": "https://github.com/Gruek",
      "followers_url": "https://api.github.com/users/Gruek/followers",
      "following_url": "https://api.github.com/users/Gruek/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gruek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gruek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gruek/subscriptions",
      "organizations_url": "https://api.github.com/users/Gruek/orgs",
      "repos_url": "https://api.github.com/users/Gruek/repos",
      "events_url": "https://api.github.com/users/Gruek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gruek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T00:24:25Z",
    "updated_at": "2015-02-27T00:24:25Z",
    "author_association": "NONE",
    "body": "> It is now possible to have server extensions - third party code which can add HTTP handlers to the notebook web application. See an example in cite2c. This would make it possible to serve this on the same port as the notebook application.\n\nLooking at this example, I'm not sure how the load_jupyter_server_extension function gets called, where does nbapp come from?\n\nI will try and package this up as a standalone extension with my remaining time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76308629",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76308629",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76308629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzA4NjI5",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T00:38:08Z",
    "updated_at": "2015-02-27T00:38:08Z",
    "author_association": "MEMBER",
    "body": "@Gruek server extensions are set up from https://github.com/ipython/ipython/blob/master/IPython/html/notebookapp.py#L955 and passed an instance of `NotebookApp`.  From there you can get to the Tornado server via `nbapp.web_app`, which is a subclass of `tornado.web.Application`.  Among other things, you can use `web_app.add_handlers` to register new tornado handlers there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76310626",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76310626",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76310626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzEwNjI2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T00:56:52Z",
    "updated_at": "2015-02-27T00:56:52Z",
    "author_association": "MEMBER",
    "body": "Thanks @ssanderson \n\nServer extensions are configured as a list of Python modules - e.g. in the `ipython_notebook_config.py` file, you could have something like this:\n\n```\nc.NotebookApp.server_extensions = ['myextensionmodule']\n```\n\nThe notebook app imports those modules and calls `load_jupyter_server_extension()` from them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76317013",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76317013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76317013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzE3MDEz",
    "user": {
      "login": "Gruek",
      "id": 10591509,
      "node_id": "MDQ6VXNlcjEwNTkxNTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10591509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gruek",
      "html_url": "https://github.com/Gruek",
      "followers_url": "https://api.github.com/users/Gruek/followers",
      "following_url": "https://api.github.com/users/Gruek/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gruek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gruek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gruek/subscriptions",
      "organizations_url": "https://api.github.com/users/Gruek/orgs",
      "repos_url": "https://api.github.com/users/Gruek/repos",
      "events_url": "https://api.github.com/users/Gruek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gruek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T01:57:33Z",
    "updated_at": "2015-02-27T01:57:33Z",
    "author_association": "NONE",
    "body": "Ok, I've got the handlers working now, thanks for all the help.\n\nMy next problem is, I'm not sure how to load in the nbdiff template to the HTMLexporter from the module. Currently, I have the nbdiff.tpl in the same dir of the module as the file that's trying to set the template_file, but it says template file could not be found.\n\nI found these examples here https://github.com/ipython/nbconvert-examples/tree/master/custom_template but not sure how to apply them in the context of a standalone module.\n\nSorry for all the noob questions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76319390",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76319390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76319390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzE5Mzkw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T02:22:25Z",
    "updated_at": "2015-02-27T02:22:25Z",
    "author_association": "MEMBER",
    "body": "These aren't noob questions - server extensions are quite new, and we probably haven't worked out all the kinks yet.\n\nI think where you're providing _template_name_default, you also need to provide _template_path_default, something like this:\n\n``` python\ndef _template_path_default(self):\n    # The directory containing this module\n    return os.path.dirname(os.path.abspath(__file__))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76320306",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76320306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76320306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzIwMzA2",
    "user": {
      "login": "Gruek",
      "id": 10591509,
      "node_id": "MDQ6VXNlcjEwNTkxNTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10591509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gruek",
      "html_url": "https://github.com/Gruek",
      "followers_url": "https://api.github.com/users/Gruek/followers",
      "following_url": "https://api.github.com/users/Gruek/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gruek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gruek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gruek/subscriptions",
      "organizations_url": "https://api.github.com/users/Gruek/orgs",
      "repos_url": "https://api.github.com/users/Gruek/repos",
      "events_url": "https://api.github.com/users/Gruek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gruek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T02:32:53Z",
    "updated_at": "2015-02-27T02:32:53Z",
    "author_association": "NONE",
    "body": "Using that code, I get the following error\n\n> IPython.utils.traitlets.TraitError: The 'template_path' trait of an Exporter instance must be a list or None, but a value of class 'str'\n\nI changed it to \n\n``` python\ndef _template_path_default(self):\n    # The directory containing this module\n    return [os.path.dirname(os.path.abspath(__file__))]\n```\n\nand got template file not found again\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76324230",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76324230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76324230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzI0MjMw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T03:19:04Z",
    "updated_at": "2015-02-27T03:19:04Z",
    "author_association": "MEMBER",
    "body": "The trait error was my mistake, and your fix should be exactly right. I don't know why you're getting template file not found again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76324878",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76324878",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76324878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzI0ODc4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T03:28:08Z",
    "updated_at": "2015-02-27T03:28:08Z",
    "author_association": "MEMBER",
    "body": "The logic in TemplateExporter to find and load a template is pretty complex. I wouldn't be at all surprised if there was a bug lurking somewhere in there. It's going on my list of things to try to clean up.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76337247",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76337247",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76337247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzM3MjQ3",
    "user": {
      "login": "Gruek",
      "id": 10591509,
      "node_id": "MDQ6VXNlcjEwNTkxNTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10591509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gruek",
      "html_url": "https://github.com/Gruek",
      "followers_url": "https://api.github.com/users/Gruek/followers",
      "following_url": "https://api.github.com/users/Gruek/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gruek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gruek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gruek/subscriptions",
      "organizations_url": "https://api.github.com/users/Gruek/orgs",
      "repos_url": "https://api.github.com/users/Gruek/repos",
      "events_url": "https://api.github.com/users/Gruek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gruek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T05:23:27Z",
    "updated_at": "2015-02-27T05:23:27Z",
    "author_association": "NONE",
    "body": "Wasn't a bug, just me not including the template in the module.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76874413",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76874413",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76874413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODc0NDEz",
    "user": {
      "login": "smoskwa",
      "id": 7674711,
      "node_id": "MDQ6VXNlcjc2NzQ3MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7674711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smoskwa",
      "html_url": "https://github.com/smoskwa",
      "followers_url": "https://api.github.com/users/smoskwa/followers",
      "following_url": "https://api.github.com/users/smoskwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/smoskwa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smoskwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smoskwa/subscriptions",
      "organizations_url": "https://api.github.com/users/smoskwa/orgs",
      "repos_url": "https://api.github.com/users/smoskwa/repos",
      "events_url": "https://api.github.com/users/smoskwa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smoskwa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T02:19:39Z",
    "updated_at": "2015-03-03T02:19:39Z",
    "author_association": "NONE",
    "body": "In case anyone comes across this - we did pull out most of the functionality into an extension\nhttps://github.com/csiro-scientific-computing/NotebookDiff\n\n(the tree base file diff was not included)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76875331",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76875331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76875331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODc1MzMx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T02:29:03Z",
    "updated_at": "2015-03-03T02:29:03Z",
    "author_association": "MEMBER",
    "body": "Thanks @Gruek and @smoskwa !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76875911",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-76875911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 76875911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODc1OTEx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T02:34:57Z",
    "updated_at": "2015-03-03T02:34:57Z",
    "author_association": "MEMBER",
    "body": "Thanks, guys!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77680169",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-77680169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 77680169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjgwMTY5",
    "user": {
      "login": "Gruek",
      "id": 10591509,
      "node_id": "MDQ6VXNlcjEwNTkxNTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10591509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gruek",
      "html_url": "https://github.com/Gruek",
      "followers_url": "https://api.github.com/users/Gruek/followers",
      "following_url": "https://api.github.com/users/Gruek/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gruek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gruek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gruek/subscriptions",
      "organizations_url": "https://api.github.com/users/Gruek/orgs",
      "repos_url": "https://api.github.com/users/Gruek/repos",
      "events_url": "https://api.github.com/users/Gruek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gruek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-07T08:54:29Z",
    "updated_at": "2015-03-07T08:54:29Z",
    "author_association": "NONE",
    "body": "Hi again,\n\nSo the standalone package now has the full functionality of the pull request, but the process for enabling is currently 5 steps,\n\nFirst you have to pip install the module, then you have to change the contents manager class in the config then you have to enable the server extension to add the handlers, then you have to install the nbextension to add the git compare menu, and finally there's also a bit that goes into custom.js to add the Diff button to the notebook list\n\nSo I'm just wondering if there's a way to repackage this in a way so it is only a 2 step process, where you can install the module and then enable/disable it in the config or through a python script.\n\nAny help would be appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/79218962",
    "html_url": "https://github.com/ipython/ipython/pull/7861#issuecomment-79218962",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7861",
    "id": 79218962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjE4OTYy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T18:25:09Z",
    "updated_at": "2015-03-13T18:25:09Z",
    "author_association": "MEMBER",
    "body": "If we move the Notebook UI to https://github.com/phosphorjs (which has a nice component architecture), and work on the packaging angle as well, it should be considerably simpler to install and make available a UI extension to the notebook.\n"
  }
]
