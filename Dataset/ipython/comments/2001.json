[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6494500",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-6494500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 6494500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTQ1MDA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-21T21:07:25Z",
    "updated_at": "2012-06-21T21:07:25Z",
    "author_association": "MEMBER",
    "body": "This is just my opinion, but I don't see the magic_arguments system as a particular improvement on the regular way of handling the arguments. I think big stacks of decorators make code harder to read, and obscure what's going on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6494507",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-6494507",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 6494507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTQ1MDc=",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-21T21:07:39Z",
    "updated_at": "2012-06-21T21:07:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "We could have two different methods that do different kinds of splitting, one for shell-like commands and one that is more geared for simple `--options` followed by a single argument that is supposed to be code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6496229",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-6496229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 6496229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTYyMjk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-21T22:30:35Z",
    "updated_at": "2012-06-21T22:32:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I'd advocate to change `MagicArgumentParser.parse_argstring` to use `shlex.split` (or a version which handles unicode?) instead of `arg_split`.  Or perhaps a new kwarg (`whitespace_split`) or similar which could default to `False`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6496559",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-6496559",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 6496559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTY1NTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-21T22:46:15Z",
    "updated_at": "2012-06-21T22:46:15Z",
    "author_association": "MEMBER",
    "body": "A couple of notes:\n- Now that magics have been cleanly structured into separate classes, we could provide a utiltity method on the base class to construct this arg parser.  Then magic functions could simply use\n\n```\n@line_magic\ndef mymagic(self, line):\n  self.make_parser('mymagic', [('-d', '--description',\n        default=\"Pasted from IPython.\",\n        help=\"Custom\" ),\n   (...)])\n```\n\ninstead of putting all that in front in decorators.  This would also likely make imports quicker, since parser construction would be done at runtime and not at import time.\n- It's not mandatory to use this approach: it's OK to write magics with a different style of building command-line handling.  Let's experiment and try to find what really works best (if we can agree on a definition of best).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6497634",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-6497634",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 6497634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTc2MzQ=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-21T23:55:40Z",
    "updated_at": "2012-06-21T23:55:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez Unfortunately that approach won't allow us to build the docstrings at import time, which I think is the greatest benefit of using the `magic_arguments` framework.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6497945",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-6497945",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 6497945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTc5NDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-22T00:16:49Z",
    "updated_at": "2012-06-22T00:16:49Z",
    "author_association": "MEMBER",
    "body": "Ah, correct, I hadn't thought of that...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/371304567",
    "html_url": "https://github.com/ipython/ipython/issues/2001#issuecomment-371304567",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2001",
    "id": 371304567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTMwNDU2Nw==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T22:15:42Z",
    "updated_at": "2018-03-07T22:15:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry that I'm coming a bit late to the discussion ...\r\n\r\nI just encountered the exact problem described above: I created a magic function as suggested in the documentation (and in another example I was consulting), and I was surprised that the quotes were not removed from the arguments.\r\n\r\nI found a quick work-around. Instead of writing as suggested in the docs:\r\n\r\n```python\r\nargs = parse_argstring(self.my_magic, line)\r\n```\r\n\r\n... I am now using:\r\n\r\n```python\r\nimport shlex\r\nargs = self.my_magic.parser.parse_args(shlex.split(line))\r\n```\r\n\r\n... and this seems to work fine."
  }
]
