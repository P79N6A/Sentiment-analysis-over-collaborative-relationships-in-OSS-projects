[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70559857",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70559857",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70559857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTU5ODU3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:01:32Z",
    "updated_at": "2015-01-19T21:03:08Z",
    "author_association": "MEMBER",
    "body": "I'm not sure why we need to sanitize the dialog method.  ~~I think this will break the logic we use to rename notebooks, where we pass an input control into the body to make the dialog accept text.  I'm planning on using this same technique elsewhere in IPython, and I think it's an appropriate use of the dialog helper function (I'd rather not have to re-implement this everywhere I need it just because the base only accepts text).~~  Instead, maybe it's better sanitize the content before it is passed into this method.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70560486",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70560486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70560486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYwNDg2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:05:11Z",
    "updated_at": "2015-01-19T21:05:11Z",
    "author_association": "MEMBER",
    "body": "> maybe it's better sanitize the content before it is passed into this method.\n\nyes, definitely. It is absolutely up to the builder of the dialog HTML to make sure it's safe.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70560602",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70560602",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70560602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYwNjAy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:05:45Z",
    "updated_at": "2015-01-19T21:05:45Z",
    "author_association": "MEMBER",
    "body": "if you pass it a dom object it will behave as expected. so you can alcually say `modal({body:$('p').append(text)})` it will work. The problem is that in some places, I had the dialog sow error/response message from server, which is a potential security flaw to inject js. It is better to sanitize by default everywhere and be explicit when you want safety off than the other way around.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70561508",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70561508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70561508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYxNTA4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:11:38Z",
    "updated_at": "2015-01-19T21:11:38Z",
    "author_association": "MEMBER",
    "body": "> The problem is that in some places, I had the dialog sow error/response message from server, which is a potential security flaw to inject js. It is better to sanitize by default everywhere and be explicit when you want safety off than the other way around.\n\nI disagree with this.  This dialog method should be treated like a `.html` method.  The error messages should be sanitized before being passed to the dialog method.\n\nAlternatively, you could create a convenience flag on this method, i.e. `sanitize: true` which triggered sanitation to happen.  I think that would be better than having sanitation triggered implicitly by argument type.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70561912",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70561912",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70561912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYxOTEy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:14:16Z",
    "updated_at": "2015-01-19T21:14:16Z",
    "author_association": "MEMBER",
    "body": "that would be fine with me also, but sanitation should then be true by default, that was my first attempt at this PR. Though, the sanitizing library does work only on string, so this path would be more invasive. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70562738",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70562738",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70562738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYyNzM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:19:35Z",
    "updated_at": "2015-01-19T21:19:35Z",
    "author_association": "MEMBER",
    "body": "> error/response message from server, which is a potential security flaw to inject js\n\nSince the vulnerability would have to be in the same code that serves the sanitization js, I'm not sure I see the issue here.\n\nA disadvantage of sanitizing string bodies means that you have to be sure that the caller  _doesn't_ sanitize the string body, otherwise you will get double-escapes. I still think this probably makes sense to do, and we can make a pass on the HTML inputs, to see if there are issues. For instance, the error messages from the server all pass through a single ajax error utility, which should probably call `escape_html(message)`, so that we know that `error.message` is safe text everywhere we use it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70563182",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70563182",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70563182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYzMTgy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:22:16Z",
    "updated_at": "2015-01-19T21:22:16Z",
    "author_association": "MEMBER",
    "body": "I'm more concern by the fact that we expose this as an API that is used by extensions. \n\nI know extensions are not our problem and that security is their problem, but providing an unsecure default has historically always be a bad choice. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70564018",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70564018",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70564018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTY0MDE4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T21:27:41Z",
    "updated_at": "2015-01-19T21:27:41Z",
    "author_association": "MEMBER",
    "body": "I think it's easy to be surprised by the plain-text being able to execute HTML, which is why I still think this PR is a good idea. If they are passing HTML, I don't think it's an issue _at all_, because they could be putting that same HTML on the page in any way they want, and it would always be applied as-is. That's why I think this PR, plus a pass on our own HTML dialogs, closes #7486.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70570600",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70570600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70570600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTcwNjAw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T22:12:49Z",
    "updated_at": "2015-01-19T22:12:49Z",
    "author_association": "MEMBER",
    "body": "@Carreau what do you think about\n\n``` js\nif (options.sanitize===undefined || options.sanitize) {\n    options.body = $(\"<p/>\").text(options.body)\n}\n```\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70658664",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70658664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70658664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjU4NjY0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-20T14:13:02Z",
    "updated_at": "2015-01-20T14:13:02Z",
    "author_association": "MEMBER",
    "body": "`options.sanitize===undefined || options.sanitize` -> `options.sanitize!==false` to avoid things like `sanitize='sdkjgb'` to pass through would suite me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70661929",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70661929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70661929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjYxOTI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-20T14:34:13Z",
    "updated_at": "2015-01-20T14:34:13Z",
    "author_association": "MEMBER",
    "body": "Updated to @jdfreder comment. \n`p.text()` will be used only if string is passed and sanitize is not set to `false`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70697472",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70697472",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70697472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjk3NDcy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-20T17:42:00Z",
    "updated_at": "2015-01-20T17:42:00Z",
    "author_association": "MEMBER",
    "body": "Thanks! :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70712462",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70712462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70712462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzEyNDYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-20T19:08:19Z",
    "updated_at": "2015-01-20T19:08:19Z",
    "author_association": "MEMBER",
    "body": "From the dev meeting: we're happy with what this does at present (escape strings passed to dialog, don't sanitise pre-constructed DOM elements, because whatever constructs them is responsible for doing so safely).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/70715615",
    "html_url": "https://github.com/ipython/ipython/pull/7493#issuecomment-70715615",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7493",
    "id": 70715615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzE1NjE1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-20T19:26:01Z",
    "updated_at": "2015-01-20T19:26:01Z",
    "author_association": "MEMBER",
    "body": "Travis passed. Who wants to do final review and/or press the button?\n"
  }
]
