[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276573677",
    "html_url": "https://github.com/ipython/ipython/issues/10227#issuecomment-276573677",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10227",
    "id": 276573677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjU3MzY3Nw==",
    "user": {
      "login": "meeseeksdev[bot]",
      "id": 24485218,
      "node_id": "MDM6Qm90MjQ0ODUyMTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meeseeksdev%5Bbot%5D",
      "html_url": "https://github.com/apps/meeseeksdev",
      "followers_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-02-01T05:06:44Z",
    "updated_at": "2017-02-01T05:06:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "[`@Carreau` commented](https://github.com/jupyter/notebook/issues/2106#issuecomment-276573630): > If something is not clear / you need more information I will be happy to help.\r\n\r\nThanks, that is likely an IPython thing, not a notebook one as the behavior can be replicated in terminal IPython (and other frontend).\r\nThe problem here is that the decision should be taken by the cell-magic itself, not IPython, because in a cell magic the `;` may have another signification. For example in a `C/C++/Cffi` semicolon might be necessary to have valid C/C++\r\n\r\nSo that's something that need to be revisited on a per-cell-magic case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276632584",
    "html_url": "https://github.com/ipython/ipython/issues/10227#issuecomment-276632584",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10227",
    "id": 276632584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjYzMjU4NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T11:15:19Z",
    "updated_at": "2017-02-01T11:15:19Z",
    "author_association": "MEMBER",
    "body": "As @Carreau mentioned, it is up to the cell magic. The issue in this case is that a trailing semicolon has no meaning in Python itself; it's a special feature that IPython adds (to make things more comfortable for people coming from matlab, IIRC). `%%time` uses Python's native execution machinery, because IPython's wrappers add overhead that you don't want while timing code."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/401503154",
    "html_url": "https://github.com/ipython/ipython/issues/10227#issuecomment-401503154",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10227",
    "id": 401503154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTUwMzE1NA==",
    "user": {
      "login": "Nithanaroy",
      "id": 670556,
      "node_id": "MDQ6VXNlcjY3MDU1Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/670556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nithanaroy",
      "html_url": "https://github.com/Nithanaroy",
      "followers_url": "https://api.github.com/users/Nithanaroy/followers",
      "following_url": "https://api.github.com/users/Nithanaroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nithanaroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nithanaroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nithanaroy/subscriptions",
      "organizations_url": "https://api.github.com/users/Nithanaroy/orgs",
      "repos_url": "https://api.github.com/users/Nithanaroy/repos",
      "events_url": "https://api.github.com/users/Nithanaroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nithanaroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T00:15:38Z",
    "updated_at": "2018-06-30T00:15:38Z",
    "author_association": "NONE",
    "body": "Are there a tricks or hacks to achieve this in a notebook with a Spark kernel?"
  }
]
