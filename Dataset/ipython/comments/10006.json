[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/253873426",
    "html_url": "https://github.com/ipython/ipython/issues/10006#issuecomment-253873426",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10006",
    "id": 253873426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzg3MzQyNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-14T17:53:14Z",
    "updated_at": "2016-10-14T17:53:14Z",
    "author_association": "MEMBER",
    "body": "> Is TerminalPdb the best way to set traces?\n\nLikely. We added from `IPython.terminal.debugger:set_trace()` recently. There might better packages on PyPI that have more advance features. \n\n> Is this expected behavior?\n\nI'm unsure. \n\n> How do I quit?\n\n`IPython.embed()` have a `kill embed` that prevent a specific instance to be re-entered and add an ability to raise on exit. I'm still unsure why TerminalPdb  does not raise on exit like normal Pdb. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/253874143",
    "html_url": "https://github.com/ipython/ipython/issues/10006#issuecomment-253874143",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10006",
    "id": 253874143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzg3NDE0Mw==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-14T17:56:01Z",
    "updated_at": "2016-10-14T17:56:01Z",
    "author_association": "NONE",
    "body": "Thanks for your quick reply.\n\nMy intuition would have been that `Ctrl + D` quits and `Ctrl + Z` suspends. `Ctrl + Z` does nothing, `Ctrl + D` skips to the next iteration, I think.\n\nBeing compatible with `pdb` would probably be the most intuitive for most users. I'm happy to work on it if it's something that should be reasonably easy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/253877814",
    "html_url": "https://github.com/ipython/ipython/issues/10006#issuecomment-253877814",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10006",
    "id": 253877814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzg3NzgxNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-14T18:06:38Z",
    "updated_at": "2016-10-14T18:06:38Z",
    "author_association": "MEMBER",
    "body": "> Thanks for your quick reply.\n> \n> My intuition would have been that Ctrl + D quits and Ctrl + Z suspends. Ctrl + Z does nothing, Ctrl + D skips to the next iteration, I think.\n> \n> Being compatible with pdb would probably be the most intuitive for most users. I'm happy to work on it if it's something that should be reasonably easy.\n\nYeah, that should not be too hard. \n\nIt seem to be `IPython.core.debugger:Pdb.trace_dispatch` which explicitly silence `BdbQuit` since ec2d023d. I see why one would like to not raise on exit and vice-versa, so we can try to fing a compromise. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279528753",
    "html_url": "https://github.com/ipython/ipython/issues/10006#issuecomment-279528753",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10006",
    "id": 279528753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTUyODc1Mw==",
    "user": {
      "login": "bobcolner",
      "id": 959946,
      "node_id": "MDQ6VXNlcjk1OTk0Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/959946?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobcolner",
      "html_url": "https://github.com/bobcolner",
      "followers_url": "https://api.github.com/users/bobcolner/followers",
      "following_url": "https://api.github.com/users/bobcolner/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobcolner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobcolner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobcolner/subscriptions",
      "organizations_url": "https://api.github.com/users/bobcolner/orgs",
      "repos_url": "https://api.github.com/users/bobcolner/repos",
      "events_url": "https://api.github.com/users/bobcolner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobcolner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T21:30:52Z",
    "updated_at": "2017-02-13T21:30:52Z",
    "author_association": "NONE",
    "body": "why is this issue closed? the bug is still as glaring as ever in ipython 5.2"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279532795",
    "html_url": "https://github.com/ipython/ipython/issues/10006#issuecomment-279532795",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10006",
    "id": 279532795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTUzMjc5NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T21:46:05Z",
    "updated_at": "2017-02-13T21:46:05Z",
    "author_association": "MEMBER",
    "body": "Thank you @bobcolner for your feedback, This issue has been closed as PR #10009 has been merged and was meant to fix the original use case brought up by @amueller. This PR seem to be present in the 5.2 release, and I'm able to check that it fixes above use case locally when using IPython 5.2.\r\n\r\n```\r\n~/dev/ipython 5.2.0 \"!!\" $ python foo.py\r\n> $HOME/dev/ipython/foo.py(5)<module>()\r\n      1 from IPython.terminal.debugger import TerminalPdb\r\n      2 pdb = TerminalPdb()\r\n      3\r\n      4 while True:\r\n----> 5     pdb.set_trace()\r\n\r\nipdb> ^D\r\n\r\nTraceback (most recent call last):\r\n  File \"foo.py\", line 5, in <module>\r\n    pdb.set_trace()\r\n  File \"foo.py\", line 5, in <module>\r\n    pdb.set_trace()\r\n  File \"$HOME/anaconda/lib/python3.5/bdb.py\", line 48, in trace_dispatch\r\n    return self.dispatch_line(frame)\r\n  File \"$HOME/anaconda/lib/python3.5/bdb.py\", line 67, in dispatch_line\r\n    if self.quitting: raise BdbQuit\r\nbdb.BdbQuit\r\n\r\n ~/dev/ipython 5.2.0 [1]\"!!\" $ cat foo.py\r\nfrom IPython.terminal.debugger import TerminalPdb\r\npdb = TerminalPdb()\r\n\r\nwhile True:\r\n    pdb.set_trace()\r\n```\r\n\r\nDid you update IPython ? How did you upgrade ? How are you using PDB ? Are you sure your system is picking up IPython 5.2 ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/410557451",
    "html_url": "https://github.com/ipython/ipython/issues/10006#issuecomment-410557451",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10006",
    "id": 410557451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU1NzQ1MQ==",
    "user": {
      "login": "alex-git-rd",
      "id": 39820805,
      "node_id": "MDQ6VXNlcjM5ODIwODA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/39820805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-git-rd",
      "html_url": "https://github.com/alex-git-rd",
      "followers_url": "https://api.github.com/users/alex-git-rd/followers",
      "following_url": "https://api.github.com/users/alex-git-rd/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-git-rd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-git-rd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-git-rd/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-git-rd/orgs",
      "repos_url": "https://api.github.com/users/alex-git-rd/repos",
      "events_url": "https://api.github.com/users/alex-git-rd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-git-rd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-05T23:53:06Z",
    "updated_at": "2018-08-05T23:53:06Z",
    "author_association": "NONE",
    "body": "I'm on IPython 6.4, Python 3.6.6 and I'm still getting this issue. Specifically, if I do any `.groupby(\"col\").apply(f)` in pandas for some function `f` that has a `set_trace()`, ipdb doesn't let me quit by typing `q` but rather keeps re-running to the next iteration."
  }
]
