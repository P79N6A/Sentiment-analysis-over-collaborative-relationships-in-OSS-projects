[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17580141",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17580141",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17580141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTgwMTQx",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T00:44:58Z",
    "updated_at": "2013-05-08T00:44:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Might be worth playing with the import flags to ctypes and seeing if\nbringing in the symbols to the public namespace explicitly has any impact.\n\nOn Wednesday, May 8, 2013, Min RK wrote:\n\n> @ganwell https://github.com/ganwell has brought up an interesting issue.\n> \n> With the following trivial example.c:\n> \n> // example.c#include <Python.h>\n> int example(void);int example(void) {\n>     PyRun_SimpleString(\"print('hello')\");\n>     return 0;}\n> \n> It can be called from Python with:\n> \n> # example.pyimport ctypesexample_so = ctypes.PyDLL(\"./example.so\")example_so.example()\n> \n> Interestingly, if this code is executed via %run example.py, it works as\n> expected. However, the same code executed in the _same_ interactive\n> session, it gets this weird error, as if the namespace is entirely empty:\n> \n> $> ipython3 consoleIn [1]: run example.pyhello\n> In [2]: example_so.example()Out[2]: 0---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)<string> in <module>()\n> NameError: name 'print' is not defined\n> \n> Even more peculiar, this does not affect terminal IPython, so it is a\n> behavior specific to the kernel:\n> \n> $> ipython3In [1]: run example.pyhello\n> In [2]: example_so.example()helloOut[2]: 0\n> \n> So this is a behavior unique to Python 3, using the kernel, and running\n> interactively and _not_ via %run.\n> \n> A complete example can be found herehttps://github.com/ganwell/ctypes-example\n> .\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3289\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17616779",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17616779",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17616779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjE2Nzc5",
    "user": {
      "login": "ganwell",
      "id": 1186530,
      "node_id": "MDQ6VXNlcjExODY1MzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1186530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganwell",
      "html_url": "https://github.com/ganwell",
      "followers_url": "https://api.github.com/users/ganwell/followers",
      "following_url": "https://api.github.com/users/ganwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganwell/subscriptions",
      "organizations_url": "https://api.github.com/users/ganwell/orgs",
      "repos_url": "https://api.github.com/users/ganwell/repos",
      "events_url": "https://api.github.com/users/ganwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T16:20:07Z",
    "updated_at": "2013-05-08T16:20:07Z",
    "author_association": "NONE",
    "body": "@ahmadia I tested with:\n\n``` python\nexample_so = ctypes.PyDLL(\"./example.so\", mode=ctypes.RTLD_GLOBAL)\n```\n\nIt that the flag you're referring to?\n\nIt didn't help.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17619202",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17619202",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17619202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjE5MjAy",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T16:57:48Z",
    "updated_at": "2013-05-08T16:57:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ganwell - exactly.  Okay, I'm taking a slightly deeper look into it, but this is just as baffling to me.  I can reproduce it on an OS X machine, so at least it's a portable bug :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17620501",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17620501",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17620501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIwNTAx",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T17:19:42Z",
    "updated_at": "2013-05-08T17:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ganwell This sounds like a namespacing or linking error.  Reviewing your concrete example here:\n\nhttps://github.com/ganwell/ctypes-example/blob/master/Makefile\n\nCan you use the `python-config --libs` and `python-config--ldflags` as flags when you create the shared library?  My suspicion is that you need to be linking against -lpython when you build the shared library object.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17620664",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17620664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17620664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIwNjY0",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T17:22:12Z",
    "updated_at": "2013-05-08T17:22:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Weird, I can reproduce this on OS X with the libraries linked in correctly, I guess it's something else.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17621047",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17621047",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17621047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIxMDQ3",
    "user": {
      "login": "ganwell",
      "id": 1186530,
      "node_id": "MDQ6VXNlcjExODY1MzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1186530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganwell",
      "html_url": "https://github.com/ganwell",
      "followers_url": "https://api.github.com/users/ganwell/followers",
      "following_url": "https://api.github.com/users/ganwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganwell/subscriptions",
      "organizations_url": "https://api.github.com/users/ganwell/orgs",
      "repos_url": "https://api.github.com/users/ganwell/repos",
      "events_url": "https://api.github.com/users/ganwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T17:28:51Z",
    "updated_at": "2013-05-08T17:32:30Z",
    "author_association": "NONE",
    "body": "As I understand you only have to do that on OSX and I do it there:\n\n``` Makefile\nCC=clang\nSO_EXT=so\nCFLAGS=-Weverything -g $(shell python3.2-config --includes)\nLDFLAGS=-bundle -L/usr/local/Cellar/python3/3.2.3/Frameworks/Python.framework/Versions/3.2/lib/python3.2/config-3.2m -ldl -framework CoreFoundation -lpython3.2 -framework CoreFoundation\n\nSRCS=$(wildcard *.c)\n\nOBJS=$(SRCS:.c=.o)\n\n%.o : %.c %.h config.h\n    $(CC) -c $< $(CFLAGS)\n\ndsplab.$(SO_EXT): $(OBJS)\n    $(CC) -o $@ $^ $(CFLAGS) $(LDFLAGS)\n\nclean:\n    rm -rf $(OBJS) example.$(SO_EXT) *.o\n\nall: example.$(SO_EXT)\n\n.PHONY: all clean\n```\n\nI hope replaced to name of the shared object correctly. It doesn't work like that either.\n\npython3.2-config --ldfags returned something that didn't work, therefore I copied and corrected it.\n\nBTW I also tested with gcc: no luck there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17622475",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17622475",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17622475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIyNDc1",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T17:52:40Z",
    "updated_at": "2013-05-08T17:52:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ganwell - Calling the embedded Python API (PyRun_SimpleString) from a ctypes extension module seems like a bit of a recipe for disaster.  I'm not surprised that it's worked in the past, but I'm also not surprised that it is now suddenly not working in Python 3.  Is there a reason that a Python extension module won't work here?  Will we encounter the same problems?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17623425",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17623425",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17623425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIzNDI1",
    "user": {
      "login": "ganwell",
      "id": 1186530,
      "node_id": "MDQ6VXNlcjExODY1MzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1186530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganwell",
      "html_url": "https://github.com/ganwell",
      "followers_url": "https://api.github.com/users/ganwell/followers",
      "following_url": "https://api.github.com/users/ganwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganwell/subscriptions",
      "organizations_url": "https://api.github.com/users/ganwell/orgs",
      "repos_url": "https://api.github.com/users/ganwell/repos",
      "events_url": "https://api.github.com/users/ganwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T18:09:07Z",
    "updated_at": "2013-05-08T18:09:07Z",
    "author_association": "NONE",
    "body": "@ahmadia The reason that I don't use a extension module is that it's not my goal. I'm developing a plugin for another application and I test it in ipython. I feed data from ipython into the plugin and analyze the result with ipython.\n\nFurthermore ctypes documentation suggests that things like calling PyRun_SimpleString should work. I also tested it with other APIs: the namespace python has inside the ctype call seems empty / not connected to the ipython-kernel,\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17623628",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17623628",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17623628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIzNjI4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T18:13:10Z",
    "updated_at": "2013-05-08T18:13:10Z",
    "author_association": "MEMBER",
    "body": "The absence of builtins means that it's not just disconnected from IPython, it's not really connected to the Python interpreter at all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17623845",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17623845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17623845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjIzODQ1",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T18:16:31Z",
    "updated_at": "2013-05-08T18:16:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ganwell - I'm out of simple solutions :/  \n\nIt definitely looks like the ctypes python has been uninitialized.  I'm especially baffled by the fact that it works from %run but not interactively (or when executing the code with an import).  I don't have any extra thoughts, but it does sound like it could be something subtle in the way the kernel is instantiated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17634703",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-17634703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 17634703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjM0NzAz",
    "user": {
      "login": "ganwell",
      "id": 1186530,
      "node_id": "MDQ6VXNlcjExODY1MzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1186530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganwell",
      "html_url": "https://github.com/ganwell",
      "followers_url": "https://api.github.com/users/ganwell/followers",
      "following_url": "https://api.github.com/users/ganwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganwell/subscriptions",
      "organizations_url": "https://api.github.com/users/ganwell/orgs",
      "repos_url": "https://api.github.com/users/ganwell/repos",
      "events_url": "https://api.github.com/users/ganwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T21:20:32Z",
    "updated_at": "2013-05-08T21:34:45Z",
    "author_association": "NONE",
    "body": "GOOD NEWS. Callbacks work. I changed code to use a callback instead of PyRun_SimpleString.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290847476",
    "html_url": "https://github.com/ipython/ipython/issues/3289#issuecomment-290847476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3289",
    "id": 290847476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg0NzQ3Ng==",
    "user": {
      "login": "ganwell",
      "id": 1186530,
      "node_id": "MDQ6VXNlcjExODY1MzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1186530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganwell",
      "html_url": "https://github.com/ganwell",
      "followers_url": "https://api.github.com/users/ganwell/followers",
      "following_url": "https://api.github.com/users/ganwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganwell/subscriptions",
      "organizations_url": "https://api.github.com/users/ganwell/orgs",
      "repos_url": "https://api.github.com/users/ganwell/repos",
      "events_url": "https://api.github.com/users/ganwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T22:32:19Z",
    "updated_at": "2017-03-31T22:32:19Z",
    "author_association": "NONE",
    "body": "@minrk This should probably be closed, as it was strange quirk and ages ago."
  }
]
