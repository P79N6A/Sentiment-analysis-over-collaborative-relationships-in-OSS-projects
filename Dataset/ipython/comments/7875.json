[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76109657",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76109657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76109657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTA5NjU3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T02:10:47Z",
    "updated_at": "2015-02-26T02:10:47Z",
    "author_association": "MEMBER",
    "body": "Can you describe the use case for this? It's not clear to me what it would be used for.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76117009",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76117009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76117009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTE3MDA5",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T03:38:28Z",
    "updated_at": "2015-02-26T03:49:29Z",
    "author_association": "MEMBER",
    "body": "@minrk I have a bunch of usecases for dynamic traitlets. (I played a bit with @jdfreder 's implementation.)\n- First usecase: a data store in notebook metadata (or elsewhere, it is not the point here). \n\n``` python\nfrom IPython.html import DataStore\n\n# DataStore() returns a singleton. It inherits from HasTrait and represent a\n# traitlet-addressable section of the notebook metadata.\nstore = DataStore()\nif not hasattr(store, 'value'):\n    add_trait(store, 'value', Float(0))\nslider = FloatSlider(value=store.value)\ndlink((slider, 'value'), (store, 'value'))\n# The slider is changes the value in the data store\n# On notebook save, the value is saved in the ipynb metadata\n# Next time you run the notebook, you find back the slider value. \n```\n\n(I know how questionable storing in the notebook metadata is, this is just a nice API to access it if you like.)\n\nI can put a couple of other usecases examples tomorrow if you are interested. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76117069",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76117069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76117069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTE3MDY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T03:39:20Z",
    "updated_at": "2015-02-26T05:45:47Z",
    "author_association": "MEMBER",
    "body": "@rmorshea this is a huge wall of text!! I'm glad that you opened the issue to talk about it though.\n\n@minrk and @takluyver,\n@rmorshea is a student of @ellisonbg who is working on an in notebook SVG rendering library (not widget based).  He is using traitlets extensively and has the need to be able to add traits to instances, not classes.  @rmorshea can you describe, briefly, why this need exists?\n\nI'm interested in this question for another reason, which is to improve symmetry with the widgets.  I'd like to allow Javascript instantiated models to declare new synced traits.\n\nMy solution to this is a small, simple hack:\n\n``` python\n    def add_trait(self, traitname, trait):\n        \"\"\"Dynamically add a trait attribute to the HasTraits instance.\"\"\"\n        self.__class__ = type(self.__class__.__name__, (self.__class__,), \n                              {traitname: trait})\n        trait.set_default_value(self)\n```\n\n(thanks for the commit @sylvaincorlay , https://github.com/SylvainCorlay/ipython/commit/24871d4d1aae9261f3ffc577474bf5813f1b6198)\n\n@rmorshea 's idea, which is less of a hack but requires much more effort, is to implement the logic for instance level traits in `getattr` `setattr` overrides.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76119881",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76119881",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76119881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTE5ODgx",
    "user": {
      "login": "rmorshea",
      "id": 4041990,
      "node_id": "MDQ6VXNlcjQwNDE5OTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmorshea",
      "html_url": "https://github.com/rmorshea",
      "followers_url": "https://api.github.com/users/rmorshea/followers",
      "following_url": "https://api.github.com/users/rmorshea/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions",
      "organizations_url": "https://api.github.com/users/rmorshea/orgs",
      "repos_url": "https://api.github.com/users/rmorshea/repos",
      "events_url": "https://api.github.com/users/rmorshea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmorshea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T04:18:06Z",
    "updated_at": "2015-02-26T04:27:27Z",
    "author_association": "NONE",
    "body": "I wasn't quite sure how much information I should include so I probably over did it. But that aside, the main reason I ended up working on this is mainly because I _thought_ I needed to use it. So at the moment it might not be absolutely necessary in my use case. However I have implemented a case in which one might want to add a `slope` attribute to a `Group` object containing a series of shapes to rotate them a given number of degrees. I've demonstrated this with a [notebook](http://nbviewer.ipython.org/github/rmorshea/misc/blob/testing/docs/SVG.ipynb) in cells 13 and 14. In this particular case one probably wouldn't want `slope` to be an attribute that would be common to all `Group` objects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76121132",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76121132",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76121132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTIxMTMy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T04:36:25Z",
    "updated_at": "2015-02-26T04:36:25Z",
    "author_association": "MEMBER",
    "body": "Thanks @rmorshea \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76123234",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76123234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76123234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTIzMjM0",
    "user": {
      "login": "rmorshea",
      "id": 4041990,
      "node_id": "MDQ6VXNlcjQwNDE5OTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmorshea",
      "html_url": "https://github.com/rmorshea",
      "followers_url": "https://api.github.com/users/rmorshea/followers",
      "following_url": "https://api.github.com/users/rmorshea/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions",
      "organizations_url": "https://api.github.com/users/rmorshea/orgs",
      "repos_url": "https://api.github.com/users/rmorshea/repos",
      "events_url": "https://api.github.com/users/rmorshea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmorshea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T05:07:21Z",
    "updated_at": "2015-02-26T05:08:21Z",
    "author_association": "NONE",
    "body": "@jdfreder I'm not sure that there's a use for dynamically installing traits at a class level though. I'd already written code to do it so I figured I'd include it in the discussion and see if someone had a need. The only purpose I can see it serving is avoiding inheritance or some obscure case where you might need to add an arbitrary number of traits. If this isn't relevant I can remove it from the issue description.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76124505",
    "html_url": "https://github.com/ipython/ipython/issues/7875#issuecomment-76124505",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7875",
    "id": 76124505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTI0NTA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T05:25:59Z",
    "updated_at": "2015-02-26T05:25:59Z",
    "author_association": "MEMBER",
    "body": ">  has the need to be able to add traits to instances\n\nAha, this is the part I didn't get from the description. I just didn't know what the goal was. That makes sense. I don't think adding traits to classes does, though. That's what subclasses are for.\n"
  }
]
