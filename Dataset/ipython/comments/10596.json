[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303803432",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303803432",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303803432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgwMzQzMg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T17:59:14Z",
    "updated_at": "2017-05-24T17:59:14Z",
    "author_association": "MEMBER",
    "body": "ðŸ™‡  Thank you!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303810699",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303810699",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303810699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxMDY5OQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T18:26:14Z",
    "updated_at": "2017-05-24T18:26:14Z",
    "author_association": "MEMBER",
    "body": "I was recently alerted to the fact that pixiedust exposes `display` as a top level for use in the notebook, likely to match up with zeppelin/databricks/etc., which is also why I said we should expose `display` by default.\r\n\r\nThe extra thing most of these other displayers do though is hook the display for data frames (spark and pandas) and Spark GraphFrames."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303810741",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303810741",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303810741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxMDc0MQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T18:26:25Z",
    "updated_at": "2017-05-24T18:26:25Z",
    "author_association": "MEMBER",
    "body": "/cc @DTAIEB"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303815500",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303815500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303815500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxNTUwMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T18:44:00Z",
    "updated_at": "2017-05-24T18:44:00Z",
    "author_association": "MEMBER",
    "body": "> I was recently alerted to the fact that pixiedust exposes display as a top level for use in the notebook, likely to match up with zeppelin/databricks/etc., which is also why I said we should expose display by default.\r\n\r\nWhere is it injected ? in user_ns or builtins ? AFAICT that will lead to user having:\r\n\r\n```\r\nPixiedust didn't find any vizualization plugins that can render this object: <__main__.Foo object at 0x7fd58600d810>\r\n```\r\n\r\nOr whatever object is given to it. I think that pixiedust should fallback on ipython's display. \r\nIt should even to hook into IPython formatter. Right now if you `display(df)` you get a nice rich representation. If you just return it as the last statemtn of the cell you get a `DataFrame[Colors: string, %: bigint]` output, which is less nice. \r\n\r\nRegistering formatter should allow to have rich representation in both case which should make the experience more uniform for users. \r\n\r\nThe other things is that with this PR IPython's display is restored as soon as you delete any things that shadows it:\r\n\r\n```\r\n$ ipython\r\nPython 3.6.0 |Continuum Analytics, Inc.| (default, Dec 23 2016, 13:19:00)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.1.0.dev -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: display\r\nOut[1]: <function IPython.core.display.display>\r\n\r\nIn [2]: display = lambda x:X\r\n\r\nIn [3]: display\r\nOut[3]: <function __main__.<lambda>>\r\n\r\nIn [4]: del display\r\n\r\nIn [5]: display\r\nOut[5]: <function IPython.core.display.display>\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303820796",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303820796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303820796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgyMDc5Ng==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T19:03:36Z",
    "updated_at": "2017-05-24T19:03:36Z",
    "author_association": "MEMBER",
    "body": "> The other things is that with this PR IPython's display is restored as soon as you delete any things that shadows it:\r\n\r\nExcellent!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303900840",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303900840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303900840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzkwMDg0MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T01:55:21Z",
    "updated_at": "2017-05-25T01:55:21Z",
    "author_association": "MEMBER",
    "body": "Great!\r\n\r\n@ivanov since you mention the update display stuff, do you think `update_display` should be included, or is that too much? I realize builtins is a pretty precious namespace.\r\n\r\nMinor technical detail: should this go in `.user_ns_hidden` instead of builtins, so it doesn't show up as available in module code?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303902723",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303902723",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303902723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzkwMjcyMw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T02:08:56Z",
    "updated_at": "2017-05-25T02:08:56Z",
    "author_association": "MEMBER",
    "body": "> Minor technical detail: should this go in .user_ns_hidden instead of builtins, so it doesn't show up as available in module code?\r\n\r\nIt can, I did that originally, it's more complicated if we want to re-inject it when user delete it/shadow it, but doable.\r\n\r\nI believe `update_display` is more a technical under the hood detail, while everyone should know about (and use) display.\r\n\r\nThis is still a relatively heavy usability change so I'm probing what other are thinking. I'd like @fperez input on this one as well (not on the code itself, but happy to get review) but wether it's ok to have `display()` available by default."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/303923108",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-303923108",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 303923108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzkyMzEwOA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T05:02:17Z",
    "updated_at": "2017-05-25T05:02:17Z",
    "author_association": "MEMBER",
    "body": "I agree that we shouldn't surface update_display. We can still use update = True on display anyways."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304088523",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304088523",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304088523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA4ODUyMw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T18:35:55Z",
    "updated_at": "2017-05-25T18:35:55Z",
    "author_association": "MEMBER",
    "body": "On the `builtins` vs `user_ns_hidden`:\r\n\r\nWhen in user_ns_hidden it happily accept to delete it but the object will reapear:\r\n\r\n```\r\n$ ipython\r\nPython 3.6.0 |Continuum Analytics, Inc.| (default, Dec 23 2016, 13:19:00)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.1.0.dev -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: display\r\nOut[1]: <function IPython.core.display.display>\r\n\r\nIn [2]: display = 1\r\n\r\nIn [3]: del display\r\n\r\nIn [4]: display\r\nOut[4]: <function IPython.core.display.display>\r\n\r\nIn [5]: del display\r\n\r\nIn [6]: display\r\nOut[6]: <function IPython.core.display.display>\r\n```\r\n\r\nIf in builtins, il will complain  that object can't be found if trying to delete it:\r\n\r\n```\r\n$ ipython\r\nPython 3.6.0 |Continuum Analytics, Inc.| (default, Dec 23 2016, 13:19:00)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.1.0.dev -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: display\r\nOut[1]: <function IPython.core.display.display>\r\n\r\nIn [2]: display = 1\r\n\r\nIn [3]: display\r\nOut[3]: 1\r\n\r\nIn [4]: del display\r\n\r\nIn [5]: display\r\nOut[5]: <function IPython.core.display.display>\r\n\r\nIn [6]: del display\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-6-78e18c419bea> in <module>()\r\n----> 1 del display\r\n\r\nNameError: name 'display' is not defined\r\n```\r\n\r\nThe user_ns_hidden also have the case that the object reapears only after each cell execution so cutting cell may change behavior. For example NameError  vs NoError\r\n```\r\nIn [1]: display=1\r\n   ...: print(display)\r\n   ...: del display\r\n   ...: print(display)\r\n   ...:\r\n1\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-2-bb2e1216e38f> in <module>()\r\n      2 print(display)\r\n      3 del display\r\n----> 4 print(display)\r\n\r\nNameError: name 'display' is not defined\r\n\r\nIn [2]: display = 1\r\n   ...: print(display)\r\n   ...: del display\r\n1\r\n\r\nIn [3]: print(display)\r\n<function display at 0x102dfbd08>\r\n```\r\n\r\nWe can also not reinject it, but I believe it is the wrong solution. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304091221",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304091221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304091221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA5MTIyMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T18:46:29Z",
    "updated_at": "2017-05-25T18:46:29Z",
    "author_association": "MEMBER",
    "body": "Or, we can change the exec for `exec(code_obj, self.user_global_ns, ChainMap(self.user_ns, hidden_ns))`\r\n\r\n(you can't ChainMap global, exec refuses), that should avoid a lot of the hidden_ns dance we do."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304560812",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304560812",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304560812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDU2MDgxMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-29T02:40:19Z",
    "updated_at": "2017-05-29T02:40:19Z",
    "author_association": "MEMBER",
    "body": "Rebased, updated, tested, documented."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304747751",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304747751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304747751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDc0Nzc1MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T00:26:16Z",
    "updated_at": "2017-05-30T00:26:23Z",
    "author_association": "MEMBER",
    "body": "`@fperez` seem to +1, \r\n`@jasongrout` was a good devil advocate and seem to agree this is a good idea\r\n`@willingc` seem to thing for users. \r\n\r\nThere is one  (longstanding) issue that calling display in a pure Python terminal break the repl by instantiating an InteractiveShell (which has crazy side effects like nuking your namespace and setting sys.ps1), I'm unsure it's a blocker for this PR. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304886988",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304886988",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304886988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg4Njk4OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T13:59:18Z",
    "updated_at": "2017-05-30T13:59:18Z",
    "author_association": "MEMBER",
    "body": "But that will only happen if you start a plain Python shell after starting IPython in the same process, right? I don't think that comes up very often."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304969718",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304969718",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304969718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk2OTcxOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T18:39:24Z",
    "updated_at": "2017-05-30T18:39:24Z",
    "author_association": "MEMBER",
    "body": "> But that will only happen if you start a plain Python shell after starting IPython in the same process, right? I don't think that comes up very often.\r\n\r\nNot even, it break if you just call display in a pure python repl. We can fix that, the only question if what to do. If Interactiveshell._instance is None fallback on print ? Even if raw=True ? \r\n\r\n```\r\n$ python\r\nPython 3.6.0 |Continuum Analytics, Inc.| (default, Dec 23 2016, 13:19:00)\r\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from IPython.display import display\r\n>>> a = 1\r\n>>> display(a)\r\n1\r\nIn : a\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nNameError: name 'a' is not defined\r\nIn :\r\n```\r\n\r\nBut that's another issue. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304971037",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304971037",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304971037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk3MTAzNw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T18:44:14Z",
    "updated_at": "2017-05-30T18:44:14Z",
    "author_association": "MEMBER",
    "body": "@meeseeksdev backport"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/304971086",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-304971086",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 304971086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk3MTA4Ng==",
    "user": {
      "login": "meeseeksdev[bot]",
      "id": 24485218,
      "node_id": "MDM6Qm90MjQ0ODUyMTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meeseeksdev%5Bbot%5D",
      "html_url": "https://github.com/apps/meeseeksdev",
      "followers_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-05-30T18:44:25Z",
    "updated_at": "2017-05-30T18:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oops, something went wrong applying the patch... Please have  a look at my logs."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305151091",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-305151091",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 305151091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE1MTA5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T10:29:32Z",
    "updated_at": "2017-05-31T10:29:32Z",
    "author_association": "MEMBER",
    "body": "Oh, I see, you mean if code explicitly imports it. That's not affected by injecting display into builtins when IPython runs, though."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305229698",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-305229698",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 305229698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIyOTY5OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T15:46:38Z",
    "updated_at": "2017-05-31T15:46:38Z",
    "author_association": "MEMBER",
    "body": "> Oh, I see, you mean if code explicitly imports it. That's not affected by injecting display into builtins when IPython runs, though.\r\n\r\nYes, sorry the missing datapoint is:\r\nIf we inject it into builtins, we might want `nbconvert --to script` to add the import at the top. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305238754",
    "html_url": "https://github.com/ipython/ipython/pull/10596#issuecomment-305238754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10596",
    "id": 305238754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIzODc1NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T16:16:50Z",
    "updated_at": "2017-05-31T16:16:50Z",
    "author_association": "MEMBER",
    "body": "Ah, that makes sense. Yeah, that's tricky."
  }
]
