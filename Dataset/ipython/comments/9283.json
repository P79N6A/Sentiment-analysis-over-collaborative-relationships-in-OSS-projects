[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/190410277",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-190410277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 190410277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQxMDI3Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T21:46:28Z",
    "updated_at": "2016-02-29T21:46:28Z",
    "author_association": "MEMBER",
    "body": "Note that tab also try to complete, so we might want to indent only on empty line. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/190414312",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-190414312",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 190414312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQxNDMxMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T21:54:24Z",
    "updated_at": "2016-02-29T21:54:24Z",
    "author_association": "MEMBER",
    "body": "Hi Stefan!\n\nThe auto-dedenting is correct, I think - when you use something like `return`, `continue`, `break`, or `pass`, it dedents, because that normally means you've finished the indented block.\n\nGood catch on using the tab key for indentation as well as completion, though - that should work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/190415876",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-190415876",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 190415876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQxNTg3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T21:57:52Z",
    "updated_at": "2016-02-29T21:57:52Z",
    "author_association": "MEMBER",
    "body": "Better description of @stefanv problem, `|` is the cursor `<enter>` mean pressing enter.\n\n```\nIn [1]: def foo():|<enter>\n   ...:     1\n   ...:\n```\n\nresult: \n\n```\nIn [1]: def foo():\n   ...:|\n   ...:     1\n   ...:\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279092111",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279092111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279092111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA5MjExMQ==",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T23:13:08Z",
    "updated_at": "2017-02-10T23:16:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "The last example above is still broken :/\r\n\r\n```\r\nIn [3]: def foo(a):\r\n   ...:\r\n   ...:     1|<enter>\r\n```\r\n(blankline needed)\r\n```\r\nIn [3]: def foo(a):\r\n   ...:\r\n   ...:     1\r\n   ...:|\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279092757",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279092757",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279092757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA5Mjc1Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T23:17:00Z",
    "updated_at": "2017-02-10T23:17:00Z",
    "author_association": "MEMBER",
    "body": "Updated @stefanv comment for further precision. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279097085",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279097085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279097085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA5NzA4NQ==",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T23:45:33Z",
    "updated_at": "2017-02-10T23:46:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may be a new issue or same, but I think you should be able to define a function with a newline in it:\r\n\r\n```\r\nIn [1]: def foo():\r\n   ...:     \"hello\"\r\n   ...:     if 1==0:\r\n   ...:         print(False)\r\n   ...:\r\n\r\nIn [2]: |\r\n```\r\n\r\ninstead of\r\n\r\n```\r\nIn [1]: def foo():\r\n   ...:     \"hello\"\r\n   ...:     if 1==0:\r\n   ...:         print(False)\r\n   ...:\r\n   ...:         |\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279420111",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279420111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279420111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTQyMDExMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T15:14:57Z",
    "updated_at": "2017-02-13T15:14:57Z",
    "author_association": "MEMBER",
    "body": "In general, we take a blank line to indicate that input is complete. This has been the idea since forever, although the exact details may have changed. If you want to enter code including blank lines, you can now press F2 to use $EDITOR."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279497132",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279497132",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279497132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTQ5NzEzMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T19:32:33Z",
    "updated_at": "2017-02-13T19:32:33Z",
    "author_association": "MEMBER",
    "body": "> In general, we take a blank line to indicate that input is complete. This has been the idea since forever, although the exact details may have changed.\r\n\r\nI think the question was to make it 2 blank lines. I think with the eddition capabilities of PTK whether it was or not the case I think it make sens to consider. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279565461",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279565461",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279565461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTU2NTQ2MQ==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T00:10:05Z",
    "updated_at": "2017-02-14T00:37:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I once used a solution to the Return/Enter problem that sounds complicated, but was really intuitive in practice.\r\n\r\nBy default, <kbd>Enter</kbd> would just input a newline, so you could edit multiline inputs just like a regular text editor, and <kbd>Ctrl</kbd>+<kbd>Enter</kbd> would evaluate the input. That's obviously a pretty common approach. What was novel was what happened if you hit <kbd>Enter</kbd>, *and* the input was a single line, *and* the input was a one-liner (which IPython can determine statically​). In that case, the shell would evaluate the input when you hit <kbd>Enter</kbd>, as though you'd hit <kbd>Ctrl</kbd>+<kbd>Enter</kbd>.\r\n\r\n​It sounds like you would have to think too much, but you actually just think in terms of editing chunks of Python using the default keybindings **or** quickly entering a command and hitting <kbd>Enter</kbd>. It feels like the interpreter just magically knows what you're thinking.\r\n\r\nIt would obviously be opt-in. Maybe go with *Enable Psychic Return Key* :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279618357",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279618357",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279618357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTYxODM1Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T06:18:21Z",
    "updated_at": "2017-02-14T06:18:21Z",
    "author_association": "MEMBER",
    "body": "That's mostly how IPython currently work, except there is less distinction multiline/oneline.\r\n\r\n- oneline:\r\n   - if the code is valid and complete: Execute\r\n   - otherwise add new line\r\n- multiline.\r\n   - if code valid, complete and have at least one new line at the end: Execute\r\n   - otherwise : add new line.\r\n\r\nAdd on top: cursor need to be at the end of buffer, and Ctrl-Enter always execute. \r\nThe question is what if you want a white line in your code ?\r\n\r\n_Enable Psychic Return Key_ sounds great, like _Write the code I'm thinking of_ :-) "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279947338",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-279947338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 279947338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTk0NzMzOA==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T08:29:16Z",
    "updated_at": "2017-02-15T08:29:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, IPython is very similar, but still feels quit different in practice.\nThe approach I described is less eager to execute, except with line magics\nand system commands, where it's the same. With anything else, it assumes\nyou want to edit a chunk of code, so entering two lines is just a matter of\nhitting Return twice.\n\nMy style is less efficient when you want to enter a regular Python\none-liner. Often, you don't need to use single line inputs, like if you\nwant to do a couple of assignments, you can just do it as a two-line block\ninstead, but still, you often do want to evaluate a single expression, so\nit is still a compromise.\n\nThank you for considering it, Matthias. It's really just food for thought.\n\nOn Tue, 14 Feb 2017 06:18 Matthias Bussonnier, <notifications@github.com>\nwrote:\n\n> That's mostly how IPython currently work, except there is less distinction\n> multiline/oneline.\n>\n>    - oneline:\n>       - if the code is valid and complete: Execute\n>       - otherwise add new line\n>    - multiline.\n>       - if code valid, complete and have at least one new line at the\n>       end: Execute\n>       - otherwise : add new line.\n>\n> Add on top: cursor need to be at the end of buffer, and Ctrl-Enter always\n> execute.\n> The question is what if you want a white line in your code ?\n>\n> *Enable Psychic Return Key* sounds great, like *Write the code I'm\n> thinking of* :-)\n>\n> —\n> You are receiving this because you commented.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/issues/9283#issuecomment-279618357>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AHNhxOo2cNeH8AWVWlw4ia3QiSpOph-lks5rcUc4gaJpZM4Hl0s_>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281474320",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-281474320",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 281474320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ3NDMyMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T20:44:36Z",
    "updated_at": "2017-02-21T20:44:36Z",
    "author_association": "MEMBER",
    "body": "I've opened #10319 to track the execution semantics of enter.\r\n\r\nClosing this as the bug(s) are fixed. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283754350",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-283754350",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 283754350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzc1NDM1MA==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T19:29:41Z",
    "updated_at": "2017-03-02T19:29:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Perhaps related issue (I can open a new one if you prefer): C-Enter is not working for me (either to force execution of a multiline input without having to press enter twice, with the cursor at the end, or to execute a single or multiline input with the cursor NOT at the end of the buffer).  I've tried both vi and emacs input modes on PTK."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283757818",
    "html_url": "https://github.com/ipython/ipython/issues/9283#issuecomment-283757818",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9283",
    "id": 283757818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzc1NzgxOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T19:41:53Z",
    "updated_at": "2017-03-02T19:41:53Z",
    "author_association": "MEMBER",
    "body": "> I can open a new one if you prefer\r\n\r\nYes please. Though if by  C you mean Ctrl, there is not much we can do as \"Enter\" is indistinguishable from `Ctrl+J` so `Ctrl+Enter`  is the same as enter, and `Esc,Enter` (or `Ctrl-[`, `Enter`) should execute. "
  }
]
