[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283457484",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283457484",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283457484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ1NzQ4NA==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T20:19:03Z",
    "updated_at": "2017-03-01T20:19:03Z",
    "author_association": "MEMBER",
    "body": "I'm willing to do the work to get this back in time for 6.0, so I'll tag #10329 here."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283463913",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283463913",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283463913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ2MzkxMw==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T20:43:55Z",
    "updated_at": "2017-03-01T20:43:55Z",
    "author_association": "MEMBER",
    "body": "I think this is a particularly important issue because long time users and advocates of IPython are finding themselves frustrated by or even unwilling to use IPython 5 as it is right now."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283468881",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283468881",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283468881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ2ODg4MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T21:02:13Z",
    "updated_at": "2017-03-01T21:02:13Z",
    "author_association": "MEMBER",
    "body": "I'm happy to add that back as an option, though most of the code has been removed and that will likely be a lot of efforts to reintegrate readline.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283469968",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283469968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283469968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ2OTk2OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T21:06:22Z",
    "updated_at": "2017-03-01T21:06:22Z",
    "author_association": "MEMBER",
    "body": "If we can figure out how to make that optional (so that it can evolve faster than than core to re-fix potential bug that were introduced by the revival, that would be great. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283471718",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283471718",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283471718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ3MTcxOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T21:12:37Z",
    "updated_at": "2017-03-01T21:12:37Z",
    "author_association": "MEMBER",
    "body": "We might want to delay #10356 if we bring RL back. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283472000",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283472000",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283472000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ3MjAwMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T21:13:37Z",
    "updated_at": "2017-03-01T21:13:37Z",
    "author_association": "MEMBER",
    "body": "See #9260 as well."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283472535",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283472535",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283472535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ3MjUzNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T21:15:43Z",
    "updated_at": "2017-03-01T21:15:43Z",
    "author_association": "MEMBER",
    "body": "And #9399 is the bulk of the removal. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283614031",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283614031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283614031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzYxNDAzMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T10:19:20Z",
    "updated_at": "2017-03-02T10:19:20Z",
    "author_association": "MEMBER",
    "body": "I am strongly -1 on this. We were able to drop a lot of code and complexity when we ditched readline, (and we're working on dropping still more), while dramatically improving the user experience for most users. If we bring back a readline option, we have all the complexity of both interfaces to maintain ~forever. We always knew a change this big would break some workflows, but I'm confident that it's a net improvement, and I do not want us to be in the business of maintaining two alternative terminal interfaces.\r\n\r\nI would rather we:\r\n\r\n1. Continue to work on anything we can improve both in IPython and in prompt_toolkit to remove obstacles to switching. Jonathan has generally been impressively responsive and helpful whenever we've pinged him about issues relating to PTK, so I think we have a good chance of getting any changes we need accepted. This includes things like better documenting how to set custom shortcuts, and maybe experimenting with reading `.inputrc` (though I'd rather that was an off-by-default option, for reasons I've explained elsewhere). If we give people an easy option to go back to readline, these improvements are not going to happen.\r\n2. If there are still people who really insist on using readline, spin out a separate package like `rlipython` which provides the terminal interface, but make it very clear that it's community maintained, not something we are officially supporting."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283691635",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283691635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283691635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzY5MTYzNQ==",
    "user": {
      "login": "pfmoore",
      "id": 1110419,
      "node_id": "MDQ6VXNlcjExMTA0MTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfmoore",
      "html_url": "https://github.com/pfmoore",
      "followers_url": "https://api.github.com/users/pfmoore/followers",
      "following_url": "https://api.github.com/users/pfmoore/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions",
      "organizations_url": "https://api.github.com/users/pfmoore/orgs",
      "repos_url": "https://api.github.com/users/pfmoore/repos",
      "events_url": "https://api.github.com/users/pfmoore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfmoore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T15:51:16Z",
    "updated_at": "2017-03-02T15:51:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Given that there were always a number of problems with pyreadline on Windows (not least of it, the fact that it globally affected the standard Python REPL as well as IPython) I'd prefer that not requiring (py)readline remain the default, at least on Windows. If a user prefers to install pyreadline manually and enable it, that's fine, but IPython should work without pyreadline present, and not include it as a dependency of a normal install."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283709135",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283709135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283709135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzcwOTEzNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T16:48:33Z",
    "updated_at": "2017-03-02T16:48:33Z",
    "author_association": "MEMBER",
    "body": "> If there are still people who really insist on using readline, spin out a separate package like rlipython which provides the terminal interface, but make it very clear that it's community maintained, not something we are officially supporting.\r\n\r\nI think that is reasonable, though I believe have some integration (like a flag and/or an env variable) with IPython that restore previous behavior is reasonable. The goal would be to have already well spread scripts and recipes that do rely on IPython readline still working with a simple switch.\r\n\r\nMy guess is that a simple config in IPythonApp, that make the  TerminalInteractiveShell class use a traitlet, plus a --readline flag that have a preset value to a known external package would be enough.\r\n\r\nThe ipython as a separate package will also allow to not block IPython 6, and get a fast iteration cycle if necessary.\r\n\r\n\r\n>  If we give people an easy option to go back to readline, these improvements are not going to happen.\r\n\r\nI doubt that is completely true. The multiline, highlighting, and now completion are still a large advantage of the PTK interface. And user that are pinning to 4.x because they can't even use bothe RL/PTK in parallel have no incentive send patch to IPython / PTK to smooth the behavior."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283711537",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283711537",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283711537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzcxMTUzNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T16:56:18Z",
    "updated_at": "2017-03-02T16:56:18Z",
    "author_association": "MEMBER",
    "body": "I wouldn't integrate it with a switch, because that makes it look like a supported option, and people will file bugs about it here. `rlipython` is less typing than `ipython --readline` anyway, and if people are keen to use it as `ipython`, they can alias it."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283729392",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283729392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283729392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzcyOTM5Mg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T17:58:40Z",
    "updated_at": "2017-03-02T17:58:40Z",
    "author_association": "MEMBER",
    "body": "Just a note on the current experience of `ctrl-r`:\r\n\r\nIn Bash, when you hit ctrl-r then hit escape, it will exit you out.\r\n\r\nIn this one it does nothing when it should close the search area."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283762601",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-283762601",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 283762601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzc2MjYwMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T19:59:09Z",
    "updated_at": "2017-03-02T23:07:28Z",
    "author_association": "MEMBER",
    "body": "> Just a note on the current experience of ctrl-r:\r\n> In Bash, when you hit ctrl-r then hit escape, it will exit you out. \r\n> In this one it does nothing when it should close the search area.\r\n\r\nThis one is easy to fix, but not totally:\r\n\r\n```diff\r\n ~/dev/ipython master [1]\"!!\" $ git diff\r\ndiff --git a/IPython/terminal/shortcuts.py b/IPython/terminal/shortcuts.py\r\nindex 22ad111..89713cd 100644\r\n--- a/IPython/terminal/shortcuts.py\r\n+++ b/IPython/terminal/shortcuts.py\r\n@@ -54,6 +54,10 @@ def register_ipython_shortcuts(registry, shell):\r\n     registry.add_binding(Keys.ControlC, filter=HasFocus(DEFAULT_BUFFER)\r\n                         )(reset_buffer)\r\n\r\n+\r\n+    registry.add_binding(Keys.Escape, filter=HasFocus(SEARCH_BUFFER)\r\n+                        )(reset_search_buffer)\r\n+\r\n     registry.add_binding(Keys.ControlC, filter=HasFocus(SEARCH_BUFFER)\r\n                         )(reset_search_buffer)\r\n```\r\n\r\nThat will work, but the `I-search-backward:` will still be visible until you press a new key. This new key will behave has if the backward search was dismissed,  but it feels extremely weird.   \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284113243",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284113243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284113243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDExMzI0Mw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T01:13:31Z",
    "updated_at": "2017-03-04T01:13:31Z",
    "author_association": "MEMBER",
    "body": "Thanks for opening this, @ivanov! I'm going to go over the details a bit more carefully, I'm also going to encourage more feedback on the list on this.  It's evidently a tricky balance and contentious, thus a good sign that more voices can at least inform our decision process."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284136479",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284136479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284136479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDEzNjQ3OQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T08:16:15Z",
    "updated_at": "2017-03-04T08:16:15Z",
    "author_association": "MEMBER",
    "body": "Just an update on the possible way forward for this effort: instead of bringing the removed code into IPython proper, @Carreau made a new project with just the old readline-based code over at [Carreau/rlipython](https://github.com/Carreau/rlipython), and made #10373 which allows users to customize this piece."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284153364",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284153364",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284153364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE1MzM2NA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T14:03:51Z",
    "updated_at": "2017-03-04T14:03:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI: the issue that is described in the mailing list:\r\n> I ask mainly because in SMC at least, if you try to paste in multiple\r\n> lines it pastes in the first line and silently **ignores everything\r\n> else**.   This may be an issue with the level of xterm support in SMC\r\n> (i.e., term.js).  However, it's pretty frustrating. \r\n\r\nThis indicates that this terminal does not support bracketed paste.\r\nIMHO: I think that these days we can expect from any terminal to support it: https://cirw.in/blog/bracketed-paste  (At least prompt_toolkit will require bracketed paste, for pasting multiline text.)\r\n\r\nIt could be worth adding readline support again, but notice that multiple of the mentioned bugs are already fixed or will receive a fix. Biggest problems are probably the Emacs terminal (which is not really an xterm-compatible terminal and will never be supported), and .inputrc support which will eventually come, but due to bandwidth/priority issues on my side, will take some time.\r\n\r\nIn any case, keep reporting user experience issues. This is important."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284200058",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284200058",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284200058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDIwMDA1OA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-05T02:23:54Z",
    "updated_at": "2017-03-05T02:23:54Z",
    "author_association": "MEMBER",
    "body": "@pfmoore that's a good point. I would doubt any Windows environments are hurting from the lack of pyreadline. If we bring back readline UI, it probably makes sense to do this for 'true' readline only, whether it's in IPython or the `rlipython` package.\r\n\r\nOne advantage of the separate rlipython package is that it can be used with the existing IPython 5 release, whereas doing it in IPython itself would obviously only work for new IPython releases."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284775240",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284775240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284775240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDc3NTI0MA==",
    "user": {
      "login": "matthew-brett",
      "id": 67612,
      "node_id": "MDQ6VXNlcjY3NjEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew-brett",
      "html_url": "https://github.com/matthew-brett",
      "followers_url": "https://api.github.com/users/matthew-brett/followers",
      "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
      "repos_url": "https://api.github.com/users/matthew-brett/repos",
      "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T16:33:29Z",
    "updated_at": "2017-03-07T16:33:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to add #9799 as another source of discomfort with the prompt_toolkit defaults.   I'd be perfectly happy with an extra external package to install."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284865252",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284865252",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284865252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDg2NTI1Mg==",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T21:29:24Z",
    "updated_at": "2017-03-07T21:29:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "pyreadline is a pain on Windows, but prompt-toolkit has also issues. So between 2 unsatisfactory solutions, the less \"technical debt\" solution looks like the best solution: prompt-toolkit. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284882252",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-284882252",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 284882252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDg4MjI1Mg==",
    "user": {
      "login": "matthew-brett",
      "id": 67612,
      "node_id": "MDQ6VXNlcjY3NjEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew-brett",
      "html_url": "https://github.com/matthew-brett",
      "followers_url": "https://api.github.com/users/matthew-brett/followers",
      "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
      "repos_url": "https://api.github.com/users/matthew-brett/repos",
      "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T22:33:00Z",
    "updated_at": "2017-03-07T22:33:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the point is that prompt_toolkit is better for some people, and readline is better for other people.   So the question is, is it necessary to cut the readline people loose to avoid maintaining the extra code? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285119683",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-285119683",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 285119683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExOTY4Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T18:07:29Z",
    "updated_at": "2017-03-08T18:07:29Z",
    "author_association": "MEMBER",
    "body": "> pyreadline is a pain on Windows, but prompt-toolkit has also issues. So between 2 unsatisfactory solutions, the less \"technical debt\" solution looks like the best solution: prompt-toolkit.\r\n\r\n\r\n> I think the point is that prompt_toolkit is better for some people, and readline is better for other people. So the question is, is it necessary to cut the readline people loose to avoid maintaining the extra code?\r\n\r\nNote that right now the attached PR (#10373) is 4 lines, and is just a configuration option to make it a configuration option. The readline code would not even be in IPython and would be an extension. \r\n\r\nThe real question is:\r\n\r\n- A: Is it ok if readline-ipython is a separate executable with a different spelling. \r\n- B: Or for script and extensions that shell-out to IPython, (emacs for example), should it be an IPython configuration option.\r\n\r\nIn both case readline will not be made a dependency of IPython again. \r\n\r\nIt does influence a couple of functionalities that are simpler to keep in IPython, but the main contention right now is A or B. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285184167",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-285184167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 285184167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE4NDE2Nw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T22:02:33Z",
    "updated_at": "2017-03-08T22:02:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the emacs side either is fine.  B seems more flexible in the long run."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285198928",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-285198928",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 285198928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE5ODkyOA==",
    "user": {
      "login": "matthew-brett",
      "id": 67612,
      "node_id": "MDQ6VXNlcjY3NjEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew-brett",
      "html_url": "https://github.com/matthew-brett",
      "followers_url": "https://api.github.com/users/matthew-brett/followers",
      "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
      "repos_url": "https://api.github.com/users/matthew-brett/repos",
      "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T23:03:15Z",
    "updated_at": "2017-03-08T23:03:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess, for those of us who prefer readline, we'd want readline for IPython shelling out as well - so B."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287988133",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-287988133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 287988133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzk4ODEzMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T06:25:12Z",
    "updated_at": "2017-03-21T22:02:12Z",
    "author_association": "MEMBER",
    "body": "I've been thinking about this one for a while and talking to a few folks on the team I've had a chance to engage in-person.  Here's my take on the matter. I'm not yet calling a final decision, but I *am* trying to move us closer to a resolution. BTW, I want to emphasize that I am *very* grateful to the Prompt Toolkit team, as it's given us in the vast majority of cases an amazing, modern and high-quality user experience.  On to the matter at hand:\r\n\r\n- the concerns of users who need readline are very real, and I think we should find a good solution for them now, even if the cost is carrying some extra code in/around IPython.\r\n\r\n- We'll continue working with the PT team to improve it towards feature parity with readline where that's an issue (I'm aware it has a vast collection of features RL doesn't have).\r\n\r\n- Even if PT improves further, I can still see situations where plain old readline will be valuable.  PT, by virtue of its sophistication, is likely to be slower or more brittle when say running inside tmux over ssh within an ipython shell inside Emacs.  That is a *valid* use case that we should support well, and that we used to.\r\n\r\nGiven this, I think a good compromise solution is along the lines of what @Carreau has proposed in his PR:\r\n\r\n- we support readline but only via a third-party package that has to be manually installed by the user.\r\n\r\n- the user can then either set the use of this package in their config file, call it at the command line, or write a shell alias or tiny wrapper script.  Yes, this requires a bit of extra work on the part of users of this corner case, but it gives them a clean solution at minimal cost, while the majority of users who can use PT (and benefit from its features) continue doing so uninterrupted.\r\n\r\nThis does mean supporting for a while this extra package, but I don't imagine it will be that much work: that code barely changed in quite a while, and we're not talking about adding lots of new features.  Simply maintaining compatibility with existing, historical baseline behavior.\r\n\r\nThe one cost that I see as somewhat significant is that (mentioned by @Carreau) there may be code we'd like to rip out that this would prevent us from removing.  I see that as a price we should pay for the benefit of our users, at least for now.  If at some future time we truly find ourselves in a situation where PT is a 100% replacement for RL in every conceivable case, we can revisit.  But for now, keeping a bit of slightly stale, special-purpose code for the benefit of some subset of our users is the right thing to do.  Over the years we've had multiple kinds of special-case code (windows, py2/3, etc.) and I'm sure we will again in the future.  Serving the workflows of our users should, I think, take priority over a code cleanup (in this situation, not making a blanket statement).\r\n\r\nHow does this sound?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287989275",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-287989275",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 287989275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzk4OTI3NQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T06:33:37Z",
    "updated_at": "2017-03-21T06:33:37Z",
    "author_association": "MEMBER",
    "body": "BTW, I think this 'fix' ought to be backported to the 5.x series: if anything, I suspect the population of users still on python 2.x has a good overlap with that of people working remotely on older servers. So my vote would be for making the external package be python 2-3 compatible, and to backport the ipython side of the code to 5.x."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288558705",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-288558705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 288558705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU1ODcwNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-22T22:24:15Z",
    "updated_at": "2017-03-23T21:16:14Z",
    "author_association": "MEMBER",
    "body": "Thanks Fernando for taking the time to respond, and especially for reaching to several people. \r\nI'll work on polishing my PR, merge it and backport it to 5.0. \r\n\r\nI've [rlipython](https://github.com/Carreau/rlipython) on GitHub for anyone who is interested in maintaining the readline interface. I won't maintain, and won't publish it on PyPI, but you are welcome to do it, and it might be a good things to move this to https://github.com/ipython-contrib if you need an org.\r\n\r\nThanks ! "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288574274",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-288574274",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 288574274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU3NDI3NA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-22T23:46:46Z",
    "updated_at": "2017-03-22T23:46:46Z",
    "author_association": "MEMBER",
    "body": "I actually think we should host this on the main IPython org, and put it on pypi.  We can also send a slightly more welcoming message to the community, along the lines of: \r\n\r\n> this is something that we offer in support of historical compatibility and certain specific use cases where our main interface (prompt-toolkit) isn't optimal. But we do not envision any significant development beyond fixing critical bugs. We only have the resources to offer this as a best-effort solution. If you are interested in doing any significant development on this tool, please let us know via an issue, and we can explore transferring  maintainership of the package to you.\"\r\n\r\nIf @ivanov has a few cycles to put in this direction that would be great, but if not I'm willing to do it over the next couple of weeks.  I think it's an important part of engaging with all corners of our user community.\r\n\r\nThanks @Carreau for pushing the work this far!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/293105824",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-293105824",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 293105824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzEwNTgyNA==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T23:18:09Z",
    "updated_at": "2017-04-10T23:18:09Z",
    "author_association": "MEMBER",
    "body": "Thanks everyone, especially @Carreau for getting `rlipython` up. I've started working on it and whipping it into shape. In case anyone missed it, it now lives under [ipython/rlipython](/ipython/rlipython). I'll try to get a release out in the next two weeks as I start working with it, but for now I can say it works! There's one known issue right now - In/Out prompts not being colored, which I am tracking in ipython/rlipython#3, but other than that, it seems great."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/296311136",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-296311136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 296311136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjMxMTEzNg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-21T21:36:41Z",
    "updated_at": "2017-04-21T21:36:41Z",
    "author_association": "MEMBER",
    "body": "@ivanov, ping me on that if you'd like a hand... I'd offered above but I was more than a bit naïve about my time availability these last few weeks.  Nonetheless I want to help this reach a solid solution for all cmd line users, so I'm still willing to pitch in if you need a hand (and would enjoy doing so :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/300638747",
    "html_url": "https://github.com/ipython/ipython/issues/10364#issuecomment-300638747",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10364",
    "id": 300638747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDYzODc0Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T23:16:05Z",
    "updated_at": "2017-05-10T23:16:05Z",
    "author_association": "MEMBER",
    "body": "Closed by #10373  and backported as  #10463"
  }
]
