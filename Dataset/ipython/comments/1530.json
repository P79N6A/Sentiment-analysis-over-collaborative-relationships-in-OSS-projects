[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12460845",
    "html_url": "https://github.com/ipython/ipython/issues/1530#issuecomment-12460845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1530",
    "id": 12460845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDYwODQ1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-19T20:45:46Z",
    "updated_at": "2013-01-19T20:45:46Z",
    "author_association": "MEMBER",
    "body": "The issue is that only the KernelManager that owns the process is able to restart it, and kernel managers don't talk to each other.  Fixing #2803 will address this, among other things, because all KernelClients will be able to send control messages to the one and only KernelManager, which would then actually signal / restart the Kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/379879629",
    "html_url": "https://github.com/ipython/ipython/issues/1530#issuecomment-379879629",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1530",
    "id": 379879629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTg3OTYyOQ==",
    "user": {
      "login": "apnewberry",
      "id": 31109952,
      "node_id": "MDQ6VXNlcjMxMTA5OTUy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/31109952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apnewberry",
      "html_url": "https://github.com/apnewberry",
      "followers_url": "https://api.github.com/users/apnewberry/followers",
      "following_url": "https://api.github.com/users/apnewberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/apnewberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apnewberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apnewberry/subscriptions",
      "organizations_url": "https://api.github.com/users/apnewberry/orgs",
      "repos_url": "https://api.github.com/users/apnewberry/repos",
      "events_url": "https://api.github.com/users/apnewberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apnewberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T20:14:37Z",
    "updated_at": "2018-04-09T20:14:58Z",
    "author_association": "NONE",
    "body": "When I change a module, I like to re-import it in my notebook. Is there currently a way to restart the kernel in ipython? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/380201631",
    "html_url": "https://github.com/ipython/ipython/issues/1530#issuecomment-380201631",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1530",
    "id": 380201631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIwMTYzMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T18:27:45Z",
    "updated_at": "2018-04-10T18:27:45Z",
    "author_association": "MEMBER",
    "body": "In the notebook, click the restart button in the toolbar, or (in command mode), press `0, 0` (the number zero, twice). You can see more about the keyboard shortcuts in the help menu."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/380252637",
    "html_url": "https://github.com/ipython/ipython/issues/1530#issuecomment-380252637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1530",
    "id": 380252637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDI1MjYzNw==",
    "user": {
      "login": "apnewberry",
      "id": 31109952,
      "node_id": "MDQ6VXNlcjMxMTA5OTUy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/31109952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apnewberry",
      "html_url": "https://github.com/apnewberry",
      "followers_url": "https://api.github.com/users/apnewberry/followers",
      "following_url": "https://api.github.com/users/apnewberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/apnewberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apnewberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apnewberry/subscriptions",
      "organizations_url": "https://api.github.com/users/apnewberry/orgs",
      "repos_url": "https://api.github.com/users/apnewberry/repos",
      "events_url": "https://api.github.com/users/apnewberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apnewberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T21:28:30Z",
    "updated_at": "2018-04-10T21:28:30Z",
    "author_association": "NONE",
    "body": "Thanks, @takluyver . "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/381373248",
    "html_url": "https://github.com/ipython/ipython/issues/1530#issuecomment-381373248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1530",
    "id": 381373248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTM3MzI0OA==",
    "user": {
      "login": "CAM-Gerlach",
      "id": 17051931,
      "node_id": "MDQ6VXNlcjE3MDUxOTMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17051931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CAM-Gerlach",
      "html_url": "https://github.com/CAM-Gerlach",
      "followers_url": "https://api.github.com/users/CAM-Gerlach/followers",
      "following_url": "https://api.github.com/users/CAM-Gerlach/following{/other_user}",
      "gists_url": "https://api.github.com/users/CAM-Gerlach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CAM-Gerlach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CAM-Gerlach/subscriptions",
      "organizations_url": "https://api.github.com/users/CAM-Gerlach/orgs",
      "repos_url": "https://api.github.com/users/CAM-Gerlach/repos",
      "events_url": "https://api.github.com/users/CAM-Gerlach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CAM-Gerlach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-15T01:28:00Z",
    "updated_at": "2018-04-15T01:28:00Z",
    "author_association": "NONE",
    "body": "@apnewberry Shameless plug, but you can also use an IDE like [Spyder](https://github.com/spyder-ide/spyder) which is integrated closely with IPython, where we have User Module Reloader which tells IPython to reload any local modules with changes automatically, all within the same session and without restarting or even clearing variables."
  }
]
