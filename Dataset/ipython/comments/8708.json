[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/129569151",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-129569151",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 129569151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTU2OTE1MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-10T19:08:36Z",
    "updated_at": "2015-08-10T19:08:36Z",
    "author_association": "MEMBER",
    "body": "What happens if you make sure pyximport is set up on the engines as well:\n\n```\n%px import pyximport; pyximport.install()\n```\n\nand then try?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/129766034",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-129766034",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 129766034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTc2NjAzNA==",
    "user": {
      "login": "mhooreman",
      "id": 7373718,
      "node_id": "MDQ6VXNlcjczNzM3MTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7373718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhooreman",
      "html_url": "https://github.com/mhooreman",
      "followers_url": "https://api.github.com/users/mhooreman/followers",
      "following_url": "https://api.github.com/users/mhooreman/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhooreman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhooreman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhooreman/subscriptions",
      "organizations_url": "https://api.github.com/users/mhooreman/orgs",
      "repos_url": "https://api.github.com/users/mhooreman/repos",
      "events_url": "https://api.github.com/users/mhooreman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhooreman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T08:25:25Z",
    "updated_at": "2015-08-11T08:25:50Z",
    "author_association": "NONE",
    "body": "Thanks minrk.\n\nI've tried the following in proofs.py (I'm not within ipython environment, so magics are not available).\n\nSame results, it doesn't works\n\nBest regards.\n\n```\nc = Client()\nwith c[:].sync_imports():\n    import pyximport; pyximport.install()\n    import clib\ncToto = clib.Toto()\n[...]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/129958207",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-129958207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 129958207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTk1ODIwNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T16:33:16Z",
    "updated_at": "2015-08-11T16:33:16Z",
    "author_association": "MEMBER",
    "body": "I don't think that example will result in calling `pyximport.install()`. `sync_imports` only syncs the actual imports, not any other code in the context.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/134170221",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-134170221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 134170221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDE3MDIyMQ==",
    "user": {
      "login": "mhooreman",
      "id": 7373718,
      "node_id": "MDQ6VXNlcjczNzM3MTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7373718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhooreman",
      "html_url": "https://github.com/mhooreman",
      "followers_url": "https://api.github.com/users/mhooreman/followers",
      "following_url": "https://api.github.com/users/mhooreman/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhooreman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhooreman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhooreman/subscriptions",
      "organizations_url": "https://api.github.com/users/mhooreman/orgs",
      "repos_url": "https://api.github.com/users/mhooreman/repos",
      "events_url": "https://api.github.com/users/mhooreman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhooreman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T12:19:09Z",
    "updated_at": "2015-08-24T12:19:09Z",
    "author_association": "NONE",
    "body": "Thanks.\n\nMy code doen't uses ipython, but runs on a standard python interpreter.\n\nDo you know how to implement the suggestion you made in pure python? Sorry, I'm quite new to ipython.\n\nBest regards.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/135693812",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-135693812",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 135693812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTY5MzgxMg==",
    "user": {
      "login": "mgab",
      "id": 6085431,
      "node_id": "MDQ6VXNlcjYwODU0MzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6085431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgab",
      "html_url": "https://github.com/mgab",
      "followers_url": "https://api.github.com/users/mgab/followers",
      "following_url": "https://api.github.com/users/mgab/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgab/subscriptions",
      "organizations_url": "https://api.github.com/users/mgab/orgs",
      "repos_url": "https://api.github.com/users/mgab/repos",
      "events_url": "https://api.github.com/users/mgab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T08:59:53Z",
    "updated_at": "2015-08-28T08:59:53Z",
    "author_association": "NONE",
    "body": "Either running the scripts using IPython magics to import and initialize the pyximport module in the nodes or without using them, I still get the `PicklingError`\n\n```\nfrom __future__ import print_function\nfrom IPython.parallel import Client\nc = Client()\ndv = c[:]\n### Import and start pyximport WITHOUT IPython magics ###\nwith dv.sync_imports(local=True):\n    import pyximport;\npyximport.install()\ndv.apply(pyximport.install)\n### Import and start pyximport WITH IPython magics ###\n# %px import pyximport; pyximport.install()\n###  ---  ###\nwith dv.sync_imports(local=True):\n    import plib\n    import clib\ncToto = clib.Toto()\npToto = plib.Toto()\nc.direct_view().use_dill()\nb = c.load_balanced_view()\n\n\nb.block = True\nprint(\"Running with pure python\")\nb.map(pToto.run, range(1, 5))\nprint(\"Running with cython\")\nb.map(cToto.run, range(1, 5))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/135732070",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-135732070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 135732070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTczMjA3MA==",
    "user": {
      "login": "mhooreman",
      "id": 7373718,
      "node_id": "MDQ6VXNlcjczNzM3MTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7373718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhooreman",
      "html_url": "https://github.com/mhooreman",
      "followers_url": "https://api.github.com/users/mhooreman/followers",
      "following_url": "https://api.github.com/users/mhooreman/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhooreman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhooreman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhooreman/subscriptions",
      "organizations_url": "https://api.github.com/users/mhooreman/orgs",
      "repos_url": "https://api.github.com/users/mhooreman/repos",
      "events_url": "https://api.github.com/users/mhooreman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhooreman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T10:36:30Z",
    "updated_at": "2015-08-28T10:36:30Z",
    "author_association": "NONE",
    "body": "Hello,\n\nThanks mgab. So, is it confirmed that there is an issue?\n\n2015-08-28 11:00 GMT+02:00 mgab notifications@github.com:\n\n> Either running the scripts using IPython magics to import and initialize\n> the pyximport module in the nodes or without using them, I still get the\n> PicklingError\n> \n> from **future** import print_function\n> from IPython.parallel import Client\n> c = Client()\n> dv = c[:]\n> \n> ### Import and start pyximport WITHOUT IPython magics\n> \n> with dv.sync_imports(local=True):\n>     import pyximport;\n> pyximport.install()\n> dv.apply(pyximport.install)\n> \n> ### Import and start pyximport WITH IPython magics\n> \n> # %px import pyximport; pyximport.install()\n> \n> ### ---\n> \n> with dv.sync_imports(local=True):\n>     import plib\n>     import clib\n> cToto = clib.Toto()\n> pToto = plib.Toto()\n> c.direct_view().use_dill()\n> b = c.load_balanced_view()\n> \n> b.block = True\n> print(\"Running with pure python\")\n> b.map(pToto.run, range(1, 5))\n> print(\"Running with cython\")\n> b.map(cToto.run, range(1, 5))\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8708#issuecomment-135693812.\n\n## \n\nMichaël Hooremanmichael@hooreman.be - http://www.hooreman.be\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/392413033",
    "html_url": "https://github.com/ipython/ipython/issues/8708#issuecomment-392413033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8708",
    "id": 392413033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjQxMzAzMw==",
    "user": {
      "login": "Freedomtowin",
      "id": 21232362,
      "node_id": "MDQ6VXNlcjIxMjMyMzYy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21232362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Freedomtowin",
      "html_url": "https://github.com/Freedomtowin",
      "followers_url": "https://api.github.com/users/Freedomtowin/followers",
      "following_url": "https://api.github.com/users/Freedomtowin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Freedomtowin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Freedomtowin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Freedomtowin/subscriptions",
      "organizations_url": "https://api.github.com/users/Freedomtowin/orgs",
      "repos_url": "https://api.github.com/users/Freedomtowin/repos",
      "events_url": "https://api.github.com/users/Freedomtowin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Freedomtowin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T04:01:32Z",
    "updated_at": "2018-05-28T05:05:41Z",
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nFor anyone interested in whether or not ipp.Reference can be used in a directView map, yes it can. Just make a list comprehension of ipp.References and pass it into the map_sync function. This method can be used to cythonize ipyparallel code."
  }
]
