[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11153465",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11153465",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11153465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUzNDY1",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T01:50:05Z",
    "updated_at": "2012-12-08T01:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's a warning, not an error. What do you mean by doesn't work?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11153545",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11153545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11153545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUzNTQ1",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T01:55:24Z",
    "updated_at": "2012-12-08T01:55:24Z",
    "author_association": "NONE",
    "body": "Yes it's a warning and not an error, but that warning is because the function is `cdef` and not `def`, meaning it's not visible from python land and therefore is unused I guess. If it's not in python land, you have no way to call the function so it might as well have just failed to build. That would even be preferable to the runtime error you get.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11153561",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11153561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11153561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUzNTYx",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T01:57:53Z",
    "updated_at": "2012-12-08T01:57:53Z",
    "author_association": "NONE",
    "body": "As I originally said, the code as written, with `def ompfunc():`, fails.\n\n```\nImportError: /home/john/.ipython/cython/_cython_magic_d97b646f1ec3c7e6350f3f6d2b3633b2.so: undefined symbol: omp_set_dynamic\n```\n\nExamining it more closely, I suppose it does build... it just can't be imported because it didn't resolve the omp symbols..\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11154791",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11154791",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11154791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTU0Nzkx",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T04:22:40Z",
    "updated_at": "2012-12-08T04:22:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems that the %%cython magic doesn't use the Cython compiler options directives.  There are some flags for setting those -c and -la, maybe you can try to use those to pass the -fopenmp flags?\n\nI'll try to look at this more tomorrow. Thanks for the report and your investigation so far.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11188426",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11188426",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11188426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg4NDI2",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T10:38:32Z",
    "updated_at": "2012-12-10T10:38:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "It works for me (on windows) if I pass in the openmp flags for both `complie-args` and `link-args`:\n\n``` python\n%%cython --compile-args=/openmp --link-args=/openmp --force\ncimport cython\ncimport openmp\n\nimport cython.parallel as cp\nfrom cython.parallel import parallel, prange\n\nimport numpy as np\ncimport numpy as np\n\nctypedef np.int32_t int32_t\n\ncdef extern from \"windows.h\" nogil:\n    void Sleep(int ms)\n\n@cython.boundscheck(False)\ncpdef double[::1] ompfunc(int32_t size, int32_t num_threads):\n    cdef int32_t idx\n    cdef double[::1] result = np.empty(size, dtype=np.float64)\n    with nogil, cp.parallel(num_threads=num_threads):\n        for idx in prange(size, schedule='dynamic'):\n            result[idx] = cp.threadid()\n            Sleep(1000)\n    return result\n```\n\n``` python\nIn [66]: np.asarray(ompfunc(10, 10))\n\nOut[66]: array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.])\n```\n\n``` python\nIn [67]: %timeit ompfunc(10, 1)\n             %timeit ompfunc(10, 2)\n             %timeit ompfunc(10, 3)\n             %timeit ompfunc(10, 4)\n             %timeit ompfunc(10, 5)\n             %timeit ompfunc(10, 6)\n             %timeit ompfunc(10, 7)\n             %timeit ompfunc(10, 8)\n             %timeit ompfunc(10, 9)\n             %timeit ompfunc(10, 10)\n\n1 loops, best of 3: 10 s per loop\n1 loops, best of 3: 5 s per loop\n1 loops, best of 3: 4 s per loop\n1 loops, best of 3: 3 s per loop\n1 loops, best of 3: 2 s per loop\n1 loops, best of 3: 2 s per loop\n1 loops, best of 3: 2 s per loop\n1 loops, best of 3: 2 s per loop\n1 loops, best of 3: 2 s per loop\n1 loops, best of 3: 1e+03 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11189336",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11189336",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11189336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg5MzM2",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T11:14:33Z",
    "updated_at": "2012-12-10T11:14:33Z",
    "author_association": "NONE",
    "body": "Can it be made to use the compiler options directives normally or do I need to type them all out in every cell?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11189363",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11189363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11189363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg5MzYz",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T11:15:41Z",
    "updated_at": "2012-12-10T11:15:41Z",
    "author_association": "NONE",
    "body": "I mean via patching, of course.\n\nBasically is this trivial or does it require deep architectural changes that are NeverGoingToHappen® ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11189529",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11189529",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11189529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg5NTI5",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T11:21:50Z",
    "updated_at": "2012-12-10T11:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd imagine it's possible and maybe not even too difficult. The relevant code is:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/extensions/cythonmagic.py#L151\n\nI believe the R-magic pulls in variables from the notebook namespace to pass to R so (I think) you should be able to similarly pull in a `Cython.Compiler.Options` variable you declared earlier.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11189729",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11189729",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11189729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg5NzI5",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T11:30:00Z",
    "updated_at": "2012-12-10T11:30:00Z",
    "author_association": "NONE",
    "body": "Great. I'll take a look.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11219950",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11219950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11219950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjE5OTUw",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T21:55:29Z",
    "updated_at": "2012-12-10T21:55:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@johntyree Is the usage of `Cython.Compiler.Options` in your first cell documented anywhere?  I'm just curious how you found out about it and why you expected it to work.\n\nFor those just joining, the test code suggested by @dhirschfeld will work in Linux with slight modifications:\n\n``` cython\n%%cython --compile-args=-fopenmp --link-args=-fopenmp --force\ncimport cython\ncimport openmp\n\nimport cython.parallel as cp\nfrom cython.parallel import parallel, prange\n\nimport numpy as np\ncimport numpy as np\n\nctypedef np.int32_t int32_t\n\ncdef extern from \"unistd.h\" nogil:\n    unsigned int sleep(unsigned int seconds)\n\n@cython.boundscheck(False)\ncpdef double[::1] ompfunc(int32_t size, int32_t num_threads):\n    cdef int32_t idx\n    cdef double[::1] result = np.empty(size, dtype=np.float64)\n    with nogil, cp.parallel(num_threads=num_threads):\n        for idx in prange(size, schedule='dynamic'):\n            result[idx] = cp.threadid()\n            sleep(1)\n    return result\n```\n\nAnother option could be to add a `-fopenmp` flag to `%%cython` which would be aliased to the `compile-args` / `link-args` combo.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11237207",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11237207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11237207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjM3MjA3",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-11T09:43:09Z",
    "updated_at": "2012-12-11T09:43:09Z",
    "author_association": "NONE",
    "body": "@bfroehle, actually, from this thread that you participated in on cython-users.\n\nhttps://groups.google.com/forum/?fromgroups=#!topic/cython-users/LZcC92mGx94\n\nI can't say whether or not it's supposed to be supported, but there's no documentation that anyone can seem to find, so I imagine not. It seemed like a reasonable thing to have and I assumed it was just a way to programmatically specify the arguments.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11249423",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11249423",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11249423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjQ5NDIz",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-11T16:05:15Z",
    "updated_at": "2012-12-11T16:05:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, so for the moment I think you're stuck with the `--compile-args` / `--link-args` combo (so sorry!).  But let's keep this open to figure out a better way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11256808",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-11256808",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 11256808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjU2ODA4",
    "user": {
      "login": "johntyree",
      "id": 108972,
      "node_id": "MDQ6VXNlcjEwODk3Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/108972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johntyree",
      "html_url": "https://github.com/johntyree",
      "followers_url": "https://api.github.com/users/johntyree/followers",
      "following_url": "https://api.github.com/users/johntyree/following{/other_user}",
      "gists_url": "https://api.github.com/users/johntyree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johntyree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johntyree/subscriptions",
      "organizations_url": "https://api.github.com/users/johntyree/orgs",
      "repos_url": "https://api.github.com/users/johntyree/repos",
      "events_url": "https://api.github.com/users/johntyree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johntyree/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-11T18:52:00Z",
    "updated_at": "2012-12-11T18:52:00Z",
    "author_association": "NONE",
    "body": "That's fine. They solve the problem. The rest is convenience.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20560582",
    "html_url": "https://github.com/ipython/ipython/issues/2669#issuecomment-20560582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2669",
    "id": 20560582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTYwNTgy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-06T20:34:12Z",
    "updated_at": "2013-07-06T20:34:12Z",
    "author_association": "MEMBER",
    "body": "closed by #2691\n"
  }
]
