[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6116458",
    "html_url": "https://github.com/ipython/ipython/pull/1857#issuecomment-6116458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1857",
    "id": 6116458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY0NTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T02:41:40Z",
    "updated_at": "2012-06-05T02:41:40Z",
    "author_association": "MEMBER",
    "body": "Thanks for the contribution!  On this one we'll definitely want to have @ellisonbg's eyes, as he wrote that code and I know he struggled quite a bit with focus and scrolling control.  So I'm sure when he has a chance he'll be able to provide good feedback.  I know that I've seen some annoying jump behavior, so I look forward to improvements on that.\n\nps - worfklow tip: you'll be happiest if you create a new branch for each feature/pull request, rather than working from your master branch. That will allow you to keep multiple pull reuqests 'in flight' without mixing up with one another.  Right now you'd either have to wait for this to be merged, or if you make a new pull reuqest for something else from your master branch, it won't actually merge in IPython as it will be missing the code from here.\n\nInstead, the workflow is to keep your master 100% synced with ipython's official master, and start always each new feature in its own branch from master.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6116541",
    "html_url": "https://github.com/ipython/ipython/pull/1857#issuecomment-6116541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1857",
    "id": 6116541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTY1NDE=",
    "user": {
      "login": "mcelrath",
      "id": 1746780,
      "node_id": "MDQ6VXNlcjE3NDY3ODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1746780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcelrath",
      "html_url": "https://github.com/mcelrath",
      "followers_url": "https://api.github.com/users/mcelrath/followers",
      "following_url": "https://api.github.com/users/mcelrath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcelrath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcelrath/subscriptions",
      "organizations_url": "https://api.github.com/users/mcelrath/orgs",
      "repos_url": "https://api.github.com/users/mcelrath/repos",
      "events_url": "https://api.github.com/users/mcelrath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcelrath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T02:50:15Z",
    "updated_at": "2012-06-05T02:50:15Z",
    "author_association": "NONE",
    "body": "I did see a second way to do this: Selecting and focusing are two logically different operations.  One can have a \"selected\" cell which is not \"focused\" to receive keyboard input -- which is what happens if you click the output of a cell with this patch.  One can instead add a parameter 'focus' to Notebook.prototype.select() and corresponding Cell classes.  Or, create a new method focus() in those places.  This is a bit more involved, but might make more sense, especially if in the future someone anticipates having cells which _don't_ have a CodeMirror input entry box.  \n\nAs things stand, I see no advantage to that approach, and the changes would be larger.\n\nThanks for the tips on git usage, I'll make a branch for my next pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6117267",
    "html_url": "https://github.com/ipython/ipython/pull/1857#issuecomment-6117267",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1857",
    "id": 6117267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTcyNjc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T04:12:47Z",
    "updated_at": "2012-06-05T04:12:47Z",
    "author_association": "MEMBER",
    "body": "I have been thinking about how to improve this situation for a while and you are definitely on the right track.  I am concerned though about scattering the calls to `focus` throughout the codebase.  There are dozens of bugs we have worked through related to how `focus` and `refresh` get called.  In particular, we have to make sure that when you switch between different cell types that the right logic is triggered so you can keep typing.\n\nI have also though about having selecting and focusing two different operations.  Part of this is that we would like to eventually support multiple cell selection.  I just don't know how we want this to look like.  We could make the notebook more like a multi-modal editor where there is a cell level mode for manipulating/selecting cells and then an \"edit\" mode that  focuses the currently selected cell.  What do people think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6117612",
    "html_url": "https://github.com/ipython/ipython/pull/1857#issuecomment-6117612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1857",
    "id": 6117612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTc2MTI=",
    "user": {
      "login": "mcelrath",
      "id": 1746780,
      "node_id": "MDQ6VXNlcjE3NDY3ODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1746780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcelrath",
      "html_url": "https://github.com/mcelrath",
      "followers_url": "https://api.github.com/users/mcelrath/followers",
      "following_url": "https://api.github.com/users/mcelrath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcelrath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcelrath/subscriptions",
      "organizations_url": "https://api.github.com/users/mcelrath/orgs",
      "repos_url": "https://api.github.com/users/mcelrath/repos",
      "events_url": "https://api.github.com/users/mcelrath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcelrath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T04:59:14Z",
    "updated_at": "2012-06-05T04:59:14Z",
    "author_association": "NONE",
    "body": "I don't think scattered calls to `focus` are a problem, the only reason they gave me pause was because they had to be in the Notebook class, rather than the Cell class (which is where I tried to put them initially).  But now it seems obvious to me that the Notebook has to handle focus, not the cell.  The alternative above is only useful if there will be cells without a CodeMirror input box (since I call CodeMirror directly, rather than some abstract Cell.focus() that future cell-types could implement in different ways).\n\nI tested everything I could think of regarding focus: executing an element (and adding a new cell), scrolling through cells with arrow keys and mouse.  I'm actively using this for real work so if there are any remaining corner cases, hopefully I will find them.  (FWIW, this isn't the first time I've re-jiggered an app's focus issues)  Perhaps hold off on merging this patch to give us time to find corner cases.  (I don't know how \"unstable\" your git head is intended to be...)  But right now I know of no bugs in it.\n\nRegarding your multi-modal idea: It seems easy enough to have many cells selected but unfocused.  Then one can cut/paste...  That's essentially what happens with my patch if you click the output part of a cell: the cell becomes selected but unfocused.  From the de-focused state, you have to click on an input field for your keystrokes to go anywhere.  I guess that is effectively multi-modal.  I was actually thinking of doing something more drastic with the active input field (like changing its background color) -- which tells the user he's in keyboard-input mode.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6117726",
    "html_url": "https://github.com/ipython/ipython/pull/1857#issuecomment-6117726",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1857",
    "id": 6117726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTc3MjY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T05:15:12Z",
    "updated_at": "2012-06-05T05:15:12Z",
    "author_association": "MEMBER",
    "body": "On Mon, Jun 4, 2012 at 9:12 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> We could make the notebook more like a multi-modal editor where there is a cell level mode for manipulating/selecting cells and then an \"edit\" mode that  focuses the currently selected cell.  What do people think?\n\nWe're already partly there, since it's possible to have the cursor\noutside of any cell, and then you can move around with the arrow keys,\nhitting Enter to start editing a cell.  And that works OK, it's just\nthat right now it's kind of flaky and inconsistent, but I think the\nbasic idea is sound.\n"
  }
]
