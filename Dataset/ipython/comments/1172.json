[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3192608",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3192608",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3192608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTI2MDg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T01:14:29Z",
    "updated_at": "2011-12-18T01:14:29Z",
    "author_association": "MEMBER",
    "body": "Yes, we looked into this but actually couldn't find a way to change it.  @stefanv might remember the details better, b/c he came to my office asking about this, and I don't recall quite what we tracked it down to.  But if memory serves me right, it seemed impossible to change this within the confines of readline.  In the notebook and the qtconsole we could certainly do something else, but in the terminal I think readline takes some actions beyond our control here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3192710",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3192710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3192710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTI3MTA=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T01:46:10Z",
    "updated_at": "2011-12-18T01:46:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "So readline won't tell you the difference between completing a directory and completing a path?  If that's the case, then I would rather have it never complete the string then to always try to complete it (and be wrong most of the time).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3192725",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3192725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3192725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTI3MjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T01:50:08Z",
    "updated_at": "2011-12-18T01:50:08Z",
    "author_association": "MEMBER",
    "body": "I think the issue is that once there's only one completion, readline automatically adds the quotes.  There's no way to tell readline \"this is the only directory, but it has files in it, so don't close the string yet\". The alternative would be to return all the files in the directory also as completions, which did happen for a little while in ipython and drove everybody nuts.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3196479",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3196479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3196479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTY0Nzk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T19:49:32Z",
    "updated_at": "2011-12-18T19:49:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "The string closing drives me crazy as well.  At least it only effects in the terminal (and not the qt console).\n\nThe change of no longer returning all files in the directory as completions that @fperez referred to came in 8cff4913e012306b4d2472cc5848180c65867878.\n\nA compromise option could be to abbreviate all files as '...'  --- I'll whip up a quick patch with this behavior for discussion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3196589",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3196589",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3196589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTY1ODk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T20:08:49Z",
    "updated_at": "2011-12-18T20:08:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding this `...` tab complete behavior to `mark_dirs` is syntactically bad, but the reality is all of `mark_dirs` could be replaced by a one-liner in `IPCompleter.file_matches` --- the only place it is called:\n\n```\n[x+'/' if os.path.isdir(x) else x for x in matches]\n```\n\nIn addition, `single_dir_expand` is completely abandoned -- nowhere else in the IPython source code is it called.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3196639",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3196639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3196639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTY2Mzk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T20:15:59Z",
    "updated_at": "2011-12-18T20:15:59Z",
    "author_association": "MEMBER",
    "body": "@bfroehle, I cleaned up some of that code a while back, but it still needs a good hand of further maintenance.  It would be great if you could whip up a PR that does some of that, including fixing this particular issue (will be for 0.13, of course).  Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3196726",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3196726",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3196726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTY3MjY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T20:31:19Z",
    "updated_at": "2011-12-18T20:31:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "PR #1175 is the beginning of some cleanup, but it does _not_ address this issue in any way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3215166",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3215166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3215166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTUxNjY=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T06:26:19Z",
    "updated_at": "2011-12-20T06:26:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "According to http://tiswww.case.edu/php/chet/readline/CHANGES, as of readline 5.0, the rl_completion_suppress_quote variable can be used to prevent this behavior.  I don't know enough about readline to know how to use it, or if this is even the same thing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3215218",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3215218",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3215218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTUyMTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T06:34:00Z",
    "updated_at": "2011-12-20T06:34:00Z",
    "author_association": "MEMBER",
    "body": "Ah, unfortunately that's what the GNU readline supports, but python's readline.so module only exposes a small subset of the full api, and this doesn't seem to be available:\n\n```\n>>> import readline\n>>> [x for x in dir(readline) if 'suppress' in x]\n```\n\nIt might be possible to get to it via ctypes though, in case anyone wants to give it a try...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3215499",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3215499",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3215499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTU0OTk=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T07:15:27Z",
    "updated_at": "2011-12-20T07:15:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just noticed that if the string is already closed, then it will not try to close it again.  I don't know if IPython could (or would want to) use this as a workaround, but it works as a decent workaround user-side: if you want to complete a path inside a string, close the string first, and then move to inside the string and complete to the path you want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3216007",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3216007",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3216007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTYwMDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T08:32:41Z",
    "updated_at": "2011-12-20T08:32:41Z",
    "author_association": "MEMBER",
    "body": "That's interesting... It might be possible to rig something using that, though I'm not sure if from python we have access to all the necessary parts of the API.  Bu tit's a good idea for someone to try out...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3226290",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3226290",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3226290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjYyOTA=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T22:15:49Z",
    "updated_at": "2011-12-20T22:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@asmeurer  I think users expect the same behaviour from tab completion inside IPython as they get from the shell, where the quote is not closed.\n\nI looked at this a while ago, and there are two ways of solving the problem: 1) Find a way to set up readline correctly (it didn't seem as though Python exposed the necessary API for doing so, but we should verify) or 2) Modify the returned completions from IPython to fake the correct type of behaviour.\n\nSince (2) is a bad hack, I was hoping we could still make (1) happen somehow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3226949",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3226949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3226949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjY5NDk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T23:06:19Z",
    "updated_at": "2011-12-20T23:06:19Z",
    "author_association": "MEMBER",
    "body": "On Tue, Dec 20, 2011 at 2:15 PM, Stefan van der Walt\nreply@reply.github.com\nwrote:\n\n> Since (2) is a bad hack, I was hoping we could still make (1) happen somehow.\n\nI'm pretty sure python's readline.so does _not_ expose the full API\nneeded for this.  But it should be possibly to build a little ctypes\nmodule that does the rest by hooking into the system's full readline\nlibrary.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3232597",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3232597",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3232597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzI1OTc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T11:28:25Z",
    "updated_at": "2011-12-21T11:28:25Z",
    "author_association": "MEMBER",
    "body": "I'd be wary of ctypes hacks around readline. It could lead to some really horrible to debug problems. And readline gives us enough grief as it is.\n\nI think this issue is another point in favour of finding a more flexible in terminal editing solution, like pyrepl (http://codespeak.net/pyrepl/), which PyPy already uses for its 'readline' module.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3245246",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-3245246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 3245246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDUyNDY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-22T05:41:25Z",
    "updated_at": "2011-12-22T05:41:25Z",
    "author_association": "MEMBER",
    "body": "On Wed, Dec 21, 2011 at 3:28 AM, Thomas\nreply@reply.github.com\nwrote:\n\n> I think this issue is another point in favour of finding a more flexible in terminal editing solution, like pyrepl (http://codespeak.net/pyrepl/), which PyPy already uses for its 'readline' module.\n\nNice!   I'd totally forgotten about this... I remember looking at  it\na while back, and had forgotten.  Yes, this definitely looks like a\ndirection worth exploring. It would be nice if the design was\nabstracted enough that the curses/termios pieces (unix/terminal only)\nwere 'just a backend', that could be substituted with a Qt or win32\none.  If so, one could then use pyrepl in any environment, simply\nsubstituting the necessary backend...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6567115",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-6567115",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 6567115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjcxMTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-26T05:01:16Z",
    "updated_at": "2012-06-26T05:01:16Z",
    "author_association": "MEMBER",
    "body": "OK, this is in no way realistic 0.13 material, re-targeting. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12255953",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-12255953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 12255953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjU1OTUz",
    "user": {
      "login": "gomyhr",
      "id": 2770270,
      "node_id": "MDQ6VXNlcjI3NzAyNzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2770270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gomyhr",
      "html_url": "https://github.com/gomyhr",
      "followers_url": "https://api.github.com/users/gomyhr/followers",
      "following_url": "https://api.github.com/users/gomyhr/following{/other_user}",
      "gists_url": "https://api.github.com/users/gomyhr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gomyhr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gomyhr/subscriptions",
      "organizations_url": "https://api.github.com/users/gomyhr/orgs",
      "repos_url": "https://api.github.com/users/gomyhr/repos",
      "events_url": "https://api.github.com/users/gomyhr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gomyhr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-15T07:09:43Z",
    "updated_at": "2013-01-15T07:09:43Z",
    "author_association": "NONE",
    "body": "> The alternative would be to return all the files in the directory also as completions, which did happen for a little while in ipython and drove everybody nuts.\n\nIn my humble opinion, the tab completion in 0.10 (which I assume is what is referred to above) was far better than the current state of affairs (testing 0.13.1 at the moment).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259017860",
    "html_url": "https://github.com/ipython/ipython/issues/1172#issuecomment-259017860",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1172",
    "id": 259017860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAxNzg2MA==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T01:26:51Z",
    "updated_at": "2016-11-08T01:26:51Z",
    "author_association": "MEMBER",
    "body": "Hey there, I'm going through old issues and it seems to me that it makes sense to close this one.\nNow that we use prompt_toolkit, the readline limitations no longer apply - and I think the default behavior does not close filename quotes.\n\nThanks everyone and happy hacking! :bowtie:\n"
  }
]
