[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1001358",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1001358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1001358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDEzNTg=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T14:07:23Z",
    "updated_at": "2011-04-14T14:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "To answer your question: \"Should the latex representation include the wrapping $ or $$?\", meaning (I think), the result of **repr_latex** should include the dollar signs, I would advocate for \"yes\".  The matplotlib mathtext parser supports text outside of math mode, eg.:\n\n  r\"Result of expression: $\\sqrt{x}$\"\n\nAlso, if one ever wanted to use a \"call out to the real LaTeX\" approach to this, there's all kinds of text layout features in LaTeX outside of math mode that one might want to use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1001504",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1001504",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1001504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDE1MDQ=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T14:34:55Z",
    "updated_at": "2011-04-14T14:34:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quick sanity check also: Is the LaTeX inline display not yet working?  I see how I can get it to display LaTeX for Sympy objects, but what about an arbitrary object with a _repr_latex_ method?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1008737",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1008737",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1008737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDg3Mzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T16:36:13Z",
    "updated_at": "2011-04-15T16:36:13Z",
    "author_association": "MEMBER",
    "body": "The _repr_latex_ method does work, but the qtconsole does not have native latex rendering.  The htmlnotebook we are working on does have native latex support, but it is not all wired up in the Javascript yet.  Not sure how to get qt to handle latex (without rendering to png like we do for sympy currently).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1009370",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1009370",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1009370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDkzNzA=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T18:12:45Z",
    "updated_at": "2011-04-15T18:12:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "It still may be useful (if not perfect) to have LaTeX -> PNG supported in\nthe Qt for anything with a _repr_latex_.  It may also be possible to write\nout SVG snippets from math expressions with matplotlib -- let me look into\nthat.\n\nMike\n\nOn Fri, Apr 15, 2011 at 12:36 PM, ellisonbg <\nreply@reply.github.com>wrote:\n\n> The _repr_latex_ method does work, but the qtconsole does not have native\n> latex rendering.  The htmlnotebook we are working on does have native latex\n> support, but it is not all wired up in the Javascript yet.  Not sure how to\n> get qt to handle latex (without rendering to png like we do for sympy\n> currently).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/370#issuecomment-1008737\n\n## \n\nMichael Droettboom\nhttp://www.droettboom.com/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1009393",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1009393",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1009393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDkzOTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T18:17:47Z",
    "updated_at": "2011-04-15T18:17:47Z",
    "author_association": "MEMBER",
    "body": "At point point I started to look into latex->svg generation using\nmatplotlib, but I didn't get very far.  That would be veyr nice to have.  I\ndo like the idea of adding logic that looks to see if _repr_latex_ is\npresent, and use that to generate a png/svg automatically.  But, one thing\nwe are finding with the matplotlib latex engine is that it struggles with\nmany complex latex expressions.  I don't have any examples right now, but\nthe best way to test this is to start messing with sympy.  Some things I\nremember:\n- Lots of nesting with parens is not handled well.\n- Things like matrices are not implemented.\n\nBut we would love to have better support for all  of this and any ideas you\nhave are very welcome.\n\nIt still may be useful (if not perfect) to have LaTeX -> PNG supported in\n\n> the Qt for anything with a _repr_latex_.  It may also be possible to write\n> out SVG snippets from math expressions with matplotlib -- let me look into\n> that.\n> \n> Mike\n> \n> On Fri, Apr 15, 2011 at 12:36 PM, ellisonbg <\n> reply@reply.github.com>wrote:\n> \n> > The _repr_latex_ method does work, but the qtconsole does not have native\n> > latex rendering.  The htmlnotebook we are working on does have native\n> > latex\n> > support, but it is not all wired up in the Javascript yet.  Not sure how\n> > to\n> > get qt to handle latex (without rendering to png like we do for sympy\n> > currently).\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ipython/ipython/pull/370#issuecomment-1008737\n> \n> ## \n> \n> Michael Droettboom\n> http://www.droettboom.com/\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/370#issuecomment-1009370\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1009438",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1009438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1009438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDk0Mzg=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T18:27:59Z",
    "updated_at": "2011-04-15T18:27:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah -- the mathtext stuff in matplotlib is still a subset of what a standard LaTeX distribution has.  It's reasonably complete wrt to TeX, on which it is based, but it's missing most of the macros that LaTeX layers on top.\n\nYou could use dvipng and real LaTeX to generate the equation images if LaTeX is available.  It adds a really heavy dependency, but it's the only thing I'm aware of that is as complete as LaTeX (because it is!).  The Sphinx mathpng extension is a good concise example of using dvipng to get a LaTeX image.  There is dvi parsing code in matplotlib, but it is complicated by the fact that it deals with scalable fonts etc. -- something you wouldn't necessary want to do for an interactive console.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1010354",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1010354",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1010354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAzNTQ=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T19:25:02Z",
    "updated_at": "2011-04-15T19:25:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've added a function to matplotlib master that converts a math expression alone to any of the image formats that matplotlib supports.  See this pull request:\n\nhttps://github.com/matplotlib/matplotlib/pull/84\n\nSince that function won't exist in a released matplotlib for a while, you may want to copy it into IPython and use it when it isn't available in matplotlib -- it uses things that have been stable for quite some time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1011093",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1011093",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1011093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTEwOTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T22:17:55Z",
    "updated_at": "2011-04-15T22:17:55Z",
    "author_association": "MEMBER",
    "body": "On Mon, Apr 11, 2011 at 8:38 PM, ellisonbg\nreply@reply.github.com\nwrote:\n\n> - We are still using the old logic in pretty.py and the special name **pretty**.  Do we want to update pretty.py as well and use _repr_pretty_?\n\nI'd like to hear @rkern's feedback on this one, seeing as much of our\npretty machinery has been driven by him.\n\n> - Are we happy with the special names in this branch?\n\nWe also had the alternative of  `_ipython_repr_foo_`.  Part of me\nfinds that really long and annoying, but another part sees the points\nraised by @jasongrout.  Ensuring that _sage_repr_foo_,\n_ipython_repr_foo_ don't collide is a good idea.\n\n> - Should _repr_png_ return the raw png data or base64 encoded data (required for sending over json).  Currently we base64 encode.\n\nI think encoding should be the responsibility of the zmq layer, not\nthe base repr method.  Imagine an in-process call that is going to use\nthe data right away, there's no point in encoding just to have to\ndecode it again immediately.\n\n> - Should the latex representation include the wrapping $ or $$?\n\nIt should, because those are semantically meaningful (they indicate\nthe display intent, in-line or displayed).\n\n> - Should the javascript repr output the raw javascript or include it in a <script> tag pair.\n\nIs there a valid usecase for the raw data?  I just don't know... If\nthere is, then the data should be left alone and wrapped by the one\nwho will send it to a browser.  But maybe that kind of data is _only_\nmeant to go to a browser-like device, case in which perhaps there's no\npoint in having the raw data other than making busywork for the\ncallers.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1029888",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1029888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1029888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk4ODg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-19T22:54:16Z",
    "updated_at": "2011-04-19T23:35:36Z",
    "author_association": "MEMBER",
    "body": "- Should the javascript repr output the raw javascript or include it in a `<script>` tag pair.  \n\nIt should definitely exclude the script tag, because the tag is HTML, and it would no longer be a valid javascript representation if you include it.  \n\nThe use case is javascript-based frontends.  If the frontend wants to do any handling on the data, it would have to strip the tags before parsing.  It's more trivial to add tags in frontends that just want to echo into HTML than it is to strip tags for frontends that want to look at the data.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1029999",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1029999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1029999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk5OTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-19T23:27:05Z",
    "updated_at": "2011-05-09T20:33:50Z",
    "author_association": "MEMBER",
    "body": "OK, I am going to make $/$$ required for latex output, the png/etc formats will _not_ encode (zmq layer will do that) and the javascript will includes the `<script>` tags.  Still waiting for @rkern to give us his thoughts on the pretty.py issues.  Also, we will copy the new function @mdbloom wrote for generating svg output from latex and incorporate that into a default latex formatter.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1030024",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1030024",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1030024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAwMjQ=",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-19T23:34:47Z",
    "updated_at": "2011-04-19T23:34:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1030027",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1030027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1030027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAwMjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-19T23:35:57Z",
    "updated_at": "2011-04-19T23:35:57Z",
    "author_association": "MEMBER",
    "body": "Please don't include `<script>` tags, for reasons described in my previous comment.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1030044",
    "html_url": "https://github.com/ipython/ipython/pull/370#issuecomment-1030044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/370",
    "id": 1030044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAwNDQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-19T23:40:55Z",
    "updated_at": "2011-04-19T23:40:55Z",
    "author_association": "MEMBER",
    "body": "@minrk:  OK, I understand your logic here and I think I agree with you.\n"
  }
]
