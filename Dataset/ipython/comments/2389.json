[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8351648",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8351648",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8351648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTE2NDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-06T23:52:44Z",
    "updated_at": "2012-09-06T23:52:44Z",
    "author_association": "MEMBER",
    "body": "It doesn't look like the method is actually retried.  Is that right?\n\nBy the way, I have used this to corrupt an existing database:\n\n``` python\nwith open('/path/to/history.sqlite', 'rb') as f:\n    db = f.read()\n\nwith open('/path/to/history.sqlite', 'wb') as f:\n    f.write(db.replace(')', 'x'))\n```\n\nOr even easier, just create total garbage:\n\n```\nipython profile create badhist\necho spam > `ipython locate profile badhist`/history.sqlite\nipython --profile badhist\n```\n\nI don't know how to get a database that will be corrupted mid-flight like people are seeing here, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8351802",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8351802",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8351802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTE4MDI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-07T00:01:29Z",
    "updated_at": "2012-09-07T00:01:29Z",
    "author_association": "MEMBER",
    "body": "Oops, the bit about retrying was a leftover. It's for methods reading the database, so there's no point in retrying on a newly created database.\n\nYep, I was just writing some junk text to the history.sqlite file to test corruption. But it's all error-on-connect, not error-on-read.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8353186",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8353186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8353186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTMxODY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-07T01:22:05Z",
    "updated_at": "2012-09-07T01:22:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk: I'd guess that the corruption is probably caused by two processes writing to the file simultaneously.  I know SQLite attempts to lock the file, but it [cannot do so always](http://www.sqlite.org/faq.html#q5).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8361408",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8361408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8361408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNjE0MDg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-07T10:13:17Z",
    "updated_at": "2012-09-07T10:13:17Z",
    "author_association": "MEMBER",
    "body": "Possibly, but that page mentions issues with Windows and NFS. @fperez reported the issue on a Linux system, and he's aware of the issues with NFS, so he would probably have mentioned if he was using that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8691657",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8691657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8691657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTE2NTc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-19T13:53:29Z",
    "updated_at": "2012-09-19T13:53:29Z",
    "author_association": "MEMBER",
    "body": "Tweaked following testing - the error wasn't actually occurring in `_run_sql` with the sample database @noinflection provided, but instead when iterating over the object it returns.\n\nThis isn't ideal, because other history access methods return the iterable cursor directly, so we can't catch the exception there. But `get_tail`, which is run on startup, always iterates over the object itself, so this solves the big problem, the inability to start. Perhaps we should convert the other history access methods to return lists, so that they exhaust the cursor internally.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8691706",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8691706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8691706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTE3MDY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-19T13:55:23Z",
    "updated_at": "2012-09-19T13:55:23Z",
    "author_association": "MEMBER",
    "body": "Github doesn't seem to have seen the change yet. I'll leave it for a bit to see if it updates.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8693942",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-8693942",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 8693942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTM5NDI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-19T15:07:14Z",
    "updated_at": "2012-09-19T15:07:14Z",
    "author_association": "MEMBER",
    "body": "(The Travis failure is a timeout trying to download pyzmq, so it can probably be ignored here.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9003606",
    "html_url": "https://github.com/ipython/ipython/pull/2389#issuecomment-9003606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2389",
    "id": 9003606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDM2MDY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-29T12:39:10Z",
    "updated_at": "2012-09-29T12:39:10Z",
    "author_association": "MEMBER",
    "body": "I guess we won't get any feedback on this one if we don't merge. \nSo, merging. \n"
  }
]
