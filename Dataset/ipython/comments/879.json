[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2415008",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-2415008",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 2415008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTUwMDg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-15T10:52:39Z",
    "updated_at": "2011-10-15T10:52:39Z",
    "author_association": "MEMBER",
    "body": "Is it any javascript, or just jquery? I wonder if loading another copy of jquery interferes with the one already in use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2416036",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-2416036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 2416036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTYwMzY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-15T15:57:56Z",
    "updated_at": "2011-10-15T15:57:56Z",
    "author_association": "MEMBER",
    "body": "Seem to me that it is totally browser dependent:\nSafari  5.0.5 (6533.21.1): no issues.\nChrome 15.0.874.92 beta : JS make the notebook working weird.\nChrome 16.0.907.0 canary : notebook, doesn't work at all, (seem to never get answer from kernel)\nFirefox 5.0.1 : same as Chrome 15, after enabling websocket \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2418290",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-2418290",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 2418290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTgyOTA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-15T23:41:17Z",
    "updated_at": "2011-10-15T23:41:17Z",
    "author_association": "MEMBER",
    "body": "You are right that is is nearly trivial to wedge the notebook with\nmalformed HTML or <srcript> tags.  Some points about your examples\nthough:\n- The HTML class is for HTML snippets, without the head/body stuff.\n- <script> tags definitely don't work because of how jquery handles\n  them.  I am not sure it is possible to work around this, but I haven't\n  had the time to look into it.\n\nOn Fri, Oct 14, 2011 at 7:30 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> I'm not sure exactly what we can do about this, or how to best go about it... I was trying to get some Javascript examples working in the notebook for a demo, and found out that this simple cell, once executed, will completely wedge the notebook:\n> \n>    from IPython.core.display import HTML\n>    src = \"\"\"\n>    <head>\n>    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n>    <title>Simple Test</title>\n>    <script language=\"javascript\" type=\"text/javascript\" src=\"http://people.iola.dk/olau/flot/jquery.js\"></script>\n>    </head>\n> \n>    <body>\n>    Hello World.\n>    </body>\n>    \"\"\"\n>    HTML(src)\n> \n> The problem is the loading of jquery.js in the header, if I remove that line there's no problem.\n> \n> I'm not sure this is even really a bug on our side, I just don't know enough about JS.  But I can see users trying this kind of thing easily when looking for more interactive elements in the notebook.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/879\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2418498",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-2418498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 2418498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTg0OTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-16T01:09:36Z",
    "updated_at": "2011-10-16T01:09:36Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg: I'm so ignorant on this topic, that a good part of my intention behind opening this issue was just to try to understand the boundary conditions of the problem.\n\nDo you think it's possible to harden against any of this?  I guess we could add to the HTML object some basic filtering that looks for stuff likely to confuse the system... Any thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2424831",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-2424831",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 2424831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ4MzE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-17T04:04:17Z",
    "updated_at": "2011-10-17T04:04:17Z",
    "author_association": "MEMBER",
    "body": "For the HTML object, we could do the following:\n- Parse the HTML using a colid XML||HTML library to make sure it is all valid.\n- Raise if we see a header/html/body tags and tell the user that it\n  should just be a snippet.\n- Search the tree for script tags and raise if we find them.\n\nThe bigger issue is the Markdown cells.  For that all the parsing is\ndone directly in JS, so we would have to write all the logic in JS.\nBut there are some tools for doing that.  The reason I didn't use\nthose tools already is that they are a bit too restrictive in that\nthey don't allow many things we do want like HTML tables.  So we may\nhave to modify them.\n\nOn Sat, Oct 15, 2011 at 6:09 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> @ellisonbg: I'm so ignorant on this topic, that a good part of my intention behind opening this issue was just to try to understand the boundary conditions of the problem.\n> \n> Do you think it's possible to harden against any of this?  I guess we could add to the HTML object some basic filtering that looks for stuff likely to confuse the system... Any thoughts?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/879#issuecomment-2418498\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2424999",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-2424999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 2424999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ5OTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-17T04:39:47Z",
    "updated_at": "2011-10-17T04:39:47Z",
    "author_association": "MEMBER",
    "body": "OK, thanks for the feedback.  I don't see this as urgent right now, so we can leave this issue open as a discussion point, to gather ideas.  Later on we can use these ideas to guide anyone with the time/energy to implement a solution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3692334",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-3692334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 3692334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTIzMzQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T19:09:59Z",
    "updated_at": "2012-01-27T19:09:59Z",
    "author_association": "MEMBER",
    "body": "Some points about this:\n- Using <script> tags to insert Javascript onto the page is a problem.  This is because those script tags get run when a notebook is loaded.  At that point, the kernel is not up and running and even if it were, it is likely that the users cells would need to be run in a particular order to get the kernel calls to work.  Possibly notebook loading could discard the <script> tags.\n- IPython's display logic already has the APIs for returning a \"Javascript\" representation of a Python object.  See IPython.core.display/displayhook/displaypub for details on that.\n- Those represetations are even returned to the notebook, but the notebook does not currently have code to handle them and we don't know how to handle it best.\n- jQuery does not allow <script> tags to be inserted into a page dynamically.  There are probably other ways of doing this though.\n\nHere is my current best thought on how to handle these things:\n- Write client support for handling the Javascript representation.  This would put the Javascript code into a script tag and inject it into the DOM in a div in the output cells.\n- When a notebook is loaded at first, these cells must be ignored.  This would be a challenge as the same code is used at load as when output arrives.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3693100",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-3693100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 3693100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTMxMDA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T20:00:23Z",
    "updated_at": "2012-01-27T20:00:23Z",
    "author_association": "MEMBER",
    "body": "Hum... html mangled by github I think... more readable on the ML.\n\nSurely a dumb question, but why don't we \"just\" wrap the sent JS into a `<script>if(IPython.kernel != undefined && IPython.kernel.started){` ... code ... `} </script>` so that it does not 'run' at load time ? Even maybe a an `else` with a function that register the script for later excution for when the kernel is started ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3693302",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-3693302",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 3693302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTMzMDI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T20:13:46Z",
    "updated_at": "2012-01-27T20:13:46Z",
    "author_association": "MEMBER",
    "body": "But it is not just about the kernel being started.  One of the main\npurposes of allowing user generated Javascript is to allow users to\ncontact the kernel and execute to build Manipulate/Interact style\nwidgets.  For these widgets to work, the actual cell will need to be\nrun - not just the JS code that is the output of running the cell.\nAnd those cells could depend on other cells being run first.  We\ndefinitely don't want to blindly run cells at load, so we the only\noption is to ignore the Javascript code on load and force the user to\nrun the cell and regenerate the JS code again.\n\nThere is also a security issue with running user generated JS code _on\nload_ without user intervention.\n\nOn Fri, Jan 27, 2012 at 12:00 PM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> Hum... html mangled by github I think... more readable on the ML.\n> \n> Surely a dumb question, but why don't we \"just\" wrap the sent JS into a `<script>if(IPython.kernel != undefined && IPython.kernel.started){` ... code ... `} </script>` so that it does not 'run' at load time ? Even maybe a an `else` with a function that register the script for later excution for when the kernel is started ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/879#issuecomment-3693100\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5099312",
    "html_url": "https://github.com/ipython/ipython/issues/879#issuecomment-5099312",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/879",
    "id": 5099312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTkzMTI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-12T19:57:54Z",
    "updated_at": "2012-04-12T19:57:54Z",
    "author_association": "MEMBER",
    "body": "We have already solved this issue with the New Javascript object.  We won't support dynamically inserting things using the <script> tag, closing.\n"
  }
]
