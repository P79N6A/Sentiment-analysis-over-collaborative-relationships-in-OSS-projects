[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66983731",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-66983731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 66983731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTgzNzMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T11:50:27Z",
    "updated_at": "2014-12-15T11:50:27Z",
    "author_association": "MEMBER",
    "body": "Seem like you want to inherit and swap `IPython.html.services.contents.filemanager.FileContentsManager` using `NotebookApp.contents_manager_class=<DottedObjectName>` ? No ? \n\nThat would automatically list the `.md` file as `.ipynb` and save with all the custom logic you want.\n\nWhat do you think ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66984015",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-66984015",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 66984015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTg0MDE1",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T11:53:46Z",
    "updated_at": "2014-12-15T11:53:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Would swapping out the FileContentsManager allow manipulating the contents on initial creation?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66988127",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-66988127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 66988127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTg4MTI3",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T12:35:18Z",
    "updated_at": "2014-12-15T12:35:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau do you mean there's a way to completely customize the \"notebook serialization/deserialization\" process and to implement a brand new nbformat, without dealing with any `.ipynb` file anymore?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66990573",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-66990573",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 66990573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTkwNTcz",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T12:59:14Z",
    "updated_at": "2014-12-15T12:59:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIUC, you're talking about implementing a custom `ContentsManager` class to implement custom logic for saving and opening notebooks. Looks like I'd need to derive from [`FileContentsManager`](https://github.com/ipython/ipython/blob/master/IPython/html/services/contents/filemanager.py#L51), and override:\n1. `_notebook_model()` to load a notebook model from a file in any format I want\n2. `_save_notebook()` to save a notebook model to a file in any format I want\n3. Replace `.ipynb` by another string for my format's file extension.\n\nI see how to do (1) and (2), but what would you recommend for (3)? Would it make sense for `FileContentsManager` to be slightly refactored to store `.ipynb` in a property? This way it could be easily changed in a child class. Also, would that be enough? Maybe the `.ipynb` is used in other places in the code and using another file extension will break something elsewhere.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66992122",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-66992122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 66992122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTkyMTIy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T13:14:19Z",
    "updated_at": "2014-12-15T13:14:19Z",
    "author_association": "MEMBER",
    "body": "> @Carreau Would swapping out the FileContentsManager allow manipulating the contents on initial creation?\n\nProbably.. I guess you have a \"new_notebook\" method.\n\n> @Carreau do you mean there's a way to completely customize the \"notebook serialization/deserialization\" process and to implement a brand new nbformat, without dealing with any .ipynb file anymore?\n\nYes, you can save/load both still. But you  will be responsible for everything that touch the filesystem,or even storing on postgres, or in the cloud. \n\n> Replace .ipynb by another string for my format's file extension.\n\nNo, there are too much `.ipynb` logic everywhere.  Just overwrite list contents so that the server see `.md` files as `.ipynb`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67068345",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-67068345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 67068345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDY4MzQ1",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T21:23:30Z",
    "updated_at": "2014-12-15T21:23:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, I'll do that.\n\nYou can keep this issue open if you feel this hook would be useful for other purposes, otherwise feel free to close.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67127531",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-67127531",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 67127531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTI3NTMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T08:36:36Z",
    "updated_at": "2014-12-16T08:36:36Z",
    "author_association": "MEMBER",
    "body": "> You can keep this issue open if you feel this hook would be useful for other purposes, otherwise feel free to close.\n\nI'll leave open fell free to ping here if/once you've done it ! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67638376",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-67638376",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 67638376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjM4Mzc2",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-19T13:36:18Z",
    "updated_at": "2014-12-19T13:36:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've managed to use Markdown as a notebook format, but I can't seem to change the extension from `.ipynb` to `.md`. See [here](https://github.com/rossant/ipymd/blob/master/ipymd/nbplugins.py#L17).\n\nThere are two small changes in `FileContentsManager` for now:\n- [L27](https://github.com/rossant/ipymd/blob/master/ipymd/nbplugins.py#L27): I've replaced `nbformat.read()` with my own loader (from markdown to notebook dict).\n- [L50-51](https://github.com/rossant/ipymd/blob/master/ipymd/nbplugins.py#L50-L51): I've added `.md` as an extension.\n\nA [Markdown `.ipynb` document](https://github.com/rossant/ipymd/blob/master/notebooks/md.ipynb) works (it is loaded as a notebook), but a [Markdown `.md` document](https://github.com/rossant/ipymd/blob/master/notebooks/md.md) doesn't: the JSON contents are displayed as raw text instead.\n\nI guess the problem is that there's somewhere an instruction to load the notebook UI in the browser, or to just display the raw contents, depending on the extension being `.ipynb` or not.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67640247",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-67640247",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 67640247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjQwMjQ3",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-19T13:54:50Z",
    "updated_at": "2014-12-19T14:12:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, found it. Looks like I might have to change [this](https://github.com/ipython/ipython/blob/master/IPython/html/base/handlers.py#L499) or [this](https://github.com/ipython/ipython/blob/master/IPython/html/notebook/handlers.py#L46), or change the handlers somewhere else... Maybe we could add extra handlers to `NotebookWebApplication` (`c.NotebookApp.extra_handlers` or something?)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67644744",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-67644744",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 67644744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjQ0NzQ0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-19T14:33:22Z",
    "updated_at": "2014-12-19T14:33:22Z",
    "author_association": "MEMBER",
    "body": "Great. I have nothing against having the list of notebook extensions configurable, but Last time I checked the core team was against. Your use case might change the current position.\n\nDo you want to bring it up in a separate issue ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67693137",
    "html_url": "https://github.com/ipython/ipython/issues/7222#issuecomment-67693137",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7222",
    "id": 67693137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjkzMTM3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-19T20:31:07Z",
    "updated_at": "2014-12-19T20:31:07Z",
    "author_association": "MEMBER",
    "body": "If you want alternate storage format, a custom ContentsManager should be used. I do not think this would be an appropriate use of hooks.\n"
  }
]
