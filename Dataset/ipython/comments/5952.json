[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45307123",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45307123",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45307123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzA3MTIz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-06T06:36:29Z",
    "updated_at": "2014-06-06T06:36:29Z",
    "author_association": "MEMBER",
    "body": "Hi, thanks for posting this. We did make a change recently and it does exactly what you are noticing. The new cell type will match the previous one. We thought this would improve the situation.\n\nHowever, after using it a lot over the past two weeks, I have a similar conclusion to you - it just doesn't work. To be more specific, here are some of the things I have noticed:\n- The previous choice was consistent and allowed a user to develop a habitual action. If you want to created a code cell above just do `ESC+a`. To get a Markdown cell, do `ESC+a+m`. The current approach makes habitual action impossible. \n- In the new UI, I find that most of the time I have no idea what type of cell I just created. The locus of my attention is _always_ elsewhere when I press `a` or `b`, and the new cell has little to no indication of its type. To find out its type, you have to completely shift your attention to up to the toolbar cell type dropdown. At that point, it is just easier to assume the new cell type is wrong and change it to the type you want.\n- The current approach almost always gives the wrong answer. If I am currently editing a code cell that is followed by a heading cell and I do `SHIFT+ENTER` then `a`. I will get a heading cell rather than a code cell, even though I was actually just editing a code cell. The fact that the cell selection jumped for a second to the heading cell below was completely irrelevant.\n- The new behavior is modal - IOW, what cell insertion does depends on state that is not the locus of the user's attention at the time. While there is some disagreement about modal interfaces, I think it is a good idea to minimize the number of modal actions we have.\n- The elephant in the modal room is the new command/edit modes of IPython 2.0. While I think the notebook is _intrinsically_ a modal UI, I think we are going to have to rethink our implementation of this in some respects. This is outside the current issue, but related to the overall problems of having to many modes in our UI.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45525315",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45525315",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45525315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI1MzE1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T18:24:05Z",
    "updated_at": "2014-06-09T18:24:05Z",
    "author_association": "MEMBER",
    "body": "Just to chime in that I disagree with @ellisonbg's assessment of the current behavior. I think it fixes a longstanding frustration. The first three bullets are all contrary to my experience.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45529905",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45529905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45529905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI5OTA1",
    "user": {
      "login": "fonnesbeck",
      "id": 81476,
      "node_id": "MDQ6VXNlcjgxNDc2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/81476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fonnesbeck",
      "html_url": "https://github.com/fonnesbeck",
      "followers_url": "https://api.github.com/users/fonnesbeck/followers",
      "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}",
      "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions",
      "organizations_url": "https://api.github.com/users/fonnesbeck/orgs",
      "repos_url": "https://api.github.com/users/fonnesbeck/repos",
      "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fonnesbeck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T19:00:17Z",
    "updated_at": "2014-06-09T19:00:17Z",
    "author_association": "NONE",
    "body": "My experience can, I'm certain, partly be chalked up to habituation to the former behavior. So, I'm trying to see how things change as I use the current implementation. However, I'm constantly aware of the additional tinkering that I do now that I did not do (or was not aware of doing) before. I'd be happy with a preference setting that always creates code cells (which might be the way around this if folks are having sharply differing experiences with the interface). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45544351",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45544351",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45544351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQ0MzUx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T21:07:20Z",
    "updated_at": "2014-06-09T21:07:20Z",
    "author_association": "MEMBER",
    "body": "@minrk can you provide a few more details about how/why you don't run into the issue I am seeing on this? For example, I am mostly referring to editing in the middle of a notebook. I should have said that I think the current behavior when working at the end of notebook works pretty well. The biggest problems occur in the middle of a notebook, but at the end of a section. In that case, the cell that ends up selected after doing `shift+enter` is the heading cell of the following section. Getting a code or markdown cell above that is a total pain. How do you work in that situation?\n\nI have been doing some research/reading on how we could improve our UI in a more systematic/scientific/data-driven manner and will post some ideas on it. I think that part of the difficulty right now is that I have a general dis-ease with certain aspects of our UI, but no data to support my subjective and very vague senses of that. What I have noticed at a subjective level is that my frustration level with our UI is higher than it was for our 1.0 series UI (before the dual mode stuff). My comments in this issue are a partial attempt to try and be more specific about that.\n\nOne of the big themes I am finding in the books I am reading (Krug's \"Don't Make Me Think\" and Raskin's \"Humane Interface\") is to try, whenever possible, to support UI decisions with statistical models, user data and more of a scientific approach. To help with this I am working on some notebook extensions that will gather UI data (opt in of course) to help us better understand the issues from a quantitative perspective. A perfect example of this would be to be able to gather statistics on how often the current logic for picking the cell type differs from what the user ends up wanting.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45545884",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45545884",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45545884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQ1ODg0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T21:20:55Z",
    "updated_at": "2014-06-09T21:20:55Z",
    "author_association": "MEMBER",
    "body": "> The biggest problems occur in the middle of a notebook, but at the end of a section. In that case, the cell that ends up selected after doing shift+enter is the heading cell of the following section. Getting a code or markdown cell above that is a total pain. How do you work in that situation?\n\nI don't understand what you mean by \"total pain,\" since getting a markdown cell is either identical or less interaction than before. Either you known it's a markdown cell because you were already working in markdown and you do nothing, or you don't assume it's a markdown cell and you just hit `m`, like always. There's no cost to hitting `m` if it's already markdown, so it's perfectly consistent no matter what cell type you are creating.\n\nIn my experience thus far, I find that adding markdown to notebooks has improved, becoming less cumbersome and confusing than before (obviously subjective). That's why I wanted to chime in, to make it clear than increases confusion and frustration is not universal.\n\n>  is to try, whenever possible, to support UI decisions with statistical models, user data and more of a scientific approach.\n\nI'm not the biggest fan of this idea, or at least taking it too far, since it seems like Google's approach to many things, and largely why they do such a bad job at almost everything UI related.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45549325",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45549325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45549325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQ5MzI1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T21:54:15Z",
    "updated_at": "2014-06-09T21:54:15Z",
    "author_association": "MEMBER",
    "body": "On Mon, Jun 9, 2014 at 2:20 PM, Min RK notifications@github.com wrote:\n\n> The biggest problems occur in the middle of a notebook, but at the end of\n> a section. In that case, the cell that ends up selected after doing\n> shift+enter is the heading cell of the following section. Getting a code or\n> markdown cell above that is a total pain. How do you work in that situation?\n> \n> I don't understand what you mean by \"total pain,\" since getting a markdown\n> cell is either identical or less interaction than before. Either you known\n> it's a markdown cell because you were already working in markdown and you\n> do nothing, or you don't assume it's a markdown cell and you just hit m,\n> like always. There's no cost to hitting m if it's already markdown, so\n> it's perfectly consistent no matter what cell type you are creating.\n> \n> When the current approach inserts a cell of a different type than I want,\n> I do 2 different things:\n1. I look at the type of cell that was inserted and use my brain\n   (hopefully) to decide if I need to change it. Often this involves looking\n   up to the toolbar to see the cell type. The mental processing time for this\n   look and ecision (>1s) is equivalent to about 5-10ish keystrokes for me (I\n   started to time this stuff yesterday). Part of the problem with this\n   approach is that it pulls my brain away from the work it was doing. This\n   option is less interaction, but more raw time and cognitive load.\n2. I completely ignore the new cell type and _always_ press `m` to get a\n   Markdown cell if that is what I want or `y` to get a code cell. This is\n   faster, and allows me to develop a fast habit for these actions, but it\n   means that from a cognitive perspective, I have to assume the cell type is\n   always wrong. Sure some times it may be right, but it is much faster on\n   average to just assume it is wrong.\n\nI have played with both of these approaches and currently am using (2) most\nof the time now. Compared to the old approach (code cell always), (2)\ninvolves more keystrokes for me. I will admit some of this was training - I\nhad it hardwired that `a` or `b` always created a code cell and that I only\nhad to hit `m123456` if I wanted something different. But I could do that\nhabitually, without looking.\n\nWhen you are working in the middle of a notebook, which variant of\n`*-enter` do you use? I find that I can't develop a consistent, fast habit\nto do anything but `shift+enter`. This compounds the above problems,\nbecause it means that when I insert a new cell, I don't have the previously\nrun cell selected, but the one following it. I think the auto-cell-type\nselection makes much more sense for the execute-and-insert-cell action of\n`alt-enter`.\n\nIn my experience thus far, I find that adding markdown to notebooks has\n\n> improved, becoming less cumbersome and confusing than before (obviously\n> subjective). That's why I wanted to chime in, to make it clear than\n> increases confusion and frustration is not universal.\n> \n> is to try, whenever possible, to support UI decisions with statistical\n> models, user data and more of a scientific approach.\n> \n> I'm not the biggest fan of this idea, or at least taking it too far, since\n> it seems like Google's approach to many things, and largely why they do\n> such a bad job at almost everything UI related.\n> \n> I totally agree about taking this too far. But right now, we are a long\n> ways from being overly data driven in our UI development. I think gathering\n> data could help us understand why you and I are experiencing this\n> differently and identify the underlying issues that are universal. More\n> importantly, data could help us understand how our users experience these\n> things. We ourselves are extremely biased data points in the overall space\n> of notebook users. While I am very egocentric (N=1, but N=me!) about my\n> experience of these things, my rational mind knows that I should have\n> significant skepticism about making UI decisions based on this.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5952#issuecomment-45545884.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45549859",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45549859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45549859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQ5ODU5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T21:59:29Z",
    "updated_at": "2014-06-09T21:59:29Z",
    "author_association": "MEMBER",
    "body": "> When you are working in the middle of a notebook, which variant of `*-enter` do you use?\n\nI have only ever used shift-enter. I never use the others for anything ever.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45550094",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45550094",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45550094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTUwMDk0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T22:01:56Z",
    "updated_at": "2014-06-09T22:01:56Z",
    "author_association": "MEMBER",
    "body": "> I think gathering data could help us understand why you and I are experiencing this differently and identify the underlying issues that are universal.\n\nSure, gathering some info is helpful. It was your use of 'statistical models' that worried me. I don't think that would be beneficial.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45552663",
    "html_url": "https://github.com/ipython/ipython/issues/5952#issuecomment-45552663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5952",
    "id": 45552663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTUyNjYz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T22:30:25Z",
    "updated_at": "2014-06-09T22:30:25Z",
    "author_association": "MEMBER",
    "body": "Ahh, understandable. I spend a little time working on some statistical\nmodels (using the so called GOMS approach that Raskin talks about) this\nweekend to try it out. It quickly become apparent that justifying my\nassumptions was going to be much more difficult than writing the code to\ngather real data. Although I will say that working through these models\nhelped me to better understand what type of data I needed to collect.\n\nOn Mon, Jun 9, 2014 at 3:01 PM, Min RK notifications@github.com wrote:\n\n> I think gathering data could help us understand why you and I are\n> experiencing this differently and identify the underlying issues that are\n> universal.\n> \n> Sure, gathering some info is helpful. It was your use of 'statistical\n> models' that worried me. I don't think that would be beneficial.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5952#issuecomment-45550094.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
