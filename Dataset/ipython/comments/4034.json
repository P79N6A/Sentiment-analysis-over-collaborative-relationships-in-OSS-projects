[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22677651",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22677651",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22677651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjc3NjUx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-15T00:24:48Z",
    "updated_at": "2013-08-15T00:24:48Z",
    "author_association": "MEMBER",
    "body": "Here is a simple example of what this looks like:\n\n![screen shot 2013-08-14 at 5 24 11 pm](https://f.cloud.github.com/assets/27600/966235/0f56d2ce-0541-11e3-8ef6-594f437af7c1.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22684712",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22684712",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22684712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjg0NzEy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-15T04:35:06Z",
    "updated_at": "2013-08-15T04:35:06Z",
    "author_association": "MEMBER",
    "body": "should it be `code_cell_style`, or even `prompt_style`?  It seems like these should actually be separate sub-templates.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22737874",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22737874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22737874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzM3ODc0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-15T23:17:56Z",
    "updated_at": "2013-08-15T23:17:56Z",
    "author_association": "MEMBER",
    "body": "It doesn't seem like this should be a special switch, it seems like these should be minimal templates.  Can you see if implementing it that way makes sense?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22752834",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22752834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22752834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzUyODM0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-16T08:01:08Z",
    "updated_at": "2013-08-16T08:01:08Z",
    "author_association": "MEMBER",
    "body": "> It doesn't seem like this should be a special switch, it seems like these should be minimal templates. Can you see if implementing it that way makes sense?\n\nPrevious template already had 2 \"style\" but I agree that it would be great to have that in sub templates.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22841473",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22841473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22841473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQxNDcz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-18T22:09:46Z",
    "updated_at": "2013-08-18T22:09:46Z",
    "author_association": "MEMBER",
    "body": "Here is some clarification on my thoughts about our LaTeX templates.\n\nSummary: **the template is the API**\n- In general, we should be using template overloading for customization as much as possible.  This should include many things that are currently `config=True` attributes.\n- We need to have a really solid base LaTeX template that makes it really easy to overload the different parts of the document.\n- We should have basic article, etc. templates that users can customize to their needs\n- The Sphinx templates should inherit from the base LaTeX templates\n- One big, non-trivial part of the LaTeX conversion is how the input and output cells are formatted.  There are a number of different options:\n1. Not syntax highlighted, plain verbatim. Useful for journal articles that don't tolerate the extra code for doing syntax highlighting.\n2. Python prompts or not\n3. Our current \"simple\" mode\n4. Our current \"notebook\" mode\n\nEach of the different LaTeX templates should be able to use these styles.  IOW, these things should not be separate templates themselves, otherwise we will have an exponential explosion of templates.  Someone might want to use the Sphinx how to template, but with no syntax-highlighting and plain Python prompts.  We have to allow customization like that.  We might even want to make these different output styles as filters.  That would allow their reuse in places like dexy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22842027",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22842027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22842027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQyMDI3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-18T22:28:12Z",
    "updated_at": "2013-08-18T22:28:25Z",
    "author_association": "MEMBER",
    "body": "From this, it sounds like the cell styles should be defined as blocks themselves,\nso they can be reused / overridden in templates.  Then the main input block can be a simple dispatch:\n\n```\n{% block notebook_input scoped %}\ndo notebook stuff\n{% endblock notebook_input%}\n\n{% block plain_input scoped %}\ndo plain stuff\n{% endblock plain_input%}\n\n{% block input_group %}\n  {% if resources.latex.input_style == 'notebook' %}\n    {% block notebook_input %}\n  {% elif resources.latex.input_style == 'plain' %}\n    {% block plain_input %}\n  {% endif %}\n{% endblock input_group %}\n```\n\nDo you want to take a stab at that implementation?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22842181",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22842181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22842181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQyMTgx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-18T22:33:48Z",
    "updated_at": "2013-08-18T22:33:48Z",
    "author_association": "MEMBER",
    "body": "That is a good idea, I will give it a shot...\n\nOn Sun, Aug 18, 2013 at 3:28 PM, Min RK notifications@github.com wrote:\n\n> From this, it sounds like the cell styles should be defined as blocks\n> themselves,\n> so they can be reused / overridden in templates. Then the main input block\n> should just be a simple dispatch:\n> \n> {% block notebook_input scoped %}\n> do notebook stuff\n> {% endblock notebook_input%}\n> \n> {% block plain_input scoped %}\n> do plain stuff\n> {% endblock plain_input%}\n> \n> {% block input_group %}\n>   {% if resources.latex.input_style == 'notebook' %}\n>     {% block notebook_input %}\n>   {% elif resources.latex.input_style == 'plain' %}\n>     {% block plain_input %}\n>   {% endif %}\n> {% endblock input_group %}\n> \n> Do you want to take a stab at that implementation?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4034#issuecomment-22842027\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22855774",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22855774",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22855774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODU1Nzc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-19T07:49:27Z",
    "updated_at": "2013-08-19T07:49:27Z",
    "author_association": "MEMBER",
    "body": "But I guess ruby and Haskell have different prompt than python. The \"notebook\" one are pretty universal, but I don't see why we should treat python input prompt specifically.\n\nWouldn't it better to have a \"prompt\" filter, not configurable at all that pretend  whatever, and if you need a special prompt, you pass another explicit function that does whatever with cell text?\n\nLe 19 août 2013 à 00:28, Min RK notifications@github.com a écrit :\n\n> From this, it sounds like the cell styles should be defined as blocks themselves,\n> so they can be reused / overridden in templates. Then the main input block should just be a simple dispatch:\n> \n> {% block notebook_input scoped %}\n> do notebook stuff\n> {% endblock notebook_input%}\n> \n> {% block plain_input scoped %}\n> do plain stuff\n> {% endblock plain_input%}\n> \n> {% block input_group %}\n>   {% if resources.latex.input_style == 'notebook' %}\n>     {% block notebook_input %}\n>   {% elif resources.latex.input_style == 'plain' %}\n>     {% block plain_input %}\n>   {% endif %}\n> {% endblock input_group %}\n> Do you want to take a stab at that implementation?\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22984173",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-22984173",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 22984173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTg0MTcz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-20T22:54:32Z",
    "updated_at": "2013-08-20T22:54:32Z",
    "author_association": "MEMBER",
    "body": "The existing `add_prompts` filter has support for other prompt styles.\n\nOn Mon, Aug 19, 2013 at 12:49 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> But I guess ruby and Haskell have different prompt than python. The\n> \"notebook\" one are pretty universal, but I don't see why we should treat\n> python input prompt specifically.\n> \n> Wouldn't it better to have a \"prompt\" filter, not configurable at all that\n> pretend whatever, and if you need a special prompt, you pass another\n> explicit function that does whatever with cell text?\n> \n> Le 19 août 2013 à 00:28, Min RK notifications@github.com a écrit :\n> \n> > From this, it sounds like the cell styles should be defined as blocks\n> > themselves,\n> > so they can be reused / overridden in templates. Then the main input\n> > block should just be a simple dispatch:\n> > \n> > {% block notebook_input scoped %}\n> > do notebook stuff\n> > {% endblock notebook_input%}\n> > \n> > {% block plain_input scoped %}\n> > do plain stuff\n> > {% endblock plain_input%}\n> > \n> > {% block input_group %}\n> > {% if resources.latex.input_style == 'notebook' %}\n> > {% block notebook_input %}\n> > {% elif resources.latex.input_style == 'plain' %}\n> > {% block plain_input %}\n> > {% endif %}\n> > {% endblock input_group %}\n> > Do you want to take a stab at that implementation?\n> > \n> > —\n> > Reply to this email directly or view it on GitHub.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4034#issuecomment-22855774\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23303031",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-23303031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 23303031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAzMDMx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T23:26:55Z",
    "updated_at": "2013-08-26T23:26:55Z",
    "author_association": "MEMBER",
    "body": "I talked to @jdfreder and he is refactoring the LaTeX templates in a separate PR.  He think we should merge this as is and he will rebase his stuff and continue to refactor the design of all of this.  Is that OK?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23312497",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-23312497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 23312497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzEyNDk3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T04:29:01Z",
    "updated_at": "2013-08-27T04:29:01Z",
    "author_association": "MEMBER",
    "body": "So you decided against the block implementation you planned above?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23312570",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-23312570",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 23312570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzEyNTcw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T04:32:21Z",
    "updated_at": "2013-08-27T04:32:21Z",
    "author_association": "MEMBER",
    "body": "Yes/no.  Blocks don't quite work like that in Jinja, but @jdfreder  figured out a way of doing it with conditional inheritance.  The result is going to be very nice and not too different from the original idea - but this resulted in a complete refactor of the latex templates in a separate PR.  This one just need to go in so @jdfreder can incorporate the Python style in the new approach.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23312582",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-23312582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 23312582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzEyNTgy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T04:33:11Z",
    "updated_at": "2013-08-27T04:33:11Z",
    "author_association": "MEMBER",
    "body": "Here is the PR where the latex template refactoring is happening: #4112 \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23595258",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-23595258",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 23595258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTk1MjU4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-30T23:43:47Z",
    "updated_at": "2013-08-30T23:43:47Z",
    "author_association": "MEMBER",
    "body": "I talked with @jdfreder and he is going to implement this cleanly in his #4112 branch by cherry picking relevant commits from this branch.  I will leave it open until he does that but this branch won't be merged.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23754038",
    "html_url": "https://github.com/ipython/ipython/pull/4034#issuecomment-23754038",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4034",
    "id": 23754038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU0MDM4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T23:01:10Z",
    "updated_at": "2013-09-03T23:01:10Z",
    "author_association": "MEMBER",
    "body": "I pulled the commits I need thanks, closing...\n"
  }
]
