[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106962202",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-106962202",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 106962202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjk2MjIwMg==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-29T23:50:19Z",
    "updated_at": "2015-05-29T23:50:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @takluyver,\n\nI'm very happy to hear about this.\n`ptipython`, while nice, is not the future. (I don't like the current integration with IPython that I did myself.)\n\nWhat you need for the repl is not much, probably somewhere about 500 or 1000 lines of code to have a nice front-end for IPython that does all the highlighting and autocompletion.\n\nBasically, we need to have one place in IPython where we read the input. That's a blocking call that runs the input interface, and when the user accepts the input, it returns the Python code as a string.\n\nOne issue though is that IPython runs its own event loop. (It has several, I believe.) This is mainly important for rendering the mathplotlib graphs. The challenge is to be able to run prompt_toolkit on these event loops. I think it should be possible. Much of the architecture of prompt_toolkit has improved a lot in the last months: now it's easy to run such an interface on any event loop.\n\nI am very willing to help with the integration. The last few weeks I have been working on a few major refactorings in prompt_toolkit. (many performance improvements + much better I/O abstraction.) I will finish this first. It has to be really stable, and then I can help with IPython.\n\nOne question. What do you mean by ssh-ing to old servers? SSH does not care about which terminal the client uses. It's only an environment variable passed through. But I heard that the mosh shell on the other hand, doesn't like prompt_toolkit. (I think it makes some invalid assumptions about the program running in the terminal.)\n\nJonathan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106965465",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-106965465",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 106965465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjk2NTQ2NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-30T00:10:52Z",
    "updated_at": "2015-05-30T00:10:52Z",
    "author_association": "MEMBER",
    "body": "Awesome, thanks! We also have some other stuff to do before we dive into this (4.0 will be mainly a big reorganisation, with no major new features), so there's no rush to do this immediately.\n\nThat sounds like it will fit into our architecture well: we already have one relatively isolated piece that reads the input - that's the 60 lines or so starting [here](https://github.com/ipython/ipython/blob/fe31d6221c83cb4c452b75e6a76f3a1eaf1346f5/IPython/terminal/interactiveshell.py#L443).\n\nGood point about running with other event loops. Our current strategy is to hook `PyOS_InputHook` up to the different event loops so that it gets called regularly to process new input. It's definitely one of the more delicate pieces of the codebase. I expect we can work something out.\n\nI think we were just generally guessing that there would be some situations in which fancy terminal interfaces wouldn't work properly, so we'd need a plainer fallback. Maybe this isn't necessary at all - have you come across anything like that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107050049",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-107050049",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 107050049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA1MDA0OQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-30T15:02:55Z",
    "updated_at": "2015-05-30T15:02:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please pull me in for mpl related issues.\n\nWe just added a bit tighter integration with the IPython event loops (https://github.com/matplotlib/matplotlib/pull/4091).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107097611",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-107097611",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 107097611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA5NzYxMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-30T22:47:56Z",
    "updated_at": "2015-05-30T22:47:56Z",
    "author_association": "MEMBER",
    "body": "@tacaswell , I think the question is more around IPython's integration with the different event loops for mpl backends, that make it possible to keep display and interact with figures without blocking IPython - that PR looks like something a bit different.\n\nIt looks like the way we currently do it is specific to Python's readline bindings, so we'll probably have to do that integration another way with prompt_toolkit - though it sounds like that might actually be easier than the current situation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/115372971",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-115372971",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 115372971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTM3Mjk3MQ==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-25T19:40:14Z",
    "updated_at": "2015-06-25T19:44:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi all.\nToday I pushed a new release of both `prompt_toolkit` and `ptpython`. Windows support has been improved significantly. It feels almost like Unix, especially with a console like `ConEmu`.\n\nThe simplest example of a blocking call that reads Python input from the user and returns a string can be found in this example: https://github.com/jonathanslenders/ptpython/blob/master/examples/python-input.py\n\nFor the intergration, we would need to write a custom eventloop, or a simple adaptor that allows one eventloop to run \"on top\" of another. Keep in mind that Windows and Unix systems use a different event loop. I did not had the time yet to invest in the integration, and the coming weeks I'm on holiday. But hopefully we can do it this summer, that would be nice.\n\nOne thing that you can already think of is how much of `ptpython` you'd like to see for an IPython front-end. The colorschemes? The current configuration menu? Jedi completions? Docstrings? Function signatures? A custom status bar, showing IPython specific stuff? If we share functionality with `ptpython`, do we also share code? `ptpython` is about 2300 lines right now.\n\nJonathan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/115378384",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-115378384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 115378384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTM3ODM4NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-25T20:04:39Z",
    "updated_at": "2015-06-25T20:04:39Z",
    "author_association": "MEMBER",
    "body": "Thanks, I'll dig into that example a bit and think about how we can integrate with it. For a first pass, I imagine we wouldn't use that much of the ptpython functionality: we have our own equivalents of some of it, and we're focussing on the notebook at present. But once it's in place and working, I'm sure there will be pressure to do more interesting things with it.\n\nEnjoy your holiday - we're still concentrating on getting 4.0 out, so there's no rush. I look forward to working with you on this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/116252040",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-116252040",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 116252040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjI1MjA0MA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-28T10:13:56Z",
    "updated_at": "2015-06-28T10:13:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!\n\nA small update, I still found some time. Here is an example of prompt-toolkit integration in the GTK event loop: https://github.com/jonathanslenders/python-prompt-toolkit/pull/134\nI guess I'll do some more improvements, clean up and add Windows support. But that's all very easy.\n\nWe don't even have to patch `PyOS_InputHook` like IPython is currectly doing.\n\nJonathan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/116808337",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-116808337",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 116808337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjgwODMzNw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-29T19:29:30Z",
    "updated_at": "2015-06-29T19:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Update.\nI tried another approach after realising that creating custom `EventLoop` classes as adaptors for each GUI tool kit would be difficult. It could result in a big change in the IPython code and maybe for some event loops it would not even be feasible to insert the objects to wait for. (Especially `windll.kernel32.CreateEventA`, which doesn't work together with a `select`-based event loop.)\n\nSo I added input hooks to `prompt-toolkit`, exactly like Python has `PyOS_InputHook`. This should make the change in `IPython` rather small, and clean up some `ctypes` stuff.\nHave a look at this example: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/examples/inputhook.py\nand this file: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/prompt_toolkit/eventloop/inputhook.py\nEverything is in this commit:\n https://github.com/jonathanslenders/python-prompt-toolkit/commit/f0586b18c19c1407b352e2daea12c27098981405\n\nRequired changes on the IPython side:\n- The `IPython.lib.inputhook.stdin_ready*` should be replaced by something that uses `InputhookContext.input_is_ready` or `InputHookContext.fileno()`. It's platform independent. (The `prompt-toolkit` eventloops handle the platform specific differences.)\n- `InputHookManager.clear_input_hook` and `InputHookManager.set_input_hook` should be updated to set a callable which can be passed to `get_input`. That callable receives such an `InputHookContext` which can be tested for readyness.\n\nSo, the examples that I tested seem to work very well. Tested on both Windows and Linux.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/116810125",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-116810125",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 116810125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjgxMDEyNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-29T19:32:31Z",
    "updated_at": "2015-06-29T19:32:31Z",
    "author_association": "MEMBER",
    "body": "That sounds very promising, thanks @jonathanslenders!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/116814633",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-116814633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 116814633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjgxNDYzMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-29T19:46:26Z",
    "updated_at": "2015-06-29T19:46:26Z",
    "author_association": "MEMBER",
    "body": "Thanks, that looks really nice. Quick question: it looks like `inputhook` is passed when the event loop is created. Is it easy to support adding an inputhook later? Or to switch to a new event loop between inputs? Our current system allows you to do e.g. `%gui qt` in a running IPython session and add the inputhook. Losing that would probably be acceptable given other benefits, but I think it should be simple.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/116850494",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-116850494",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 116850494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjg1MDQ5NA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-29T21:24:49Z",
    "updated_at": "2015-06-29T21:27:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "That should be easy.\n\nJust noticed that integration with `tk` needed a bit more work. By default, `tk` already sets `PyOS_InputHook` itself, so there was not much to do before. With `prompt_toolkit` however, that would not prevent blocking the UI. So I had to make an `ipython.lib.inputhooktk.py` file. Something like this: (I need to do some more testing later this week, or after my holiday, but I think it's rather easy what still has to be done.)\n\n``` python\nimport _tkinter\n\ndef inputhook_tk(app, inputhook_context):\n    # Add a handler that sets the stop flag when `prompt-toolkit` has input to\n    # process.\n    stop = [False]\n    def done(*a):\n        stop[0] = True\n\n    app.createfilehandler(inputhook_context.fileno(), _tkinter.READABLE, done)\n\n    # Run the TK event loop as long as we don't receive input.\n    while app.tk.dooneevent(_tkinter.ALL_EVENTS):\n        if stop[0]:\n            break\n\n    app.deletefilehandler(inputhook_context.fileno())\n```\n\nBy the way, `inputhook_context` there is a parameter coming from `prompt-toolkit`. I guess it'll make more sense when I have a full patch ready.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/116860301",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-116860301",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 116860301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjg2MDMwMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-29T22:04:00Z",
    "updated_at": "2015-06-29T22:04:00Z",
    "author_association": "MEMBER",
    "body": "That makes sense. I think `PyOS_InputHook` was probably created for Tkinter, so it's reasonable that we'd have to replace it now that we're moving away from that. And it's really nice that we can do things like this without touching ctypes. Or not directly, at least - I guess you're still dealing with that level within prompt_toolkit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/117799599",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-117799599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 117799599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzc5OTU5OQ==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-01T19:20:04Z",
    "updated_at": "2015-07-01T19:20:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "prompt-toolkit uses only ctypes for Windows. We don't need any 'unsafe' code for posix platforms. It's simply waiting with `select`, reading from stdin, and writing to stdout. Nothing fancy. For Windows, we need ctypes in order to access the Win32 API, e.g. `ctypes.windll.kernel32.ReadConsoleInputW`.\n\nI made the pull request above. It's far from finished. But that way you can already have a look. As far as I could test, the integration with all GUI toolkits is fine. Most work to be done is clean up a lot of `readline` stuff. (which is everywhere...). Especially the history and completer need some attention.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/117799907",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-117799907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 117799907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzc5OTkwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-01T19:21:37Z",
    "updated_at": "2015-07-01T19:21:37Z",
    "author_association": "MEMBER",
    "body": "You're a star, thanks! We're in feature freeze for a new release at the moment, but I'll definitely have a look at it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/138670173",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-138670173",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 138670173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODY3MDE3Mw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-08T18:58:11Z",
    "updated_at": "2015-09-08T18:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi all,\n\nA short update. Apparently, this summer I had less time than expected, and there was still enough work for prompt-toolkit itself to become even better. It got many improvements, though probably nothing worth mentioning for IPython right now. A few improvements, coming to prompt-toolkit that I'm working on are better navigation for completion menus, scheduling of sleep events in the event loops, and some other small polishing.\n\nSo, about IPython. I had a working proof of concept, but there is really a lot to do. Actually everything depending on `coloransi.py`  should be refactored to have a consistent look. But I propose to leave that for later and focus first only on TerminalInteractiveShell and the event loop integration. (Anyway, I guess I won't be able to do everything myself, but I should be able to make it work and do the integration with the event loops and the prompt-toolkit UI.)\n\nAs you said in https://github.com/ipython/ipython/pull/8597 : In the kernel, we could also call the UI eventloop from there instead of the other way around. I guess it should be equally fast, it doesn't really matter. (Basically with the input hooks we hand over control as well to the GUI loop.) I think I didn't look yet at the code for the kernels, so I could be missing some details. I would do what's the easiest, most flexible and maintainble.\n\nSo, from my side, what I'm going to do is create a new pull request, rebased on master with the minimal changes I need for the terminal UI as I have right now, and then we'll see from there.\n(Python 3.5 is arriving, so better not to wait too long anymore.)\n\nJonathan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/138815907",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-138815907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 138815907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODgxNTkwNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-09T07:52:43Z",
    "updated_at": "2015-09-09T07:52:43Z",
    "author_association": "MEMBER",
    "body": "I might be misunderstanding something, but the kernel eventloops shouldn't need any integration with PT, since they are always in a non-terminal process talking over zmq. The frontend is in a different process, which doesn't run any code in the kernel case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/138816628",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-138816628",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 138816628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODgxNjYyOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-09T07:56:10Z",
    "updated_at": "2015-09-09T07:56:10Z",
    "author_association": "MEMBER",
    "body": "...and thanks for the update! I know @takluyver is very interested in this, and likely to help out if he has time. He is on holiday until the end of September, though. I don't think the 3.5 pressure is as great as it once was because pyreadline is now able to run on Python 3.5. So we have time to do it carefully.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/216326861",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-216326861",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 216326861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMyNjg2MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T18:54:29Z",
    "updated_at": "2016-05-02T18:54:29Z",
    "author_association": "MEMBER",
    "body": "This is now done !  Yeah one step closer to 5.0 !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/216337610",
    "html_url": "https://github.com/ipython/ipython/issues/8489#issuecomment-216337610",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8489",
    "id": 216337610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMzNzYxMA==",
    "user": {
      "login": "ryneeverett",
      "id": 3280280,
      "node_id": "MDQ6VXNlcjMyODAyODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3280280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryneeverett",
      "html_url": "https://github.com/ryneeverett",
      "followers_url": "https://api.github.com/users/ryneeverett/followers",
      "following_url": "https://api.github.com/users/ryneeverett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryneeverett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryneeverett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryneeverett/subscriptions",
      "organizations_url": "https://api.github.com/users/ryneeverett/orgs",
      "repos_url": "https://api.github.com/users/ryneeverett/repos",
      "events_url": "https://api.github.com/users/ryneeverett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryneeverett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T19:32:08Z",
    "updated_at": "2016-05-02T19:32:08Z",
    "author_association": "NONE",
    "body": "ref: #9399 \n"
  }
]
