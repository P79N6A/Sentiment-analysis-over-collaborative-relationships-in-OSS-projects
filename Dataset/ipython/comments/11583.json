[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/458753952",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-458753952",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 458753952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODc1Mzk1Mg==",
    "user": {
      "login": "LucianaMarques",
      "id": 10895920,
      "node_id": "MDQ6VXNlcjEwODk1OTIw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10895920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianaMarques",
      "html_url": "https://github.com/LucianaMarques",
      "followers_url": "https://api.github.com/users/LucianaMarques/followers",
      "following_url": "https://api.github.com/users/LucianaMarques/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianaMarques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianaMarques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianaMarques/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianaMarques/orgs",
      "repos_url": "https://api.github.com/users/LucianaMarques/repos",
      "events_url": "https://api.github.com/users/LucianaMarques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianaMarques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T23:48:34Z",
    "updated_at": "2019-01-29T23:48:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also realized that the API in /core/completer.py has some TODOs. Is there someone mainly responsible for this part? I'd like to give it a try with some improvements and it would be good to talk about first."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459120096",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-459120096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 459120096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTEyMDA5Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T21:40:14Z",
    "updated_at": "2019-01-30T21:40:14Z",
    "author_association": "MEMBER",
    "body": "> I also realized that the API in /core/completer.py has some TODOs.\r\n\r\nNo-one in particular it would be great to get some of that done, but let's focus on unicode so far. \r\n\r\nFrom your code I see where some of the misunderstanding and issue are. \r\n\r\nCurrently in IPython, you can do `Unicode name` -> `unicode symbol`, for example:\r\n\r\n```\r\nGREEK SMALL LETTER ETA -> Î·\r\n```\r\n\r\nThis is done through `unicodedata.lookup`, as you discovered. \r\n\r\nIf you look carefully you will see that this is already done in `unicode_name_matches` around line 1664. \r\n\r\nOne thing we do not have though is if someone type only `GREEK SM<tab>`, we have no way to suggest `ALL LETTER ETA`, and there is no (AFAICT) simple way built-in in Python to achieve this. \r\n\r\nWe need to build this possibility ahead of time.\r\nTo do so we need to first build a list of all unicode names. First let's try to do it only for ASCII for A to Z ([65 to 90](http://ee.hawaii.edu/~tep/EE160/Book/chap4/subsection2.1.1.1.html)):\r\n\r\n```\r\nIn [4]: import unicodedata\r\n   ...: names = []\r\n   ...: for c in range(65, 90):\r\n   ...:     try:\r\n   ...:         names.append(unicodedata.name(chr(c)))\r\n   ...:     except ValueError:\r\n   ...:         pass\r\n   ...: names\r\nOut[4]:\r\n['LATIN CAPITAL LETTER A',\r\n 'LATIN CAPITAL LETTER B',\r\n 'LATIN CAPITAL LETTER C',\r\n 'LATIN CAPITAL LETTER D',\r\n 'LATIN CAPITAL LETTER E',\r\n 'LATIN CAPITAL LETTER F',\r\n 'LATIN CAPITAL LETTER G',\r\n 'LATIN CAPITAL LETTER H',\r\n 'LATIN CAPITAL LETTER I',\r\n 'LATIN CAPITAL LETTER J',\r\n 'LATIN CAPITAL LETTER K',\r\n 'LATIN CAPITAL LETTER L',\r\n 'LATIN CAPITAL LETTER M',\r\n 'LATIN CAPITAL LETTER N',\r\n 'LATIN CAPITAL LETTER O',\r\n 'LATIN CAPITAL LETTER P',\r\n 'LATIN CAPITAL LETTER Q',\r\n 'LATIN CAPITAL LETTER R',\r\n 'LATIN CAPITAL LETTER S',\r\n 'LATIN CAPITAL LETTER T',\r\n 'LATIN CAPITAL LETTER U',\r\n 'LATIN CAPITAL LETTER V',\r\n 'LATIN CAPITAL LETTER W',\r\n 'LATIN CAPITAL LETTER X',\r\n 'LATIN CAPITAL LETTER Y']\r\n```\r\n\r\nSo now let's try to slightly modify you function fwd_unicode_matches:\r\n\r\n```\r\nIn [28]: def fwd_unicode_match(self, text:str):\r\n    ...:     # initial code based on latex_matches() method\r\n    ...:         slashpos = text.rfind('\\\\')\r\n    ...:         # if text starts with slash\r\n    ...:         print(slashpos) # debug\r\n    ...:         if slashpos > -1:\r\n    ...:             s = text[slashpos+1:]  # note the +1\r\n    ...:\r\n    ...:             print(s) # debug\r\n    ...:             # instead of looking wether it is unicode, return all the things from\r\n    ...:             #`names` that stars with `s`\r\n    ...:\r\n    ...:             return s, [x for x in names if x.startswith(s)]\r\n    ...:\r\n```\r\n\r\nLet's try it:\r\n```\r\nIn [27]: fwd_unicode_match(None, '\\GRE')\r\n0\r\nGRE\r\nOut[27]: ('GRE', [])  \r\n```\r\n\r\nGood, nothing, we did not attempt to find greek letters so far. Let's try latin:\r\n\r\n```\r\nIn [28]: fwd_unicode_match(None, '\\LAT')\r\n0\r\nLAT\r\nOut[28]:\r\n('LAT',\r\n ['LATIN CAPITAL LETTER A',\r\n  'LATIN CAPITAL LETTER B',\r\n  'LATIN CAPITAL LETTER C',\r\n  'LATIN CAPITAL LETTER D',\r\n....\r\n```\r\n\r\nOk, sounds good. Let's try to add that [into completer.py](https://github.com/ipython/ipython/compare/master...Carreau:try-unicode-4).\r\n\r\n![xx](https://user-images.githubusercontent.com/335567/52014375-3b4a5e00-2494-11e9-9663-a87fbf928fce.gif)\r\n\r\n\r\nOk, good ! It seem to work. \r\n\r\nNow we need to be a tiny bit fancier, and allow upper and lower case to match, and instead of allowing only 65 to 90 we want to try from 0 to `0`, `0x10FFFF + 1`.\r\n\r\nlet me know if that is helpful, I'm going to stop here on the explanation and let you play along with it. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/460477691",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-460477691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 460477691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ3NzY5MQ==",
    "user": {
      "login": "LucianaMarques",
      "id": 10895920,
      "node_id": "MDQ6VXNlcjEwODk1OTIw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10895920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianaMarques",
      "html_url": "https://github.com/LucianaMarques",
      "followers_url": "https://api.github.com/users/LucianaMarques/followers",
      "following_url": "https://api.github.com/users/LucianaMarques/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianaMarques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianaMarques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianaMarques/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianaMarques/orgs",
      "repos_url": "https://api.github.com/users/LucianaMarques/repos",
      "events_url": "https://api.github.com/users/LucianaMarques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianaMarques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T01:16:08Z",
    "updated_at": "2019-02-05T01:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> From your code I see where some of the misunderstanding and issue are.\r\n\r\nI didn't understand really how are we supposed to look into the unicode symbol table to lookup for possible candidates. That really helped :)\r\n\r\nThat was mainly because I noticed there wasn't an unicode table somewhere, similarly to latex symbols. At first, I wasn't confident enough to suggest to add it.\r\n \r\n > Now we need to be a tiny bit fancier, and allow upper and lower case to match, and instead of allowing only 65 to 90 we want to try from 0 to `0`, `0x10FFFF + 1`.\r\n\r\nOk, surely will do it!\r\n\r\nIs there a way we can share the author rights of these when there's a commit ready to merge? I feel like most of the work was done by you even if I'm commiting them. \r\n\r\n> let me know if that is helpful, I'm going to stop here on the explanation and let you play along with it.\r\n\r\nThanks, it really was :)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/460489276",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-460489276",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 460489276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ4OTI3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T02:18:58Z",
    "updated_at": "2019-02-05T02:18:58Z",
    "author_association": "MEMBER",
    "body": "> Is there a way we can share the author rights of these when there's a commit ready to merge? I feel like most of the work was done by you even if I'm committing them.\r\n\r\nHaha, don't worry I have plenty of commits already, there apparently [is a way to ahve multiple authors](https://help.github.com/articles/creating-a-commit-with-multiple-authors/) but it's cumbersome, so feel free to take all the glory :-)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464904283",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-464904283",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 464904283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDkwNDI4Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T22:25:39Z",
    "updated_at": "2019-02-18T22:25:39Z",
    "author_association": "MEMBER",
    "body": "Apologies for the delay reviewing. It seem the test are not passing due to a typo. I'll see if I can fix, it. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464904612",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-464904612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 464904612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDkwNDYxMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T22:26:41Z",
    "updated_at": "2019-02-18T22:26:41Z",
    "author_association": "MEMBER",
    "body": "Side question, are you familiar with travis CI and how to check if the rest are passing ? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464911464",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-464911464",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 464911464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDkxMTQ2NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T22:50:45Z",
    "updated_at": "2019-02-18T22:50:45Z",
    "author_association": "MEMBER",
    "body": "I've push relevant changes, please have a look, and let me know if that make sens. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464912620",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-464912620",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 464912620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDkxMjYyMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T22:54:43Z",
    "updated_at": "2019-02-18T22:54:43Z",
    "author_association": "MEMBER",
    "body": "And now we are happy, out first test seem to be green ! Seem like this il likely to be merged soon. But first, we'll need to make sure all the test are passing !\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464958303",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-464958303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 464958303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDk1ODMwMw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T02:48:11Z",
    "updated_at": "2019-02-19T02:48:17Z",
    "author_association": "MEMBER",
    "body": "All is green ! ð° \r\n\r\nLet me know once you have reviewed and agreed with my change and we can merge :-)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465550241",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-465550241",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 465550241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTU1MDI0MQ==",
    "user": {
      "login": "LucianaMarques",
      "id": 10895920,
      "node_id": "MDQ6VXNlcjEwODk1OTIw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10895920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianaMarques",
      "html_url": "https://github.com/LucianaMarques",
      "followers_url": "https://api.github.com/users/LucianaMarques/followers",
      "following_url": "https://api.github.com/users/LucianaMarques/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianaMarques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianaMarques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianaMarques/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianaMarques/orgs",
      "repos_url": "https://api.github.com/users/LucianaMarques/repos",
      "events_url": "https://api.github.com/users/LucianaMarques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianaMarques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T12:15:57Z",
    "updated_at": "2019-02-20T12:15:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @Carreau !\r\n\r\nMany thanks for the review! I think at the time I just committed a few changes based on what you said, but I left it incomplete to finish later and haven't had the time earlier. So sorry for the delay!\r\n\r\nI'm happy with the changes, but I would be much happier if we shared authorship as previously discussed :)\r\n\r\nMany thanks!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465550325",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-465550325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 465550325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTU1MDMyNQ==",
    "user": {
      "login": "LucianaMarques",
      "id": 10895920,
      "node_id": "MDQ6VXNlcjEwODk1OTIw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10895920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianaMarques",
      "html_url": "https://github.com/LucianaMarques",
      "followers_url": "https://api.github.com/users/LucianaMarques/followers",
      "following_url": "https://api.github.com/users/LucianaMarques/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianaMarques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianaMarques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianaMarques/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianaMarques/orgs",
      "repos_url": "https://api.github.com/users/LucianaMarques/repos",
      "events_url": "https://api.github.com/users/LucianaMarques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianaMarques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T12:16:13Z",
    "updated_at": "2019-02-20T12:16:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "If it's ok, I would like to work on the other TODOs of this class."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465660460",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-465660460",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 465660460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTY2MDQ2MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T16:47:49Z",
    "updated_at": "2019-02-20T16:47:49Z",
    "author_association": "MEMBER",
    "body": "> So sorry for the delay!\r\n\r\nNo need to apologise, you are not officially working on the project, and you contributed  a lot already. \r\n \r\n> I'm happy with the changes, but I would be much happier if we shared authorship as previously discussed :)\r\n\r\nI have two commits in the branch now so I'll have partial credit:-) \r\n\r\n\r\nI'l like for you to look at a few things: We're planning participating in outreachy again âÂ you expressed interest in being in an internship, and I would love if we can do that. Woudl you mind reading /participating in the following discussion ? https://discourse.jupyter.org/t/thinking-about-reapplying-to-outreachy-in-may-2019/404\r\n\r\n2)  It would be great for you to write a small summary of what this PR achieves, create a file with a few line in `docs/source/whatsnew/pr/` , it will be used to tell user about the new feature. \r\n\r\nAgain work on what you like. \r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465798570",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-465798570",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 465798570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTc5ODU3MA==",
    "user": {
      "login": "LucianaMarques",
      "id": 10895920,
      "node_id": "MDQ6VXNlcjEwODk1OTIw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10895920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianaMarques",
      "html_url": "https://github.com/LucianaMarques",
      "followers_url": "https://api.github.com/users/LucianaMarques/followers",
      "following_url": "https://api.github.com/users/LucianaMarques/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianaMarques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianaMarques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianaMarques/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianaMarques/orgs",
      "repos_url": "https://api.github.com/users/LucianaMarques/repos",
      "events_url": "https://api.github.com/users/LucianaMarques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianaMarques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T23:33:03Z",
    "updated_at": "2019-02-20T23:33:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We're planning participating in outreachy again\r\n\r\nThat's great! I'm so glad for it :) I'll join the discussion!\r\n\r\n>  It would be great for you to write a small summary of what this PR achieves, create a file with a few line in `docs/source/whatsnew/pr/` , it will be used to tell user about the new feature.\r\n\r\nYeap, sure! Just a quick question for future reference, when do we know when to write on this folder? What exactly does the PR has to achieve in order to do so?\r\n\r\nMany thanks! :)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465825324",
    "html_url": "https://github.com/ipython/ipython/pull/11583#issuecomment-465825324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11583",
    "id": 465825324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTgyNTMyNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T01:33:11Z",
    "updated_at": "2019-02-21T01:33:11Z",
    "author_association": "MEMBER",
    "body": "The files in docs/source/whatsnew/pr/ are just merged together at each release to create a final what's new /changelog  which is published  [there](https://ipython.readthedocs.io/en/stable/whatsnew/version7.html), it is mostly to tell users what is new in the release, so can be a 1 line change, or a [multi page explanation](https://ipython.readthedocs.io/en/stable/whatsnew/version7.html#autowait-asynchronous-repl). Up to you  and how much text you think it is worth. "
  }
]
