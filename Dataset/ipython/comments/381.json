[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/999049",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-999049",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 999049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTA0OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T03:23:54Z",
    "updated_at": "2011-04-14T03:23:54Z",
    "author_association": "MEMBER",
    "body": "Any backend can generate a png in memory right?  If so, then I think we don't need a dedicated backend for this.  We can use the existing backend and add a new data format.  Here is the rough idea:\n\nIn the show method in the inline backend:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/zmq/pylab/backend_inline.py\n\nWe can rename send_svg_figure to something like send_figure_data and create both png and svg data.  This will probably involve writing the png analogy to figure_to_svg here:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/pylabtools.py#L78\n\nAnd then calling that.  The important point is that the dict here:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/zmq/pylab/backend_inline.py#L76\n\nCan accomodate multiple data types.  The benefit of sending both is that frontends can then decide which representation to use. In principle, a frontend could view any or all reprsentations that are sent back.  We should also add a formatter for png here as well:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/lib/pylabtools.py#L249\n\nWe will also have to modify the frontend to enable selection of the image type.  This part of the code is pretty new, so you may run into issues.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/999316",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-999316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 999316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTMxNg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T05:28:54Z",
    "updated_at": "2011-04-14T05:28:54Z",
    "author_association": "MEMBER",
    "body": "Should make it configurable and not compute both all the time by default?  The generation of both forms could get expensive... Michael, do you have a sense for which backend takes more time to produce output, the svg or the png one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/999361",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-999361",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 999361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTM2MQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T05:46:10Z",
    "updated_at": "2011-04-14T05:46:10Z",
    "author_association": "MEMBER",
    "body": "Sure we could definitely make this configurable.  It would be great to\nhave a sense of the cost of computing them.\n\nOn Wed, Apr 13, 2011 at 10:28 PM, fperez\nreply@reply.github.com\nwrote:\n\n> Should make it configurable and not compute both all the time by default? Â The generation of both forms could get expensive... Michael, do you have a sense for which backend takes more time to produce output, the svg or the png one?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/381#issuecomment-999316\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1001318",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1001318",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1001318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDEzMTg=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-14T13:57:35Z",
    "updated_at": "2011-04-14T13:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "The performance of the Agg backend really starts to win as the data gets large.  It is able to \"simplify\" the path by removing points that would otherwise be invisible, which really speeds up the stroking operation.  Markers are also much faster because it can render the marker itself only once and then just copy it.  Lesser-used features like quadmeshes and gouraud shading are also _much_ faster with the Agg backend because SVG doesn't really have the high-level primitives for those and they have to be rendered as many tiny polygons.  But my main motivation for using the Agg PNGs was pixel-snapping.  Since we don't know the scale of SVG a priori, matplotlib can't do pixel snapping for SVG.  The SVG standard provides a very blunt tool for this in the \"shape-rendering\" property:\n\nhttp://www.w3.org/TR/SVG/painting.html#ShapeRenderingProperty\n\nUnfortunately, it's up to the rendering agent how specifically to handle this.  Using \"crispEdges\" in Firefox and Chrome just turns off antialiasing, and doesn't address pixel-snapping, so rather than merely fuzzy lines, you get crisp lines but one side of the rectangle may be 2 pixels wide, while the other sides are 1.  The Qt renderer IPython is using seems to ignore the shape-rendering attribute entirely (which isn't surprising, given that shape-rendering is not a part of SVG Tiny).\n\nI would also suggest not generating both every time if we can avoid it.\n\nOk -- so this patch can at least show the differences, but it sounds like it's not the right approach.  Let me summarize and see if I'm following you: \n1. We want a single backend for \"inline\" mode.\n2. There should be some way to set the format of the image on-the-fly (any suggestions as to what is consistent the rest of IPython?  I'm not as experienced with IPython as I probably should be).\n3. There should also be a way to persistently set a default.\n\nAlso \"would be cool\" (but I digress) to bring up an interactive plot window, allow the user to pan/zoom the axes, move the legend etc., then close the window and have the plot placed inline.  Would be \"best of both worlds\" -- the interactivity of the regular matplotlib plot window, and the nice history/serialization of the new inline image stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1008728",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1008728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1008728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDg3Mjg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T16:34:55Z",
    "updated_at": "2011-04-15T16:34:55Z",
    "author_association": "MEMBER",
    "body": "Thanks, this is quite helpful.  It sounds like having png as the default then probably makes more sense.\n1. Yes, I think we want a single backend for inline mode.\n2. We probably want to have a configuration/runtime attribute that controls these things.  Let's get the single backend/png code working first and then we can figure out where to put this attribute.\n3. Yep.\n\nWe already have this.  In a regular GUI backend you can do:\n\n```\ndisplay(*getfigs(1))\n```\n\nAnd you will get the plot inline for figure 1.  No arguments gives you all figs and display_svg and display_png also work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1009415",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1009415",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1009415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDk0MTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T18:21:55Z",
    "updated_at": "2011-04-15T18:21:55Z",
    "author_association": "MEMBER",
    "body": "On Fri, Apr 15, 2011 at 9:34 AM, ellisonbg\nreply@reply.github.com\nwrote:\n\n> We already have this. Â In a regular GUI backend you can do:\n> \n> Â  Â display(*getfigs(1))\n> \n> And you will get the plot inline for figure 1. Â No arguments gives you all figs and display_svg and display_png also work.\n\nI wonder if it would be worth adding to the interactive namespace, in\npylab mode, a convenience\n\ndisplayfigs()\n\nto shorten all the typing for this common case:\n\ndisplayfigs() == display(*getfigs())\n\nwhat do you think?\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1010251",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1010251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1010251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNTE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T19:03:50Z",
    "updated_at": "2011-04-15T19:03:50Z",
    "author_association": "MEMBER",
    "body": "In some ways I like this, but it hides the main API we want people to be\ncome familiar with (display/display__) from the end user.  Currently, people\ndon't know what display/display__ are, but in the future they will ask \"why\ndoes this object not work with IPython's display functions?\"  In that\nfuture, we don't want users to think that displayfigs is somehow different\nfrom the regular display.  There is also the issue of the format used.  We\nalready have display_png, display_svg, etc.  Would we add displayfigs_png,\netc?\n\nMy only complaint about the current API is that for a single figure you\nstill have to add the \\* rather that just doing:\n\ndisplay(getfigs(1))\n\nOn Fri, Apr 15, 2011 at 11:21 AM, fperez <\nreply@reply.github.com>wrote:\n\n> On Fri, Apr 15, 2011 at 9:34 AM, ellisonbg\n> reply@reply.github.com\n> wrote:\n> \n> > We already have this.  In a regular GUI backend you can do:\n> > \n> >    display(*getfigs(1))\n> > \n> > And you will get the plot inline for figure 1.  No arguments gives you\n> > all figs and display_svg and display_png also work.\n> \n> I wonder if it would be worth adding to the interactive namespace, in\n> pylab mode, a convenience\n> \n> displayfigs()\n> \n> to shorten all the typing for this common case:\n> \n> displayfigs() == display(*getfigs())\n> \n> what do you think?\n> \n> f\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/381#issuecomment-1009415\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1010373",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1010373",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1010373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAzNzM=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T19:28:19Z",
    "updated_at": "2011-04-15T19:28:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do:\n\ndisplay(figure(1))\n\nthough your argument still stands that to display all of them, you have to remember the asterisk:\n\ndisplay(*getfigs())\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1010970",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1010970",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1010970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTA5NzA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T21:44:11Z",
    "updated_at": "2011-04-15T21:44:11Z",
    "author_association": "MEMBER",
    "body": "OK, here's a plan:\n- let's leave the display*() api discussion for later, when the dust has settled a bit more on the capabilities of the display machinery.  If we add too many top-level tools and the low-level foundation changes, it will be that much more stuff to change and update.\n- let's make the default inline be png, and for now add `--pylab inline_svg` as an option instead.\n\nMichael, do you think you could make that update to your pull request?\n\nAnd one thing to keep in mind: when the mode is png, the qt console should not offer the option to save html with embedded svg, since there will be no svg around to show...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1029895",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1029895",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1029895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk4OTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-19T22:56:59Z",
    "updated_at": "2011-04-19T22:56:59Z",
    "author_association": "MEMBER",
    "body": "Only one change.  I think we should only have 1 inline backend:\n\n```\n--pylab inline\n```\n\nThe activation of svg rendering should be config=True attribute of something and handled in the normal config manner.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1193676",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1193676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1193676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTM2NzY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-17T22:51:30Z",
    "updated_at": "2011-05-17T22:51:30Z",
    "author_association": "MEMBER",
    "body": "We are closing this as this work is continuing here:\n\nhttps://github.com/ipython/ipython/issues/451\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1193679",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1193679",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1193679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTM2Nzk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-17T22:51:41Z",
    "updated_at": "2011-05-17T22:51:41Z",
    "author_association": "MEMBER",
    "body": "Closing\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1198065",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1198065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1198065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTgwNjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-18T16:33:15Z",
    "updated_at": "2011-05-18T16:33:15Z",
    "author_association": "MEMBER",
    "body": "@mdboom, eventually the implementation ended up a little different from your approach, but many thanks for getting the ball going on this!  Much appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1198087",
    "html_url": "https://github.com/ipython/ipython/pull/381#issuecomment-1198087",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/381",
    "id": 1198087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTgwODc=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-18T16:36:03Z",
    "updated_at": "2011-05-18T16:36:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "No worries.  Glad to at least proof-of-concept it.\n"
  }
]
