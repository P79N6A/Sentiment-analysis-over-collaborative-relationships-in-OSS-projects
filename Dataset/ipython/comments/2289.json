[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7706056",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7706056",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7706056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDYwNTY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T20:00:07Z",
    "updated_at": "2012-08-13T20:00:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Preliminary word on the mailing list is that this is getting pre-processed by markdown (or similar) which adds some stray `<em>` tags, interfering with MathJax.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7716065",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7716065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7716065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTYwNjU=",
    "user": {
      "login": "matthew-brett",
      "id": 67612,
      "node_id": "MDQ6VXNlcjY3NjEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew-brett",
      "html_url": "https://github.com/matthew-brett",
      "followers_url": "https://api.github.com/users/matthew-brett/followers",
      "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
      "repos_url": "https://api.github.com/users/matthew-brett/repos",
      "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-14T04:36:39Z",
    "updated_at": "2012-08-14T04:51:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "(copied from http://mail.scipy.org/pipermail/ipython-dev/2012-August/010042.html)\n\nI think what is happening is that some other script (?markdown) is getting to the TeX before it gets to mathjax.\n\nSpecifically, if I put the mal-functioning TeX into a cell:\n\n```\n$$\n\\begin{array}{c}\ny_1 \\cr\ny_2 \\mathtt{t}_i \\cr\ny_{3}\n\\end{array}\n$$\n```\n\nand put a breakpoint on the line:\n\n```\nMathJax.Hub.Queue([\"Typeset\",MathJax.Hub]);\n```\n\nin cell.js, the html in the cell before rendering is this:\n\n```\n<p>$$\n\\begin{array}{c}\ny_1 \\cr\ny_2 \\mathtt{t}<em>i \\cr\ny</em>{3}\n\\end{array}\n$$</p>\n```\n\nNotice the stray `<em> .. </em>` tags.  If I do a tiny edit to the malfunctioning TeX so that it renders correctly (removing the {} round the last '3'):\n\n```\n$$\n\\begin{array}{c}\ny_1 \\cr\ny_2 \\mathtt{t}_i \\cr\ny_3\n\\end{array}\n$$\n```\n\nthen the html before MathJax gets it is:\n\n```\n<p>$$\n\\begin{array}{c}\ny_1 \\cr\ny_2 \\mathtt{t}_i \\cr\ny_3\n\\end{array}\n$$</p>\n```\n\nSo I think something in the notebook is inserting the `<em> .. </em>` tags into the TeX, and this is busting the rendering.   \n\nWhat could be doing this?  Is there a way of stopping this preprocessing of TeX?  Could this also explain the need for three `\\` for end-of-line instead of two reported in issue #1381\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7749883",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7749883",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7749883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDk4ODM=",
    "user": {
      "login": "matthew-brett",
      "id": 67612,
      "node_id": "MDQ6VXNlcjY3NjEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew-brett",
      "html_url": "https://github.com/matthew-brett",
      "followers_url": "https://api.github.com/users/matthew-brett/followers",
      "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
      "repos_url": "https://api.github.com/users/matthew-brett/repos",
      "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-15T07:22:02Z",
    "updated_at": "2012-08-15T07:37:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some other mis-rendered examples boil down to:\n\n```\n$X_*X_*$\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7776794",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7776794",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7776794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzY3OTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T03:55:00Z",
    "updated_at": "2012-08-16T03:55:00Z",
    "author_association": "MEMBER",
    "body": "Great! (not great that we misrender, but great that at least we're getting\na few test cases to validate this against). Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7910659",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7910659",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7910659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTA2NTk=",
    "user": {
      "login": "antonl",
      "id": 112198,
      "node_id": "MDQ6VXNlcjExMjE5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/112198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonl",
      "html_url": "https://github.com/antonl",
      "followers_url": "https://api.github.com/users/antonl/followers",
      "following_url": "https://api.github.com/users/antonl/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonl/subscriptions",
      "organizations_url": "https://api.github.com/users/antonl/orgs",
      "repos_url": "https://api.github.com/users/antonl/repos",
      "events_url": "https://api.github.com/users/antonl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-21T18:19:24Z",
    "updated_at": "2012-08-21T18:19:24Z",
    "author_association": "NONE",
    "body": "Similarly, this doesn't work right:\n\n``` latex\n$$\\begin{eqnarray} \nx' &=& &x \\sin\\phi &+& z \\cos\\phi \\\\\nz' &=& - &x \\cos\\phi &+& z \\sin\\phi \\\\\n\\end{eqnarray}$$\n```\n\nReplacing the double backslashes with `\\\\\\\\` fixes it.\n\nI think the problem is in `Markdown.Converter.js`. There is a function in there that is supposed to escape markdown magic characters in code blocks (`escapeCharacters` called from `_DoCodeBlocks`) but apparently it isn't working correctly. I don't know regexes and js well enough to fix it though. In python_markdown2 they solved this problem by just removing code blocks from processing entirely, cutting them out and replacing them later after markup was done. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7911780",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7911780",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7911780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTE3ODA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-21T18:50:33Z",
    "updated_at": "2012-08-21T18:50:33Z",
    "author_association": "MEMBER",
    "body": "Yes, I think the problem is mainly that markdown is totally unaware of MathJax (if I remember correctly), which then runs on the HTML markdown generates.  So it's probably not in a code block or anything.  Essentially what we want is for the markdown parser to be aware of the mathjax blocks, and leave them totally untouched, as it should already be doing with `<pre>` tags or similar.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7943608",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-7943608",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 7943608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDM2MDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-22T18:11:29Z",
    "updated_at": "2012-08-22T18:11:29Z",
    "author_association": "MEMBER",
    "body": "Another example reported in #2325 that falls victim to markdown parsing inside mathjax:\n\n``` latex\n$\\mathbf{A}_{i}B_{j}$\n```\n\nThe workaround being to add spaces so it doesn't match the regex:\n\n``` latex\n$\\mathbf{A}_{i}B _{j}$\n```\n\nwhich is still valid, if slightly weird latex.\n\nOr escape underscores:\n\n``` latex\n$\\mathbf{A}\\_{i}B\\_{j}$\n```\n\nwhich will get the right value in MathJax, but cannot be copied/pasted into regular latex without removing the escapes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8321037",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-8321037",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 8321037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjEwMzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-06T03:02:32Z",
    "updated_at": "2012-09-06T03:02:32Z",
    "author_association": "MEMBER",
    "body": "I've just tested #2349, and it's looking great.  I'd make this a candidate for backport to 0.13.1, since it's really annoying to have some latex not work.  @minrk, what do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20739081",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-20739081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 20739081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzM5MDgx",
    "user": {
      "login": "mattions",
      "id": 96245,
      "node_id": "MDQ6VXNlcjk2MjQ1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/96245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattions",
      "html_url": "https://github.com/mattions",
      "followers_url": "https://api.github.com/users/mattions/followers",
      "following_url": "https://api.github.com/users/mattions/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattions/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattions/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattions/subscriptions",
      "organizations_url": "https://api.github.com/users/mattions/orgs",
      "repos_url": "https://api.github.com/users/mattions/repos",
      "events_url": "https://api.github.com/users/mattions/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattions/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-10T12:41:03Z",
    "updated_at": "2013-07-10T12:41:03Z",
    "author_association": "NONE",
    "body": "I'm on the latest Ipython (0.13.2) and I have the same problem as pointed out by antoni https://github.com/ipython/ipython/issues/2289#issuecomment-7910659 few message above.\n\nThe problem is that the two `\\\\` are not interpret by MathJs and everything is rendered as one line. Using four `\\\\\\\\` fix the issue.\n\nCould this be a regression?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20740164",
    "html_url": "https://github.com/ipython/ipython/issues/2289#issuecomment-20740164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2289",
    "id": 20740164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzQwMTY0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-10T13:01:05Z",
    "updated_at": "2013-07-10T13:01:05Z",
    "author_association": "MEMBER",
    "body": "@mattions,  Fix has been merge for 1.0, not in 0.13.2 , there will most probably don't b any 0.13.3 as 1.0 is due soon.\n"
  }
]
