[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107212729",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107212729",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107212729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzIxMjcyOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-31T15:57:06Z",
    "updated_at": "2015-05-31T15:57:06Z",
    "author_association": "MEMBER",
    "body": "This is a know limitation of the system, There is no easy way to know wether or not you want to pass a litera; `$something` or expand. The only way is to try expanding, and if it fails fallback on the literal. If you have many `$vars` we cannot distinguish which one fails, so the all raw string get send  to bash. And as passing `$literal` without expansion is something that people want to do, we cannot error either. And this applies to all magics. \n\nThere is a plan for magic to have opt-in to automatic variable expansion, but you can only guess what people want to do up to a certain point. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107227926",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107227926",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107227926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzIyNzkyNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-31T17:56:36Z",
    "updated_at": "2015-05-31T17:56:36Z",
    "author_association": "MEMBER",
    "body": "I remembered that we silently fell back to passing literal `$foo`, though I'm a little surprised that as soon as one expression fails, we abandon trying to format any of them. I guess it's fairly rare that you'd actually want a mix of literal $foo and expanded Python expressions in one command, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107256097",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107256097",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107256097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzI1NjA5Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-31T23:14:22Z",
    "updated_at": "2015-05-31T23:20:49Z",
    "author_association": "MEMBER",
    "body": "I remember digging through that code for some close but different reason, where it gives some weird but logical behavior in `${something}` vs `{something}`.. anyway. Keep in mind that we actually eval `$...` and if any raises we continue with the raw string. So that things like that are possible:\n\n``` python\nIn [1]: class F:\n   ...:     @property\n   ...:     def bar(self):\n   ...:         return 'yeah'\n   ...:\n\nIn [2]: !echo {F().bar}\nyeah\n```\n\nWe don't dintinguish a NameError from any other excpetions:\n\n``` python\n    def var_expand(self, cmd, depth=0, formatter=DollarFormatter()):\n        \"\"\"Expand python variables in a string.\n\n        The depth argument indicates how many frames above the caller should\n        be walked to look for the local namespace where to expand variables.\n\n        The global namespace for expansion is always the user's interactive\n        namespace.\n        \"\"\"\n        ns = self.user_ns.copy()\n        try:\n            frame = sys._getframe(depth+1)\n        except ValueError:\n            # This is thrown if there aren't that many frames on the stack,\n            # e.g. if a script called run_line_magic() directly.\n            pass\n        else:\n            ns.update(frame.f_locals)\n\n        try:\n            # We have to use .vformat() here, because 'self' is a valid and common\n            # name, and expanding **ns for .format() would make it collide with\n            # the 'self' argument of the method.\n            cmd = formatter.vformat(cmd, args=[], kwargs=ns)\n        except Exception:\n            # if formatter couldn't format, just let it go untransformed\n            pass\n        return cmd\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107284095",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107284095",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107284095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzI4NDA5NQ==",
    "user": {
      "login": "drevicko",
      "id": 1086081,
      "node_id": "MDQ6VXNlcjEwODYwODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1086081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drevicko",
      "html_url": "https://github.com/drevicko",
      "followers_url": "https://api.github.com/users/drevicko/followers",
      "following_url": "https://api.github.com/users/drevicko/following{/other_user}",
      "gists_url": "https://api.github.com/users/drevicko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drevicko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drevicko/subscriptions",
      "organizations_url": "https://api.github.com/users/drevicko/orgs",
      "repos_url": "https://api.github.com/users/drevicko/repos",
      "events_url": "https://api.github.com/users/drevicko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drevicko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-01T02:22:42Z",
    "updated_at": "2015-06-01T02:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm.. Makes sense...\n\nThe current behaviour is certainly strange - something that works can be made to not work by adding a parameter. That strangeness is why I raised this issue: I'd forgotten to define the extra parameter (I'd written the code but forgotten to execute it, a common enough mistake I think). \n\nIt was only through constructing an example for this issue that I realised what was going on.. I think that if the ok variables had passed through, and the undefined one appeared as `$variable_name` it would have been pretty obvious what was happening.\n\nTo do that, I guess a `DollarFormatter` is needed that doesn't raise an exception if it doesn't find a variable, and keeps parsing the remainder. Easy enough to do, but how would that behaviour fit with other uses of `DollarFormatter`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107288007",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107288007",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107288007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzI4ODAwNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-01T02:39:28Z",
    "updated_at": "2015-06-01T02:39:28Z",
    "author_association": "MEMBER",
    "body": "> Easy enough to do\n\n![30](https://cloud.githubusercontent.com/assets/335567/7905369/467a4058-07cc-11e5-8ba0-37ef32948b48.jpg)\n\nI doubt DollarFormatter is used in many places, and we can have another Class we use in this particular place. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107300555",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107300555",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107300555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzMwMDU1NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-01T04:01:35Z",
    "updated_at": "2015-06-01T04:01:35Z",
    "author_association": "MEMBER",
    "body": "I've got a feeling this is the only place DollarFormatter is used. I'd be OK with changing it so a failure to format one parameter doesn't disrupt the others.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107300875",
    "html_url": "https://github.com/ipython/ipython/issues/8492#issuecomment-107300875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8492",
    "id": 107300875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzMwMDg3NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-01T04:06:58Z",
    "updated_at": "2015-06-01T04:06:58Z",
    "author_association": "MEMBER",
    "body": "> I've got a feeling this is the only place DollarFormatter is used\n\nIn IPython, [first result on github search](https://github.com/gems-uff/noworkflow/blob/2bdae510c86c7c58b5f98a0892a17ae876d1f07b/capture/noworkflow/now/ipython/magics/now_prolog.py) is someone else using it in a not-an-ipython-fork project. \n"
  }
]
