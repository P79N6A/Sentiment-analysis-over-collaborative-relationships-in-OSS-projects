[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18104836",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-18104836",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 18104836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA0ODM2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T17:26:12Z",
    "updated_at": "2013-05-18T17:26:12Z",
    "author_association": "MEMBER",
    "body": "Hi, \n\nI personally have never use BPython, so a more precise description of the feature of completion you wish would be helpfull. There is at least [one proposal](https://github.com/ipython/ipython/wiki/IPEP-11:-Tab-Completion-System-Refactor) of tab completion enhancement, any comment on it or idea of things that couldn't be done with it are welcomed.\n\nIt is true that the legacy terminal python shell is a little behing the qtconsole and notebook with regard to tab completion (which filter as ou type and is keyboard navigable), and we hope that the 2 process model terminal can one day replace the old IPython terminal (in term of functionality).\n\nI'm also curious about the docstring feature, I would like a description (or if you could point at the place in the doc that described it).\n\nAs far as I know there are no direct plan in changing things with regard to the plain terminal IPython shell, we are mostly focused on Notebook right now. But anyone which would like to work on any improvement (on the roadmap or not) is welcomed, we can alway guide you through the code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18105076",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-18105076",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 18105076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA1MDc2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T17:41:11Z",
    "updated_at": "2013-05-18T17:41:11Z",
    "author_association": "MEMBER",
    "body": "I'm interested in seeing this type of thing happen. However I think it probably makes the most sense if this happens as a third-party project outside if IPython.  In The long run our own Frontenac will probably be spun off as separate projects.\n\nSent from my iPhone\n\nOn May 18, 2013, at 10:06 AM, Alex Wiltschko notifications@github.com wrote:\n\n> I've seen some buzz awhile back about taking the nice completion and doc-string features of BPython and porting them to IPython. The BPython shell is incredibly nice to work with, and was curious if there's any plans or history behind a port?\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18105304",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-18105304",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 18105304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA1MzA0",
    "user": {
      "login": "alexbw",
      "id": 161935,
      "node_id": "MDQ6VXNlcjE2MTkzNQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/161935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexbw",
      "html_url": "https://github.com/alexbw",
      "followers_url": "https://api.github.com/users/alexbw/followers",
      "following_url": "https://api.github.com/users/alexbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexbw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexbw/subscriptions",
      "organizations_url": "https://api.github.com/users/alexbw/orgs",
      "repos_url": "https://api.github.com/users/alexbw/repos",
      "events_url": "https://api.github.com/users/alexbw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexbw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T17:57:14Z",
    "updated_at": "2013-05-18T17:57:14Z",
    "author_association": "NONE",
    "body": "Good to know. Any tips on how and where to start? If the front-end isn't\ncurrently modular, is this a project that should wait until the frontend is\npluggable?\n\nOn Sat, May 18, 2013 at 1:41 PM, Brian E. Granger\nnotifications@github.comwrote:\n\n> I'm interested in seeing this type of thing happen. However I think it\n> probably makes the most sense if this happens as a third-party project\n> outside if IPython. In The long run our own Frontenac will probably be spun\n> off as separate projects.\n> \n> Sent from my iPhone\n> \n> On May 18, 2013, at 10:06 AM, Alex Wiltschko notifications@github.com\n> wrote:\n> \n> > I've seen some buzz awhile back about taking the nice completion and\n> > doc-string features of BPython and porting them to IPython. The BPython\n> > shell is incredibly nice to work with, and was curious if there's any plans\n> > or history behind a port?\n> > \n> > —\n> > Reply to this email directly or view it on GitHub.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3339#issuecomment-18105076\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18114221",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-18114221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 18114221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE0MjIx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-19T08:28:32Z",
    "updated_at": "2013-05-19T08:35:55Z",
    "author_association": "MEMBER",
    "body": "On 18 May 2013 18:57, Alex Wiltschko notifications@github.com wrote:\n\n> Good to know. Any tips on how and where to start? If the front-end isn't\n> currently modular, is this a project that should wait until the frontend\n> is\n> pluggable?\n\nThe architecture is already modular - although we keep our own 3½ frontends\n(terminal, zmq-console, Qt console, notebook) within one project, there are\nother projects that talk to an IPython kernel, like vim-ipython, Emacs\nIPython Notebook and IdleX. You can have a look at the messaging scheme\nhere:\nhttp://ipython.org/ipython-doc/dev/development/messaging.html\n\nI haven't looked into BPython's architecture, but it might be possible to\nreuse a lot of the code from there, so that you essentially have a BPython\nfrontend.\n\nThis is also on our potential projects page on the wiki (as Curses/Urwid\nfrontend): https://github.com/ipython/ipython/wiki/Trash:-Potential-projects(Brian,\nwhy is this page marked as trash? It might not be seeing many\nupdates, but I think it's still valid and useful.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18114411",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-18114411",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 18114411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE0NDEx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-19T08:45:24Z",
    "updated_at": "2013-05-19T08:45:24Z",
    "author_association": "MEMBER",
    "body": "Github layout of mail response seem to be broken, I'll repost below for readability :\n\n---\n\n> Good to know. Any tips on how and where to start? If the front-end isn't \n> currently modular, is this a project that should wait until the frontend \n> is \n> pluggable? \n\nThe architecture is already modular - although we keep our own 3½ frontends \n(terminal, zmq-console, Qt console, notebook) within one project, there are \nother projects that talk to an IPython kernel, like vim-ipython, Emacs \nIPython Notebook and IdleX. You can have a look at the messaging scheme \nhere: \nhttp://ipython.org/ipython-doc/dev/development/messaging.html \n\nI haven't looked into BPython's architecture, but it might be possible to \nreuse a lot of the code from there, so that you essentially have a BPython \nfrontend. \n\nThis is also on our potential projects page on the wiki (as Curses/Urwid \nfrontend): https://github.com/ipython/ipython/wiki/Trash:-Potential-projects(Brian, \nwhy is this page marked as trash? It might not be seeing many \nupdates, but I think it's still valid and useful.)\n\n---\n\nAlso just to precise, I think @alexbw was not referring to a BPython frontend, but a port of the feature of the completer. So the definition of pluggable difere depending on who use it.\n\nIIUC @alexbw was using pluggable in the sens of a pluggin (which extend functionality), wherease @takluyver use it in the sens that you can actually plug different frontend to an IPython kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31475334",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-31475334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 31475334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDc1MzM0",
    "user": {
      "login": "certik",
      "id": 20568,
      "node_id": "MDQ6VXNlcjIwNTY4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/certik",
      "html_url": "https://github.com/certik",
      "followers_url": "https://api.github.com/users/certik/followers",
      "following_url": "https://api.github.com/users/certik/following{/other_user}",
      "gists_url": "https://api.github.com/users/certik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/certik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/certik/subscriptions",
      "organizations_url": "https://api.github.com/users/certik/orgs",
      "repos_url": "https://api.github.com/users/certik/repos",
      "events_url": "https://api.github.com/users/certik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/certik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-02T19:01:12Z",
    "updated_at": "2014-01-02T19:01:12Z",
    "author_association": "NONE",
    "body": "[BPython](http://bpython-interpreter.org/about/) indeed looks very nice. Here are some [screenshots](http://bpython-interpreter.org/screenshots/). It'd be nice to create a frontend like that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/255467739",
    "html_url": "https://github.com/ipython/ipython/issues/3339#issuecomment-255467739",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3339",
    "id": 255467739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTQ2NzczOQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T21:18:35Z",
    "updated_at": "2016-10-21T21:18:35Z",
    "author_association": "MEMBER",
    "body": "For what its worth, this is what [bipython](https://github.com/ivanov/bipython) did, while it was working, so if anyone wants to roll up their sleeves, that could be a useful starting point. \n\nBetween bipython and the [python prompt toolkit](https://python-prompt-toolkit.readthedocs.io/en/latest/) now being using in IPython, I think we can close this issue.\n"
  }
]
