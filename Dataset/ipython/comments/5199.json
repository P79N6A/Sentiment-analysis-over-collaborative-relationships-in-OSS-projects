[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35807792",
    "html_url": "https://github.com/ipython/ipython/issues/5199#issuecomment-35807792",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5199",
    "id": 35807792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA3Nzky",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-22T17:04:56Z",
    "updated_at": "2014-02-22T17:04:56Z",
    "author_association": "MEMBER",
    "body": "On 2/22/14 10:51 AM, Zaharid wrote:\n\n> Traits doc states:\n> \n> ```\n> We don't support:\n> ...\n> \n>   * Delegation\n>   * Automatic GUI generation\n>   * A full set of trait types. Most importantly, we don't provide\n>     container traits (list, dict, tuple)*\n> ```\n> \n> And this makes it a pain to work with such types. For example, the\n> trivial attempts to add a child to a widget container will fail to\n> trigger the relevant event:\n> \n> |container.children += [child] #Fail\n> container.children.append(child) #Fail\n> ###\n> container.children = container.children + [child] #OK but...\n> |\n> \n> What are the reasons not to implement custom list dict types that know\n> how to update themselves?\n\nIIRC, it was a question of time.  I don't think there is any objection \nto having a good implementation.\n\n> If that's not an option, at least the List type should be removed and\n> replaced by the Tuple one (as everything you can do with the list\n> renders your trait inconsistent), and then provide convenience methods\n> such as container.addChild and so on.\n\nThat's a good point.  Did you see that there is a Tuple trait? \nhttps://github.com/ipython/ipython/blob/master/IPython/utils/traitlets.py#L1356. \n  Is there anything preventing you from just using the Tuple trait?\n\nI would also love to have a CList or CTuple trait, that would cast \nthings to lists or tuples.\n\nJason\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35822384",
    "html_url": "https://github.com/ipython/ipython/issues/5199#issuecomment-35822384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5199",
    "id": 35822384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODIyMzg0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-23T03:00:05Z",
    "updated_at": "2014-02-23T03:00:05Z",
    "author_association": "MEMBER",
    "body": "Yes, it was just a time issue. I agree with @jason that in the existing\ncases where we use List in the widgets, we should use a CTuple object.\nJason, can you open an issue for this and assign it to @jdfreder?\n\nOn Sat, Feb 22, 2014 at 9:04 AM, Jason Grout notifications@github.comwrote:\n\n> On 2/22/14 10:51 AM, Zaharid wrote:\n> \n> > Traits doc states:\n> > \n> > We don't support:\n> > ...\n> > - Delegation\n> > - Automatic GUI generation\n> > - A full set of trait types. Most importantly, we don't provide\n> > \n> > container traits (list, dict, tuple)*\n> > \n> > And this makes it a pain to work with such types. For example, the\n> > trivial attempts to add a child to a widget container will fail to\n> > trigger the relevant event:\n> > \n> > |container.children += [child] #Fail\n> > container.children.append(child) #Fail\n> > ###\n> > container.children = container.children + [child] #OK but...\n> > |\n> > \n> > What are the reasons not to implement custom list dict types that know\n> > how to update themselves?\n> \n> IIRC, it was a question of time. I don't think there is any objection\n> to having a good implementation.\n> \n> > If that's not an option, at least the List type should be removed and\n> > replaced by the Tuple one (as everything you can do with the list\n> > renders your trait inconsistent), and then provide convenience methods\n> > such as container.addChild and so on.\n> \n> That's a good point. Did you see that there is a Tuple trait?\n> \n> https://github.com/ipython/ipython/blob/master/IPython/utils/traitlets.py#L1356.\n> \n> Is there anything preventing you from just using the Tuple trait?\n> \n> I would also love to have a CList or CTuple trait, that would cast\n> things to lists or tuples.\n> \n> Jason\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5199#issuecomment-35807792\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35822683",
    "html_url": "https://github.com/ipython/ipython/issues/5199#issuecomment-35822683",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5199",
    "id": 35822683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODIyNjgz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-23T03:20:30Z",
    "updated_at": "2014-02-23T03:20:30Z",
    "author_association": "MEMBER",
    "body": "Since @jdfreder is CCd on this message too, I'll let him go ahead and open that issue :).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57729891",
    "html_url": "https://github.com/ipython/ipython/issues/5199#issuecomment-57729891",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5199",
    "id": 57729891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzI5ODkx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T23:56:23Z",
    "updated_at": "2014-10-02T23:56:23Z",
    "author_association": "MEMBER",
    "body": "Fixed by #5221\n"
  }
]
