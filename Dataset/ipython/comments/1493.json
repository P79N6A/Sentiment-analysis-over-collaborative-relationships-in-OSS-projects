[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4523455",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-4523455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 4523455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM0NTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-15T16:37:35Z",
    "updated_at": "2012-03-15T16:37:35Z",
    "author_association": "MEMBER",
    "body": "I looked a bit more at Selenium and I am not sure it is going to be the best way of testing our stuff.  Honestly, I think it would be a much better match to be able to write tests in Javascript/jquery.  We should look into such alternatives before merging this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4523959",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-4523959",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 4523959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM5NTk=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-15T17:00:01Z",
    "updated_at": "2012-03-15T17:00:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Testing the javascript itself is easy--but making the browser click on buttons etc. is harder.  If you can suggest a library that will allow us to do that, I'd gladly investigate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4524355",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-4524355",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 4524355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQzNTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-15T17:19:11Z",
    "updated_at": "2012-03-15T17:19:11Z",
    "author_association": "MEMBER",
    "body": "On Thu, Mar 15, 2012 at 10:00 AM, Stefan van der Walt\nreply@reply.github.com\nwrote:\n\n> Testing the javascript itself is easy--but making the browser click on buttons etc. is harder. Â If you can suggest a library that will allow us to do that, I'd gladly investigate.\n\nThe best one that I have seen is qunit:\n\nhttp://docs.jquery.com/QUnit\n\nIn terms of making the browser click on buttons, you can simulate all\nof that using jquery event triggering:\n\n$('#foo').trigger('click')\n\nThe big question is this: can we bring up the notebook page and run a\nqunit test suite on that live page.  That is the part that I think is\nworth investigating.  If we can do that, then I think that we could\nstart writing tests fairly easily.\n\nCheers,\n\nBrian\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1493#issuecomment-4523959\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4550797",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-4550797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 4550797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTA3OTc=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-17T00:30:15Z",
    "updated_at": "2012-03-17T00:30:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think one can construct even the simple test case I have here in QUnit:\n- Load the dashboard\n- Create a new notebook\n- Rename the notebook\n\nJUnit is fine for testing the javascript library part of things, but  for the rest you'll probably need something like\n\nhttp://www.testjquery.com/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4551013",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-4551013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 4551013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTEwMTM=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-17T01:09:38Z",
    "updated_at": "2012-03-17T01:09:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another free alternative is http://www.getwindmill.com/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5137604",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5137604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5137604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzc2MDQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T07:52:41Z",
    "updated_at": "2012-04-15T07:52:41Z",
    "author_association": "MEMBER",
    "body": "I'm all for writing as many tests as we can cleanly at the unit level in JS, but it seems to me that having some of these integration tests from the browser side would also be immensely valuable.  \n\nBasically with the notebook we're in a very similar position now to where we were a few years ago in the terminal IPython, when we started adding tests to the main code for the first time.  At the beginning we just added a few high-level tests that simulated interactive usage, and while a but coarse and crude, they were already very useful in 'anchoring' our stuff somewhere.  Over time we've become much, much better at increasing our test coverage at a very fine level, and now I actually feel reasonably OK with our overall test suite (I know it's not perfect, but it's far from being bad).\n\nSo I see this in a similar light: it provides a few big tests of the main user-facing experience, that at the very least will help us not break things in gross, catastrophic ways due to some small omission.  I remember with fright how early on, the only way for me to know something hadn't broken in IPython was to try a bunch of things interactively and hope I was exercising it enough.  That's basically where we are with the notebook right now, and I'm again quite afraid.\n\nI think some of these coarse tests will be _super useful_ with the upcoming planned JS refactorings: they will serve as a safety net for the main stuff, and can help us in making the refactoring cleaner.  \n\nObviously they don't preclude that we start writing proper, fine-grained tests in pure JS, and I'm all for that.  But I think the two kinds of testing are complementary, and that we really should consider this, or something like this, very seriously.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143057",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5143057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5143057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMwNTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:10:32Z",
    "updated_at": "2012-04-15T22:10:32Z",
    "author_association": "MEMBER",
    "body": "I don't disagree one bit that we need tests.  I am just not at all sold on Selenium.  The idea of writing browser focused tests in Python just doesn't make sense to me.  When you look at the Selenium tests, it is clear that they have basically rewritten jQuerry in Python for talking to web browsers.  We have to learn yet another DOM API and you can see from the tests that there is a lot of impedance mismatching that you have to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143158",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5143158",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5143158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMxNTg=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:24:46Z",
    "updated_at": "2012-04-15T22:24:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "We may need both for complete coverage: Selenium-style tests for checking integration, and Javascript tests for exercising a single test notebook.  Whenever you leave a page, Javascript testing becomes a pain (you have to let the browser know somehow that it has to execute code on the newly loaded page), but there's still a lot that can be done without it.  I'll have a look at integrating QUnit when I'm back on Wednesday.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143191",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5143191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5143191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMxOTE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:30:53Z",
    "updated_at": "2012-04-15T22:30:53Z",
    "author_association": "MEMBER",
    "body": "What about creating an optional test page for the notebook that loads\nthe main notebook in an iframe.  It looks like as long as the iframe\ncomes from the same domain you can use jquery to manipulate the\niframe.\n\nhttp://stackoverflow.com/questions/364952/jquery-javascript-accessing-contents-of-an-iframe\n\nThat would let us write selenium style tests in jquery that we can run\nin the browser.  It is also possible that we could use qunit to manage\nthose tests.  I agree that handling multiple page testing is a\nchallenge.\n\nOn Sun, Apr 15, 2012 at 3:24 PM, Stefan van der Walt\nreply@reply.github.com\nwrote:\n\n> We may need both for complete coverage: Selenium-style tests for checking integration, and Javascript tests for exercising a single test notebook. Â Whenever you leave a page, Javascript testing becomes a pain (you have to let the browser know somehow that it has to execute code on the newly loaded page), but there's still a lot that can be done without it. Â I'll have a look at integrating QUnit when I'm back on Wednesday.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1493#issuecomment-5143158\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143277",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5143277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5143277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDMyNzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:42:15Z",
    "updated_at": "2012-04-15T22:42:15Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 15, 2012 at 3:10 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> I don't disagree one bit that we need tests. Â I am just not at all sold on Selenium. Â The idea of writing browser focused tests in Python just doesn't make sense to me.\n\nBut there's one little detail you're missing: humans interact with the\nbrowser.  And as best I can see, there are kinds of testing that are\nhard/impossible to do purely as unit tests in JS, but which Selenium\ncan cover.  It doesn't _replace_ fine-grained JS unit tests, it\n_complements_ them.\n\nJust like in IPython we have tests that are meant to feed the actual\nrunning ipyhton code as if it had been typed by the user: those are\n_not_ low-level API tests, yet they are extremely useful because they\nmore or less mimic exactly user interaction.\n\nThat's the point here: IPython is not a JS library, it's an app meant\nto be used by humans in a browser.  So we must test that aspect of it\nas well (not exclusively of course).\n\nNow, if there's a better integration testing tool than selenium, by\nall means let's go for that.  But claiming that pure api-side JS tests\nare sufficient for a user-facing app doesn't seem sensible to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5143419",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5143419",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5143419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDM0MTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T22:58:49Z",
    "updated_at": "2012-04-15T22:58:49Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 15, 2012 at 3:42 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> On Sun, Apr 15, 2012 at 3:10 PM, Brian E. Granger\n> reply@reply.github.com\n> wrote:\n> \n> > I don't disagree one bit that we need tests. Â I am just not at all sold on Selenium. Â The idea of writing browser focused tests in Python just doesn't make sense to me.\n> \n> But there's one little detail you're missing: humans interact with the\n> browser. Â And as best I can see, there are kinds of testing that are\n> hard/impossible to do purely as unit tests in JS, but which Selenium\n> can cover. Â It doesn't _replace_ fine-grained JS unit tests, it\n> _complements_ them.\n\nI would bet money that underneath the hood, selenium is using the same\nbrowser APIs that Javascript/jQuery is using to trigger events,\nmanipulate the DOM, etc.  IOW, telling selenium to click on a\nparticular button is exactly the same as doing that using jQuery.\n\n> Just like in IPython we have tests that are meant to feed the actual\n> running ipyhton code as if it had been typed by the user: those are\n> _not_ low-level API tests, yet they are extremely useful because they\n> more or less mimic exactly user interaction.\n> \n> That's the point here: IPython is not a JS library, it's an app meant\n> to be used by humans in a browser. Â So we must test that aspect of it\n> as well (not exclusively of course).\n> \n> Now, if there's a better integration testing tool than selenium, by\n> all means let's go for that. Â But claiming that pure api-side JS tests\n> are sufficient for a user-facing app doesn't seem sensible to me.\n\nI am not thinking of only doing API side javscript tests.   As far as\nI know, you can trigger any browser event from javascript.  Thus, you\ncan tell Javascript to \"click\" on a button just like a user would.\nThis would allow us to accurately simular user interactions.  Here is\nthe jQuery docs on the Event object that manages this stuff:\n\nhttp://api.jquery.com/category/events/event-object/\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1493#issuecomment-5143277\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5144160",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5144160",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5144160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQxNjA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T00:54:28Z",
    "updated_at": "2012-04-16T00:54:28Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 15, 2012 at 3:58 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> I am not thinking of only doing API side javscript tests. Â  As far as\n> I know, you can trigger any browser event from javascript. Â Thus, you\n> can tell Javascript to \"click\" on a button just like a user would.\n> This would allow us to accurately simular user interactions. Â Here is\n> the jQuery docs on the Event object that manages this stuff:\n> \n> http://api.jquery.com/category/events/event-object/\n\nAh, if we can get a similar kind of top-level testing without adding\nanother dependency, that would be great.  It basically comes down to a\ncost/benefit analysis: given that we do want such tests, is the cost\nof the Selenium dependency worth it over the alternative of writing\nthose tests manually via jquery?  Not having tried to implement\neither, I can't really say at this point...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5392306",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5392306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5392306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTIzMDY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-27T23:10:09Z",
    "updated_at": "2012-04-27T23:10:09Z",
    "author_association": "MEMBER",
    "body": "Just as an FYI, I just saw this which might be worth taking a look at: http://jeanphix.me/Ghost.py.  It's Qt based, but it lets you programatically control a webkit instance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5544310",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5544310",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5544310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDQzMTA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T05:52:26Z",
    "updated_at": "2012-05-07T05:52:26Z",
    "author_association": "MEMBER",
    "body": "I talked with @ctb a fair bit about this question; Titus literally [wrote the book](http://my.safaribooksonline.com/book/software-engineering-and-development/software-testing/9780596527808) on the matter, so I'm inclined to give his advice some serious consideration. He also pointed out that if we go with selenium, we can use [Sauce Labs](http://saucelabs.com) for CI for the web tests, including multiple browser support.\n\n@ellisonbg, could you try to clarify precisely what problems you foresee with using Selenium?  Perhaps @ctb can help us out given his experience, and we can make a decision.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5550400",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5550400",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5550400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA0MDA=",
    "user": {
      "login": "ctb",
      "id": 51016,
      "node_id": "MDQ6VXNlcjUxMDE2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/51016?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctb",
      "html_url": "https://github.com/ctb",
      "followers_url": "https://api.github.com/users/ctb/followers",
      "following_url": "https://api.github.com/users/ctb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctb/subscriptions",
      "organizations_url": "https://api.github.com/users/ctb/orgs",
      "repos_url": "https://api.github.com/users/ctb/repos",
      "events_url": "https://api.github.com/users/ctb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T13:51:56Z",
    "updated_at": "2012-05-07T13:51:56Z",
    "author_association": "NONE",
    "body": "On Sun, May 06, 2012 at 10:52:27PM -0700, Fernando Perez wrote:\n\n> I talked with @ctb a fair bit about this question; Titus literally [wrote the book](http://my.safaribooksonline.com/book/software-engineering-and-development/software-testing/9780596527808) on the matter, so I'm inclined to give his advice some serious consideration. He also pointed out that if we go with selenium, we can use [Sauce Labs](http://saucelabs.com) for CI for the web tests, including multiple browser support.\n> \n> @ellisonbg, could you try to clarify precisely what problems you foresee with using Selenium?  Perhaps @ctb can help us out given his experience, and we can make a decision.\n\nThat book is old and out of date but I do retain an interest in the area!\nSelenium 2 seems to be widely supported among modern browsers (Firefox\nand Chrome esp.) and Sauce Labs looks like a really good tool to help\nrun the tests across multiple browsers etc.\n\n## --titus\n\nC. Titus Brown, ctb@msu.edu\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5554740",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5554740",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5554740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQ3NDA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T16:55:51Z",
    "updated_at": "2012-05-07T16:55:51Z",
    "author_association": "MEMBER",
    "body": "Imagine if I told you that there was this _fantastic_ new testing framework for Python.  Imagine that this new library allows you to write tests for your Python code using Ruby by calling into the Python/C API and translating Python/Ruby objects back and forth.  You would call me _crazy_.  You would never think of writing tests for Python code in any language but Python!  Even if this was the only way to test Python code, you wouldn't use it because it would be too complex.\n\nThis is the problem I see with Selenium.  JavaScript is the native scripting language for browsers and it is also the language that our application is written in.  We should be writing tests in JavaScript.\n\nThe only feature that Selenium provides that single page JavaScript doesn't is the ability to have tests that span multiple pages.  But I still think we can get around that using an iframe as I described above.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5554870",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5554870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5554870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQ4NzA=",
    "user": {
      "login": "ctb",
      "id": 51016,
      "node_id": "MDQ6VXNlcjUxMDE2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/51016?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctb",
      "html_url": "https://github.com/ctb",
      "followers_url": "https://api.github.com/users/ctb/followers",
      "following_url": "https://api.github.com/users/ctb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctb/subscriptions",
      "organizations_url": "https://api.github.com/users/ctb/orgs",
      "repos_url": "https://api.github.com/users/ctb/repos",
      "events_url": "https://api.github.com/users/ctb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T17:01:12Z",
    "updated_at": "2012-05-07T17:01:12Z",
    "author_association": "NONE",
    "body": "On Mon, May 07, 2012 at 09:55:51AM -0700, Brian E. Granger wrote:\n\n> Imagine if I told you that there was this _fantastic_ new testing framework for Python.  Imagine that this new library allows you to write tests for your Python code using Ruby by calling into the Python/C API and translating Python/Ruby objects back and forth.  You would call me _crazy_.  You would never think of writing tests for Python code in any language but Python!  Even if this was the only way to test Python code, you wouldn't use it because it would be too complex.\n> \n> This is the problem I see with Selenium.  JavaScript is the native scripting language for browsers and it is also the language that our application is written in.  We should be writing tests in JavaScript.\n> \n> The only feature that Selenium provides that single page JavaScript doesn't is the ability to have tests that span multiple pages.  But I still think we can get around that using an iframe as I described above.\n\nYes, Fernando related the concern to me.  I don't see anything wrong with\nhaving JavaScript tests!  Selenium and SauceLabs can let you drive those\nJS tests in an automated fashion across multiple browsers, which seems like\na good idea; SauceLabs will give you videos and screenshots, too.\n\nFor more complex orchestration between Python/IPython and the notebook,\nhaving a single process unit test coordinating the server and the browser\nseems invaluable to me.  (There's a reason why Selenium emerged, and that's a\nlarge part of it.)  With pure JavaScript, you would have to expose a lot of\ntesting-related machinery on the server side.\n\nI also think the Firefox Selenium IDE is a good way to get some basic tests\nup quickly and easily.\n\ncheers,\n\n## --titus\n\nC. Titus Brown, ctb@msu.edu\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5556655",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5556655",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5556655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTY2NTU=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T18:15:16Z",
    "updated_at": "2012-05-07T18:15:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Selenium Javascript API: http://code.google.com/p/selenium/wiki/WebDriverJs\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5557089",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5557089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5557089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTcwODk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T18:30:58Z",
    "updated_at": "2012-05-07T18:30:58Z",
    "author_association": "MEMBER",
    "body": "There's one obvious upside to writing at least some tests in Python:\nwe know our contributors are all at home writing Python code.\nJavascript isn't a massive obstacle, but the easier it is to\ncontribute, the better.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5557369",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5557369",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5557369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTczNjk=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-07T18:42:12Z",
    "updated_at": "2012-05-07T18:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess the concern is that the Python expressions for locating and exercising DOM objects may be clunky.  As far as webdriver goes, however, they are very similar.  Compare the WebDriverJS link above to the examples here:\n\nhttp://seleniumhq.org/docs/03_webdriver.html\n\nThe Javascript route comes at some cost: no nose integration, and no automated server launch--neither that big a deal?\n\nI agree that testing of Javascript classes and methods should be done in Javascript itself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5566543",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5566543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5566543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjY1NDM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T03:18:34Z",
    "updated_at": "2012-05-08T03:18:34Z",
    "author_association": "MEMBER",
    "body": "On Mon, May 7, 2012 at 10:01 AM, C. Titus Brown\nreply@reply.github.com\nwrote:\n\n> On Mon, May 07, 2012 at 09:55:51AM -0700, Brian E. Granger wrote:\n> \n> > Imagine if I told you that there was this _fantastic_ new testing framework for Python. Â Imagine that this new library allows you to write tests for your Python code using Ruby by calling into the Python/C API and translating Python/Ruby objects back and forth. Â You would call me _crazy_. Â You would never think of writing tests for Python code in any language but Python! Â Even if this was the only way to test Python code, you wouldn't use it because it would be too complex.\n> > \n> > This is the problem I see with Selenium. Â JavaScript is the native scripting language for browsers and it is also the language that our application is written in. Â We should be writing tests in JavaScript.\n> > \n> > The only feature that Selenium provides that single page JavaScript doesn't is the ability to have tests that span multiple pages. Â But I still think we can get around that using an iframe as I described above.\n> \n> Yes, Fernando related the concern to me. Â I don't see anything wrong with\n> having JavaScript tests! Â Selenium and SauceLabs can let you drive those\n> JS tests in an automated fashion across multiple browsers, which seems like\n> a good idea; SauceLabs will give you videos and screenshots, too.\n\nThis might be an interesting combo then.  The only example of Selenium\nI have seen was where the actual test details of walking the DOM and\ntriggering events was written in Python+Selenium.  If we can just have\nSelenium drive regular JS+jQuery tests, that might be nice.\n\n> For more complex orchestration between Python/IPython and the notebook,\n> having a single process unit test coordinating the server and the browser\n> seems invaluable to me. Â (There's a reason why Selenium emerged, and that's a\n> large part of it.) Â With pure JavaScript, you would have to expose a lot of\n> testing-related machinery on the server side.\n\nI think we could get away with a pretty minimal server side footprint,\nbut there would definitely be some of it.\n\n> I also think the Firefox Selenium IDE is a good way to get some basic tests\n> up quickly and easily.\n\nI looked at it and it seems very insufficient to drive a complex web\napp like the notebook.\n\n> cheers,\n> \n> ## --titus\n> \n> C. Titus Brown, ctb@msu.edu\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1493#issuecomment-5554870\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5566585",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5566585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5566585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjY1ODU=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T03:22:30Z",
    "updated_at": "2012-05-08T03:22:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Mon, May 7, 2012 at 8:18 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> > I also think the Firefox Selenium IDE is a good way to get some basic tests\n> > up quickly and easily.\n> \n> I looked at it and it seems very insufficient to drive a complex web\n> app like the notebook.\n\nCould you explain why?  This PR shows that it is pretty trivial to do\na fairly involved task such as creating a new notebook and changing\nits title.  I'm not sure how one would do that from pure JS?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5566590",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5566590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5566590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjY1OTA=",
    "user": {
      "login": "ctb",
      "id": 51016,
      "node_id": "MDQ6VXNlcjUxMDE2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/51016?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctb",
      "html_url": "https://github.com/ctb",
      "followers_url": "https://api.github.com/users/ctb/followers",
      "following_url": "https://api.github.com/users/ctb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctb/subscriptions",
      "organizations_url": "https://api.github.com/users/ctb/orgs",
      "repos_url": "https://api.github.com/users/ctb/repos",
      "events_url": "https://api.github.com/users/ctb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T03:22:45Z",
    "updated_at": "2012-05-08T03:22:45Z",
    "author_association": "NONE",
    "body": "> > I also think the Firefox Selenium IDE is a good way to get some basic tests\n> > up quickly and easily.\n> \n> I looked at it and it seems very insufficient to drive a complex web\n> app like the notebook.\n\nYou're clearly a much harder worker than me.  I would start my testing routine\nin this case by using the IDE to record a bunch of simple cell-level actions\nwith a few content assertions -- basically a smoke test.  Then I would use\nthat to set up the test infrastructure and make sure that I could run the\nsmoke test via Selenium, in SauceLabs, etc.  Then I'd worry about more\ndetailed testing.\n\nI like my instant gratification :)\n\n--titus\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5567114",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5567114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5567114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjcxMTQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T04:15:58Z",
    "updated_at": "2012-05-08T04:15:58Z",
    "author_association": "MEMBER",
    "body": "On Mon, May 7, 2012 at 11:42 AM, Stefan van der Walt\nreply@reply.github.com\nwrote:\n\n> I guess the concern is that the Python expressions for locating and exercising DOM objects may be clunky. Â As far as webdriver goes, however, they are very similar. Â Compare the WebDriverJS link above to the examples here:\n> \n> http://seleniumhq.org/docs/03_webdriver.html\n> \n> The Javascript route comes at some cost: no nose integration, and no automated server launch--neither that big a deal?\n\nI am not worried about nose integration or automated server launch.  I\nam worried about 1 thing and 1 thing only - how easy is it to write\ntests right after I finish implementing a feature in HTML+JS.  If it\nis difficult then we won't write tests no matter how easy they are to\n_run_.\n\n> I agree that testing of Javascript classes and methods should be done in Javascript itself.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1493#issuecomment-5557369\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5567150",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5567150",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5567150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjcxNTA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T04:19:09Z",
    "updated_at": "2012-05-08T04:19:09Z",
    "author_association": "MEMBER",
    "body": "On Mon, May 7, 2012 at 8:22 PM, C. Titus Brown\nreply@reply.github.com\nwrote:\n\n> > > I also think the Firefox Selenium IDE is a good way to get some basic tests\n> > > up quickly and easily.\n> > \n> > I looked at it and it seems very insufficient to drive a complex web\n> > app like the notebook.\n> \n> You're clearly a much harder worker than me. Â I would start my testing routine\n> in this case by using the IDE to record a bunch of simple cell-level actions\n> with a few content assertions -- basically a smoke test. Â Then I would use\n> that to set up the test infrastructure and make sure that I could run the\n> smoke test via Selenium, in SauceLabs, etc. Â Then I'd worry about more\n> detailed testing.\n\nNo I definitely didn't work hard at trying Selenium IDE.  But I did\nload a notebook page and start recording.  But, it wasn't able to\nrecord any of the more dynamic actions on the page.  It was almost\nlike it could only follow static html elements.  I couldn't even get\nit to record the creation of a cell, typing \"a=10\" and running the\ncell.  I would love to be shown that I was doing something wrong\nbecause a simple \"create a test by recording actions\" approach would\nbe very desirable.\n\n> I like my instant gratification :)\n\nMe too :)\n\n> --titus\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1493#issuecomment-5566590\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5588775",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-5588775",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 5588775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODg3NzU=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T22:53:18Z",
    "updated_at": "2012-05-08T22:53:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it's fairly easy writing those tests, provided that all the elements on the page have appropriate IDs assigned (that's the main workaround I had to do to find certain buttons, etc.).  They look very similar in Javascript and Python, so not sure the choice of language makes much of a difference.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7487082",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-7487082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 7487082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODcwODI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-03T16:05:49Z",
    "updated_at": "2012-08-03T16:05:49Z",
    "author_association": "MEMBER",
    "body": "http://phantomjs.org/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7672981",
    "html_url": "https://github.com/ipython/ipython/pull/1493#issuecomment-7672981",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1493",
    "id": 7672981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzI5ODE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T05:28:59Z",
    "updated_at": "2012-08-12T05:28:59Z",
    "author_association": "MEMBER",
    "body": "There is a broader discussion about the testing of the notebook that needs to happen independent of this PR.  I have opened an issue to track that discussion (#2292) and am going to close this PR for now.  This PR _may_ end up being part of the solution, but we are not yet to the point of making that decision.\n"
  }
]
