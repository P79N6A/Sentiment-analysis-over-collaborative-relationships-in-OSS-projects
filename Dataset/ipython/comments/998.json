[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2727516",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2727516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2727516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc1MTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T07:51:24Z",
    "updated_at": "2011-11-14T07:51:24Z",
    "author_association": "MEMBER",
    "body": "I also made a small change, allowing IPython to start without requiring that $HOME is actually writable, because we _almost_ never write anything there.  Note that we already handle the actually important case of the _ipython_ dir being writable, falling back on a temp dir if not.\n\nIf HOME does not exist, the only two references to HOME that I found (`%cd` with no args, and `%logstart global`) will raise proper, informative 'no such file' errors, but IPython is fully functional otherwise, so it seemed silly to have a fatal error on something that isn't actually a requirement for reasonably well behaved IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2727600",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2727600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2727600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc2MDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T08:07:01Z",
    "updated_at": "2011-11-14T08:07:01Z",
    "author_association": "MEMBER",
    "body": "pinging @ellisonbg as the individual with the most experience on the one system that will be adversely affected by this change: Windows-based clusters.  Do you still have a test system, where we can check what needs to be done when HOMESHARE is not the default choice?  Is it difficult to set HOME or IPYTHON_DIR for jobs?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2803289",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2803289",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2803289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDMyODk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-20T10:28:09Z",
    "updated_at": "2011-11-20T10:28:09Z",
    "author_association": "MEMBER",
    "body": "I definitely like the simplification this gives, though I'm a little skittish at jettisoning logic that might actually protect a valid corner case perhaps not covered by `expanduser('~')`.  What do you think of #154, for example?\n\nI'd also like to hear @ellisonbg's opinion: after all the pain of getting all that working on the winhpc server he went through, the last thing we want is to break that!\n\nSo let's be cautious with this one, but if indeed we can remove those hacks for such a vastly simpler replacement, I'd be delighted!  My only other feedback is a tiny fix on a user-facing message.\n\nFinally, this should also (once we settle the policy decision) have a paragraph in the docs explaining how to configure things (and remove any possibly outdated info that could refer to the old logic).\n\nBut thanks for the big cleanup, I hope we can indeed merge the whole thing!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2821745",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2821745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2821745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjE3NDU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-21T21:49:08Z",
    "updated_at": "2011-11-21T21:49:08Z",
    "author_association": "MEMBER",
    "body": "On Sun, Nov 20, 2011 at 2:28 AM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> I definitely like the simplification this gives, though I'm a little skittish at jettisoning logic that might actually protect a valid corner case perhaps not covered by `expanduser('~')`.  What do you think of #154, for example?\n\nI definitely don't trust expanduser to get all of the corner cases\ncorrect unless we can verify that it handles everything that our\ncurrent code does.\n\n> I'd also like to hear @ellisonbg's opinion: after all the pain of getting all that working on the winhpc server he went through, the last thing we want is to break that!\n\nYes, getting the user's home directory right was a major pain and a\ncritical part of the winhpc server support.  Whatever happens, we\ncan't loose support for any of the cases our code handles on Windows.\nIIRC, the difficult part was handling network mounted user home\ndirectories.  In that case, the usual logic didn't work.\n\nI understand it would be nice to simplify our code, but before we do\nthat, let's figure out exactly what expanduser does.\n\n> So let's be cautious with this one, but if indeed we can remove those hacks for such a vastly simpler replacement, I'd be delighted!  My only other feedback is a tiny fix on a user-facing message.\n> \n> Finally, this should also (once we settle the policy decision) have a paragraph in the docs explaining how to configure things (and remove any possibly outdated info that could refer to the old logic).\n> \n> But thanks for the big cleanup, I hope we can indeed merge the whole thing!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/998#issuecomment-2803289\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2822471",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2822471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2822471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjI0NzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-21T22:40:31Z",
    "updated_at": "2011-11-21T22:40:31Z",
    "author_association": "MEMBER",
    "body": "> I definitely don't trust expanduser to get all of the corner cases\n> correct unless we can verify that it handles everything that our\n> current code does.\n\nNo, expanduser will not get all of the corner cases, but it does a _better_ job than our current code in almost all normal cases.  The problem is that we simply _cannot_ get the right answer on both WinHPC and the rest of Windows, because WinHPC wants HOMESHARE for its UNC path, which is the wrong answer approximately everywhere else that it is defined.\n\nAn advantage of expanduser is that HOME is first priority on _all_ platforms, so it is the easiest and most natural to manually specify.\n\nUsing expanduser means that covering every possible cornercase is handled with one line of user code, setting $HOME prior to launching IPython, in all environments on all platforms.\n\nOur choice is between:\n\nA) requiring all WinHPC users to specify `HOME=%HOMESHARE%` (or just use IPYTHON_DIR, which is enough for the parallel apps)\nB) requiring most non-WinHPC users to specify `HOMESHARE=something` (this is not guaranteed to be possible, and just using IPYTHON_DIR _does not_ cut it for interactive IPython users).\n\n> I understand it would be nice to simplify our code, but before we do\n> that, let's figure out exactly what expanduser does.\n\n`os.path.expanduser` priority on Windows:\n1. `$HOME`\n2. `$USERPROFILE`\n3. `$HOMEDRIVE\\$HOMEPATH`\n\nand on Unix:\n1. `$HOME`\n2. query passwd database via `pwd` module\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2830431",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2830431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2830431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA0MzE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T04:55:36Z",
    "updated_at": "2011-11-22T04:55:36Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 21, 2011 at 2:40 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> > I definitely don't trust expanduser to get all of the corner cases\n> > correct unless we can verify that it handles everything that our\n> > current code does.\n> \n> No, expanduser will not get all of the corner cases, but it does a _better_ job than our current code in almost all normal cases.  The problem is that we simply _cannot_ get the right answer on both WinHPC and the rest of Windows, because WinHPC wants HOMESHARE for its UNC path, which is the wrong answer approximately everywhere else that it is defined.\n\nIIRC, HOMESHARE is not usually set on Windows and the current logic\nwill ignore it if it is not set and move onto the other options\n(HOMEDRIVE+HOMEPATH, USERROFILE, My Documents, HOME).  So the only\ntime HOMESHARE is used is when it is set and is actually the option\nthat likely should be used.  We know this approach works as this is\nhow our code has done it for about 2 years now.\n\n> An advantage of expanduser is that HOME is first priority on _all_ platforms, so it is the easiest and most natural to manually specify.\n\nYes, I agree that there is a nice uniformity in having HOME first on\nall platforms, but see my note below about env vars on windows.\n\n> Using expanduser means that covering every possible cornercase is handled with one line of user code, setting $HOME prior to launching IPython, in all environments on all platforms.\n\nBut there is a problem with this.  On multiuser, networked Windows\nboxes (managed by Active Directory) environment variables are\nparticularly difficult to manage on a per user basis.  This was a\nproblem I continually faced when doing the work for Microsoft.  I went\nin with the unix way of thinking, \"I will just set an environment\nvariable and everything will be happy\" and that was almost never the\ncase.  There is not such thing as a .bashrc file that users can use to\nset global environment variables that override the system defaults on\nall affected systems.  IIRC, such environment variables have to be set\nby sys-admins in the centralized Active Directory configuration using\nGroup Policy Objects (ouch my head hurts just saying this...) We may\nstill want to consider putting HOME first on Windows, but we can't\nrequire users on Windows to set environment variables to get IPython\nto work.\n\nThere is part of my that would love to ditch this additional logic for\nWin-HPC, but I have a feeling it will haunt me in the future\nspecifically...\n\n> Our choice is between:\n> \n> A) requiring all WinHPC users to specify `HOME=%HOMESHARE%` (or just use IPYTHON_DIR, which is enough for the parallel apps)\n> B) requiring most non-WinHPC users to specify `HOMESHARE=something` (this is not guaranteed to be possible, and just using IPYTHON_DIR _does not_ cut it for interactive IPython users).\n\nI don't see how these are our only two options.  If non-WinHPC users\ndon't set HOMESHARE, it is ignored and the other options are\nattempted, which is what we do today.\n\n> > I understand it would be nice to simplify our code, but before we do\n> > that, let's figure out exactly what expanduser does.\n> \n> `os.path.expanduser` priority on Windows:\n> 1. `$HOME`\n> 2. `$USERPROFILE`\n> 3. `$HOMEDRIVE\\$HOMEPATH`\n\nOK, thanks for tracking this down.  Quite different logic than we have\nthough.  This makes me wonder (even aside from the HOMESHARE issue)\nwhy our ordering is so different.\n\n> and on Unix:\n> 1. `$HOME`\n> 2. query passwd database via `pwd` module\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/998#issuecomment-2822471\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2830730",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2830730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2830730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA3MzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T05:50:32Z",
    "updated_at": "2011-11-22T05:50:32Z",
    "author_association": "MEMBER",
    "body": "> IIRC, HOMESHARE is not usually set on Windows and the current logic\n> will ignore it if it is not set and move onto the other options\n> (HOMEDRIVE+HOMEPATH, USERROFILE, My Documents, HOME).  So the only\n> time HOMESHARE is used is when it is set and is actually the option\n> that likely should be used.  We know this approach works as this is\n> how our code has done it for about 2 years now.\n\nThe fact that we have had multiple bug reports (including #747) of cases where HOMESHARE is the wrong choice would suggest otherwise.\n\n> I don't see how these are our only two options.  If non-WinHPC users\n> don't set HOMESHARE, it is ignored and the other options are\n> attempted, which is what we do today.\n\nThe problem is the enterprise/computer lab environments, which regularly do set this env, where it is _not_ the right answer.  It would appear from the user reports that HOMESHARE is never right outside WinHPC even when defined, but obviously we won't be getting reports that we are doing the right thing.  Sysadmins, not users, set HOMESHARE, but users can set HOME.  So if HOMESHARE is wrong, there isn't much recourse if it is the first priority, but if HOME is wrong or undefined, it should be safe to override.\n\nSo the logical choices for first priority are to match the rest of the Python universe and use HOME, or use HOMESHARE, which has the benefit of guaranteeing UNC paths on WinHPC, but the disadvantages of being the wrong answer everywhere else that it is defined, along with being internally inconsistent with the rest of Python.\n\nThe fact is that both of these cases are guaranteed to get the wrong answer in some cases, so we just have to pick the one that is going to require some extra config.  WinHPC seems the more logical choice to me, because it is already the more complicated and unconventional use case, and the fix is standard and less intrusive.\n\n> OK, thanks for tracking this down.  Quite different logic than we have\n> though.  This makes me wonder (even aside from the HOMESHARE issue)\n> why our ordering is so different.\n\nYes, I think we are exactly backwards.  If we do restore HOMESHARE as first priority, we should use expanduser after that, and can still fall back on My Documents in the end, if we want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2830921",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2830921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2830921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA5MjE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T06:20:17Z",
    "updated_at": "2011-11-22T06:20:17Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 21, 2011 at 9:50 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> > IIRC, HOMESHARE is not usually set on Windows and the current logic\n> > will ignore it if it is not set and move onto the other options\n> > (HOMEDRIVE+HOMEPATH, USERROFILE, My Documents, HOME).  So the only\n> > time HOMESHARE is used is when it is set and is actually the option\n> > that likely should be used.  We know this approach works as this is\n> > how our code has done it for about 2 years now.\n> \n> The fact that we have had multiple bug reports (including #747) of cases where HOMESHARE is the wrong choice would suggest otherwise.\n\nAhh, I hadn't followed that very closely.  In that case, we do need to\nchange our logic and I agree that the Win-HPC usage case is the least\nimportant.\n\n> > I don't see how these are our only two options.  If non-WinHPC users\n> > don't set HOMESHARE, it is ignored and the other options are\n> > attempted, which is what we do today.\n> \n> The problem is the enterprise/computer lab environments, which regularly do set this env, where it is _not_ the right answer.  It would appear from the user reports that HOMESHARE is never right outside WinHPC even when defined, but obviously we won't be getting reports that we are doing the right thing.  Sysadmins, not users, set HOMESHARE, but users can set HOME.  So if HOMESHARE is wrong, there isn't much recourse if it is the first priority, but if HOME is wrong or undefined, it should be safe to override.\n\nYep.\n\n> So the logical choices for first priority are to match the rest of the Python universe and use HOME, or use HOMESHARE, which has the benefit of guaranteeing UNC paths on WinHPC, but the disadvantages of being the wrong answer everywhere else that it is defined, along with being internally inconsistent with the rest of Python.\n> \n> The fact is that both of these cases are guaranteed to get the wrong answer in some cases, so we just have to pick the one that is going to require some extra config.  WinHPC seems the more logical choice to me, because it is already the more complicated and unconventional use case, and the fix is standard and less intrusive.\n> \n> > OK, thanks for tracking this down.  Quite different logic than we have\n> > though.  This makes me wonder (even aside from the HOMESHARE issue)\n> > why our ordering is so different.\n> \n> Yes, I think we are exactly backwards.  If we do restore HOMESHARE as first priority, we should use expanduser after that, and can still fall back on My Documents in the end, if we want.\n\nGiven the situation, I think that using expanduser makes sense.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/998#issuecomment-2830730\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2838144",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2838144",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2838144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzgxNDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T18:26:40Z",
    "updated_at": "2011-11-22T18:26:40Z",
    "author_association": "MEMBER",
    "body": "> Given the situation, I think that using expanduser makes sense.\n\nOkay, should I add the My Documents wreg bit back in as a fallback?  One case we no longer handle on Windows is the lack of _any_ environment, but I don't know when/where that might come up, if ever.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2838557",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2838557",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2838557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzg1NTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T18:46:11Z",
    "updated_at": "2011-11-22T18:46:11Z",
    "author_association": "MEMBER",
    "body": "On Tue, Nov 22, 2011 at 10:26 AM, Min RK\nreply@reply.github.com\nwrote:\n\n> Okay, should I add the My Documents wreg bit back in as a fallback?\n\nI would.  It's just a couple lines of code and if it saves a few\npeople with weird setups from having problems (and us from having to\nanswer them) it's worth it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2845050",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2845050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2845050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDUwNTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-23T04:59:11Z",
    "updated_at": "2011-11-23T04:59:11Z",
    "author_association": "MEMBER",
    "body": "Okay, My Documents fallback is back (along with its test), and @fperez's comment on the error message is addressed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2857628",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2857628",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2857628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc2Mjg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T02:27:19Z",
    "updated_at": "2011-11-24T02:27:19Z",
    "author_association": "MEMBER",
    "body": "@minrk, this looks pretty much ready to merge, no?  If so, feel free to go ahead with it, the last commits look fine.\n\nThanks for the cleanup and being patient to work through the issues on WinHPC with @ellisonbg!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2857669",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2857669",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2857669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc2Njk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T02:31:28Z",
    "updated_at": "2011-11-24T02:31:28Z",
    "author_association": "MEMBER",
    "body": "Sure, it seems well behaved to me.  I'll give it a few iptests, then merge if nothing pops up.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2857694",
    "html_url": "https://github.com/ipython/ipython/pull/998#issuecomment-2857694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/998",
    "id": 2857694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc2OTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T02:36:44Z",
    "updated_at": "2011-11-24T02:36:44Z",
    "author_association": "MEMBER",
    "body": "On Wed, Nov 23, 2011 at 6:31 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> Sure, it seems well behaved to me.  I'll give it a few iptests, then merge if nothing pops up.\n\nGreat,  thanks!\n"
  }
]
