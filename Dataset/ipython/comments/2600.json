[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10510057",
    "html_url": "https://github.com/ipython/ipython/pull/2600#issuecomment-10510057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2600",
    "id": 10510057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTEwMDU3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-19T11:16:50Z",
    "updated_at": "2012-11-19T11:16:50Z",
    "author_association": "MEMBER",
    "body": "Thanks!\n\nI think my first reaction, however, is that this is quite a bit of extra complexity, and I'm not sure what problem it's trying to solve. `%run` especially is one of the most fragile bits of IPython, so we're wary of adding anything there. And as I envisage `%load`, you would normally load some code once, then break it up into smaller fragments to run and rerun.\n\nCan you describe what problem you're having, so that we can work out how best to handle it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10519260",
    "html_url": "https://github.com/ipython/ipython/pull/2600#issuecomment-10519260",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2600",
    "id": 10519260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTE5MjYw",
    "user": {
      "login": "kyleam",
      "id": 1297788,
      "node_id": "MDQ6VXNlcjEyOTc3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1297788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kyleam",
      "html_url": "https://github.com/kyleam",
      "followers_url": "https://api.github.com/users/kyleam/followers",
      "following_url": "https://api.github.com/users/kyleam/following{/other_user}",
      "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions",
      "organizations_url": "https://api.github.com/users/kyleam/orgs",
      "repos_url": "https://api.github.com/users/kyleam/repos",
      "events_url": "https://api.github.com/users/kyleam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kyleam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-19T16:09:33Z",
    "updated_at": "2012-11-19T16:09:33Z",
    "author_association": "NONE",
    "body": "Thanks for the response.\n\nThe main reason I was using this is to get the workflow I have when I use emacs/ess with R, where I mostly work from a script and then send changes to the interactive environment. I'm aware that ipython.el can do this, but I hadn't had much luck getting things to run smoothly and didn't necessarily want to run IPython from within emacs.\n\nFor very small things, it isn't a problem to load or run the file again, but if there is a rate limiting step (loading in/manipulating a larger data set), it is nice to be able to only load that once.\n\nSo, this makes me think I'm just not going about it the right way. I'm assuming the typical approach to above is to use `%save` to append lines to a file, and that I'm just making it more complicated by wanting to work mostly from a  script.\n\nThanks again for the response. It certainly makes sense not to incorporate a change that only solves a problem one user is making for himself :) Please let me know if you have any suggestions for a better workflow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12070753",
    "html_url": "https://github.com/ipython/ipython/pull/2600#issuecomment-12070753",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2600",
    "id": 12070753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDcwNzUz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-09T22:38:27Z",
    "updated_at": "2013-01-09T22:38:27Z",
    "author_association": "MEMBER",
    "body": "There are a couple of ways I deal with this:\n- I break my code into a different pieces.  I run the time consuming parts once and then `%run` the other parts as needed.\n- I just run in the notebook where you can have full control over which cells get executed when.\n\nI agree with @takluyver that the approach in this pull request is to much complexity to add to a fragile part of our code base, when most of our users won't probably use this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12113251",
    "html_url": "https://github.com/ipython/ipython/pull/2600#issuecomment-12113251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2600",
    "id": 12113251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTEzMjUx",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-10T19:08:50Z",
    "updated_at": "2013-01-10T19:08:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kyleam Thanks for the contribution, but unfortunately I agree with @takluyver and @ellisonbg that this is beyond the scope of the IPython project.\n\nI encourage you to make your own custom [IPython extension](http://wiki.ipython.org/Extensions_Index) and post it to our extension list.\n\nIf the extension finds a significant user base we can re-examine adding this feature to IPython core.\n"
  }
]
