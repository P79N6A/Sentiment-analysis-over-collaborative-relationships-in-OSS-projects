[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2763096",
    "html_url": "https://github.com/ipython/ipython/issues/1004#issuecomment-2763096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1004",
    "id": 2763096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMwOTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-16T16:54:07Z",
    "updated_at": "2011-11-16T16:54:07Z",
    "author_association": "MEMBER",
    "body": "Yes, this is the correct behavior - only the frontend that started the kernel is allowed to interrupt and restart it.\n\nThe sticking point is that signaling is handled simply by sending an interrupt directly to the process (via Process.send_signal).  This should be able to be done with any local kernel (possibly not Windows) via `os.kill(pid, SIGINT)`.  This is complicated slightly by the fact that the kernel's pid can be a function of time, because it is a new process every time it is restarted, but is still identified as the same kernel.\n\nIt cannot be done _remotely_ until we have a mechanism for sending signals over the wire.  In order for this to work, every kernel must have a nanny process that would receive messages, and signal the kernel. This should not be difficult (a similar, but much more complicated idea was done in the `daemon` branch of IPython 0.10, back on Launchpad), but I don't think it's on anyone's immediate todo list.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2796702",
    "html_url": "https://github.com/ipython/ipython/issues/1004#issuecomment-2796702",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1004",
    "id": 2796702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTY3MDI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-19T01:19:12Z",
    "updated_at": "2011-11-19T01:19:12Z",
    "author_association": "MEMBER",
    "body": "As a note, if you access a remote kernel via the web notebook, you _can_ interrupt it, since the notebook server in that case acts precisely like the nanny process Min describes, and does the job of sending the signal locally for you.  Not ideal, I know, but it's a limited workaround for now...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2837551",
    "html_url": "https://github.com/ipython/ipython/issues/1004#issuecomment-2837551",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1004",
    "id": 2837551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzc1NTE=",
    "user": {
      "login": "ohe",
      "id": 111823,
      "node_id": "MDQ6VXNlcjExMTgyMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/111823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ohe",
      "html_url": "https://github.com/ohe",
      "followers_url": "https://api.github.com/users/ohe/followers",
      "following_url": "https://api.github.com/users/ohe/following{/other_user}",
      "gists_url": "https://api.github.com/users/ohe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ohe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ohe/subscriptions",
      "organizations_url": "https://api.github.com/users/ohe/orgs",
      "repos_url": "https://api.github.com/users/ohe/repos",
      "events_url": "https://api.github.com/users/ohe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ohe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T17:45:08Z",
    "updated_at": "2011-11-22T17:45:08Z",
    "author_association": "NONE",
    "body": "@fperez, this is a very interesting point. But, for many reasons, I (in fact we, in our company) can't use for now the web notebook. I fixed this issue with a big and dirty hack on top of our infrastructure as a workaround for this issue.\nI see that issue is prioritized for 0.13 release ... Can't wait for it ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2839315",
    "html_url": "https://github.com/ipython/ipython/issues/1004#issuecomment-2839315",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1004",
    "id": 2839315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzkzMTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-22T19:42:31Z",
    "updated_at": "2011-11-22T19:42:31Z",
    "author_association": "MEMBER",
    "body": "On Tue, Nov 22, 2011 at 9:45 AM, Olivier Hervieu\nreply@reply.github.com\nwrote:\n\n> @fperez, this is a very interesting point. But, for many reasons, I (in fact we, in our company) can't use for now the web notebook. I fixed this issue with a big and dirty hack on top of our infrastructure as a workaround for this issue.\n\nOK, glad you could find a workaround.  BTW, if any of the issues\nyou/your company have with the notebook are things we can fix (i.e.\nnot including supporting very old browsers without websockets or other\nsimilar things beyond our control), by all means let us know! Issue\n#977 is an 'open thread' place to list improvements you'd like to see\nmade to the notebook.\n\n> I see that issue is prioritized for 0.13 release ... Can't wait for it ;)\n\nKeep in mind that mostly means 'not for 0.12'.  Whether it actually\nhappens for 0.13 or not is more dependent on someone whipping up a\npull request for us than anything else: we have a very small team and\nunfortunately this isn't the highest priority item on our list right\nnow...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316767117",
    "html_url": "https://github.com/ipython/ipython/issues/1004#issuecomment-316767117",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1004",
    "id": 316767117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2NzExNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:00:29Z",
    "updated_at": "2017-07-20T17:00:29Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  }
]
