[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/327938535",
    "html_url": "https://github.com/ipython/ipython/issues/10774#issuecomment-327938535",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10774",
    "id": 327938535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkzODUzNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T22:00:41Z",
    "updated_at": "2017-09-07T22:00:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report, you are right that we should split the post_execution hooks into hooks that execute after every requests, or only after every valid Python request. I don't think we should fix the current ones, but provide variants that also trigger even when the pre-execute fails. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/327997638",
    "html_url": "https://github.com/ipython/ipython/issues/10774#issuecomment-327997638",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10774",
    "id": 327997638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk5NzYzOA==",
    "user": {
      "login": "craigcitro",
      "id": 468559,
      "node_id": "MDQ6VXNlcjQ2ODU1OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craigcitro",
      "html_url": "https://github.com/craigcitro",
      "followers_url": "https://api.github.com/users/craigcitro/followers",
      "following_url": "https://api.github.com/users/craigcitro/following{/other_user}",
      "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions",
      "organizations_url": "https://api.github.com/users/craigcitro/orgs",
      "repos_url": "https://api.github.com/users/craigcitro/repos",
      "events_url": "https://api.github.com/users/craigcitro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craigcitro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T04:45:12Z",
    "updated_at": "2017-09-08T04:45:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @Carreau -- I'm curious about the details of what you're proposing.\r\n\r\n* Do you mean that you want to allow users to set separate hooks for the various ways a cell can fail, eg `post_syntax_error_hook`, `post_preprocessing_error_hook`, that sort of thing? I feel like that's a lot of complexity. For my money, I'd rather provide a way to customize the `error_before_exec` function that gets used.\r\n\r\n* Is the motivation for adding a new hook simply to avoid a subtle behavior change? As it is, I'm betting that most (if not all) users of the `post_*` hooks actually *expect* that they're always being executed, and would be surprised by the behavior @fniephaus ran into here. But of course I'm saying that based on 0 data. ðŸ˜€ ðŸ˜€ ðŸ˜€  Do you know of a use case for the current behavior?\r\n\r\n* If we do go the route of new hooks, do you imagine having something like a `post_execute_exception_hook`, where we know exactly one of that and `post_execute_hook` will be triggered? Or something more like a `finally_hook`, where it's executed no matter what?\r\n\r\nThinking it through, I could see an argument that the right answer here is to say \"we will be explicit about documenting and sticking to the current behavior, because it's a subtle behavior change. If you want something else, you should override `run_cell` yourself.\" I think that would work for our use case, but I bet we aren't the first and won't be the last to stumble on this, so we wanted to look at fixing it at the root first. ðŸ˜‰ "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/328165779",
    "html_url": "https://github.com/ipython/ipython/issues/10774#issuecomment-328165779",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10774",
    "id": 328165779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE2NTc3OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T17:28:41Z",
    "updated_at": "2017-09-08T17:28:41Z",
    "author_association": "MEMBER",
    "body": "> Do you mean that you want to allow users to set separate hooks for the various ways a cell can fail\r\n\r\nProbably not _that_ granular. \r\n\r\n> Is the motivation for adding a new hook simply to avoid a subtle behavior change?\r\n\r\nYes. \r\n\r\n> But of course I'm saying that based on 0 data\r\n\r\nI see you are 0-indexed. And so we have at least 1 more data point: I would have expected these hooks to not trigger on failure :-) \r\n\r\n> If we do go the route of new hooks, do you imagine having something like a post_execute_exception_hook, where we know exactly one of that and post_execute_hook will be triggered? Or something more like a finally_hook, where it's executed no matter what?\r\n\r\nYes, probably a `finally_hook`, that get a parameter with whether things failed and how. Then it's explicit to user when it is called and give you all the flexibility you can get.\r\n\r\nWe'll better document anyway !\r\n\r\nThanks !\r\n\r\n"
  }
]
