[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5956869",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5956869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5956869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTY4Njk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:10:01Z",
    "updated_at": "2012-05-27T22:10:01Z",
    "author_association": "MEMBER",
    "body": "I have similar logic in my `DirectViewWidget` that republishes output that comes back from the engines.  Here is how I think we should handle this.\n- All of the output republishing logic should be put into a method of the `DirectView` or `AyncResult` class (not sure which is better).\n- That method should have a flag that can be use to control if the output is done a) by engine or b) by output type.\n- The paralllel magics can call that method to trigger the output republishing.\n- My `DirectViewWidget` can also call that method to get the same republishing.\n\nAlso, I think we want a cell magic that works like a stateless `%autopx`.  Should that go into this PR?  What should we call that new magic?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5956872",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5956872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5956872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTY4NzI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:10:45Z",
    "updated_at": "2012-05-27T22:10:45Z",
    "author_association": "MEMBER",
    "body": "Oh, I should also mention that the various magics and direct view widget can expose the flag the determines the order of the output.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957004",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957004",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTcwMDQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:27:00Z",
    "updated_at": "2012-05-27T22:27:00Z",
    "author_association": "MEMBER",
    "body": "I agree with @ellisonbg that the collate/don't collate behavior needs to have a flag: this is unfortunately one of those things where the answer can legitimately be either, depending on what the user is trying to see.  I can easily imagine cases where I'd want either, so making it easy to flip (and having a way for users set a default, if their use cases tend in one direction consistently) is probably the answer here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957007",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957007",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTcwMDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:27:37Z",
    "updated_at": "2012-05-27T22:27:37Z",
    "author_association": "MEMBER",
    "body": "And btw, awesome job here.  Once all of this lands in, it's going to be seriously impressive!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957008",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957008",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTcwMDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:28:00Z",
    "updated_at": "2012-05-27T22:28:00Z",
    "author_association": "MEMBER",
    "body": "Anything that deals with results like 'republish' _definitely_ belongs on AsyncResult, and not the View.  I'll move the contents of `_display_result` to `AysncResult.republish_ouput`.  That will have to be a tiny bit more careful, as it does not guarantee access to an IPython instance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957047",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957047",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTcwNDc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:34:00Z",
    "updated_at": "2012-05-27T22:34:00Z",
    "author_association": "MEMBER",
    "body": "As for collation, I see three basic cases:\n1. group _all_ outputs of each engine\n2. group each _class_ of output (stdout/pyout/etc.) together across engines\n3. group each _individual_ output across engines (collate the inner outputs list, which need not match in length)\n\nCurrently I am dong 2 (which is the easiest and most logical, to me), and I doubt we want to support all 3, so what should the flag mean?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957065",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTcwNjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T22:37:02Z",
    "updated_at": "2012-05-27T22:37:02Z",
    "author_association": "MEMBER",
    "body": "I think not doing 3 is sensible, and how about `--group={engine/kind}` to flag 1 and 2 respectively? Or `--group-outputs`, with `-o` as a shorthand alternative?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957349",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957349",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTczNDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-27T23:24:55Z",
    "updated_at": "2012-05-27T23:24:55Z",
    "author_association": "MEMBER",
    "body": "Interesting - I was expecting #3 to be the most likely variation on 2.  I think `colate=True|False` is the best UI, but I suppose unless we are supporting only 1 and 3 or 2 and 3, we can't do that.\n\nWhat I have currently is `AsyncResult.display_outputs(group='type')`, where group = engine | type | collate. for cases 1,2,3 respectively.  How does that sound?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5957606",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5957606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5957606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTc2MDY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T00:08:10Z",
    "updated_at": "2012-05-28T00:08:10Z",
    "author_association": "MEMBER",
    "body": "I think that sounds fine.\n\nOn Sun, May 27, 2012 at 4:24 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> Interesting - I was expecting #3 to be the most likely variation on 2.  I think `colate=True|False` is the best UI, but I suppose unless we are supporting only 1 and 3 or 2 and 3, we can't do that.\n> \n> What I have currently is `AsyncResult.display_outputs(group='type')`, where group = engine | type | collate. for cases 1,2,3 respectively.  How does that sound?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1768#issuecomment-5957349\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5958335",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5958335",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5958335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTgzMzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T02:31:08Z",
    "updated_at": "2012-05-28T02:31:08Z",
    "author_association": "MEMBER",
    "body": "On Sun, May 27, 2012 at 5:08 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> I think that sounds fine.\n\n+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5959719",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5959719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5959719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTk3MTk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T06:23:56Z",
    "updated_at": "2012-05-28T06:24:12Z",
    "author_association": "MEMBER",
    "body": "Okay, I've moved the functionality into AsyncResult.display_outputs, and the three choices for groupby are called: engine, type, order.\n\nI haven't added options to the magics, and I'm not sure I want to, because we are still so bad at parsing magic arguments when the tail of the line should be Python code.  For instance, the `%result` magic, ~100% of the times an arg is specified, it is a negative integer.  Do we have parsing in place, where the following would work:\n\n```\n%result --group=engine -2\n```\n\n?\n\nI don't think the value is worth the pain of parsing magic arguments.\n\nAs for the `%%px` magic, what do we want from it?  I can imagine wanting to specify targets, but the parallel magics are currently associated with a View, not a Client.  Do we want to change that?  If we _just_ want existing `%px` but for a cell, and exposing the above discussed flags (and at least block), that's obvious quite easy.\n\nI would also greatly appreciate any suggestions on output presentation, because while it does contain everything, I don't really like how any of it looks other than stdout/err.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5959786",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5959786",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5959786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTk3ODY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T06:32:33Z",
    "updated_at": "2012-05-28T06:32:33Z",
    "author_association": "MEMBER",
    "body": "Also, has anyone actually used long options with magics before? Because the signature for longopts in magic.py is simply wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5959938",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5959938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5959938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTk5Mzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T06:51:44Z",
    "updated_at": "2012-05-28T06:51:44Z",
    "author_association": "MEMBER",
    "body": "I don't think so.  In general, we have a bit of a mishmash of approaches to options handling in the various magics.\n\nNow that they have clean, standalone OO setup, it wouldn't be a bad idea to do some weed cleaning in there, and coming up with good canonical practices for all new magics.  I couldn't go that far in the big PR due to time constraints...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5959973",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5959973",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5959973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTk5NzM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T06:55:26Z",
    "updated_at": "2012-05-28T06:55:26Z",
    "author_association": "MEMBER",
    "body": "I added a super simple `%%px` cell magic (accepts some group and blocking args), and a bug in Magic.parse_options is fixed and tested.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960056",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960056",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjAwNTY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:05:24Z",
    "updated_at": "2012-05-28T07:05:24Z",
    "author_association": "MEMBER",
    "body": "Should we think about using perhaps more descriptive names here?  Back when all of this was purely for terminal use, terseness was the overriding design criteria, because we were trying to minimize typing above all else.  Now in the notebook, I think the balance shifts more towards long-term readability.  Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960117",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960117",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjAxMTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:12:05Z",
    "updated_at": "2012-05-28T07:12:05Z",
    "author_association": "MEMBER",
    "body": "**Test results for commit a688afc merged into master**\nPlatform: linux2\n- python2.7: Failed, log at https://gist.github.com/2817788\n- python3.2: Failed, log at https://gist.github.com/2817789 (libraries not available: matplotlib pymongo qt tornado wx wx.aui)\n\nNot available for testing: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960131",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960131",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjAxMzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:13:06Z",
    "updated_at": "2012-05-28T07:13:06Z",
    "author_association": "MEMBER",
    "body": "I got the same failures in 2.x and 3.x, they look legit.  Did you forget to push something perhaps?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960509",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960509",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA1MDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:45:37Z",
    "updated_at": "2012-05-28T07:45:37Z",
    "author_association": "MEMBER",
    "body": "The failures were just a couple of typos, and should be fixed.  I have some tests to add before this is done, so I haven't been running the suite too rigorously yet.\n\nAs for verbosity - I would be very sad to lose `%px a=5`, which benefits hugely from its brevity, and the notebook accounts for a tiny fraction of my own usage of it (I think all of the existing parallel line magics are of negligible value in the notebook).  The same cannot be said for use as a cell magic, so I think exposing the cell magic as `%%parallel` or something similarly verbose makes plenty of sense.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960532",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960532",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA1MzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:47:49Z",
    "updated_at": "2012-05-28T07:47:49Z",
    "author_association": "MEMBER",
    "body": "Right, I was thinking mostly of cell magics, that will really see the bulk of their usage in the notebook.  While we made it possible to use cell magics in the terminal, it's just like any other multiline construct: ok for a handful of lines, not what you want to use for extended coding.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960539",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA1Mzk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:48:49Z",
    "updated_at": "2012-05-28T07:48:49Z",
    "author_association": "MEMBER",
    "body": "Sounds good - I will split `%px` and `%%parallel`, mainly so they aren't sharing a docstring.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5960578",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5960578",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5960578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA1Nzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T07:51:25Z",
    "updated_at": "2012-05-28T07:51:25Z",
    "author_association": "MEMBER",
    "body": "Great!  I'll play with it some tomorrow then.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5961081",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5961081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5961081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjEwODE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T08:28:44Z",
    "updated_at": "2012-05-28T08:28:44Z",
    "author_association": "MEMBER",
    "body": "okay, magics split and example notebook added.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5967080",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5967080",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5967080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjcwODA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T15:17:03Z",
    "updated_at": "2012-05-28T15:17:03Z",
    "author_association": "MEMBER",
    "body": "I think I would rather have a single name (%px and %%px) magic as the\nreally do the same thing.\n\nOn Mon, May 28, 2012 at 1:28 AM, Min RK\nreply@reply.github.com\nwrote:\n\n> okay, magics split and example notebook added.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1768#issuecomment-5961081\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5969849",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5969849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5969849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njk4NDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T18:23:19Z",
    "updated_at": "2012-05-28T18:23:19Z",
    "author_association": "MEMBER",
    "body": "> I think I would rather have a single name (%px and %%px) magic as they really do the same thing.\n\nThat makes sense, though I can see them potentially diverging, as more options are added to the cell magic, perhaps to select targets, etc.  One thing I _do not_ want to do is support flags/options on the %px line magic.  Far too many things go wrong when we parse flags prior to Python code on the same line.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5969951",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5969951",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5969951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njk5NTE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T18:29:58Z",
    "updated_at": "2012-05-28T18:29:58Z",
    "author_association": "MEMBER",
    "body": "I am fine with the flags/options diverging.  But conceptually, at the core, the line and call versions do that same exact thing.  I think this same issue will come up with other magics, such as `%timeit`.  Even there I could imagine the cell and line versions having different options in the log run.  But I really like keeping the same name for line and cell versions that do the same thing at the core.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972590",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5972590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5972590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI1OTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T21:44:16Z",
    "updated_at": "2012-05-28T21:44:16Z",
    "author_association": "MEMBER",
    "body": "That makes sense, I'll put it back as `%%px`, unless @fperez has a reason to object.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972773",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5972773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5972773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI3NzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T22:02:40Z",
    "updated_at": "2012-05-28T22:02:40Z",
    "author_association": "MEMBER",
    "body": "No, not really.  I don't think it's great for readability in production code, but we can leave it be for now and reconsider later with more experience.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972786",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5972786",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5972786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI3ODY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T22:04:29Z",
    "updated_at": "2012-05-28T22:04:29Z",
    "author_association": "MEMBER",
    "body": "I am not actually attached to the name `px`, I just think the line and cell names should be the same/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972893",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5972893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5972893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI4OTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T22:16:21Z",
    "updated_at": "2012-05-28T22:16:21Z",
    "author_association": "MEMBER",
    "body": "Since I've shifted most of my production usage to the notebook I've become more partial to longer, more descriptive names.  But I'm not really too set on anything one way or another, so I'm happy leaving the decision up to Min, since he worked on the implementation.  We can always revisit with more experience.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972909",
    "html_url": "https://github.com/ipython/ipython/pull/1768#issuecomment-5972909",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1768",
    "id": 5972909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI5MDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T22:17:53Z",
    "updated_at": "2012-05-28T22:17:53Z",
    "author_association": "MEMBER",
    "body": "Okay, so then the choice is which should have priority:\n1. notebook readability for the cell magic (`%parallel`)\n2. line succinctness for the line magic (`%px`)\n3. historical precedence (people are not happy when we break backward compatibility because we didn't like the name).\n\nI think `%parallel` is a bad name for the line magic, and `%px` is not a good name for the cell magic, so I would lean towards `%px` if they are to be kept the same.\n"
  }
]
