[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2660907",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2660907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2660907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA5MDc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-07T22:30:42Z",
    "updated_at": "2011-11-07T22:30:42Z",
    "author_association": "MEMBER",
    "body": "When you write `EOF` (via ^D) to `sys.stdin`, then `sys.stdin.next()` raises `StopIteration`, which is why your scripts iteration doesn't proceed on future calls. It would seem that calling `sys.stdin.seek(0)` resets this state ([cf.](http://docs.python.org/library/fileinput.html?highlight=sys.stdin.seek%280%29).  I'm not sure if IPython should call this itself, and if so, under what conditions, nor do I know what the consequences of putting such a call at the top of your script might be.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2662264",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2662264",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2662264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjIyNjQ=",
    "user": {
      "login": "haridsv",
      "id": 166486,
      "node_id": "MDQ6VXNlcjE2NjQ4Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/166486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haridsv",
      "html_url": "https://github.com/haridsv",
      "followers_url": "https://api.github.com/users/haridsv/followers",
      "following_url": "https://api.github.com/users/haridsv/following{/other_user}",
      "gists_url": "https://api.github.com/users/haridsv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haridsv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haridsv/subscriptions",
      "organizations_url": "https://api.github.com/users/haridsv/orgs",
      "repos_url": "https://api.github.com/users/haridsv/repos",
      "events_url": "https://api.github.com/users/haridsv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haridsv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-08T00:39:31Z",
    "updated_at": "2011-11-08T00:39:31Z",
    "author_association": "NONE",
    "body": "Wouldn't this be true only for using stdin multiple times with in the same\nprocess? When running the script multiple times, the new process is\ninheriting the stdin from the parent (IPython) freshly. If the state gets\ninto a bad state in IPython's process itself, then it is a different\nmatter, but IPython itself seems to continue to function normally, may be\nbecause it uses curses and that doesn't care about this state. In any case,\nI tried `sys.stdin.seek(0)` on linux and got this: `IOError: [Errno 29]\nIllegal seek`.\n\nOn Mon, Nov 7, 2011 at 2:30 PM, Min RK <\nreply@reply.github.com>wrote:\n\n> When you write `EOF` (via ^D) to `sys.stdin`, then `sys.stdin.next()`\n> raises `StopIteration`, which is why your scripts iteration doesn't proceed\n> on future calls. It would seem that calling `sys.stdin.seek(0)` resets this\n> state ([cf.](http://docs.python.org/library/fileinput.html?highlight=sys.stdin.seek%280%29).\n>  I'm not sure if IPython should call this itself, and if so, under what\n> conditions, nor do I know what the consequences of putting such a call at\n> the top of your script might be.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/972#issuecomment-2660907\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687272",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2687272",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2687272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODcyNzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:04:44Z",
    "updated_at": "2011-11-09T21:04:44Z",
    "author_association": "MEMBER",
    "body": "%run does not start a new process, the file is executed locally via `execfile` (or similar).  So the stdin your script is using is exactly the same one as the rest of the terminal session, and all subsequent calls to %run.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687403",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2687403",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2687403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODc0MDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:12:30Z",
    "updated_at": "2011-11-09T21:12:30Z",
    "author_association": "MEMBER",
    "body": "And I find that the following script seems to behave reasonably well:\n\n``` python\nimport sys\nsys.stdin.seek(0)\nfor line in sys.stdin:\n    print line.rstrip()\n```\n\nI do seem to be able to get a traceback if I run once and ctrl-C to stop, then run again and ctrl-D to stop.  The script still iterates and prints properly, but the traceback (`IOError(errno=0)`) is raised at the end of iterating through sys.stdin somehow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687408",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2687408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2687408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODc0MDg=",
    "user": {
      "login": "haridsv",
      "id": 166486,
      "node_id": "MDQ6VXNlcjE2NjQ4Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/166486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haridsv",
      "html_url": "https://github.com/haridsv",
      "followers_url": "https://api.github.com/users/haridsv/followers",
      "following_url": "https://api.github.com/users/haridsv/following{/other_user}",
      "gists_url": "https://api.github.com/users/haridsv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haridsv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haridsv/subscriptions",
      "organizations_url": "https://api.github.com/users/haridsv/orgs",
      "repos_url": "https://api.github.com/users/haridsv/repos",
      "events_url": "https://api.github.com/users/haridsv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haridsv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:12:54Z",
    "updated_at": "2011-11-09T21:12:54Z",
    "author_association": "NONE",
    "body": "That is very interesting... I always wondered how ipython managed to drop\nto the ipdb prompt on errors, since I thought it was executing in external\nprocess, but now I understand how it is possible.\n\nBut in any case, the workaround to seek(0) on sys.stdin doesn't work, it\ngives the \"Illegal seek\" error.\n\nOn Wed, Nov 9, 2011 at 1:04 PM, Min RK <\nreply@reply.github.com>wrote:\n\n> %run does not start a new process, the file is executed locally via\n> `execfile` (or similar).  So the stdin your script is using is exactly the\n> same one as the rest of the terminal session, and all subsequent calls to\n> %run.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/972#issuecomment-2687272\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687465",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2687465",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2687465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODc0NjU=",
    "user": {
      "login": "haridsv",
      "id": 166486,
      "node_id": "MDQ6VXNlcjE2NjQ4Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/166486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haridsv",
      "html_url": "https://github.com/haridsv",
      "followers_url": "https://api.github.com/users/haridsv/followers",
      "following_url": "https://api.github.com/users/haridsv/following{/other_user}",
      "gists_url": "https://api.github.com/users/haridsv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haridsv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haridsv/subscriptions",
      "organizations_url": "https://api.github.com/users/haridsv/orgs",
      "repos_url": "https://api.github.com/users/haridsv/repos",
      "events_url": "https://api.github.com/users/haridsv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haridsv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:17:10Z",
    "updated_at": "2011-11-09T21:17:10Z",
    "author_association": "NONE",
    "body": "Interesting that it works for you. The seek(0) consistently fails for me on\nlinux. What OS are you trying?\n\nOn Wed, Nov 9, 2011 at 1:12 PM, Min RK <\nreply@reply.github.com>wrote:\n\n> And I find that the following script seems to behave reasonably well:\n> \n> ``` python\n> import sys\n> sys.stdin.seek(0)\n> for line in sys.stdin:\n>    print line.rstrip()\n> ```\n> \n> I do seem to be able to get a traceback if I run once and ctrl-C to stop,\n> then run again and ctrl-D to stop.  The script still iterates and prints\n> properly, but the traceback (`IOError(errno=0)`) is raised at the end of\n> iterating through sys.stdin somehow.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/972#issuecomment-2687403\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2687527",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2687527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2687527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODc1Mjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T21:20:56Z",
    "updated_at": "2011-11-09T21:20:56Z",
    "author_association": "MEMBER",
    "body": "OSX - I just tried it on Linux, and I see the same issue as you, but wrapping the seek in `try/except: pass` seems to work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2689206",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-2689206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 2689206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkyMDY=",
    "user": {
      "login": "haridsv",
      "id": 166486,
      "node_id": "MDQ6VXNlcjE2NjQ4Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/166486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haridsv",
      "html_url": "https://github.com/haridsv",
      "followers_url": "https://api.github.com/users/haridsv/followers",
      "following_url": "https://api.github.com/users/haridsv/following{/other_user}",
      "gists_url": "https://api.github.com/users/haridsv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haridsv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haridsv/subscriptions",
      "organizations_url": "https://api.github.com/users/haridsv/orgs",
      "repos_url": "https://api.github.com/users/haridsv/repos",
      "events_url": "https://api.github.com/users/haridsv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haridsv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-09T23:19:41Z",
    "updated_at": "2011-11-09T23:19:41Z",
    "author_association": "NONE",
    "body": "You are right, though there is an exception, it still works. Not a nice\nworkaround, but better than restarting the ipython shell. Thanks for\nsuggesting it.\n\nOn Wed, Nov 9, 2011 at 1:20 PM, Min RK <\nreply@reply.github.com>wrote:\n\n> OSX - I just tried it on Linux, and I see the same issue as you, but\n> wrapping the seek in `try/except: pass` seems to work.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/972#issuecomment-2687527\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3030822",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-3030822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 3030822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzA4MjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T10:56:38Z",
    "updated_at": "2011-12-06T10:56:38Z",
    "author_association": "MEMBER",
    "body": "Mmh, I wonder if we should more aggressively try to restore stdin state after %run.  This is such an exotic case that I'm a little hesitant to introduce special code there, but at the same time, we do fail where plain python works. If you run @haridsv's original example above in a plain python shell with `execfile('t.py')`, you can do it multiple times and it works just fine, while we don't.\n\nSo I think this is indeed a legitimate bug on our side.  I'm going to bump it to 0.13 b/c it's not really material to mess with so close to a release, but later we can come back to it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7297496",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-7297496",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 7297496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTc0OTY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-27T04:47:38Z",
    "updated_at": "2012-07-27T04:47:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Despite the previous comment, I am not able to run the provided test script `t.py` multiple times in a plain python shell.  I think our behavior is the same as regular Python in that `%run` does little more than just call `execfile` with some namespace preparation.\n\nBut, don't despair... in Python 3 (both in the regular shell and in IPython) one can \"execfile\" (i.e., `exec(compile(open(\"t.py\").read(), \"t.py\", 'exec'))`) and `%run t.py` and have the desired behavior:\n\n```\nPython 3.2.3 (default, May  3 2012, 15:51:42) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.13 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: run tst.py\na\na\nb\n b\n\nIn [2]: run tst.py\na\na\nb\n b\n```\n\n(Notice also that the echoing is a little different...)\n\nFor this reason I don't think we should pursue aggressively restoring `sys.stdin`, and hence suggest that we close this issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7305243",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-7305243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 7305243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDUyNDM=",
    "user": {
      "login": "haridsv",
      "id": 166486,
      "node_id": "MDQ6VXNlcjE2NjQ4Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/166486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haridsv",
      "html_url": "https://github.com/haridsv",
      "followers_url": "https://api.github.com/users/haridsv/followers",
      "following_url": "https://api.github.com/users/haridsv/following{/other_user}",
      "gists_url": "https://api.github.com/users/haridsv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haridsv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haridsv/subscriptions",
      "organizations_url": "https://api.github.com/users/haridsv/orgs",
      "repos_url": "https://api.github.com/users/haridsv/repos",
      "events_url": "https://api.github.com/users/haridsv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haridsv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-27T13:32:59Z",
    "updated_at": "2012-07-27T13:32:59Z",
    "author_association": "NONE",
    "body": "It would be really long before a majority would switch over to Python 3 :)\n\nOn Fri, Jul 27, 2012 at 10:17 AM, Bradley M. Froehle <\nreply@reply.github.com\n\n> wrote:\n> \n> Despite the previous comment, I am not able to run the provided test\n> script `t.py` multiple times in a plain python shell.  I think our behavior\n> is the same as regular Python in that `%run` does little more than just\n> call `execfile` with some namespace preparation.\n> \n> But, don't despair... in Python 3 (both in the regular shell and in\n> IPython) one can \"execfile\" (i.e., `exec(compile(open(\"t.py\").read(),\n> \"t.py\", 'exec'))`) and `%run t.py` and have the desired behavior:\n> \n> ```\n> Python 3.2.3 (default, May  3 2012, 15:51:42)\n> Type \"copyright\", \"credits\" or \"license\" for more information.\n> \n> IPython 0.13 -- An enhanced Interactive Python.\n> ?         -> Introduction and overview of IPython's features.\n> %quickref -> Quick reference.\n> help      -> Python's own help system.\n> object?   -> Details about 'object', use 'object??' for extra details.\n> \n> In [1]: run tst.py\n> a\n> a\n> b\n>  b\n> \n> In [2]: run tst.py\n> a\n> a\n> b\n>  b\n> ```\n> \n> (Notice also that the echoing is a little different...)\n> \n> For this reason I don't think we should pursue aggressively restoring\n> `sys.stdin`.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/972#issuecomment-7297496\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302255479",
    "html_url": "https://github.com/ipython/ipython/issues/972#issuecomment-302255479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/972",
    "id": 302255479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI1NTQ3OQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T23:04:33Z",
    "updated_at": "2017-05-17T23:04:33Z",
    "author_association": "MEMBER",
    "body": "Hey there, I'm going through old issues and it seems to me that it makes sense to close this one.\r\n\r\nThough we never got this to work as intended in Python2 (I just tested with IPython 5.3), it seems highly unlikely we will ever introduce new code to make this work on Python2 in the 5.x branch.  As notes, this does work as intended in Python 3, and IPython 6.0 release only support Python3.\r\n\r\nThanks everyone and happy hacking! :bowtie:"
  }
]
