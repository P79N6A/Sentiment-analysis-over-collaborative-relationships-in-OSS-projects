[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2180072",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2180072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2180072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODAwNzI=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-23T16:03:39Z",
    "updated_at": "2011-09-23T16:03:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Dealing with CTRL+C proves to be quite uneasy. First on Windows with Python 2.7, I see all the weird effects described in #625. The root cause might well be a Python bug, see e.g. http://bugs.python.org/issue1677 though in my case the python interpreter exits _immediately_, at the first CTRL+C).\n\nSo here, at the very least we need to trap KeyboardInterrupt in the hook, like it's done for other gui backends (6d5890c).\n\nIn 0dd489f, I also played with the idea of breaking the event loop processing with a first press to CTRL+C, which lets a second CTRL+C raise a proper KeyboardInterrupt and makes you return to the prompt. At this point the event processing is restored in the inputhook thanks to a pre_prompt_hook. I find this behavior to be quite OK (kind of fix for #122).\n\n_But_ that only works when you start IPython with `python.exe ipython.py`!\n If instead you run `ipython.exe`, then no matter what, a CTRL+C will kill the ipython.exe process and leaves its python.exe subprocess and the shell to fight for the stdin... \nIf the shell is the cmd.exe, it will grab all the input until you \"exit\", at which point the python.exe will regain control.\nIf the shell is msys bash, then you have the impression that bash and the remaining python.exe get each a bit of stdin... \nHope my report is not too confusing, because the situation in the console really is ;-)\n\nWhat I ideally would like to achieve is the 0dd489f behavior but also when starting IPython via `ipython.exe`.\nBtw. any hints where to look for the ipython.exe -> python.exe code or design rationale? I suppose there must be a reason why there is a subprocess...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2261731",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2261731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2261731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjE3MzE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-02T11:44:15Z",
    "updated_at": "2011-10-02T11:44:15Z",
    "author_association": "MEMBER",
    "body": "I'm not a Windows user, so I can't help you with the specifics there. I _think_ ipython.exe is something created by Enthought for EPD, so you might want to get in touch with them for how that's put together.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2330158",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2330158",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2330158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAxNTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T02:06:09Z",
    "updated_at": "2011-10-08T02:06:09Z",
    "author_association": "MEMBER",
    "body": "Hey guys, just a quick note: I haven't followed the PR, but right now it doesn't merge cleanly anymore.  Sorry about that, there's been enough churn on master lately that some PRs fell behind.\n\nSo this one needs a rebase before we can proceed further, let us know if you need a hand with that.\n\nUnless you guys have decided you want to take a different approach altogether with a new PR, I'll leave that up to you.  I just want to give you a heads-up b/c I'm starting to map out the landscape to plan for an 0.12 release, and un-mergeable PRs will be obviously an issue there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2331366",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2331366",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2331366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzEzNjY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T10:04:16Z",
    "updated_at": "2011-10-08T10:04:16Z",
    "author_association": "MEMBER",
    "body": "I think a big PR that I merged carelessly may have caused various conflicts, so I'm happy to lend a hand rebasing if you like.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2332740",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2332740",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2332740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzI3NDA=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T16:27:08Z",
    "updated_at": "2011-10-08T16:27:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wanted to rework the changesets anyway to take the feedback into account, so I don't mind rebasing. I'll be able to create a new PR this week-end (or is there a way to associate a second branch or a rebased branch on the same PR?).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2332779",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2332779",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2332779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzI3Nzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T16:39:30Z",
    "updated_at": "2011-10-08T16:39:30Z",
    "author_association": "MEMBER",
    "body": "It's a bit 'impure', but if you rebase a branch and force-push it (i.e. push the new branch with the old name), it updates the pull request accordingly. We do that quite a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2333277",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2333277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2333277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzMyNzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T18:54:10Z",
    "updated_at": "2011-10-08T18:54:10Z",
    "author_association": "MEMBER",
    "body": "Yup, don't worry about rebasing and doing `push --force`.  As long as\nthere's a PR in-process, that's fair game and it simplifies the\nworfklow a lot (much easier than making a chain of PRs every time a\nrebase or other such drastic change is needed).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2338013",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2338013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2338013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzgwMTM=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-09T18:49:37Z",
    "updated_at": "2011-10-09T18:49:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Second iteration of the patchset.\n\nThe first 3 changesets deal with #481:\n- 42c877c simply moves stdin_ready() from inputhookwx.py to inputhook.py\n- a761793 improves stdin_ready() according to the feedback from takluyver\n- 76f9a74 uses a custom inputhook instead of PyQt's qtcore_input_hook\n\nThe last 2 changesets deal with the Qt part of #122:\n- 6ab38c6 allows a first CTRL+C to break the event loop and a second\n  to clear the prompt (at which point event processing resumes)\n- fa66348 obtaining the same behavior on Linux needs a slightly different\n  approach\n\nThe last two are not needed to fix #481, but without them the PyQt4 support seems buggy, as explained in #122.\n\nAs explained in the changesets themselves, I think there are a few technical limitations in ctypes that prevent a single CTRL+C to work as expected, hence the \"two CTRL+C\" approach which I believe is intuitive enough, even more so now that I print after the first CTRL+C:\n\n```\n(event loop interrupted - hit CTRL+C again to clear the prompt)\n```\n\nOpen points:\n1. not tested on Mac\n2. on Linux, an auto-repeat of CTRL+C pressed down leads to the same\n   non-fatal internal error as the one we get without fa66348;\n   (experiment with signal()?)\n3. on Windows, CTRL+C is only dealt with correctly in a cmd.exe shell \n   when running `python ipython.py`, all the other combinations are still\n   problematic (as per #625)\n\nI think only 1. prevents merging, the others could correspond to later improvements.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2338896",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2338896",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2338896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzg4OTY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-09T20:15:35Z",
    "updated_at": "2011-10-09T20:15:35Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot for the updates.  I had some inline comments, once those are handled we'll play further with this guy, it looks like we're getting close to being able to merge it, and it should be in time for 0.12.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2341242",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2341242",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2341242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEyNDI=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-09T21:27:50Z",
    "updated_at": "2011-10-09T21:29:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that enable_qt4() was a bit too long and needed clean-up. \n\nHowever, I think it makes sense to keep inputhook_qt4() and preprompthook_qt4() as subfunctions, so that they can share a variable from a parent function `create_inputhook_qt4()`. I extracted that function into a separate file, like there's one already for most other GUIs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2346949",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2346949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2346949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDY5NDk=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T12:43:25Z",
    "updated_at": "2011-10-10T12:43:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was a bit worried about the use of a 'pre_prompt_hook', as I was not completely sure about the lifetime and scope of the objects involved (is `ipapi.get()` a singleton?). With e3612ec at least, we can safely have multiple sequences of `enable_gui('qt4')  / enable_gui(None)`, should that ever be needed ;-)\n\nBtw, it seems that there's no way to get `enable_gui(None)` via the %gui. Should we add `GUI_NONE = 'none'`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2351932",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2351932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2351932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE5MzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T20:41:41Z",
    "updated_at": "2011-10-10T20:41:41Z",
    "author_association": "MEMBER",
    "body": "On Mon, Oct 10, 2011 at 5:43 AM, Christian Boos\nreply@reply.github.com\nwrote:\n\n> I was a bit worried about the use of a 'pre_prompt_hook', as I was not completely sure about the lifetime and scope of the objects involved (is `ipapi.get()` a singleton?). With e3612ec at least, we can safely have multiple sequences of `enable_gui('qt4')  / enable_gui(None)`, should that ever be needed ;-)\n\nYes, it's a singleton, though now it's spelled get_ipython(); we've\ndeprecated most of the ipapi machinery (tough we've been awful at\nproperly documenting what's where).\n\n> Btw, it seems that there's no way to get `enable_gui(None)` via the %gui. Should we add `GUI_NONE = 'none'`?\n\nThat sounds like a good idea, yes.  If we're making %gui a user-facing\nway to control that machinery, might as well expose all of it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2361493",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2361493",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2361493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE0OTM=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T13:49:10Z",
    "updated_at": "2011-10-11T13:49:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "While working on the open point [2. auto-repeat of CTRL+C leads to an internal error](#issuecomment-2338013), I found a solution  which implies some cooperation between set_inputhook, clear_inputhook and the actual callback (inputhook_qt4). It works fine, I no longer have the internal error, but the problem is that the other GUIs will not see a KeyboardInterrupt anymore. It's not _that_ critical in the sense they were just ignoring it anyway or not handling it at all (cf. #122, #825), but to me this means we can probably do better and extend my two step approach (first CTRL+C to disable the event loop, second to trigger a normal KeyboardInterrupt) to all GUIs, not just Qt...\n\nI think this will lead to a cleaner approach overall.\n\nIf in the meantime someone could test the current state on Mac, this would be interesting as well ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2369116",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2369116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2369116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjkxMTY=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T18:13:02Z",
    "updated_at": "2011-10-11T18:13:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay... so here it goes ;-) \n\nThe last two commits lead to a result I'm much more satisfied with. It also feels more reusable for other GUIs. They are normally _not_ affected by the change, as the set_inputhook() keeps the current semantic and I've introduced a set_safe_inputhook for the new behavior, so far only used for qt4.\n\nIf you look at this PR now, you may want to skip most of the intermediate changes and look at the final inputhook.py and inputhookqt.py files, I think I've documented everything quite clearly ;-) \n\nIf you like the approach, I could try to rebase once more and go to this approach directly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2369270",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2369270",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2369270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjkyNzA=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T18:24:17Z",
    "updated_at": "2011-10-11T18:24:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, just noticed a missing line in the commit message above, the end of the 2nd paragraph should read:\n\nThis should help to address issues #122 _and #825 (however some\ncooperation from the input hook is needed, in particular it should not_\ncatch KeyboardInterrupt and has to be installed using\nset_safe_inputhook). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2444574",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2444574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2444574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ1NzQ=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T17:09:59Z",
    "updated_at": "2011-10-18T17:09:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez: I understand that when I'm about to modify the whole logic about lib/inputhook I should also test the different GUI backends... but I see no chance to do that in the coming weeks. I've set up a new development environment where I will hopefully be able to test PySide in addition to PyQt and maybe Tk and Gtk, but that's about it for now.\n\nSo what I propose is to leave the more ambitious change 1d6e9a0 for a later version, but finish 0fc80df (the next to last changeset, i.e the first simpler approach which doesn't refactor inputhook.py) by adding a missing `ignore_CTRL_C()` and fixing the `get_ipython()` stuff. That sequence of changes only touches the qt4 related code and has no impact on the other GUIs. I should probably rebase that once more for increased clarity.\n\nAbout fixing `get_ipython()` fixing, I'm asking again just to be sure: what is the best approach, reverting 350ecdb (i.e. use `IPython.core.ipapi.get()`) or use `IPython.core.interactiveshell.InteractiveShell.instance()`?\n\nAnd still, even by leaving 1d6e9a0 aside, another blocking factor I see for the merge is that someone needs to test this on a Mac, as I can't do that myself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2445734",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2445734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2445734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU3MzQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T18:51:07Z",
    "updated_at": "2011-10-18T18:51:07Z",
    "author_association": "MEMBER",
    "body": "On Tue, Oct 18, 2011 at 10:09 AM, Christian Boos\nreply@reply.github.com\nwrote:\n\n> @fperez: I understand that when I'm about to modify the whole logic about lib/inputhook I should also test the different GUI backends... but I see no chance to do that in the coming weeks. I've set up a new development environment where I will hopefully be able to test PySide in addition to PyQt and maybe Tk and Gtk, but that's about it for now.\n\nUnderstood.  If there are backends you can't test (say Wx), then let\nus know in the comments after testing the ones you can, and someone\nelse may jump in and help with that part.  Between all of us we should\nbe able to get testing coverage.  Also, don't be shy to ask for this\nkind of help on the -dev list: it's a good way in which someone\noutside can help, simply by providing testing of these interactive\nfeatures on their system.  With fairly low overhead they can make a\nreal contribution to the needs of the core team.\n\n> So what I propose is to leave the more ambitious change 1d6e9a0 for a later version, but finish 0fc80df (the next to last changeset, i.e the first simpler approach which doesn't refactor inputhook.py) by adding a missing `ignore_CTRL_C()` and fixing the `get_ipython()` stuff. That sequence of changes only touches the qt4 related code and has no impact on the other GUIs. I should probably rebase that once more for increased clarity.\n\nYes, in this case a rebase would be a good idea, so the PR is easier\nto analyze and understand.  You can always keep those changes in store\nin another branch, cooking for submission later on as a new PR.\n\n> About fixing `get_ipython()` fixing, I'm asking again just to be sure: what is the best approach, reverting 350ecdb (i.e. use `IPython.core.ipapi.get()`) or use `IPython.core.interactiveshell.InteractiveShell.instance()`?\n\n`ipapi.get` is definitely deprecated, so please go with `instance` for\nnow.  I hope that soon we'll be able to do some cleaning of this api\nmess and more clearly document what's meant to be public/official\ngoing forward.  Sorry you got lost in the weedy jungle we have back\nthere.\n\n> And still, even by leaving 1d6e9a0 aside, another blocking factor I see for the merge is that someone needs to test this on a Mac, as I can't do that myself.\n\nCertainly.  Once this is ready, we can ask for Mac testing, we have\nseveral mac users on the core team.\n\nThanks again for being patient!  With a bit more polish, this will be\nready for merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2486555",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2486555",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2486555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T21:43:51Z",
    "updated_at": "2011-10-21T21:43:51Z",
    "author_association": "MEMBER",
    "body": "Looks pretty good on OSX+PySide, except for at exit, I get an infinite crash loop:\nThe first error:\n\n<pre>\nDo you really want to exit ([y]/n)? \nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"/Users/minrk/dev/py/matplotlib/lib/matplotlib/_pylab_helpers.py\", line 82, in destroy_all\n    manager.destroy()\n  File \"/Users/minrk/dev/py/matplotlib/lib/matplotlib/backends/backend_qt4.py\", line 388, in destroy\n    self._widgetclosed )\nRuntimeError: Internal C++ object (PySide.QtGui.QMainWindow) already deleted.\nError in sys.exitfunc:\n---------------------------------------------------------------------------\nRuntimeError                                  Python 2.7.1: /usr/bin/python\n                                                   Fri Oct 21 14:29:14 2011\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/atexit.pyc in _run_exitfuncs()\n      9 \n     10 import sys\n     11 \n     12 _exithandlers = []\n     13 def _run_exitfuncs():\n     14     \"\"\"run any registered exit functions\n     15 \n     16     _exithandlers is traversed in reverse order so functions are executed\n     17     last in, first out.\n     18     \"\"\"\n     19 \n     20     exc_info = None\n     21     while _exithandlers:\n     22         func, targs, kargs = _exithandlers.pop()\n     23         try:\n---> 24             func(*targs, **kargs)\n        func = <function shutdown at 0x10f765230>\n        global function = undefined\n        global to = undefined\n        global be = undefined\n        global called = undefined\n        global at = undefined\n        global exit = undefined\n     25         except SystemExit:\n     26             exc_info = sys.exc_info()\n     27         except:\n     28             import traceback\n     29             print >> sys.stderr, \"Error in atexit._run_exitfuncs:\"\n     30             traceback.print_exc()\n     31             exc_info = sys.exc_info()\n     32 \n     33     if exc_info is not None:\n     34         raise exc_info[0], exc_info[1], exc_info[2]\n     35 \n     36 \n     37 def register(func, *targs, **kargs):\n     38     \"\"\"register a function to be executed upon normal program termination\n     39 \n\n/Users/minrk/dev/py/matplotlib/lib/matplotlib/_pylab_helpers.pyc in destroy_all()\n     67         #print len(Gcf.figs.keys()), len(Gcf._activeQue)\n     68         manager.destroy()\n     69         gc.collect()\n     70 \n     71     @staticmethod\n     72     def destroy_fig(fig):\n     73         \"*fig* is a Figure instance\"\n     74         for manager in Gcf.figs.values():\n     75             if manager.canvas.figure == fig:\n     76                 Gcf.destroy(manager.num)\n     77 \n     78     @staticmethod\n     79     def destroy_all():\n     80         for manager in Gcf.figs.values():\n     81             manager.canvas.mpl_disconnect(manager._cidgcf)\n---> 82             manager.destroy()\n     83 \n     84         Gcf._activeQue = []\n     85         Gcf.figs.clear()\n     86         gc.collect()\n     87 \n     88     @staticmethod\n     89     def has_fignum(num):\n     90         \"\"\"\n     91         Return *True* if figure *num* exists.\n     92         \"\"\"\n     93         return num in Gcf.figs\n     94 \n     95     @staticmethod\n     96     def get_all_fig_managers():\n     97         \"\"\"\n\n/Users/minrk/dev/py/matplotlib/lib/matplotlib/backends/backend_qt4.pyc in destroy(self=<matplotlib.backends.backend_qt4.FigureManagerQT instance>, *args=())\n    373         else:\n    374             toolbar = None\n    375         return toolbar\n    376 \n    377     def resize(self, width, height):\n    378         'set the canvas size in pixels'\n    379         self.window.resize(width, height)\n    380 \n    381     def show(self):\n    382         self.window.show()\n    383 \n    384     def destroy( self, *args ):\n    385         if self.window._destroying: return\n    386         self.window._destroying = True\n    387         QtCore.QObject.disconnect( self.window, QtCore.SIGNAL( 'destroyed()' ),\n--> 388                                    self._widgetclosed )\n    389         if self.toolbar: self.toolbar.destroy()\n    390         if DEBUG: print \"destroy figure manager\"\n    391         self.window.close()\n    392 \n    393     def set_window_title(self, title):\n    394         self.window.setWindowTitle(title)\n    395 \n    396 class NavigationToolbar2QT( NavigationToolbar2, QtGui.QToolBar ):\n    397     def __init__(self, canvas, parent, coordinates=True):\n    398         \"\"\" coordinates: should we show the coordinates on the right? \"\"\"\n    399         self.canvas = canvas\n    400         self.coordinates = coordinates\n    401         QtGui.QToolBar.__init__( self, parent )\n    402         NavigationToolbar2.__init__( self, canvas )\n    403 \n\nRuntimeError: Internal C++ object (PySide.QtGui.QMainWindow) already deleted.\n</pre>\n\nWhich may be a PySide (I'm using 1.06) or matplotlib (git master) bug, though it does not come up in IPython master, so something in this PR is relevant.\n\nBut the real problem is that this means that QtCore.QCoreApplication.instance() returns None after shutdown, and the crash handler gets itself stuck permanently in this loop:\n\n<pre>\nError in sys.excepthook:\nTraceback (most recent call last):\n  File \"/Users/minrk/dev/ip/mine/IPython/core/crashhandler.py\", line 159, in __call__\n    raw_input(\"Hit <Enter> to quit this message (your terminal may close):\")\nRuntimeError: can't re-enter readline\n\nOriginal exception was:\nTraceback (most recent call last):\n  File \"_ctypes/callbacks.c\", line 313, in 'calling callback function'\n  File \"/Users/minrk/dev/ip/mine/IPython/lib/inputhookqt4.py\", line 84, in inputhook_qt4\n    app.processEvents(QtCore.QEventLoop.AllEvents, 300)\nAttributeError: 'NoneType' object has no attribute 'processEvents'\n---------------------------------------------------------------------------\nAttributeError                                Python 2.7.1: /usr/bin/python\n                                                   Fri Oct 21 14:29:15 2011\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n/Users/minrk/dev/ip/mine/docs/_ctypes/callbacks.c in 'calling callback function'()\n\n/Users/minrk/dev/ip/mine/IPython/lib/inputhookqt4.pyc in inputhook_qt4()\n     69     def inputhook_qt4():\n     70         \"\"\"PyOS_InputHook python hook for Qt4.\n     71 \n     72         Process pending Qt events and if there's no pending keyboard\n     73         input, spend a short slice of time (50ms) running the Qt event\n     74         loop.\n     75 \n     76         As a Python ctypes callback can't raise an exception, we catch\n     77         the KeyboardInterrupt and temporarily deactivate the hook,\n     78         which will let a *second* CTRL+C be processed normally and go\n     79         back to a clean prompt line.\n     80         \"\"\"\n     81         try:\n     82             allow_CTRL_C()\n     83             app = QtCore.QCoreApplication.instance()\n---> 84             app.processEvents(QtCore.QEventLoop.AllEvents, 300)\n     85             if not stdin_ready():\n     86                 timer = QtCore.QTimer()\n     87                 timer.timeout.connect(app.quit)\n     88                 while not stdin_ready():\n     89                     timer.start(50)\n     90                     app.exec_()\n     91                     timer.stop()\n     92             ignore_CTRL_C()\n     93         except KeyboardInterrupt:\n     94             ignore_CTRL_C()\n     95             got_kbdint[0] = True\n     96             print(\"\\nKeyboardInterrupt - qt4 event loop interrupted!\"\n     97                   \"\\n  * hit CTRL+C again to clear the prompt\"\n     98                   \"\\n  * use '%gui none' to disable the event loop\"\n     99                   \" permanently\"\n\nAttributeError: 'NoneType' object has no attribute 'processEvents'\n</pre>\n\n\nwhere the inputhook raises an error, and the crash handler invokes the inputhook for its `Hit <Enter>...` message, repeating forever.\n\nThis points to a general issue - when we inject a custom inputhook, they should probably all be wrapped in a simple try/finally that restores the original, so that errors don't repeat infinitely.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2490304",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2490304",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2490304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTAzMDQ=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-22T14:35:49Z",
    "updated_at": "2011-10-22T14:35:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for testing on Mac!\n\nBoth the original error and the one in my hook have a common cause: assuming the qApp is still alive, which for some reason is not the case here. I'll try to reproduce that issue.\n\nI can check for this situation in the qt4 hook and as you suggested make sure that the hook will unregister itself in case of an error.\n\nAlso in parallel to this set of changes, I continued the work started in 1d6e9a0 for using the two step CTRL+C approach for  all GUIs, and some initial testing has shown that this approach can also work well for gtk and Tk. When this is ready I'll create a second PR in order to keep this one focused on the immediate problem with Qt4 (i.e. fixing #481).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2493026",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2493026",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2493026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMwMjY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-22T22:27:12Z",
    "updated_at": "2011-10-22T22:27:12Z",
    "author_association": "MEMBER",
    "body": "That makes sense.  Can you see why the atexit behavior is not the same with the new code?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2495907",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2495907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2495907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU5MDc=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T16:00:43Z",
    "updated_at": "2011-10-23T16:00:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I installed PySide on Windows  (the latest 1.0.7 installer) and I could reproduce the problem... only when I mistakenly mixed PyQt4 and PySide code! They seem to both share the same instances of Qt libraries and to interfere badly at exit. Are you sure you don't have a  `from PyQt4 import ...` statement somewhere? Or maybe that mixup is in matplotlib, as some other people also noticed a similar issue when using PySide with matplotlib (https://github.com/matplotlib/matplotlib/pull/80#issuecomment-1332707).\n\nIf I only use PySide and don't mix it with PyQt4, then everything works fine (#481 also fixed, no crash at exit), at least on Windows. Next step is to test this in EPD on Windows with matplotlib, and then on Linux...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2497015",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2497015",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2497015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTcwMTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T18:01:38Z",
    "updated_at": "2011-10-23T18:01:38Z",
    "author_association": "MEMBER",
    "body": "Good find, but I am sure that I am not importing both PyQt and PySide, because I don't have both on this machine.  Base on the MPL discussion, it seems like this might be a PySide bug, but there's clearly a way to avoid it, because it doesn't affect IPython master, it only comes up using this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2497046",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2497046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2497046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTcwNDY=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T18:06:19Z",
    "updated_at": "2011-10-23T18:06:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, which version of matplotlib were you using? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2497087",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2497087",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2497087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTcwODc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T18:17:09Z",
    "updated_at": "2011-10-23T18:17:09Z",
    "author_association": "MEMBER",
    "body": "git master\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2498106",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2498106",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2498106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTgxMDY=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T21:44:58Z",
    "updated_at": "2011-10-23T21:44:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I can now also reproduce the above crash on Windows, with matplotlib 1.2.x (2bb91ce).\n\nBut even with ipython master (cb6da34) I get a similar crash at exit:\n\n```\nC:\\Workspace\\src\\git\\ipython>C:\\Dev\\Python27-EPD-7.1\\python.exe ipython.py --pylab qt\nPython 2.7.2 |EPD_free 7.1-2 (32-bit)| (default, Jul  3 2011, 15:13:59) [MSC v.1500 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nWelcome to pylab, a matplotlib-based Python environment [backend: Qt4Agg].\nFor more information, type 'help(pylab)'.\nIPython\\lib\\inputhook.py:195: RuntimeWarning: PyReadline's inputhook can conflict with Qt, causing delays\n            in interactive input. If you do see this issue, we recommend using another GUI\n            toolkit if you can, or disable readline with the configuration option\n            'TerminalInteractiveShell.readline_use=False', specified in a config file or\n            at the command-line\n  RuntimeWarning)\n\nIn [1]: %gui qt\nOut[1]: <PySide.QtGui.QApplication at 0x46cfcb0>\n\nIn [2]: qApp = _\n\nIn [3]: x = randn(10000)\n\nIn [4]: hist(x, 100)\nOut[4]:\n(...\n <a list of 100 Patch objects>)\n\nIn [5]: while True: qApp.processEvents()\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\nC:\\Workspace\\src\\git\\ipython\\<ipython-input-5-d0d3849ef433> in <module>()\n----> 1 while True: qApp.processEvents()\n\nKeyboardInterrupt:\n\nIn [6]:\nDo you really want to exit ([y]/n)?\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"C:\\Dev\\Python27-EPD-7.1\\lib\\atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"c:\\workspace\\src\\git\\matplotlib\\lib\\matplotlib\\_pylab_helpers.py\", line 82, in destroy_all\n    manager.destroy()\n  File \"c:\\workspace\\src\\git\\matplotlib\\lib\\matplotlib\\backends\\backend_qt4.py\", line 388, in destroy\n    self._widgetclosed )\nRuntimeError: Internal C++ object (PySide.QtGui.QMainWindow) already deleted.\nError in sys.exitfunc:\nTraceback (most recent call last):\n  File \"C:\\Dev\\Python27-EPD-7.1\\lib\\atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"c:\\workspace\\src\\git\\matplotlib\\lib\\matplotlib\\_pylab_helpers.py\", line 82, in destroy_all\n    manager.destroy()\n  File \"c:\\workspace\\src\\git\\matplotlib\\lib\\matplotlib\\backends\\backend_qt4.py\", line 388, in destroy\n    self._widgetclosed )\nRuntimeError: Internal C++ object (PySide.QtGui.QMainWindow) already deleted.\n```\n\nBesides, with ipython master there's no event loop integration with PySide. You can however do `while True: qApp.processEvents()` on the command line to check that matplotlib 1.2.x is indeed working fine with PySide (well, until exit that is ;-) ).\n\nI think that having the crash or not depends on the order in which the atexit handlers are run. I use a VisualStudio 2008 build, and perhaps you have a mingw one? In any case, relying on the order of atexit handlers is fragile at best. I see that matplotlib in [backend_qt4.py](https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/backends/backend_qt4.py#L316) tries to detect a `destroy()` of the `FigureManagerQT.window` (the one involved in the crash). But this doesn't work, the signal is not delivered to the `_widgetclosed` method, quite certainly because the objects involved in signal propagation from C++ to Python objects are already gone at that point. See in particular [destroyQCoreApplication](http://qt.gitorious.org/pyside/pyside/blobs/1.0.7/libpyside/pyside.cpp#line134), the PySide atexit handler which starts by doing a `SignalManager::instance().clear()`, then proceeds with a `bm.visitAllPyObjects(&destructionVisitor, &data)` before finishing with a `delete app`... I wouldn't dare using anything from the PySide API past that point!\n\nBottom line: it's a matplotlib issue due to PySide behaving differently than PyQt4, nothing really caused by the changes here. Quite the opposite, PySide is better supported as you get event loop integration and with my last commit da13a62, I handle this crash in a more robust way by unregistering the hook. I get a full crash report however, instead of only the backtrace as above, for some reason.\n\nSuggested fix for matplotlib:\n\n``` diff\ndiff --git a/lib/matplotlib/backends/backend_qt4.py b/lib/matplotlib/backends/backend_qt4.py\nindex c85b4b3..64a737e 100644\n--- a/lib/matplotlib/backends/backend_qt4.py\n+++ b/lib/matplotlib/backends/backend_qt4.py\n@@ -382,6 +382,7 @@ class FigureManagerQT( FigureManagerBase ):\n         self.window.show()\n\n     def destroy( self, *args ):\n+        if QtGui.QApplication.instance() is None: return\n         if self.window._destroying: return\n         self.window._destroying = True\n         QtCore.QObject.disconnect( self.window, QtCore.SIGNAL( 'destroyed()' ),\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2498233",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2498233",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2498233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTgyMzM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T22:14:11Z",
    "updated_at": "2011-10-23T22:14:11Z",
    "author_association": "MEMBER",
    "body": "Wow, I don't know how I managed that bad report.  You are right, master doesn't work at all in PySide.\n\nAnd I do know the reason that it's a crash in your branch, and a traceback in master.  I fixed that bug last week:  d5548fa4ae0857e28569289b5cafdf55bb0a3eff\n\nIf you rebase on master (I just did, it went cleanly), you will just get a traceback.  I'm fine with this, then, as it is indeed a matplotlib and/or PySide bug, and doesn't crash IPython.  I recomend sending your fix upstream to matplotlib, as it seems clean.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2558761",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2558761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2558761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTg3NjE=",
    "user": {
      "login": "cboos",
      "id": 153279,
      "node_id": "MDQ6VXNlcjE1MzI3OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cboos",
      "html_url": "https://github.com/cboos",
      "followers_url": "https://api.github.com/users/cboos/followers",
      "following_url": "https://api.github.com/users/cboos/following{/other_user}",
      "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cboos/subscriptions",
      "organizations_url": "https://api.github.com/users/cboos/orgs",
      "repos_url": "https://api.github.com/users/cboos/repos",
      "events_url": "https://api.github.com/users/cboos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cboos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T17:27:17Z",
    "updated_at": "2011-10-28T17:27:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been able to test this branch with PyQt, PySide, Tk, Wx, Gtk on Windows and Linux, and also with pylab on both platforms. The test suite passes on both platforms as well. mrink tested pylab with pyside for the Mac. Now all looks good i.e. #481 is fixed for PyQt4 and PySide, no ill side-effects...\n\nIs there anything else I should do? I wonder if I should rework the patchset once more in order to have fewer and only \"clean\" changesets inside. And one thing I'm unsure about is the impact on py3k support... I don't know exactly what the current status is supposed to be, but I couldn't get master to work with Python 3.2.2.\n\nOf course there are still a lot of improvements that could be made in the IPython/lib/inputhook\\* area, especially now that I've tested more GUI backends and I see that they could also benefit from this new approach. But I'll save this for another PR (continuing on http://github.com/cboos/ipython/commits/inputhook-refactoring).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2560084",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2560084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2560084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjAwODQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T19:25:31Z",
    "updated_at": "2011-10-28T19:25:31Z",
    "author_association": "MEMBER",
    "body": "Python 3 support should be working in master. What problems are you seeing? I'll grab a fresh checkout and have a look.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2560392",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2560392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2560392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjAzOTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T19:53:40Z",
    "updated_at": "2011-10-28T19:53:40Z",
    "author_association": "MEMBER",
    "body": "Great, let's wait for @takluyver's report on py3 before we make any final decisions on this one.  But it's looking very close to ready for merge, thanks @cboos for the work and patience!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2560482",
    "html_url": "https://github.com/ipython/ipython/pull/815#issuecomment-2560482",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/815",
    "id": 2560482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA0ODI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T20:02:02Z",
    "updated_at": "2011-10-28T20:02:02Z",
    "author_association": "MEMBER",
    "body": "Master seems to be working fine in Python 3.2.2 (give or take #939, which I've just opened, but that's a minor problem). I don't think I've experienced the problem this PR aims to solve, so I'm not sure if I can usefully test it.\n"
  }
]
