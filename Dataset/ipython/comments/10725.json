[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/319320547",
    "html_url": "https://github.com/ipython/ipython/issues/10725#issuecomment-319320547",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10725",
    "id": 319320547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTMyMDU0Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T09:34:59Z",
    "updated_at": "2017-08-01T09:34:59Z",
    "author_association": "MEMBER",
    "body": "Yeah, it's a recurring problem with our command line config machinery. It tries `ast.literal_eval()` on the values to correctly parse numbers. I don't think it can easily be changed without breaking a lot of other stuff (think `--timeout 30`).\r\n\r\nIt works with an extra set of quotes:\r\n\r\n```\r\nipython -c \"'.1 + .2'\"\r\n```\r\n\r\n(One set of quotes tell bash to keep it as one piece, one set tells Python it's a string)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/319324581",
    "html_url": "https://github.com/ipython/ipython/issues/10725#issuecomment-319324581",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10725",
    "id": 319324581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTMyNDU4MQ==",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T09:52:11Z",
    "updated_at": "2017-08-01T09:53:26Z",
    "author_association": "MEMBER",
    "body": "Perhaps relaxing what `-c` expects would work? It's either a string and if it isn't, then it was `eval`ed (and therefore is the output."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/319431656",
    "html_url": "https://github.com/ipython/ipython/issues/10725#issuecomment-319431656",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10725",
    "id": 319431656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQzMTY1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T16:57:58Z",
    "updated_at": "2017-08-01T16:57:58Z",
    "author_association": "MEMBER",
    "body": "> Perhaps relaxing what -c expects would work? It's either a string and if it isn't, then it was evaled (and therefore is the output.\r\n\r\nIt's complicated with how our traitlet system work. It attempt to parse everything even before it knows about the flag. Technically you can pass infinity of command flag to IPython:\r\n\r\n```\r\n$ ipython --Foo.bar=12.3 -c 'exit()'\r\n```\r\n\r\nIt will work, and `12.3` will be parsed as the number 12.3 and store in the config until it –\r\n eventually – encounter a class `Foo` with a property `bar`. This property may be _defined_ only on the 2nd Thurdays of February of leap years, it does not matter. This is needed to allow IPython to parse config flags for extensions without loading the extensions ahead of time. \r\n\r\nWe could try to special case `-c`, but is it worth the complexity ? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/319603274",
    "html_url": "https://github.com/ipython/ipython/issues/10725#issuecomment-319603274",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10725",
    "id": 319603274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTYwMzI3NA==",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T08:21:35Z",
    "updated_at": "2017-08-02T08:52:09Z",
    "author_association": "MEMBER",
    "body": "@Carreau I was simply considering making `code_to_run` of type `traitlets.Undefined`, and do validation manually (i.e. if it is a string, `exec` it, otherwise output it).\r\n\r\nThe benefit here is of course better conforming to how `python -c` behaves."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/319750845",
    "html_url": "https://github.com/ipython/ipython/issues/10725#issuecomment-319750845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10725",
    "id": 319750845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc1MDg0NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T18:01:50Z",
    "updated_at": "2017-08-02T18:01:50Z",
    "author_association": "MEMBER",
    "body": "Hum, it may work. Do you want to attempt a PR ? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/319892866",
    "html_url": "https://github.com/ipython/ipython/issues/10725#issuecomment-319892866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10725",
    "id": 319892866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTg5Mjg2Ng==",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T07:37:20Z",
    "updated_at": "2017-08-03T07:37:20Z",
    "author_association": "MEMBER",
    "body": "Sorry, not familiar with codebase, and not enough time to code dive."
  }
]
