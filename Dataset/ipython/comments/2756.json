[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11957853",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11957853",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11957853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTU3ODUz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T16:16:30Z",
    "updated_at": "2013-01-07T16:16:30Z",
    "author_association": "MEMBER",
    "body": "This make sens, but I think we are missing the higher issue which is having a **real** credential plugin where login/password information could be stored for multiple user. \nAnd **this** user db woud be responsible for denying loggin for passwordless user.\n\nI always see password in configuration as a workaround for the notebook not the final way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11958454",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11958454",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11958454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTU4NDU0",
    "user": {
      "login": "piti118",
      "id": 591316,
      "node_id": "MDQ6VXNlcjU5MTMxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/591316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piti118",
      "html_url": "https://github.com/piti118",
      "followers_url": "https://api.github.com/users/piti118/followers",
      "following_url": "https://api.github.com/users/piti118/following{/other_user}",
      "gists_url": "https://api.github.com/users/piti118/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piti118/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piti118/subscriptions",
      "organizations_url": "https://api.github.com/users/piti118/orgs",
      "repos_url": "https://api.github.com/users/piti118/repos",
      "events_url": "https://api.github.com/users/piti118/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piti118/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T16:29:15Z",
    "updated_at": "2013-01-07T16:29:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yah I read https://github.com/ipython/ipython/wiki/IPEP-3:-Multiuser-support-in-the-notebook.\n\nAnd I thought that's what the sloan grant is for too http://ipython.org/sloan-grant.html. To implement multiuser properly.\n\nWhat I suggest is just a quick workaround. I have no idea about the timescale. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11962592",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11962592",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11962592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTYyNTky",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T17:58:55Z",
    "updated_at": "2013-01-07T17:58:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@piti118 Is this just to avoid needing to type in your password when you spin up a new `ipython notebook` instance?  If so, we should also use a one-time login token which would authenticate the user w/o a password.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11978841",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11978841",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11978841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTc4ODQx",
    "user": {
      "login": "piti118",
      "id": 591316,
      "node_id": "MDQ6VXNlcjU5MTMxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/591316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piti118",
      "html_url": "https://github.com/piti118",
      "followers_url": "https://api.github.com/users/piti118/followers",
      "following_url": "https://api.github.com/users/piti118/following{/other_user}",
      "gists_url": "https://api.github.com/users/piti118/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piti118/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piti118/subscriptions",
      "organizations_url": "https://api.github.com/users/piti118/orgs",
      "repos_url": "https://api.github.com/users/piti118/repos",
      "events_url": "https://api.github.com/users/piti118/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piti118/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T00:17:51Z",
    "updated_at": "2013-01-08T00:17:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we want to allow remote access with no password too. The point here is that it should not be easily mistaken. Only people who knows what they are doing can turn such thing on(in case he is behind 100 layers of firewall). Token would be nice too but it should still allow no password with no extra setup required on client browser side for localhost access.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11978892",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11978892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11978892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTc4ODky",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T00:20:05Z",
    "updated_at": "2013-01-08T00:20:05Z",
    "author_association": "MEMBER",
    "body": "It sounds like you basically just want to turn the current warning message into an error with override, right?  Not any more complicated security mechanism change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11979001",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11979001",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11979001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTc5MDAx",
    "user": {
      "login": "piti118",
      "id": 591316,
      "node_id": "MDQ6VXNlcjU5MTMxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/591316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piti118",
      "html_url": "https://github.com/piti118",
      "followers_url": "https://api.github.com/users/piti118/followers",
      "following_url": "https://api.github.com/users/piti118/following{/other_user}",
      "gists_url": "https://api.github.com/users/piti118/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piti118/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piti118/subscriptions",
      "organizations_url": "https://api.github.com/users/piti118/orgs",
      "repos_url": "https://api.github.com/users/piti118/repos",
      "events_url": "https://api.github.com/users/piti118/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piti118/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T00:24:20Z",
    "updated_at": "2013-01-08T00:24:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep, instead of simply allow the access yet warn on the console (1 change to default). User must override an extra field (2  changes to default with clear implication) to do something very unsecure. That's all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11982380",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11982380",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11982380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTgyMzgw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T02:52:07Z",
    "updated_at": "2013-01-08T02:52:07Z",
    "author_association": "MEMBER",
    "body": "But I'm not thrilled about adding more configuration complexity to the notebook application.  Why not just ban insecure public notebooks all together?\n\nSent from my iPhone\n\nOn Jan 7, 2013, at 4:24 PM, Piti Ongmongkolkul notifications@github.com wrote:\n\n> Yep, instead of simply allow the access yet warn on the console (1 change to default). User must override an extra field (2 changes to default with clear implication) to do something very unsecure. That's all.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11986394",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11986394",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11986394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTg2Mzk0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T06:38:14Z",
    "updated_at": "2013-01-08T06:38:14Z",
    "author_association": "MEMBER",
    "body": "User can still set an encrypted blank password and we'll still have a hash password not blank, \nso we could refuse to listen on '*' when notebook-password field is blank..\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11989395",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11989395",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11989395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTg5Mzk1",
    "user": {
      "login": "piti118",
      "id": 591316,
      "node_id": "MDQ6VXNlcjU5MTMxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/591316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piti118",
      "html_url": "https://github.com/piti118",
      "followers_url": "https://api.github.com/users/piti118/followers",
      "following_url": "https://api.github.com/users/piti118/following{/other_user}",
      "gists_url": "https://api.github.com/users/piti118/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piti118/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piti118/subscriptions",
      "organizations_url": "https://api.github.com/users/piti118/orgs",
      "repos_url": "https://api.github.com/users/piti118/repos",
      "events_url": "https://api.github.com/users/piti118/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piti118/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T09:02:47Z",
    "updated_at": "2013-01-08T09:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Banning such attempt works too. I just want to have stupid things hard/impossible to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11992515",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-11992515",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 11992515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTkyNTE1",
    "user": {
      "login": "piti118",
      "id": 591316,
      "node_id": "MDQ6VXNlcjU5MTMxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/591316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piti118",
      "html_url": "https://github.com/piti118",
      "followers_url": "https://api.github.com/users/piti118/followers",
      "following_url": "https://api.github.com/users/piti118/following{/other_user}",
      "gists_url": "https://api.github.com/users/piti118/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piti118/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piti118/subscriptions",
      "organizations_url": "https://api.github.com/users/piti118/orgs",
      "repos_url": "https://api.github.com/users/piti118/repos",
      "events_url": "https://api.github.com/users/piti118/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piti118/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T10:46:54Z",
    "updated_at": "2013-01-08T10:51:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is client certificate authentication in IPython/tornado yet? I mean if it's there and user use client certificate authentication, they wouldn't want to type password.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12005069",
    "html_url": "https://github.com/ipython/ipython/issues/2756#issuecomment-12005069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2756",
    "id": 12005069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDA1MDY5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T16:43:02Z",
    "updated_at": "2013-01-08T16:43:02Z",
    "author_association": "MEMBER",
    "body": "We don't have this setup to work with IPython and I am not sure it even\nworks in tornado.\n\nOn Tue, Jan 8, 2013 at 2:46 AM, Piti Ongmongkolkul <notifications@github.com\n\n> wrote:\n> \n> Is client certificate authentication in IPython/tornado yet?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/2756#issuecomment-11992515.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
