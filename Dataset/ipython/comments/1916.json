[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6256118",
    "html_url": "https://github.com/ipython/ipython/issues/1916#issuecomment-6256118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1916",
    "id": 6256118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTYxMTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T21:11:26Z",
    "updated_at": "2012-06-11T21:11:26Z",
    "author_association": "MEMBER",
    "body": "It would be good to have a test for this that doesn't require calling the actual `%paste` itself (we don't want GUI/clipboard issues in the test suite) but at least that exercises its internals, to detect this kind of thing automatically in the future.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6256198",
    "html_url": "https://github.com/ipython/ipython/issues/1916#issuecomment-6256198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1916",
    "id": 6256198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTYxOTg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T21:14:59Z",
    "updated_at": "2012-06-11T21:14:59Z",
    "author_association": "MEMBER",
    "body": "I think a test for `CommandChainDispatcher` should suffice.\n\n`%paste` works fine on Linux, presumably because there's only one function in the chain, so sorting is never an issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6256229",
    "html_url": "https://github.com/ipython/ipython/issues/1916#issuecomment-6256229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1916",
    "id": 6256229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTYyMjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T21:16:17Z",
    "updated_at": "2012-06-11T21:16:17Z",
    "author_association": "MEMBER",
    "body": "We can test it, because it's in the CommandChainDispatcher itself.\n\nI really hate the stricter comparison rules added to Python 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6261972",
    "html_url": "https://github.com/ipython/ipython/issues/1916#issuecomment-6261972",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1916",
    "id": 6261972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjE5NzI=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-12T03:12:44Z",
    "updated_at": "2012-06-12T03:12:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This also would not be an issue if bisect allowed the user to specify a key.  It's easy to add a test.  In fact we just added some tests for CommandChainDispatcher, but never had two functions with the same priority.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6262961",
    "html_url": "https://github.com/ipython/ipython/issues/1916#issuecomment-6262961",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1916",
    "id": 6262961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjI5NjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-12T04:59:58Z",
    "updated_at": "2012-06-12T04:59:58Z",
    "author_association": "MEMBER",
    "body": "Since bisect can't do what's appropriate with the terrible decisions in Python 3, I think we should just skip it and implement it ourself.  There's no reason we need any kind of sorting optimization for a list with single-digit length.\n"
  }
]
