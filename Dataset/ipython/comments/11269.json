[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/416424039",
    "html_url": "https://github.com/ipython/ipython/issues/11269#issuecomment-416424039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11269",
    "id": 416424039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQyNDAzOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T01:49:15Z",
    "updated_at": "2018-08-28T01:49:15Z",
    "author_association": "MEMBER",
    "body": "I believe I see where this is coming from. \r\nWe try to do some magic to let user past code that already have an IPython prompt in the front.\r\n\r\n@takluyver did work on the tokinsation, so may have some more insight, and does have plan to refactor.\r\n\r\nThanks for the exaustive use case, that would be of great help when we work on this. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/431875461",
    "html_url": "https://github.com/ipython/ipython/issues/11269#issuecomment-431875461",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11269",
    "id": 431875461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTg3NTQ2MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-22T15:50:06Z",
    "updated_at": "2018-10-22T15:50:06Z",
    "author_association": "MEMBER",
    "body": "I suspect it's hard to avoid that totally given what we want to do. `... ` is recognised as the continuation prompt from the plain Python interactive shell; we strip that off so you can easily copy/paste examples that have the prompts included. We probably started doing that before `...` became valid Python syntax.\r\n\r\nWe could decide to stop doing that; it would in some senses be more 'correct' not to, because it can mangle valid Python code, as you found. On the other hand, that's still what the prompts in the Python shell look like, I still see examples including the prompts, and there are an unknown number of people using this feature to copy-paste examples without having to remove all the prompts manually. So maybe we just have to write this off as a corner case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/444486291",
    "html_url": "https://github.com/ipython/ipython/issues/11269#issuecomment-444486291",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11269",
    "id": 444486291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDQ4NjI5MQ==",
    "user": {
      "login": "betafcc",
      "id": 27316303,
      "node_id": "MDQ6VXNlcjI3MzE2MzAz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/27316303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/betafcc",
      "html_url": "https://github.com/betafcc",
      "followers_url": "https://api.github.com/users/betafcc/followers",
      "following_url": "https://api.github.com/users/betafcc/following{/other_user}",
      "gists_url": "https://api.github.com/users/betafcc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/betafcc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/betafcc/subscriptions",
      "organizations_url": "https://api.github.com/users/betafcc/orgs",
      "repos_url": "https://api.github.com/users/betafcc/repos",
      "events_url": "https://api.github.com/users/betafcc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/betafcc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T13:33:23Z",
    "updated_at": "2018-12-05T13:33:23Z",
    "author_association": "NONE",
    "body": "I agree it's an unimportant  corner case, most people don't even know `...` is valid syntax at all\r\n\r\nAlso, didn't know I could paste code with prompt :open_mouth: definitely more valuable"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/449603521",
    "html_url": "https://github.com/ipython/ipython/issues/11269#issuecomment-449603521",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11269",
    "id": 449603521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTYwMzUyMQ==",
    "user": {
      "login": "betafcc",
      "id": 27316303,
      "node_id": "MDQ6VXNlcjI3MzE2MzAz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/27316303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/betafcc",
      "html_url": "https://github.com/betafcc",
      "followers_url": "https://api.github.com/users/betafcc/followers",
      "following_url": "https://api.github.com/users/betafcc/following{/other_user}",
      "gists_url": "https://api.github.com/users/betafcc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/betafcc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/betafcc/subscriptions",
      "organizations_url": "https://api.github.com/users/betafcc/orgs",
      "repos_url": "https://api.github.com/users/betafcc/repos",
      "events_url": "https://api.github.com/users/betafcc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/betafcc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T23:18:46Z",
    "updated_at": "2018-12-22T23:19:24Z",
    "author_association": "NONE",
    "body": "Stumbled on this again today, even in strings that looks like console input are stripped:\r\n\r\n![image](https://user-images.githubusercontent.com/27316303/50379267-a9e20380-062c-11e9-8cad-88b0ecb1905e.png)\r\n\r\nBecause of my previous problem, I learned why, ipython applies the `PromptStripper` which receives each cell splitted by lines right? If someone else stumble on this, here's the workaround I'm using:\r\n\r\n![image](https://user-images.githubusercontent.com/27316303/50379307-08f44800-062e-11e9-9adb-58c8c36943bd.png)\r\n\r\nThat is, just remove it by running `get_ipython().input_transformers_cleanup.pop(1)`, 'input_transformers_cleanup' is just an array with the functions that will be run in each line of user input, I'm not sure if the PromptStripper is always in index '1' tho, a bit more safe would be using:\r\n\r\n```python\r\nfrom IPython.core.inputtransformer2 import PromptStripper\r\n\r\nfs = get_ipython().input_transformers_cleanup\r\nfs.remove(next(f for f in fs if isinstance(f, PromptStripper)))\r\n```\r\n\r\nThe elipsis case of my previous problem will work also"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/449604644",
    "html_url": "https://github.com/ipython/ipython/issues/11269#issuecomment-449604644",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11269",
    "id": 449604644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTYwNDY0NA==",
    "user": {
      "login": "betafcc",
      "id": 27316303,
      "node_id": "MDQ6VXNlcjI3MzE2MzAz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/27316303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/betafcc",
      "html_url": "https://github.com/betafcc",
      "followers_url": "https://api.github.com/users/betafcc/followers",
      "following_url": "https://api.github.com/users/betafcc/following{/other_user}",
      "gists_url": "https://api.github.com/users/betafcc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/betafcc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/betafcc/subscriptions",
      "organizations_url": "https://api.github.com/users/betafcc/orgs",
      "repos_url": "https://api.github.com/users/betafcc/repos",
      "events_url": "https://api.github.com/users/betafcc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/betafcc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T23:50:03Z",
    "updated_at": "2018-12-23T00:10:16Z",
    "author_association": "NONE",
    "body": "btw @takluyver now I think It's possible to keep the 'raw console paste' functionality and fix these cases, at least if there is a preprocess step done 'by cell' instead of 'by line' (which I guess there is right? How does autoawait work? Wraps each line in functions?).\r\n\r\nJust made a cell magic as POC, that simply uses `ast.parse` to check for syntax error before checking for leading '>>>' and '...' to strip, probably there are lighter ways to check it, like what is done in `doctest.DocTestFinder` but I am still a total newbie in ipython and a bit in python in general so I can't reach a PR-worthy solution\r\n\r\n\r\n**edit**\r\n\r\nJust noticed it actually works by cell already, so the POC is:\r\n```python\r\nimport ast\r\nfrom IPython.core.inputtransformer2 import PromptStripper\r\n\r\nprev = PromptStripper.__call__\r\n\r\ndef wrapper(self, lines):\r\n    try:\r\n        ast.parse(''.join(lines))\r\n        return lines\r\n    except SyntaxError:\r\n        return prev(self, lines)\r\n\r\nPromptStripper.__call__ = wrapper\r\n```\r\n\r\nseems to work:\r\n![image](https://user-images.githubusercontent.com/27316303/50379631-d9493e00-0635-11e9-808a-95bdfdd97cd2.png)\r\n"
  }
]
