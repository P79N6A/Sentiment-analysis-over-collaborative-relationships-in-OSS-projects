[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4503782",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4503782",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4503782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDM3ODI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T17:50:24Z",
    "updated_at": "2012-03-14T17:50:24Z",
    "author_association": "MEMBER",
    "body": "I prefer \"rawtext\" to \"raw\" as it is a bit more explicit.  Don't know what to think about existing v3 notebooks.  By now, there are a lot of them around.  I think people will be upset if those stop working.  We could increment to v4 or we could add extra code to handle the other name on load.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4505984",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4505984",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4505984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDU5ODQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T19:29:45Z",
    "updated_at": "2012-03-14T19:29:45Z",
    "author_association": "MEMBER",
    "body": "I think we _definitely_ shouldn't increment to v4.  Incrementing the format is immensely painful, and the only reason we merged the new format before was because we decided it was acceptable to change the notebook format in master, not because it was considered final.  We can add some simple checks to allow the 'plaintext' name on input, which will silently be renamed to 'rawtext' in memory / on next save.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506068",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506068",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDYwNjg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T19:33:27Z",
    "updated_at": "2012-03-14T19:33:27Z",
    "author_association": "MEMBER",
    "body": "Also, on the name - as always, redundant code such as `new_text_cell(type='rawtext')` rubs me the wrong way, but I can change it if you like.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506243",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDYyNDM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T19:42:33Z",
    "updated_at": "2012-03-14T19:42:33Z",
    "author_association": "MEMBER",
    "body": "On Wed, Mar 14, 2012 at 12:33 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> Also, on the name - as always, redundant code such as `new_text_cell(type='rawtext')` rubs me the wrong way, but I can change it if you like.\n\nI agree that is a bit redundant - I am less worried about the code\nthan the UI.  How about keep it \"raw\" in the code, but use the name\n\"Raw Text\" in the UI.\n\nCheers,\n\nBrian\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1490#issuecomment-4506068\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506279",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506279",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDYyNzk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T19:43:57Z",
    "updated_at": "2012-03-14T19:43:57Z",
    "author_association": "MEMBER",
    "body": "On Wed, Mar 14, 2012 at 12:29 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> I think we _definitely_ shouldn't increment to v4.  Incrementing the format is immensely painful, and the only reason we merged the new format before was because we decided it was acceptable to change the notebook format in master, not because it was considered final.  We can add some simple checks to allow the 'plaintext' name on input, which will silently be renamed to 'rawtext' in memory / on next save.\n\nYep, incrementing the format is very painful.  As long as the code to\nhandle the old \"plaintext\" name is not too bad, let's do that.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1490#issuecomment-4505984\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506524",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506524",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDY1MjQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T19:55:06Z",
    "updated_at": "2012-03-14T19:55:06Z",
    "author_association": "MEMBER",
    "body": "Okay, rename is now 'plaintext' -> 'rawtext', and old plaintext cells open just fine, and are renamed to rawtext immediately on load (in nb readers / Notebook.fromJSON ).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506600",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDY2MDA=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T19:58:40Z",
    "updated_at": "2012-03-14T19:58:40Z",
    "author_association": "MEMBER",
    "body": "i wanted to chime in with not incrementing nbformat and just changing it at will in master. It makes sense to only increment version numbers AFTER a particular format has made it into an official release\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506836",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506836",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDY4MzY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T20:10:33Z",
    "updated_at": "2012-03-14T20:10:33Z",
    "author_association": "MEMBER",
    "body": "Min, sorry if I wasn't clear before.  I think your usage of the name \"raw\" in the non-user facing code is fine (the nbformat, internal Javascript code, etc.).  I even agree with you that it is redundant to have a text cell that is \"rawtext\".  The only place where I think it makes sense to call it \"rawtext\" is in the UI elements (menu's, keyboard shortcuts, etc.).  In that context, the word \"raw\" alone doesn't indicate that it is a text cell.  But there are only a few places that users see those words.  Does this make sense?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4506872",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4506872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4506872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDY4NzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T20:12:26Z",
    "updated_at": "2012-03-14T20:12:26Z",
    "author_association": "MEMBER",
    "body": "On reading the code, it's really only the _Python_ readers/writers for which it is redundant, and most places where you see cell_type there isn't immediate info that it's also text, so I agree that 'rawtext' is better.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4507072",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4507072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4507072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDcwNzI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T20:22:50Z",
    "updated_at": "2012-03-14T20:22:50Z",
    "author_association": "MEMBER",
    "body": "@ivanov we try to keep the version increments to a minimum, but anytime we make changes to the actual notebook format in master, we have to increment the version, auto update older notebooks etc.  Otherwise users will see confusing and broken behavior.  IOW, the issue is not just with the nbformat # but with the entire format.  If it changes, we run into these issues.  \n\nWhat is difficult is that users are tracking master so closely and using it for basically production usage (myself included).  They want the features of master, but the stability of a stable release nbformat.  Almost the second we make a change, people are using it, sharing notebooks based on it, etc.  I don't know what the best way of handling these things is.\n\nOverall, I am very much -1 on the type of thing we are doing here to avoid incrementing the nbformat because we have to carry those special cases forward for a long time.  The best answer is to probably batch changes to the nbformat and make all of them at once and increment the nbformat # at that time.  If we went with that approach, the current PR would just have to wait until the next batch of nbformat related work and the v4 increment.  The alternative is to tell people \"if you use the dev version of the notebook, you may end up with notebooks that are incompatible with released versions of the notebook.  That doesn't sounds very nice though.  @fperez do you have any thoughts on this important issue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4507107",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4507107",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4507107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDcxMDc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T20:24:18Z",
    "updated_at": "2012-03-14T20:24:18Z",
    "author_association": "MEMBER",
    "body": "OK sounds good.\n\nOn Wed, Mar 14, 2012 at 1:12 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> On reading the code, it's really only the _Python_ readers/writers for which it is redundant, and most places where you see cell_type there isn't immediate info that it's also text, so I agree that 'rawtext' is better.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1490#issuecomment-4506872\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4508914",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4508914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4508914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg5MTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T21:47:29Z",
    "updated_at": "2012-03-14T21:47:29Z",
    "author_association": "MEMBER",
    "body": "I'm actually quite torn, b/c of the flow of things you describe correctly.  But after seeing the amount of usage in the wild of the notebook, I think we really need to become as paranoid as possible with breaking anything on the user side.\n\nPerhaps we'll need to do batching of PRs that affect the format as you suggest, in any case where carrying compatibility codes is hackish.  One thing we should do, is to put all such special-casing code in a single location, so that it can be found easily and removed when no longer needed.  Otherwise those things will linger forever.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4509791",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4509791",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4509791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk3OTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-14T22:31:36Z",
    "updated_at": "2012-03-14T22:31:36Z",
    "author_association": "MEMBER",
    "body": "Okay, per Brian's comments cell_type for raw cells is once again 'raw', but UI says 'Raw Text'.  I still have the full 'rawtext' change stashed if we want that instead.\n\ncommit d2b70d8567e3fa760b437da696506af561d97c60 is the _entire_ change needed to support opening notebooks that use the deprecated 'plaintext' identifier.  one-two lines in three places (NB reader base, .py reader, javascript reader).  For that reason, as well as the very-low usage of this cell type at this point (we have zero examples in the docs), I think this change is acceptable before release.\n\nI think it's quite important that we change this name before releasing anything called 'plaintext', because the logical interpretation of 'plaintext' for a notebook reader and/or writer is _not_ what we mean these cells to be.\n\nHow I would interpret plaintext:  This text should be preserved _after_ rendering the intermediate format (e.g. `<pre>` or literal)\n\nAnd Raw: preserved as untransformed _input_ to the export format (e.g. raw RST, or raw LaTeX).\n\nIf others don't have this perception, then I wouldn't worry about it, and just close this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4511477",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4511477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4511477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTE0Nzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-15T00:22:44Z",
    "updated_at": "2012-03-15T00:22:44Z",
    "author_association": "MEMBER",
    "body": "I agree that 'raw' is a better description of our intent, and I'm +1 on using 'raw' in the code and 'Raw Text' in the UI.\n\nThe changes are indeed pretty small, though I don't know when we'd be OK removing them in the future.  At least we should have a convention to _mark_ such code, so that we can grep for it in the future.  A special comment such as `# version-hack` or somesuch?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4511937",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-4511937",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 4511937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTE5Mzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-15T01:00:37Z",
    "updated_at": "2012-03-15T01:00:37Z",
    "author_association": "MEMBER",
    "body": "I agree with your being +1 on the current PR.  I think the only issue\nis if we want to change how we are handling nbformat issues in\ngeneral.  I agree that minimally we should mark these spots in the\ncode so we can later go back to remove them.  One approach would be to\nsay that we only keep such hacks in the nbformat they first appeared.\nIOW, when we increment to v4 we don't carry the change forward.  I\nthink that would suffice because the older v3 notebooks would be read\nby the v3 code (which has the hacks) and then converted to the v4\nformat (which should never have plaintext cells).\n\nOn Wed, Mar 14, 2012 at 5:22 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> I agree that 'raw' is a better description of our intent, and I'm +1 on using 'raw' in the code and 'Raw Text' in the UI.\n> \n> The changes are indeed pretty small, though I don't know when we'd be OK removing them in the future.  At least we should have a convention to _mark_ such code, so that we can grep for it in the future.  A special comment such as `# version-hack` or somesuch?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1490#issuecomment-4511477\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5130083",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-5130083",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 5130083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzAwODM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T09:32:39Z",
    "updated_at": "2012-04-14T09:32:39Z",
    "author_association": "MEMBER",
    "body": "So guys, what do we do with this one?  It looks like we're OK merging it in its current state, even if it means carrying around a bit of special-casing version-dependent code?  After the last month's events, our notebook user base has probably gone up by a _huge_ amount, which means that breaking things for users is even a worse idea now than when we last discussed it here, about a month ago...\n\nBut we should really make a decision on this one so we can close our PR backlog...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135392",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-5135392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 5135392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzUzOTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T22:58:10Z",
    "updated_at": "2012-04-14T22:58:20Z",
    "author_association": "MEMBER",
    "body": "I didn't add the comments marking the 'plaintext' handling, but I can do that now.  I think the only people this should actually affect are those who were working on the nbformat translators, who should update to use the new key.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135422",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-5135422",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 5135422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU0MjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T23:03:07Z",
    "updated_at": "2012-04-14T23:03:07Z",
    "author_association": "MEMBER",
    "body": "VERSIONHACK comments added\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135975",
    "html_url": "https://github.com/ipython/ipython/pull/1490#issuecomment-5135975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1490",
    "id": 5135975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU5NzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T00:43:45Z",
    "updated_at": "2012-04-15T00:43:45Z",
    "author_association": "MEMBER",
    "body": "Ok, this is going in...\n"
  }
]
