[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/73296444",
    "html_url": "https://github.com/ipython/ipython/issues/4032#issuecomment-73296444",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4032",
    "id": 73296444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjk2NDQ0",
    "user": {
      "login": "msabramo",
      "id": 305268,
      "node_id": "MDQ6VXNlcjMwNTI2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msabramo",
      "html_url": "https://github.com/msabramo",
      "followers_url": "https://api.github.com/users/msabramo/followers",
      "following_url": "https://api.github.com/users/msabramo/following{/other_user}",
      "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions",
      "organizations_url": "https://api.github.com/users/msabramo/orgs",
      "repos_url": "https://api.github.com/users/msabramo/repos",
      "events_url": "https://api.github.com/users/msabramo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msabramo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-06T19:21:45Z",
    "updated_at": "2015-02-06T19:21:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just ran into this as well. It fails silently for me.\n\n@robo-hamburger: Can you post a bit more info on how you figured this out and how you made it work?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/73302539",
    "html_url": "https://github.com/ipython/ipython/issues/4032#issuecomment-73302539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4032",
    "id": 73302539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzAyNTM5",
    "user": {
      "login": "robo-hamburger",
      "id": 202000,
      "node_id": "MDQ6VXNlcjIwMjAwMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/202000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robo-hamburger",
      "html_url": "https://github.com/robo-hamburger",
      "followers_url": "https://api.github.com/users/robo-hamburger/followers",
      "following_url": "https://api.github.com/users/robo-hamburger/following{/other_user}",
      "gists_url": "https://api.github.com/users/robo-hamburger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robo-hamburger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robo-hamburger/subscriptions",
      "organizations_url": "https://api.github.com/users/robo-hamburger/orgs",
      "repos_url": "https://api.github.com/users/robo-hamburger/repos",
      "events_url": "https://api.github.com/users/robo-hamburger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robo-hamburger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-06T20:00:04Z",
    "updated_at": "2015-02-06T20:00:04Z",
    "author_association": "NONE",
    "body": "I never really got cross thread kernel working. Instead a startup the kernel without the loop running to pump events and then just pump them each update in my game. This has the added benefit of the simulation being consistent but I suppose could get weird if you stopped running your own update loop.\n\nFirst you need a way to startup a kernel with no loop see: https://gist.github.com/robo-hamburger/6237530\n\nThen before your start your main loop:\n        self.pump_ipy_event = lambda: None\n\n```\n    self.console_locals = {\n        # I just stuff random things in here so I don't need to import them\n    }\n\n    try:\n        old_stdout = sys.stdout\n        self.pump_ipy_event = embed_kernel_noloop(\n            local_ns=self.console_locals)\n\n        if old_stdout != sys.stdout:\n            sys.stdout = Tee(old_stdout, sys.stdout)\n    except Exception:\n        logging.exception('Failed to initialize ipython')\n```\n\nOnce per frame/update etc:\n        self.pump_ipy_event()\n\nThere maybe better APIs for this now but I haven't checked. I can clean this example up if you need additional help.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/73302732",
    "html_url": "https://github.com/ipython/ipython/issues/4032#issuecomment-73302732",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4032",
    "id": 73302732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzAyNzMy",
    "user": {
      "login": "msabramo",
      "id": 305268,
      "node_id": "MDQ6VXNlcjMwNTI2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msabramo",
      "html_url": "https://github.com/msabramo",
      "followers_url": "https://api.github.com/users/msabramo/followers",
      "following_url": "https://api.github.com/users/msabramo/following{/other_user}",
      "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions",
      "organizations_url": "https://api.github.com/users/msabramo/orgs",
      "repos_url": "https://api.github.com/users/msabramo/repos",
      "events_url": "https://api.github.com/users/msabramo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msabramo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-06T20:01:13Z",
    "updated_at": "2015-02-06T20:01:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting. What I ended up doing that is working okay for me so far is:\n\n``` python\n        with mock.patch('signal.signal'):\n            IPython.embed_kernel(local_ns=namespace)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/73304210",
    "html_url": "https://github.com/ipython/ipython/issues/4032#issuecomment-73304210",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4032",
    "id": 73304210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzA0MjEw",
    "user": {
      "login": "robo-hamburger",
      "id": 202000,
      "node_id": "MDQ6VXNlcjIwMjAwMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/202000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robo-hamburger",
      "html_url": "https://github.com/robo-hamburger",
      "followers_url": "https://api.github.com/users/robo-hamburger/followers",
      "following_url": "https://api.github.com/users/robo-hamburger/following{/other_user}",
      "gists_url": "https://api.github.com/users/robo-hamburger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robo-hamburger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robo-hamburger/subscriptions",
      "organizations_url": "https://api.github.com/users/robo-hamburger/orgs",
      "repos_url": "https://api.github.com/users/robo-hamburger/repos",
      "events_url": "https://api.github.com/users/robo-hamburger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robo-hamburger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-06T20:11:06Z",
    "updated_at": "2015-02-06T20:11:06Z",
    "author_association": "NONE",
    "body": "I will have to remember that hack the next time I need this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/73378453",
    "html_url": "https://github.com/ipython/ipython/issues/4032#issuecomment-73378453",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4032",
    "id": 73378453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzc4NDUz",
    "user": {
      "login": "msabramo",
      "id": 305268,
      "node_id": "MDQ6VXNlcjMwNTI2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msabramo",
      "html_url": "https://github.com/msabramo",
      "followers_url": "https://api.github.com/users/msabramo/followers",
      "following_url": "https://api.github.com/users/msabramo/following{/other_user}",
      "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions",
      "organizations_url": "https://api.github.com/users/msabramo/orgs",
      "repos_url": "https://api.github.com/users/msabramo/repos",
      "events_url": "https://api.github.com/users/msabramo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msabramo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-07T19:17:58Z",
    "updated_at": "2015-02-07T19:17:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "See https://github.com/msabramo/pyramid_ipython_kernel which applies this hack to [Pyramid](http://www.trypyramid.com/) apps.\n"
  }
]
