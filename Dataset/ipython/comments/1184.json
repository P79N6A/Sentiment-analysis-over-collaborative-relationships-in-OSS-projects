[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3215171",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3215171",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3215171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTUxNzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T06:26:41Z",
    "updated_at": "2011-12-20T06:26:41Z",
    "author_association": "MEMBER",
    "body": "@efiring, do you think this could be the same problem as #481?  What backend are you using?  Can you replicate the issue with other backends?  As you can see from the discussion on #481, we're a bit stumped, but obviously we need to do something about it.  Any extra info you may have could help shed some light on the problem...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3215472",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3215472",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3215472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTU0NzI=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T07:11:48Z",
    "updated_at": "2011-12-20T07:11:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fernando,  the symptom is similar in that both involve sluggish response to keystrokes, but I am running linux (ubuntu 11.04), with gtkagg backend.  Also, 481 does not mention what I am seeing: disk activity with every keypress.  The problem occurs in a session with no plotting to the screen at all, and it does not appear immediately, but really seems to result from running a long plot-to-file series.   Once it starts in a given session, it's hopeless--the only thing to do is kill the session and start a new one. I can test tomorrow with a different backend, and with bare ipython console, no --pylab.  The operation that seems to reliably trigger this takes a long time to run, so I can't test quickly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3215933",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3215933",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3215933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTU5MzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T08:22:41Z",
    "updated_at": "2011-12-20T08:22:41Z",
    "author_association": "MEMBER",
    "body": "OK, that's good to know. We'll keep it a separate issue then.  It's a bummer that it takes so long to cause it; as that's going to make it pretty tricky to track  this down.  If you can create a synthetic test that causes it at least we could try to run the same code here...  Definitely knowing whether it happens with any other backend would help at least narrow down whether we have a memory leak in the event loop integration code (which is backend-specific).  Also, it could give you a temporary workaround if another backend doesn't show the problem.\n\nThe reason I'm thinking memory leak is b/c all that disk activity sounds like it could be swapping.  Did you notice the typical symptoms of swapping (other applications getting sluggish, etc)?  I just can't imagine what else could be creating all that disk activity...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3222840",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3222840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3222840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjI4NDA=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T18:21:22Z",
    "updated_at": "2011-12-20T18:21:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fernando,\n\nNo, it's not a memory leak--memory consumption is moderate and \nstable--and it was not swapping, or at least not owing to lack of \nmemory.  Each keypress appears to be causing some sort of on-disk \nlookup.  I know this sounds very strange; even if some file were being \nconsulted, or the directory structure, one would expect it to be largely \nin cache, and therefor not to access the physical disk.  The behavior \nwas clear when I ran into it yesterday; we will see what happens today.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3224797",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3224797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3224797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjQ3OTc=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T20:29:24Z",
    "updated_at": "2011-12-20T20:29:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did a run similar to the one yesterday, except that I used plain \"ipython\", no --pylab, and the slowdown did not appear.  So, it does seem to be related to the gtk input hook.  I was going to try --pylab=tk, but it renders the machine unusable by repeatedly flashing up a plot window in whatever workspace I am trying to use.  The same with --pylab=wx.  I'm now trying --pylab=qt.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3225704",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3225704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3225704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjU3MDQ=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T21:32:06Z",
    "updated_at": "2011-12-20T21:32:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, with --pylab=qt I found yet another pathology: memory consumption increased continuously, putting the system in swap hell.  It definitely did _not_ do that with gtk.  With qt, when I used Ctrl-C to kill the python function, it eventually returned the ipython prompt, but the increasing memory consumption and swapping kept on going until the system recognized another Ctrl-C and again gave me the same prompt.  At this point the ipython process was still holding on to all that memory, but it was not grabbing more, and the response to keyboard input was normal. \n\nThe events involving getting control back included this (starting from the end of the traceback):\n\n<pre>\n/usr/local/lib/python2.7/dist-packages/matplotlib/_pylab_helpers.pyc in destroy(num)\n     68         #print len(Gcf.figs.keys()), len(Gcf._activeQue)\n\n     69         manager.destroy()\n---> 70         gc.collect()\n     71 \n     72     @staticmethod\n\nKeyboardInterrupt: \n\nIn [4]: \nKeyboardInterrupt - Ctrl-C again for new prompt\n\nKeyboardInterrupt\n\nIn [4]: \n</pre>\n\n\nSo the first Ctrl-C was recognized in a gc call, while closing a figure.\n\nI then tried importing gc and running gc.collect from the prompt; this put the system right back in swap hell, with memory first going down very slowly, but then turning around and growing; at that point I had to kill the process.\n\nNext I encapsulated the operation in a script, with matplotlib.use(\"qt4agg\"), and ran that from the command line.  No problem, no memory leak.\n\nThen I ran the same script from within \"ipython --pylab=qt\" using the run magic; still no problem!\n\nThen I ran the script within a new \"ipython --pylab=qt\" using execfile, and the memory leak appeared as expected, just as when running the commands by typing them in. \n\nSo, what is the difference between typing the commands in (or using execfile) and running them as a script via the run magic?  And how does that difference lead to a devastating memory leak in the former case?\n\nLater today I will try to come up with a minimal script to reproduce the problem(s).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3226928",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3226928",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3226928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjY5Mjg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T23:04:32Z",
    "updated_at": "2011-12-20T23:04:32Z",
    "author_association": "MEMBER",
    "body": "Oh boy, this looks ugly.  It would certainly be great to have a way for us to reproduce the problem.  I'm pinging @minrk and @takluyver in case theycan pitch in b/c as of tomorrow morning I'll be offline until the New Year.  Sorry to see you going through this ugly mess, but we've obviously never seen anything like it or we wouldn't have released :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3227279",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3227279",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3227279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjcyNzk=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-20T23:37:52Z",
    "updated_at": "2011-12-20T23:37:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a script that reproduces the memory leak when using execfile but not using run magic, both inside a \"ipython --pylab=qt\" session:\n\n<pre>\nimport matplotlib\nmatplotlib.use(\"qt4agg\")\n\nfrom matplotlib.cbook import report_memory\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef dummyplot():\n    fig = plt.figure()\n    ax = fig.add_subplot(1,1,1)\n    ax.imshow(np.random.rand(50,60), interpolation='nearest')\n    fig.savefig(\"test.png\")\n    plt.close(fig)\n\ndef tester(n=1000):\n    for i in range(n):\n        dummyplot()\n        if i % 10 == 0:\n            print i, report_memory(i)\n\ntester()\n</pre>\n\n\nIf you comment out the second line and \"execfile\" it in a \"ipython --pylab=gtk\" session, there is a very much smaller rate of memory consumption.  Using run magic, there is no leakage.\nSo, we have a way to reproduce the qt big memory leak problem, and the gtk small memory leak problem; unfortunately, this does not yet reproduce the slow keyboard response problem, even when run with 5000 plots.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3232682",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3232682",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3232682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzI2ODI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T11:39:56Z",
    "updated_at": "2011-12-21T11:39:56Z",
    "author_association": "MEMBER",
    "body": "I thought this was about problems when you weren't showing the window? The script you posted just pops up matplotlib windows in whatever workspace I try to use. By the time I managed to kill it, it claims to have opened 220 windows, which was using 167 MB memory (I assume the numbers are in KB).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3236935",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3236935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3236935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzY5MzU=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T17:43:12Z",
    "updated_at": "2011-12-21T17:43:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Whether or not it pops up windows depends on the backend at least, and maybe on the OS.  Who knows, maybe also on window manager settings.  On my ubuntu 11.04 system, with gtkagg and qt4agg backends, it does not pop up windows; with tkagg and wxagg it does.  Hence the targets for identifying the problem are the former two--but do they pop up windows on your system?  I recognize that all this may be pointing to something that needs to be changed in mpl, or possibly jointly in mpl and ipython.  On the other hand, the fact that the problem appears only when the plotting is run via execfile or from the keyboard, and not via \"run\", suggests to me that maybe it can be solved in ipython; or at least that understanding what the difference is may point to what needs to be changed in mpl.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3237320",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3237320",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3237320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzczMjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T18:13:28Z",
    "updated_at": "2011-12-21T18:13:28Z",
    "author_association": "MEMBER",
    "body": "I ran it with execfile in ipython --pylab=qt, as you suggested, but the\nwindows were popping up. It didn't seem to be using excessive memory,\nthough, given how many windows were open.\n\nThis is with Ubuntu 11.10 and matplotlib 1.0.1.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3237921",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3237921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3237921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzc5MjE=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T18:57:00Z",
    "updated_at": "2011-12-21T18:57:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I tried it again, --pylab=qt, and I still don't see any windows, but I do see the bottom panel (horizontal bar showing windows in the present workspace) twitching, so apparently the windows are being opened and closed before they can actually end up on my screen.  This still should not cause any memory consumption at all; each window is being closed before the next one is opened.   Nothing in the test script is keeping a reference to anything that would be generated with each plot.\nWith --pylab=gtk, there is not even any twitching of the bottom panel, and the memory leak is relatively slow.\n\nWhether any of this is related to the problem that originally started this issue is not clear to me, since I still don't have a simple test case illustrating that original problem of slow command response.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3238372",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3238372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3238372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzgzNzI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T19:33:11Z",
    "updated_at": "2011-12-21T19:33:11Z",
    "author_association": "MEMBER",
    "body": "Maybe it's related to the window manager, but in my case they didn't appear\nto be closing. At one point, I tried Alt-tab, and there were dozens of tiny\ntiles for that process group.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3238461",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3238461",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3238461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzg0NjE=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T19:40:19Z",
    "updated_at": "2011-12-21T19:40:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "What window manager are you using?  I'm using metacity, Gnome 2 with no effects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3238496",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3238496",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3238496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzg0OTY=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T19:43:12Z",
    "updated_at": "2011-12-21T19:43:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder whether perhaps closing a figure needs to explicitly do something to trigger handling of window manager events; maybe they are just piling up in the window manager event queue, with some combinations of gui toolkit and window manager.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3238498",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3238498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3238498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzg0OTg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T19:43:29Z",
    "updated_at": "2011-12-21T19:43:29Z",
    "author_association": "MEMBER",
    "body": "I'm using Unity, so I think Compiz is the WM, but I've not checked.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3240234",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3240234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3240234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAyMzQ=",
    "user": {
      "login": "jenshnielsen",
      "id": 548266,
      "node_id": "MDQ6VXNlcjU0ODI2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jenshnielsen",
      "html_url": "https://github.com/jenshnielsen",
      "followers_url": "https://api.github.com/users/jenshnielsen/followers",
      "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions",
      "organizations_url": "https://api.github.com/users/jenshnielsen/orgs",
      "repos_url": "https://api.github.com/users/jenshnielsen/repos",
      "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jenshnielsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T21:56:29Z",
    "updated_at": "2011-12-21T21:56:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I Just tested it on ubuntu11.10. Using unity2D the windows don't open but the do using unity3D (with compiz).\nAll tested using pylab=qt \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3240831",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3240831",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3240831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDA4MzE=",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-21T22:45:26Z",
    "updated_at": "2011-12-21T22:45:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you.  Now that I think about it, it makes sense that they should open, in that this involves plotting in interactive mode, which triggers an immediate draw upon calling plt.figure().  Whether the gui and window manager get around to rendering the window before it is closed is a function of the way they handle a rapid sequence of events, which varies.  So, the real problem is not the rapid-fire opening and closing of windows, for the systems on which this occurs, but rather the continuing memory consumption, which should not occur.  (The solution for the obnoxious windows when all one wants to do is write a png file is to turn off interactive mode.)  The memory leak is not affected by explicit gc.collect(); it is already being called by plt.close(fig).  Instead, either the underlying gui toolkit is leaking, or ipython (or mpl) is holding a growing set of references.  Or both.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3246539",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-3246539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 3246539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDY1Mzk=",
    "user": {
      "login": "jenshnielsen",
      "id": 548266,
      "node_id": "MDQ6VXNlcjU0ODI2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jenshnielsen",
      "html_url": "https://github.com/jenshnielsen",
      "followers_url": "https://api.github.com/users/jenshnielsen/followers",
      "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions",
      "organizations_url": "https://api.github.com/users/jenshnielsen/orgs",
      "repos_url": "https://api.github.com/users/jenshnielsen/repos",
      "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jenshnielsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-22T08:09:01Z",
    "updated_at": "2011-12-22T08:09:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "From my brief tests I don't think that it is really leaking. If you reduce the number to n=100 figures and run it twice\nit only appears to leak memory the first time. In the second run the same memory is used again. So it seems more like the\ngarbage collection is not allowed to run until after the script has finished.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6234538",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-6234538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 6234538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzQ1Mzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T03:03:58Z",
    "updated_at": "2012-06-11T03:03:58Z",
    "author_association": "MEMBER",
    "body": "I'm sorry to do this, but I'm downgrading this to 'high' priority from 'blocker', simply because we can't realistically block the entire release on an issue we have no clue how to fix.\n\nIt's a real bummer, and I hope we'll be able to track what's going on at some point, but absent any progress, we can't stall a release on this.  And in fact, we were violating the 'blocker' marker already since we'd bumped this from 0.11 to 0.12 to 0.13, so if anything I'm just being upfront about what we've already done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10683783",
    "html_url": "https://github.com/ipython/ipython/issues/1184#issuecomment-10683783",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1184",
    "id": 10683783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjgzNzgz",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-24T21:10:45Z",
    "updated_at": "2012-11-24T21:10:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "This issue morphed into a description of other problems, but I think the original problem (heavy disk activity on keyboard input) is a duplicate of #2608.  I haven't been hurt by it recently, probably because I have been working on things that simply haven't triggered it to a noticeable degree.  See also https://github.com/matplotlib/matplotlib/issues/1530.\n"
  }
]
