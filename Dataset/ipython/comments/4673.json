[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30298211",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30298211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30298211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk4MjEx",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T06:41:16Z",
    "updated_at": "2013-12-11T06:41:16Z",
    "author_association": "NONE",
    "body": "... Would need tests and docs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30298278",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30298278",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30298278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk4Mjc4",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T06:43:19Z",
    "updated_at": "2013-12-11T06:43:19Z",
    "author_association": "NONE",
    "body": "- http://pythonhosted.org/setuptools/setuptools.html#dynamic-discovery-of-services-and-plugins\n- http://stackoverflow.com/a/9615473\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30298390",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30298390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30298390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk4Mzkw",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T06:46:30Z",
    "updated_at": "2013-12-11T06:47:43Z",
    "author_association": "NONE",
    "body": "http://ipython.org/ipython-doc/dev/whatsnew/development.html#single-codebase-python-3-support\n\n> We have now switched to a single codebase which runs natively on Python 2.7 and 3.3.\n\nhttp://docs.python.org/3/library/collections.html#collections.OrderedDict is [also] Python 2.7+ \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30298480",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30298480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30298480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk4NDgw",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T06:49:53Z",
    "updated_at": "2013-12-11T06:49:53Z",
    "author_association": "NONE",
    "body": "I'm not sure whether we can assume the presence of setuptools (for `pkg_resources`)? Obviously the build does, but [...].\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30331455",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30331455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30331455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzMxNDU1",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T15:48:52Z",
    "updated_at": "2013-12-11T15:48:52Z",
    "author_association": "MEMBER",
    "body": "thanks for you contribution. I would prefer the magic to be called `%lsext`, since we already have `%ls` and `%lsmagic`. Also would be good to add a note to `%load_ext` docstring about this method, and perhaps even give `%load_ext` a custom completer with this functionality, so tab-completion after `%load_ext` works.\n\nThis involves adding a completer function to `IPython.core.completerlib.py` and registering that function via `self.set_hook(` in `init_completer()` in `IPython.core.interactiveshell.py`\n\nother than that, I'm just wary of having the setuptools stuff involved in registering extensions (I use our relatively new `symlink` setup.py entry point which currently bypasses setuptools, and so wasn't seeing any of the Registered extensions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30332418",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30332418",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30332418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzMyNDE4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T15:58:15Z",
    "updated_at": "2013-12-11T15:58:56Z",
    "author_association": "MEMBER",
    "body": "the other comment I have is that instead of printing, the line magic should probably return a multiline string , the way `lsmagic` does , in case someone wants to do some munging on it, or include it in test... \n\nthis will also make it easier for you to add tests for this functionality ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30333960",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30333960",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30333960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzMzOTYw",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T16:10:59Z",
    "updated_at": "2013-12-11T16:10:59Z",
    "author_association": "NONE",
    "body": "> the other comment I have is that the line magic should probably return a multiline string,\n\nTODO: return an object with a `_repr_pretty_`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30334167",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30334167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30334167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM0MTY3",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T16:12:25Z",
    "updated_at": "2013-12-11T16:12:25Z",
    "author_association": "NONE",
    "body": "> This involves adding a completer function to IPython.core.completerlib.py and registering that function via self.set_hook( in init_completer() in IPython.core.interactiveshell.py\n\nI'm not certain how to handle collisions here for when `%load_ext`-ing modules with the same name.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30343340",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30343340",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30343340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQzMzQw",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T17:46:45Z",
    "updated_at": "2013-12-11T17:53:57Z",
    "author_association": "NONE",
    "body": "In reviewing the additional sections for `[extras_require]` as linked from `ipython_extensions` entrypoints, I'm not sure that these need/should/must be specified here as IPython dependencies. Regardless, there are imports of dependencies for e.g. cythonmagic, octavemagic, rmagic, and sympyprinting (which is already depracated AFAIU) which are not satisfied by `setup.py`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30345699",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30345699",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30345699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ1Njk5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T18:15:01Z",
    "updated_at": "2013-12-11T18:15:08Z",
    "author_association": "MEMBER",
    "body": "> I'm not sure whether we can assume the presence of setuptools.\n\nWe definitely cannot.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30346207",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30346207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30346207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ2MjA3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T18:19:03Z",
    "updated_at": "2013-12-11T18:19:03Z",
    "author_association": "MEMBER",
    "body": "Big -1 on involving setuptools in our extension system in any way. Every time we touch that package, we end up with more headaches. Same goes for nbconvert exporters.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30347296",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-30347296",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 30347296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ3Mjk2",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T18:27:36Z",
    "updated_at": "2013-12-11T18:27:36Z",
    "author_association": "NONE",
    "body": "> I'm not sure whether we can assume the presence of setuptools.\n\nAm I correct in determining that almost every invocation of setup.py (and thus every tox and travis-ci build) touches setuptools?\n\nhttps://github.com/ipython/ipython/blob/master/setup.py#L249\n\n> Big -1 on involving setuptools in our extension system in any way. Every time we touch that package, we end up with more headaches. Same goes for nbconvert exporters.\n\nThat is unfortunate. Are there contending proposals for solving the use cases mentioned in the description of this PR? (should I file an issue?)\n\n> It would be great if it was possible for:\n> \n> **1.a. users to detect which extensions are [loaded, registered, in IPYTHONDIR] at runtime (%lsext)**\n> 1.b. developers to 'register' third-party extensions as ipython_extensions in their setup.py (ipython_extensions)\n> \n> _2.a. users to use third-party exporter 'plugins'_ [through the nbconvert console]\n> 2.b. developers to 'register' third-party exporters as ipython_exporters in their setup.py (ipython_exporters)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33301549",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-33301549",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 33301549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAxNTQ5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T21:41:53Z",
    "updated_at": "2014-01-25T21:41:53Z",
    "author_association": "MEMBER",
    "body": "@fperez can you looks at this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33302605",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-33302605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 33302605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAyNjA1",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T22:27:45Z",
    "updated_at": "2014-01-25T22:27:45Z",
    "author_association": "NONE",
    "body": "... rebased to master\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33853710",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-33853710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 33853710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODUzNzEw",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-31T23:34:24Z",
    "updated_at": "2014-01-31T23:34:24Z",
    "author_association": "MEMBER",
    "body": "As mentioned above, we have a strict policy of avoiding setuptools at all costs as a default dependency. It is a necessary one in some contexts/platforms, but in as much as possible, we keep the core of IPython setuptools-free (and on a *nix box, it's still possible to install IPython with zero setuptools involvement).\n\nFurthermore, this PR effectively brings Python package management tools into IPython itself. The Python packaging problem is an immensely problematic minefield, which despite some recent progress (at last!), is still very much not cleaned up.\n\nRather than adding IPython-specific tools for package management, we'll defer to more generic solutions appearing over time in the Python space.  Hopefully as that dust settles, the stdlib will develop tools and best practices that are 100% used by default by the whole community, and IPython users can just follow suit, rather than having a homebrew solution.\n\nWe've tried to make IPython extensions as close as possible to standard python packages, and we may actually have already gone a bit further away than necessary. These days, we really try as hard as possible not to create new IPython-specific special cases, so I'm afraid we won't follow this idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33897405",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-33897405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 33897405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk3NDA1",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T10:47:38Z",
    "updated_at": "2014-02-02T10:47:38Z",
    "author_association": "NONE",
    "body": "Thank you for your consideration. I wasn't able to find any issues pertaining to registration or introspection of installed extensions for purposes of reproducibility. (Obviously the burden of responsibility falls upon notebook authors to specify which versions of which extensions were installed from where.)\n\nIt may be helpful for a guide to #reproducibility with IPython to specify such requirements.\n\nPart of the desire to have a plugin model here was for alternate converters. For example, there are many ways to represent IPython notebooks in HTML slide form.\n\nI am not certain with how to proceed with such a contentious proposition.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33910748",
    "html_url": "https://github.com/ipython/ipython/pull/4673#issuecomment-33910748",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4673",
    "id": 33910748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTEwNzQ4",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T20:04:08Z",
    "updated_at": "2014-02-02T20:04:08Z",
    "author_association": "MEMBER",
    "body": "The idea is that all of what you're proposing can, and should, be explored outside IPython. Creating new html converters is relatively easy, it's just a matter of writing a custom template that does things differently at export time. We even have an [entire repository](https://github.com/ipython/nbconvert-examples) with such examples to get you started.\n\nI would suggest you create a small standalone repo/project where you explore these ideas. You're welcome to mention it and discuss it on the [-dev list](http://mail.scipy.org/mailman/listinfo/ipython-dev), where I know many folks are interested in these topics, and where we keep the broader conversations about things that matter to the IPython project at large.\n\nThat will allow you to be creative and to move forward, without bottlenecking on what we are doing deep in the core.  And if over time, ideas/tools/code from that exploration prove to be solid, sustainable and widely adopted, we're always happy to revisit them and consider if some of them might be appropriate for shipping by default with IPython.\n\nThink of this process as identical to getting something in the Python stdlib: these days, they'll tell you to make a new project, put it up on pypi, and let a few years of maturation go by. If after a while it becomes clear that project X is really becoming the 'default' tool that plugs a well-recognized hole in the stdlib, and the codebase looks maintainable enough so it doesn't become a burden on the python core team, then they will consider it for inclusion.\n\nWe're very much in the same boat as python-core with regards to IPython...\n\nAnd it's important that you realize this is actually _good_ for you: with a fresh, new project, you have the freedom to experiment, try new approaches, break things often, etc.  That's a luxury we do _not_ have with IPython anymore, and it is actually limiting in serious ways. For a problem like computational reproducibility where the right answers aren't really clear yet, I'm convinced the benefits of this freedom to explore will vastly outweigh the slight loss in visibility that comes with not being in the core.\n"
  }
]
