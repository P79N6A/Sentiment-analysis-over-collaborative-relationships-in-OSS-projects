[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236184",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-236184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 236184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE4NA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:35Z",
    "updated_at": "2010-05-10T09:34:35Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Brian Granger, on 2009-04-24 22:56:21.616906+00:00 ]\n\nWe are now finding ipython using platutils.find_cmd, but we still see this error.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236185",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-236185",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 236185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE4NQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:36Z",
    "updated_at": "2010-05-10T09:34:36Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Brian Granger, on 2009-04-25 22:24:37.298541+00:00 ]\n\nHere is an IPython session showing this bug:\n\nIn [4]: from IPython.platutils import find_cmd              \n\nIn [5]: from IPython.platutils import get_long_path_name    \n\nIn [6]: cmd = find_cmd('ipython')                           \n\nIn [7]: cmd  \nOut[7]: 'C:\\Python25\\Scripts\\ipython.exe'                \n\nIn [8]: _ip.IP.getout  \n_ip.IP.getoutput      _ip.IP.getoutputerror                 \n\nIn [8]: _ip.IP.getoutput(cmd+' obj_del.py')  \nOut[8]: ''                                                  \n\nIn [9]: _ip.IP.getoutput('ipython obj_del.py')  \nOut[9]: ''                                                  \n\nI spent some time looking around and getoutput uses genutils.getoutput, which uses os.popen.  The odd thing is when I use os.popen3, to get the stderr, it hangs and when I use CTRL-C to abort, IPython crashes hard. :-(\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236186",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-236186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 236186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE4Ng==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:37Z",
    "updated_at": "2010-05-10T09:34:37Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Jörgen Stenarson, on 2009-04-26 08:10:57+00:00 ]\n\nBrian Granger skrev:\n\n> Here is an IPython session showing this bug:\n> \n> In [4]: from IPython.platutils import find_cmd              \n> \n> In [5]: from IPython.platutils import get_long_path_name    \n> \n> In [6]: cmd = find_cmd('ipython')                           \n> \n> In [7]: cmd  \n> Out[7]: 'C:\\Python25\\Scripts\\ipython.exe'  \n> This exe file is some easy_install magic which has caused me some \n> problems before. Why not try to do a call to python ipython.py instead?\n> \n> In [8]: _ip.IP.getout  \n> _ip.IP.getoutput      _ip.IP.getoutputerror                 \n> \n> In [8]: _ip.IP.getoutput(cmd+' obj_del.py')  \n> Out[8]: ''                                                  \n> \n> In [9]: _ip.IP.getoutput('ipython obj_del.py')  \n> Out[9]: ''                                                  \n> \n> I spent some time looking around and getoutput uses genutils.getoutput,\n> which uses os.popen.  The odd thing is when I use os.popen3, to get the\n> stderr, it hangs and when I use CTRL-C to abort, IPython crashes hard.\n> :-(\n> This crash may be related to the problem I have seen with ipython.exe \n> before. There have been some threads on the lists about this problem \n> before. Basically the ipython.exe launches a new process that starts a \n> python process that runs ipython. But the original process still sees \n> any ctrl-c action you do and shuts down. My recomendation is to not use \n> ipython.exe at all.\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236187",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-236187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 236187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE4Nw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:34:37Z",
    "updated_at": "2010-05-10T09:34:37Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Brian Granger, on 2009-04-27 20:57:20+00:00 ]\n\nAhh, that may be it.  I will give this a shot.\n\nBrian\n\nOn Sun, Apr 26, 2009 at 1:10 AM, Jörgen Stenarson\njorgen.stenarson@bostream.nu wrote:\n\n> Brian Granger skrev:\n> \n> > Here is an IPython session showing this bug:\n> > \n> > In [4]: from IPython.platutils import find_cmd\n> > \n> > In [5]: from IPython.platutils import get_long_path_name\n> > \n> > In [6]: cmd = find_cmd('ipython')\n> > \n> > In [7]: cmd\n> > Out[7]: 'C:\\Python25\\Scripts\\ipython.exe'\n> > This exe file is some easy_install magic which has caused me some\n> > problems before. Why not try to do a call to python ipython.py instead?\n> > \n> > In [8]: _ip.IP.getout\n> > _ip.IP.getoutput      _ip.IP.getoutputerror\n> > \n> > In [8]: _ip.IP.getoutput(cmd+' obj_del.py')\n> > Out[8]: ''\n> > \n> > In [9]: _ip.IP.getoutput('ipython obj_del.py')\n> > Out[9]: ''\n> > \n> > I spent some time looking around and getoutput uses genutils.getoutput,\n> > which uses os.popen.  The odd thing is when I use os.popen3, to get the\n> > stderr, it hangs and when I use CTRL-C to abort, IPython crashes hard.\n> > :-(\n> > This crash may be related to the problem I have seen with ipython.exe\n> > before. There have been some threads on the lists about this problem\n> > before. Basically the ipython.exe launches a new process that starts a\n> > python process that runs ipython. But the original process still sees\n> > any ctrl-c action you do and shuts down. My recomendation is to not use\n> > ipython.exe at all.\n> \n> /Jörgen\n> \n> ## \n> \n> test_magic.test_obj_del fails on win32\n> https://bugs.launchpad.net/bugs/366334\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> test_obj_del fails on win32 because getoutput is called like this:\n> \n> IP.getoutput('ipython obj_del.py')\n> \n> But on Windows, the ipython executable is not found.  This causes stdout to be empty\n> and stderr to have an error saying that ipython can't be found.\n> \n> # \n> \n> ## FAIL: Test that object's **del** methods are called on exit.\n> \n> Traceback (most recent call last):\n>  File \"c:\\python24\\lib\\site-packages\\nose-0.10.4-py2.4.egg\\nose\\case.py\", line 182, in runTest\n>    self.test(*self.arg)\n>  File \"c:\\python24\\external\\ipython\\IPython\\tests\\test_magic.py\", line 86, in test_obj_del\n>    nt.assert_equals(out,'obj_del.py: object A deleted')\n> AssertionError: '' != 'obj_del.py: object A deleted'\n> \n> > > raise self.failureException, \\\n> > >          (None or '%r != %r' % ('', 'obj_del.py: object A deleted'))\n> \n> ---\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974566",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-974566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 974566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDU2Ng==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T16:38:58Z",
    "updated_at": "2011-04-08T16:38:58Z",
    "author_association": "MEMBER",
    "body": "@jstenar, can you see if this problem still exists?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1187271",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-1187271",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 1187271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODcyNzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-17T01:50:13Z",
    "updated_at": "2011-05-17T01:50:13Z",
    "author_association": "MEMBER",
    "body": "This test is currently skipped on Windows, but letting it run, it does pass for me.  The neighboring test_tclass that is also skipped in Windows still fails.\n\nIt does depend on win32api, so it still needs that conditional on it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1256724",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-1256724",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 1256724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTY3MjQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-29T11:05:40Z",
    "updated_at": "2011-05-29T11:05:40Z",
    "author_association": "MEMBER",
    "body": "If this is passing on Windows now, can we remove the skip_win32 decorator and close the issue? If test_tclass still fails, should we leave this issue open for it, or start a new one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1258168",
    "html_url": "https://github.com/ipython/ipython/issues/59#issuecomment-1258168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/59",
    "id": 1258168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTgxNjg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-29T20:58:44Z",
    "updated_at": "2011-05-29T20:58:44Z",
    "author_association": "MEMBER",
    "body": "@takluyver, I'd remove the deco, close this one, and open a clean one for tclass if that fails, simply with a link to this one in there in case it's useful to read some of this discussion when thinking about the tclass one.\n"
  }
]
