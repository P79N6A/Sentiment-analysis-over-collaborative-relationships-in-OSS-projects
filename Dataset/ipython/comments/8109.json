[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84482289",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84482289",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84482289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDgyMjg5",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T00:38:58Z",
    "updated_at": "2015-03-22T00:59:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I was able to reproduce this issue. I'm guessing the difference is that the rename dialog changes focus from the cells to the field. Therefore, makes sense that  `dd`, `j`, `k`, `a`, etc don't work. In the other modals, there is no such change of focus, so we are still able to modify the cells in command mode.\n\nUPDATE: Actually, the .focus() is intended but for some reason, it is not working. I tried to dismiss the \"About IPython\" modal pressing Enter and doesn't work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84490837",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84490837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84490837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDkwODM3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T01:28:29Z",
    "updated_at": "2015-03-22T01:28:29Z",
    "author_association": "MEMBER",
    "body": "There's more to it than focus - dialog does explicitly call `keyboard_manager.disable()`:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/html/static/base/js/dialog.js#L119\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84500676",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84500676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84500676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTAwNjc2",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T02:38:22Z",
    "updated_at": "2015-03-22T02:55:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay. I think I'm starting to understand. It seems there is no `keyboard_manager` instance being passed to `dialog.modal`. According to the documentation, modal can receive a `keyboard_manager` property, but look at the file `about.js` as an example:\n\nabous.js:25\n\n```\n    dialog.modal({\n        title: 'About IPython Notebook',\n        body: body,\n        buttons: { 'OK': {} }\n    });\n```\n\nInitially I thought that `edit_metadata` was doing things differently (in notebook.js:383), however, I'm not sure because now I see that every dialog object consists of `edit_metadata`, `modal` and `kernel_modal`.\nIf you test the \"Edit Notebook Metadata\" option in the notebook, that works correctly. The modal is dismissed after pressing enter and the keyboard is disabled. So maybe we need to add the instance of `keyboard_manager` as an option in `dialog.modal`. What is the difference between creating a modal using `dialog.edit_metadata` and using `dialog.modal`? This is the code that confused me:\n\n```\n/**\n * Display a dialog that allows the user to edit the Notebook's metadata.\n */\nNotebook.prototype.edit_metadata = function () {\n    var that = this;\n    dialog.edit_metadata({\n        md: this.metadata, \n        callback: function (md) {\n            that.metadata = md;\n        },\n        name: 'Notebook',\n        notebook: this,\n        keyboard_manager: this.keyboard_manager});\n};\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84509423",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84509423",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84509423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTA5NDIz",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T03:11:29Z",
    "updated_at": "2015-03-22T03:11:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, there are some inconsistencies. \"Edit Notebook Metadata\" seems to work okay \"always\". \"Keyboard Shortcuts\"  works correctly the first time but after that, the `keyboard_manager` is enabled and the focus is on the cells. \"About IPython Notebook\" doesn't work correctly in any situation. Can you replicate this in those modals?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84558182",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84558182",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84558182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTU4MTgy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T08:35:17Z",
    "updated_at": "2015-03-22T17:22:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was able to find the solution for a couple of modals.\n\nIn `about.js`, I added the keyboard manager to `dialog.model`:\n\n```\ndialog.modal({\n         title: 'About IPython Notebook',\n         body: body,\n         buttons: { 'OK': {} },\n         notebook: IPython.notebook,\n         keyboard_manager: IPython.keyboard_manager,\n     });\n```\n\nI'm not sure if you prefer to use the IPython object in some other way, but since this is for testing purposes, I guess it is okay.\n\nIn `quickhelp.js`, there is an issue with this method:\n\n```\n QuickHelp.prototype.show_keyboard_shortcuts = function () {\n         /**\n         * toggles display of keyboard shortcut dialog\n         */\n         var that = this;\n         if ( this.force_rebuild ) {\n             this.shortcut_dialog.remove();\n             delete(this.shortcut_dialog);\n             this.force_rebuild = false;\n         }\n```\n\nI don't think `this.force_build` is being defined, so that part never runs. That code is supposed to clean the previous modal and in this case, it refreshes the values for the keyboard manager. I included the property in the constructor:\n\n```\nvar QuickHelp = function (options) {\n    /**\n     * Constructor\n     *\n     * Parameters:\n     *  options: dictionary\n     *      Dictionary of keyword arguments.\n     *          events: $(Events) instance\n     *          keyboard_manager: KeyboardManager instance\n     *          notebook: Notebook instance\n     */\n    this.keyboard_manager = options.keyboard_manager;\n    this.notebook = options.notebook;\n    this.keyboard_manager.quick_help = this;\n    this.events = options.events;\n    this.force_rebuild = false;\n};\n```\n\nand included the line `this.force_rebuild = true;` at the end of the method.\n\nHowever, I haven't been able to find what is the problem with the restart button in the toolbar. Interestingly, restarting the kernel using `Kernel->Restart` disables the keyboard manager correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84682754",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84682754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84682754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjgyNzU0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T19:26:27Z",
    "updated_at": "2015-03-22T19:26:27Z",
    "author_association": "MEMBER",
    "body": "Aha, the fact that the same dialog works when launched from the menu gives me a clue. The toolbar uses an action, and the callback for that action does:\n\n``` javascript\nenv.notebook.restart_kernel();\nenv.notebook.focus_cell();\n```\n\nI guess that the focus_cell() call re-enables the keyboard manager after the dialog is shown. @Carreau, is there a reason we're doing that?\n\nUnfortunately, this doesn't tell me why I'm having focus problems in cite2c, where I don't call focus_cell().\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84707202",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84707202",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84707202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzA3MjAy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T21:08:50Z",
    "updated_at": "2015-03-22T21:08:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, commenting out `env-notebook.focus_cell();` maintains the keyboard manager disabled but then when the browser reaches this code (dialog.js:93):\n\n```\n    modal.on(\"shown.bs.modal\", function() {\n        setTimeout(function() {\n            footer.find(\"button\").last().focus();\n            if (options.open) {\n                $.proxy(options.open, modal)();\n            }\n        }, 0);\n```\n\nThe keyboard manager is enabled again. Commenting out `focus()` solves the issue but creates many bugs in the process.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84708963",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84708963",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84708963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzA4OTYz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T21:32:35Z",
    "updated_at": "2015-03-22T21:32:35Z",
    "author_association": "MEMBER",
    "body": "Hmm, thanks for investigating that. I'm hoping @Carreau, @jdfreder or @minrk will chip in, as they're all more familiar with the JS stuff than I am.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84817160",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-84817160",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 84817160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODE3MTYw",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T05:38:08Z",
    "updated_at": "2015-03-23T06:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I figured it out. The problem is in `keyboardmanager.js:190`:\n\n```\nKeyboardManager.prototype.register_events = function (e) {\n    var that = this;\n    var handle_focus = function () {\n        that.disable();\n    };\n    var handle_blur = function () {\n        that.enable();\n    };\n    e.on('focusin', handle_focus);\n    e.on('focusout', handle_blur);\n```\n\nAfter you click on any button, the `focusin` event is triggered followed by the `focus` event and finally `focusout` is activated. In our case, we need to keep the property `enabled=false` of the keyboard manager until the modal is dismissed. However, after `focusout`, `handle_blur` sets `enabled=true` and then we are able to change the cells even when the modal is active. Here `register_events` is passing the element `div#maintoolbar-container`, so this applies to the buttons of the toolbar and that's the difference between restarting the kernel from the menu and using the toolbar.\n\nHow should we fix this? I suppose disabling keyboard interactions before focus and enabling them again after focus was needed in some special case. Does anyone remember what the issue was that required this behavior?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85118116",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85118116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85118116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTE4MTE2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T17:37:13Z",
    "updated_at": "2015-03-23T17:37:13Z",
    "author_association": "MEMBER",
    "body": "Aha, thanks for working that out.\n\nShort term: @Carreau, should we really be calling `register_events` on the whole toolbar? The buttons don't need keyboard focus, and the fact that they get it has led to other bugs. Maybe we should be using `register_events` on the specific elements that need keyboard interaction instead.\n\nLonger term: I've come across a similar issue before, when displaying one dialog immediately after another. The general pattern is that two things are disabling and enabling the keyboard manager in a pattern like this:\n\n```\n    ----interaction 1----\ndisable               enable\n    |             |     |                    |\n               disable                     enable\n                  ---------interaction 2------\n```\n\nI think what we need is a mechanism for 're-enable the keyboard manager if I was the last thing to disable it'. One way to implement this would be something like a focus system - so in this case, focus would be transferred from the notebook to the toolbar to the dialog, and once the dialog is focussed the toolbar doesn't put the focus back on the notebook.\n\nPing @ellisonbg because I recall you worked on the complexities of the keyboard manager stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85136189",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85136189",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85136189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTM2MTg5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T18:36:05Z",
    "updated_at": "2015-03-23T18:36:05Z",
    "author_association": "MEMBER",
    "body": "I've put this on the agenda for tomorrow's dev meeting.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85156915",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85156915",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85156915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTU2OTE1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:24:17Z",
    "updated_at": "2015-03-23T19:24:17Z",
    "author_association": "MEMBER",
    "body": "> I guess that the focus_cell() call re-enables the keyboard manager after the dialog is shown. @Carreau, is there a reason we're doing that?\n\nYes, we had complaint that clicking on button was loosing cell focus. \n\nSo either we do allow button to have focus and tell user they have to click back in input area.\nOr we try to fight browser focus in some cases.\n\n> Short term: @Carreau, should we really be calling register_events on the whole toolbar? The buttons don't need keyboard focus, and the fact that they get it has led to other bugs. Maybe we should be using register_events on the specific elements that need keyboard interaction instead.\n\nI'm fine with removing register_events on toolbar. I don't remember the reason. \nI think it might have been for more complex elements like Jon's filter. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85158962",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85158962",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85158962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTU4OTYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T19:29:01Z",
    "updated_at": "2015-03-23T19:29:01Z",
    "author_association": "MEMBER",
    "body": "> Yes, we had complaint that clicking on button was loosing cell focus. \n\nI remember that for the save button, but for e.g. restart kernel, where it brings up a dialog, we don't want the cell to be focussed again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85180661",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85180661",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85180661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTgwNjYx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T20:30:31Z",
    "updated_at": "2015-03-23T20:30:31Z",
    "author_association": "MEMBER",
    "body": "@takluyver the easiest way is to just keep a count of disables, decrement it on enable, and at 0 actually enable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85200943",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85200943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85200943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjAwOTQz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-23T21:16:00Z",
    "updated_at": "2015-03-23T21:16:00Z",
    "author_association": "MEMBER",
    "body": "I thought of that too, though we'd need a way to bypass the counter and force it enabled, because the disable/enable pairs are not completely reliable - see #7565.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85337873",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85337873",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85337873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MzM3ODcz",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T04:52:24Z",
    "updated_at": "2015-03-24T04:52:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver \n\n> Maybe we should be using register_events on the specific elements that need keyboard interaction instead.\n\nI think that is the best option.\n\nThere is another very simple solution. In `toolbar.js:133`:\n\n```\n            button.attr('data-jupyter-action', action_name);\n            var fun = el.callback|| function(){\n                button.blur();\n                that.actions.call(action_name)\n            };\n```\n\nThis is forcing `blur();` on the buttons before calling the action (in this case,  `restart_kernel`). The pattern is the following: enabling the keyboard (before modal), disabling the keyboard (when showing the modal), enabling the keyboard (after hiding the modal). Since this change applies to all the buttons of the toolbar, the pattern is the same.\n\nBy the way, when you say you have seen a similar issue with dialogs, maybe that is a different problem because modals are supposed to be removed after termination (or equivalently, destroyed after initializing another modal), right?\n\nI don't think `focus_cell()` is enabling the keyboard. It seems to be selecting the cell and applying focus:\n\nnotebook.js:712 \n\n```\nfunction () {\n    var cell = this.get_selected_cell();\n    if (cell === null) {return;}  // No cell is selected\n    cell.focus_cell();\n }\n```\n\n(`cell.focus_cell()` is simply `this.element.focus();`) That must be the reason why it didn't change anything associated to the keyboard manager when I removed that line (after forcing `.blur();`)\n\n> I remember that for the save button, but for e.g. restart kernel, where it brings up a dialog, we don't want the cell to be focused again.\n\nUhm, but I believe that is the default behavior in master. I'm assuming `focus();` only selects a cell in command mode.\n\n@Carreau Maybe `env.notebook.focus_cell();` is not needed anymore because I removed it in the restart_kernel action and didn't notice any difference. By the way, I haven't seen issues regarding focus after clicking on a button, but if we need to add `focus_cell()`, that shouldn't be a problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85573867",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-85573867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 85573867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTczODY3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T15:57:30Z",
    "updated_at": "2015-03-24T15:57:30Z",
    "author_association": "MEMBER",
    "body": "Ouch, this stuff is soo painful and difficult. <close eyes and pretend it\njust goes away>\n\nI will be at the dev meeting today to talk about this, but in general I\nthink:\n- We should not focus elements. We might even want to remove the tabindex\n  from our cell divs to completely get rid of this issue. This would allow us\n  to add more intelligent animated scrolling.\n- We should try to transition into registering our keyboard shortcuts on\n  the notebook div, rather than the whole page. We will have to do this\n  anyways when we enable the notebook to be embedded into a phosphor panel.\n\nOn Mon, Mar 23, 2015 at 9:52 PM, rsmith31415 notifications@github.com\nwrote:\n\n> @takluyver https://github.com/takluyver\n> \n> Maybe we should be using register_events on the specific elements that\n> need keyboard interaction instead.\n> \n> I think that is the best option.\n> \n> There is another very simple solution. In toolbar.js:133:\n> \n> ```\n>         button.attr('data-jupyter-action', action_name);\n>         var fun = el.callback|| function(){\n>             button.blur();\n>             that.actions.call(action_name)\n>         };\n> ```\n> \n> This is forcing blur(); on the buttons before calling the action (in this\n> case, restart_kernel). The pattern is the following: enabling the\n> keyboard (before modal), disabling the keyboard (when showing the modal),\n> enabling the keyboard (after hiding the modal). Since this change applies\n> to all the buttons of the toolbar, the pattern is the same.\n> \n> By the way, when you say you have seen a similar issue with dialogs, maybe\n> that is a different problem because modals are supposed to be removed after\n> termination (or equivalently, destroyed after initializing another modal),\n> right?\n> \n> I don't think focus_cell() is enabling the keyboard. It seems to be\n> selecting the cell and applying focus:\n> \n> notebook.js:712\n> \n> function () {\n>     var cell = this.get_selected_cell();\n>     if (cell === null) {return;}  // No cell is selected\n>     cell.focus_cell();\n>  }\n> \n> (cell.focus_cell() is simply this.element.focus();) That must be the\n> reason why it didn't change anything associated to the keyboard manager\n> when I removed that line (after forcing .blur();)\n> \n> I remember that for the save button, but for e.g. restart kernel, where it\n> brings up a dialog, we don't want the cell to be focused again.\n> \n> Uhm, but I believe that is the default behavior in master. I'm assuming\n> focus(); only selects a cell in command mode.\n> \n> @Carreau https://github.com/Carreau Maybe env.notebook.focus_cell(); is\n> not needed anymore because I removed it in the restart_kernel action and\n> didn't notice any difference. By the way, I haven't seen issues regarding\n> focus after clicking on a button, but if we need to add focus_cell(),\n> that shouldn't be a problem.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8109#issuecomment-85337873.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/317219176",
    "html_url": "https://github.com/ipython/ipython/issues/8109#issuecomment-317219176",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8109",
    "id": 317219176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzIxOTE3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-23T00:14:44Z",
    "updated_at": "2017-07-23T00:14:44Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  }
]
