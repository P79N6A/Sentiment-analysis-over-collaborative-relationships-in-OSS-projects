[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7506618",
    "html_url": "https://github.com/ipython/ipython/pull/2255#issuecomment-7506618",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2255",
    "id": 7506618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDY2MTg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T00:26:35Z",
    "updated_at": "2012-08-05T00:26:35Z",
    "author_association": "MEMBER",
    "body": "I have tested this and it definitely fixes the behavior with accessing ar.data.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7507552",
    "html_url": "https://github.com/ipython/ipython/pull/2255#issuecomment-7507552",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2255",
    "id": 7507552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDc1NTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T04:06:45Z",
    "updated_at": "2012-08-05T04:06:45Z",
    "author_association": "MEMBER",
    "body": "The code looks good, and since it fixes the problem we should go ahead, but I do have a quick question: do we have None, 0 and -1 all indicating 'infinite' timeout?  If so, can we use only one of them?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7507650",
    "html_url": "https://github.com/ipython/ipython/pull/2255#issuecomment-7507650",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2255",
    "id": 7507650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDc2NTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T04:33:03Z",
    "updated_at": "2012-08-05T04:33:03Z",
    "author_association": "MEMBER",
    "body": "> The code looks good, and since it fixes the problem we should go ahead, but I do have a quick question: do we have None, 0 and -1 all indicating 'infinite' timeout? If so, can we use only one of them?\n\n0 means no waiting at all (the opposite), but None and -1 both indicate infinite waits (None being more Pythonic, but -1 is inherited from the Pool.AsyncResult API, which we copied exactly).\n\nI can unify on -1 for infinite wait, but I think we would have to cast None to -1 anyway, since it makes way more sense for `timeout=None` to mean 'no timeout'.  We cannot unify on None (the more logical choice) if we want to preserve compatibility with pool.AsyncResult.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7507653",
    "html_url": "https://github.com/ipython/ipython/pull/2255#issuecomment-7507653",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2255",
    "id": 7507653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDc2NTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T04:34:42Z",
    "updated_at": "2012-08-05T04:34:42Z",
    "author_association": "MEMBER",
    "body": "I should clarify: after this PR, the `timeout=-1` means infinite wait in all cases.  But we do _allow_ the more logical `timeout=None`, which we cast to -1.  So no changes are actually needed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7508330",
    "html_url": "https://github.com/ipython/ipython/pull/2255#issuecomment-7508330",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2255",
    "id": 7508330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDgzMzA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T07:41:09Z",
    "updated_at": "2012-08-05T07:41:09Z",
    "author_association": "MEMBER",
    "body": "OK, thanks for the clarification.  I had misunderstood the meaning of 0, and I think your reasoning for allowing None (but keeping compatibility with multiprocessing) is sound.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7519305",
    "html_url": "https://github.com/ipython/ipython/pull/2255#issuecomment-7519305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2255",
    "id": 7519305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTkzMDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-06T08:43:17Z",
    "updated_at": "2012-08-06T08:43:17Z",
    "author_association": "MEMBER",
    "body": "OK, I'm leaving #2215 open until we can further clarify if this fully closes it, but merging because it does address the problem of `ar.data` access, which we really need quickly.  Thanks a ton, excellent job!\n"
  }
]
