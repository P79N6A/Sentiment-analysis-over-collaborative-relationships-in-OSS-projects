[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3595684",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3595684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3595684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTU2ODQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-21T11:22:19Z",
    "updated_at": "2012-01-21T11:22:19Z",
    "author_association": "MEMBER",
    "body": "A few thoughts:\n- Note that although we still have the `ip.db` storage for things like the %store magic, 'shadow history' no longer exists.\n- I wonder if it makes sense to integrate this with the %reset magic, which clears the user namespace.\n- I'm not quite sure why someone would want to clear input history. Output history might take a lot of memory, but input history shouldn't cause any problems.\n- If it's in extensions, the test should go in extensions/tests.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3624360",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3624360",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3624360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQzNjA=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-23T23:34:29Z",
    "updated_at": "2012-01-23T23:34:29Z",
    "author_association": "MEMBER",
    "body": "Thanks for taking a look, Thomas.\n\n> Note that although we still have the ip.db storage for things like the %store magic, 'shadow history' no longer exists.\n\ndoes this mean that shadow_nuke and shadow_compress don't really do anything anymore and should be eliminated?\n\n> I wonder if it makes sense to integrate this with the %reset magic, which clears the user namespace.\n\nI was actually wondering why `%clear` used to live as an extension, and not as a built-in magic, maybe @fperez could chime in? It's different than reset, in that it doesn't do anything to the traditional python namespace - it's just dealing with the convenient things IPython provides, so I think keeping them different makes sense.\n\n> I'm not quite sure why someone would want to clear input history. Output history might take a lot of memory, but input history shouldn't cause any problems.\n\nWell, depends on the use case. I can imagine someone pasting in 100s of MB of protein sequences as string literals and then just doing `\"...\".find('elvis')` (i.e. the output can be way smaller than the input for some use cases), so it's not for us to not allow that use case.\n\n> If it's in extensions, the test should go in extensions/tests.\n\n I was just trying to revive this code to eliminate a \"KnownFailure\" in `core/tests/test_magic.py` - which is why I put the other tests into that same file, and not into extensions (though it used to live there). If someone chimes in that it would not be ok to include this as a regular magic, then I'll move all these tests out.  Does that sound good?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3624572",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3624572",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3624572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQ1NzI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-23T23:48:08Z",
    "updated_at": "2012-01-23T23:51:45Z",
    "author_association": "MEMBER",
    "body": "On 23 January 2012 23:34, Paul Ivanov reply@reply.github.com wrote:\n\n> does this mean that shadow_nuke and shadow_compress don't really do anything anymore and should be eliminated?\n\nYes, I think so.\n\n> Well, depends on the use case. I can imagine someone pasting in 100s of MB\n> of protein sequences as string literals and then just doing\n> `\"...\".find('elvis')` (i.e. the output can be way smaller than the input\n> for some use cases), so it's not for us to not allow that use case.\n\nIf I do:\n\n<pre>\nIn [1]: print \"foo\"\nfoo\nIn [2]: %clear in\nIn [3]: print \"bar\"\n</pre>\n\n\nThen `In[1]` would point to `'print \"bar\"'` (which should be `In[3]`). Magics\nlike %save and %macro are similarly affected.\n\nI think we can 'clear' it without messing up the history numbers by doing\nsomething like this:\n\n`self.history_manager.input_hist_parsed[:] = [''] * len(self.history_manager.input_hist_parsed)`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3624647",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3624647",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3624647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQ2NDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-23T23:52:21Z",
    "updated_at": "2012-01-23T23:52:21Z",
    "author_association": "MEMBER",
    "body": "It seems GH doesn't like my markdown today. Hopefully it's clear enough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3624943",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3624943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3624943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQ5NDM=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T00:16:53Z",
    "updated_at": "2012-01-24T00:16:53Z",
    "author_association": "MEMBER",
    "body": "@takluyver - crystal - makes sense, adding your test now and reverting the ['']*len functionality\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3625476",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3625476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3625476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjU0NzY=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T01:05:02Z",
    "updated_at": "2012-01-24T01:05:02Z",
    "author_association": "MEMBER",
    "body": "ok, I've addressed the points Thomas brought up, here's what's left to figure out:\n- If shadow_compress and shadow_nuke really don't affect anything, remove them\n- either move tests to extensions/tests or make this a 'native' magic\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3626077",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3626077",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3626077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjYwNzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T01:52:27Z",
    "updated_at": "2012-01-24T01:52:27Z",
    "author_association": "MEMBER",
    "body": "> - If shadow_compress and shadow_nuke really don't affect anything, remove them\n\nI honestly don't remember what their purpose was when they were introduced.  I suggest doing a careful grin code-wide to see if anything turns up that uses them.  If it's only in quarantine or deathrow, we'll have a look.  If there's nothing, nuke them.  And if any significant use case turns up, we'll also have a more careful look.\n\n> - either move tests to extensions/tests or make this a 'native' magic\n\nI'm fine with it being 'native', I think it was an extension also just for accidental historical reasons.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3629015",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3629015",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3629015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkwMTU=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T08:25:16Z",
    "updated_at": "2012-01-24T17:57:06Z",
    "author_association": "MEMBER",
    "body": "> I honestly don't remember what their purpose was when they were introduced. I suggest doing a careful grin code-wide to see if anything turns up that uses them. If it's only in quarantine or deathrow, we'll have a look.\n\nthis. `quarantine/ipy_jot.py` has the following lines:\n\n```\n  # which one works better?\n  #all = ip.shadowhist.all()\n  all = ip.shell.history_manager.input_hist_parsed\n```\n\nOther than that, shadowhist isn't referenced or used anywhere else in the entire code. I'll just nuke it an remove the comments from the excerpt above.\n\n> I'm fine with it being 'native', I think it was an extension also just for accidental historical reasons.\n\noops, turns out there's already a `%clear` magic defined in `zmq/zmqshell.py` - which clears the screen for qtconsole and console. Proposed solutions:\n1. rename previously quarantined `clear` to `clean`\n2. incorporate quarantined clear functionality into `reset`\n3. combine the two magics called `clear` - currently, the quarantined version is a noop when called with no args - but this could clear the screen - whereas the screen clearing one does the same thing regardless of the arguments you give it. This is kind of nice for the single-process terminal side, since !clear and %clear would have the same meaning.\n4. something else?\n\nI like 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3632691",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3632691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3632691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzI2OTE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T14:01:50Z",
    "updated_at": "2012-01-24T14:01:50Z",
    "author_association": "MEMBER",
    "body": "Shadow history was a secondary history system that stored all your input, but in no particular order (like a persistent set), when the main history system only stored a limited number of entries. I combined the two when I rewrote history to use SQLite. At some point, we'll need some functionality to truncate the SQLite history, but it's low priority, and the code will be nothing like that for shadow history.\n\nI prefer 2 (integrating it with reset). Both are about releasing data stored in memory. Running all of the 'clear' options here gets you close to what %reset does. It seems much more confusing to combine the purely aesthetic 'clear screen' with this 'clear data'.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3638134",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3638134",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3638134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgxMzQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T18:58:23Z",
    "updated_at": "2012-01-24T18:58:23Z",
    "author_association": "MEMBER",
    "body": "On Tue, Jan 24, 2012 at 6:01 AM, Thomas\nreply@reply.github.com\nwrote:\n\n> I prefer 2 (integrating it with reset). Both are about releasing data stored in memory. Running all of the 'clear' options here gets you close to what %reset does. It seems much more confusing to combine the purely aesthetic 'clear screen' with this 'clear data'.\n\nAgreed: they should be grouped by functionality (namespace vs screen)\nrather than by name.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3648133",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3648133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3648133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDgxMzM=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-25T09:50:42Z",
    "updated_at": "2012-01-25T09:50:42Z",
    "author_association": "MEMBER",
    "body": " overruled :) I've moved incorporated this into the %reset magic.\n\nAlso made the two reset magics reference one another via \"See also\".\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3648673",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3648673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3648673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDg2NzM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-25T10:46:05Z",
    "updated_at": "2012-01-25T10:46:05Z",
    "author_association": "MEMBER",
    "body": "Great, thanks. I'll try to test this this evening.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3661493",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3661493",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3661493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjE0OTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-25T23:31:06Z",
    "updated_at": "2012-01-25T23:31:06Z",
    "author_association": "MEMBER",
    "body": "This seems to be working OK in Python 2.7 and 3.2.\n\nOne remaining point - could we make the argument case insensitive? Because the variables are `In` and `Out`, I tend to find myself doing `%reset In` and `%reset Out`. It would also fit with magics like `%colors`, which also involve choosing from a small set of possible arguments.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3661912",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3661912",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3661912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjE5MTI=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T00:03:53Z",
    "updated_at": "2012-01-26T00:03:53Z",
    "author_association": "MEMBER",
    "body": "Thanks for taking a look, Thomas. Yeah, I thought about making\nthe parameters case insensitive, too, but decided that it might\nbecome confusing for people who might think you can reset any\nnamed variable.\n\nHow about I'll just make it case insensitive, but we keep the\nexamples lower cased, as they are.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3662086",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3662086",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3662086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIwODY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T00:16:59Z",
    "updated_at": "2012-01-26T00:16:59Z",
    "author_association": "MEMBER",
    "body": "Sounds good to me. @fperez , this is good to go as far as I'm concerned.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3663786",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3663786",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3663786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjM3ODY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T03:19:23Z",
    "updated_at": "2012-01-26T03:19:23Z",
    "author_association": "MEMBER",
    "body": "My only suggestion is to break up the `test_reset_args` into 4 separate functions, pretty much according to the blocks that are in there already.  Since there's no real coupling between them, more granularity makes it easier to debug problems if something breaks, as each test is effectively a probe of a different part of the code.  Note that you don't even need to create manually `_ip`, as that object is always available during the test suite for convenience.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3664720",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3664720",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3664720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ3MjA=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T05:45:04Z",
    "updated_at": "2012-01-26T05:45:04Z",
    "author_association": "MEMBER",
    "body": "ok, makes sense, done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3664930",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3664930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3664930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ5MzA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T06:19:58Z",
    "updated_at": "2012-01-26T06:19:58Z",
    "author_association": "MEMBER",
    "body": "Great, thanks.  Running test suite now, if all passes will merge in a minute.  Great job!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3700443",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3700443",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3700443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDA0NDM=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T14:13:52Z",
    "updated_at": "2012-01-28T14:13:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this merge broke the sphinx doc generation:\n\n```\nFile \"/build/buildd/ipython-0.12+2291/docs/sphinxext/docscrape.py\", line 208, in parse_item_name\n    raise ValueError(\"%s is not a item name\" % text)\nValueError: %reset_selective is not a item name\n```\n\nI have no idea of sphinx so I can't really debug this. But if I remove all the % from the reset\\* lines in IPython/core/magic.py it works again.\n\nfull log\nhttps://launchpadlibrarian.net/91276130/buildlog_ubuntu-oneiric-i386.ipython_0.12%2B2291-0~5~oneiric1_FAILEDTOBUILD.txt.gz\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3700672",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3700672",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3700672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDA2NzI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T14:37:30Z",
    "updated_at": "2012-01-28T14:37:30Z",
    "author_association": "MEMBER",
    "body": "From the log, I note this is occurring in a function called\n_parse_see_also(). Presumably the See also sections expect an object name.\nI wonder if we can use reST syntax like:\n\n`%reset <magic_reset>`\n\n(GH will take the backticks as markdown - this should appear correctly by\nemail)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3700796",
    "html_url": "https://github.com/ipython/ipython/pull/1309#issuecomment-3700796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1309",
    "id": 3700796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDA3OTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T14:48:02Z",
    "updated_at": "2012-01-28T14:48:02Z",
    "author_association": "MEMBER",
    "body": "See PR #1338\n"
  }
]
