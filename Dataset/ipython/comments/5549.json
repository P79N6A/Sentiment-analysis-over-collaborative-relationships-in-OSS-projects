[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39870420",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-39870420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 39870420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODcwNDIw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-08T16:31:12Z",
    "updated_at": "2014-04-08T16:31:12Z",
    "author_association": "MEMBER",
    "body": "It's probably not going to possible to detach widgets into separate browser windows for a long time; however, in 2.0 and master there is a `PopupWidget` which allows you to pop the widget out of the widget area (see the variable inspector example) in a movable, and resizable pseudo window.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39879714",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-39879714",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 39879714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODc5NzE0",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-08T17:50:29Z",
    "updated_at": "2014-04-08T17:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is that because of some technical limitation? even if it's not built into IPython, do you think one could customize the notebook to enable this feature? It seems like it's possible to open a new window or tab with Javascript and have a way to communicate with it, using something like `window.opener`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39882261",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-39882261",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 39882261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODgyMjYx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-08T18:12:57Z",
    "updated_at": "2014-04-08T21:22:48Z",
    "author_association": "MEMBER",
    "body": "It's complicated by WebSockets - [here's a link I found online discussing it some more](http://stackoverflow.com/questions/10886910/how-to-maintain-a-websockets-connection-between-pages).  I think you could definitely do it, you would just need to proxy the comm messages to that new window (using `window.opener` like you mentioned).  The widget code itself has no problem living outside of the notebook environment, and shouldn't have to be modified to make this work.  You would probably want to load the notebook's CSS since it includes some necessary styling that you may not want to redefine.  \n\nIt just isn't something on the roadmap right now, but if you'd like we could talk about adding it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/39903076",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-39903076",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 39903076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTAzMDc2",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-08T21:18:09Z",
    "updated_at": "2014-04-08T21:18:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, that's definitely helpful. I'm glad to see that there should be a way to do it. I might give it a try some day.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40069023",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-40069023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 40069023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY5MDIz",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-10T11:48:52Z",
    "updated_at": "2014-04-10T11:48:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is likely that I'll need this feature in a few months. If you agree to put it in your roadmap (say, for 3.0), that'd be great! Otherwise, I might try to start doing it, but I would probably need some help! For example:\n- In JS, how to register a new callback when a comm arrives?\n- what JS libraries would need to be included in the external HTML document?\n- where would I find the JS code that reacts to comm messages and updates the DOM accordingly, and conversely?\n\nSubsidiary question: what about displaying a (detached or not) widget fullscreen? Is it simpler?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40122989",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-40122989",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 40122989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTIyOTg5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-10T18:45:27Z",
    "updated_at": "2014-04-10T18:45:27Z",
    "author_association": "MEMBER",
    "body": "I talked to @ellisonbg today about adding it and he convinced me that it's not something to add to the 3.0 roadmap.'\n\n> In JS, how to register a new callback when a comm arrives?\n\nThe comm manager allows you to register callbacks for comm `target_name`s.  You'll need to register a callback for the `target_name` used by the widget framework, which is `WidgetModel`.\n\n> what JS libraries would need to be included in the external HTML document?\n\nOff the top of my head, \n- everything in https://github.com/ipython/ipython/tree/master/IPython/html/static/widgets/js\n- the compiled IPython *.css files (style and ipython)\n- underscore.js\n- backbone.js\n- require.js\n- jquery\n- jquery ui\n- bootstrap\n\n> where would I find the JS code that reacts to comm messages and updates the DOM accordingly, and conversely?\n\nI wouldn't worry about that too much...  Instead I would worry more about implementing a comm like class that proxied between the notebook and your popout window.  As long as the comm is implemented to spec, the widget framework should work fine.  But just because you asked:\n- https://github.com/ipython/ipython/blob/master/IPython/html/static/widgets/js/manager.js\n- https://github.com/ipython/ipython/blob/master/IPython/html/static/widgets/js/widget.js\n- and a few other files in that folder that have custom msgs, i.e. ButtonWidget\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68150635",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-68150635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 68150635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTUwNjM1",
    "user": {
      "login": "chriddyp",
      "id": 1280389,
      "node_id": "MDQ6VXNlcjEyODAzODk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1280389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriddyp",
      "html_url": "https://github.com/chriddyp",
      "followers_url": "https://api.github.com/users/chriddyp/followers",
      "following_url": "https://api.github.com/users/chriddyp/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriddyp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriddyp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriddyp/subscriptions",
      "organizations_url": "https://api.github.com/users/chriddyp/orgs",
      "repos_url": "https://api.github.com/users/chriddyp/repos",
      "events_url": "https://api.github.com/users/chriddyp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriddyp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-26T17:48:52Z",
    "updated_at": "2014-12-26T17:48:52Z",
    "author_association": "NONE",
    "body": "hey @rossant - did you end up tackling this in any of your projects?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68151758",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-68151758",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 68151758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTUxNzU4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-26T18:14:56Z",
    "updated_at": "2014-12-26T18:14:56Z",
    "author_association": "MEMBER",
    "body": "@chriddyp I've implemented something very similar to this in https://github.com/ipython/ipython/pull/6148 , which is not a complete implementation, but a proof of concept.  It's not on the roadmap for 3 (January's release), but it will be on it for 4 or 5.  The multiple iframe logic is very similar to the logic for multiple windows AFAIK.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69912467",
    "html_url": "https://github.com/ipython/ipython/issues/5549#issuecomment-69912467",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5549",
    "id": 69912467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTEyNDY3",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T13:00:28Z",
    "updated_at": "2015-01-14T13:00:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying to experiment with comm-based communication between the notebook and a popup. @jdfreder here is [an example](http://nbviewer.ipython.org/github/kwikteam/experimental/blob/62a8b4c713420ef50d5d2fc7311c28e43419d5bb/ipynb_window/test_1.ipynb) that doesn't work. I'd like to see a message appearing in the notebook widget when clicking on the popup button. I'm probably missing something fundamental about the architecture.\n\nThis is a ugly hack of course but I'm just trying to understand how things work. Eventually I'll suppose I'll need some global JavaScript object that redirects comms to the relevant widgets. This global variable could be accessible from the popup through `window.opener`.\n"
  }
]
