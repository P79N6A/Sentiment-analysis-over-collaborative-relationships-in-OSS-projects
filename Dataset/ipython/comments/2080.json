[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6706039",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6706039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6706039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDYwMzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-02T11:42:29Z",
    "updated_at": "2012-07-02T11:42:29Z",
    "author_association": "MEMBER",
    "body": "Did you try instanciating QApplication before ? \n\nNote that you might need to do something like :\n\n```\n app=QtGui.QApplication.instance()  # checks if QApplication already exists\n if not app:    # create QApplication if it doesnt exist\n       app = QtGui.QApplication(sys.argv)\n```\n\nas PyQt/PySide do not clear everything at application exit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6706787",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6706787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6706787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDY3ODc=",
    "user": {
      "login": "denisri",
      "id": 1913468,
      "node_id": "MDQ6VXNlcjE5MTM0Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1913468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denisri",
      "html_url": "https://github.com/denisri",
      "followers_url": "https://api.github.com/users/denisri/followers",
      "following_url": "https://api.github.com/users/denisri/following{/other_user}",
      "gists_url": "https://api.github.com/users/denisri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denisri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denisri/subscriptions",
      "organizations_url": "https://api.github.com/users/denisri/orgs",
      "repos_url": "https://api.github.com/users/denisri/repos",
      "events_url": "https://api.github.com/users/denisri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denisri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-02T12:26:40Z",
    "updated_at": "2012-07-02T12:26:40Z",
    "author_association": "NONE",
    "body": "Yes I did, but as in this example I was running the example from ipython --gui=qt, the QApplication is already instantiated by IPython, and the event loop is already running.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6717808",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6717808",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6717808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTc4MDg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-02T19:39:09Z",
    "updated_at": "2012-07-02T19:39:09Z",
    "author_association": "MEMBER",
    "body": "@jdmarch, you guys have the most in-house Qt expertise of the team; any thoughts on this one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6730529",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6730529",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6730529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzA1Mjk=",
    "user": {
      "login": "denisri",
      "id": 1913468,
      "node_id": "MDQ6VXNlcjE5MTM0Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1913468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denisri",
      "html_url": "https://github.com/denisri",
      "followers_url": "https://api.github.com/users/denisri/followers",
      "following_url": "https://api.github.com/users/denisri/following{/other_user}",
      "gists_url": "https://api.github.com/users/denisri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denisri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denisri/subscriptions",
      "organizations_url": "https://api.github.com/users/denisri/orgs",
      "repos_url": "https://api.github.com/users/denisri/repos",
      "events_url": "https://api.github.com/users/denisri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denisri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-03T10:04:36Z",
    "updated_at": "2012-07-03T10:04:36Z",
    "author_association": "NONE",
    "body": "Two precisions:\nI also see the same problem with the new IPython 0.13.\nAnd it also happens on the Mac version of IPython 0.12 (also with python 2.6 and Qt 4.6).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6769695",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6769695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6769695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Njk2OTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-05T00:16:17Z",
    "updated_at": "2012-07-05T00:16:17Z",
    "author_association": "MEMBER",
    "body": "Bummer, I suspect this is going to be a tough one to fix.  These event loop bugs are typically very hard to track down.  Please post any additional insights you may have, as I'm not optimistic about fast progress on this one. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6769821",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6769821",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6769821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Njk4MjE=",
    "user": {
      "login": "jdmarch",
      "id": 278873,
      "node_id": "MDQ6VXNlcjI3ODg3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/278873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdmarch",
      "html_url": "https://github.com/jdmarch",
      "followers_url": "https://api.github.com/users/jdmarch/followers",
      "following_url": "https://api.github.com/users/jdmarch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdmarch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdmarch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdmarch/subscriptions",
      "organizations_url": "https://api.github.com/users/jdmarch/orgs",
      "repos_url": "https://api.github.com/users/jdmarch/repos",
      "events_url": "https://api.github.com/users/jdmarch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdmarch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-05T00:35:48Z",
    "updated_at": "2012-07-05T00:35:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, we have not had time to look at this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6769869",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6769869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6769869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Njk4Njk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-05T00:41:36Z",
    "updated_at": "2012-07-05T00:41:36Z",
    "author_association": "MEMBER",
    "body": "No worries, I don't expect it will be easy :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6920389",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6920389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6920389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjAzODk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T21:30:43Z",
    "updated_at": "2012-07-11T21:30:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the test script.  `git bisect` puts the blame on 76f9a74750ecfe0325aa2d3213b8720b7c584936 which as part of #815.\n\n```\n76f9a74750ecfe0325aa2d3213b8720b7c584936 is the first bad commit\ncommit 76f9a74750ecfe0325aa2d3213b8720b7c584936\nAuthor: Christian Boos <cboos@bct-technology.com>\nDate:   Thu Sep 22 09:59:36 2011 +0200\n\n    inputhook: make PyQt4 plays nicer with pyreadline\n\n    PyQt4's own input hook is not really appropriate when PyReadline is active\n    (and possibly other readline packages running the PyOS_InputHook repeatedly).\n    Arguably this should be fixed in PyQt4 itself, but in the meantime we can\n    install a local hook which does the Qt event loop processing in a less\n    aggressive way.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6921433",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6921433",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6921433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjE0MzM=",
    "user": {
      "login": "denisri",
      "id": 1913468,
      "node_id": "MDQ6VXNlcjE5MTM0Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1913468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denisri",
      "html_url": "https://github.com/denisri",
      "followers_url": "https://api.github.com/users/denisri/followers",
      "following_url": "https://api.github.com/users/denisri/following{/other_user}",
      "gists_url": "https://api.github.com/users/denisri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denisri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denisri/subscriptions",
      "organizations_url": "https://api.github.com/users/denisri/orgs",
      "repos_url": "https://api.github.com/users/denisri/repos",
      "events_url": "https://api.github.com/users/denisri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denisri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T22:11:31Z",
    "updated_at": "2012-07-11T22:11:31Z",
    "author_association": "NONE",
    "body": "OK, so (without looking very thoroughly), I guess it's the \"app.quit\" called from a timer, which probably quits all event loops, including local event loops of modal dialogs. Then restarting with \"app.exec_()\" does not restore local loops where they were, but only the main loop.\nWell, it's just my interpretation...\nSo if I'm right, it probably needs something softer than app.quit()\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6922129",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6922129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6922129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIxMjk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T22:43:40Z",
    "updated_at": "2012-07-11T22:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would expect that the Python-implemented input hook should mostly mimic the C-level input hook, except with our tweaks regarding waiting keyboard input and reduced timeouts.\n\nHowever reading through `python-qt4/sip/QtCore/qcoreapplication.sip`, it is clear that we are only implementing the `Q_OS_WIN32` version of the input hook.\n\nFor example, compare\n\n``` c++\nstatic int qtcore_input_hook()\n{\n    QCoreApplication *app = QCoreApplication::instance();\n\n    if (app && app->thread() == QThread::currentThread())\n    {\n#if defined(Q_OS_WIN32)\n        QTimer timer;\n        QObject::connect(&timer, SIGNAL(timeout()), app, SLOT(quit()));\n\n        do\n        {\n            timer.start(100);\n            QCoreApplication::exec();\n            timer.stop();\n        }\n        while (!_kbhit());\n\n        QObject::disconnect(&timer, SIGNAL(timeout()), app, SLOT(quit()));\n#else\n        QSocketNotifier notifier(0, QSocketNotifier::Read, 0);\n        QObject::connect(&notifier, SIGNAL(activated(int)), app, SLOT(quit()));\n        QCoreApplication::exec();\n        QObject::disconnect(&notifier, SIGNAL(activated(int)), app, SLOT(quit()));\n#endif\n    }\n\n    return 0;\n}\n```\n\nwith https://github.com/ipython/ipython/blob/rel-0.13/IPython/lib/inputhookqt4.py#L88\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6922368",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6922368",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6922368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIzNjg=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T22:55:47Z",
    "updated_at": "2012-07-11T22:55:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've mocked up what I think may be a fix in [bfroehle/ipython@inputhook_qt4](https://github.com/bfroehle/ipython/compare/inputhook_qt4).\n\nIn Win32 I've kept the original code, but added `timer.timeout.disconnect(app.quit)` (which I guess probably wasn't necessary?).\n\nThis seems to address the issue in my Ubuntu 12.04 installation, but I've only done limited testing.  You can read some background on the whole readline inputhook problem at http://www.riverbankcomputing.com/pipermail/pyqt/2007-July/016512.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6922516",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6922516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6922516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjI1MTY=",
    "user": {
      "login": "denisri",
      "id": 1913468,
      "node_id": "MDQ6VXNlcjE5MTM0Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1913468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denisri",
      "html_url": "https://github.com/denisri",
      "followers_url": "https://api.github.com/users/denisri/followers",
      "following_url": "https://api.github.com/users/denisri/following{/other_user}",
      "gists_url": "https://api.github.com/users/denisri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denisri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denisri/subscriptions",
      "organizations_url": "https://api.github.com/users/denisri/orgs",
      "repos_url": "https://api.github.com/users/denisri/repos",
      "events_url": "https://api.github.com/users/denisri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denisri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T23:02:13Z",
    "updated_at": "2012-07-11T23:02:13Z",
    "author_association": "NONE",
    "body": "I have tried the same in the meantime, and it also fixes the problem for me (Ubuntu 12.04 also).\nNo I don't think the disconnects are needed.\nThanks a lot.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6922672",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6922672",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6922672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjI2NzI=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T23:10:40Z",
    "updated_at": "2012-07-11T23:10:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, this sounds like a reasonable interpretation since typing in the\nipython window also closes the openFile dialog.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6924416",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-6924416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 6924416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjQ0MTY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T00:54:14Z",
    "updated_at": "2012-07-12T00:54:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm no expert on Qt4 here, but do we need to launch an actual QCoreApplication?  Or can we just create a QEventLoop and run that?\n\nSee [bfroehle/ipython@inputhook_qt4_alt](https://github.com/bfroehle/ipython/compare/inputhook_qt4_alt).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7199467",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-7199467",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 7199467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTk0Njc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T06:10:23Z",
    "updated_at": "2012-07-24T06:10:23Z",
    "author_association": "MEMBER",
    "body": "We're only after the event loop control, so if it's safe to do that only with an event loop, I don't think we need an app.  What I don't know is if not creating an app will make things better or worse with user code that does try to create an app.\n\nIn any case, if we make changes to this logic, the examples in `docs/examples/lib` should be manually checked, as well as our instructions on event loop integration, because this would be a fairly significant semantic change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7199799",
    "html_url": "https://github.com/ipython/ipython/issues/2080#issuecomment-7199799",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2080",
    "id": 7199799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTk3OTk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T06:38:00Z",
    "updated_at": "2012-07-24T06:38:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "For a little bit of background on why one might want to just use `QEventLoop::exec`, let's examine what `QCoreApplication::exec` does:\n\n``` c++\nint QCoreApplication::exec()\n{\n    if (!QCoreApplicationPrivate::checkInstance(\"exec\"))\n        return -1;\n\n    // ... [some assertions]\n\n    threadData->quitNow = false;\n    QEventLoop eventLoop;\n    self->d_func()->in_exec = true;\n    self->d_func()->aboutToQuitEmitted = false;\n    int returnCode = eventLoop.exec();\n    threadData->quitNow = false;\n    if (self) {\n        self->d_func()->in_exec = false;\n        if (!self->d_func()->aboutToQuitEmitted)\n            emit self->aboutToQuit();\n        self->d_func()->aboutToQuitEmitted = true;\n        sendPostedEvents(0, QEvent::DeferredDelete);\n    }\n\n    return returnCode;\n}\n```\n\nAs far as I can tell, it's a small wrapper around `QEventLoop::exec` which also:\n- Sets some variables regarding the current status\n- Emits an `aboutToQuit` signal right before the function returns (which is the root cause of @denisri's issue).\n\nHowever I'm not Qt expert, so this approach might not be valid at all... _shrug_\n"
  }
]
