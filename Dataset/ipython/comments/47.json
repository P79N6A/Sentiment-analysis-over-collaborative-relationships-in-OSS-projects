[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236154",
    "html_url": "https://github.com/ipython/ipython/issues/47#issuecomment-236154",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/47",
    "id": 236154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE1NA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:32:46Z",
    "updated_at": "2010-05-10T09:32:46Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Brian Granger, on 2009-04-14 21:15:00.482329+00:00 ]\n\nFixing this will require that the core be thread safe and that the reactor runs in a different thread from user code.  This should happen this summer.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236155",
    "html_url": "https://github.com/ipython/ipython/issues/47#issuecomment-236155",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/47",
    "id": 236155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE1NQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:32:47Z",
    "updated_at": "2010-05-10T09:32:47Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Vishal Vatsa, on 2009-04-24 18:35:58+00:00 ]\n\nJust wondering, if the problem is that there is already another reactor\nrunning so can't we just use the asyncclient.\n\nI ran this StringTask:\n\"from IPython.kernel import asyncclient ; doc_str = asyncclient.**docformat**\"\n\nI am sure using asyncclient has its own set of complications.\n\n-vishal\n\n2009/4/14 Brian Granger ellisonbg@gmail.com:\n\n> Fixing this will require that the core be thread safe and that the\n> reactor runs in a different thread from user code.  This should happen\n> this summer.\n> \n> *\\* Changed in: ipython\n>   Importance: Undecided => Medium\n> \n> *\\* Changed in: ipython\n>       Status: New => Confirmed\n> \n> *\\* Changed in: ipython\n>     Assignee: (unassigned) => Brian Granger (ellisonbg)\n> \n> ## \n> \n> IPython.kernel.client cannot be imported inside an engine\n> https://bugs.launchpad.net/bugs/300218\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> Importing IPython.kernel.client in an engine doesn't work.\n> The twisted reactor is started for the controller and engine\n> automatically when they start and for the client when\n> IPython.kernel.client is imported. The problem is that when executing import\n> IPython.kernel.client script in the engine, the engine already has the reactor running,\n> and the import tries to start the reactor again. This causes\n> a the ipengine<->ipcontroller communication to fail on\n> subsequently executed commands.\n> \n> A typical use case when one needs to import IPython.kernel.client in the\n> engines, is when one wants to use one of the engines as a  client connected\n> to another ipcontroller, and it seems impossible to do it,\n> if one cannot import the client in one of the engines.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236156",
    "html_url": "https://github.com/ipython/ipython/issues/47#issuecomment-236156",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/47",
    "id": 236156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE1Ng==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:32:48Z",
    "updated_at": "2010-05-10T09:32:48Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Brian Granger, on 2009-04-27 21:12:24+00:00 ]\n\nThere are a couple of issue:\n- The reactor is already running and kernel.client tries to start it.\n- The sync code in kernel.client has to be run in a different thread\n  from the main reactor.  When you use kernel.client in IPython, it\n  actually starts the twisted reactor in a thread.  The make the client\n  work in the engine, we need to run the users code (where the client\n  will be used) in a different thread from the reactor.\n- To do this, parts of the engine have to be made threadsafe.\n\nI haven't though about using the asyncclient though in the engine.  It\nmay work, but as you guess, there may be complications.\n\nCheers,\n\nBrian\n\nOn Fri, Apr 24, 2009 at 11:35 AM, Vishal Vatsa vishal.vatsa@gmail.com wrote:\n\n> Just wondering, if the problem is that there is already another reactor\n> running so can't we just use the asyncclient.\n> \n> I ran this StringTask:\n> \"from IPython.kernel import asyncclient ; doc_str = asyncclient.**docformat**\"\n> \n> I am sure using asyncclient has its own set of complications.\n> \n> -vishal\n> \n> 2009/4/14 Brian Granger ellisonbg@gmail.com:\n> \n> > Fixing this will require that the core be thread safe and that the\n> > reactor runs in a different thread from user code.  This should happen\n> > this summer.\n> > \n> > *\\* Changed in: ipython\n> >   Importance: Undecided => Medium\n> > \n> > *\\* Changed in: ipython\n> >       Status: New => Confirmed\n> > \n> > *\\* Changed in: ipython\n> >     Assignee: (unassigned) => Brian Granger (ellisonbg)\n> > \n> > ## \n> > \n> > IPython.kernel.client cannot be imported inside an engine\n> > https://bugs.launchpad.net/bugs/300218\n> > You received this bug notification because you are a member of IPython\n> > Developers, which is subscribed to IPython.\n> > \n> > Status in IPython - Enhanced Interactive Python: Confirmed\n> > \n> > Bug description:\n> > Importing IPython.kernel.client in an engine doesn't work.\n> > The twisted reactor is started for the controller and engine\n> > automatically when they start and for the client when\n> > IPython.kernel.client is imported. The problem is that when executing import\n> > IPython.kernel.client script in the engine, the engine already has the reactor running,\n> > and the import tries to start the reactor again. This causes\n> > a the ipengine<->ipcontroller communication to fail on\n> > subsequently executed commands.\n> > \n> > A typical use case when one needs to import IPython.kernel.client in the\n> > engines, is when one wants to use one of the engines as a  client connected\n> > to another ipcontroller, and it seems impossible to do it,\n> > if one cannot import the client in one of the engines.\n> \n> ## \n> \n> IPython.kernel.client cannot be imported inside an engine\n> https://bugs.launchpad.net/bugs/300218\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> Importing IPython.kernel.client in an engine doesn't work.\n> The twisted reactor is started for the controller and engine\n> automatically when they start and for the client when\n> IPython.kernel.client is imported. The problem is that when executing import\n> IPython.kernel.client script in the engine, the engine already has the reactor running,\n> and the import tries to start the reactor again. This causes\n> a the ipengine<->ipcontroller communication to fail on\n> subsequently executed commands.\n> \n> A typical use case when one needs to import IPython.kernel.client in the\n> engines, is when one wants to use one of the engines as a  client connected\n> to another ipcontroller, and it seems impossible to do it,\n> if one cannot import the client in one of the engines.\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/601287",
    "html_url": "https://github.com/ipython/ipython/issues/47#issuecomment-601287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/47",
    "id": 601287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTI4Nw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-12-09T23:31:19Z",
    "updated_at": "2010-12-09T23:31:19Z",
    "author_association": "MEMBER",
    "body": "This won't be fixed in the Twisted version, but works in the pyzmq version that Min is working on.\n"
  }
]
