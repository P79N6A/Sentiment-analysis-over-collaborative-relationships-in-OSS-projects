[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69480221",
    "html_url": "https://github.com/ipython/ipython/issues/7349#issuecomment-69480221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7349",
    "id": 69480221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDgwMjIx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T01:51:28Z",
    "updated_at": "2015-01-11T01:51:28Z",
    "author_association": "MEMBER",
    "body": "Yep, definitely need to fix this. Another failure route we should test when we do this is starting a notebook for a kernel that has a kernelspec, but not the actual kernel. I could easily imagine users ending up with kernelspecs for kernels that are no longer installed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69604871",
    "html_url": "https://github.com/ipython/ipython/issues/7349#issuecomment-69604871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7349",
    "id": 69604871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjA0ODcx",
    "user": {
      "login": "ptone",
      "id": 40845,
      "node_id": "MDQ6VXNlcjQwODQ1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/40845?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptone",
      "html_url": "https://github.com/ptone",
      "followers_url": "https://api.github.com/users/ptone/followers",
      "following_url": "https://api.github.com/users/ptone/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptone/subscriptions",
      "organizations_url": "https://api.github.com/users/ptone/orgs",
      "repos_url": "https://api.github.com/users/ptone/repos",
      "events_url": "https://api.github.com/users/ptone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T17:06:08Z",
    "updated_at": "2015-01-12T17:06:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I get a slightly different error now, but still very cryptic.\n\nAn absolutely dead-minimalist patch is here:\nhttps://github.com/ptone/ipython/compare/kernel-warn-ux?expand=1\n\nIn looking at @ellisonbg comment, I also went through and found several other failure modes that I documented for myself here:\n\nhttps://docs.google.com/spreadsheets/d/1MnNEhgzJ3cGl-Um45fLvFoHouz04b4-LMEvlgSKu5zw/edit?usp=sharing\n\nThe \"incomplete runtime\" issue was very easy to hit initially - as I had IPython for python 3 in a virtualenv, but I imagine many people will use a boilerplate ipy3 spec that just as python3 as the executable.\n\nIn this case, python3 is a valid executable, but there is no IPython module available (or pyzmq).\n\nIn any failure mode - I guess there is a design decision as to how \"editable\" a notebook should be without a kernel.  Should a big grey overlay just go over the whole notebook? I guess that would be entirely counter to #4938 but would be friendlier to the \"common case\" of novices who don't pay enough attention to the kernel state indicator. An error should at least occur when executing a code cell with no valid kernel present.\n\nAlso another radical change (post 3.0 I would guess) would be to preflight the notebook from the homescreen instead of just being a link - and show such an error before a new tab is even open). [edit - again I guess this conflicts with the design for #4938]\n\nLooking through https://github.com/ipython/ipython/issues?q=is%3Aissue+is%3Aopen+kernel+in%3Atitle\n\nI don't see any super tightly coupled or duplicate issues to this one. Not sure how you want to split different failure modes into different issues, or just use this as a master issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69613582",
    "html_url": "https://github.com/ipython/ipython/issues/7349#issuecomment-69613582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7349",
    "id": 69613582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjEzNTgy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T17:57:27Z",
    "updated_at": "2015-01-12T17:57:27Z",
    "author_association": "MEMBER",
    "body": "> I imagine many people will use a boilerplate ipy3 spec that just as python3 as the executable.\n\nOur hope is that people will install the IPython kernelspecs with `ipython kernelspec install-self`, which will create it with the full path to the current executable, which should know about IPython.\n"
  }
]
