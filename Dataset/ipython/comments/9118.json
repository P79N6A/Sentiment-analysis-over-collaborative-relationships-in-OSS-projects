[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170019174",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170019174",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170019174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDAxOTE3NA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T14:35:49Z",
    "updated_at": "2016-01-08T14:35:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is really great to see you doing this work @takluyver! I have not had the time to write the shell for IPython. Don't hesitate to let me know if you have any questions about this library.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170026071",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170026071",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170026071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDAyNjA3MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T15:04:39Z",
    "updated_at": "2016-01-08T15:04:39Z",
    "author_association": "MEMBER",
    "body": "Thanks! So far I'm working it out OK, and I'm impressed with your docs (though I'm referring to the code quite a bit as well to work out the best way to integrate our stuff). But I'll be in touch if there are any questions I get stuck on!\n\nOne thing that gave me a bit of trouble was multiline. Each time the user presses enter, we try to work out whether to prompt for an extra line or execute the code that's already there. I initially tried expressing this by passing a Condition to multiline which ran the 'prompt for more input' test, but it caused some odd behaviour as that changed back and forth. So now I'm passing `multiline=True` and overriding the Enter key event to do the 'prompt for more input' test. I'm perfectly happy with this solution, but I think it's useful for API design to understand where users have gone wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170051999",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170051999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170051999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA1MTk5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T16:46:03Z",
    "updated_at": "2016-01-08T16:46:03Z",
    "author_association": "MEMBER",
    "body": "Actually, now that I'm thinking about it, there is something I'd like to ask about:\n\nWhen the buffer is multiline, is there an easy way to have continuation prompts on each row? Currently there's just blank space to the left, and it's not obvious how much is prompt and how much is indentation. I.e.:\n\n```\n# What I currently have:\nIn [1]: for a in range(5):\n            print(a)\n\n# What I'd like:\nIn [1]: for a in range(5):\n      :      print(a)\n      :      \n```\n\nI'm sure this is possible using the deeper API described in 'Building a full screen application', but so far I've been able to stick with the higher level APIs for prompts, and this feels like something that should be simple enough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170123248",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170123248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170123248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEyMzI0OA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T21:04:41Z",
    "updated_at": "2016-01-08T21:04:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @takluyver,\n\nAbout overriding the Enter key binding, that's fine. That's also what I'm doing. (I think, that behaviour is quite custom for each application.)\n\nAbout the continuation prompts, that's not yet possible with the `shortcut` function, but I will try to implement that asap. (@scopatz from xonsh had the same request: https://github.com/jonathanslenders/python-prompt-toolkit/issues/209 ) Just keep using the higher level API, and assume that it will be possible very soon.\n\nJonathan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170129994",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170129994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170129994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEyOTk5NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T21:27:00Z",
    "updated_at": "2016-01-08T21:27:00Z",
    "author_association": "MEMBER",
    "body": "Awesome, thanks! And let me know if I can help with that or anything else in PT - it looks like we're going to be able to ditch a lot of rusty old code, simplify installation and improve the user experience all in one go, so we're very grateful, and accordingly happy to do our bit. :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170132400",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170132400",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170132400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEzMjQwMA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T21:31:07Z",
    "updated_at": "2016-01-08T21:31:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the offer! Everything in PT becomes very stable, there's probably not much need to improve it. If there is something that has to be done, it's better documentation. Mostly for all the \"internal\" stuff that people creating full screen apps would use. Don't worry about that, just focus on the IPython user interface. ;)  But all feedback about things that can be done better is very welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170135924",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170135924",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170135924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEzNTkyNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T21:41:59Z",
    "updated_at": "2016-01-08T21:41:59Z",
    "author_association": "MEMBER",
    "body": "Ah, brilliant, and it's good to hear that it's pretty stable as well. I'll let you know of any snags that I run into, and if I meet you at a conference some time, I'll buy you a drink. ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170136726",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170136726",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170136726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDEzNjcyNg==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T21:45:16Z",
    "updated_at": "2016-01-08T21:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will remember that ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170888349",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170888349",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170888349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDg4ODM0OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T11:52:04Z",
    "updated_at": "2016-01-12T11:52:04Z",
    "author_association": "MEMBER",
    "body": "Another question that's not really specific to prompt_toolkit, but I guess you know quite a bit about terminals. We've had trouble in the past picking default colours, because as far as we can find there's no way to know whether the terminal has a dark or a light background. Do you know of either some secret terminal foo to detect that, or any best practices for picking text colours that will work either way?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170889413",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170889413",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170889413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDg4OTQxMw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T11:56:22Z",
    "updated_at": "2016-01-12T11:56:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pick colors that work either way. There is no universal way that works everywhere. The default color (black or white) should always be visible. Of course it's possible to specify a background color as well, but that's not respectful regarding the user preferences of the terminal application.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170892241",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170892241",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170892241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDg5MjI0MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T12:04:48Z",
    "updated_at": "2016-01-12T12:04:48Z",
    "author_association": "MEMBER",
    "body": "Fair enough. BTW, in the [colours section](http://python-prompt-toolkit.readthedocs.org/en/latest/pages/building_prompts.html#colors) of the docs, it would be useful to see how to override a token's colour back to the plain terminal default, if you want to override a colour set in the default style.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170917243",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170917243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170917243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDkxNzI0Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T13:50:30Z",
    "updated_at": "2016-01-12T13:50:30Z",
    "author_association": "MEMBER",
    "body": "On Windows, pyreadline currently handles translating the ANSI escapes for colours etc. into Windows API calls. Clearly PT can talk to Windows for its own colouring etc., but we'd also like to use colours in other parts of IPython, like for tracebacks.\n- Does PT offer an ANSI to Windows-API convertor that we can hook into `sys.stdout` to colour other output? Or should we use a separate package like [colorama](https://pypi.python.org/pypi/colorama) to do this?\n- If we use a separate ANSI to Windows terminal package, is there a risk that will interfere with what PT is doing?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170925291",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170925291",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170925291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDkyNTI5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T14:21:11Z",
    "updated_at": "2016-01-12T14:21:11Z",
    "author_association": "MEMBER",
    "body": "Is there a halfway house for the `complete_while_typing` option? In the notebook, we don't offer any completions until the user hits tab to request them, but once the completion popup is visible, it remains visible and updates as the user types more letters. Maybe it's just familiarity, but this feels about right to me.\n\nWith `complete_while_typing` on, I find it pops up a bit too eagerly and distracts me, though perhaps I just need to get used to it. With the option off, I find it disappears when I'd expect it to stay.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170978720",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170978720",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170978720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDk3ODcyMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T17:12:50Z",
    "updated_at": "2016-01-12T17:12:50Z",
    "author_association": "MEMBER",
    "body": "subscribing to issue. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170999046",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-170999046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 170999046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDk5OTA0Ng==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T18:12:40Z",
    "updated_at": "2016-01-12T18:12:53Z",
    "author_association": "MEMBER",
    "body": "(FYI, @Carreau, you can subscribe to an issue by clicking on the \"subscribe\" button in the upper right, in the \"Notifications\" heading in the right column.  You don't have to comment to subscribe)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171000435",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171000435",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171000435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTAwMDQzNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T18:18:00Z",
    "updated_at": "2016-01-12T18:18:00Z",
    "author_association": "MEMBER",
    "body": "> (FYI, @Carreau, you can subscribe to an issue by clicking on the \"subscribe\" button in the upper right, in the \"Notifications\" heading in the right column. You don't have to comment to subscribe)\n\nI know, I did. I wrote the message just for human friendly information.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171372353",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171372353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171372353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTM3MjM1Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T17:29:29Z",
    "updated_at": "2016-01-13T17:29:29Z",
    "author_association": "MEMBER",
    "body": "Now that #9070 has been merged, this accurately shows the changes involved: one new file of 124 lines, and a few changes to completion to improve the ordering of completions. We have syntax highlighting, multiline editing, tab completion and history. The only things I can think of to add are some config options - e.g. to switch to vi input mode.\n\nDid I mention that I'm really impressed with prompt_toolkit? :smile: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171374027",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171374027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171374027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTM3NDAyNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T17:35:45Z",
    "updated_at": "2016-01-13T17:35:45Z",
    "author_association": "MEMBER",
    "body": "> Did I mention that I'm really impressed with prompt_toolkit?\n\nI am too, I need to find more time to contribute to it. \n\nIs that 4.1 or 5.0 material ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171375230",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171375230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171375230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTM3NTIzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T17:39:58Z",
    "updated_at": "2016-01-13T17:39:58Z",
    "author_association": "MEMBER",
    "body": "I think switching to prompt_toolkit properly is a 5.0 task. We could slip it into 4.x labelled 'experimental' and leave the readline interface as the default, but I think I'd rather make it the headline feature of 5.0.\n\nWe'll also need to decide: do we leave the readline interface in as an option for a release after switching the default, or take it out straight away? I'm sure there will be some teething troubles, but I don't want to give people the impression that we'll keep maintaining the readline code indefinitely.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171379146",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171379146",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171379146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTM3OTE0Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T17:55:11Z",
    "updated_at": "2016-01-13T17:55:11Z",
    "author_association": "MEMBER",
    "body": "> I'm sure there will be some teething troubles, but I don't want to give people the impression that we'll keep maintaining the readline code indefinitel\n\nWe can also Make 4.x a LTS and make 5.x no readline, potentially dropping some other legacy code. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171379416",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171379416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171379416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTM3OTQxNg==",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T17:56:06Z",
    "updated_at": "2016-01-13T17:56:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rip-rip-rip-out-the-GPL-dependencies!\n\nThough I have looked into making a `prompt_toolkit`-backed `pyreadline`-alike so that it could just be a drop-in replacement without changing the API. It doesn't look like it would be too much work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171734048",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171734048",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171734048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTczNDA0OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T18:40:03Z",
    "updated_at": "2016-01-14T18:40:03Z",
    "author_association": "MEMBER",
    "body": "Added:\n- Config options for the styles used in syntax highlighting, and to enable prompt_toolkit's vi mode\n- Support for running in legacy Python, and using appropriate highlighting there (not that there's a massive difference)\n\nIf people want to kick the tyres on this, please do. You can start it with:\n\n```\npython -m IPython.terminal.ptshell\n```\n\nOr to make it run when you type `ipython`, apply this diff:\n\n``` diff\ndiff --git a/IPython/terminal/ipapp.py b/IPython/terminal/ipapp.py\nindex fe3d008..8268bb9 100755\n--- a/IPython/terminal/ipapp.py\n+++ b/IPython/terminal/ipapp.py\n@@ -32,7 +32,8 @@\n     InteractiveShellApp, shell_flags, shell_aliases\n )\n from IPython.extensions.storemagic import StoreMagics\n-from IPython.terminal.interactiveshell import TerminalInteractiveShell\n+#from IPython.terminal.interactiveshell import TerminalInteractiveShell\n+from .ptshell import PTInteractiveShell as TerminalInteractiveShell\n from IPython.utils import warn\n from IPython.paths import get_ipython_dir\n from traitlets import (\n@@ -342,7 +343,7 @@ def start(self):\n         # perform any prexec steps:\n         if self.interact:\n             self.log.debug(\"Starting IPython's mainloop...\")\n-            self.shell.mainloop()\n+            self.shell.interact()\n         else:\n             self.log.debug(\"IPython not interactive...\")\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171908540",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171908540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171908540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTkwODU0MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T09:12:17Z",
    "updated_at": "2016-01-15T09:12:21Z",
    "author_association": "MEMBER",
    "body": "`enable_gui` doesn't appear to be implemented, so we can't use matplotlib yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171911342",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171911342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171911342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTkxMTM0Mg==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T09:25:32Z",
    "updated_at": "2016-01-15T09:25:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the GUI, we probably need this TK inputhook: https://github.com/jonathanslenders/ptpython/blob/master/ptpython/eventloop.py#L19\nandpass that to the `create_eventloop` function: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/examples/inputhook.py#L73\n\nI will probably move the TK inputhook into prompt_toolkit itself, because it's something that more applications are going to need anyway.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/171912352",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-171912352",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 171912352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTkxMjM1Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T09:31:30Z",
    "updated_at": "2016-01-15T09:31:30Z",
    "author_association": "MEMBER",
    "body": "We'll probably need to do another implementation of all of our GUI hooks that we've now done for readline and tornado. Since we at least need to support gtk, tk, qt, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172124140",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-172124140",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 172124140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjEyNDE0MA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T23:19:35Z",
    "updated_at": "2016-01-15T23:19:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver: I just implemented continuation prompts: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/examples/get-multiline-input.py#L6\nCheckout the \"master\" branch on GitHub. Please let me know if for some reason this doesn't work for you.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172182829",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-172182829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 172182829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjE4MjgyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T10:59:53Z",
    "updated_at": "2016-01-16T10:59:53Z",
    "author_association": "MEMBER",
    "body": "Thanks, I've just made of use of that and it seems to be working beautifully. :cake: \n\nWhen you've got a moment, I'd appreciate your thoughts on adding colour to other output on Windows. Does PT offer an interface we can use to colour arbitrary other output, outside of the prompt? And if not, is it likely to cause problems if we use another library like colorama alongside PT?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172236364",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-172236364",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 172236364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjIzNjM2NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T17:45:16Z",
    "updated_at": "2016-01-16T17:45:16Z",
    "author_association": "MEMBER",
    "body": "I've borrowed the inputhooks linked above for tk and gtk, and written ones for qt and gtk3.\n\n@jonathanslenders I'm creating the event loop with an inputhook unconditionally, so that we can switch in an inputhook at runtime (as it doesn't look like there's a neat way to change the inputhook in PT's interface). If I've followed the code correctly, that means that it's repeatedly creating and destroying a thread and a pipe in `InputHookContext`, even when the inputhook is a no-op. This seems inefficient, though I don't actually perceive any problem when I run it. Is it worth trying to find a smarter way to switch inputhooks, or are those operations trivial enough that I shouldn't worry?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172249196",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-172249196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 172249196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI0OTE5Ng==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T19:42:43Z",
    "updated_at": "2016-01-16T19:42:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "To answer your first question, regarding colour output. That is possible. There was already a way to do that through `prompt_toolkit.renderer.print_tokens`. Now, I just made a shortcut to make that easier: `prompt_toolkit.shortcuts.print_tokens`.\n\nSee: http://python-prompt-toolkit.readthedocs.org/en/latest/pages/building_prompts.html#printing-text-output-in-color and\nhttps://github.com/jonathanslenders/python-prompt-toolkit/commit/de1dd9b49d03fcb6a442e314043fbde0949422e8\n\nAbout the inputhook. You will indeed open a pipe which is maybe not used. But that's nothing to worry about. On my computer, IPython has already 6 fds open when it starts. That is really very lightweight.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172252508",
    "html_url": "https://github.com/ipython/ipython/pull/9118#issuecomment-172252508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9118",
    "id": 172252508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI1MjUwOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T20:17:23Z",
    "updated_at": "2016-01-16T20:17:23Z",
    "author_association": "MEMBER",
    "body": "We have various bits of code that generate colours using ANSI escape codes directly, because pyreadline on Windows translates the ANSI escapes for colour into Windows API calls. I quite like the idea of ultimately refactoring them to use prompt_toolkit's tokens, but I don't want to try and do that as a part of the initial switch to prompt_toolkit, so I'll probably introduce [colorama](https://pypi.python.org/pypi/colorama) as a dependency on Windows, at least temporarily. That works by wrapping stdout and stderr, but it looks like I can switch to the wrapped versions to run other code, and switch back to unwrapped for the prompt, just to be on the safe side.\n\nIPython definitely creates a lot of things on startup, but that only happens once - and even so, our startup is slower than I would like. It's the creation and desctruction of a pipe+thread several times a second that concerned me. But there doesn't seem to be any noticeable impact, so I'm probably just overestimating the cost of those operations. I still find it hard to think in computer speeds...\n"
  }
]
