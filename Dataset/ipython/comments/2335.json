[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8014538",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8014538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8014538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTQ1Mzg=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-24T20:53:36Z",
    "updated_at": "2012-08-24T20:53:36Z",
    "author_association": "NONE",
    "body": "This pull request [fails](http://travis-ci.org/ipython/ipython/builds/2229978) (merged e2e91f9b into 144f08a4).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8244790",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8244790",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8244790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDQ3OTA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-03T18:46:55Z",
    "updated_at": "2012-09-03T18:46:55Z",
    "author_association": "MEMBER",
    "body": "For me it just pushes the problem further:\n\n```\nimport time\nprint 'a'\nprint 'b'\ntime.sleep(3)\n```\n\nresult in `a`, 3 second delay, ( `b` and return ) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8244864",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8244864",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8244864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDQ4NjQ=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-03T18:50:31Z",
    "updated_at": "2012-09-03T18:50:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "The [failing test](https://github.com/ipython/ipython/blob/master/IPython/zmq/tests/test_message_spec.py#L428) shows that `print('hi')` turns into `write('hi'); write('\\n')`, only the first of which gets sent over the wire immediately.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8245275",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8245275",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8245275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDUyNzU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-03T19:16:51Z",
    "updated_at": "2012-09-03T19:16:51Z",
    "author_association": "MEMBER",
    "body": "One solution I see is to start a timer that trigger an event to flush after `flush_interval` seconds if flush has not been called, but I don't see any good way to do it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8246181",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8246181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8246181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDYxODE=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-03T20:11:28Z",
    "updated_at": "2012-09-03T20:11:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unless we want to add another thread for monitoring the io streams, I don't\nthink that it would be possible.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8246362",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8246362",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8246362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDYzNjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-03T20:22:34Z",
    "updated_at": "2012-09-03T20:22:34Z",
    "author_association": "MEMBER",
    "body": "I don't think a thread can work, since the sockets themselves are not threadsafe.  The only way I see to guarantee that print statements will always flush is if we send on every write instead of flush.  The obvious (and I think unacceptable) disadvantage of that would be that 100 print statements in a row would invariably result in 100 messages, incurring potentially enormous overhead.\n\nThis PR doesn't resolve the whole issue, but it does strictly improve the behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8246730",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8246730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8246730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDY3MzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-03T20:45:41Z",
    "updated_at": "2012-09-03T20:45:41Z",
    "author_association": "MEMBER",
    "body": "Alternatively, we could have an 'unbuffered' mode, like `python -u`, which enables the extraordinarily inefficient 'write implies flush' behavior.\n\nIn all, I don't think we can have perfect behavior without immensely wasteful overhead.  Thinking about it, I'm not even sure this PR really does improve the situation (though it does improve it in most annoying cases that I have encountered in practice).\n\nTaking the relatively generic example of:\n\n``` python\nfor i in range(5):\n    print 'A'\n    print 'B'\n    print 'C'\n    time.sleep(1)\n```\n\nBoth before and after this PR, flushes are only triggered on `print 'A'`, resulting in batches of `BCA` arriving together.  The difference being that with this PR, the first 'A' will be printed if it has been long enough since the last _flush_, whereas before this PR, it is guaranteed that nothing will be displayed until the second iteration in the loop.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8387048",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-8387048",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 8387048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODcwNDg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T12:22:43Z",
    "updated_at": "2012-09-08T12:22:43Z",
    "author_association": "MEMBER",
    "body": "@minrk , do you want to fix the failing test and merge this, or we forget it for now ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9013550",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-9013550",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 9013550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTM1NTA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-30T13:15:23Z",
    "updated_at": "2012-09-30T13:15:23Z",
    "author_association": "MEMBER",
    "body": "Pinging the status of this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10162346",
    "html_url": "https://github.com/ipython/ipython/pull/2335#issuecomment-10162346",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2335",
    "id": 10162346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTYyMzQ2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-07T19:51:53Z",
    "updated_at": "2012-11-07T19:51:53Z",
    "author_association": "MEMBER",
    "body": "closing this, I don't think it helps.  Someone can look into 'unbuffered mode' if they feel like it.\n"
  }
]
