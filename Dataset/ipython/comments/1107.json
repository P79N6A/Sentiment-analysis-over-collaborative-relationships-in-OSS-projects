[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3035266",
    "html_url": "https://github.com/ipython/ipython/issues/1107#issuecomment-3035266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1107",
    "id": 3035266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzUyNjY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T17:14:58Z",
    "updated_at": "2011-12-06T17:14:58Z",
    "author_association": "MEMBER",
    "body": "Is `django-admin` actually put as a package on the python path?  We already check that the completed names are actually importable via `__import__`, so the problem is really that there's an actually importable module but with a name that can only be imported with `__import__`:\n\n```\nIn [1]: import django-admin\n  File \"<ipython-input-1-95eef13a729d>\", line 1\n    import django-admin\n                 ^\nSyntaxError: invalid syntax\n\nIn [2]: __import__('django-admin')\nOut[2]: <module 'django-admin' from 'django-admin/__init__.py'>\n```\n\nThat's quite odd to see...\n\nIn any case, we can certainly add a filter to the completion so it doesn't return names that are invalid as python variable identifiers.\n\nFor anyone wanting to take a crack at this, the code that does the module completions is in `IPython/core/completerlib.py`, the function `module_completion`.  But rather than simply adding a quick fix along the lines of `[x if '-' not in list]`, this should be fixed by first making a failing test with a temporary directory and subdirectories named `foo-bar`, `foo:bar` and `10foo` (all invalid python identifiers) all containing an `__init__.py`, so they would be importable.  Then the list of candidates should be filtered so these names are all eliminated before calling `try_import`.\n\nFor the filtering, we should have a fast regexp-based function that returns whether a string is a valid python identifier; it can go into `utils.text`.  That function can then be used to filter the list of candidates before doing any more expensive processing on it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3035652",
    "html_url": "https://github.com/ipython/ipython/issues/1107#issuecomment-3035652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1107",
    "id": 3035652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU2NTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T17:40:24Z",
    "updated_at": "2011-12-06T17:40:24Z",
    "author_association": "MEMBER",
    "body": "`django-admin.py` is a script, on sys.path because it's probably in the cwd.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3035736",
    "html_url": "https://github.com/ipython/ipython/issues/1107#issuecomment-3035736",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1107",
    "id": 3035736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU3MzY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T17:45:40Z",
    "updated_at": "2011-12-06T17:45:40Z",
    "author_association": "MEMBER",
    "body": "OK; the dir-with-init.py situation also causes this, but the tests will be indeed simpler to write by just creating empty files with those names (+ .py) instead of directories.\n\nKind of an odd corner case, but we could protect against it nonetheless.  But I don't think it's very high-priority.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3046315",
    "html_url": "https://github.com/ipython/ipython/issues/1107#issuecomment-3046315",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1107",
    "id": 3046315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDYzMTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T11:56:05Z",
    "updated_at": "2011-12-07T11:56:05Z",
    "author_association": "MEMBER",
    "body": "Note that the py3compat module already has an isidentifier() function for this sort of thing. It's regex-based for Python 2, and uses a built-in string method for Python 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3056463",
    "html_url": "https://github.com/ipython/ipython/issues/1107#issuecomment-3056463",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1107",
    "id": 3056463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY0NjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-08T01:19:39Z",
    "updated_at": "2011-12-08T01:19:39Z",
    "author_association": "MEMBER",
    "body": "Thanks for that tip, @takluyver, I'm glad to hear we already have that utility around.  This would therefore be a trivial fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4321836",
    "html_url": "https://github.com/ipython/ipython/issues/1107#issuecomment-4321836",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1107",
    "id": 4321836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjE4MzY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-05T12:37:51Z",
    "updated_at": "2012-03-05T12:37:51Z",
    "author_association": "MEMBER",
    "body": "Should now have been fixed by PR #1447.\n"
  }
]
