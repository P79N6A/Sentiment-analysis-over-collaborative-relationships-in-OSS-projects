[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52597120",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52597120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52597120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTk3MTIw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T07:00:19Z",
    "updated_at": "2014-08-19T07:00:19Z",
    "author_association": "MEMBER",
    "body": "> I wanted to post this to the mailing list but have been having trouble all week.\n\nJust to reassureyou,  I think you are not the only one. My mail delivery are delayed too. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52651667",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52651667",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52651667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjUxNjY3",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T15:30:47Z",
    "updated_at": "2014-08-19T15:30:47Z",
    "author_association": "NONE",
    "body": "Thanks that's a relief\nOn Aug 19, 2014 3:00 AM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> I wanted to post this to the mailing list but have been having trouble all\n> week.\n> \n> Just to reassureyou, I think you are not the only one. My mail delivery\n> are delayed too.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6336#issuecomment-52597120.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52764911",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52764911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52764911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzY0OTEx",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T11:50:34Z",
    "updated_at": "2014-08-20T11:56:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Mon, Aug 18, 2014 at 11:00 PM, Adam Hughes notifications@github.com\nwrote:\n\n> Hello,\n> \n> _I wanted to post this to the mailing list but have been having trouble\n> all week. I obtained permission to post here. If preferred to go on the\n> mailing list, can someone with access post it, and I'll remove this thread?\n> Sorry_\n> \n> We are developing a spectroscopy library and want to put in some\n> interactive plots/utilities to make the software a bit more approachable to\n> novices. I'd really like to build the entire interactive plotting interface\n> through the notebook's new widget system. My reasoning is as follows:\n> - All static plots are already matplotlib-based, so we wouldn't have\n>   to write a seperate plotting api\n> - Notebooks are inherently browser-ready, so sharing plots would be\n>   great - Is it likely that static nbviewer will eventually support widgets?\n>   Since the data is required, I figured not...\n> - Our tutorials are already in notebooks, so we'd like to be\n>   consistent.\n> \n> I've watched all the videos I can find from the widgets, and think I'm\n> fine with the Python end; however, am finding it hard to come by lots of\n> information on controlling the layout of the widgets. I know it's mostly\n> done in javascript, and I think the most complex view we will have will\n> look something like this:\n> \n> https://sites.google.com/site/shigemorita/home/2dshige\n> \n> We just wrote our first complex widget layout:\n\nhttps://bitbucket.org/ipre/calico/src/master/notebooks/Physics/visualize.py\n\nthat looks like this:\n\nhttps://bitbucket.org/ipre/calico/src/master/notebooks/Physics/Screenshot%20from%202014-08-20%2007%3A37%3A39.png\n\n> How much time would you estimate a javascript novice ought to spend on\n> getting something like that in the notebook? Can anyone share tutorials for\n> the layout portion of the widget API? Any information is helpful. Lastly,\n> does anyone have any hacky ideas of how to bury the source code so that the\n> widgets merely display, rather than the user copy/pasting the widget source\n> into a cell?\n> \n> You can use the \"%run program.py\" to run code, so you don't have to see\n> it. You could also use our cell tab notebook extension [1].\n\nJavaScript skill wasn't necessary, per se, as you can see from the code.\nBut knowing how HTML works is useful. You can see that it is pretty clunky,\nhaving to switch the vbox/hbox after the widget has been drawn.\n\nHope that helps,\n\n-Doug\n\n>  Thanks\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6336.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52807118",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52807118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52807118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODA3MTE4",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T16:52:14Z",
    "updated_at": "2014-08-20T16:52:14Z",
    "author_association": "NONE",
    "body": "Doug,\n\nThis is really awesome, thanks for sharing.  A very impressive\ndemonstration indeed!\n\nI'm sure just looking at this example has saved me a ton of painpoints, for\nexample declaring globals in your functions to access the state variables.\nThanks again.\n\nOn Wed, Aug 20, 2014 at 7:50 AM, Doug Blank notifications@github.com\nwrote:\n\n> On Mon, Aug 18, 2014 at 11:00 PM, Adam Hughes notifications@github.com\n> wrote:\n> \n> > Hello,\n> > \n> > _I wanted to post this to the mailing list but have been having trouble\n> > all week. I obtained permission to post here. If preferred to go on the\n> > mailing list, can someone with access post it, and I'll remove this\n> > thread?\n> > Sorry_\n> > \n> > We are developing a spectroscopy library and want to put in some\n> > interactive plots/utilities to make the software a bit more approachable\n> > to\n> > novices. I'd really like to build the entire interactive plotting\n> > interface\n> > through the notebook's new widget system. My reasoning is as follows:\n> > - All static plots are already matplotlib-based, so we wouldn't have\n> >   to write a seperate plotting api\n> > - Notebooks are inherently browser-ready, so sharing plots would be\n> >   great - Is it likely that static nbviewer will eventually support\n> >   widgets?\n> >   Since the data is required, I figured not...\n> > - Our tutorials are already in notebooks, so we'd like to be\n> >   consistent.\n> > \n> > I've watched all the videos I can find from the widgets, and think I'm\n> > fine with the Python end; however, am finding it hard to come by lots of\n> > information on controlling the layout of the widgets. I know it's mostly\n> > done in javascript, and I think the most complex view we will have will\n> > look something like this:\n> > \n> > https://sites.google.com/site/shigemorita/home/2dshige\n> > \n> > We just wrote our first complex widget layout:\n> \n> https://bitbucket.org/ipre/calico/src/master/notebooks/Physics/visualize.py\n> \n> that looks like this:\n> \n> ​\n> \n> > How much time would you estimate a javascript novice ought to spend on\n> > getting something like that in the notebook? Can anyone share tutorials\n> > for\n> > the layout portion of the widget API? Any information is helpful.\n> > Lastly,\n> > does anyone have any hacky ideas of how to bury the source code so that\n> > the\n> > widgets merely display, rather than the user copy/pasting the widget\n> > source\n> > into a cell?\n> > \n> > You can use the \"%file program.py\" to run code, so you don't have to see\n> > it. You could also use our cell tab notebook extension [1].\n> \n> JavaScript skill wasn't necessary, per se, as you can see from the code.\n> But knowing how HTML works is useful. You can see that it is pretty\n> clunky,\n> having to switch the vbox/hbox after the widget has been drawn.\n> \n> Hope that helps,\n> \n> -Doug\n> \n> > Thanks\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ipython/ipython/issues/6336.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6336#issuecomment-52764911.\n\n## \n\nAdam Hughes\nPhysics Ph.D Candidate\nGeorge Washington University\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52813106",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52813106",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52813106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODEzMTA2",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T17:36:54Z",
    "updated_at": "2014-08-20T17:38:26Z",
    "author_association": "NONE",
    "body": "Sorry, guess I wasn't done!\n\nDo you have a link to the cell tab notebook extension so that I can check it out?  \n\nAlso, our usecase is that users will have a dataset, and while performing analysis, they may want to pop open a widget to do some work on the data, and return new data.  Let's say for example, I had a widget that did signal filtering in a module called **filtering.py**.\n\nThe kind of workflow I'm looking for would be that the user has their data in a matrix.  They pass the data into a function or class in filtering.py, then the widget is opened with that dataset, and they can get the filtered data out, for use in subsequent cells.  Basically:\n\n```\nfrom filtering import MyWidget\ndata = np.random.randn(50,50)\nMyWidget(Data)   **This is the step that's confusing**\n....\ngui is launched, user plays with it\n....\nfiltered_data = MyWidget.output\n```\n\nYou see, I really need to be able to launch widgets, preferrably with the code hidden as you've said, perhaps through cell magic, but have some way to pass a datasource in and get a modified source out.  My dream is to have this \"GUI when you want it\", \"API when you need it\" workflow, confined fully to ipython notebooks.  Since you've made such a complex gui, perhaps you have some ideas towards the feasibility of this?  IE the data is in my primary notebook, but the widget need access it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52831179",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52831179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52831179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODMxMTc5",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T19:29:40Z",
    "updated_at": "2014-08-20T19:29:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hugadams You can find info on the cell tools here:\n\nhttp://calicoproject.org/ICalico#Calico_Notebook_Extensions\n\nI don't really have good ideas on data filtering... I haven't even used pandas yet. (I'm migrating to IPython from a 3rd-party kernel, Calico).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52831545",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-52831545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 52831545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODMxNTQ1",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T19:32:24Z",
    "updated_at": "2014-08-20T19:32:24Z",
    "author_association": "NONE",
    "body": "Thanks!\n\nThe filtering, data and pandas is really not important, it's more the\ngeneral idea of how do you pass an object into the widget, and get it back\nout.  I'll hack around and see if I can think of anything clever.  Good\nluck with pandas; it's really nice.\n\nOn Wed, Aug 20, 2014 at 3:29 PM, Doug Blank notifications@github.com\nwrote:\n\n> @hugadams https://github.com/hugadams You can find info on the cell\n> tools here:\n> \n> http://calicoproject.org/ICalico#Calico_Notebook_Extensions\n> \n> I don't really have good ideas on data filtering... I haven't even used\n> pandas yet. (I'm migrating to IPython from a 3rd-party kernel, Calico).\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6336#issuecomment-52831179.\n\n## \n\nAdam Hughes\nPhysics Ph.D Candidate\nGeorge Washington University\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/139681462",
    "html_url": "https://github.com/ipython/ipython/issues/6336#issuecomment-139681462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6336",
    "id": 139681462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTY4MTQ2Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-11T22:57:40Z",
    "updated_at": "2015-09-11T22:57:40Z",
    "author_association": "MEMBER",
    "body": "Closing to clean up the list of stale issues, and as this is mostly doable, and will simple with things like flexx, or IBM reworking on widgets/dashboard. \n\nThanks. \n"
  }
]
