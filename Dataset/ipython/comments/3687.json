[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21234181",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21234181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21234181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjM0MTgx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T06:48:56Z",
    "updated_at": "2013-07-19T06:48:56Z",
    "author_association": "MEMBER",
    "body": "The rendering of docstring have already been discussed on [ML](http://mail.scipy.org/pipermail/ipython-user/2013-January/012052.html) and other places. To sum up IIRC, much more complicated than it looks.. Too big to be on IPython roadmap, should come from a larger community as it will also most probably require modification to package to works.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21235351",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21235351",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21235351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjM1MzUx",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T07:25:16Z",
    "updated_at": "2013-07-19T07:25:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes it's a complicated problem, but apparently at least partially solved already by Spyder -- have you checked it out?\nI have asked the developer of Spyder, Carlos Córdoba, what the situation is and will report back.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21238475",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21238475",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21238475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjM4NDc1",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T08:50:05Z",
    "updated_at": "2013-07-19T08:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Spyder is working intensively to embed IPython notebook into their Environment, so I guess there is no real need to put to much work on this docstring rendering issue. Once the IPython integration is finished, many python users will switch to Spyder due to their \"real\" application like feeling which is currently slightly missing in the browser based notebook IMHO. I think a combination of Spyder and IPython notebook will be really awesome.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21246027",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21246027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21246027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjQ2MDI3",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T12:05:25Z",
    "updated_at": "2013-07-19T12:05:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "It will certainly be great to have the Notebook embedded in Spyder, but\nthis by no means exempts the Notebook from needing this functionality on\nits own for all those who use it in the browser!\n\nThe position of the pop-out documentation browser is independent of this:\nit should take advantage of the white space by popping up a vertical bar\n(not sure if 'window' is correct) at the right edge of the workspace,\ninstead of taking up precious vertical real estate. Of course, ideally this\nwould be configurable by the user (e.g., dragabble to where they want!)\nI hopefully will learn some javascript, but the real world starts again\nnext Monday...\n\nOn Fri, Jul 19, 2013 at 3:50 AM, Jakob Gager notifications@github.comwrote:\n\n> Spyder is working intensively to embed IPython notebook into their\n> Environment, so I guess there is no real need to put to much work on this\n> docstring rendering issue. Once the IPython integration is finished, many\n> python users will switch to Spyder due to their \"real\" application like\n> feeling which is currently slightly missing in the browser based notebook\n> IMHO. I think a combination of Spyder and IPython notebook will be really\n> awesome.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3687#issuecomment-21238475\n> .\n\n## \n\nDr. David P. Sanders\n\nProfesor Titular \"A\" / Associate Professor\nDepartamento de Física, Facultad de Ciencias\nUniversidad Nacional Autónoma de México (UNAM)\n\ndpsanders@gmail.com\nhttp://sistemas.fciencias.unam.mx/~dsanders\n\nCubículo / office: #414, 4o. piso del Depto. de Física\n\nTel.: +52 55 5622 4965\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21246467",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21246467",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21246467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjQ2NDY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T12:15:36Z",
    "updated_at": "2013-07-19T12:15:36Z",
    "author_association": "MEMBER",
    "body": "@jakobgager : yes, Carlos, Damian Avila and I had a chat at SciPy about making Spyder a nicely integrated desktop wrapper around the notebook. We hope to build a 'notebook mode' where it starts up with just a tab bar and a notebook interface. I'm sure Carlos would love to have another pair of hands on this if you'd like to see it sooner rather than later.\n\n@dpsanders is quite right, though - the notebook interface isn't going to assume that it's running inside Spyder, so we still want things like this improved.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21318915",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21318915",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21318915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE4OTE1",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T23:06:56Z",
    "updated_at": "2013-07-21T23:06:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jakobgager Thanks for the praise :-) Our plan for 2.4 is to have a really nice integration with the notebook and an specialized mode (as Thomas said) to run it without any of our other plugins, Then people will benefit from our docstring renderer (which was my first contribution to the project and perhaps the one I'm most proud of :-).\n\nTo have this capability in the browser version of the notebook, three things are needed:\n1. Get rid of hard-coded ANSI coloring codes present in docstrings headers (something which I plan to do in the next months).\n2. Be able to retrieve docstrings in a frontend independent way. This could be done by creating a dictionary with several keys (like `title`, `module`, `docstring`, `constructor docstring`, etc) when a user asks for a docstring. Then every frontend should decide how to render it according to its capabilities (much like `__repr__`'s work right now).\n3. In the case of the notebook, this would imply (if you want to follow the same approach as Spyder) to use a) **Sphinx** on the server to transform a rst-docstring to html and b) some css to style it inside the pager.\n\nI know @ellisonbg is not too fond of the last idea because (I think) it would bring more complexity to the notebook. But if you decide to go this path then we could create a separate library (based in our work) that both projects could benefit from.\n\nWe'll see what happens in the next months but this could be an excellent project for a GSoC student. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21319513",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21319513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21319513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE5NTEz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T23:50:31Z",
    "updated_at": "2013-07-21T23:50:31Z",
    "author_association": "MEMBER",
    "body": "2 is already in place, it's called an `object_info_request` IIRC. It doesn't yet have provisions for alternative formats and styling, though.\n\nAlso, a heads up: IPython probably won't do GSoC. They tried it some years ago, before I was around, but Fernando feels that it's not really worth the time and effort of mentoring someone new to the project. We've discussed it the last couple of years, and each time decided to leave it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21323240",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-21323240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 21323240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzIzMjQw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-22T03:30:55Z",
    "updated_at": "2013-07-22T03:30:55Z",
    "author_association": "MEMBER",
    "body": "> In the case of the notebook, this would imply (if you want to follow the same approach as Spyder) to use a) Sphinx on the server to transform a rst-docstring to html and b) some css to style it inside the pager.\n\nI think this is not enough. \nWhat about modules that have **really** complex docs, like things that could have IPython directive, or plots with matplotlib, x-links... etc.\n\nI would really like to be able to do something more for those like a \"doc-build\" for the module, that would really bring an extensive docs the pager. \n\nOne could even think of having a kernel dedicated to help where you could actually **run** code in docstring.\n\nSo in general I would be +1 in parsing the docstring(s) server-side and having many `_docs_reprs_` availlable.\nI do not disagree with @ellisonbg that would like only client-side parsing but I think that is not enough, but still doable if you get the `_doc_repr_yourfavoritemarkup_`.\n\nI would guess that there is a lot more thinking and planning than \"just parse\" rst to html.\n\nrandom thought : \n- define format of docstring on module or per docstring level.\n- would be nice to have also `yourformat`-> `plaintext` converter for console.\n- attach a 'online-doc' url to each docstring? how?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36346750",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-36346750",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 36346750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzQ2NzUw",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-28T12:45:53Z",
    "updated_at": "2014-02-28T12:45:53Z",
    "author_association": "NONE",
    "body": "+1 for nicely formatted docs in the notebook. While full blown parsing likst @Carreau suggested might be nice, I think you could cover 90% of use cases with a straight up rst to html conversion with enough smarts to not choke on really complicated docs, but simple enough that we might see an implementation in the forseeable future...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/101482715",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-101482715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 101482715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTQ4MjcxNQ==",
    "user": {
      "login": "jmansour",
      "id": 1439389,
      "node_id": "MDQ6VXNlcjE0MzkzODk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1439389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmansour",
      "html_url": "https://github.com/jmansour",
      "followers_url": "https://api.github.com/users/jmansour/followers",
      "following_url": "https://api.github.com/users/jmansour/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmansour/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmansour/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmansour/subscriptions",
      "organizations_url": "https://api.github.com/users/jmansour/orgs",
      "repos_url": "https://api.github.com/users/jmansour/repos",
      "events_url": "https://api.github.com/users/jmansour/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmansour/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T02:07:42Z",
    "updated_at": "2015-05-13T02:07:42Z",
    "author_association": "NONE",
    "body": "another +1 for this. \n\nlikely for any time soon?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/292020834",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-292020834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 292020834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjAyMDgzNA==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T22:57:08Z",
    "updated_at": "2017-04-05T22:57:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, simple handling of rst to html conversion can be implemented as in the `_parse_doc` and `_itertext_ansi` functions at https://github.com/evanunderscore/defopt/blob/master/defopt.py#L285 and https://github.com/evanunderscore/defopt/blob/master/defopt.py#L342."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/334169486",
    "html_url": "https://github.com/ipython/ipython/issues/3687#issuecomment-334169486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3687",
    "id": 334169486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE2OTQ4Ng==",
    "user": {
      "login": "mbakker7",
      "id": 1363400,
      "node_id": "MDQ6VXNlcjEzNjM0MDA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1363400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbakker7",
      "html_url": "https://github.com/mbakker7",
      "followers_url": "https://api.github.com/users/mbakker7/followers",
      "following_url": "https://api.github.com/users/mbakker7/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbakker7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbakker7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbakker7/subscriptions",
      "organizations_url": "https://api.github.com/users/mbakker7/orgs",
      "repos_url": "https://api.github.com/users/mbakker7/repos",
      "events_url": "https://api.github.com/users/mbakker7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbakker7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T14:15:16Z",
    "updated_at": "2017-10-04T14:15:16Z",
    "author_association": "NONE",
    "body": "Is there any update on this feature request? Has this maybe been implemented in the new Jupyter Notebooks that have been developed together with the Jupyter Lab?"
  }
]
