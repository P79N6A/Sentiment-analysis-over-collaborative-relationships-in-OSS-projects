[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/268931240",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-268931240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 268931240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkzMTI0MA==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-23T02:30:31Z",
    "updated_at": "2016-12-23T02:30:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is the ordering on matplotlib doing the imports vs ipython doing the imports?\r\n\r\nShould this actually be done in mpl not in IPython?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/269080983",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-269080983",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 269080983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA4MDk4Mw==",
    "user": {
      "login": "patricksnape",
      "id": 708474,
      "node_id": "MDQ6VXNlcjcwODQ3NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/708474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricksnape",
      "html_url": "https://github.com/patricksnape",
      "followers_url": "https://api.github.com/users/patricksnape/followers",
      "following_url": "https://api.github.com/users/patricksnape/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricksnape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricksnape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricksnape/subscriptions",
      "organizations_url": "https://api.github.com/users/patricksnape/orgs",
      "repos_url": "https://api.github.com/users/patricksnape/repos",
      "events_url": "https://api.github.com/users/patricksnape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricksnape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T11:38:47Z",
    "updated_at": "2016-12-24T11:38:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well as long as this method is called it's always a 'race' to whoever sets the state first. If we are going to set the APIs here at all then we should just ensure that we set them all. I can't believe that it is really even valid to just set one or two of the APIs to a different version but leave the rest as another.\r\n\r\nI haven't looked at the matplotlib code but if they are using SIP to set the APIs as well then they also need to ensure they set all the APIs."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/269101969",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-269101969",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 269101969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTEwMTk2OQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T21:59:36Z",
    "updated_at": "2016-12-24T21:59:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why would it _not_ be valid to only set some of the APIs to v2?  mpl has been doing this for as long I have been working on the project (and if it wasn't valid why would river bank have put in that fine of control?)\r\n\r\nSee https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/backends/qt_compat.py for where mpl takes care of this."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/270028025",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-270028025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 270028025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDAyODAyNQ==",
    "user": {
      "login": "patricksnape",
      "id": 708474,
      "node_id": "MDQ6VXNlcjcwODQ3NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/708474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricksnape",
      "html_url": "https://github.com/patricksnape",
      "followers_url": "https://api.github.com/users/patricksnape/followers",
      "following_url": "https://api.github.com/users/patricksnape/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricksnape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricksnape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricksnape/subscriptions",
      "organizations_url": "https://api.github.com/users/patricksnape/orgs",
      "repos_url": "https://api.github.com/users/patricksnape/repos",
      "events_url": "https://api.github.com/users/patricksnape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricksnape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-02T22:42:57Z",
    "updated_at": "2017-01-02T22:43:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fair enough, I revoke that, I'm not an expert in QT so I likely misunderstood. It's just frustrating that once you import QT the APIs are fixed and so if a project is opinionated about which API it wants then obviously they conflict. I guess the real question here is whether or not many projects use API v1 and so what the 'default' should be. Clearly this is more complicated than I thought which is a shame. Perhaps the best course of action is to check pyface and see if it really needs all those APIs set to v2. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/272161905",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-272161905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 272161905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjE2MTkwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T13:23:41Z",
    "updated_at": "2017-01-12T13:23:41Z",
    "author_association": "MEMBER",
    "body": "My reading of the discussion is that we shouldn't actually do this; while it may be frustrating to use a mixture of packages which load PyQt, anything we do with selecting Qt APIs is probably fixing some cases at the cost of others, rather than improving the overall situation. If that is the case, then I'd rather leave things as they are so that at least the problems are consistent, rather than trying to work out which use cases are commonest.\r\n\r\nAny objections?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/272288473",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-272288473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 272288473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjI4ODQ3Mw==",
    "user": {
      "login": "patricksnape",
      "id": 708474,
      "node_id": "MDQ6VXNlcjcwODQ3NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/708474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricksnape",
      "html_url": "https://github.com/patricksnape",
      "followers_url": "https://api.github.com/users/patricksnape/followers",
      "following_url": "https://api.github.com/users/patricksnape/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricksnape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricksnape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricksnape/subscriptions",
      "organizations_url": "https://api.github.com/users/patricksnape/orgs",
      "repos_url": "https://api.github.com/users/patricksnape/repos",
      "events_url": "https://api.github.com/users/patricksnape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricksnape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T21:26:08Z",
    "updated_at": "2017-01-12T21:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's just frustrating that these magics tend to be at the top of the notebook and so are often the first thing loaded - which then hoses interaction with other QT packages. But I understand that this isn't a pressing change (as nothing is actively broken within IPython so I understand closing this issue from your perspective)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/272416550",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-272416550",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 272416550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQxNjU1MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T10:57:36Z",
    "updated_at": "2017-01-13T10:57:36Z",
    "author_association": "MEMBER",
    "body": "Right, but that goes both ways: if you set all those APIs to version 2, then any code which was expecting to use e.g. QDate v1 is broken. The first thing to load Qt has to decide all the API versions, but there's no correct set of values that will avoid problems in general.\r\n\r\nOne possible answer is for you to use an IPython startup file, which will run whenever you load a notebook, so you can pick all the APIs and load Qt before the notebook code runs. The downside of that is that you could create notebooks that only work on your machine.\r\n\r\nClosing for now, but feel free to continue this discussion here."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/280688710",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-280688710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 280688710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDY4ODcxMA==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-17T15:58:38Z",
    "updated_at": "2017-02-17T15:58:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "This problem is particular to pyqt4,  pyside, pyqt5, and pyside2 are always v2.  This particular set of pain will fade away if we just wait long enough :wink: .\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286477782",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-286477782",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 286477782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ3Nzc4Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T16:28:28Z",
    "updated_at": "2017-03-14T16:28:28Z",
    "author_association": "MEMBER",
    "body": "We've got some discussion on today's dev meeting. We'll be reopening this and try it. We can revert if we have more complaints from the other side (if any). "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286479938",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-286479938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 286479938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ3OTkzOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T16:34:54Z",
    "updated_at": "2017-03-14T16:34:54Z",
    "author_association": "MEMBER",
    "body": "I'm still -0.5 on this - I don't think there's a *right* thing to do, and in the absence of one, I'd rather at least be consistent in what we do. Yes, we can revert it, but it's not necessarily true that the bugs it causes will be clearly related to this.\r\n\r\nMaybe an alternative would be to add a new QT_API option like `pyqt_allv2`?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286484069",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-286484069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 286484069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ4NDA2OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T16:46:55Z",
    "updated_at": "2017-03-14T16:46:55Z",
    "author_association": "MEMBER",
    "body": "The problem IIUC is that if sip is used, you anyway can't use different versions across APIs. So no setting uniform API will not work anyway. Seeing that this is mostly to keep potential compatibility with pyqt4 which is now quite old (and not even on PyPI ?) \r\n\r\nWe're also pushing forward on Python versions, and dropping support for 2.x, so I think that pushing also on Qt5 is reasonable. \r\n\r\nHappy to get a `pyqt_allv2`, but I believe it might be good to have it on by default."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286505746",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-286505746",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 286505746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjUwNTc0Ng==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T17:53:32Z",
    "updated_at": "2017-03-14T17:53:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'd rather at least be consistent in what we do\r\n\r\nGiven that Mayavi now requires other APIs to be set (besides QString and QVariant), I think consistency demands to set them to v2 too."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286861585",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-286861585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 286861585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njg2MTU4NQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T20:02:17Z",
    "updated_at": "2017-03-15T20:02:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would lean towards bumping all imports to v2 in both ipython an mpl.\r\n\r\nOn the mpl side we have the `'backend.qt4'` rcparam which can take the values  `PyQt4` (all v1)  and `PyQt4v2` (some v2).  I think adding a `'PyQt4v2all'` path would be reasonable and would solve this problem.  I am :+1: on that going for for 2.0.1."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287992930",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-287992930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 287992930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzk5MjkzMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T06:59:59Z",
    "updated_at": "2017-03-21T06:59:59Z",
    "author_association": "MEMBER",
    "body": "Forgive me for being dense, I'm lost in a maze of Qt API versions, all alike...\r\n\r\nWhy would the following not work? \r\n\r\n- By default, we explicitly set all API versions to v2 in Qt4 when loading via `%gui qt4`.\r\n- We offer a new `%gui qt4v1` call that instead sets all versions to v1.\r\n- The version setting code is modified from its form in this PR to something like:\r\n\r\n```python\r\nfor QAPI in ['QDate', 'QDateTime', 'QString', 'QTextStream', \r\n                    'QTime', 'QUrl', 'QVariant']:\r\n    try:\r\n        sip.setapi(QAPI, version)\r\n    except ValueError:\r\n        pass\r\n```\r\n\r\nThat would make it possible for people who need some odd mix of v1 and v2 to still get what they want, simply by doing something like:\r\n\r\n```python\r\nfor QAPI in ['QDate', 'QString', 'QUrl']:\r\n    sip.setapi(QAPI, 1)\r\n%gui qt4\r\n```\r\nThose (I imagine quite rare) cases would still be able to mix and match as desired, while the majority of users of Qt4 would either get v2 by default, or could get v1 with a simple `%gui qt4v1` call.\r\n\r\nDoes this sound OK? It would require an update to this PR, but a fairly simple one, I think, and it seems to cover all the cases to me. Am I missing something?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288078208",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-288078208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 288078208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA3ODIwOA==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T13:30:13Z",
    "updated_at": "2017-03-21T13:30:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 to @fperez proposal. I find it cleaner and simpler than adding yet another QT_API value"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288189845",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-288189845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 288189845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE4OTg0NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T19:20:32Z",
    "updated_at": "2017-03-21T19:20:32Z",
    "author_association": "MEMBER",
    "body": " > +1 to @fperez proposal. I find it cleaner and simpler than adding yet another QT_API value\r\n\r\nI'm unsure that's easy (well the for loop part is, the adding `qt4v1` magic option not that much. The API version is set as a side effect of importing the modules that lookup which api versions are available (kinda silly). Without large API breakage and major refactoring I don't see any clean and easy way to do it.\r\n\r\nIt's anyway already wrong on 5.x:\r\n```\r\nIn [1]: %gui qt4\r\nIn [2]: from IPython.external.qt_for_kernel import QT_API\r\nIn [3]: QT_API\r\nOut[3]: 'pyqt5'\r\n```\r\n\r\nAnd the names of the `%gui` options are largely tied to names of modules. So I'm unsure what to do. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288218089",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-288218089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 288218089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODIxODA4OQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T21:04:24Z",
    "updated_at": "2017-03-21T21:04:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The API version is set as a side effect of importing the modules\r\n\r\nYou can set it before importing PyQt4. That's what we do in `qtpy`:\r\n\r\nhttps://github.com/spyder-ide/qtpy/blob/master/qtpy/__init__.py#L96-L102"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288511458",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-288511458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 288511458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODUxMTQ1OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-22T19:24:49Z",
    "updated_at": "2017-03-22T19:24:49Z",
    "author_association": "MEMBER",
    "body": "> You can set it before importing PyQt4. That's what we do in qtpy:\r\n> \r\n> https://github.com/spyder-ide/qtpy/blob/master/qtpy/__init__.py#L96-L102\r\n\r\nYes, but `from IPython.external.qt_for_kernel import QT_API` would still return the wrong things in IPython. I would like to understand why, and actually fix it. Also in terminal IPython, it's not sufficient (AFAICT) you need to setup eventloop integration between prompt-toolkit and QT, and \"just\" setting the API to v1 (or v2) before setting integration does not seem like the right things as it will still go through the autodetection mechanism, and may try to setup a different a different integration than the one that was forced before. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288553904",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-288553904",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 288553904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU1MzkwNA==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-22T22:02:49Z",
    "updated_at": "2017-03-22T22:02:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I would like to understand why, and actually fix it\r\n\r\nSure, that's the right thing to do because it seems things are broken now."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/289282277",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-289282277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 289282277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTI4MjI3Nw==",
    "user": {
      "login": "patricksnape",
      "id": 708474,
      "node_id": "MDQ6VXNlcjcwODQ3NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/708474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricksnape",
      "html_url": "https://github.com/patricksnape",
      "followers_url": "https://api.github.com/users/patricksnape/followers",
      "following_url": "https://api.github.com/users/patricksnape/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricksnape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricksnape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricksnape/subscriptions",
      "organizations_url": "https://api.github.com/users/patricksnape/orgs",
      "repos_url": "https://api.github.com/users/patricksnape/repos",
      "events_url": "https://api.github.com/users/patricksnape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricksnape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-26T13:08:59Z",
    "updated_at": "2017-03-26T13:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm +1 on @fperez suggestion. Though I'm not 100% clear I understand enough about QT to know what could be causing the issue @Carreau is talking about. Should I update this PR to be as described by @fperez and then someone can give some guidance on how we might solve the other issue? Or we break that into a separate PR/issue perhaps?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/335823583",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-335823583",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 335823583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTgyMzU4Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T14:11:16Z",
    "updated_at": "2017-10-11T14:11:16Z",
    "author_association": "MEMBER",
    "body": "What's the status of this? Since IPython itself never *uses* Qt, I'm happy to do whatever the matplotlib devs reckon is a good idea, as mpl uses Qt and is probably the main reason to load it inside IPython."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/336684665",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-336684665",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 336684665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY4NDY2NQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-15T03:58:19Z",
    "updated_at": "2017-10-15T03:58:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nothing has happened on the mpl side, but it is still probably a good idea.\r\n\r\nI am happy with @fperez 's suggestion for matplotlib and ipython to both try to set them all.\r\n\r\nOTOH Maybe if we procrastinate long enough qt4 will just fade away...."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/336732847",
    "html_url": "https://github.com/ipython/ipython/pull/10101#issuecomment-336732847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10101",
    "id": 336732847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjczMjg0Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-15T18:54:46Z",
    "updated_at": "2017-10-15T18:54:46Z",
    "author_association": "MEMBER",
    "body": "Yes, the status is \"Someone need to do it\", or as @tacaswell pointed if we wait enough maybe nobody will care anymore."
  }
]
