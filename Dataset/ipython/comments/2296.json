[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7694854",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7694854",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7694854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTQ4NTQ=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T15:16:47Z",
    "updated_at": "2012-08-13T15:16:47Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2109221) (merged 17634cc2 into 31afb62f).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7695029",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7695029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7695029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTUwMjk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T15:21:40Z",
    "updated_at": "2012-08-13T15:21:40Z",
    "author_association": "MEMBER",
    "body": "couldn't you do what you ask with `base_project_url`? ( I haven't looked at multiple notebook manager yet) \nAlso it should maybe be reflected in `File > open` ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7695678",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7695678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7695678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTU2Nzg=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T15:41:20Z",
    "updated_at": "2012-08-13T15:41:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\n\nBase project URL is the URL that the iPython server uses to serve a\nnotebook manager UI. In my case, I am using a notebook manager UI that is\nnot part of the core iPython code, and not served by iPython server. So\nwhen I set my notebook manager URL to say A, and notebook manager class to\nsay B, then the default python manager UI from iPython uses B to list\nnotebooks, etc, but at a different URL A (in my case served by Django), I\nsee a different UI with notebook searching, tagging, etc.\n\nI think at least at this point, it seems perfectly reasonable to support\nabstracting out the manager UI out of iPython core.\n\nShould definitely be reflected in File > Open. Thanks! I will update my\nbranch.\n\nBenjie\n\nOn Mon, Aug 13, 2012 at 11:21 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> couldn't you do what you ask with base_project_url? ( I haven't looked at\n> multiple notebook manager yet)\n> Also it should maybe be reflected in File > open ?\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2296#issuecomment-7695029.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7695961",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7695961",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7695961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTU5NjE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T15:49:19Z",
    "updated_at": "2012-08-13T15:49:19Z",
    "author_association": "MEMBER",
    "body": "I don't understand quite what you mean by this.  The notebook manager is an abstraction on the server side of things.  The notebook dashboard that we serve at `base_project_url` _is_ the UI for that.  Can you explain in more detail why you need an additional configurable URL for this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7695964",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7695964",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7695964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTU5NjQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T15:49:21Z",
    "updated_at": "2012-08-13T15:49:21Z",
    "author_association": "MEMBER",
    "body": "> In my case, I am using a notebook manager UI that is\n> not part of the core iPython code, and not served by iPython server.\n\nMake sens then :-)\nbut could it be set to 'base_project_url' by default (instead of `/`) if not set. \nOtherwise assuming one want just to change 'base_project_url' the banner will still redirect to `/` ...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7696223",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7696223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7696223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTYyMjM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T15:58:04Z",
    "updated_at": "2012-08-13T15:58:04Z",
    "author_association": "MEMBER",
    "body": "I think he is using [this](https://github.com/benjiec/django-ipy-nbmgr)\nWhich is a standalone server used to manage the notebooks. I didn't looked deeply into it, so maybe it uses a different url/port.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7696306",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7696306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7696306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTYzMDY=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T16:00:34Z",
    "updated_at": "2012-08-13T16:00:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau In thinking about this more, I think it may make better sense to add a redirect for the index view, from baseProjectUrl, rather than introducing a second Url setting. It make sense to have \"new\", \"open\", \"copy\" all go to the same baseProjectUrl, rather than just changing the behavior of \"open\".\n\nBasically, my alternative notebook manager UI leverages the existing iPython notebook manager HTTP interface to create, copy, rename notebooks, but just list notebooks differently. \n\nI updated my branch accordingly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7696370",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7696370",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7696370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTYzNzA=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T16:02:47Z",
    "updated_at": "2012-08-13T16:02:47Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2109658) (merged d25f82b2 into 31afb62f).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7696378",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7696378",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7696378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTYzNzg=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T16:03:05Z",
    "updated_at": "2012-08-13T16:03:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg @Carreau Does my latest comment/commit address your concerns? I think you are both right in that all I want is a different UI for listing the notebooks, so all I need should just be a different URL to serve the list of notebooks.\n\n@ellisonbg I am using a different UI to add searching of notebooks, tagging of notebooks, listing archives of earlier revisions of notebooks, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7697427",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7697427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7697427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTc0Mjc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T16:34:29Z",
    "updated_at": "2012-08-13T16:34:29Z",
    "author_association": "MEMBER",
    "body": "Thinking about it, \nIf there is 2 servers, wouldn't authentication be broken in the sens that you would have to login twice ?\n\nI haven't looked at the ability to change backend, but maybe there is a way to serve your pages from '/'.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7698033",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7698033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7698033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTgwMzM=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T16:52:31Z",
    "updated_at": "2012-08-13T16:52:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that's true. At the moment I've not thought about the dual login\nissue. Eventually we want single sign on anyways, if we do end up with two\nservers.\n\nRegarding \"serving from /\" -- this is an interesting thought. What if we\ndelegate more to the manager? Right now we handle URLs in handler.py and\ncall routines in notebook manager, but what if we put in more UI\nfunctionality in the notebook manager as well? E.g. routing of URLs,\nloading templates, etc.\n\nIn that case, we can add a manager that serves the default dashboard UI,\nand current file system based manager and azure manager can subclass that,\nand I can create a separate notebook manager all together.\n\nThen I can serve URLs, from the same iPython server, that are just\napplicable for my UI. E.g. API for accessing tags, archives, etc. And my JS\ncode can use those APIs.\n\nLooking at the URL list in notebookapp.py, I think it makes sense to\ndelegate anything dealing with notebooks to the notebook manager, leaving\ncluster and kernel management as is.\n\nThoughts?\n\nBenjie\n\nOn Mon, Aug 13, 2012 at 12:34 PM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Thinking about it,\n> If there is 2 servers, wouldn't authentication be broken in the sens that\n> you would have to login twice ?\n> \n> I haven't looked at the ability to change backend, but maybe there is a\n> way to serve your pages from '/'.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2296#issuecomment-7697427.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7703032",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7703032",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7703032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDMwMzI=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T18:44:52Z",
    "updated_at": "2012-08-13T18:44:52Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2110921) (merged f5c7d41b into 32d438ed).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7703469",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7703469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7703469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDM0Njk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T18:54:26Z",
    "updated_at": "2012-08-13T18:54:26Z",
    "author_association": "MEMBER",
    "body": "Why are there merge commits in here?  There shouldn't be.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7704758",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7704758",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7704758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDQ3NTg=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-13T19:16:20Z",
    "updated_at": "2012-08-13T19:16:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not clear on the pull request process, sorry. But I gather now I\nshould not be merging in changes, which totally makes sense. I will reset\nback to my earlier commit.\n\nBenjie\n\nOn Mon, Aug 13, 2012 at 2:54 PM, Min RK notifications@github.com wrote:\n\n> Why are there merge commits in here? There shouldn't be.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2296#issuecomment-7703469.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7714956",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7714956",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7714956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTQ5NTY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-14T02:58:27Z",
    "updated_at": "2012-08-14T02:58:27Z",
    "author_association": "MEMBER",
    "body": "If this does go in, then I think that redirects are the way to do it.  But I am not sure that this makes sense at this point.  A few points:\n- The internal structure of the notebook server that you are modifying is very much a moving target.  More specifically, we have plans that would completely refactor all of it in the next 6-12 months.  In light of this, I don't want to expose things to developers like yourself and be committed to maintaining them.\n- We want the notebook to be extensible, but in a very different manner than this.  My idea is to break up the html/js/css/handlers into reusable components that people like yourself can assemble in different ways.  Each of those components will have well supported, official dev APIs for customizations.  But in this new model, customization will be done by writing custom main applications that assemble the pieces in the desired manner.  In fact, IPython itself may end up having multiple top level notebook server scripts for different purposes.  I would much rather make it easy for people like yourself to write the top level scripts than to try to have one script with a million different configuration options to try and please everyone.\n\nOn more practical notes:\n- From a technical standpoint, I don't see why you are trying to run django in a separate process.  Do you have an existing app you are integrating with?  Why not just write everything using sqlalchemy and tornado?\n- We are wanting to move the notebook in this direction, although we are thinking of using git for version control.  I would much rather have discussions to see if we could design a more general UI that can support different notebook managers. Would you be interested in working with us on these things?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7716527",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-7716527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 7716527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTY1Mjc=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-14T05:17:08Z",
    "updated_at": "2012-08-14T05:17:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg I do have another django based app that I am integrating with, but I think it's much better if I first forget about that integration and just get the iPython part right.\n\n@Carreau @ellisonbg What do you guys think of a new effort in the following commit:\n\nhttps://github.com/benjiec/ipython/commit/7b86380a369b6b7235b433bf6da4b14e7b1f2ec2\n\nThis is not part of this PR, but I thinking over the above comments, I decided that it may be better for me to take a less divergent approach. Instead of a complete different backend to store notebooks and separate server to handle dashboard UI, I extended the list_notebooks method of notebook manager and the NotebookRootHandler to allow sorting and querying/filtering. I hope this effort at least would be useful for you, and be easier to maintain if you do decide to take it.\n\nThis commit lets notebook manager optionally handle ordering and filtering. Notebook manager can also pass extra information to the UI. E.g. I extended file based nb manager to also include a mtime that the UI displays. And if the UI asks for sorting by mtime, then file based nb manager handles it. The UI also includes a widget to search notebooks by name.\n\nIt may still be useful to abstract out the JS code to be manager specific? E.g. right now the JS code handles when backend does not pass it mtime, but displays a mtime column anyways. So it's clearly backend specific. That may be okay, though, if there may be some consensus on what the frontend should look like, or at least what the default frontend should look like. This may be closer to what you are thinking about.\n\nFor myself, I plan on a simple subclass of file based notebook manager to just create converted notebooks on each save for archiving for now, and stuff them in a directory or in a git repo.\n\nSorry, I have obviously not thought about all this as much as you have. I'd love to help in some way; we are developing an app that I want to use iPython notebook significantly, with many users and many notebooks. The UI side of the notebook manager is just one thing, but we are also interested in interface between iPython and the browser, for SVG visualization stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8021750",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-8021750",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 8021750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjE3NTA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-25T09:36:44Z",
    "updated_at": "2012-08-25T09:36:44Z",
    "author_association": "MEMBER",
    "body": "@benjiec sorry not to answer before it sliped through my todo list \n\n> @Carreau @ellisonbg What do you guys think of a new effort in the following commit:\n> https://github.com/benjiec/ipython/commit/7b86380a369b6b7235b433bf6da4b14e7b1f2ec2\n\nWe definitely want a more advance frontend. \nI like the search and ordering stuff, but I don't think we have to do it in python, I think you could pass a lot of information to the frontend through JSON and keep the javascript do whatever it want with it, it would make a more smoother interface. \n\n> It may still be useful to abstract out the JS code to be manager specific? E.g. right now the JS code handles when backend does not pass it mtime, but displays a mtime column anyways. So it's clearly backend specific. That may be okay, though, if there may be some consensus on what the frontend should look like, or at least what the default frontend should look like. This may be closer to what you are thinking about.\n\nFrontend should allow to browse file system for sure. \nWhen git/github backend is done, we should show the file status. \nAnd ability to push to github. \n\n> For myself, I plan on a simple subclass of file based notebook manager to just create converted notebooks on each save for archiving for now, and stuff them in a directory or in a git repo.\n\nDoes 'converted' mean static html ? or .py files ? for .py we already have an option.\nhttp://nbviewer.ipython.org/ and nbconvert allow you to make static views. \n\nI (maybe not the vision of everyone) would **love** changing the `save` button of the notebook to `commit` (that autogenerate a commit message and `commit -a`) with a small drop down arrow on the side that pop up a dialog with the current file of the current repo. Beeing able to tick the one you want to commit , and a text area for a commit message. \n\n(something like `Dropdown in a button group` of http://twitter.github.com/bootstrap/base-css.html#icons) \n\n> Sorry, I have obviously not thought about all this as much as you have. I'd love to help in some way; we are developing an app that I want to use iPython notebook significantly, with many users and many notebooks. The UI side of the notebook manager is just one thing, but we are also interested in interface between iPython and the browser, for SVG visualization stuff.\n\nYou have an user base so you might get a lot more feedback that we will have. \nWe will be really happy to have your contribution, it might take more time to have them integrated upstream but I guess it is really worth it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8023352",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-8023352",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 8023352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjMzNTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-25T13:40:01Z",
    "updated_at": "2012-08-25T13:40:01Z",
    "author_association": "MEMBER",
    "body": "@benjiec do you still want to have a different target for the notebook banner ? \nOr do we close this PR ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8029803",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-8029803",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 8029803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjk4MDM=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-26T03:19:38Z",
    "updated_at": "2012-08-26T03:19:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the comments here and on the list. I will take a look at them,\nand send you a PR or something on some of the smaller issues to get started.\n\nBut this PR can close. Thanks.\n\nOn Sat, Aug 25, 2012 at 9:40 PM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> @benjiec https://github.com/benjiec do you still want to have a\n> different target for the notebook banner ?\n> Or do we close this PR ?\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2296#issuecomment-8023352.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8031832",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-8031832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 8031832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzE4MzI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-26T10:07:10Z",
    "updated_at": "2012-08-26T10:07:10Z",
    "author_association": "MEMBER",
    "body": "ok, closing to lower the number of opened PRs. Waiting for new awesome features. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8276797",
    "html_url": "https://github.com/ipython/ipython/pull/2296#issuecomment-8276797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2296",
    "id": 8276797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzY3OTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-04T20:06:31Z",
    "updated_at": "2012-09-04T20:06:31Z",
    "author_association": "MEMBER",
    "body": "I don't have time to look at this right now, so this will probably need to\nwait for a few more weeks.  Sorry.\n\nOn Mon, Aug 13, 2012 at 10:17 PM, Benjie Chen notifications@github.comwrote:\n\n> @ellisonbg https://github.com/ellisonbg I do have another django based\n> app that I am integrating with, but I think it's much better if I first\n> forget about that integration and just get the iPython part right.\n> \n> @Carreau https://github.com/Carreau @ellisonbghttps://github.com/ellisonbgWhat do you guys think of a new effort in the following commit:\n> \n> https://github.com/benjiec/ipython/commit/7b86380a369b6b7235b433bf6da4b14e7b1f2ec2\n> \n> This is not part of this PR, but I thinking over the above comments, I\n> decided that it may be better for me to take a less divergent approach.\n> Instead of a complete different backend to store notebooks and separate\n> server to handle dashboard UI, I extended the list_notebooks method of\n> notebook manager and the NotebookRootHandler to allow sorting and\n> querying/filtering. I hope this effort at least would be useful for you,\n> and be easier to maintain if you do decide to take it.\n> \n> This commit lets notebook manager optionally handle ordering and\n> filtering. Notebook manager can also pass extra information to the UI. E.g.\n> I extended file based nb manager to also include a mtime that the UI\n> displays. And if the UI asks for sorting by mtime, then file based nb\n> manager handles it. The UI also includes a widget to search notebooks by\n> name.\n> \n> It may still be useful to abstract out the JS code to be manager specific?\n> E.g. right now the JS code handles when backend does not pass it mtime, but\n> displays a mtime column anyways. So it's clearly backend specific. That may\n> be okay, though, if there may be some consensus on what the frontend should\n> look like, or at least what the default frontend should look like. This may\n> be closer to what you are thinking about.\n> \n> For myself, I plan on a simple subclass of file based notebook manager to\n> just create converted notebooks on each save for archiving for now, and\n> stuff them in a directory or in a git repo.\n> \n> Sorry, I have obviously not thought about all this as much as you have.\n> I'd love to help in some way; we are developing an app that I want to use\n> iPython notebook significantly, with many users and many notebooks. The UI\n> side of the notebook manager is just one thing, but we are also interested\n> in interface between iPython and the browser, for SVG visualization stuff.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2296#issuecomment-7716527.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
