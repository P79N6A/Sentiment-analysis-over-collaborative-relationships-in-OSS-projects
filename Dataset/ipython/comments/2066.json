[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6687419",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6687419",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6687419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc0MTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-30T18:40:58Z",
    "updated_at": "2012-06-30T18:40:58Z",
    "author_association": "MEMBER",
    "body": "Does this still prevent execution if the user accesses the `IPython.notebook.kernel` object from the JS console?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6687735",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6687735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6687735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc3MzU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-30T19:20:03Z",
    "updated_at": "2012-06-30T19:20:03Z",
    "author_association": "MEMBER",
    "body": "There is no kernel started when in read-only mode, so no you can't execute anythings.\n\nNote that the changes I made are only on frontend side, and are mainly graphical details. The server authentification logic is untouched and nothing prevent the user to get back a seemingly working UI by setting IPython.read_only to true in JS.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6687775",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6687775",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6687775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc3NzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-30T19:25:23Z",
    "updated_at": "2012-06-30T19:25:23Z",
    "author_association": "MEMBER",
    "body": "But if I remember correctly, when secure login is on, you can also have unauthenticated users view notebooks in read-only mode, except that they can 'jump over the fence' by grabbing `IPython.notebook.kernel` from the JS console.  That's what I was wondering about...\n\nIn any case, this looks fine but my JS chops are so weak that my review shouldn't be enough to merge; let's wait for one more pair of eyes from someone who's been digging deeper into the JS code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6690222",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6690222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6690222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTAyMjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T01:48:31Z",
    "updated_at": "2012-07-01T01:48:31Z",
    "author_association": "MEMBER",
    "body": "You cannot connect a kernel without authorization - that is all handled server-side, and no JS can change that.  You can _try_ to connect to the kernel from the js console, but you will fail.\n\nI'm not sure how much love we really want to bother giving the current read-only mode, as @ellisonbg intends to discard the whole thing and start from scratch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6691599",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6691599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6691599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTE1OTk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T07:21:06Z",
    "updated_at": "2012-07-01T07:21:06Z",
    "author_association": "MEMBER",
    "body": "> I'm not sure how much love we really want to bother giving the current read-only mode, as @ellisonbg intends to discard the whole thing and start from scratch\n\nYes, I know, but are we even sure it will land before 0.14 ? and this can also be part of 0.13.1 if we get too much complaint on bad/confusing r-o mode.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6695096",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6695096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6695096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTUwOTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T17:05:53Z",
    "updated_at": "2012-07-01T17:05:53Z",
    "author_association": "MEMBER",
    "body": "> Yes, I know, but are we even sure it will land before 0.14 ? and this can also be part of 0.13.1 if we get too much complaint on bad/confusing r-o mode.\n\nTrue.\n\nThis code gets the read_only state from too many different places.  I think all of the `this.read_only || IPython.read_only` should be cleaned up to use `this.read_only`.  I presume the reason for these is that `this.read_only` is not reliably set, but that's what should be fixed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6696268",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6696268",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6696268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYyNjg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T19:35:58Z",
    "updated_at": "2012-07-01T19:35:58Z",
    "author_association": "MEMBER",
    "body": "Well, the other reason is I don't understand well JS inheritance, and the \n`MyObject.prototype = new MyParent()` confuse me a lot, and I was not understanding how to pass value to parent constructor, it is better now, but i'm not quite sure I totally get it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6696283",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6696283",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6696283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYyODM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T19:37:30Z",
    "updated_at": "2012-07-01T19:37:30Z",
    "author_association": "MEMBER",
    "body": "I don't totally get it either, but we should try to figure these things out rather than writing code that explicitly avoids properly understanding what's going on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6738255",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-6738255",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 6738255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzgyNTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-03T15:53:43Z",
    "updated_at": "2012-07-03T15:53:43Z",
    "author_association": "MEMBER",
    "body": "I am not thrilled about all of the `if read_only` logic in general.  I think we need a solution that doesn't involve putting if statements everywhere.\n\nI agree that we should not use both `IPython.read_only` and `this.read_only`.  But if the `read_only` attribute is used outside the `Notebook` class, we should use the global version.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7011994",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-7011994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 7011994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTE5OTQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-16T16:57:54Z",
    "updated_at": "2012-07-16T16:57:54Z",
    "author_association": "MEMBER",
    "body": "Do I close this, or remove the JS read-only logic. \nDon't want to let it rot. \n\nI'm wondering if a almost is a thing a little like [this](http://bl.ocks.org/) but for ipynb gist (instead of d3.js) could be written.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7153552",
    "html_url": "https://github.com/ipython/ipython/pull/2066#issuecomment-7153552",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2066",
    "id": 7153552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTM1NTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T14:57:00Z",
    "updated_at": "2012-07-21T14:57:00Z",
    "author_association": "MEMBER",
    "body": "FYI, durring SciPy, we add some request to know if there was a way to \"soft lock\" cell. \nEspecially from enthought, that want to have \"exercise\", and would like to have cell that are , in some ways, protected.\n"
  }
]
