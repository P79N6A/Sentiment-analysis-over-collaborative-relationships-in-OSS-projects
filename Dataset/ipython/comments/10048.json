[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261541727",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261541727",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261541727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTU0MTcyNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T14:17:29Z",
    "updated_at": "2016-11-18T14:17:29Z",
    "author_association": "MEMBER",
    "body": "Here's [an example](https://nbviewer.jupyter.org/gist/minrk/300aaa15de9890b3af145cb993e9c964) demonstrating this with current master of ipykernel, notebook now that those PRs have been merged.\n\nThis is my interpretation of proposals from @fperez and @jasongrout about creating a handle and auto-generating a display_id with a boolean flag (in this case, I used `display_id=True` rather than a separate `track=True` flag):\n- `display(obj, display_id=True)` generates a new display_id and returns a `DisplayHandle`\n- `display(obj, display_id='given-id')` returns a `DisplayHandle` with given display_id\n- `display(obj)` returns None\n- `update_display(obj, display_id='id')` `display_id` is required\n- `DisplayHandle.display(obj)` is equivalent to `display(obj, display_id=handle.display_id)`\n- `DisplayHandle.update(obj)` is equivalent to `update_display(obj, display_id=handle.display_id)`\n\nSo the quickest way to create and update a display without needing to generate an id yourself:\n\n``` python\nhandle = display(x, display_id=True)\nhandle.update(y)\nhandle.update(z)\n```\n\nPossible functionality that is currently excluded:\n1. the ability for items to define and record their own display_id, such as:\n   - `display(x)` being equivalent to `display(x, display_id=x._ip_display_id_())`\n   - `update_display(x)` discovering display_id from x itself (same as above, really)\n   - allowing ExecuteResults to have display_id (again, ultimately boils down to getting display_id from the object)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261579122",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261579122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261579122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTU3OTEyMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T16:43:07Z",
    "updated_at": "2016-11-18T16:43:07Z",
    "author_association": "MEMBER",
    "body": "For @Carreau, @takluyver: I made use of the fact that we are Python 3-only now by making some new args explicitly keyword-only but still in the signature. Hooray for progress!\n\nWe can refine/revise the APIs in subsequent PRs, but this one is complete enough for people to play with and build opinions about, I think. Thanks, @rgbkrk!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261605724",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261605724",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261605724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTYwNTcyNA==",
    "user": {
      "login": "willingc",
      "id": 2680980,
      "node_id": "MDQ6VXNlcjI2ODA5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willingc",
      "html_url": "https://github.com/willingc",
      "followers_url": "https://api.github.com/users/willingc/followers",
      "following_url": "https://api.github.com/users/willingc/following{/other_user}",
      "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willingc/subscriptions",
      "organizations_url": "https://api.github.com/users/willingc/orgs",
      "repos_url": "https://api.github.com/users/willingc/repos",
      "events_url": "https://api.github.com/users/willingc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willingc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T18:31:53Z",
    "updated_at": "2016-11-18T18:31:53Z",
    "author_association": "MEMBER",
    "body": "@minrk Thanks for the clarification re: '*' and arguments. I hadn't seen it used in the wild yet ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261608439",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261608439",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261608439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTYwODQzOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T18:42:35Z",
    "updated_at": "2016-11-18T18:42:35Z",
    "author_association": "MEMBER",
    "body": "Sweet !\n\n@willingc , you will also see `/` in docstrings:\n\n```\nIn [2]: input?\nSignature: input(prompt=None, /)\nDocstring:\nRead a string from standard input.  The trailing newline is stripped.\n\nThe prompt string, if given, is printed to standard output without a\ntrailing newline before reading input.\n\nIf the user hits EOF (*nix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError.\nOn *nix systems, readline is used if available.\n```\n\nIt means \"end of positional only arguments\". Above it means that `prompt` default to None, but that you can't say `input(prompt='foo')`, you have to use `input('foo')`. It's an even more rare beast than `*` :-) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261679187",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261679187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261679187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTY3OTE4Nw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-19T00:48:32Z",
    "updated_at": "2016-11-19T00:48:32Z",
    "author_association": "MEMBER",
    "body": "Oh does this mean no update display in Python 2 for now? I misconstrued earlier sentiment that we'd keep doing a python 2 kernel for a bit and enforcing python 3 for services (notebook, hub).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261717296",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261717296",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261717296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTcxNzI5Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-19T14:34:39Z",
    "updated_at": "2016-11-19T14:34:39Z",
    "author_association": "MEMBER",
    "body": "We're planning to keep supporting IPython 5 for Python 2 users for some time, but make IPython 6 require Python 3. As this is a new feature in IPython, Min has targeted it for IPython 6. We could maybe make a distinction between user-facing features and infrastructure features, and allow backporting some of the latter. I'd be -0.25 on doing that.\n\nSeparately, at some point the applications will require Python 3. Hub already does. For those, we don't plan to make an LTS version with Python 2 support as we have for IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/261891029",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-261891029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 261891029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTg5MTAyOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T09:46:43Z",
    "updated_at": "2016-11-21T09:46:43Z",
    "author_association": "MEMBER",
    "body": "I'm okay targeting this for 5.x as well, if people have that preference. I just wanted to note that my experience was slightly improved by the fact that IPython 6 has dropped py2 support. The differences are small, so it wouldn't be a big deal to backport.\r\n\r\nIt is only `ipython/ipython` that's dropped py2 so far, so the ipykernel, notebook changes will still propagate to py2 users. A library that wants to support this in py2 could do `ip.display_pub.publish(data=,metadata=,transient=)`."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/262025995",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-262025995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 262025995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjAyNTk5NQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T18:33:50Z",
    "updated_at": "2016-11-21T18:33:50Z",
    "author_association": "MEMBER",
    "body": "Ok, great. I'll use `ip.display_pub.publish` for now within the lib I'm working with that supports both."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/262034190",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-262034190",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 262034190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjAzNDE5MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T19:03:18Z",
    "updated_at": "2016-11-21T19:03:18Z",
    "author_association": "MEMBER",
    "body": "I would be ok backporting.  My Backporting bot that you can just `@-mention` is not ready yet though. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/262034646",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-262034646",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 262034646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjAzNDY0Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T19:05:12Z",
    "updated_at": "2016-11-21T19:05:12Z",
    "author_association": "MEMBER",
    "body": "TIL @mention is a reserved name on github so you don't need to take extra-care when writing it."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299270181",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-299270181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 299270181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTI3MDE4MQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:28:42Z",
    "updated_at": "2017-05-04T18:28:42Z",
    "author_association": "MEMBER",
    "body": "@carreau would you be willing to backport this one? It's the feature I want to use and support across PySpark installations for updating job statuses."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299272525",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-299272525",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 299272525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTI3MjUyNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:37:39Z",
    "updated_at": "2017-05-04T18:37:39Z",
    "author_association": "MEMBER",
    "body": "I think that is reasonable enough to make API used by many package like TQDM consistant between stable version. Let's see if it applies cleanly to 5.x\r\n\r\n@meeseeksdev backport"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299272572",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-299272572",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 299272572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTI3MjU3Mg==",
    "user": {
      "login": "meeseeksdev[bot]",
      "id": 24485218,
      "node_id": "MDM6Qm90MjQ0ODUyMTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meeseeksdev%5Bbot%5D",
      "html_url": "https://github.com/apps/meeseeksdev",
      "followers_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:37:48Z",
    "updated_at": "2017-05-04T18:37:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oops, something went wrong applying the patch... Please have  a look at my logs."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299272676",
    "html_url": "https://github.com/ipython/ipython/pull/10048#issuecomment-299272676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10048",
    "id": 299272676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTI3MjY3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:38:11Z",
    "updated_at": "2017-05-04T18:38:11Z",
    "author_association": "MEMBER",
    "body": "Ok, may need manual backport. "
  }
]
