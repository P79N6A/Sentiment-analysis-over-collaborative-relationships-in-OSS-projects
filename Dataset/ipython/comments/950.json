[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2571623",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2571623",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2571623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE2MjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T21:22:57Z",
    "updated_at": "2011-10-30T21:22:57Z",
    "author_association": "MEMBER",
    "body": "Looks great, thanks!  I'd like to have a test in the suite for this though: a simple temp-generated file with `zzz = 123456` and checking afterwards that the initialized instance has zzz with that value should suffice.  But at least it will ensure the codepaths for loading startup files do get exercised in the test suite.\n\nOnce we get a test, good to go.  Great work, this will be really liked by users.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2571706",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2571706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2571706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE3MDY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T21:38:27Z",
    "updated_at": "2011-10-30T21:38:27Z",
    "author_association": "MEMBER",
    "body": "I don't quite know how to write that test, but I'll figure it out.  I think I need to copy a lot of the env code from test_path.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2571801",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2571801",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2571801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE4MDE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T21:56:01Z",
    "updated_at": "2011-10-30T21:56:01Z",
    "author_association": "MEMBER",
    "body": "Great, thanks.  Let me know if you get stuck and I can pitch in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2571940",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2571940",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2571940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE5NDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T22:22:42Z",
    "updated_at": "2011-10-30T22:22:42Z",
    "author_association": "MEMBER",
    "body": "test added (and fixed a small bug in ipexec_validate, which was needed)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572479",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2572479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2572479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI0Nzk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:09:22Z",
    "updated_at": "2011-10-31T00:09:22Z",
    "author_association": "MEMBER",
    "body": "Mmh, the check for the startup files/directory must be optional.  Right now, IPython won't even start if those files aren't there:\n\n```\np\nError in sys.excepthook:\nTraceback (most recent call last):\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/crashhandler.py\", line 144, in __call__\n    traceback = TBhandler.text(etype,evalue,etb,context=31)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ultratb.py\", line 402, in text\n    tb_offset, context)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ultratb.py\", line 964, in structured_traceback\n    ipinst = ipapi.get()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ipapi.py\", line 28, in get\n    return InteractiveShell.instance()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/configurable.py\", line 318, in instance\n    inst = cls(*args, **kwargs)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 384, in __init__\n    self.init_profile_dir(profile_dir)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 503, in init_profile_dir\n    ProfileDir.create_profile_dir_by_name(self.ipython_dir, 'default')\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 181, in create_profile_dir_by_name\n    return cls(location=profile_dir, config=config)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/configurable.py\", line 87, in __init__\n    super(Configurable, self).__init__(**kwargs)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 421, in __init__\n    setattr(self, key, value)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 307, in __set__\n    obj._notify_trait(self.name, old_value, new_value)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 458, in _notify_trait\n    c(name, old_value, new_value)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 86, in _location_changed\n    self.startup_dir = os.path.join(new, self.startup_dir_name)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 307, in __set__\n    obj._notify_trait(self.name, old_value, new_value)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 458, in _notify_trait\n    c(name, old_value, new_value)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 98, in _startup_dir_changed\n    self.check_startup_dir()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 106, in check_startup_dir\n    shutil.copy(src, readme)\n  File \"/usr/lib/python2.7/shutil.py\", line 116, in copy\n    copyfile(src, dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 81, in copyfile\n    with open(src, 'rb') as fsrc:\nIOError: [Errno 2] No such file or directory: u'/home/fperez/usr/lib/python2.7/site-packages/IPython/config/profile/README_STARTUP'\n```\n\nHaving those files and directories should be completely optional... Furthermore, it looks like you forgot to commit the README file itself, I think.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572547",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2572547",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2572547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1NDc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:27:02Z",
    "updated_at": "2011-10-31T00:27:02Z",
    "author_association": "MEMBER",
    "body": "The bug is the new readme missing from git.   IPython creates any missing dirs, so it doesn't matter if you make them or remove them, it will always run just fine.\n\nThe readme is entirely pointless if IPython doesn't create the dir.\n\nOn Oct 30, 2011, at 17:09, Fernando Perezreply@reply.github.com wrote:\n\n> Mmh, the check for the startup files/directory must be optional.  Right now, IPython won't even start if those files aren't there:\n> \n> ```\n> p\n> Error in sys.excepthook:\n> Traceback (most recent call last):\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/crashhandler.py\", line 144, in __call__\n>    traceback = TBhandler.text(etype,evalue,etb,context=31)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ultratb.py\", line 402, in text\n>    tb_offset, context)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ultratb.py\", line 964, in structured_traceback\n>    ipinst = ipapi.get()\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ipapi.py\", line 28, in get\n>    return InteractiveShell.instance()\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/configurable.py\", line 318, in instance\n>    inst = cls(*args, **kwargs)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 384, in __init__\n>    self.init_profile_dir(profile_dir)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 503, in init_profile_dir\n>    ProfileDir.create_profile_dir_by_name(self.ipython_dir, 'default')\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 181, in create_profile_dir_by_name\n>    return cls(location=profile_dir, config=config)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/configurable.py\", line 87, in __init__\n>    super(Configurable, self).__init__(**kwargs)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 421, in __init__\n>    setattr(self, key, value)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 307, in __set__\n>    obj._notify_trait(self.name, old_value, new_value)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 458, in _notify_trait\n>    c(name, old_value, new_value)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 86, in _location_changed\n>    self.startup_dir = os.path.join(new, self.startup_dir_name)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 307, in __set__\n>    obj._notify_trait(self.name, old_value, new_value)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 458, in _notify_trait\n>    c(name, old_value, new_value)\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 98, in _startup_dir_changed\n>    self.check_startup_dir()\n>  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/profiledir.py\", line 106, in check_startup_dir\n>    shutil.copy(src, readme)\n>  File \"/usr/lib/python2.7/shutil.py\", line 116, in copy\n>    copyfile(src, dst)\n>  File \"/usr/lib/python2.7/shutil.py\", line 81, in copyfile\n>    with open(src, 'rb') as fsrc:\n> IOError: [Errno 2] No such file or directory: u'/home/fperez/usr/lib/python2.7/site-packages/IPython/config/profile/README_STARTUP'\n> ```\n> \n> Having those files and directories should be completely optional... Furthermore, it looks like you forgot to commit the README file itself, I think.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/950#issuecomment-2572479\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572561",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2572561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2572561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1NjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:30:33Z",
    "updated_at": "2011-10-31T00:30:33Z",
    "author_association": "MEMBER",
    "body": "Missing readme added to git.\n\nYou absolutely don't have to create the dir yourself, IPython will do it for you (just like log, security, pid), and stage the README into it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572571",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2572571",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2572571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1NzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:33:34Z",
    "updated_at": "2011-10-31T00:33:34Z",
    "author_association": "MEMBER",
    "body": "Looks great now, thanks!  Merging...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572591",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-2572591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 2572591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1OTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:38:41Z",
    "updated_at": "2011-10-31T00:38:41Z",
    "author_association": "MEMBER",
    "body": "awesome, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4993045",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-4993045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 4993045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMwNDU=",
    "user": {
      "login": "pierre-haessig",
      "id": 1010404,
      "node_id": "MDQ6VXNlcjEwMTA0MDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1010404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pierre-haessig",
      "html_url": "https://github.com/pierre-haessig",
      "followers_url": "https://api.github.com/users/pierre-haessig/followers",
      "following_url": "https://api.github.com/users/pierre-haessig/following{/other_user}",
      "gists_url": "https://api.github.com/users/pierre-haessig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pierre-haessig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pierre-haessig/subscriptions",
      "organizations_url": "https://api.github.com/users/pierre-haessig/orgs",
      "repos_url": "https://api.github.com/users/pierre-haessig/repos",
      "events_url": "https://api.github.com/users/pierre-haessig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pierre-haessig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-06T09:45:40Z",
    "updated_at": "2012-04-06T09:47:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\nOne question about startup files in terms of namespace. Looking at http://python.6.n6.nabble.com/Run-code-at-startup-td1652498.html it feels like startup files would work in a similar fasion as exec_files and exec_lines.\n\nHowever, I can use `exec_lines` to import a module like \n\n>  c.InteractiveShellApp.exec_lines = ['from **future** import division']\n\nand then the module is available in the shell\nbut if I drop the line `from __future__ import division` in a simple Python startup file, it is not. I guess it is not executed in the shell namespace ?\n\nWas this behavioral difference intentional ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4996214",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-4996214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 4996214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTYyMTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-06T14:36:26Z",
    "updated_at": "2012-04-06T14:36:26Z",
    "author_association": "MEMBER",
    "body": "I don't think that was intentional. Does it affect all import, or just\n**future** statements? **future** works in a very different way to\nnormal imports.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4996568",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-4996568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 4996568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTY1Njg=",
    "user": {
      "login": "pierre-haessig",
      "id": 1010404,
      "node_id": "MDQ6VXNlcjEwMTA0MDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1010404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pierre-haessig",
      "html_url": "https://github.com/pierre-haessig",
      "followers_url": "https://api.github.com/users/pierre-haessig/followers",
      "following_url": "https://api.github.com/users/pierre-haessig/following{/other_user}",
      "gists_url": "https://api.github.com/users/pierre-haessig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pierre-haessig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pierre-haessig/subscriptions",
      "organizations_url": "https://api.github.com/users/pierre-haessig/orgs",
      "repos_url": "https://api.github.com/users/pierre-haessig/repos",
      "events_url": "https://api.github.com/users/pierre-haessig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pierre-haessig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-06T14:56:26Z",
    "updated_at": "2012-04-06T14:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point ! Indeed I've just checked that for instance `import math` works well. Thanks for the feedback.\n\nI don't know the internal machinery behind **future** imports though. I just noticed that there is a complain if the **future** import statement is not the first one in the file. But I guess it's the same for any Python script. Is it ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4996764",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-4996764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 4996764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTY3NjQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-06T15:09:28Z",
    "updated_at": "2012-04-06T15:09:28Z",
    "author_association": "MEMBER",
    "body": "Yes, I think that's the same for any Python file.\n\nOK, the problem is that startup files are run by ip.safe_execfile()\n(https://github.com/ipython/ipython/blob/master/IPython/core/interactiveshell.py#L2306),\nwhich doesn't put them through the compiler that remembers future\ndirectives (ip,compile()). We'll need to work out exactly what should\nand shouldn't affect the **future** state of the shell. For now, if\nyou give the files a .ipy extension, they should go through a\ndifferent route where **future** statements will have an effect.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5068410",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-5068410",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 5068410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjg0MTA=",
    "user": {
      "login": "pierre-haessig",
      "id": 1010404,
      "node_id": "MDQ6VXNlcjEwMTA0MDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1010404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pierre-haessig",
      "html_url": "https://github.com/pierre-haessig",
      "followers_url": "https://api.github.com/users/pierre-haessig/followers",
      "following_url": "https://api.github.com/users/pierre-haessig/following{/other_user}",
      "gists_url": "https://api.github.com/users/pierre-haessig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pierre-haessig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pierre-haessig/subscriptions",
      "organizations_url": "https://api.github.com/users/pierre-haessig/orgs",
      "repos_url": "https://api.github.com/users/pierre-haessig/repos",
      "events_url": "https://api.github.com/users/pierre-haessig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pierre-haessig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-11T13:17:32Z",
    "updated_at": "2012-04-11T13:17:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've checked that indeed using the .ipy extension makes future imports work. Thanks for the tip.\n\nI feel like this issue is too small to deserve a bug report but I think it should be fixed at some point. _In the meantime_, my suggestion is to add a footnote in the README in the startup directory that would explain: 1) the problem 2) the solution you mentioned (using .ipy instead of .py). \n\nI propose something like this : \n\n_About importing modules_ : using import statements in startup .py files will make the imported modules available in the running ipython session. This is one of the useful uses of startup scripts. \nHowever, there is an exception for imports from the  **future** module (like division, print_function, ...) which won't be available due to the way the startup scripts are currently executed. This limitation may be lifted in a next release but in the meantime, the simplest solution is to use the .ipy extension which changes the execution path of the script and fixes the problem.\n\nWhat do you think ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5070109",
    "html_url": "https://github.com/ipython/ipython/pull/950#issuecomment-5070109",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/950",
    "id": 5070109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzAxMDk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-11T14:35:37Z",
    "updated_at": "2012-04-11T14:40:13Z",
    "author_association": "MEMBER",
    "body": "It may require a note in the documentation, depending on what we decide to do. On reflection, though, using .ipy is a rather ugly hack, and we might decide that it shouldn't work from .ipy files either. A better workaround is to call `get_ipython().run_cell('from __future__ import division')` in your startup script.\n\nThe tricky thing is working out what semantics people expect. If your `startup.py` includes `from __future__ import division`, and you do `from startup import *` at a plain Python prompt, you _don't_ get new style division. These `__future__` imports were always intended to work at the module level, without affecting other code in the process. You may want new style division only within that startup file, or you may want it to affect interactive use.\n\nSo, where can IPython run interactive code that we need to consider:\n- At startup: `exec_lines`, `exec_files`, startup files. There are .py and .ipy files, and they should definitely behave the same way with future statements.\n- `%run` (and `%run -i`), `%rerun`, `%edit`, macros, `%loadpy`\n- Extensions\n- Code loaded by the autoreload extension\n\nMy gut feeling is that of those, `exec_lines`, `%loadpy`, macros and maybe `%run -i` should 'leak' future statements to the interactive environment. Everything else should keep future statements to itself (except by using `run_cell()`). I'll take this to the mailing list.\n"
  }
]
