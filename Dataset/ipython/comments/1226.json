[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3359085",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-3359085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 3359085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTkwODU=",
    "user": {
      "login": "gbrandonp",
      "id": 1303985,
      "node_id": "MDQ6VXNlcjEzMDM5ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1303985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbrandonp",
      "html_url": "https://github.com/gbrandonp",
      "followers_url": "https://api.github.com/users/gbrandonp/followers",
      "following_url": "https://api.github.com/users/gbrandonp/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbrandonp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbrandonp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbrandonp/subscriptions",
      "organizations_url": "https://api.github.com/users/gbrandonp/orgs",
      "repos_url": "https://api.github.com/users/gbrandonp/repos",
      "events_url": "https://api.github.com/users/gbrandonp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbrandonp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T18:53:03Z",
    "updated_at": "2012-01-04T18:53:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "By hacking up IPython/utils/io.py variables to std{in,out,err} to make them None if corresponding sys.std{in,out,err} are None, and excepting cases elsewhere that blindly use sys.stding.encoding, and maybe one or two other minor hacks, I get the window up when starting _ipython3-qtconsole.exe_ or _pythonw ipython3-qtconsole-script.pyw_. However, though I do see the Python version msg and IPython splash message, I never get the prompt.\n\nTried various other things with the ipython3-qtconsole-script.pyw:\n1. ran with pythonw.exe but redirected stdin or stdout or stderr from/to NUL (learned this is windows equiv of /dev/null). **immediate failure**\n2. ran with python.exe and redirectied stdin or stdout or stderr from/to NUL. **no change, still get the prompt as normal and everything works fine**\n3. started  _ipython3.exe kernel_ session, then in another cmd window, launched the qtconsole script via pythonw.exe with the _--existing_ option.\n- **qtconsole works fine, got that cmd window back**\n- **Ctrl+T (new tab w/ new kernel) yields old behavior of splash msg and no prompt**\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3359440",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-3359440",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 3359440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk0NDA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T19:14:59Z",
    "updated_at": "2012-01-04T19:14:59Z",
    "author_association": "MEMBER",
    "body": "The banner but no prompt means that the frontend is starting, but it's failing to start or connect to the kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3394716",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-3394716",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 3394716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ3MTY=",
    "user": {
      "login": "gbrandonp",
      "id": 1303985,
      "node_id": "MDQ6VXNlcjEzMDM5ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1303985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbrandonp",
      "html_url": "https://github.com/gbrandonp",
      "followers_url": "https://api.github.com/users/gbrandonp/followers",
      "following_url": "https://api.github.com/users/gbrandonp/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbrandonp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbrandonp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbrandonp/subscriptions",
      "organizations_url": "https://api.github.com/users/gbrandonp/orgs",
      "repos_url": "https://api.github.com/users/gbrandonp/repos",
      "events_url": "https://api.github.com/users/gbrandonp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbrandonp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-07T08:14:34Z",
    "updated_at": "2012-01-07T08:14:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was able to get better debugging information by installing Mark Hammond's pywin32 modules, and using logging.handlers.NTEventLogHandler to actually get some log data surrounding the failure (I didn't think the logging.handlers.FileHandler would work since both the GUI process and the Kernel process would be using the same name without some plumbing to provide different ones):\n\n<pre>\n--- a/IPython/config/application.py\n+++ b/IPython/config/application.py\n@@ -19,7 +19,7 @@ Authors:\n # Imports\n #-----------------------------------------------------------------------------\n\n-import logging\n+import logging.handlers\n import os\n import re\n import sys\n@@ -188,7 +188,7 @@ class Application(SingletonConfigurable):\n         if sys.executable.endswith('pythonw.exe'):\n             # this should really go to a file, but file-logging is only\n             # hooked up in parallel applications\n-            self._log_handler = logging.StreamHandler(open(os.devnull, 'w'))\n+            self._log_handler = logging.handlers.NTEventLogHandler('ipython')\n         else:\n             self._log_handler = logging.StreamHandler()\n         self._log_formatter = logging.Formatter(\"[%(name)s] %(message)s\")\n</pre>\n\n\nAnd what I found was actually a generic Python 3 issue, that is only exposed because the no_stdout and no_stderr are both set to true for the kernel when run pythonw.exe.  The problem is the use of `file(<filename>)` to open files in Python 3.  This specific case is in zmq.kernelapp.init_blackhole, but a grep of the source found others.  You can repeat by running IPython with Python 3 and supplying either the --no-stderr or --no-stdout options.\n\nSince open() works in both Python 2 and 3, my suggestion (or I can supply a patch, fork and make a pull request) is to replace all file() instances with open().  That still leaves some changes specific to having std{in,out,err} == None for pythonw.exe, but so far, things seem to work fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3394990",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-3394990",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 3394990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ5OTA=",
    "user": {
      "login": "gbrandonp",
      "id": 1303985,
      "node_id": "MDQ6VXNlcjEzMDM5ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1303985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbrandonp",
      "html_url": "https://github.com/gbrandonp",
      "followers_url": "https://api.github.com/users/gbrandonp/followers",
      "following_url": "https://api.github.com/users/gbrandonp/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbrandonp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbrandonp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbrandonp/subscriptions",
      "organizations_url": "https://api.github.com/users/gbrandonp/orgs",
      "repos_url": "https://api.github.com/users/gbrandonp/repos",
      "events_url": "https://api.github.com/users/gbrandonp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbrandonp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-07T09:48:28Z",
    "updated_at": "2012-01-07T09:48:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've got two commits in a fork at https://github.com/gbrandonp/ipython/tree/pythonw-py3k that have things working for me:\n1. change _file_ to _open_\n2. deal with the fact that std{in,out,err} are None on py3k with pythonw\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3396647",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-3396647",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 3396647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTY2NDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-07T16:43:55Z",
    "updated_at": "2012-01-07T16:43:55Z",
    "author_association": "MEMBER",
    "body": "Great, thanks - please make a pull request from that branch so others review it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3403248",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-3403248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 3403248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDMyNDg=",
    "user": {
      "login": "gbrandonp",
      "id": 1303985,
      "node_id": "MDQ6VXNlcjEzMDM5ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1303985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbrandonp",
      "html_url": "https://github.com/gbrandonp",
      "followers_url": "https://api.github.com/users/gbrandonp/followers",
      "following_url": "https://api.github.com/users/gbrandonp/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbrandonp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbrandonp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbrandonp/subscriptions",
      "organizations_url": "https://api.github.com/users/gbrandonp/orgs",
      "repos_url": "https://api.github.com/users/gbrandonp/repos",
      "events_url": "https://api.github.com/users/gbrandonp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbrandonp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-08T17:40:04Z",
    "updated_at": "2012-01-08T17:40:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Pull request 1245](https://github.com/ipython/ipython/pull/1245) created\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5526365",
    "html_url": "https://github.com/ipython/ipython/issues/1226#issuecomment-5526365",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1226",
    "id": 5526365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYzNjU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-05T11:34:49Z",
    "updated_at": "2012-05-05T11:34:49Z",
    "author_association": "MEMBER",
    "body": "This should now be fixed by PR #1245 - if anyone still encounters it, let us know.\n"
  }
]
