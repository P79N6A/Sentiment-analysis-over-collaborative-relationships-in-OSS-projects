[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61370863",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61370863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61370863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzcwODYz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T15:02:23Z",
    "updated_at": "2014-11-01T15:02:23Z",
    "author_association": "MEMBER",
    "body": "Unfortunately, quite a bit of ipython code assumes that there is only one instance of ipython running in a process. I spent a while trying to reduce that, bit it's hard going, and there's not much interest in it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61372356",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61372356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61372356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzcyMzU2",
    "user": {
      "login": "nevion",
      "id": 2229688,
      "node_id": "MDQ6VXNlcjIyMjk2ODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2229688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nevion",
      "html_url": "https://github.com/nevion",
      "followers_url": "https://api.github.com/users/nevion/followers",
      "following_url": "https://api.github.com/users/nevion/following{/other_user}",
      "gists_url": "https://api.github.com/users/nevion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nevion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nevion/subscriptions",
      "organizations_url": "https://api.github.com/users/nevion/orgs",
      "repos_url": "https://api.github.com/users/nevion/repos",
      "events_url": "https://api.github.com/users/nevion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nevion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T15:48:32Z",
    "updated_at": "2014-11-01T15:48:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "What and where are the problems?  I have alot of interest in it... also plenty of people use embed and start_ipython...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61373011",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61373011",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61373011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzczMDEx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T16:09:10Z",
    "updated_at": "2014-11-01T16:09:10Z",
    "author_association": "MEMBER",
    "body": "For what it's worth I know that @parleur have sed/IPython/JPython/g on the tree, install it, and use it just for this purpose. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61374124",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61374124",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61374124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzc0MTI0",
    "user": {
      "login": "nevion",
      "id": 2229688,
      "node_id": "MDQ6VXNlcjIyMjk2ODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2229688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nevion",
      "html_url": "https://github.com/nevion",
      "followers_url": "https://api.github.com/users/nevion/followers",
      "following_url": "https://api.github.com/users/nevion/following{/other_user}",
      "gists_url": "https://api.github.com/users/nevion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nevion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nevion/subscriptions",
      "organizations_url": "https://api.github.com/users/nevion/orgs",
      "repos_url": "https://api.github.com/users/nevion/repos",
      "events_url": "https://api.github.com/users/nevion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nevion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T16:39:46Z",
    "updated_at": "2014-11-01T16:39:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau that is down right hilarious and sad that it works like that.  I'll keep it in mind but I very much don't want to do that.... esp since I have to support a number of other researchers who can't figure these kinds of rough edges out on their own...\n\n@takluyver if this isn't made a priority by core developers... I can hack at something but ultimately I don't have a alot of time to contribute to the IPython project and it would be difficult to get design decisions accepted.   However if there is some path for getting a sort of minimal environment working... perhaps still going with qt/matplotlib event loops.... that is about all I desire.  I'm familiar with ZMQ / python, and a lot of other things though I've not really hacked on ipython code before.  It'd be great if we knew / listed out what needs to be done.   Ultimately nested sessions with a single flow of control shouldn't be intractable... tls, stacks, and context frames are the typical methods of attack... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61375270",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61375270",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61375270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzc1Mjcw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T17:11:25Z",
    "updated_at": "2014-11-01T17:11:25Z",
    "author_association": "MEMBER",
    "body": "> @Carreau that is down right hilarious and sad that it works like that. I'll keep it in mind but I very much don't want to do that.... esp since I have to support a number of other researchers who can't figure these kinds of rough edges out on their own...\n\nYes, sure, I was just pointing that as a stop gap if you really need it for a one shot thing.\n\nEven if you can make a tiny bit of refactor that allow multiple instances on in the same process I guess it would be accepted. There used to be an issue open with list of things to do, but I don't find it right now, it was one of the early one I would say with a number < 1000, maybe even migrated from launchpad.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61381249",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61381249",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61381249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzgxMjQ5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T20:04:38Z",
    "updated_at": "2014-11-01T20:04:38Z",
    "author_association": "MEMBER",
    "body": "Unfortunately, I don't think it would be a tiny bit of refactoring. All the code that uses `get_ipython()` or `.instance()` methods of our own SingletonConfigurable classes assumes that there is only one instance per process. Even fixing that in core would involve some pretty major refactoring, I think, and it would be hard to avoid breaking third party code.\n\nI'd love to see this done, but I think the downsides at present probably outweigh the benefits.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61381637",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61381637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61381637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzgxNjM3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T20:15:33Z",
    "updated_at": "2014-11-01T20:15:33Z",
    "author_association": "MEMBER",
    "body": "I _think_ if `instance` used a stack instead of a singleton, nested instances should be doable without changes that are too significant. Probably, it should be done as a new method `add_instance`, leaving the `instance` method alone, to avoid breakage. `ip.run_cell` would probably put its `self` on the instance stack, and pop on completion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61396441",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61396441",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61396441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzk2NDQx",
    "user": {
      "login": "nevion",
      "id": 2229688,
      "node_id": "MDQ6VXNlcjIyMjk2ODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2229688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nevion",
      "html_url": "https://github.com/nevion",
      "followers_url": "https://api.github.com/users/nevion/followers",
      "following_url": "https://api.github.com/users/nevion/following{/other_user}",
      "gists_url": "https://api.github.com/users/nevion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nevion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nevion/subscriptions",
      "organizations_url": "https://api.github.com/users/nevion/orgs",
      "repos_url": "https://api.github.com/users/nevion/repos",
      "events_url": "https://api.github.com/users/nevion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nevion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T06:56:39Z",
    "updated_at": "2014-11-02T06:56:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "alright well I took a crack at it and here's what I came up with, and it's partially functional but I don't know what namespace related issues I am having.  Any further hints points of direction?\nChangeset:\nhttps://github.com/nevion/ipython/commit/eff88c8b05384a08ce6bffc377c93a2628343bef\n\nExample session:\n\n```\npython -m IPython\n\nIn [1]: from IPython.terminal.interactiveshell import TerminalInteractiveShell\n\nIn [2]: TerminalInteractiveShell._instances\nOut[2]: [<IPython.terminal.interactiveshell.TerminalInteractiveShell at 0x2b2e550>]\n\nIn [3]: from IPython import embed; embed()\nPython 2.7.6 (default, Nov 21 2013, 15:55:38) [GCC]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 3.0.0-dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: TerminalInteractiveShell._instances\nOut[1]: \n[<IPython.terminal.interactiveshell.TerminalInteractiveShell at 0x2b2e550>,\n <IPython.terminal.embed.InteractiveShellEmbed at 0x33f0ed0>]\n\nIn [2]: b=3\n\nIn [3]: \n\n\nIn [4]: b\nOut[4]: 3\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-4-3b5d5c371295> in <module>()\n----> 1 b\n\n/home/jason/projects/ipython.git/IPython/core/displayhook.py in __call__(self, result)\n    240             format_dict, md_dict = self.compute_format_data(result)\n    241             self.write_format_data(format_dict, md_dict)\n--> 242             self.update_user_ns(result)\n    243             self.log_output(format_dict)\n    244             self.finish_displayhook()\n\n/home/jason/projects/ipython.git/IPython/core/displayhook.py in update_user_ns(self, result)\n    177 \n    178         # Avoid recursive reference when displaying _oh/Out\n--> 179         if result is not self.shell.user_ns['_oh']:\n    180             if len(self.shell.user_ns['_oh']) >= self.cache_size and self.do_full_cache:\n    181                 warn('Output cache limit (currently '+\n\nKeyError: '_oh'\n\nIn [5]: \n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61400136",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-61400136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 61400136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDAwMTM2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T10:00:01Z",
    "updated_at": "2014-11-02T10:00:01Z",
    "author_association": "MEMBER",
    "body": "You can open a pull request, it will be easier to comment/review, even if it does not get merge, it will at least be in this repository for later use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62320176",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-62320176",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 62320176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzIwMTc2",
    "user": {
      "login": "nevion",
      "id": 2229688,
      "node_id": "MDQ6VXNlcjIyMjk2ODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2229688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nevion",
      "html_url": "https://github.com/nevion",
      "followers_url": "https://api.github.com/users/nevion/followers",
      "following_url": "https://api.github.com/users/nevion/following{/other_user}",
      "gists_url": "https://api.github.com/users/nevion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nevion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nevion/subscriptions",
      "organizations_url": "https://api.github.com/users/nevion/orgs",
      "repos_url": "https://api.github.com/users/nevion/repos",
      "events_url": "https://api.github.com/users/nevion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nevion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-09T21:18:29Z",
    "updated_at": "2014-11-09T21:18:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thought I'd prod for activity and reference this here: https://github.com/ipython/ipython/pull/6840 \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63528689",
    "html_url": "https://github.com/ipython/ipython/issues/6829#issuecomment-63528689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6829",
    "id": 63528689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTI4Njg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T19:22:59Z",
    "updated_at": "2014-11-18T19:22:59Z",
    "author_association": "MEMBER",
    "body": "closed by #6840\n"
  }
]
