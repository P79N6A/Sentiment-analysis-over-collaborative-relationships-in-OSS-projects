[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256375052",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-256375052",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 256375052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM3NTA1Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T15:02:28Z",
    "updated_at": "2016-10-26T15:02:28Z",
    "author_association": "MEMBER",
    "body": "@anntzer, you wrote PR #9449, do you want to make the case for that behaviour?\n\nEveryone: let's try using the Github 'reactions' to vote on this. Add a 'thumbs up' on this issue to vote for the original behaviour (`n` always being the debugger 'next' command), or 'thumbs down' to vote for the 'smart command mode' from #9449 (`n` shows the variable n if it exists, otherwise acts as the 'next' command).\n\nWe'll take votes as an indicator, not a binding decision.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256390116",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-256390116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 256390116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM5MDExNg==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T15:46:51Z",
    "updated_at": "2016-10-26T15:46:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "My personal experience with debugging (which may be different from other people's...) is that in the vast majority of cases, I call `pdb.set_trace()` at the right place or `pdb.pm() / %debug` after an exception bubbles out, check where I am, inspect a few variables, and leave.  I very rarely step the debugger.  Especially in the context of IPython, I'd guess that most users also enter the debugger via `%debug` and use it for post-mortem'ing.\n\nThus, the choice of favoring printing variables rather than executing commands (which I did not invent: I got the idea from https://pypi.python.org/pypi/pdbpp/#smart-command-parsing) simply reflects my usage pattern: most of the times, printing the variable value is what I want to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258926661",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258926661",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258926661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODkyNjY2MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T18:53:04Z",
    "updated_at": "2016-11-07T18:53:04Z",
    "author_association": "MEMBER",
    "body": "So far, there are three votes to go back to the old behaviour, and one for the current behaviour. Anyone else? I'll also ask on the mailing list.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258976301",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258976301",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258976301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3NjMwMQ==",
    "user": {
      "login": "nbastin",
      "id": 1588960,
      "node_id": "MDQ6VXNlcjE1ODg5NjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbastin",
      "html_url": "https://github.com/nbastin",
      "followers_url": "https://api.github.com/users/nbastin/followers",
      "following_url": "https://api.github.com/users/nbastin/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbastin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbastin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbastin/subscriptions",
      "organizations_url": "https://api.github.com/users/nbastin/orgs",
      "repos_url": "https://api.github.com/users/nbastin/repos",
      "events_url": "https://api.github.com/users/nbastin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbastin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T21:58:40Z",
    "updated_at": "2016-11-07T21:58:40Z",
    "author_association": "NONE",
    "body": "This...is horrible.  I guess we needed to be on the mailing list or something, but I can't believe anyone thought this was a good idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258976922",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258976922",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258976922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3NjkyMg==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:01:04Z",
    "updated_at": "2016-11-07T22:01:25Z",
    "author_association": "NONE",
    "body": "@takluyver why not make this \"variable vs debug command\" configurable interactively when the first conflict is hit? both behaviors are confusing anyway.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258977518",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258977518",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258977518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3NzUxOA==",
    "user": {
      "login": "nbastin",
      "id": 1588960,
      "node_id": "MDQ6VXNlcjE1ODg5NjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbastin",
      "html_url": "https://github.com/nbastin",
      "followers_url": "https://api.github.com/users/nbastin/followers",
      "following_url": "https://api.github.com/users/nbastin/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbastin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbastin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbastin/subscriptions",
      "organizations_url": "https://api.github.com/users/nbastin/orgs",
      "repos_url": "https://api.github.com/users/nbastin/repos",
      "events_url": "https://api.github.com/users/nbastin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbastin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:03:23Z",
    "updated_at": "2016-11-07T22:03:23Z",
    "author_association": "NONE",
    "body": "Since I was sitting here when the previous comment came in - not showing variables is NOT confusing, or at least is not inconsistent.  Every other python debugger prefers commands over variables - ipython is doing something very unpythonic. (And very un-any-language-ic - I know of no debugger that auto-prints in any language that will prefer variables over internal commands)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258977527",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258977527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258977527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3NzUyNw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:03:24Z",
    "updated_at": "2016-11-07T22:03:24Z",
    "author_association": "NONE",
    "body": "or at least print a warning with a note about clash and suggest syntax to avoid the clash.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258978017",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258978017",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258978017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3ODAxNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:05:17Z",
    "updated_at": "2016-11-07T22:05:17Z",
    "author_association": "MEMBER",
    "body": "> Every other python debugger prefers commands over variables\n\nThat's apparently not true of pdb++, which is where this idea came from.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258978633",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258978633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258978633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3ODYzMw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:07:35Z",
    "updated_at": "2016-11-07T22:07:35Z",
    "author_association": "NONE",
    "body": "@nbastin I have not used any other command-line debugger and only use this one in ipython/jupyter because there is no graphical alternative that works reliably.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258978801",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258978801",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258978801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3ODgwMQ==",
    "user": {
      "login": "nbastin",
      "id": 1588960,
      "node_id": "MDQ6VXNlcjE1ODg5NjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbastin",
      "html_url": "https://github.com/nbastin",
      "followers_url": "https://api.github.com/users/nbastin/followers",
      "following_url": "https://api.github.com/users/nbastin/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbastin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbastin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbastin/subscriptions",
      "organizations_url": "https://api.github.com/users/nbastin/orgs",
      "repos_url": "https://api.github.com/users/nbastin/repos",
      "events_url": "https://api.github.com/users/nbastin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbastin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:08:14Z",
    "updated_at": "2016-11-07T22:08:14Z",
    "author_association": "NONE",
    "body": "@takluyver : not to be pedantic, but pdb++ is a piece of software that hasn't seen a release in over a year and seems to be completely unmaintained.  (Yes I missed this in my survey, but I was looking for things with releases in this calendar year)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258979377",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258979377",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258979377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3OTM3Nw==",
    "user": {
      "login": "nbastin",
      "id": 1588960,
      "node_id": "MDQ6VXNlcjE1ODg5NjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbastin",
      "html_url": "https://github.com/nbastin",
      "followers_url": "https://api.github.com/users/nbastin/followers",
      "following_url": "https://api.github.com/users/nbastin/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbastin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbastin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbastin/subscriptions",
      "organizations_url": "https://api.github.com/users/nbastin/orgs",
      "repos_url": "https://api.github.com/users/nbastin/repos",
      "events_url": "https://api.github.com/users/nbastin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbastin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:10:28Z",
    "updated_at": "2016-11-07T22:10:28Z",
    "author_association": "NONE",
    "body": "@denfromufa: WingWare seems to be more useful and reliable?  I'm not sure what criteria you're judging this on, so I could be missing something significant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/258983242",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-258983242",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 258983242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk4MzI0Mg==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:25:47Z",
    "updated_at": "2016-11-07T22:25:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Clearly, no one likes this idea.  Let's just get rid of it -- possibly with @denfromufa's \"let the user choose the first time this is hit\" option.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259010499",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-259010499",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 259010499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAxMDQ5OQ==",
    "user": {
      "login": "matthew-brett",
      "id": 67612,
      "node_id": "MDQ6VXNlcjY3NjEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthew-brett",
      "html_url": "https://github.com/matthew-brett",
      "followers_url": "https://api.github.com/users/matthew-brett/followers",
      "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
      "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
      "repos_url": "https://api.github.com/users/matthew-brett/repos",
      "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T00:42:30Z",
    "updated_at": "2016-11-08T00:42:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can this be configured somewhere in IPython?  I think it would be fine to revert this if it could be re-enabled with a configuration option for those who like it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259011553",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-259011553",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 259011553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAxMTU1Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T00:48:46Z",
    "updated_at": "2016-11-08T00:48:46Z",
    "author_association": "MEMBER",
    "body": "I would be in favor of reverting to the more usual debugger behavior. Potentially investigating configurability later. Also keep in mind that IPython is not trying to be the best debugger, there are likely a number of packages that do a better job. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259474545",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-259474545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 259474545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3NDU0NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:34:32Z",
    "updated_at": "2016-11-09T17:34:32Z",
    "author_association": "MEMBER",
    "body": "#10050 reverts it. As the voting is currently 11-1 for reverting, I haven't made it configurable at present - every config option adds complexity and potential bugs, so I'm reluctant to add them without a certain level of support.\n\nWe could also look at providing options to plug in externally developed debuggers - I don't think our debugger is particularly great, and there are projects like [pudb](https://pypi.python.org/pypi/pudb) out there which have spent much more time than us on debugger UI.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/268141120",
    "html_url": "https://github.com/ipython/ipython/issues/10037#issuecomment-268141120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10037",
    "id": 268141120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODE0MTEyMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-20T02:57:28Z",
    "updated_at": "2016-12-20T02:57:28Z",
    "author_association": "MEMBER",
    "body": "Late to the party, but I wanted to say that I strongly support the reversion.  Over and over we've encountered that customizations that try to be overly smart, even though well-intentioned, typically cause more confusion than they are worth.  Over the years we've backed off on a number of those (made them optional when it's easy to do in a simple way), and I think this falls in that category.\r\n\r\nThanks!"
  }
]
