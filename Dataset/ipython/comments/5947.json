[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45170019",
    "html_url": "https://github.com/ipython/ipython/pull/5947#issuecomment-45170019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5947",
    "id": 45170019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTcwMDE5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T00:50:05Z",
    "updated_at": "2014-06-05T00:50:05Z",
    "author_association": "MEMBER",
    "body": "Can you describe the usage case for this. Currently, we use jquery events\nfor things like this. I would like to understand why that won't work.\n\nOn Wed, Jun 4, 2014 at 4:36 PM, AlbertHilb notifications@github.com wrote:\n\n>    1.\n> \n>    Added a new class Hook to the IPython javascript namespace.\n>    Hooks can be used by extensions to customize the html notebook\n>    behaviour.\n>    They are essentially sequences of callbacks. To each callback is\n>    associated a number, the nice value. When the hook is executed, its\n>    callbacks are called in order based on their nice values, lower values are\n>    executed first.\n> \n>    Choosing appropriate nice values, extension authors can insert their\n>    callbacks at the planned positions in the execution queue.\n> \n>    Hook object has three methods:\n>     - add_callback is used to add a callback to the hook.\n>       - remove_callback is used to remove a callback from the hook.\n>       - execute is used to execute the hook callbacks. It accepts an\n>       array of data as parameter, its elements will be passed to the callbacks\n>       when called.\n>     2.\n> \n>    Added preprocess and postprocess hooks to markdown and heading cells.\n>    The former can be used to modify the text that will be passed to the\n>    markdown renderer, the ladder to customize the rendering result before it\n>    is set into the output area.\n> \n>    Turned parts of the cell rendering logic into preprocess and\n>    postprocess callbacks.\n> \n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/AlbertHilb/ipython Hooks\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ipython/ipython/pull/5947\n> Commit Summary\n> - Add \"IPython.Hook\".\n> - Make notebook.html load hooks.js script.\n> - Add \"preprocess\" and \"postprocess\" hooks to markdown and heading\n>   cells.\n> \n> File Changes\n> - _A_ IPython/html/static/base/js/hooks.js\n>   https://github.com/ipython/ipython/pull/5947/files#diff-0 (85)\n> - _M_ IPython/html/static/notebook/js/textcell.js\n>   https://github.com/ipython/ipython/pull/5947/files#diff-1 (194)\n> - _M_ IPython/html/templates/notebook.html\n>   https://github.com/ipython/ipython/pull/5947/files#diff-2 (1)\n> \n> Patch Links:\n> - https://github.com/ipython/ipython/pull/5947.patch\n> - https://github.com/ipython/ipython/pull/5947.diff\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/5947.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45211127",
    "html_url": "https://github.com/ipython/ipython/pull/5947#issuecomment-45211127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5947",
    "id": 45211127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjExMTI3",
    "user": {
      "login": "AlbertHilb",
      "id": 1220427,
      "node_id": "MDQ6VXNlcjEyMjA0Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1220427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlbertHilb",
      "html_url": "https://github.com/AlbertHilb",
      "followers_url": "https://api.github.com/users/AlbertHilb/followers",
      "following_url": "https://api.github.com/users/AlbertHilb/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlbertHilb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlbertHilb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlbertHilb/subscriptions",
      "organizations_url": "https://api.github.com/users/AlbertHilb/orgs",
      "repos_url": "https://api.github.com/users/AlbertHilb/repos",
      "events_url": "https://api.github.com/users/AlbertHilb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlbertHilb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T12:05:27Z",
    "updated_at": "2014-06-05T12:05:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I admit there is some overlap between hooks and events.\nThe main difference, is the possibility to choose the priority of the callbacks, or, in other words, their order of execution.\nAs an example let's take the (default) markdown cell rendering `postprocess`, that is, the operations performed on the html, produced by the markdown renderer, before it is set into the output area.\nSuch operations are, in order of execution:\n1. restoring mathematics (nice = -30)\n2. sanitizing the html (nice = -20)\n3. making links open in a new tab (nice = -10)\n\nIf you want to customize markdown cell output, you can add your callback to the `postprocess` hook and choose when it must be called: before default callbacks (nice < -30), after default callbacks (nice > -10), after restoring mathematics but before sanitizing (-30 < nice < -20) and so on.\n\nHow can that be achieved with the event system?\nIf you want, at least, the chance to choose to run your code before or after default callbacks you need two events, let's say: `start-postprocess` and `end-postprocess`.\n\nSo, I think, the cost of introducing `Hook` class is not too high compared to the benefits it give us in terms of flexibility.\nMoreover this is the way other (established) projects are following to deal with this kind of matter, look, for example, to [MathJax documentation](http://docs.mathjax.org/en/latest/api/callback.html#Hooks).\n\nRegards.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45277353",
    "html_url": "https://github.com/ipython/ipython/pull/5947#issuecomment-45277353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5947",
    "id": 45277353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc3MzUz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T21:27:34Z",
    "updated_at": "2014-06-05T21:27:34Z",
    "author_association": "MEMBER",
    "body": "We talked about this at our dev meeting today and have the following comments:\n- We consider the exact format of heading and markdown cells to be part of the IPython Notebook. In other words, if someone changes how heading/markdown cells are processed or rendered, we consider that to be a fork of the notebook format. The many tools that work with notebooks (nbconvert, nbviewer, third party notebook frontends and clients (Google, etc.)) would no longer be able to work with such notebooks.\n- Because of this, we want to **strongly** discourage this usage case and avoid making it easy or users to do this type of thing.\n\nFrom this perspective, we are -1 on making any change that would make it easy to change how heading or markdown cells are handled.\n- We also talked about the idea of hooks in general and feel that we don't want to go in that direction right now. We are fighting really hard to keep our code simple (it is not :( and this adds complexity.\n- Using a linear sequence of functions that are ordered by arbitrary integers is a well known to lead to code that is hard to maintain and understand and even more difficult to extend with different parties modifying it. Imagine writing BASIC code with lots of goto statements with another person adding and removing lines of code and changing line numbers.\n\nBecause of these issues, we have decided on close this PR.\n\nLest you feel like we are completely shutting you down - I have a few question: stepping away from this particular PR - what are you trying to accomplish with the notebook? What about your objectives is leading you to want to modify how heading/markdown cells and handled? Maybe these questions about lead somewhere useful. Cheers.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45935516",
    "html_url": "https://github.com/ipython/ipython/pull/5947#issuecomment-45935516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5947",
    "id": 45935516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTM1NTE2",
    "user": {
      "login": "AlbertHilb",
      "id": 1220427,
      "node_id": "MDQ6VXNlcjEyMjA0Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1220427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlbertHilb",
      "html_url": "https://github.com/AlbertHilb",
      "followers_url": "https://api.github.com/users/AlbertHilb/followers",
      "following_url": "https://api.github.com/users/AlbertHilb/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlbertHilb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlbertHilb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlbertHilb/subscriptions",
      "organizations_url": "https://api.github.com/users/AlbertHilb/orgs",
      "repos_url": "https://api.github.com/users/AlbertHilb/repos",
      "events_url": "https://api.github.com/users/AlbertHilb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlbertHilb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-12T19:15:18Z",
    "updated_at": "2014-06-12T19:24:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I understand most of your reasons but I still have some considerations to do.\n\nI'm a physicist and I'm looking for an open-source \"scientific notebook\", that is, an unified and user friendly framework for editing structured documents and make mathematical computations.\nIPython is a very good candidate. Among other things, it is written in python and javascript so it's relatively easy to adjust the notebook behavior to fit user needs even for not \"professional\" developer like me.\n\nMy notebooks usually contain a great amount of text spread over (markdown) cells with different _semantic_ purposes: definitions, theorems, proofs, comments, etc.\nI would like to see the _meaning_ of text cells reflected in some way in their appearances in order to distinguish at a glance the different parts of a document.\nFor example I would like to have yellow backgrounds for comments, bolder or darker color fonts for theorems and definitions, and other things like those.\nCell metadata is a perfect place to store cell _semantic_ and the rest is CSS stuff **iff** the html produced by the markdown renderer was wrapped in a container with some attribute bound to that info.\n\nYet, I would like to have the possibility to give _name_ to cells and use it to create (document) internal links pointing to them.\nAs before, that information can be stored as cell metadata, but to make links work it must be present also as `id` attribute in the html cell representation.\n\nThose are the motives which induced me to propose to add preprocess and postprocess hooks to the markdown cell renderer.\nNaturally there are other ways to realize my ideas but that one seemed to me less _invasive_ because it didn't force anyone to have features he didn't ask while gave to everyone the freedom to implement them or others similar as notebook extensions.\n\nIn the past days I discovered that in the new version of the notebook format (v4) cell metadata will have two standard properties: `name` and `tags`.\nI wonder if they will have counterparts in the html structure of the cell, and if yes what they will be.\n`name` property will likely solve my request for internal links and `tags` can possibly be used for my other request though a dedicate property (of type string) would be more appropriate.\n\nAnyway, I think the question is more general.\nThere are infinite possible cell properties which a user may want to store as metadata and which require some form of _visibility_.\nEven if metadata must not alter the html output of the cell, they should, in my opinion, at least (optionally) be mapped to html attributes so to offer a hook to CSS to make its work.\n\nRegards and thanks a lot for your really great work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46232979",
    "html_url": "https://github.com/ipython/ipython/pull/5947#issuecomment-46232979",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5947",
    "id": 46232979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjMyOTc5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T20:35:41Z",
    "updated_at": "2014-06-16T20:35:41Z",
    "author_association": "MEMBER",
    "body": "Awesome, thanks for summarizing your usage cases. Let me try to summarize them in a concise manner:\n- Use dynamic cell metadata to add and remove CSS classes from a cell.\n- Give cells a user defined HTML id (\"name\") that can be linked to from other places on the web.\n\nAs you can tell, we are just getting started with thinking about different ways of using cell metadata. And I think both of your ideas are worth thinking about supporting in some way. But I don't think that hooks will be the right way forward with this. Can you open an issue for us to use in discussing these features?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46233691",
    "html_url": "https://github.com/ipython/ipython/pull/5947#issuecomment-46233691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5947",
    "id": 46233691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjMzNjkx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-16T20:41:53Z",
    "updated_at": "2014-06-16T20:41:53Z",
    "author_association": "MEMBER",
    "body": "> Use dynamic cell metadata to add and remove CSS classes from a cell.\n\nI think this is something we will want to do when we get cell Tags working.  @Carreau mentioned it would be nice to expose all tags in the DOM, I'm guessing as a DOM class with a name like this `tag-X` or more specifically `tag-car`...\n"
  }
]
