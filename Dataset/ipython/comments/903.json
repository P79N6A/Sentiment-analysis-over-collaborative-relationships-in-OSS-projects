[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2460977",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2460977",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2460977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjA5Nzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T20:43:49Z",
    "updated_at": "2011-10-19T20:43:49Z",
    "author_association": "MEMBER",
    "body": "Instead of proliferating lots of special purpose magics to configure specific items, we should make a single magic that can easily configure anything in ipython.  Something like %config Foo.bar=10\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2461826",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2461826",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2461826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE4MjY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T21:58:37Z",
    "updated_at": "2011-10-19T21:58:37Z",
    "author_association": "MEMBER",
    "body": "Yes, we'd discussed that in #892 already.  I'm certainly happy to go there, but as indicated in the discussion, it is unfortunately more complicated for the general case.  In the case of pylab, those objects actually check their config flags at runtime, so modifying the config object itself is sufficient to impact behavior in the expected way.  But not all configurables are like this, in some cases the objects use config data at initialization time only, so a `%config` that modifies arbitrary configurables may effectively be a no-op for some objects.\n\nBecause of the higher complexity of the general problem, and the value of run-time control of the plotting behavior, is why we've been talking about having a specific magic for this.\n\nBut I am very much sympathetic to the worry about magics sprouting like dandelions.  As indicated atop, this behavior could just go into %pylab (which fortunately already exists), and we can simply refine %pylab over time until we get run-time activation for nb/qt and runtime switching of inline/floating.  \n\nThat would be my preferred solution for now, even if we don't get the two last things done right away.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2500608",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2500608",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2500608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDA2MDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-24T07:50:39Z",
    "updated_at": "2011-10-24T17:42:55Z",
    "author_association": "MEMBER",
    "body": "I think I've figured out how to to a generic `%config` magic without significant difficulty.  Should I go that route, or also make the inline backend config accessible from %pylab?\n\nI actually have both working locally right now, so you can do:\n\n```\n%pylab InlineBackendConfig.figure_format = 'png'\n```\n\nor\n\n```\n%pylab inline.figure_format='png'\n```\n\nI'll do a PR soon, starting with just `%config`.  The advantage of %pylab-style is it's more user-friendly, whereas %config is more developer-friendly.  In order for %config to be useful, you already have to know a lot about IPython's class structure, whereas we can shortcut that if we want to expose a shortlist of high-visibility options.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2506600",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2506600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2506600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDY2MDA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-24T17:36:11Z",
    "updated_at": "2011-10-24T17:36:11Z",
    "author_association": "MEMBER",
    "body": "On Mon, Oct 24, 2011 at 12:50 AM, Min RK\nreply@reply.github.com\nwrote:\n\n> I'll do a PR soon, starting with just `%config`.  The advantage of %pylab-style is it's more user-friendly, whereas %config is more developer-friendly.  In order for %config to be useful, you already have to know a lot about IPython's class structure, whereas we can shortcut that if we want to expose a shortlist of high-visibility options.\n\nThis makes a good case for both.  Most regular users (think students\nin a classroom who just want to plot their data) will find the\nlow-level api daunting, even though it will be valuable to developers.\n It's kind of like the gnome control center vs gconf-editor: they both\nserve a purpose, even though there's a bit of overlap/duplication in a\nfew places.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2507205",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2507205",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2507205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDcyMDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-24T18:18:48Z",
    "updated_at": "2011-10-24T18:18:48Z",
    "author_association": "MEMBER",
    "body": "Okay.  I've started the PR (#923) with the %config stuff.  What should the %pylab one look like?  My first draft is that it's really identical to using %config, but replacing 'InlineBackendConfig' with 'inline':\n\n```\n%pylab inline.figure_format = 'png'\n```\n\nWhich I'm not certain has a sufficient benefit over simply directing the user to `%config InlineBackendConfig` in the %pylab helpstring.\n\n(by the way, can I express regret in calling it InlineBackendConfig instead of InlineBackend?  code like `config.update(InlineBackendConfig.config)` is not awesome)\n\nI also tried a version using the KVLoader, so that you could set multiple parameters at once (the %config magic only allows one at a time, because I think the KV line parsing is too strict for more general use, e.g. no spaces around '=').\n\nThere are also various other, more hardcoded forms I can do, like:\n\n```\n%pylab inline png\n%pylab inline svg\n%pylab inline closefigs\n%pylab inline keepfigs\n```\n\nWhich are more concise, and perhaps easier to remember for those people who only want to flip that one switch they actually use.\n\nA general disadvantage of the `%config` magic from a usability standpoint is that there is no indication of which traits would actually have an effect on change (most simple flags, etc.), and which traits only have an effect at startup (colors, readline, various proxy traits).\n\nAn advantage of the %config magic is discoverability:\n\n``` python\n# what can I configure in IPython?\nIn [7]: %config\nAvailable objects for config:\n     TerminalInteractiveShell\n     HistoryManager\n     PrefilterManager\n     AliasManager\n     IPCompleter\n     DisplayFormatter\n\n# okay, what can I configure in the DisplayFormatter?\nIn [8]: %config DisplayFormatter\nDisplayFormatter options\n----------------------\nDisplayFormatter.plain_text_only=<Bool>\n    Current: True\nDisplayFormatter.formatters=<Dict> ... # this should *not* be a configurable, it's a dict of instances\n\n# now I can configure these values\nIn [9]: %config DisplayFormatter.plain_text_only = False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2509645",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2509645",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2509645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk2NDU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-24T21:18:49Z",
    "updated_at": "2011-10-24T21:18:49Z",
    "author_association": "MEMBER",
    "body": "Not many people know about the InlineBackendConfig as of yet, so I think that renaming it to InlineBackend at this point would be fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2509686",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2509686",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2509686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk2ODY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-24T21:21:52Z",
    "updated_at": "2011-10-24T21:21:52Z",
    "author_association": "MEMBER",
    "body": "I don't view our config system as an advanced API that most users should not touch.  I view it as _the_ way of configuring IPython.  We should vigorously encourage its usage for all users.  \n\nThe main disadvantage I see with the custom %pylab magic is that users who use that will have to learn a completely different syntax to affect those changes in their config files.  That is more confusing that simply having them use a well designed %config magic in the first place.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2510508",
    "html_url": "https://github.com/ipython/ipython/issues/903#issuecomment-2510508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/903",
    "id": 2510508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTA1MDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-24T22:33:43Z",
    "updated_at": "2011-10-24T22:33:43Z",
    "author_association": "MEMBER",
    "body": "It's not that users shouldn't touch it, it's just a matter of sensory overload when confronted with 100% of the configurable namespace.  We are always going to have to maintain a shortlist of common actions at higher visibility, especially when a huge fraction of the configurables (particularly on InteractiveShell) have no effect after launch.\n\nI will, though, just add a reference to `%config InlineBackend` to the %pylab docstring, rather than adding any custom handling there.\n\nI'll go ahead and change InlineBackendConfig to InlineBackend.  Do we have an official approach for deprecations like this?\n"
  }
]
