[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/273974285",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-273974285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 273974285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzk3NDI4NQ==",
    "user": {
      "login": "cjwelborn",
      "id": 3335984,
      "node_id": "MDQ6VXNlcjMzMzU5ODQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3335984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjwelborn",
      "html_url": "https://github.com/cjwelborn",
      "followers_url": "https://api.github.com/users/cjwelborn/followers",
      "following_url": "https://api.github.com/users/cjwelborn/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjwelborn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjwelborn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjwelborn/subscriptions",
      "organizations_url": "https://api.github.com/users/cjwelborn/orgs",
      "repos_url": "https://api.github.com/users/cjwelborn/repos",
      "events_url": "https://api.github.com/users/cjwelborn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjwelborn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T04:21:55Z",
    "updated_at": "2017-01-20T04:21:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, @ellisonbg  This bug hit me in my django app. It's only reproducible when the mod_wsgi app is running. I'm not doing anything with `parallel`. It was triggered by `pygments.get_all_lexers()`, since IPython was installed recently, it tried to load the IPython lexer and caused this. I have a traceback (I was gathering a list of lexer names/aliases from pygments when it errored):\r\n\r\n**IPython version:** `5.1.0`\r\n\r\n```\r\nFile \"/home/cj/scripts/welbornprod/wp_site/wp_main/utilities/highlighter.py\" in <listcomp>\r\n  35. LEXERNAMES = [lexer_[1] for lexer_ in lexers.get_all_lexers()]\r\n\r\nFile \"/usr/lib/python3/dist-packages/pygments/lexers/__init__.py\" in get_all_lexers\r\n  53.     for lexer in find_plugin_lexers():\r\n\r\nFile \"/usr/lib/python3/dist-packages/pygments/plugin.py\" in find_plugin_lexers\r\n  53.         yield entrypoint.load()\r\n\r\nFile \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\" in load\r\n  2249.         return self.resolve()\r\n\r\nFile \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\" in resolve\r\n  2255.         module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/IPython/__init__.py\" in <module>\r\n  49. from .terminal.embed import embed\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/IPython/terminal/embed.py\" in <module>\r\n  16. from IPython.core.interactiveshell import DummyMod, InteractiveShell\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/IPython/core/interactiveshell.py\" in <module>\r\n  62. from IPython.utils import io\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/IPython/utils/io.py\" in <module>\r\n  93.     stdout = IOStream(sys.stdout, fallback=devnull)\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/IPython/utils/io.py\" in __init__\r\n  42.             setattr(self, meth, getattr(stream, meth))\r\n\r\nException Type: AttributeError at /misc/xtools\r\nException Value: 'mod_wsgi.Log' object has no attribute 'name'\r\n```\r\n\r\nI haven't dug into the ipython source, but can we forget about the `name` in case of this error? I'd like to get my little project up and going, so I'll hack it in if I need to.\r\n\r\nThanks,\r\n-Chris"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274077100",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-274077100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 274077100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDA3NzEwMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T13:54:35Z",
    "updated_at": "2017-01-20T13:54:35Z",
    "author_association": "MEMBER",
    "body": "It's trying to get `sys.stdout.name`, which must mean that `dir(sys.stdout)` has returned a list including `'name'`. So that sounds like something is broken in mod_wsgi."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274094389",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-274094389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 274094389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDA5NDM4OQ==",
    "user": {
      "login": "cjwelborn",
      "id": 3335984,
      "node_id": "MDQ6VXNlcjMzMzU5ODQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3335984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjwelborn",
      "html_url": "https://github.com/cjwelborn",
      "followers_url": "https://api.github.com/users/cjwelborn/followers",
      "following_url": "https://api.github.com/users/cjwelborn/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjwelborn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjwelborn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjwelborn/subscriptions",
      "organizations_url": "https://api.github.com/users/cjwelborn/orgs",
      "repos_url": "https://api.github.com/users/cjwelborn/repos",
      "events_url": "https://api.github.com/users/cjwelborn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjwelborn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T15:08:31Z",
    "updated_at": "2017-01-20T15:08:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "`getattr` can fail in many ways even when the attributes come from `dir`. I've seen it quite a few times, though I can probably provide some proof when I get back home. There is a 6 character fix that can be applied here (`getattr(stream, meth, None)`). That's why I was asking if `name` was absolutely required, because with this little change it would be skipped over. Maybe `mod_wsgi` is in the wrong here, but I don't see a problem with fixing a small edge case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274104660",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-274104660",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 274104660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDEwNDY2MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T15:47:55Z",
    "updated_at": "2017-01-20T15:47:55Z",
    "author_association": "MEMBER",
    "body": "Fair enough. Want to make a pull request?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274115680",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-274115680",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 274115680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDExNTY4MA==",
    "user": {
      "login": "cjwelborn",
      "id": 3335984,
      "node_id": "MDQ6VXNlcjMzMzU5ODQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3335984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjwelborn",
      "html_url": "https://github.com/cjwelborn",
      "followers_url": "https://api.github.com/users/cjwelborn/followers",
      "following_url": "https://api.github.com/users/cjwelborn/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjwelborn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjwelborn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjwelborn/subscriptions",
      "organizations_url": "https://api.github.com/users/cjwelborn/orgs",
      "repos_url": "https://api.github.com/users/cjwelborn/repos",
      "events_url": "https://api.github.com/users/cjwelborn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjwelborn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T16:30:14Z",
    "updated_at": "2017-01-20T16:30:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I'll get it done this evening (I'm on central time). Thanks 😀"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274178949",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-274178949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 274178949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDE3ODk0OQ==",
    "user": {
      "login": "cjwelborn",
      "id": 3335984,
      "node_id": "MDQ6VXNlcjMzMzU5ODQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3335984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjwelborn",
      "html_url": "https://github.com/cjwelborn",
      "followers_url": "https://api.github.com/users/cjwelborn/followers",
      "following_url": "https://api.github.com/users/cjwelborn/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjwelborn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjwelborn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjwelborn/subscriptions",
      "organizations_url": "https://api.github.com/users/cjwelborn/orgs",
      "repos_url": "https://api.github.com/users/cjwelborn/repos",
      "events_url": "https://api.github.com/users/cjwelborn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjwelborn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T21:01:55Z",
    "updated_at": "2017-01-20T21:01:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Will PR #10191 work for you? All tests passed, plus [one extra test I added](https://github.com/ipython/ipython/pull/10191/files#diff-0416844b97da9db849967eb6d82ebe0aR71) for this specific edge case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/274227072",
    "html_url": "https://github.com/ipython/ipython/issues/6386#issuecomment-274227072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6386",
    "id": 274227072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIyNzA3Mg==",
    "user": {
      "login": "GrahamDumpleton",
      "id": 507637,
      "node_id": "MDQ6VXNlcjUwNzYzNw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/507637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GrahamDumpleton",
      "html_url": "https://github.com/GrahamDumpleton",
      "followers_url": "https://api.github.com/users/GrahamDumpleton/followers",
      "following_url": "https://api.github.com/users/GrahamDumpleton/following{/other_user}",
      "gists_url": "https://api.github.com/users/GrahamDumpleton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GrahamDumpleton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GrahamDumpleton/subscriptions",
      "organizations_url": "https://api.github.com/users/GrahamDumpleton/orgs",
      "repos_url": "https://api.github.com/users/GrahamDumpleton/repos",
      "events_url": "https://api.github.com/users/GrahamDumpleton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GrahamDumpleton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T02:34:22Z",
    "updated_at": "2017-01-21T02:34:22Z",
    "author_association": "NONE",
    "body": "From memory ``dir()`` returns name because what ``dir()`` is being run on is actually a wrapper/proxy. When you access ``name``, the wrapper/proxy actually then tries to access the real file like object which is wraps and if that doesn't have it, and it is permitted not to have it, then the lookup fails. The problem is arguably in the way the wrapper/proxy is implemented, but transparent proxies that properly reflect the wrapped object is hard.\r\n\r\nCode using the file object associated with ``sys.stdin``, ``sys.stdout`` and ``sys.stderr``, which doesn't accomodate that certain attributes are optional has come up before with mod_wsgi. Main case I can remember is the ``isatty()`` method, which is not supposed to be implemented if the file like object is not associated with a real file, but code out there does assume it always exists. In that case an implementation of ``isatty()`` was added which returned ``False`` to avoid the problem.\r\n\r\nSo no big deal for me to also add a ``name`` attribute to the mod_wsgi ``Log`` object as no doubt this will come up again."
  }
]
