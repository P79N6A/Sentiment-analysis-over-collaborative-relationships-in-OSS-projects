[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59168663",
    "html_url": "https://github.com/ipython/ipython/issues/6698#issuecomment-59168663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6698",
    "id": 59168663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTY4NjYz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T07:40:15Z",
    "updated_at": "2014-10-15T07:40:15Z",
    "author_association": "MEMBER",
    "body": "> Is it posible to use something like isinstance(obj, HasTraits) to check if object have method trait_names?\n\nThe proposal seem to make sens to me at least. Would you like to take a  stab at it in a PR ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59225701",
    "html_url": "https://github.com/ipython/ipython/issues/6698#issuecomment-59225701",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6698",
    "id": 59225701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjI1NzAx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T15:36:53Z",
    "updated_at": "2014-10-15T15:36:53Z",
    "author_association": "MEMBER",
    "body": "I think we check the attribute so that it works both with our own\ntraitlets, and with enthought traits. So we need to do something a bit\nsmarter than isinstance().\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59332001",
    "html_url": "https://github.com/ipython/ipython/issues/6698#issuecomment-59332001",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6698",
    "id": 59332001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzMyMDAx",
    "user": {
      "login": "katyukha",
      "id": 1129820,
      "node_id": "MDQ6VXNlcjExMjk4MjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1129820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/katyukha",
      "html_url": "https://github.com/katyukha",
      "followers_url": "https://api.github.com/users/katyukha/followers",
      "following_url": "https://api.github.com/users/katyukha/following{/other_user}",
      "gists_url": "https://api.github.com/users/katyukha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/katyukha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/katyukha/subscriptions",
      "organizations_url": "https://api.github.com/users/katyukha/orgs",
      "repos_url": "https://api.github.com/users/katyukha/repos",
      "events_url": "https://api.github.com/users/katyukha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/katyukha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T08:50:59Z",
    "updated_at": "2014-10-16T08:50:59Z",
    "author_association": "NONE",
    "body": "As I see IPython does not use _Enthought traits_ explicitly, so `isinstance(obj, (IPython.utils.traitlets.HasTraits, traits.HasTraits))` is not available for it, because of Enthought's _traits_ is not imported.\n\nBut one more thing is that, both IPython traitlets and Enthought's traits define _trait_names_ as usual method, so it should be present in standard `dir(obj)` result.\n\nSo maybe simply look into _words_ (in case of _dir2_ implementation):\n\n``` python\n# 'words' variable containt previous search results (including result of dir(obj))\nif 'trait_names' in words:\n    try:\n        if callable(obj.trait_names):\n                words |= set(obj.trait_names())\n    except:\n        pass\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/127700749",
    "html_url": "https://github.com/ipython/ipython/issues/6698#issuecomment-127700749",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6698",
    "id": 127700749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzcwMDc0OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T18:24:41Z",
    "updated_at": "2015-08-04T18:24:41Z",
    "author_association": "MEMBER",
    "body": "We've also considered checking for an attribute like `_this_should_never_really_exist_on_an_object_` - if it seems to exist, then we can assume that the object is a proxy of some kind that's using `__getattr__` to pretend it has all attributes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/140701630",
    "html_url": "https://github.com/ipython/ipython/issues/6698#issuecomment-140701630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6698",
    "id": 140701630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDcwMTYzMA==",
    "user": {
      "login": "katyukha",
      "id": 1129820,
      "node_id": "MDQ6VXNlcjExMjk4MjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1129820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/katyukha",
      "html_url": "https://github.com/katyukha",
      "followers_url": "https://api.github.com/users/katyukha/followers",
      "following_url": "https://api.github.com/users/katyukha/following{/other_user}",
      "gists_url": "https://api.github.com/users/katyukha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/katyukha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/katyukha/subscriptions",
      "organizations_url": "https://api.github.com/users/katyukha/orgs",
      "repos_url": "https://api.github.com/users/katyukha/repos",
      "events_url": "https://api.github.com/users/katyukha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/katyukha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-16T10:40:10Z",
    "updated_at": "2015-09-16T10:40:10Z",
    "author_association": "NONE",
    "body": "Seems to be fixed)\n"
  }
]
