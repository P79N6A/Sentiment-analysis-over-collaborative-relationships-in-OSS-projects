[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/417134252",
    "html_url": "https://github.com/ipython/ipython/issues/11274#issuecomment-417134252",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11274",
    "id": 417134252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEzNDI1Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T22:59:33Z",
    "updated_at": "2018-08-29T22:59:33Z",
    "author_association": "MEMBER",
    "body": "Is that in a context of audit (ie that has to be secure), or convenience ? \r\n\r\nIf the former – no – there is a source, but it can't be trusted, but there are some questions about how this could be achieved. \r\n\r\nIf it is for convenience, at least the IPython kernel does store its history in `~/.ipython/profile_default/history.sqlite`.  It has various configuration options. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/418528657",
    "html_url": "https://github.com/ipython/ipython/issues/11274#issuecomment-418528657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11274",
    "id": 418528657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUyODY1Nw==",
    "user": {
      "login": "abolotnov",
      "id": 535448,
      "node_id": "MDQ6VXNlcjUzNTQ0OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/535448?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abolotnov",
      "html_url": "https://github.com/abolotnov",
      "followers_url": "https://api.github.com/users/abolotnov/followers",
      "following_url": "https://api.github.com/users/abolotnov/following{/other_user}",
      "gists_url": "https://api.github.com/users/abolotnov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abolotnov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abolotnov/subscriptions",
      "organizations_url": "https://api.github.com/users/abolotnov/orgs",
      "repos_url": "https://api.github.com/users/abolotnov/repos",
      "events_url": "https://api.github.com/users/abolotnov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abolotnov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T21:46:12Z",
    "updated_at": "2018-09-04T21:46:12Z",
    "author_association": "NONE",
    "body": "This is mainly for audit purposes rather than just the history. I guess one of my options would be to override the history module to feed history data into ELK or something and augment it with whatever details are available at the time."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/418626521",
    "html_url": "https://github.com/ipython/ipython/issues/11274#issuecomment-418626521",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11274",
    "id": 418626521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYyNjUyMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T07:22:56Z",
    "updated_at": "2018-09-05T07:22:56Z",
    "author_association": "MEMBER",
    "body": "That would work, the best way would be to actually MITM the ZMQ messages between the notebook server and the kernel (or just augment the notebook to log these). They contain close to ~all the informations you would need to see what users have executed. I'm going to assume the notebook servers are not modifiable by the users while the kernels might. This approach also have the advantage of working regardless of the kernel language."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/433726280",
    "html_url": "https://github.com/ipython/ipython/issues/11274#issuecomment-433726280",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11274",
    "id": 433726280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzcyNjI4MA==",
    "user": {
      "login": "MSeal",
      "id": 1863892,
      "node_id": "MDQ6VXNlcjE4NjM4OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MSeal",
      "html_url": "https://github.com/MSeal",
      "followers_url": "https://api.github.com/users/MSeal/followers",
      "following_url": "https://api.github.com/users/MSeal/following{/other_user}",
      "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions",
      "organizations_url": "https://api.github.com/users/MSeal/orgs",
      "repos_url": "https://api.github.com/users/MSeal/repos",
      "events_url": "https://api.github.com/users/MSeal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MSeal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-28T17:48:26Z",
    "updated_at": "2018-10-28T17:48:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "If it helps, this proposed pattern is also how papermill logs kernel interactions (outputs in this case). It works pretty well, though you need to be careful with the asynchronous nature of the messages if you're relying on ordering."
  }
]
