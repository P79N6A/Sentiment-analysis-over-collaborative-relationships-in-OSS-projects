[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3505108",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-3505108",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 3505108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUxMDg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-16T01:32:32Z",
    "updated_at": "2012-01-16T01:32:32Z",
    "author_association": "MEMBER",
    "body": "@wesm, I'm not sure what you mean by 'recursive mode', sorry.  Could you clarify a bit precisely how you are starting pdb that gives these issues?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3505335",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-3505335",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 3505335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUzMzU=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-16T02:11:30Z",
    "updated_at": "2012-01-16T02:11:30Z",
    "author_association": "NONE",
    "body": "I'm talking about using the 'debug' command inside pdb, used for example if you wish to step into an arbitrary statement. You are given the message \"ENTERING RECURSIVE DEBUGGER\" when you do this. But the problem is that the recursive debugger then ceases to be \"interactive\". Worse, readline stops working. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3505609",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-3505609",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 3505609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU2MDk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-16T02:54:42Z",
    "updated_at": "2012-01-16T02:54:42Z",
    "author_association": "NONE",
    "body": "Here's a self-contained example:\n\n```\n\nIn [1]: paste\nimport sys\n\ndef set_trace():\n    from IPython.core.debugger import Pdb\n    try:\n        Pdb(color_scheme='Linux').set_trace(sys._getframe().f_back)\n    except:\n        from pdb import Pdb as OldPdb\n        OldPdb().set_trace(sys._getframe().f_back)\n\ndef f():\n    set_trace()\n    a = 5\n    return 6\n\ndef g():\n    hello = 0\n    world = 3\n\nf()\n## -- End pasted text --\n> <ipython-input-1-90fd573b08ff>(13)f()\n     12     set_trace()\n---> 13     a = 5\n     14     return 6\n\nipdb> debug g()\nENTERING RECURSIVE DEBUGGER\n> <string>(1)<module>()\n(ipdb>) s\n--Call--\n> <ipython-input-1-90fd573b08ff>(16)g()\n-> def g():\n(ipdb>) n\n> <ipython-input-1-90fd573b08ff>(17)g()\n-> hello = 0\n(ipdb>) he  ^A^K^A\n```\n\nas you can see after typing `he` I tried to type `C-a C-k` and readline functionality is gone\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3506878",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-3506878",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 3506878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDY4Nzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-16T06:55:26Z",
    "updated_at": "2012-01-16T06:55:26Z",
    "author_association": "MEMBER",
    "body": "On Sun, Jan 15, 2012 at 6:11 PM, Wes McKinney\nreply@reply.github.com\nwrote:\n\n> I'm talking about using the 'debug' command inside pdb, used for example if you wish to step into an arbitrary statement. You are given the message \"ENTERING RECURSIVE DEBUGGER\" when you do this. But the problem is that the recursive debugger then ceases to be \"interactive\". Worse, readline stops working.\n\nAh, OK: I didn't even know such a mode existed!  Today is the first\ntime I hear of it (a bit embarrassing considering this morning I was\nlecturing at Berkeley on the uses of pdb :).  Now I get it; it\nshouldn't be too hard, just a matter of ensuring that the recursive\npdb instance that pdb instantiates is hooked up with our\nreadline-enabled pdb instead of the plain vanilla one.  In case you\nwant to take a stab at it, the code is in IPython.core.debugger.\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3515205",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-3515205",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 3515205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUyMDU=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-16T17:52:52Z",
    "updated_at": "2012-01-16T17:52:52Z",
    "author_association": "NONE",
    "body": "Crazy, since you've been using Python about 6 years longer than I have I'm really surprised too! I've been using that functionality basically daily for a couple years now-- forensic debugging while testing / fixing pandas bugs.\n\nBut if you had ever used it I'm sure that you would have fixed the debugger by now. I will take a crack at it-- looking at IPython.core.debugger and it doesn't look so bad at all. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3528993",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-3528993",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 3528993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg5OTM=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-17T14:59:51Z",
    "updated_at": "2012-01-17T14:59:51Z",
    "author_association": "NONE",
    "body": "OK these are the critical lines, tinkering with this:\n\n```\n    def new_do_debug(self, arg):\n        sys.settrace(None)\n        globals = self.curframe.f_globals\n        locals = self.curframe_locals\n        p = Pdb(color_scheme='Linux', completekey=self.completekey,\n                stdin=self.stdin, stdout=self.stdout)\n        p.prompt = \"(%s) \" % self.prompt.strip()\n        print >>self.stdout, \"ENTERING RECURSIVE DEBUGGER\"\n        sys.call_tracing(p.run, (arg, globals, locals))\n        print >>self.stdout, \"LEAVING RECURSIVE DEBUGGER\"\n        sys.settrace(self.trace_dispatch)\n        self.lastcmd = p.lastcmd\n    # copied from bdb.py\n    def run(self, cmd, globals=None, locals=None):\n        from bdb import BdbQuit\n        import types\n\n        if globals is None:\n            import __main__\n            globals = __main__.__dict__\n        if locals is None:\n            locals = globals\n        self.reset()\n        sys.settrace(self.trace_dispatch)\n        if not isinstance(cmd, types.CodeType):\n            cmd = cmd+'\\n'\n        try:\n            exec cmd in globals, locals\n        except BdbQuit:\n            pass\n        finally:\n            self.quitting = 1\n            sys.settrace(None)\n    do_debug = decorate_fn_with_doc(new_do_debug, OldPdb.do_debug)\n```\n\nIt must have to do with call_tracing\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/315606849",
    "html_url": "https://github.com/ipython/ipython/issues/1273#issuecomment-315606849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1273",
    "id": 315606849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTYwNjg0OQ==",
    "user": {
      "login": "segevfiner",
      "id": 24731903,
      "node_id": "MDQ6VXNlcjI0NzMxOTAz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24731903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segevfiner",
      "html_url": "https://github.com/segevfiner",
      "followers_url": "https://api.github.com/users/segevfiner/followers",
      "following_url": "https://api.github.com/users/segevfiner/following{/other_user}",
      "gists_url": "https://api.github.com/users/segevfiner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segevfiner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segevfiner/subscriptions",
      "organizations_url": "https://api.github.com/users/segevfiner/orgs",
      "repos_url": "https://api.github.com/users/segevfiner/repos",
      "events_url": "https://api.github.com/users/segevfiner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segevfiner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-16T12:45:06Z",
    "updated_at": "2017-07-16T12:45:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is still an issue in IPython 5 and probably 6, i.e. it still happens with prompt-toolkit based IPython."
  }
]
