[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12279092",
    "html_url": "https://github.com/ipython/ipython/issues/2793#issuecomment-12279092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2793",
    "id": 12279092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjc5MDky",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-15T17:33:29Z",
    "updated_at": "2013-01-15T17:33:29Z",
    "author_association": "MEMBER",
    "body": "Pinging @wesm on this one.  There are really two issues here:\n1. updating serialization to be aware of TimeSeries (and, I presume, data frames as a whole).\n2. the interim workaround for how to reconstruct a TimeSeries from numpy arrays, if possible.\n\nSo the direct question to @wesm: Can you detail serialization of pandas objects?  What, in addition to the arrays themselves, is necessary to reconstruct a pandas object?  What pandas objects actually subclass ndarray (it is an `isinstance(cls, ndarray)` that is causing IPython to use its efficient numpy path here, rather than simply pickling).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12366491",
    "html_url": "https://github.com/ipython/ipython/issues/2793#issuecomment-12366491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2793",
    "id": 12366491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzY2NDkx",
    "user": {
      "login": "richbwood",
      "id": 443100,
      "node_id": "MDQ6VXNlcjQ0MzEwMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/443100?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richbwood",
      "html_url": "https://github.com/richbwood",
      "followers_url": "https://api.github.com/users/richbwood/followers",
      "following_url": "https://api.github.com/users/richbwood/following{/other_user}",
      "gists_url": "https://api.github.com/users/richbwood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richbwood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richbwood/subscriptions",
      "organizations_url": "https://api.github.com/users/richbwood/orgs",
      "repos_url": "https://api.github.com/users/richbwood/repos",
      "events_url": "https://api.github.com/users/richbwood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richbwood/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T12:45:37Z",
    "updated_at": "2013-01-17T12:45:37Z",
    "author_association": "NONE",
    "body": "I don't think this is a problem with pandas, I think it is more general than that because any class that subclasses numpy.ndarray will break under the current implementation. Therefore, I think it makes sense for the IPython.parallel code to only use the efficient numpy path if the object is\n\n```\ntype(self.obj) == numpy.ndarray\n```\n\nrather than\n\n```\nisinstance(self.obj, numpy.ndarray)\n```\n\nMaking DirectView.push efficient for pandas.TimeSeries objects is a nice-to-have, but I would have thought that it is ultimately less important than having DirectView.push work as expected.\n\nAs an interim workaround solution the pandas.TimeSeries object can be wrapped in a pandas.DataFrame to stop the efficient numpy path from being used.\n\nMany thanks\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12381263",
    "html_url": "https://github.com/ipython/ipython/issues/2793#issuecomment-12381263",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2793",
    "id": 12381263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzgxMjYz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T18:20:48Z",
    "updated_at": "2013-01-17T18:20:48Z",
    "author_association": "MEMBER",
    "body": "An excellent point.  I will change the check from `isinstance(obj, cls)` to `type(obj) is cls`.\n\nI would still love to hear from @wesm about efficient serialization of pandas objects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12381337",
    "html_url": "https://github.com/ipython/ipython/issues/2793#issuecomment-12381337",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2793",
    "id": 12381337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzgxMzM3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T18:22:18Z",
    "updated_at": "2013-01-17T18:22:18Z",
    "author_association": "MEMBER",
    "body": "typecheck change is in #2800\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12386025",
    "html_url": "https://github.com/ipython/ipython/issues/2793#issuecomment-12386025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2793",
    "id": 12386025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzg2MDI1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T19:43:34Z",
    "updated_at": "2013-01-17T19:43:34Z",
    "author_association": "NONE",
    "body": "Sorry it's taken me a while to have a look.\n\nThis is probably another case of \"Series probably shouldn't be an ndarray (subclass)\". I would recommend using pickle whenever the class is not exactly `ndarray`. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12387247",
    "html_url": "https://github.com/ipython/ipython/issues/2793#issuecomment-12387247",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2793",
    "id": 12387247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzg3MjQ3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T19:52:35Z",
    "updated_at": "2013-01-17T19:52:35Z",
    "author_association": "MEMBER",
    "body": "@wesm - yes, that's the right answer in general, and what is done in #2800.  But I would still like to give pandas the special treatment we do for numpy.  So any time you can write up (or code up, if necessary) a representation of pandas data structures that is buffers + metadata, so that we can add it to our zero-copy stuff, that would be great.\n"
  }
]
