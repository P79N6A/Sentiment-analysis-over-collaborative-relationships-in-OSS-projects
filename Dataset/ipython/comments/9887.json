[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/240996222",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-240996222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 240996222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk5NjIyMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T11:38:25Z",
    "updated_at": "2016-08-19T11:38:25Z",
    "author_association": "MEMBER",
    "body": "I think that's a limitation of the way Python scopes work - you can't easily change local values inside a function dynamically.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/241181211",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-241181211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 241181211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE4MTIxMQ==",
    "user": {
      "login": "vladiibine",
      "id": 6544669,
      "node_id": "MDQ6VXNlcjY1NDQ2Njk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladiibine",
      "html_url": "https://github.com/vladiibine",
      "followers_url": "https://api.github.com/users/vladiibine/followers",
      "following_url": "https://api.github.com/users/vladiibine/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions",
      "organizations_url": "https://api.github.com/users/vladiibine/orgs",
      "repos_url": "https://api.github.com/users/vladiibine/repos",
      "events_url": "https://api.github.com/users/vladiibine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladiibine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T05:42:10Z",
    "updated_at": "2016-08-20T05:42:10Z",
    "author_association": "NONE",
    "body": "I don't know how to reply to this. \nI only know changing local variables works in IPython 4, and the vanilla python REPL. It works with pydevd. It should just work, that I'm fairly confident about.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/241183142",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-241183142",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 241183142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE4MzE0Mg==",
    "user": {
      "login": "vladiibine",
      "id": 6544669,
      "node_id": "MDQ6VXNlcjY1NDQ2Njk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladiibine",
      "html_url": "https://github.com/vladiibine",
      "followers_url": "https://api.github.com/users/vladiibine/followers",
      "following_url": "https://api.github.com/users/vladiibine/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions",
      "organizations_url": "https://api.github.com/users/vladiibine/orgs",
      "repos_url": "https://api.github.com/users/vladiibine/repos",
      "events_url": "https://api.github.com/users/vladiibine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladiibine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T06:38:00Z",
    "updated_at": "2016-08-20T06:38:00Z",
    "author_association": "NONE",
    "body": "More context: Python 2.7.6\n\nI however could reproduce this behavior in Python 3.4\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/241209486",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-241209486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 241209486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTIwOTQ4Ng==",
    "user": {
      "login": "vladiibine",
      "id": 6544669,
      "node_id": "MDQ6VXNlcjY1NDQ2Njk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladiibine",
      "html_url": "https://github.com/vladiibine",
      "followers_url": "https://api.github.com/users/vladiibine/followers",
      "following_url": "https://api.github.com/users/vladiibine/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions",
      "organizations_url": "https://api.github.com/users/vladiibine/orgs",
      "repos_url": "https://api.github.com/users/vladiibine/repos",
      "events_url": "https://api.github.com/users/vladiibine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladiibine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T16:28:39Z",
    "updated_at": "2016-08-20T16:28:39Z",
    "author_association": "NONE",
    "body": "More context:\nThis commit, made it so that when you try to change a variable, while debugging (with `%debug` - for example, but with `Python.core.debugger.Pdb().runcall(myfunc, arg1, arg2)` too), an error will be raised. What it did, was to add the `parseline` method to the Pdb class:\n85820d34555eef610d3a08e3b3b1d32c53804dcd\n\nAnd then this commit made the Pdb class a new-style class. Unfortunately, from this point onward, changing the variable names dowsn't work anymore.\n7b8ae1d31a805ebc7bb0f9a6ac6803a9535088fb\n\nIt would be totally awesome to get the feature back, but as far as I see, the situation is not the prettiest. Who knows what arcane old-style class magic happened?\n\nAnyway, I'll keep investigating this. I consider this bug very nasty.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/241244217",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-241244217",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 241244217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI0NDIxNw==",
    "user": {
      "login": "vladiibine",
      "id": 6544669,
      "node_id": "MDQ6VXNlcjY1NDQ2Njk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladiibine",
      "html_url": "https://github.com/vladiibine",
      "followers_url": "https://api.github.com/users/vladiibine/followers",
      "following_url": "https://api.github.com/users/vladiibine/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions",
      "organizations_url": "https://api.github.com/users/vladiibine/orgs",
      "repos_url": "https://api.github.com/users/vladiibine/repos",
      "events_url": "https://api.github.com/users/vladiibine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladiibine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-21T07:58:20Z",
    "updated_at": "2016-08-21T07:58:20Z",
    "author_association": "NONE",
    "body": "In the 5.1.0 tag I see a workaround has already been implemented.\n\nConsidering the function\n\n```\ndef asdf(aa, bb):\n    x = 0\n    return aa, bb\n```\n\nIf in debug mode we hit\n`!!a = 9`\n\nThen the value of the variable `a` will indeed change to 9.\n\n@takluyver do you think this was the desirable behavior? I don't know if this is documented, I couldn't find any reference to this. I suspect this to be just temporary workaround.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/243806479",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-243806479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 243806479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzgwNjQ3OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T15:42:57Z",
    "updated_at": "2016-08-31T15:42:57Z",
    "author_association": "MEMBER",
    "body": "Oh, that suggests it's something to do with the 'smart' debugger feature added in #9449. @anntzer, could you investigate?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/243847416",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-243847416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 243847416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg0NzQxNg==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T17:58:13Z",
    "updated_at": "2016-08-31T17:58:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "It appears that `curframe` is not set correctly when executing the very first line in a function (so the wrong locals dictionary gets updated).  Unfortunately I can't see a fix for now :-(\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/243855817",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-243855817",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 243855817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg1NTgxNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T18:26:06Z",
    "updated_at": "2016-08-31T18:26:06Z",
    "author_association": "MEMBER",
    "body": "I wonder if we should back 'smart' debugging out for now. I'd rather have something that works consistently, even if it's not ideal.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/243858998",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-243858998",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 243858998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg1ODk5OA==",
    "user": {
      "login": "anntzer",
      "id": 1322974,
      "node_id": "MDQ6VXNlcjEzMjI5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anntzer",
      "html_url": "https://github.com/anntzer",
      "followers_url": "https://api.github.com/users/anntzer/followers",
      "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
      "organizations_url": "https://api.github.com/users/anntzer/orgs",
      "repos_url": "https://api.github.com/users/anntzer/repos",
      "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anntzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T18:36:34Z",
    "updated_at": "2016-08-31T18:36:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't mind if you decide to revert that PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/245001639",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-245001639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 245001639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTAwMTYzOQ==",
    "user": {
      "login": "vladiibine",
      "id": 6544669,
      "node_id": "MDQ6VXNlcjY1NDQ2Njk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladiibine",
      "html_url": "https://github.com/vladiibine",
      "followers_url": "https://api.github.com/users/vladiibine/followers",
      "following_url": "https://api.github.com/users/vladiibine/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions",
      "organizations_url": "https://api.github.com/users/vladiibine/orgs",
      "repos_url": "https://api.github.com/users/vladiibine/repos",
      "events_url": "https://api.github.com/users/vladiibine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladiibine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T16:07:39Z",
    "updated_at": "2016-09-06T21:40:45Z",
    "author_association": "NONE",
    "body": "I was thinking that \"perhaps\" a different approach can be taken. Didn't have time to test it myself, but it's basically this: instead of checking if keys exist in the locals/globals dictionaries, the code could just be evaluated, and errors caught.\n\nThis is pseudocode, but I hope I can get the point across:\n\n```\ndef parseline(self, line):\n    if line.startswith('!'):\n        evaluate_as_pdb_command(line)\n\n    try:\n        evaluate_as_code(line)      # this will execute the code in the expected locals() and globals() context\n    except (NameError, SyntaxError) as err:   # if for instance the user passed the `c` command\n        save_err_with_stack_trace(err)\n        try:\n            evaluate_as_pdb_command(line)   # this will try to evaluate the command\n        except CommandSyntaxError:\n            raise_saved_error()\n```\n\nI think this avoids most of the problems with the current implementation, but does indeed introduce some new ones. For one, if the user actually wants to execute some code that would normally raise a NameError or SyntaxError, the debugger will try to interpret that as a command.... I don't have a better idea now though.\n\nThanks for the interest guys!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276734389",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-276734389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 276734389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjczNDM4OQ==",
    "user": {
      "login": "vladiibine",
      "id": 6544669,
      "node_id": "MDQ6VXNlcjY1NDQ2Njk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vladiibine",
      "html_url": "https://github.com/vladiibine",
      "followers_url": "https://api.github.com/users/vladiibine/followers",
      "following_url": "https://api.github.com/users/vladiibine/following{/other_user}",
      "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions",
      "organizations_url": "https://api.github.com/users/vladiibine/orgs",
      "repos_url": "https://api.github.com/users/vladiibine/repos",
      "events_url": "https://api.github.com/users/vladiibine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vladiibine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T18:10:22Z",
    "updated_at": "2017-02-01T18:10:22Z",
    "author_association": "NONE",
    "body": "I see that in ipython==5.2.1 it doesn't happen anymore! Thanks guys!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285477440",
    "html_url": "https://github.com/ipython/ipython/issues/9887#issuecomment-285477440",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9887",
    "id": 285477440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQ3NzQ0MA==",
    "user": {
      "login": "nonagonal",
      "id": 4778958,
      "node_id": "MDQ6VXNlcjQ3Nzg5NTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4778958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nonagonal",
      "html_url": "https://github.com/nonagonal",
      "followers_url": "https://api.github.com/users/nonagonal/followers",
      "following_url": "https://api.github.com/users/nonagonal/following{/other_user}",
      "gists_url": "https://api.github.com/users/nonagonal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nonagonal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nonagonal/subscriptions",
      "organizations_url": "https://api.github.com/users/nonagonal/orgs",
      "repos_url": "https://api.github.com/users/nonagonal/repos",
      "events_url": "https://api.github.com/users/nonagonal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nonagonal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T20:44:55Z",
    "updated_at": "2017-03-09T20:44:55Z",
    "author_association": "NONE",
    "body": "I noticed that in ipython 5.2.2 (and python 2.7.12) any changes made to local variables don't persist if I jump to a place before I made the assignment, e.g.:\r\n\r\n```\r\ndef f(a=0): \r\n  print(a)  # line 1\r\n  x=0        # line 2\r\n  print(a)  # line 3\r\n```\r\n1) step to line 2\r\n2) set a=1\r\n3) step to line 3\r\n4) jump to line 1\r\n5) note a=0\r\n\r\nbut if we jump to line 2 instead, a retains its new value (1).\r\n\r\nI'm not sure if this is related to this issue or a separate issue (or if it's intended behavior), does anyone know?"
  }
]
