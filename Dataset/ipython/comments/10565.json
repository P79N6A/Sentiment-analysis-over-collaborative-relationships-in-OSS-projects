[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302131047",
    "html_url": "https://github.com/ipython/ipython/issues/10565#issuecomment-302131047",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10565",
    "id": 302131047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjEzMTA0Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T15:40:19Z",
    "updated_at": "2017-05-17T15:40:19Z",
    "author_association": "MEMBER",
    "body": "Can you give a self-contained example to reproduce this?\r\n\r\nThis comment in `bdb.Breakpoint` is not encouraging:\r\n\r\n```\r\n# XXX Keeping state in the class is a mistake -- this means\r\n# you cannot have more than one active Bdb instance.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302705744",
    "html_url": "https://github.com/ipython/ipython/issues/10565#issuecomment-302705744",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10565",
    "id": 302705744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjcwNTc0NA==",
    "user": {
      "login": "newton880",
      "id": 13992357,
      "node_id": "MDQ6VXNlcjEzOTkyMzU3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13992357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/newton880",
      "html_url": "https://github.com/newton880",
      "followers_url": "https://api.github.com/users/newton880/followers",
      "following_url": "https://api.github.com/users/newton880/following{/other_user}",
      "gists_url": "https://api.github.com/users/newton880/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/newton880/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/newton880/subscriptions",
      "organizations_url": "https://api.github.com/users/newton880/orgs",
      "repos_url": "https://api.github.com/users/newton880/repos",
      "events_url": "https://api.github.com/users/newton880/events{/privacy}",
      "received_events_url": "https://api.github.com/users/newton880/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-19T13:40:58Z",
    "updated_at": "2017-05-19T13:40:58Z",
    "author_association": "NONE",
    "body": "Thanks for responding.  Sure- following these steps should reproduce the issue:\r\n\r\n1. Load Python version 2.7.8 (if necessary).\r\n\r\n2. Load IPython version 5.3.0 (if necessary).\r\n\r\n3. Open an ipython session and run the attached script (test.py) with the magic run command '%run', and set a breakpoint as follows:\r\nIn [1]: %run -d test.py\r\nipdb> b 4\r\nipdb> c\r\n\r\nThe program should execute successfully at this point.  However, running a second time following the same procedure produces an error.  \r\n\r\n4. Rerun the program as before:\r\nIn [2]: %run -d test.py\r\nipdb> b 4\r\nipdb> c\r\n\r\nThis should cause a key error to appear.  Something like:\r\nKeyError: ('<path_to_program>/test.py', 4) \r\n\r\n[test.py.zip](https://github.com/ipython/ipython/files/1014420/test.py.zip)\r\n\r\n\r\n\r\n \r\n\r\n\r\n   "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/315032296",
    "html_url": "https://github.com/ipython/ipython/issues/10565#issuecomment-315032296",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10565",
    "id": 315032296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAzMjI5Ng==",
    "user": {
      "login": "segevfiner",
      "id": 24731903,
      "node_id": "MDQ6VXNlcjI0NzMxOTAz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24731903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segevfiner",
      "html_url": "https://github.com/segevfiner",
      "followers_url": "https://api.github.com/users/segevfiner/followers",
      "following_url": "https://api.github.com/users/segevfiner/following{/other_user}",
      "gists_url": "https://api.github.com/users/segevfiner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segevfiner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segevfiner/subscriptions",
      "organizations_url": "https://api.github.com/users/segevfiner/orgs",
      "repos_url": "https://api.github.com/users/segevfiner/repos",
      "events_url": "https://api.github.com/users/segevfiner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segevfiner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T09:58:35Z",
    "updated_at": "2017-07-13T09:58:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another reproduction:\r\n```\r\nIn [1]: def f():\r\n   ...:     print(\"Hello World!\")\r\n   ...:\r\n\r\nIn [2]: debug f()\r\nNOTE: Enter 'c' at the ipdb>  prompt to continue execution.\r\n> <string>(1)<module>()\r\n\r\nipdb> s\r\n--Call--\r\n> <ipython-input-1-11a3408a7a32>(1)f()\r\n----> 1 def f():\r\n      2     print(\"Hello World!\")\r\n      3\r\n\r\nipdb> b 2\r\nBreakpoint 1 at <ipython-input-1-11a3408a7a32>:2\r\nipdb> c\r\n> <ipython-input-1-11a3408a7a32>(2)f()\r\n      1 def f():\r\n1---> 2     print(\"Hello World!\")\r\n      3\r\n\r\nipdb> c\r\nHello World!\r\n\r\nIn [3]: debug f()\r\nNOTE: Enter 'c' at the ipdb>  prompt to continue execution.\r\n> <string>(1)<module>()\r\n\r\nipdb> s\r\n--Call--\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-1-11a3408a7a32> in f()\r\n----> 1 def f():\r\n      2     print(\"Hello World!\")\r\n      3\r\n\r\npython27\\Lib\\bdb.pyc in trace_dispatch(self, frame, event, arg)\r\n     49             return self.dispatch_line(frame)\r\n     50         if event == 'call':\r\n---> 51             return self.dispatch_call(frame, arg)\r\n     52         if event == 'return':\r\n     53             return self.dispatch_return(frame, arg)\r\n\r\npython27\\Lib\\bdb.pyc in dispatch_call(self, frame, arg)\r\n     78             # No need to trace this function\r\n     79             return # None\r\n---> 80         self.user_call(frame, arg)\r\n     81         if self.quitting: raise BdbQuit\r\n     82         return self.trace_dispatch\r\n\r\npython27\\Lib\\pdb.pyc in user_call(self, frame, argument_list)\r\n    146         if self.stop_here(frame):\r\n    147             print >>self.stdout, '--Call--'\r\n--> 148             self.interaction(frame, None)\r\n    149\r\n    150     def user_line(self, frame):\r\n\r\npython27\\lib\\site-packages\\IPython\\core\\debugger.pyc in interaction(self, frame, traceback)\r\n    286     def interaction(self, frame, traceback):\r\n    287         try:\r\n--> 288             OldPdb.interaction(self, frame, traceback)\r\n    289         except KeyboardInterrupt:\r\n    290             sys.stdout.write('\\n' + self.shell.get_exception_only())\r\n\r\npython27\\Lib\\pdb.pyc in interaction(self, frame, traceback)\r\n    207     def interaction(self, frame, traceback):\r\n    208         self.setup(frame, traceback)\r\n--> 209         self.print_stack_entry(self.stack[self.curindex])\r\n    210         self.cmdloop()\r\n    211         self.forget()\r\n\r\npython27\\lib\\site-packages\\IPython\\core\\debugger.pyc in print_stack_entry(self, frame_lineno, prompt_prefix, context)\r\n    342         except (TypeError, ValueError):\r\n    343                 raise ValueError(\"Context must be a positive integer\")\r\n--> 344         print(self.format_stack_entry(frame_lineno, '', context))\r\n    345\r\n    346         # vds: >>\r\n\r\npython27\\lib\\site-packages\\IPython\\core\\debugger.pyc in format_stack_entry(self, frame_lineno, lprefix, context)\r\n    421             ret.append(self.__format_line(linetpl, filename,\r\n    422                                           start + 1 + i, line,\r\n--> 423                                           arrow = show_arrow) )\r\n    424         return ''.join(ret)\r\n    425\r\n\r\npython27\\lib\\site-packages\\IPython\\core\\debugger.pyc in __format_line(self, tpl_line, filename, lineno, line, arrow)\r\n    434         bp = None\r\n    435         if lineno in self.get_file_breaks(filename):\r\n--> 436             bps = self.get_breaks(filename, lineno)\r\n    437             bp = bps[-1]\r\n    438\r\n\r\npython27\\Lib\\bdb.pyc in get_breaks(self, filename, lineno)\r\n    324         return filename in self.breaks and \\\r\n    325             lineno in self.breaks[filename] and \\\r\n--> 326             Breakpoint.bplist[filename, lineno] or []\r\n    327\r\n    328     def get_file_breaks(self, filename):\r\n\r\nKeyError: ('<ipython-input-1-11a3408a7a32>', 2)\r\n```"
  }
]
