[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2551671",
    "html_url": "https://github.com/ipython/ipython/pull/936#issuecomment-2551671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/936",
    "id": 2551671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTE2NzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T01:40:02Z",
    "updated_at": "2011-10-28T01:40:02Z",
    "author_association": "MEMBER",
    "body": "Sensible, though note that it is actually only affects setting the `BROWSER` env to a blocking call. It does _not_ affect Chrome, or any other browser, if it is the default system-wide as you suggest (assuming support for gnome-open or similar).\n\nI actually was able to get the subprocess to survive notebook termination (at least with sigint/ctrl-C), with:\n\n``` python\n            def b():\n                signal.signal(signal.SIGINT, signal.SIG_IGN)\n                webbrowser.open(\"%s://%s:%i\" % (proto, ip, self.port),\n                                         new=2)\n            p = multiprocessing.Process(target=b)\n            p.daemon = True\n            p.start()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2551861",
    "html_url": "https://github.com/ipython/ipython/pull/936#issuecomment-2551861",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/936",
    "id": 2551861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTE4NjE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T02:22:48Z",
    "updated_at": "2011-10-28T02:22:48Z",
    "author_association": "MEMBER",
    "body": "Right on the system-wide setting, which is good.\n\nI tried several approaches with subprocess and threading, but not the one with mp (I basically wrote the identical code you have with threading instead of mp).  I'd say we go with that approach instead, as it will ultimately provide a better interface.\n\nHow does that sound? I can update the PR in a bit.\nI'll \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2552579",
    "html_url": "https://github.com/ipython/ipython/pull/936#issuecomment-2552579",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/936",
    "id": 2552579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTI1Nzk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T05:02:05Z",
    "updated_at": "2011-10-28T05:02:05Z",
    "author_association": "MEMBER",
    "body": "Mmh: I just implemented the code above, and I still get the Chrome session to die on my system (ubuntu 11.10, Chrome stable)...  No luck, it dies just like with the threading or subprocess approach.  Any chance when you were testing you had a Chrome process lying around beforehand?  In that case it doesn't get killed...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2553087",
    "html_url": "https://github.com/ipython/ipython/pull/936#issuecomment-2553087",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/936",
    "id": 2553087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTMwODc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T06:48:44Z",
    "updated_at": "2011-10-28T06:48:44Z",
    "author_association": "MEMBER",
    "body": "I did check, but I may not have been thorough.  I honestly don't think it's a big deal - this is only going to affect users who don't actually use Chrome, but are running the notebook with Chrome (e.g. testers, like you).  The more important thing is it starts up functional, which is resolved by the threading.\n\nSince such users are few, and presumably fairly advanced, we can just note that using `BROWSER='google-chrome&'` (background) instead of `BROWSER='google-chrome'` should avoid the problem, though I'm not 100% sure it will be different from the multiprocessing behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2553104",
    "html_url": "https://github.com/ipython/ipython/pull/936#issuecomment-2553104",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/936",
    "id": 2553104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTMxMDQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T06:52:13Z",
    "updated_at": "2011-10-28T06:52:13Z",
    "author_association": "MEMBER",
    "body": "On Thu, Oct 27, 2011 at 11:48 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> I did check, but I may not have been thorough.  I honestly don't think it's a big deal - this is only going to affect users who don't actually use Chrome, but are running the notebook with Chrome (e.g. testers, like you).  The more important thing is it starts up functional, which is resolved by the threading.\n\nYup.\n\n> Since such users are few, and presumably fairly advanced, we can just note that using `BROWSER='google-chrome&'` (background) instead of `BROWSER='google-chrome'` should avoid the problem, though I'm not 100% sure it will be different from the multiprocessing behavior.\n\nActually, that's a great idea, I hadn't thought of that!\n\nThanks, I'll go ahead and merge as-is then.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2553122",
    "html_url": "https://github.com/ipython/ipython/pull/936#issuecomment-2553122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/936",
    "id": 2553122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTMxMjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T06:53:58Z",
    "updated_at": "2011-10-28T06:53:58Z",
    "author_association": "MEMBER",
    "body": "Rebased to avoid recursive merge, pushed.\n"
  }
]
