[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90739279",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90739279",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90739279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzM5Mjc5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T21:37:23Z",
    "updated_at": "2015-04-07T21:37:23Z",
    "author_association": "MEMBER",
    "body": "Do you have many tabs open on the same notebook ? These random names are to ensure atomic writing on notebooks (which fails). Is this a dropbox folder, or any other kind of folder with weird permissions ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90752223",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90752223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90752223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzUyMjIz",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T22:48:18Z",
    "updated_at": "2015-04-07T22:48:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm sure that the notebook is opened only in one tab when the error occurs. The folder is a normal windows folder that I use for my work and I never had permission errors with other programs or with ipython < 3. It happens to be inside a Dropbox folder, and I got the same error under a google drive folder. I'll try to see if I can get the error outside dropbox or gdrive folders.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90752903",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90752903",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90752903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzUyOTAz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T22:53:42Z",
    "updated_at": "2015-04-07T22:53:42Z",
    "author_association": "MEMBER",
    "body": "Ah, most likely the dropbox daemon is accessing/syncing the file while we try to save it.\nProbably same thing that prevent latex from creating PDF when adobe have the PDF open.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90757542",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90757542",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90757542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzU3NTQy",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T23:16:28Z",
    "updated_at": "2015-04-07T23:16:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I hope ipython can handle this occurrence in a more robust way. BTW I never got this error in ipython 2, and I was always working under dropbox.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90758723",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90758723",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90758723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzU4NzIz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T23:24:40Z",
    "updated_at": "2015-04-07T23:24:40Z",
    "author_association": "MEMBER",
    "body": "The tempfiles are a new behavior, and prevent data loss on failed writes. Something wonky is happening with the temp files. @Carreau might be on the right track that we are trying to delete the temp file while Dropbox is in the process of syncing it, which causes problems on Windows but won't on other platforms.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90772845",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90772845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90772845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzcyODQ1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T01:12:50Z",
    "updated_at": "2015-04-08T01:12:50Z",
    "author_association": "MEMBER",
    "body": "Ugh, yes, the atomic writing is probably going to be nasty in synced folders if the sync daemon starts syncing before we get to rename the newly created file. Even on Unix-y systems, I think Dropbox's backup of files you delete might quickly get full of notebook saves. And I don't currently see a good way to fix that.\n\nGah. I wish OSs exposed a native way to write a file atomically, so we didn't have to do this rename trick.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90955127",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90955127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90955127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTU1MTI3",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T15:41:10Z",
    "updated_at": "2015-04-08T15:41:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see the underlying problem. I don't care if Dropbox backup history is littered with these temporary files. \n\nBut having my work folder littered with temp files and the UI showing messages implying that I may loose some data is frightening.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90956591",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90956591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90956591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTU2NTkx",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T15:46:46Z",
    "updated_at": "2015-04-08T15:46:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a workaround you may try to rename the file again after X seconds. Or provide a configuration option to set the folder for temp files somewhere else, outside the synced folder.\n\nI wonder how MS office solve this as they also use temp files whenever a document is open and there is no issue with sync folders.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90960334",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90960334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90960334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTYwMzM0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T16:03:28Z",
    "updated_at": "2015-04-08T16:03:28Z",
    "author_association": "MEMBER",
    "body": "Saving files elsewhere could work, but you need to ensure it's on the same filesystem (otherwise you can't atomically move it, negating the benefits of atomic save). I don't know of a good cross platform way to ensure that other than putting it in the same folder, and it doesn't seem very nice to expect users to configure it themselves.\n\nRenaming again after a few seconds doesn't really seem like a good idea. I think that's going to end up causing yet more problems, because you're no longer dealing with plain success/failure, instead you have these strange failed-but-might-succeed-soon states.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90964164",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90964164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90964164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTY0MTY0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T16:19:00Z",
    "updated_at": "2015-04-08T16:19:00Z",
    "author_association": "MEMBER",
    "body": "We could have a periodic 'cleanup temp files' sweep.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90964338",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90964338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90964338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTY0MzM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T16:19:33Z",
    "updated_at": "2015-04-08T16:19:33Z",
    "author_association": "MEMBER",
    "body": "...or we could disable atomic save on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90974754",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90974754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90974754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTc0NzU0",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T16:58:15Z",
    "updated_at": "2015-04-08T16:58:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I understand correctly, when you save the notebook, you save to a new temp file to avoid to corrupt the original notebook. When the save completes you rename it in order to overwrite the old file and in this way you assure that the files on disk are never inconsistent/corrupted (because rename is atomic).\n\nIf this picture is correct, in order to do not loose data the rename must complete. \n\nWhen this error occurs, for some reasons, the notebook GUI shows several dialog asking to overwrite the file, so I have to click several times on overwrite until the notebook is finally saved. And the result is that a bunch of temp files are left in the folder. Would be possible to detect this situation and at least try to delete the old temp files once the save succeeds?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90975195",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90975195",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90975195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTc1MTk1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T17:00:28Z",
    "updated_at": "2015-04-08T17:00:28Z",
    "author_association": "MEMBER",
    "body": "Might be possible, but that would require making subsequent save aware of\neach other, and I guess that dropbox will get a handle on temp files, and\nwe will actually get an error in trying to delete them while dropbox is\nsyncing.\n\nOn Wed, Apr 8, 2015 at 9:58 AM, Antonino Ingargiola <\nnotifications@github.com> wrote:\n\n> If I understand correctly, when you save the notebook, you save to a new\n> temp file to avoid to corrupt the original notebook. When the save\n> completes you rename it in order to overwrite the old file and in this way\n> you assure that the files on disk are never inconsistent/corrupted (because\n> rename is atomic).\n> \n> If this picture is correct, in order to do not loose data the rename must\n> complete.\n> \n> When this error occurs, for some reasons, the notebook GUI shows several\n> dialog asking to overwrite the file, so I have to click several times on\n> overwrite until the notebook is finally saved. And the result is that a\n> bunch of temp files are left in the folder. Would be possible to detect\n> this situation and at least try to delete the old temp files once the save\n> succeeds?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8270#issuecomment-90974754.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90977251",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-90977251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 90977251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTc3MjUx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T17:10:13Z",
    "updated_at": "2015-04-08T17:10:13Z",
    "author_association": "MEMBER",
    "body": "@tritemio at the very least, we can definitely handle the failure better, yes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/91596794",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-91596794",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 91596794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNTk2Nzk0",
    "user": {
      "login": "ebenolson",
      "id": 544718,
      "node_id": "MDQ6VXNlcjU0NDcxOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/544718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ebenolson",
      "html_url": "https://github.com/ebenolson",
      "followers_url": "https://api.github.com/users/ebenolson/followers",
      "following_url": "https://api.github.com/users/ebenolson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ebenolson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ebenolson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ebenolson/subscriptions",
      "organizations_url": "https://api.github.com/users/ebenolson/orgs",
      "repos_url": "https://api.github.com/users/ebenolson/repos",
      "events_url": "https://api.github.com/users/ebenolson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ebenolson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-10T15:41:21Z",
    "updated_at": "2015-04-10T15:41:21Z",
    "author_association": "NONE",
    "body": "I started seeing this on my git-tracked notebooks around the time of the switch to Jupyter.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/91919083",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-91919083",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 91919083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxOTE5MDgz",
    "user": {
      "login": "nealmcb",
      "id": 119472,
      "node_id": "MDQ6VXNlcjExOTQ3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/119472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nealmcb",
      "html_url": "https://github.com/nealmcb",
      "followers_url": "https://api.github.com/users/nealmcb/followers",
      "following_url": "https://api.github.com/users/nealmcb/following{/other_user}",
      "gists_url": "https://api.github.com/users/nealmcb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nealmcb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nealmcb/subscriptions",
      "organizations_url": "https://api.github.com/users/nealmcb/orgs",
      "repos_url": "https://api.github.com/users/nealmcb/repos",
      "events_url": "https://api.github.com/users/nealmcb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nealmcb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-11T19:56:20Z",
    "updated_at": "2015-04-11T19:56:20Z",
    "author_association": "NONE",
    "body": "I just ran across this error message for the first time, and I'm assuming it is because I did indeed have the notebook open in multiple tabs.  (Is there any way to help folks avoid that?)\n\nTo help people deal with it and distinguish dangerous situations from other causes, how about providing a bit more info?  E.g. show the timestamps and file sizes in question, or let the user see a diff of the notebooks, or perhaps provide a way to let them make the diff themselves, maybe by saving to a temp file and showing them the file names for copy/paste, or something else along those lines.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96054041",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-96054041",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 96054041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDU0MDQx",
    "user": {
      "login": "scholer",
      "id": 138657,
      "node_id": "MDQ6VXNlcjEzODY1Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scholer",
      "html_url": "https://github.com/scholer",
      "followers_url": "https://api.github.com/users/scholer/followers",
      "following_url": "https://api.github.com/users/scholer/following{/other_user}",
      "gists_url": "https://api.github.com/users/scholer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scholer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scholer/subscriptions",
      "organizations_url": "https://api.github.com/users/scholer/orgs",
      "repos_url": "https://api.github.com/users/scholer/repos",
      "events_url": "https://api.github.com/users/scholer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scholer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-24T20:24:37Z",
    "updated_at": "2015-04-24T20:24:37Z",
    "author_association": "NONE",
    "body": "I have the same issue on a dropbox-synced folder. For now - as a short term fix - I'd really like to get a command-line switch to disable atomic save. That way, I can use that to avoid errors when running a server for notebooks in my dropbox (about half of them) and I can still have atomic save for the other half of my notebooks that are not in my dropbox. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96060946",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-96060946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 96060946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDYwOTQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-24T20:47:57Z",
    "updated_at": "2015-04-24T20:47:57Z",
    "author_association": "MEMBER",
    "body": "In jupyter/jupyter_notebook#45, I make it use names that Dropbox should ignore for the temporary files, which should improve matters.\n\nIf you need to patch it out in the meantime, you can find the relevant line here:\n\nhttps://github.com/ipython/ipython/blob/rel-3.1.0/IPython/html/services/contents/fileio.py#L123\n\nBy replacing `self.atomic_writing()` with `open()`, you should get regular saving back.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/101455780",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-101455780",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 101455780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTQ1NTc4MA==",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T23:10:44Z",
    "updated_at": "2015-05-12T23:10:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "jupyter/notebook#67 may solve this issue, would be useful to backport to 3.x\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/101460491",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-101460491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 101460491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTQ2MDQ5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T23:38:35Z",
    "updated_at": "2015-05-12T23:38:35Z",
    "author_association": "MEMBER",
    "body": "I think that's too big a change to backport. We rushed into backporting the original atomic save mechanism, and I now think we shouldn't have. The good news is that we're aiming to have 4.0  quite soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/175131688",
    "html_url": "https://github.com/ipython/ipython/issues/8270#issuecomment-175131688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8270",
    "id": 175131688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTEzMTY4OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T17:31:14Z",
    "updated_at": "2016-01-26T17:31:14Z",
    "author_association": "MEMBER",
    "body": "Hopefully this is better now. If it still comes up, please open a new issue on jupyter/notebook.\n"
  }
]
