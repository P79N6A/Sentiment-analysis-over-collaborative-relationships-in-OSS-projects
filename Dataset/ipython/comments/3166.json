[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16312658",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16312658",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16312658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzEyNjU4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-12T19:26:57Z",
    "updated_at": "2013-04-12T19:26:57Z",
    "author_association": "MEMBER",
    "body": "Let's not put the entire IPEP in the issue though.  Can you remove it and just post a link to the IPEP wiki page?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16312735",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16312735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16312735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzEyNzM1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-12T19:28:29Z",
    "updated_at": "2013-04-12T19:28:29Z",
    "author_association": "MEMBER",
    "body": "Also can you post a link on the IPEP page that points to this issue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16325353",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16325353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16325353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzI1MzUz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T01:30:58Z",
    "updated_at": "2013-04-13T01:30:58Z",
    "author_association": "MEMBER",
    "body": "Some initial work on this has been done in PRs #3168 and #2982.  Those PRs have been closed until we finish the design, but can be used as reference for the design.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16327872",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16327872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16327872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzI3ODcy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T05:20:40Z",
    "updated_at": "2013-04-13T05:20:40Z",
    "author_association": "MEMBER",
    "body": "My main problem with the design proposed here is that it does not actually solve the issue of multiple notebook servers.  Since @ellisonbg clarified that the notebook server will remain confined to some 'server' directory, the only way a user can reasonably run their whole universe from a single notebook server (the goal) is to always run it in $HOME.\n\nI still think we want to preserve the notion of 'projects', where a project is a directory that can contain notebooks, data, etc. (hierarchically).  What I think this proposal encapsulates is still a _single_ project.  What I would like to add to this is the notion of project, and the notebook server's awareness of multiple projects, analogous to the GitHub github.com/organization landing page.  The remaining question there is how does one tell the notebook server about project directories? config files? a special `/create-project` handler that takes a path, and adds it to the project list?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16335305",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16335305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16335305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM1MzA1",
    "user": {
      "login": "paddymul",
      "id": 40453,
      "node_id": "MDQ6VXNlcjQwNDUz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/40453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paddymul",
      "html_url": "https://github.com/paddymul",
      "followers_url": "https://api.github.com/users/paddymul/followers",
      "following_url": "https://api.github.com/users/paddymul/following{/other_user}",
      "gists_url": "https://api.github.com/users/paddymul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paddymul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paddymul/subscriptions",
      "organizations_url": "https://api.github.com/users/paddymul/orgs",
      "repos_url": "https://api.github.com/users/paddymul/repos",
      "events_url": "https://api.github.com/users/paddymul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paddymul/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T15:44:27Z",
    "updated_at": "2013-04-13T15:44:27Z",
    "author_association": "NONE",
    "body": "Can we set it up so that kernels are always started in the same directory as the ipynb file?  Why does each  notebook instance need to share a global notebook directory?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16336552",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16336552",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16336552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzM2NTUy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-13T16:53:46Z",
    "updated_at": "2013-04-13T16:53:46Z",
    "author_association": "MEMBER",
    "body": "@paddymul there are two logical choices for the kernel cwd - one is the ipynb location, and the other is the project directory (so you could have a small amount of notebook organization, without having to keep specifying `cd ..`).  If, as proposed here so far, we are abandoning the notion of the project, the cwd will have to be the ipynb location.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16636762",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-16636762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 16636762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjM2NzYy",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-19T05:29:06Z",
    "updated_at": "2013-04-19T05:29:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added another section to the IPEP under \"Things to consider.\" I mention the notion of \"projects\" and even chart out a possible URL scheme for the future. After Min and I talked, I like the idea of making projects a second stage to this proposal. We'll work on implementing a hierarchical dashboard in a single project, then move to a multi-project design on a single server for the notebook. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20214988",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20214988",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20214988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE0OTg4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T21:18:04Z",
    "updated_at": "2013-06-28T21:18:04Z",
    "author_association": "MEMBER",
    "body": "I would leave the 'project' notion for now, and just have it able to open files that are in any location, like a text editor.\n\nWhat we do with the dashboard, I'm not sure. Arguably the logical continuation of our current dashboard is a web-based file manager, but we've said we don't want to go down that route.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20217316",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20217316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20217316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE3MzE2",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T22:09:19Z",
    "updated_at": "2013-06-28T22:09:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree. Projects are something to consider in the future. We should just keep this notion in our minds, however, and create a multi-directory set of web-services that behave in the backend like a 'single' project. That way, it will be easier to extend this to a multiple project notebook/dashboard when we want to introduce this notion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20217393",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20217393",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20217393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE3Mzkz",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T22:11:20Z",
    "updated_at": "2013-06-28T22:11:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, @ellisonbg and I have changed the web-services and URL mapping for this proposal quite a bit. I'll update this IPEP soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20217489",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20217489",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20217489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE3NDg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T22:13:53Z",
    "updated_at": "2013-06-28T22:13:53Z",
    "author_association": "MEMBER",
    "body": "Projects are something we already have - a directory of notebooks (and data), the notebook server currently supports just one project at a time. The only piece missing from a full single-project server is exposure of sub-directories.  The logical next step after that is a mechanism / UI to add new projects from the filesystem, and UI for listing projects.  That would cover opening any notebook anywhere on the filesystem, and we never need to introduce the notion of notebooks independent of projects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20217966",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20217966",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20217966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE3OTY2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T22:27:12Z",
    "updated_at": "2013-06-28T22:35:51Z",
    "author_association": "MEMBER",
    "body": "We have a fairly straightforward plan of expansion based on projects:\n1. complete the single-project tree view (notebooks in sub-dirs, list other files as well - current dashboard is analog of GitHub's `USER/REPO/tree/BRANCH/`)\n2. add multiple projects, top-level view becomes project list, rather than per-project notebook list, a la GitHub's `/user` page. Previous dashboard for each project moves down a level to `/project-name` URLs\n3. add multiple users, adding login. dashboard remains the same, but listings move to `/user/project-name` URLs.\n\nBy the time we get there, the view currently called 'dashboard' will be accessible as `localhost:8888/USER/PROJECT/tree/[SUB-PATH]` - a listing of notebooks (and files and subdirs) at the top-level of USER's PROJECT.\n\nIn this way, nothing in the previously finished stages really change, we just add a multiplexing layer and a level to the URL.  Adding support for notebooks independent of projects would complicate things unnecessarily, and should just wait for proper project support.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20218114",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20218114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20218114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE4MTE0",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T22:32:06Z",
    "updated_at": "2013-06-28T22:32:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Projects should also include files that aren't notebooks, though. Are we not looking to include those in the dashboard as well? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20218179",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20218179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20218179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE4MTc5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T22:33:35Z",
    "updated_at": "2013-06-28T22:33:35Z",
    "author_association": "MEMBER",
    "body": "Yes - one and only one tree view for everything, very much like GitHub's tree view (comment updated to reflect that).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20219449",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20219449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20219449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE5NDQ5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T23:11:43Z",
    "updated_at": "2013-06-28T23:11:43Z",
    "author_association": "MEMBER",
    "body": "A few of us here have been discussing integrating the notebook in the\ndesktop, i.e. so you can double click an ipynb file and have it open. For\nthat, how would we derive how many levels up the directory tree counts as\nthe 'project' directory? Just take the immediate containing folder of the\nnotebook?\n\nOn 28 June 2013 23:33, Min RK notifications@github.com wrote:\n\n> Yes - one and only one tree view for everything, very much like GitHub's\n> tree view (comment updated to reflect that).\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3166#issuecomment-20218179\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20729756",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-20729756",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 20729756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzI5NzU2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-10T09:03:34Z",
    "updated_at": "2013-07-10T09:03:34Z",
    "author_association": "MEMBER",
    "body": "Bumped to 2.0\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22450652",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-22450652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 22450652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUwNjUy",
    "user": {
      "login": "andreabedini",
      "id": 69135,
      "node_id": "MDQ6VXNlcjY5MTM1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreabedini",
      "html_url": "https://github.com/andreabedini",
      "followers_url": "https://api.github.com/users/andreabedini/followers",
      "following_url": "https://api.github.com/users/andreabedini/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreabedini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreabedini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreabedini/subscriptions",
      "organizations_url": "https://api.github.com/users/andreabedini/orgs",
      "repos_url": "https://api.github.com/users/andreabedini/repos",
      "events_url": "https://api.github.com/users/andreabedini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreabedini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T01:30:38Z",
    "updated_at": "2013-08-11T01:30:50Z",
    "author_association": "NONE",
    "body": "Hi there, my 3c\n- I don't know if/when/where this has been discussed before but I think the right direction to go is to have session management separated and independent from the notebook storage. If I want to save my notebook offsite (say Dropbox or S3) having notebook_name and notebook_path stored with the session makes little sense and should be replaced by an uri. That do you guys think?\n- To push this further, I'm not sure the concept of `sessions` and `contents` are relevant. Sessions: Can't the frontend remember the kernel_id and ask to connect to that directly? Contents: I don't see the use case. Local data could be passed directly to the kernel from the frontend (What I have in mind is drag&drop the csv file from the desktop to the notebook, and have it loaded into the kernel or into a secure temporary file-system) and other data can be fetched remotely. Same for projects.\n- I don't understand why the backend should care about anything else other than managing the kernels. The frontend can deal with everything else.\n\nI don't want to come across wrong, I have been using ipython for my research (monte-carlo simulations) for the past three years and I simply loved it. I only recently discovered notebooks and I'm amazed by its potentiality, which, I think, can only be achieved by keeping it lean and flexible.\n\nThanks for listening!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22451725",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-22451725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 22451725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxNzI1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T03:21:56Z",
    "updated_at": "2013-08-11T03:21:56Z",
    "author_association": "MEMBER",
    "body": "> I don't know if/when/where this has been discussed before but I think the right direction to go is to have session management separated and independent from the notebook storage.\n\nIt already is. The NotebookManager doesn't know anything about kernels, and the KernelManager doesn't know anything about notebooks.  The SessionManager maintains a mapping of notebooks to kernels.\n\n> If I want to save my notebook offsite (say Dropbox or S3) having notebook_name and notebook_path stored with the session makes little sense and should be replaced by an uri. That do you guys think?\n\nProperly abstracting the identifying information for a notebook is an important piece of this.  We already have non-filesystem stores of notebooks (Azure, [Openstack Swift](https://github.com/rgbkrk/bookstore), Rackspace cloud), so we need to make sure the APIs make sense in these contexts.\n\n> Sessions: Can't the frontend remember the kernel_id and ask to connect to that directly?\n\nNo - multiple frontends must be able to share kernels associated with a given notebook. This mapping should not live in the frontends themselves.\n\n> Contents: I don't see the use case.\n\nThe use case is getting contents of files, e.g. a full-page single CodeMirror editor for editing non-notebook files (c.f. GitHub edit view).  Your drag&drop example would be a POST request to the `contents` service (if I recall correctly), so it is another supporting example, not a counter one.\n\n> I don't understand why the backend should care about anything else other than managing the kernels. The frontend can deal with everything else.\n\nThe frontend can't interact with the filesystem, so it can't load notebooks, save notebooks, or do anything, really, without a notebook management service somewhere, even if it is S3 or Dropbox.\n\nNote that the way we have designed these things, the kernel service should know nothing about notebooks and the notebook service should know nothing about kernels.  And you can absolutely run each of these independently without the other.  In the default notebook web application, we happen to run both of these services in a single server process, and a Session service that maintains a relationship of notebooks and kernels, while kernels know nothing about notebooks and notebooks know nothing about kernels.  It should absolutely be possible to run all three services entirely separate from each other, so you could have a notebook editor webapp that doesn't support execution, or a pure kernel webservice that manages execution but no notebooks (examples of the latter [already exist](https://github.com/minrk/singlecell).\n\n> Thanks for listening!\n\nThanks for participating!  We have lots of ideas, and lots of people have opinions on what we should do.  Ultimately, we have to make decisions and figure out our own scope.  One of the most challenging aspects of developing IPython is confining the scope of the project, and building modular pieces is one of the best ways that we can say \"no, we aren't going to do that, but you can re-use these pieces of ours in your own app.\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22469944",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-22469944",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 22469944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY5OTQ0",
    "user": {
      "login": "andreabedini",
      "id": 69135,
      "node_id": "MDQ6VXNlcjY5MTM1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreabedini",
      "html_url": "https://github.com/andreabedini",
      "followers_url": "https://api.github.com/users/andreabedini/followers",
      "following_url": "https://api.github.com/users/andreabedini/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreabedini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreabedini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreabedini/subscriptions",
      "organizations_url": "https://api.github.com/users/andreabedini/orgs",
      "repos_url": "https://api.github.com/users/andreabedini/repos",
      "events_url": "https://api.github.com/users/andreabedini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreabedini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-12T01:53:50Z",
    "updated_at": "2013-08-12T01:53:50Z",
    "author_association": "NONE",
    "body": "> Thanks for participating! We have lots of ideas, and lots of people have opinions on what we should do. Ultimately, we have to make decisions and figure out our own scope. One of the most challenging aspects of developing IPython is confining the scope of the project, and building modular pieces is one of the best ways that we can say \"no, we aren't going to do that, but you can re-use these pieces of ours in your own app.\"\n\nThanks for this. I realise that IPython is way more complex and customizable than I thought! The singlecell implementation is very interesting, I will redirect my experiments there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25330133",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-25330133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 25330133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMwMTMz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T21:54:22Z",
    "updated_at": "2013-09-29T21:54:22Z",
    "author_association": "MEMBER",
    "body": "Work continuing on PR #4303.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33331408",
    "html_url": "https://github.com/ipython/ipython/issues/3166#issuecomment-33331408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3166",
    "id": 33331408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzMxNDA4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-26T21:41:15Z",
    "updated_at": "2014-01-26T21:41:15Z",
    "author_association": "MEMBER",
    "body": "This work is done and merged into master. UI will be a separate effort in 3.0.\n"
  }
]
