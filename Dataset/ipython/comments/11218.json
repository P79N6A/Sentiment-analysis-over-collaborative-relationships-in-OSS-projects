[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/402911359",
    "html_url": "https://github.com/ipython/ipython/issues/11218#issuecomment-402911359",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11218",
    "id": 402911359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjkxMTM1OQ==",
    "user": {
      "login": "biblicabeebli",
      "id": 1715982,
      "node_id": "MDQ6VXNlcjE3MTU5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1715982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/biblicabeebli",
      "html_url": "https://github.com/biblicabeebli",
      "followers_url": "https://api.github.com/users/biblicabeebli/followers",
      "following_url": "https://api.github.com/users/biblicabeebli/following{/other_user}",
      "gists_url": "https://api.github.com/users/biblicabeebli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/biblicabeebli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/biblicabeebli/subscriptions",
      "organizations_url": "https://api.github.com/users/biblicabeebli/orgs",
      "repos_url": "https://api.github.com/users/biblicabeebli/repos",
      "events_url": "https://api.github.com/users/biblicabeebli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/biblicabeebli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T03:00:06Z",
    "updated_at": "2018-07-06T03:04:34Z",
    "author_association": "NONE",
    "body": "Github did not like my multiline code snippets, sorry about the crappy readability, edited it to be slightly better..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/434406244",
    "html_url": "https://github.com/ipython/ipython/issues/11218#issuecomment-434406244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11218",
    "id": 434406244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQwNjI0NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-30T17:56:55Z",
    "updated_at": "2018-10-30T17:56:55Z",
    "author_association": "MEMBER",
    "body": "Ouch, I missed this one. \r\n\r\nI fixed the GitHub Formatting. \r\n\r\nWhat is your usecase for changing SyntaxError ? It seem likley that if you mess with Python internals you will have unintended behavior. I'm unsure if we can fix that. We try to catch SyntaxError (and subclasses), but if you replace that, then the exception goes through all the Exception Catching mechanisme. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/434419948",
    "html_url": "https://github.com/ipython/ipython/issues/11218#issuecomment-434419948",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11218",
    "id": 434419948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQxOTk0OA==",
    "user": {
      "login": "biblicabeebli",
      "id": 1715982,
      "node_id": "MDQ6VXNlcjE3MTU5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1715982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/biblicabeebli",
      "html_url": "https://github.com/biblicabeebli",
      "followers_url": "https://api.github.com/users/biblicabeebli/followers",
      "following_url": "https://api.github.com/users/biblicabeebli/following{/other_user}",
      "gists_url": "https://api.github.com/users/biblicabeebli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/biblicabeebli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/biblicabeebli/subscriptions",
      "organizations_url": "https://api.github.com/users/biblicabeebli/orgs",
      "repos_url": "https://api.github.com/users/biblicabeebli/repos",
      "events_url": "https://api.github.com/users/biblicabeebli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/biblicabeebli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-30T18:35:41Z",
    "updated_at": "2018-10-30T18:35:41Z",
    "author_association": "NONE",
    "body": "Mostly I was goofing around to see if I it was possible to intercept syntax errors and inject some additional runtime.  I wanted to print the init args of the syntax error to see what it gets handed, and see if there was any other state that I could investigate or tweak.\r\n\r\n(There maaayyy have been a bit of \"well now that python literally provides the exact syntax required inside the darn error message to convert a print statement to the equivalent print function call, I wonder if I can intercept that error message, extract that conversion, and execute it instead of raising a syntax error.\"  I am well aware that this is unlikely to actually work in practice as the syntax parsing has probably given up at that point... but in theory the print statement would print! :b )"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/434425035",
    "html_url": "https://github.com/ipython/ipython/issues/11218#issuecomment-434425035",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11218",
    "id": 434425035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQyNTAzNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-30T18:50:12Z",
    "updated_at": "2018-10-30T18:50:12Z",
    "author_association": "MEMBER",
    "body": "It's buggy but in IPython you cat use autocall: \r\n\r\n```\r\n $ ipython\r\nautocall 1\r\nPython 3.6.5 | packaged by conda-forge | (default, Apr  6 2018, 13:44:09)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.2.0.dev -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: autocall 1\r\nAutomatic calling is: Smart\r\n\r\nIn [2]: print 'hi'\r\n------> print('hi')\r\nhi\r\n```\r\n\r\nThat may be a better place to look at. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/434470777",
    "html_url": "https://github.com/ipython/ipython/issues/11218#issuecomment-434470777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11218",
    "id": 434470777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQ3MDc3Nw==",
    "user": {
      "login": "biblicabeebli",
      "id": 1715982,
      "node_id": "MDQ6VXNlcjE3MTU5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1715982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/biblicabeebli",
      "html_url": "https://github.com/biblicabeebli",
      "followers_url": "https://api.github.com/users/biblicabeebli/followers",
      "following_url": "https://api.github.com/users/biblicabeebli/following{/other_user}",
      "gists_url": "https://api.github.com/users/biblicabeebli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/biblicabeebli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/biblicabeebli/subscriptions",
      "organizations_url": "https://api.github.com/users/biblicabeebli/orgs",
      "repos_url": "https://api.github.com/users/biblicabeebli/repos",
      "events_url": "https://api.github.com/users/biblicabeebli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/biblicabeebli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-30T21:09:59Z",
    "updated_at": "2018-10-30T21:09:59Z",
    "author_association": "NONE",
    "body": "Hm. I had bumped into it years ago, but hadn't considered it. thanks."
  }
]
