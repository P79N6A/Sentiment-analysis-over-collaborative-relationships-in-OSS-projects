[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2135636",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-2135636",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 2135636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzU2MzY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-19T16:43:15Z",
    "updated_at": "2011-09-19T16:43:15Z",
    "author_association": "MEMBER",
    "body": "We have definitely discussed this in our many design conversations (Skype or IRC, so not published), and do plan to do it.  \n\nWe haven't been creating Issues for most such things, as Issues are too heavyweight for the very large number of improvements/little fixes we have planned.  The current notebook is _very far_ from where we see it going.  We do need a lighter weight palace to put these, which probably means the [wiki](http://wiki.ipython.org).\n\nThough Issues probably do make sense for the slightly larger-scale things like this one, such as integrating with git, better printing/publishing, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3360457",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3360457",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3360457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA0NTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T20:20:12Z",
    "updated_at": "2012-01-04T20:20:12Z",
    "author_association": "MEMBER",
    "body": "There are two different issues here: one is the idea of grouping, the other the idea of nesting.  Fernando and I have talked extensively about the fact that the way Mathematica handles grouping through nesting is quite annoying if you use it for anything non-trivial.  Our idea is to implement grouping, but not nesting.  How would this work?\n\nWe would keep the notebook as a linear sequence of cells.  We would introduce different levels of heading cells, but these would be flat/inline (like latex section/subsection/subsubsection) rather than nested like the Mathematica notebook.  We feel this style of document will be easier to import/export to different formats and is much simpler for users to manage and for us to develop a UI for.  To introduce grouping like functionality, we thought about using the locations of different heading levels to identify logical groups that could be collapsed, moved and treated as a unit.  We feel this would give the desired benefits of grouping without the complexity of nesting.  The first step along with path is to create the heading cells, them we can start to think about a UI for using them as logical groups.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3382897",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3382897",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3382897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODI4OTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T10:26:14Z",
    "updated_at": "2012-01-06T10:26:14Z",
    "author_association": "MEMBER",
    "body": "It seems to me that explicit nesting is _less_ complex than implicit nesting based on the level and location of header cells.  Isn't it easier to flatten a nested structure than to nest a flat structure?  I imagine we will need both notions internally, so should we not pick the one from which is is most sensible to make the other?\n\nI also think performing actions on a group is more straightforward with nested structures (e.g. increase/decrease level, relocation, collapse/expand) because you invariably have the whole group as a single element in the structure, no matter what level.  When the list is flat, you have to reconstruct the group every time you perform group actions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3388768",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3388768",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3388768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODg3Njg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T18:47:01Z",
    "updated_at": "2012-01-06T18:47:01Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jan 6, 2012 at 2:26 AM, Min RK\nreply@reply.github.com\nwrote:\n\n> It seems to me that explicit nesting is _less_ complex than implicit nesting based on the level and location of header cells.  Isn't it easier to flatten a nested structure than to nest a flat structure?  I imagine we will need both notions internally, so should we not pick the one from which is is most sensible to make the other?\n\nFrom the computer science/data structure perspective, I completely\nagree that the theoretically \"correct\" data structure for the notebook\nis a tree.  But there are important reasons why this is not the right\nmodel for the notebook.\n- When it comes to authoring documents of almost any kind (pen/paper,\n  Word, Google Docs, Latex) the model that users are used to is a linear\n  sequence of text and headings with any hierarchy being only implicitly\n  defined by how heading levels are used.  Presenting an actual\n  hierarchy to users requires them to track that information in their\n  head increasing the cognitive load.  They have to translate thoughts\n  like \"I want to move section 1.B after section 1.C and rename it\n  section 2\" to their nested equivalent.\n- When I compare my experience in authoring documents in Mathematica\n  (explicit nesting) with LyX (flat, implicit nesting) there is a huge\n  difference.  In LyX, I just set the heading level of a section and\n  move on.  Once those headings are set, I can just type content without\n  any thought as to what level of nesting it appears at. With\n  Mathematica, representing sections using explicit nesting is horribly\n  painful - so much so that I avoid using it if at all possible.  When\n  you edit nested documents there are some operations (insertion/paste\n  is the worst, but also with indent/dedent) that are ambiguous.\n  Mathematica tries to guess how you want to handle these operations,\n  but inevitably, you end up fighting with it.  This is not a problem\n  with Mathematica per-se, but with the underlying model which itself\n  has these ambiguities.\n- UI complexity.  If you have a deeply nested, real hierarchy, you\n  have to reflect that in the UI.  Mathematica uses a sequence of\n  vertical lines on the R side of the document that span the\n  section/cells they group together.  For one level of nesting this\n  isn't bad.  But for multiple levels of nesting, you end up with a rats\n  nest of vertical lines and it become extremely difficult to figure out\n  which one you want to click to manage things.\n- Implementation complexity.  The linear sequence of cells is simple\n  to implement in both the notebook format and the UI.  I am\n  particularly concerned about the UI becoming too complex that we can't\n  implement it in a clean robust manner in a reasonable amount of time.\n\n> I also think performing actions on a group is more straightforward with nested structures (e.g. increase/decrease level, relocation, collapse/expand) because you invariably have the whole group as a single element in the structure, no matter what level.  When the list is flat, you have to reconstruct the group every time you perform group actions.\n\nWhile agree at the theoretical level, I have never found this to be\nthe case in authoring documents.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/805#issuecomment-3382897\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3394751",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3394751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3394751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ3NTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-07T08:30:31Z",
    "updated_at": "2012-01-07T08:30:31Z",
    "author_association": "MEMBER",
    "body": "Sounds reasonable.  I suppose the bulk actions for which the nested structure makes things simpler don't actually come up that often.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3747786",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3747786",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3747786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc3ODY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T20:55:01Z",
    "updated_at": "2012-01-31T20:55:01Z",
    "author_association": "MEMBER",
    "body": "The master now has the notion of heading cells.  We should not be able to create a UI that will collapse and expand sections based on their headings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3753073",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3753073",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3753073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTMwNzM=",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T03:34:06Z",
    "updated_at": "2012-02-01T03:34:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been following the notebook development quite closely and I think @ellisonbg is doing a terrific job! I just have a couple of thoughts to add to this discussion:\n1. My original request was not directed exactly towards collapse/expand but more broadly to cell grouping. Collapse/expand is one of the things you can do with grouping and it's very important. I think it's more or less the equivalent of the \"include document\" functionality in Lyx: it lets you hide some parts of the document to focus your attention on others.\n2. However, there are two more things you can do with grouping (as far as I can tell):\n   - Delete/move a group. In Mathematica this is as easy as: select the group bracket (the blue vertical line, I mean), hit _Ctrl+X_ and then _Ctrl+V_ in another part of the notebook. I read in the last @fperez blog post that you plan to introduce an outline explorer similar to the Lyx one. Since this one also has the ability to move sections, I hope you could reproduce this functionality in IPython (although that seems a bit hard to do).\n   - Evaluate a particular group. Perhaps this is not well known but, again in Mathematica, if you select a group bracket and hit Shift+Enter, you can evaluate just that group. I find this quite neat and useful but I don't know if you could implement it with current flat model.\n\nAs a side note: @ellisonbg, I haven't experienced in Mathematica the indent/dedent problem you described: to indent you just have to introduce a new heading level with a lower precedence from the previous one and Mathematica will create the group automatically until the next higher heading it finds. To dedent you change the type of your group heading to a higher precedence one.\n\nTo conclude: I'm not saying that Mathematica's way of doing things is the only possible one but that IMHO the cases I described are worth considering when you're taking the next design decisions about grouping.\n\nJust my two cents,\nCarlos\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3753965",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3753965",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3753965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTM5NjU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-01T05:27:08Z",
    "updated_at": "2012-02-01T05:27:08Z",
    "author_association": "MEMBER",
    "body": "We do support cell groupings, but we are choosing to use Heading levels to define those cell groupings.  You are right that Mathematica allows other types of cell grouping, but we feel that this more constrained model is cleaner.\n\nThere is no reason at all why we can't add other group level actions such as move, delete, evaluate, etc.  We have to develop the UI for this, but I think the it is clear at the conceptual level.  The core underlying logic we will need is the following:  Given a Heading cell, we need to be able to walk the following cell and figure out which of them are \"under\" that heading.  I think the basic logic is that you keep going until you encounter another heading that has the same level or less as the starting one.  Once you have the list of contained cells, you can start to apply actions to the group of them.  The challenging part will be designing a clean and functional UI for all of this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3772232",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3772232",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3772232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzIyMzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-02T03:53:58Z",
    "updated_at": "2012-02-02T03:53:58Z",
    "author_association": "MEMBER",
    "body": "There's something I want to add here that I've been cooking in my head but so far have only mentioned to @stefanv at a whiteboard...  a different kind of 'cell groups'.\n\nThe one thing where even the notebook doesn't work very well if you want to mix text-based explanations with code, is the definition of complex objects.  The reason is a limitation imposed by Python itself: Python does not allow you to declare a class in multiple execution chunks (well, you can, but only using dynamic hacks that aren't very readable and which I will henceforth ignore).\n\nThis means that if we start using the notebook for declaring more complex classes, right now they have to live in a single, long cell.  This prevents you for example from inserting a text paragraph with a mathematical explanation before continuing with the next method.\n\nIt occurred to me that if we had a concept of a 'cell group' where all the cells in the group would be _unconditionally_ executed _always together, all of them_, then we'd solve this problem.  Consider creating a cell group as stated above, then when you hit Shift-Enter from any cell in the group, we actually send for execution the union of all the code cells in the group ignoring non-code ones.  Then, Python would always see them as a single cell, while the human could break up the visual layout between code and text as best fit the problem.\n\nThere are some UI challenges in how to best do this, but the more I think about it the more I like this idea.  It would make the notebook a very nice environment for literate programming in a way that no existing python tool allows.  Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3772453",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3772453",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3772453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzI0NTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-02T04:22:50Z",
    "updated_at": "2012-02-02T04:22:50Z",
    "author_association": "MEMBER",
    "body": "Right now, Cell means two things:\n\nA. atom of execution\nB. editable area\n\nAnd @fperez' proposal is to have some situation where one A-Cell refers to multiple B-Cells.  Another phrasing of the same thing is essentially to have rich text comments without having to split a code block into separate executions.\n\nWith the implicit cell groups given by headings, we can actually make this work quite easily with optional behavior in 'run group', where it is _not_ run as separate completely independent executions, but concatenated prior to execution.  This is not difficult, but would lack the enforcement of a special notion of multi-textarea cell, and running the cells individually would be permitted, if not necessarily valid.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3772480",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-3772480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 3772480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzI0ODA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-02T04:26:57Z",
    "updated_at": "2012-02-02T04:26:57Z",
    "author_association": "MEMBER",
    "body": "I will have to think more about this, but it definitely takes the\nnotebook in a literate programming direction.  I almost think the best\nway of handling this would be some sort of syntax within the cells,\nmaybe that taps into the multiline magic ideas:\n\n%mycell\nclass Foo(object):\n\n...a Markdown cell or so...\n\n%mycell\n    def **init**(self, a):\n        self.a = a\n\nIt would be trivial to piece together and execute the union of these.\nIt also keeps the actual UI complete clean and simple.  We could also\nuse this to introduce other grouping symantics.  The downside is that\nit clutters up the code cells themselves.\n\nI do like Min's idea of having a \"Run Union of Cell Group\" action that\nis based on the heading grouping.  In some ways that is the simplest\nway of going and would require no additional UI of cell clutter.\n\nI think this would make the notebook extremely literate - more so than\nany environment I have seen before.\n\nOn Wed, Feb 1, 2012 at 7:53 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> There's something I want to add here that I've been cooking in my head but so far have only mentioned to @stefanv at a whiteboard...  a different kind of 'cell groups'.\n> \n> The one thing where even the notebook doesn't work very well if you want to mix text-based explanations with code, is the definition of complex objects.  The reason is a limitation imposed by Python itself: Python does not allow you to declare a class in multiple execution chunks (well, you can, but only using dynamic hacks that aren't very readable and which I will henceforth ignore).\n> \n> This means that if we start using the notebook for declaring more complex classes, right now they have to live in a single, long cell.  This prevents you for example from inserting a text paragraph with a mathematical explanation before continuing with the next method.\n> \n> It occurred to me that if we had a concept of a 'cell group' where all the cells in the group would be _unconditionally_ executed _always together, all of them_, then we'd solve this problem.  Consider creating a cell group as stated above, then when you hit Shift-Enter from any cell in the group, we actually send for execution the union of all the code cells in the group ignoring non-code ones.  Then, Python would always see them as a single cell, while the human could break up the visual layout between code and text as best fit the problem.\n> \n> There are some UI challenges in how to best do this, but the more I think about it the more I like this idea.  It would make the notebook a very nice environment for literate programming in a way that no existing python tool allows.  Thoughts?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/805#issuecomment-3772232\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6103716",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-6103716",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 6103716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDM3MTY=",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-04T16:41:12Z",
    "updated_at": "2012-06-04T16:42:27Z",
    "author_association": "NONE",
    "body": "I like the fact that headings now seem to define a hierarchy in the next notebook release.  \n\nI think it would be great if there was an outline window in which this hierarchy was explicitly visible, and that could be used to navigate, reorder, and rename entire subtrees.\n\nNote that a tree structure or hierarchy need not be imposed; rather, it can be inferred on the fly from the content, like many LaTeX editors do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11932495",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-11932495",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 11932495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTMyNDk1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-06T19:04:52Z",
    "updated_at": "2013-01-06T19:04:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "from #2748: \nIt would be nice to include https://github.com/danielstocks/jQuery-Collapse/ and letting it collapse everything between (manually included) headings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11932657",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-11932657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 11932657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTMyNjU3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-06T19:14:10Z",
    "updated_at": "2013-01-06T19:14:10Z",
    "author_association": "MEMBER",
    "body": "You can include any library you wish in your custom.js via a simple `$.getScript(url)`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19898496",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-19898496",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 19898496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODk4NDk2",
    "user": {
      "login": "hadim",
      "id": 528003,
      "node_id": "MDQ6VXNlcjUyODAwMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/528003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hadim",
      "html_url": "https://github.com/hadim",
      "followers_url": "https://api.github.com/users/hadim/followers",
      "following_url": "https://api.github.com/users/hadim/following{/other_user}",
      "gists_url": "https://api.github.com/users/hadim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hadim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hadim/subscriptions",
      "organizations_url": "https://api.github.com/users/hadim/orgs",
      "repos_url": "https://api.github.com/users/hadim/repos",
      "events_url": "https://api.github.com/users/hadim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hadim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-24T10:07:21Z",
    "updated_at": "2013-06-24T10:08:12Z",
    "author_association": "NONE",
    "body": "Sorry to \"re open\" this issue. But do you have any news about it ? Are you planning to implement such feature or do we need to use custome script with the help of https://github.com/danielstocks/jQuery-Collapse/.\n\nI am convinced this would be a great UI notebook improvement.\n\nPS: I am not talking here about output cells hiding (which is already in ipython 0.13) but the ability to hide or show any part of notebook as well as creating group of cells to be able to hide and show severals cells at the same time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24882935",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-24882935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 24882935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODgyOTM1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-22T14:21:39Z",
    "updated_at": "2013-09-22T14:21:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems that this is implemented in https://github.com/ipython-contrib/IPython-notebook-extensions/pull/24 \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24894459",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-24894459",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 24894459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk0NDU5",
    "user": {
      "login": "chiwhalee",
      "id": 2557151,
      "node_id": "MDQ6VXNlcjI1NTcxNTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2557151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiwhalee",
      "html_url": "https://github.com/chiwhalee",
      "followers_url": "https://api.github.com/users/chiwhalee/followers",
      "following_url": "https://api.github.com/users/chiwhalee/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiwhalee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiwhalee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiwhalee/subscriptions",
      "organizations_url": "https://api.github.com/users/chiwhalee/orgs",
      "repos_url": "https://api.github.com/users/chiwhalee/repos",
      "events_url": "https://api.github.com/users/chiwhalee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiwhalee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T00:43:18Z",
    "updated_at": "2013-09-23T00:43:18Z",
    "author_association": "NONE",
    "body": "I think a bookmark navigation panel is  better than collapse/folding idea.  Folding is more suitable for pure source code, while navigation panel more suitable for a document or a notebook.  Just see what MS word, acrabat pdf do; they all use bookmarks. \nNavigation panel should also be much easier to implement.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40823575",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-40823575",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 40823575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIzNTc1",
    "user": {
      "login": "nthiery",
      "id": 545328,
      "node_id": "MDQ6VXNlcjU0NTMyOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/545328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nthiery",
      "html_url": "https://github.com/nthiery",
      "followers_url": "https://api.github.com/users/nthiery/followers",
      "following_url": "https://api.github.com/users/nthiery/following{/other_user}",
      "gists_url": "https://api.github.com/users/nthiery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nthiery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nthiery/subscriptions",
      "organizations_url": "https://api.github.com/users/nthiery/orgs",
      "repos_url": "https://api.github.com/users/nthiery/repos",
      "events_url": "https://api.github.com/users/nthiery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nthiery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-18T16:47:17Z",
    "updated_at": "2014-04-18T16:47:17Z",
    "author_association": "NONE",
    "body": "I have been using folding in Maple a loong time ago, and have seen colleagues use it very effectively, in particular to maintain a \"laboratory notebook\" of their experiments. Maybe I am biased by being a coder, but I find it more practical and flexible for my use cases than a navigation panel.\n\nIn any case, I believe folding is a key feature; I have seen many people ask for it; personnally that would make me switch to using notebooks rather than terminal sessions (inside emacs).\n\nKuddos in advance to whoever puts energy into it!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40856627",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-40856627",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 40856627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODU2NjI3",
    "user": {
      "login": "chiwhalee",
      "id": 2557151,
      "node_id": "MDQ6VXNlcjI1NTcxNTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2557151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chiwhalee",
      "html_url": "https://github.com/chiwhalee",
      "followers_url": "https://api.github.com/users/chiwhalee/followers",
      "following_url": "https://api.github.com/users/chiwhalee/following{/other_user}",
      "gists_url": "https://api.github.com/users/chiwhalee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chiwhalee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chiwhalee/subscriptions",
      "organizations_url": "https://api.github.com/users/chiwhalee/orgs",
      "repos_url": "https://api.github.com/users/chiwhalee/repos",
      "events_url": "https://api.github.com/users/chiwhalee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chiwhalee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-19T01:05:12Z",
    "updated_at": "2014-04-19T01:05:12Z",
    "author_association": "NONE",
    "body": "Both navigation panel and section folding  have been  implemented.  check out https://github.com/ipython-contrib/IPython-notebook-extensions.  It  is full featured and awsome, satisfy all my need.  Thank those  ipython-contrib guys! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41009789",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-41009789",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 41009789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDA5Nzg5",
    "user": {
      "login": "nthiery",
      "id": 545328,
      "node_id": "MDQ6VXNlcjU0NTMyOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/545328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nthiery",
      "html_url": "https://github.com/nthiery",
      "followers_url": "https://api.github.com/users/nthiery/followers",
      "following_url": "https://api.github.com/users/nthiery/following{/other_user}",
      "gists_url": "https://api.github.com/users/nthiery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nthiery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nthiery/subscriptions",
      "organizations_url": "https://api.github.com/users/nthiery/orgs",
      "repos_url": "https://api.github.com/users/nthiery/repos",
      "events_url": "https://api.github.com/users/nthiery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nthiery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T07:07:28Z",
    "updated_at": "2014-04-22T07:07:28Z",
    "author_association": "NONE",
    "body": "Cool, thanks for the pointer! It's indeed a good step forward. Kudos to the ipython-contrib guys!\n\nThings I believe would remain to do:\n- Advertise hierarchical_collapse.js in the ipython-contrib wiki\n- Activate this by default in IPython (extensions are great for power users, but folding is a nice basic feature for newcomers, and at this point installing an extension is not a \"one-click\" thing)\n- Add keybord shortcuts (Alt-F as in the codefolding extension?)\n- Use some standard visual scheme (e.g. a little button at the left of the section header, as in the codefolding extension). A button in the title bar is not so practical as it requires moving a lot the pointer back and forth.\n- A cycle through mechanism? (show subsection titles, show all the section, collapose all the section)\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51730059",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-51730059",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 51730059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzMwMDU5",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-10T22:52:02Z",
    "updated_at": "2014-08-10T22:55:13Z",
    "author_association": "NONE",
    "body": "Please set them as default, or at least advertise the ipython-contrib because I'm using ipython since v0.10 and I didn't know those features were available. I am excited to try the codefolding and the navigation panel extensions!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/230404089",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-230404089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 230404089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDQwNDA4OQ==",
    "user": {
      "login": "drorata",
      "id": 2905978,
      "node_id": "MDQ6VXNlcjI5MDU5Nzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2905978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drorata",
      "html_url": "https://github.com/drorata",
      "followers_url": "https://api.github.com/users/drorata/followers",
      "following_url": "https://api.github.com/users/drorata/following{/other_user}",
      "gists_url": "https://api.github.com/users/drorata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drorata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drorata/subscriptions",
      "organizations_url": "https://api.github.com/users/drorata/orgs",
      "repos_url": "https://api.github.com/users/drorata/repos",
      "events_url": "https://api.github.com/users/drorata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drorata/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-05T07:17:52Z",
    "updated_at": "2016-07-05T07:17:52Z",
    "author_association": "NONE",
    "body": "Is there any update on this front? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/246610497",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-246610497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 246610497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjYxMDQ5Nw==",
    "user": {
      "login": "mhooreman",
      "id": 7373718,
      "node_id": "MDQ6VXNlcjczNzM3MTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7373718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhooreman",
      "html_url": "https://github.com/mhooreman",
      "followers_url": "https://api.github.com/users/mhooreman/followers",
      "following_url": "https://api.github.com/users/mhooreman/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhooreman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhooreman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhooreman/subscriptions",
      "organizations_url": "https://api.github.com/users/mhooreman/orgs",
      "repos_url": "https://api.github.com/users/mhooreman/repos",
      "events_url": "https://api.github.com/users/mhooreman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhooreman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T08:23:20Z",
    "updated_at": "2016-09-13T08:23:20Z",
    "author_association": "NONE",
    "body": "Hello,\n\nI would find it very interesting. Is there any update on that?\n\nThanks a lot.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/266886321",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-266886321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 266886321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njg4NjMyMQ==",
    "user": {
      "login": "pjcrosbie",
      "id": 1176935,
      "node_id": "MDQ6VXNlcjExNzY5MzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1176935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pjcrosbie",
      "html_url": "https://github.com/pjcrosbie",
      "followers_url": "https://api.github.com/users/pjcrosbie/followers",
      "following_url": "https://api.github.com/users/pjcrosbie/following{/other_user}",
      "gists_url": "https://api.github.com/users/pjcrosbie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pjcrosbie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pjcrosbie/subscriptions",
      "organizations_url": "https://api.github.com/users/pjcrosbie/orgs",
      "repos_url": "https://api.github.com/users/pjcrosbie/repos",
      "events_url": "https://api.github.com/users/pjcrosbie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pjcrosbie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T22:45:12Z",
    "updated_at": "2016-12-13T22:45:12Z",
    "author_association": "NONE",
    "body": "in case you find this before you find the extension, this is now implemented at [nbextensions - collapsible_headings](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/collapsible_headings). seems to work great, many thanks to the contributors..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/271263792",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-271263792",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 271263792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTI2Mzc5Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T11:35:09Z",
    "updated_at": "2017-01-09T11:35:09Z",
    "author_association": "MEMBER",
    "body": "@meeseeksdev[bot] migrate to jupyter/notebook"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/271263829",
    "html_url": "https://github.com/ipython/ipython/issues/805#issuecomment-271263829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/805",
    "id": 271263829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTI2MzgyOQ==",
    "user": {
      "login": "meeseeksdev[bot]",
      "id": 24485218,
      "node_id": "MDM6Qm90MjQ0ODUyMTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meeseeksdev%5Bbot%5D",
      "html_url": "https://github.com/apps/meeseeksdev",
      "followers_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meeseeksdev%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-01-09T11:35:15Z",
    "updated_at": "2017-01-09T11:35:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done as jupyter/notebook#2030."
  }
]
