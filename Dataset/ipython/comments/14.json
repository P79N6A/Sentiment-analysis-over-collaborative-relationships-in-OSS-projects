[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236082",
    "html_url": "https://github.com/ipython/ipython/issues/14#issuecomment-236082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/14",
    "id": 236082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA4Mg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:27:39Z",
    "updated_at": "2010-05-10T09:27:39Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Fernando Perez, on 2010-01-30 05:43:41+00:00 ]\n\nOn Fri, Jan 29, 2010 at 8:40 PM, Brian Granger ellisonbg@gmail.com wrote:\n\n> Public bug reported:\n> \n> Currently in IPython.core we sometimes use IPython.utils.io.Term to\n> print and sometimes we just do print.  The advantage of using Term is\n> that it will properly handle colors on Windows.  But we don't use it\n> everywhere.  Really, we need to come up with a uniform way of handling\n> printing to stdout/stderr in IPython.  This is particularly relevant as\n> we refactor the core to be used without a terminal.\n\nAbsolutely: we should probably add a little tool that looks for naked\nprint statements and flags them.  It's OK to have one in the middle of\ndebuggin on your own, but we probably shouldn't leave any in committed\ncode.\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236083",
    "html_url": "https://github.com/ipython/ipython/issues/14#issuecomment-236083",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/14",
    "id": 236083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA4Mw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:27:40Z",
    "updated_at": "2010-05-10T09:27:40Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Brian Granger, on 2010-01-30 06:06:39+00:00 ]\n\nThinking about moving towards 2.6/3.0 support...\n\nIt would probably be a good idea to unify Term/print into a new API\nthat closely follows the\nprint function of python 2.6/3.0.  We could even write a simply\nversion of the print function\nthat works with 2.5 and would allow us to move to the new API now.  We\nwill need to do this\nfor the refactor of IPython.core for GUI versions of IPython.\n\nCheers,\n\nBrian\n\n> Absolutely: we should probably add a little tool that looks for naked\n> print statements and flags them.  It's OK to have one in the middle of\n> debuggin on your own, but we probably shouldn't leave any in committed\n> code.\n> \n> Thanks!\n> \n> ## \n> \n> Decide when to use Term and when to print\n> https://bugs.launchpad.net/bugs/514613\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> Currently in IPython.core we sometimes use IPython.utils.io.Term to print and sometimes we just do print.  The advantage of using Term is that it will properly handle colors on Windows.  But we don't use it everywhere.  Really, we need to come up with a uniform way of handling printing to stdout/stderr in IPython.  This is particularly relevant as we refactor the core to be used without a terminal.\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/900647",
    "html_url": "https://github.com/ipython/ipython/issues/14#issuecomment-900647",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/14",
    "id": 900647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDY0Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-21T22:30:48Z",
    "updated_at": "2011-03-21T22:30:48Z",
    "author_association": "MEMBER",
    "body": "For IPython 0.11, we're going to be supporting Python 2.6 and up, so we could use `from __future__ import print_function`, and then replace the print function with our own version.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1193730",
    "html_url": "https://github.com/ipython/ipython/issues/14#issuecomment-1193730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/14",
    "id": 1193730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTM3MzA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-17T23:00:49Z",
    "updated_at": "2011-05-17T23:00:49Z",
    "author_association": "MEMBER",
    "body": "@minrk, do you think we need this after your io related merge?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1194715",
    "html_url": "https://github.com/ipython/ipython/issues/14#issuecomment-1194715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/14",
    "id": 1194715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTQ3MTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-18T03:24:08Z",
    "updated_at": "2011-11-15T04:36:22Z",
    "author_association": "MEMBER",
    "body": "Do we ever print _without_ specifying io.stdout/err?  If so, then there's still a decision to made.\n\nThere's also the issue of what to do when cleaning up the InteractiveShell as a singleton.  But in general, there's no reason to not always use io.stdout/err everywhere that I can think of, except in the zmq kernel where stdout/err are redirected over the wire, and debug messages go directly to `sys.__stderr__`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46119487",
    "html_url": "https://github.com/ipython/ipython/issues/14#issuecomment-46119487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/14",
    "id": 46119487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE5NDg3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-15T15:56:09Z",
    "updated_at": "2014-06-15T15:56:09Z",
    "author_association": "MEMBER",
    "body": "Just want to add here that `IOTerm` is  unused in our codebase. And `Tee` is only used in tests.\n"
  }
]
