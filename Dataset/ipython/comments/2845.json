[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12704568",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-12704568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 12704568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA0NTY4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T15:14:20Z",
    "updated_at": "2013-01-25T15:14:20Z",
    "author_association": "MEMBER",
    "body": "If the database is locked, I think sqlite should simply wait until it is unlocked, and then let the program continue. So it should only throw an error if it reaches the timeout (default 5 seconds) while waiting for the lock. ([Reference](http://docs.python.org/2/library/sqlite3.html#sqlite3.connect)).\n\nOne way that the database can stay locked for a long time is if you call a history search method (search, get_tail, get_range), and don't exhaust the iterator. That holds a read cursor open on the database (SQLite allows simultaneous reads, but not writes).\n\nIf this is for a test framework, you might want to set `HistoryManager.hist_file = ':memory:'` in configuration. That gives you a separate database for each process. It might decrease the test time as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12706196",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-12706196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 12706196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA2MTk2",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T15:49:21Z",
    "updated_at": "2013-01-25T15:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah yes, we just implemented --HistoryManager.hist_file=:memory:. Great minds think alike ;-) \n\nBut it would still be nice to have a bomb-proof startup sequence even if a parallel process does something stupid with the history db.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12707869",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-12707869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 12707869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA3ODY5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T16:22:22Z",
    "updated_at": "2013-01-25T16:22:22Z",
    "author_association": "MEMBER",
    "body": "I agree. We can probably just print a warning and disable the SQLite history.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21844564",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21844564",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21844564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ0NTY0",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T07:19:53Z",
    "updated_at": "2013-07-31T07:19:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am hitting the same problem: IPython is no longer starting with a similar traceback. My home folder is not on an NFS drive (and besides, I believe that it would be a good thing is IPython worked reliably on NFS drives).\n\nThis bug is somewhat of a problem: it puts the user in a situation in which IPython stops working on a given box.\n\nA simple solution, that would not be fully solving the problem, but making the situation less bad, would be to give in the error message what database file is lock, and how to remove it. I don't care that much about loosing history, but I want my IPython back :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21847902",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21847902",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21847902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ3OTAy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:40:01Z",
    "updated_at": "2013-07-31T08:40:01Z",
    "author_association": "MEMBER",
    "body": "This bug is about starting many IPython instances, and getting a timeout as they all try to access the history. That should never affect normal users starting IPython manually. @GaelVaroquaux , it sounds more like you're talking about a corrupt history database. We should already be handling that case - see #2389 for instance. Is there some error from corruption that we're not catching yet?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21848054",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21848054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21848054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ4MDU0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:43:10Z",
    "updated_at": "2013-07-31T08:43:10Z",
    "author_association": "MEMBER",
    "body": "See also #2431, which is another failure on startup.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21848078",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21848078",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21848078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ4MDc4",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:43:45Z",
    "updated_at": "2013-07-31T08:43:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @GaelVaroquaux , it sounds more like you're talking about a corrupt history database\n\nIndeed. Sorry for pitching in on the wrong issue. The traceback looked\nvery similar.\n\n> Is there some error from corruption that we're not catching yet?\n\nI upgraded to master, and still had the error. I solved it by removing\nthe .ipython/profile_default/_.sqlite_ (which I initialy got wrong, and\ntried .ipython/db).\n\nDo you want me to open a new issue with the traceback (I still have it in\na terminal)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21848138",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21848138",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21848138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ4MTM4",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:45:01Z",
    "updated_at": "2013-07-31T08:45:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> See also #2431, which is another failure on startup.\n\nNo, that's not the one :). My traceback ends with:\n\n```\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/history.py\", line\n427, in new_session\n    NULL, \"\") \"\"\", (datetime.datetime.now(),))\nOperationalError: database is locked\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21848213",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21848213",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21848213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ4MjEz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:46:20Z",
    "updated_at": "2013-07-31T08:46:20Z",
    "author_association": "MEMBER",
    "body": "OK, feel free to start a new issue for it. If you've got a copy of the history.sqlite file that caused it, that would be useful too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21848408",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21848408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21848408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ4NDA4",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:49:54Z",
    "updated_at": "2013-07-31T08:49:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> OK, feel free to start a new issue for it.\n\nOoops. Looking at my traceback, I just realized that I was using the\nsystem IPython (version 0.13.2), not my git clone. My statement about the\nproblem persisting on latest IPython was wrong. Do you still want me to\nopen a new issue?\n\n> If you've got a copy of the history.sqlite file that caused it, that would be useful too.\n\nI am sorry, I removed it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21848823",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21848823",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21848823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQ4ODIz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T08:57:42Z",
    "updated_at": "2013-07-31T08:57:42Z",
    "author_association": "MEMBER",
    "body": "Probably not worth the bother unless we have a way to replicate it in master. There won't be any more 0.13.x releases. But paste a copy of the full traceback somewhere in case we come back to it later.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21850439",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-21850439",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 21850439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODUwNDM5",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T09:33:46Z",
    "updated_at": "2013-07-31T09:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is the traceback! Sorry for the noise.\n\n<pre>\n$ ipython\nTraceback (most recent call last):\n  File \"/usr/bin/ipython\", line 7, in <module>\n    launch_new_instance()\n  File\n\"/usr/lib/python2.7/dist-packages/IPython/frontend/terminal/ipapp.py\",\nline 389, in launch_new_instance\n    app.initialize()\n  File \"<string>\", line 2, in initialize\n  File \"/usr/lib/python2.7/dist-packages/IPython/config/application.py\",\nline 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File\n\"/usr/lib/python2.7/dist-packages/IPython/frontend/terminal/ipapp.py\",\nline 324, in initialize\n    self.init_shell()\n  File\n\"/usr/lib/python2.7/dist-packages/IPython/frontend/terminal/ipapp.py\",\nline 340, in init_shell\n    ipython_dir=self.ipython_dir)\n  File \"/usr/lib/python2.7/dist-packages/IPython/config/configurable.py\",\nline 318, in instance\n    inst = cls(*args, **kwargs)\n  File\n\"/usr/lib/python2.7/dist-packages/IPython/frontend/terminal/interactiveshell.py\",\nline 360, in __init__\n    user_module=user_module, custom_exceptions=custom_exceptions\n  File\n\"/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line\n436, in __init__\n    self.init_history()\n  File\n\"/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line\n1489, in init_history\n    self.history_manager = HistoryManager(shell=self, config=self.config)\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/history.py\", line\n409, in __init__\n    self.new_session()\n  File \"<string>\", line 2, in new_session\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/history.py\", line\n60, in needs_sqlite\n    return f(*a,**kw)\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/history.py\", line\n427, in new_session\n    NULL, \"\") \"\"\", (datetime.datetime.now(),))\nOperationalError: database is locked\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\nYou can print a more detailed traceback right now with \"%tb\", or use\n\"%debug\"\nto interactively debug it.\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n</pre>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/43409249",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-43409249",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 43409249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDA5MjQ5",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-17T15:03:58Z",
    "updated_at": "2014-05-17T15:08:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "We removed our own patch in Sage with the update to IPython 1.2.1 and there are still random test failures:\n\n```\nFile \"src/sage/misc/displayhook.py\", line 23, in sage.misc.displayhook\nFailed example:\n    shell = get_test_shell()\nExpected nothing\nGot:\n    ERROR! History file wasn't a valid SQLite database. It was moved to /home/buildslave-sage/slave/sage_git/dot_sage/ipython-1.2.1/profile_default/history-corrupt.sqlite and a new file created.\n    ERROR! History file wasn't a valid SQLite database. It was moved to /home/buildslave-sage/slave/sage_git/dot_sage/ipython-1.2.1/profile_default/history-corrupt.sqlite and a new file created.\n```\n\nBrowsing history.py a bit I don't see any reasonable locking (also in IPython 2.0). There is threading.lock, but that of course doesn't work across processes. Locking should either be on the DB level, Unix flock, or use atomic filesystem changes. Or accept that you don't have a reasonable locking and ignore the inevitable errors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/43409486",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-43409486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 43409486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDA5NDg2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-17T15:13:31Z",
    "updated_at": "2014-05-17T15:13:31Z",
    "author_association": "MEMBER",
    "body": "Sqlite implements locking itself, and I don't think we should try to add another locking later on top of that. The locking is known not to work reliably on NFS, though - is that relevant for sage?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/43411551",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-43411551",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 43411551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDExNTUx",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-17T16:12:29Z",
    "updated_at": "2014-05-17T16:12:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "The buildbot in question doesn't use NFS, it runs off a local harddisk (btrfs).\n\nI don't see any pragmas or locking_modes set, so I guess sqlite3 operates in the default mode. Afaik you have to handle locked databases yourself and the DatabaseError caught might very well have been an OperationalError (better logging of the error would be nice, too).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/43425602",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-43425602",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 43425602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDI1NjAy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-17T22:13:40Z",
    "updated_at": "2014-05-17T22:13:40Z",
    "author_association": "MEMBER",
    "body": "As I understand it, it should only be locked briefly, and other processes trying to write simultaneously should just wait until the lock is released to carry on. Maybe there's an issue on btrfs with the locking sqlite tries to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/43447363",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-43447363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 43447363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQ3MzYz",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-18T18:29:15Z",
    "updated_at": "2014-05-18T18:29:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMHO this is highly unlikely to be a btrfs bug, sqllite is a common test/benchmark. More likely we are hitting the 5 second timeout in sqllite's locking, running doctests in parallel at low priority. Still, randomly injecting error messages into the output just because the system load is high is bad in my book.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63291208",
    "html_url": "https://github.com/ipython/ipython/issues/2845#issuecomment-63291208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2845",
    "id": 63291208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjkxMjA4",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T11:22:26Z",
    "updated_at": "2014-11-17T11:22:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the record, this still happens with IPython 2.3 occasionally, for example on our MacOSX 10.10 buildbot:\n\n```\nTraceback (most recent call last):\n  File \"/Users/buildslave-sage/slave/sage_git/build/local/lib/python2.7/site-packages/sage/doctest/forker.py\", line 2151, in __call__\n    atexit._run_exitfuncs()\n  File \"/Users/buildslave-sage/slave/sage_git/build/local/lib/python/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"/Users/buildslave-sage/slave/sage_git/build/local/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 3190, in atexit_operations\n    self.history_manager.end_session()\n  File \"/Users/buildslave-sage/slave/sage_git/build/local/lib/python2.7/site-packages/IPython/core/history.py\", line 525, in end_session\n    len(self.input_hist_parsed)-1, self.session_number))\nOperationalError: disk I/O error\n```\n"
  }
]
