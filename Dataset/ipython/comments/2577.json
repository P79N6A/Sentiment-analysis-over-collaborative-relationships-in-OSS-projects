[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10363019",
    "html_url": "https://github.com/ipython/ipython/issues/2577#issuecomment-10363019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2577",
    "id": 10363019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzYzMDE5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T11:28:34Z",
    "updated_at": "2012-11-14T11:28:34Z",
    "author_association": "MEMBER",
    "body": "It seems Python 3.2 changed `hasattr()` to only catch `AttributeError`, rather than any exception. Here's the [mailing list thread](http://mail.python.org/pipermail/python-dev/2010-August/103178.html) and the [bug report](http://bugs.python.org/issue9666) for it.\n\nI think we should catch this in IPython, but I consider that 'protecting against misbehaving code'. To be a good Python citizen, I think `sh` should:\n- Catch any special attribute lookups (`__x__`), and, if there isn't a sensible return value, just raise `AttributeError` without trying to look them up as program names. This would deal with the first case reported.\n- If attribute access fails because a command can't be found, ideally the error raised should be a subclass of `AttributeError`.\n\nThat would help other tools that try to do introspection as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10436164",
    "html_url": "https://github.com/ipython/ipython/issues/2577#issuecomment-10436164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2577",
    "id": 10436164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDM2MTY0",
    "user": {
      "login": "amoffat",
      "id": 259113,
      "node_id": "MDQ6VXNlcjI1OTExMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amoffat",
      "html_url": "https://github.com/amoffat",
      "followers_url": "https://api.github.com/users/amoffat/followers",
      "following_url": "https://api.github.com/users/amoffat/following{/other_user}",
      "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions",
      "organizations_url": "https://api.github.com/users/amoffat/orgs",
      "repos_url": "https://api.github.com/users/amoffat/repos",
      "events_url": "https://api.github.com/users/amoffat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amoffat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-16T04:12:49Z",
    "updated_at": "2012-11-16T04:12:49Z",
    "author_association": "NONE",
    "body": "Thanks for the feedback @takluyver, I'll take care of it in sh\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10443554",
    "html_url": "https://github.com/ipython/ipython/issues/2577#issuecomment-10443554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2577",
    "id": 10443554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQzNTU0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-16T10:57:18Z",
    "updated_at": "2012-11-16T10:57:18Z",
    "author_association": "MEMBER",
    "body": "Reopening, because we'll fix this in IPython as well. Even if code is doing bizarre stuff, it shouldn't be able to crash IPython. And if there's one bit of code in the wild doing this, chances are there are others.\n"
  }
]
