[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/161939315",
    "html_url": "https://github.com/ipython/ipython/issues/9063#issuecomment-161939315",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9063",
    "id": 161939315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTkzOTMxNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T11:08:50Z",
    "updated_at": "2015-12-04T11:08:50Z",
    "author_association": "MEMBER",
    "body": "I guess it depends whether `%kill_embed` should prevent future embeds at that nesting level, or all future embeds.\n\nProbably the simplest thing would be to store the flag globally and prevent all future embeds in that process.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/161960118",
    "html_url": "https://github.com/ipython/ipython/issues/9063#issuecomment-161960118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9063",
    "id": 161960118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTk2MDExOA==",
    "user": {
      "login": "ewjoachim",
      "id": 1457576,
      "node_id": "MDQ6VXNlcjE0NTc1NzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1457576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ewjoachim",
      "html_url": "https://github.com/ewjoachim",
      "followers_url": "https://api.github.com/users/ewjoachim/followers",
      "following_url": "https://api.github.com/users/ewjoachim/following{/other_user}",
      "gists_url": "https://api.github.com/users/ewjoachim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ewjoachim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ewjoachim/subscriptions",
      "organizations_url": "https://api.github.com/users/ewjoachim/orgs",
      "repos_url": "https://api.github.com/users/ewjoachim/repos",
      "events_url": "https://api.github.com/users/ewjoachim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ewjoachim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T12:48:18Z",
    "updated_at": "2015-12-04T12:48:18Z",
    "author_association": "NONE",
    "body": "I guess so. In this case, we just need to :\n\n``` python\n# change \nself.shell.embedded_active = False\n# to\nself.shell.__cls__.embedded_active = False\n```\n\nand that might be enough for a fix. I'll see if I have time to submit a PR, but if you do, please feel free :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/173644726",
    "html_url": "https://github.com/ipython/ipython/issues/9063#issuecomment-173644726",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9063",
    "id": 173644726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzY0NDcyNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T17:27:51Z",
    "updated_at": "2016-01-21T17:27:51Z",
    "author_association": "MEMBER",
    "body": "Hum, marking that as 5.0. \n\nI think it is useful to use multiple `embed()`. One solution would be to add a `name=...` parameter to the constructor and `kill` based on the name. We could also \"generate\" a name based on `sys._getframe(1).f_code.co_filename+sys._getframe(1).f_lineno`, which would prevent reinvocation on the same line.\n"
  }
]
