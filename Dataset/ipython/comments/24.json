[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236090",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236090",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5MA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:04Z",
    "updated_at": "2010-05-10T09:29:04Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Vishal Vatsa, on 2010-01-18 09:36:37.944247+00:00 ]\n\nHi Tony, \n\nWhich version of ipython are you using?\n\nThanks,\n-vishal \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236091",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236091",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5MQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:05Z",
    "updated_at": "2010-05-10T09:29:05Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Vishal Vatsa, on 2010-01-18 15:30:05+00:00 ]\n\nIpython version info from user.\n\n---------- Forwarded message ----------\nFrom: Toby Burnett tburnett@uw.edu\nDate: 2010/1/18\nSubject: RE: [IPython-user] ipcluster does not start all the engines\nTo: \"vishal.vatsa@gmail.com\" vishal.vatsa@gmail.com\n\nHI Vishal,\n\nThanks for looking at it. I’m using 0.10 with python 2.5.4\n\nPython 2.5.4 (r254:67916, Dec 23 2008, 15:10:54) [MSC v.1310 32 bit (Intel)]\n\nIPython 0.10 -- An enhanced Interactive Python.\n\n--Toby\n\nP.S. I tried to join the bug list, separate from user list I guess. No response.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236092",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5Mg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:06Z",
    "updated_at": "2010-05-10T09:29:06Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Brian Granger, on 2010-01-18 16:41:12+00:00 ]\n\n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n\nGreat, glad it is useful to you.\n\n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to\n> be no log file for ipcluster (in spite of code that seems like it should\n> record which engines it tried to start), I can't send that. The\n> ipcontroller log file looks fine, except for recording fewer than the 64\n> engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then\n> executes 64 ssh commands to the respective machines to simply run\n> ipengine. I found the same problem, which went away when I introduced a\n> 1 second delay after each ssh call, which of course takes more than a\n> minute to run, and leaves all those ssh processes running.\n\nI think I know what the issue is here.  We have found that sometimes\nthe engines startup\nso fast that the controller is not yet up and running.  The engine\nthat try to connect\nbefore the controller is running fail.  Twisted is fully capable of\nhandling many simultaneous\nconnections, so I don't think it is that.\n\nThe good news is that all of this is fixed in trunk (ipcluster is much\nimproved).  The bad news\nis that I haven't yet gotten the ssh mode cluster working with the new\nipcluster in trunk.\nIt shouldn't be difficult, and Vishal knows this code as well.\n\nIn the mean time, I would suggest looking through ipcluster.py - you\nshould be able to put a delay\nbetween when the controller is started and when the engines are started.\n\nCheers,\n\nBrian\n\n> So I suspect that the same thing would work in the loop in this method\n> of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably\n> related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n> \n> *\\* Affects: ipython\n>     Importance: Undecided\n>         Status: New\n> \n> ## \n> \n> ipcluster does not start all the engines\n> https://bugs.launchpad.net/bugs/509015\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> As reported on the mailing list...\n> \n> ---------- Forwarded message ----------\n> From: Toby Burnett tburnett@EMAIL-REMOVED\n> Date: Sat, Jan 16, 2010 at 8:58 AM\n> Subject: [IPython-user] ipcluster does not start all the engines\n> To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> \n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> \n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> \n> So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236093",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236093",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5Mw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:06Z",
    "updated_at": "2010-05-10T09:29:06Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Vishal Vatsa, on 2010-01-18 21:21:06+00:00 ]\n\n2010/1/18 Brian Granger ellisonbg@gmail.com:\n\n> I think I know what the issue is here.  We have found that sometimes\n> the engines startup\n> so fast that the controller is not yet up and running.  The engine\n> that try to connect\n> before the controller is running fail.  Twisted is fully capable of\n> handling many simultaneous\n> connections, so I don't think it is that.\n\nYep this sound about correct.\nThough it should not happen as, there is a _delay_start method which\nwaits for the furl files to be created on disk, which should be the test\nthat ipcontroller is up and running.\n\nToby, which OS are you on? could the filesystem semantics be different?\n(In theory, it should work on windows/cygwin but I have never tested it)\n\nI have not been able to replicate this so far on NAS backed cluster.\nIf this continues to be an issue for you, I can try to give you a patch\nto insert a delay in the ssh engine start.\n\nRegards,\n-vishal\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236094",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236094",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5NA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:07Z",
    "updated_at": "2010-05-10T09:29:07Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 5 by: Brian Granger, on 2010-01-18 22:38:16+00:00 ]\n\n> Yep this sound about correct.\n> Though it should not happen as, there is a _delay_start method which\n> waits for the furl files to be created on disk, which should be the test\n> that ipcontroller is up and running.\n\nYes, even though that method exists, we have sometimes observed it to fail.\n\n> Toby, which OS are you on? could the filesystem semantics be different?\n> (In theory, it should work on windows/cygwin but I have never tested it)\n\nThe problems we had with this were on Windows.\n\n> I have not been able to replicate this so far on NAS backed cluster.\n> If this continues to be an issue for you, I can try to give you a patch\n> to insert a delay in the ssh engine start.\n> \n> Regards,\n> -vishal\n> \n> ## \n> \n> ipcluster does not start all the engines\n> https://bugs.launchpad.net/bugs/509015\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> As reported on the mailing list...\n> \n> ---------- Forwarded message ----------\n> From: Toby Burnett tburnett@EMAIL-REMOVED\n> Date: Sat, Jan 16, 2010 at 8:58 AM\n> Subject: [IPython-user] ipcluster does not start all the engines\n> To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> \n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> \n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> \n> So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236095",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236095",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5NQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:08Z",
    "updated_at": "2010-05-10T09:29:08Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 6 by: Toby Burnett, on 2010-01-18 23:13:58.126879+00:00 ]\n\nThis was on linux.\nSo I guess the only issue is a slight delay after starting the ipcontroller. I'll try that, thanks.\n\nLooking at the ipcluster code, (version 0.10) I see that the ssh mode is not supported for windows to linux, a case that we would like to use. Hopefully with the new version when you get it to work>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236096",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5Ng==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:09Z",
    "updated_at": "2010-05-10T09:29:09Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 7 by: Brian Granger, on 2010-01-18 23:25:06+00:00 ]\n\nIs there a ssh daemon that is usable on Windows.  I now about putty\nfor client ssh and we could use\nthat.  Not sure if users would have an ssh daemon on Windows though.\nFor Windows, the best\nsolution is to use the Windows HPC 2008 OS and its builtin job\nscheduler (IPython has very good support for this).\nOnly downside is the cost of the OS ;(\n\nBrian\n\nOn Mon, Jan 18, 2010 at 3:13 PM, Toby Burnett tburnett@uw.edu wrote:\n\n> This was on linux.\n> So I guess the only issue is a slight delay after starting the ipcontroller. I'll try that, thanks.\n> \n> Looking at the ipcluster code, (version 0.10) I see that the ssh mode is\n> not supported for windows to linux, a case that we would like to use.\n> Hopefully with the new version when you get it to work>\n> \n> ## \n> \n> ipcluster does not start all the engines\n> https://bugs.launchpad.net/bugs/509015\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> As reported on the mailing list...\n> \n> ---------- Forwarded message ----------\n> From: Toby Burnett tburnett@EMAIL-REMOVED\n> Date: Sat, Jan 16, 2010 at 8:58 AM\n> Subject: [IPython-user] ipcluster does not start all the engines\n> To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> \n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> \n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> \n> So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236097",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236097",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5Nw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:10Z",
    "updated_at": "2010-05-10T09:29:10Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 8 by: Vishal Vatsa, on 2010-01-18 23:39:09+00:00 ]\n\nI have used cygwin and openssh to get a shell on winXP even X11\nportfowarding in cygwin work :)\n\n2010/1/18 Brian Granger ellisonbg@gmail.com:\n\n> Is there a ssh daemon that is usable on Windows.  I now about putty\n> for client ssh and we could use\n> that.  Not sure if users would have an ssh daemon on Windows though.\n> For Windows, the best\n> solution is to use the Windows HPC 2008 OS and its builtin job\n> scheduler (IPython has very good support for this).\n> Only downside is the cost of the OS ;(\n> \n> Brian\n> \n> On Mon, Jan 18, 2010 at 3:13 PM, Toby Burnett tburnett@uw.edu wrote:\n> \n> > This was on linux.\n> > So I guess the only issue is a slight delay after starting the ipcontroller. I'll try that, thanks.\n> > \n> > Looking at the ipcluster code, (version 0.10) I see that the ssh mode is\n> > not supported for windows to linux, a case that we would like to use.\n> > Hopefully with the new version when you get it to work>\n> > \n> > ## \n> > \n> > ipcluster does not start all the engines\n> > https://bugs.launchpad.net/bugs/509015\n> > You received this bug notification because you are a member of IPython\n> > Developers, which is subscribed to IPython.\n> > \n> > Status in IPython - Enhanced Interactive Python: New\n> > \n> > Bug description:\n> > As reported on the mailing list...\n> > \n> > ---------- Forwarded message ----------\n> > From: Toby Burnett tburnett@EMAIL-REMOVED\n> > Date: Sat, Jan 16, 2010 at 8:58 AM\n> > Subject: [IPython-user] ipcluster does not start all the engines\n> > To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> > \n> > Hi,\n> > I did not find any previous notes on this.\n> > I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> > \n> > However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> > send_furl = False\n> > engines = { 'tev1' : 16,\n> >           'tev2' : 16,\n> >           'tev3' : 16,\n> >           'tev4' : 16\n> > }\n> > \n> > I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> > \n> > I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> > \n> > So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> > \n> >   def _ssh_engine(self, hostname, count):\n> >       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n> >           hostname, self.temp_dir,\n> >           os.environ['USER'], self.engine_command\n> >       )\n> >       cmds = exec_engine.split()\n> >       dlist = []\n> >       log.msg(\"about to start engines...\")\n> >       for i in range(count):\n> >           log.msg('Starting engines: %s' % exec_engine)\n> >           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n> >           dlist.append(d)\n> >       return gatherBoth(dlist, consumeErrors=True)\n> > \n> > but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> > \n> > Thanks for looking at this.\n> > \n> > --Toby Burnett\n> \n> ## \n> \n> Brian E. Granger, Ph.D.\n> Assistant Professor of Physics\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu\n> ellisonbg@gmail.com\n> \n> ## \n> \n> ipcluster does not start all the engines\n> https://bugs.launchpad.net/bugs/509015\n> You received this bug notification because you are a bug assignee.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> As reported on the mailing list...\n> \n> ---------- Forwarded message ----------\n> From: Toby Burnett tburnett@EMAIL-REMOVED\n> Date: Sat, Jan 16, 2010 at 8:58 AM\n> Subject: [IPython-user] ipcluster does not start all the engines\n> To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> \n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> \n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> \n> So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236098",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236098",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5OA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:11Z",
    "updated_at": "2010-05-10T09:29:11Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 9 by: Brian Granger, on 2010-01-19 00:00:11+00:00 ]\n\nWhat about non-cygwin Windows?\n\nOn Mon, Jan 18, 2010 at 3:39 PM, Vishal Vatsa vishal.vatsa@gmail.com wrote:\n\n> I have used cygwin and openssh to get a shell on winXP even X11\n> portfowarding in cygwin work :)\n> \n> 2010/1/18 Brian Granger ellisonbg@gmail.com:\n> \n> > Is there a ssh daemon that is usable on Windows.  I now about putty\n> > for client ssh and we could use\n> > that.  Not sure if users would have an ssh daemon on Windows though.\n> > For Windows, the best\n> > solution is to use the Windows HPC 2008 OS and its builtin job\n> > scheduler (IPython has very good support for this).\n> > Only downside is the cost of the OS ;(\n> > \n> > Brian\n> > \n> > On Mon, Jan 18, 2010 at 3:13 PM, Toby Burnett tburnett@uw.edu wrote:\n> > \n> > > This was on linux.\n> > > So I guess the only issue is a slight delay after starting the ipcontroller. I'll try that, thanks.\n> > > \n> > > Looking at the ipcluster code, (version 0.10) I see that the ssh mode is\n> > > not supported for windows to linux, a case that we would like to use.\n> > > Hopefully with the new version when you get it to work>\n> > > \n> > > ## \n> > > \n> > > ipcluster does not start all the engines\n> > > https://bugs.launchpad.net/bugs/509015\n> > > You received this bug notification because you are a member of IPython\n> > > Developers, which is subscribed to IPython.\n> > > \n> > > Status in IPython - Enhanced Interactive Python: New\n> > > \n> > > Bug description:\n> > > As reported on the mailing list...\n> > > \n> > > ---------- Forwarded message ----------\n> > > From: Toby Burnett tburnett@EMAIL-REMOVED\n> > > Date: Sat, Jan 16, 2010 at 8:58 AM\n> > > Subject: [IPython-user] ipcluster does not start all the engines\n> > > To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> > > \n> > > Hi,\n> > > I did not find any previous notes on this.\n> > > I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> > > \n> > > However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> > > send_furl = False\n> > > engines = { 'tev1' : 16,\n> > >           'tev2' : 16,\n> > >           'tev3' : 16,\n> > >           'tev4' : 16\n> > > }\n> > > \n> > > I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> > > \n> > > I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> > > \n> > > So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> > > \n> > >   def _ssh_engine(self, hostname, count):\n> > >       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n> > >           hostname, self.temp_dir,\n> > >           os.environ['USER'], self.engine_command\n> > >       )\n> > >       cmds = exec_engine.split()\n> > >       dlist = []\n> > >       log.msg(\"about to start engines...\")\n> > >       for i in range(count):\n> > >           log.msg('Starting engines: %s' % exec_engine)\n> > >           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n> > >           dlist.append(d)\n> > >       return gatherBoth(dlist, consumeErrors=True)\n> > > \n> > > but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> > > \n> > > Thanks for looking at this.\n> > > \n> > > --Toby Burnett\n> > \n> > ## \n> > \n> > Brian E. Granger, Ph.D.\n> > Assistant Professor of Physics\n> > Cal Poly State University, San Luis Obispo\n> > bgranger@calpoly.edu\n> > ellisonbg@gmail.com\n> > \n> > ## \n> > \n> > ipcluster does not start all the engines\n> > https://bugs.launchpad.net/bugs/509015\n> > You received this bug notification because you are a bug assignee.\n> > \n> > Status in IPython - Enhanced Interactive Python: New\n> > \n> > Bug description:\n> > As reported on the mailing list...\n> > \n> > ---------- Forwarded message ----------\n> > From: Toby Burnett tburnett@EMAIL-REMOVED\n> > Date: Sat, Jan 16, 2010 at 8:58 AM\n> > Subject: [IPython-user] ipcluster does not start all the engines\n> > To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> > \n> > Hi,\n> > I did not find any previous notes on this.\n> > I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> > \n> > However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> > send_furl = False\n> > engines = { 'tev1' : 16,\n> >           'tev2' : 16,\n> >           'tev3' : 16,\n> >           'tev4' : 16\n> > }\n> > \n> > I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> > \n> > I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> > \n> > So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> > \n> >   def _ssh_engine(self, hostname, count):\n> >       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n> >           hostname, self.temp_dir,\n> >           os.environ['USER'], self.engine_command\n> >       )\n> >       cmds = exec_engine.split()\n> >       dlist = []\n> >       log.msg(\"about to start engines...\")\n> >       for i in range(count):\n> >           log.msg('Starting engines: %s' % exec_engine)\n> >           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n> >           dlist.append(d)\n> >       return gatherBoth(dlist, consumeErrors=True)\n> > \n> > but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> > \n> > Thanks for looking at this.\n> > \n> > --Toby Burnett\n> \n> ## \n> \n> ipcluster does not start all the engines\n> https://bugs.launchpad.net/bugs/509015\n> You received this bug notification because you are a member of IPython\n> Developers, which is subscribed to IPython.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> As reported on the mailing list...\n> \n> ---------- Forwarded message ----------\n> From: Toby Burnett tburnett@EMAIL-REMOVED\n> Date: Sat, Jan 16, 2010 at 8:58 AM\n> Subject: [IPython-user] ipcluster does not start all the engines\n> To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> \n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> \n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> \n> So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n\n## \n\nBrian E. Granger, Ph.D.\nAssistant Professor of Physics\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu\nellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236099",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236099",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA5OQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:12Z",
    "updated_at": "2010-05-10T09:29:12Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 10 by: Toby Burnett, on 2010-01-19 15:56:55.304633+00:00 ]\n\nAbout ssh on windows, we use the cygwin version, but not in the cygwin bash shell.\nC:\\Users\\burnett>ssh -V\nOpenSSH_3.8.1p1, OpenSSL 0.9.7d 17 Mar 2004\n\nI tried a version of my script that starts an ipcontroller, then 16 ipengines on each of the 4 machines. It I delay after the ipcontroller, I have the same problem: 2-3 engines don't get started per machine. However, a 100 ms delay in that loop that creates the engines works just fine. \n\nThis seems inconsistent with an assertion about how the engines connect to a controller.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236100",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEwMA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:13Z",
    "updated_at": "2010-05-10T09:29:13Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 11 by: Vishal Vatsa, on 2010-01-19 16:30:54+00:00 ]\n\nWould you mind sending me a copy of your script.\nAlso, is the setup like:\nipcontroller is on windows and ipengines are on linux\n\n-v\n\n2010/1/19 Toby Burnett tburnett@uw.edu:\n\n> About ssh on windows, we use the cygwin version, but not in the cygwin bash shell.\n> C:\\Users\\burnett>ssh -V\n> OpenSSH_3.8.1p1, OpenSSL 0.9.7d 17 Mar 2004\n> \n> I tried a version of my script that starts an ipcontroller, then 16\n> ipengines on each of the 4 machines. It I delay after the ipcontroller,\n> I have the same problem: 2-3 engines don't get started per machine.\n> However, a 100 ms delay in that loop that creates the engines works just\n> fine.\n> \n> This seems inconsistent with an assertion about how the engines connect\n> to a controller.\n> \n> ## \n> \n> ipcluster does not start all the engines\n> https://bugs.launchpad.net/bugs/509015\n> You received this bug notification because you are a bug assignee.\n> \n> Status in IPython - Enhanced Interactive Python: New\n> \n> Bug description:\n> As reported on the mailing list...\n> \n> ---------- Forwarded message ----------\n> From: Toby Burnett tburnett@EMAIL-REMOVED\n> Date: Sat, Jan 16, 2010 at 8:58 AM\n> Subject: [IPython-user] ipcluster does not start all the engines\n> To: \"ipython-user@scipy.org\" ipython-user@scipy.org\n> \n> Hi,\n> I did not find any previous notes on this.\n> I have a cluster of 4 machines, each with 8 hyperthreaded cores, so I can run 16 engines per machine, or 64 in all. It is amazingly easy and useful, thanks so much for providing this.\n> \n> However, when using ipcluster on one of these machines in ssh mode, with this clusterfile,\n> send_furl = False\n> engines = { 'tev1' : 16,\n>           'tev2' : 16,\n>           'tev3' : 16,\n>           'tev4' : 16\n> }\n> \n> I typically get about 50 engines to actually start. Since there seems to be no log file for ipcluster (in spite of code that seems like it should record which engines it tried to start), I can't send that. The ipcontroller log file looks fine, except for recording fewer than the 64 engines that I expected.\n> \n> I have an alternative, very klugy method that starts a controller, then executes 64 ssh commands to the respective machines to simply run ipengine. I found the same problem, which went away when I introduced a 1 second delay after each ssh call, which of course takes more than a minute to run, and leaves all those ssh processes running.\n> \n> So I suspect that the same thing would work in the loop in this method of ipcluster.SSHEngineSet\n> \n>   def _ssh_engine(self, hostname, count):\n>       exec_engine = \"ssh %s sh %s/%s-sshx.sh %s\" % (\n>           hostname, self.temp_dir,\n>           os.environ['USER'], self.engine_command\n>       )\n>       cmds = exec_engine.split()\n>       dlist = []\n>       log.msg(\"about to start engines...\")\n>       for i in range(count):\n>           log.msg('Starting engines: %s' % exec_engine)\n>           d = getProcessOutput(cmds[0], cmds[1:], env=os.environ)\n>           dlist.append(d)\n>       return gatherBoth(dlist, consumeErrors=True)\n> \n> but that would be inelegant, given that the real problem is probably related to the controller not responding properly to multiple requests.\n> \n> Thanks for looking at this.\n> \n> --Toby Burnett\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236101",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-236101",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 236101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEwMQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:14Z",
    "updated_at": "2010-05-10T09:29:14Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 12 by: Toby Burnett, on 2010-01-19 18:40:49.459167+00:00 ]\n\nHere is the script, with an attempt to use ipcluster ssh commented out.  The 64-engine case is run on one of the same nodes.\ndef setup_mec(engines=None, machines='tev1 tev2 tev3 tev4'.split()):\n    \"\"\" On windows:start cluster and 4 engines on the local machine, in the current directory\n        On linux: (our tev cluster) start controller on local machine, 16 engines/machine in all\n    \"\"\"\n    if os.name=='nt':\n        engines = engines or 4\n        os.system(r'start /MIN /D %s cmd /K python C:\\python25\\scripts\\ipcluster local -xy -n %d'% (os.getcwd(),engines))\n    else:\n        # on a tev machine\n        engines = engines or 16 #default on a tev machine!\n\n```\n    #clusterfile_data='send_furl = False'\\\n    #    + '\\nengines={'\\\n    #    + '\\n'.join(['\\t\"%s\" : %d,'%(m,engines) for m in machines])\\\n    #    + '\\n}'\n    #print 'cluster info:\\n%s' % clusterfile_data\n    #ofile=open('clusterfile', 'w')\n    #ofile.writelines(clusterfile_data)\n    #ofile.close()\n    #os.system('ipcluster ssh -xy --clusterfile clusterfile &')\n\n    # old, klugy way\n    os.system('ipcontroller local -xy&')  \n    for m in machines:\n        for i in range(engines):\n            time.sleep(0.1) # make sure the controller is started ?\n            os.system('ssh %s ipengine&'% m) # this assumes that the environment is setup with non-interactive login\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/909345",
    "html_url": "https://github.com/ipython/ipython/issues/24#issuecomment-909345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/24",
    "id": 909345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTM0NQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T19:59:49Z",
    "updated_at": "2011-03-23T19:59:49Z",
    "author_association": "MEMBER",
    "body": "Clusterfile no longer in use, but the newparallel code does support SSH launching of engines.  See here for details: \n\nhttp://minrk.github.com/ipython-doc/newparallel/parallelz/parallel_process.html#using-ipclusterz-in-ssh-mode\n\nUnfortunately it's possible there was a problem in Twisted that was causing part of this.  In newparallel/master we've moved away from twisted completely, so I'm closing this bug.\n\nI'm sorry that the transition for users of the twisted code is going to be somewhat painful for some users, but it's simply not practical to maintain the twisted codebase for the long haul.\n"
  }
]
