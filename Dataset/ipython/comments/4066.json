[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22899098",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-22899098",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 22899098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk5MDk4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-19T19:49:55Z",
    "updated_at": "2013-08-19T19:51:00Z",
    "author_association": "MEMBER",
    "body": "this is correct and is a known issue: a notebook _MUST_ start its own kernel at the moment, though other clients can connect to that kernel. It's a limitation of the way we communicate with the webserver (via websockets), and some assumptions that the javasciript side, but this will be refactored and will probably be possible to connect a notebook to another kernel in the next version of IPython (2.0 around Decemeber of this year, and note the capitalization :wink: )\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22899356",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-22899356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 22899356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk5MzU2",
    "user": {
      "login": "bbirand",
      "id": 334435,
      "node_id": "MDQ6VXNlcjMzNDQzNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/334435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bbirand",
      "html_url": "https://github.com/bbirand",
      "followers_url": "https://api.github.com/users/bbirand/followers",
      "following_url": "https://api.github.com/users/bbirand/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbirand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbirand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbirand/subscriptions",
      "organizations_url": "https://api.github.com/users/bbirand/orgs",
      "repos_url": "https://api.github.com/users/bbirand/repos",
      "events_url": "https://api.github.com/users/bbirand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbirand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-19T19:53:51Z",
    "updated_at": "2013-08-19T19:53:51Z",
    "author_association": "NONE",
    "body": "Great, looking forward to IPython 2.0!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23456938",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-23456938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 23456938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDU2OTM4",
    "user": {
      "login": "bbirand",
      "id": 334435,
      "node_id": "MDQ6VXNlcjMzNDQzNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/334435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bbirand",
      "html_url": "https://github.com/bbirand",
      "followers_url": "https://api.github.com/users/bbirand/followers",
      "following_url": "https://api.github.com/users/bbirand/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbirand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbirand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbirand/subscriptions",
      "organizations_url": "https://api.github.com/users/bbirand/orgs",
      "repos_url": "https://api.github.com/users/bbirand/repos",
      "events_url": "https://api.github.com/users/bbirand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbirand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T23:32:00Z",
    "updated_at": "2013-08-28T23:32:00Z",
    "author_association": "NONE",
    "body": "Another very useful addition to spawning a notebook that connects to a running console would be to let the `notebook` command paste the content of the current history directly in the notebook. From the usability perspective, this will mesh well with the current role of the command. With perhaps a switch to paste it all in a single cell instead of breaking it down to many..\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23457140",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-23457140",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 23457140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDU3MTQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T23:36:25Z",
    "updated_at": "2013-08-28T23:36:25Z",
    "author_association": "MEMBER",
    "body": "I don't think we have any plans to support `--existing` in the standard notebook webapp.  That's not to say that you (or we) can't create another webapp reusing part of the notebook machinery (and all of the javascript) that _only_ connects to running kernels. This would be relatively simple. But it becomes extremely complicated when you include kernels that the notebook server does not own in the existing framework (kernels cannot be interrupted or restarted, etc.), so it will likely not happen in IPython itself for quite some time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32107204",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-32107204",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 32107204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA3MjA0",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T21:11:29Z",
    "updated_at": "2014-01-11T21:11:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still, it would be great to have, in the \"Kernel\" menu, an option \"Attach to current\", which would allow the user to pick any of the currently unused notebooks, or a new one, and then open it in a new page, connected to the current kernel.\n\nThe result would be analogous to what one already gets by clicking twice on the same notebook name in the Dashboard (and which I find great when I want to have two tabs side by side, one for playing with the variables, the other for the final code - everything apparently works flawlessly, including kernel restarts/interrupts/deaths), but without the mess of the two pages saving to the same file.\n\nAs long as the Dashboard does not assume/enforce somewhere a one-to-one mapping between notebooks and kernels, this should not be so complicated to implement, right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32109042",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-32109042",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 32109042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA5MDQy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T22:24:04Z",
    "updated_at": "2014-01-11T22:24:04Z",
    "author_association": "MEMBER",
    "body": "I remain -1 on this idea.\n\nThe difficulty is that the abstraction of a one-to-one mapping between\nkernels and notebook _is_ hardwired into the entire frontend/backend\narchitecture. Implementing this would be very non-trivial.\n\nAlso, separating these two things from each other introduces a new\nabstraction for users that has to be carefully managed. I think that most\nof our users don't have any idea of what a kernel is - or even that they\nexist.  All they know is that notebooks exist and you can type code into\nthem. I know this from working extensively with students. These users don't\neven have a clear sense of the process abstraction that would allow them to\ncleanly separate the different processes (browser, server, kernel) in their\nmind.\n\nOn Sat, Jan 11, 2014 at 1:11 PM, Pietro Battiston\nnotifications@github.comwrote:\n\n> Still, it would be great to have, in the \"Kernel\" menu, an option \"Attach\n> to current\", which would allow the user to pick any of the currently unused\n> notebooks, or a new one, and then open it in a new page, connected to the\n> current kernel.\n> \n> The result would be analogous to what one already gets by clicking twice\n> on the same notebook name in the Dashboard (and which I find great when I\n> want to have two tabs side by side, one for playing with the variables, the\n> other for the final code - everything apparently works flawlessly,\n> including kernel restarts/interrupts/deaths), but without the mess of the\n> two pages saving to the same file.\n> \n> As long as the Dashboard does not assume/enforce somewhere a one-to-one\n> mapping between notebooks and kernels, this should not be so complicated to\n> implement, right?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4066#issuecomment-32107204\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32110473",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-32110473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 32110473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTEwNDcz",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T23:27:53Z",
    "updated_at": "2014-01-11T23:27:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, I do understand it would probably not be a mainstream future, and that's why I would hide it in the \"Kernel\" menu, rather than expose it in the Dashboard.\n\nBut that said, I just had no idea about the implementation difficulties, so thanks for the clarification.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32110689",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-32110689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 32110689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTEwNjg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T23:39:39Z",
    "updated_at": "2014-01-11T23:39:39Z",
    "author_association": "MEMBER",
    "body": "Just to clarify that it not a limitation of any individual component of the notebook, it is an assumption made in the current design of the notebook application as a whole that this 1:1 relationship exists. You can easily make a different web application that changes the relationship of notebooks and kernels (e.g. all notebooks share one kernel, or every visit to a notebook page gets a new kernel, etc.).  What is difficult, and probably out of scope at this point, is supporting different kinds of relationships in the existing application.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32110722",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-32110722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 32110722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTEwNzIy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T23:41:38Z",
    "updated_at": "2014-01-11T23:41:38Z",
    "author_association": "MEMBER",
    "body": "Just FYI, the sage cell design (which uses the IPython kernel javascript and architecture) does instantiate a new kernel for every cell on a page.  It is definitely possible.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32110758",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-32110758",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 32110758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTEwNzU4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T23:42:59Z",
    "updated_at": "2014-01-11T23:42:59Z",
    "author_association": "MEMBER",
    "body": "and the [singlecell demo](https://github.com/minrk/singlecell) is an example of an application where everything shares a single kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47837627",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-47837627",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 47837627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM3NjI3",
    "user": {
      "login": "erxnmedia",
      "id": 8052009,
      "node_id": "MDQ6VXNlcjgwNTIwMDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8052009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erxnmedia",
      "html_url": "https://github.com/erxnmedia",
      "followers_url": "https://api.github.com/users/erxnmedia/followers",
      "following_url": "https://api.github.com/users/erxnmedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/erxnmedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erxnmedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erxnmedia/subscriptions",
      "organizations_url": "https://api.github.com/users/erxnmedia/orgs",
      "repos_url": "https://api.github.com/users/erxnmedia/repos",
      "events_url": "https://api.github.com/users/erxnmedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erxnmedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T21:14:35Z",
    "updated_at": "2014-07-02T21:14:35Z",
    "author_association": "NONE",
    "body": "It's no problem, here's a fix:  http://stackoverflow.com/questions/20091154/sharing-a-namespace-across-multiple-ipython-notebooks\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/182545350",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-182545350",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 182545350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjU0NTM1MA==",
    "user": {
      "login": "hekevintran",
      "id": 151680,
      "node_id": "MDQ6VXNlcjE1MTY4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/151680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hekevintran",
      "html_url": "https://github.com/hekevintran",
      "followers_url": "https://api.github.com/users/hekevintran/followers",
      "following_url": "https://api.github.com/users/hekevintran/following{/other_user}",
      "gists_url": "https://api.github.com/users/hekevintran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hekevintran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hekevintran/subscriptions",
      "organizations_url": "https://api.github.com/users/hekevintran/orgs",
      "repos_url": "https://api.github.com/users/hekevintran/repos",
      "events_url": "https://api.github.com/users/hekevintran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hekevintran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T19:42:45Z",
    "updated_at": "2016-02-10T19:42:45Z",
    "author_association": "NONE",
    "body": "This is highly confusing because of all the talk in the documentation about the difference between kernels and frontends.  Essentially the point is that the notebook frontend is _NOT_ decoupled from kernels.  This is not written in the documentation.  At the very least it should be noted somewhere that the notebook must run its own kernel.  The documentation explicitly says that the QT frontend can connect to existing kernels.  Why doesn't it say that the notebook frontend does not support this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/186072672",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-186072672",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 186072672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjA3MjY3Mg==",
    "user": {
      "login": "milindsmart",
      "id": 2503860,
      "node_id": "MDQ6VXNlcjI1MDM4NjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2503860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/milindsmart",
      "html_url": "https://github.com/milindsmart",
      "followers_url": "https://api.github.com/users/milindsmart/followers",
      "following_url": "https://api.github.com/users/milindsmart/following{/other_user}",
      "gists_url": "https://api.github.com/users/milindsmart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/milindsmart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/milindsmart/subscriptions",
      "organizations_url": "https://api.github.com/users/milindsmart/orgs",
      "repos_url": "https://api.github.com/users/milindsmart/repos",
      "events_url": "https://api.github.com/users/milindsmart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/milindsmart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T05:59:32Z",
    "updated_at": "2016-02-19T05:59:32Z",
    "author_association": "NONE",
    "body": "> The documentation explicitly says that the QT frontend can connect to existing kernels. Why doesn't it say that the notebook frontend does not support this?\n\nAgreed! For all that talk of decoupling....\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/395067179",
    "html_url": "https://github.com/ipython/ipython/issues/4066#issuecomment-395067179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4066",
    "id": 395067179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTA2NzE3OQ==",
    "user": {
      "login": "ihnorton",
      "id": 327706,
      "node_id": "MDQ6VXNlcjMyNzcwNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/327706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ihnorton",
      "html_url": "https://github.com/ihnorton",
      "followers_url": "https://api.github.com/users/ihnorton/followers",
      "following_url": "https://api.github.com/users/ihnorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ihnorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ihnorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ihnorton/subscriptions",
      "organizations_url": "https://api.github.com/users/ihnorton/orgs",
      "repos_url": "https://api.github.com/users/ihnorton/repos",
      "events_url": "https://api.github.com/users/ihnorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ihnorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T13:25:08Z",
    "updated_at": "2018-06-06T13:25:08Z",
    "author_association": "NONE",
    "body": "Bump? I've seen probably  a dozen or so versions of this how-to/feature request in various github repos and stackoverflow posts along the way to this issue... including:\r\n\r\nhttps://groups.google.com/forum/#!topic/jupyter/lVhTvgUbkXU (exactly my use-case)\r\nhttps://groups.google.com/d/msg/jupyter/qamkem52Xn0/YqrK7pgrAgAJ\r\nhttps://github.com/jupyter/help/issues/298\r\nhttps://github.com/jupyter/jupyter/issues/106\r\nhttps://github.com/jupyter/notebook/issues/727\r\nhttps://github.com/jupyterlab/jupyterlab/issues/2044\r\nhttps://stackoverflow.com/questions/40371187/execute-jupyter-notebook-and-keep-attached-to-existing-kernel/40611297\r\nhttps://stackoverflow.com/questions/31382405/ipython-notebook-how-to-connect-to-existing-kernel?rq=1"
  }
]
