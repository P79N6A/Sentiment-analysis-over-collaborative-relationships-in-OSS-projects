[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/436312518",
    "html_url": "https://github.com/ipython/ipython/issues/11481#issuecomment-436312518",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11481",
    "id": 436312518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjMxMjUxOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-06T16:18:24Z",
    "updated_at": "2018-11-06T16:18:24Z",
    "author_association": "MEMBER",
    "body": "Thanks for the question.  It's because \"the right thing\" is not always super obvious.\r\n\r\nI did write https://pypi.org/project/pip_magic/ which does it, but one of the problem is how to make it work in the notebook. \r\nIf pip ask for input then there is no way to \"press\" Y or N so the user process get stuck. It also let the user in a state where they believe that using pip from within IPython of Notebook \"works\". While it may work for installing missing modules it will not work for updating and a couple of other case. So we've settle on just giving an advice message. \r\n\r\nI'll be happy to experiment with other method but we're afraid it would be more disruptive than anything else "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/436984684",
    "html_url": "https://github.com/ipython/ipython/issues/11481#issuecomment-436984684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11481",
    "id": 436984684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjk4NDY4NA==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T12:56:01Z",
    "updated_at": "2018-11-08T12:56:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Instructing users how to install and/or upgrade is really painful in IPython (including notebook, lab, console, and otherwise). Of course, pip is painful in Python generally. But we could do a lot to make this much better. \"pip\" is a Python package, so we can import it, and decide what the right thing to do is. Or, even better, detect whether we are in anaconda and decide what the best course of action would be for a given package, complete with questions for the user.\r\n\r\nI think a general \"%install\" magic would help so much in this space. But first, we need to understand the issue with pip. And, if it can't handle 100% of cases, that's fine too. We just need to give a message, and maybe point to a URL with more details.\r\n\r\nHere is the start of an IPython Package Manifesto:\r\n\r\n1. We need to recognize that packages are hard to install/upgrade in Jupyter because it is not clear what version of Python is running nor how to get to that environment from the shell. We need to recognize that this is a big, important problem.\r\n2. We can get all of the information we need from the running environment to install/upgrade in anaconda and/or pip\r\n3. We can make suggestions for the anaconda and pip Python libraries to make it better integrated with Jupyter/IPython. We don't have to solve this completely from one end.\r\n4. We can put a layer over these APIs to make it much easier to manage the majority of packages. It could even: \"I'm going to update the following package. Select Yes to continue.\" Can also handle `--upgrade-strategy` appropriately.\r\n5. Should be a standard part of IPython/Jupyter (eventually). Doesn't have to start out that way, but should have the support of the entire organization.\r\n6. Could handle all of the different packages/activations in the Jupyter/IPython universe, and even know what needs to be done next (restart Jupyter, restart kernel, etc).\r\n7. We can solve this problem."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/437056637",
    "html_url": "https://github.com/ipython/ipython/issues/11481#issuecomment-437056637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11481",
    "id": 437056637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzA1NjYzNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T16:20:24Z",
    "updated_at": "2018-11-08T16:20:24Z",
    "author_association": "MEMBER",
    "body": "While I agree with most of that, and have tried to see what can be done upstream I've been blocked at several steps. : \r\n\r\n> \"pip\" is a Python package, so we can import it. \r\n\r\nNo, not reliably. It is meant to be used as a CLI and rely on global internal state. So you __need__ to shell out to it. Upstream is not willing to make an API, and more inclined to make your life harder if you try as an API. \r\n\r\nSame for conda. \r\n\r\nWithout this first steps it becomes really hard. We can try sure. but it requires a lot of dev work. \r\n\r\nI think it is a deeper problem, that most core-python people are not data scientist and we regularly hit snag where Python is not developed to be that friendly to REPL. Heck we even have to do contortions to allow users to write multi-line code blocks which is not supported by the CPython API. \r\n\r\nYou are a core dev, and I'm happy for you to push that. If you make PRs and want friendlier pip integration I'll push in your direction. But the above ar mostly me trying to transfer the experience of last time I tried. \r\n\r\n... Maybe the conda folks could be re-convinced.  I would also love o have a gui package manager that hook into conda as a notebook/lab plugin. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/447182752",
    "html_url": "https://github.com/ipython/ipython/issues/11481#issuecomment-447182752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11481",
    "id": 447182752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzE4Mjc1Mg==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T01:35:46Z",
    "updated_at": "2018-12-14T01:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you Santa, I mean @jakevdp ! I think we can close this."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/447211294",
    "html_url": "https://github.com/ipython/ipython/issues/11481#issuecomment-447211294",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11481",
    "id": 447211294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzIxMTI5NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-14T04:41:45Z",
    "updated_at": "2018-12-14T04:41:45Z",
    "author_association": "MEMBER",
    "body": "I'll try to release on the 25th :-)\n\nOn Thu, Dec 13, 2018, 17:36 Doug Blank <notifications@github.com wrote:\n\n> Closed #11481 <https://github.com/ipython/ipython/issues/11481>.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/issues/11481#event-2025774374>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez70pXaDab2u9ePJDxxc5nLCpjxrHks5u4wCKgaJpZM4YPVqe>\n> .\n>\n"
  }
]
