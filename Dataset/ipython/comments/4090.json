[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23058171",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23058171",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23058171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDU4MTcx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T23:22:01Z",
    "updated_at": "2013-08-21T23:22:01Z",
    "author_association": "MEMBER",
    "body": ":+1:\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23126239",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23126239",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23126239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTI2MjM5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-22T21:11:28Z",
    "updated_at": "2013-08-22T21:11:28Z",
    "author_association": "MEMBER",
    "body": "OK @minrk review comments are addressed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23207240",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23207240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23207240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjA3MjQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-24T11:30:55Z",
    "updated_at": "2013-08-24T11:30:55Z",
    "author_association": "MEMBER",
    "body": "What are the chances, do you suppose, of supporting the citation syntax in other output formats (rst, etc.)?  If we plan to do that, then `parse_citation` is probably the wrong name, since it is specifically converting the citation from HTML to latex (`citation2latex`, maybe?).  Unless you plan to have just one filter that always parses citations correctly, switching based on the output format.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23292792",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23292792",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23292792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjkyNzky",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-26T20:39:12Z",
    "updated_at": "2013-08-26T20:39:12Z",
    "author_association": "MEMBER",
    "body": "Yes, I think that rename makes sense.  There would need to be different\nhandling for other output formats.\n\nOn Sat, Aug 24, 2013 at 4:30 AM, Min RK notifications@github.com wrote:\n\n> What are the chances, do you suppose, of supporting the citation syntax in\n> other output formats (rst, etc.)? If we plan to do that, then\n> parse_citation is probably the wrong name, since it is specifically\n> converting the citation from HTML to latex (citation2latex, maybe?).\n> Unless you plan to have just one filter that always parses citations\n> correctly, switching based on the output format.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4090#issuecomment-23207240\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23313080",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23313080",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23313080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzEzMDgw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T04:55:42Z",
    "updated_at": "2013-08-27T04:55:42Z",
    "author_association": "MEMBER",
    "body": "OK I think all review comments have been addressed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23391678",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23391678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23391678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzkxNjc4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T04:59:11Z",
    "updated_at": "2013-08-28T04:59:11Z",
    "author_association": "MEMBER",
    "body": "Let's not merge this until we have a chance to talk at this weeks dev meeting.  I have been looking at enabling MathJAx's equation numbering.  In this mode, MathJax starts to parse more LaTeX syntax such as `\\ref{eq:foo}`. I am wondering if we should just embrace  using the `\\cite{granger}` syntax in Markdown and write a MathJax extension to render that pleasantly in HTML.  In don't think this is as flexible as the scheme in this PR in terms of what the HTML shows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23394535",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23394535",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23394535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzk0NTM1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T06:45:41Z",
    "updated_at": "2013-08-28T06:45:41Z",
    "author_association": "MEMBER",
    "body": "> I am wondering if we should just embrace using the \\cite{granger} syntax in Markdown and write a MathJax extension to render that pleasantly in HTML\n\nIf it's a macro-style that expanded by codemirror  why not, but adding extra syntax to markdown... you know the drill.\nMaybe we could  have a look at what JATS format (cf #4119) need for citation/xlink ? It might give us more insight of what will be needed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23428773",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23428773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23428773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDI4Nzcz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-28T16:33:43Z",
    "updated_at": "2013-08-28T16:33:43Z",
    "author_association": "MEMBER",
    "body": "Yes, it is more syntax we would be adding to Markdown, but if we want\nequation numbering in the live notebook through MathJax, we have to embrace\nthis \"latex in markdown\" model anyways.  This syntax would be parsed into\nHTML when MathJax renders the Markdown cell- so codemirror wouldn't be\ninvolved.\n\nOn Tue, Aug 27, 2013 at 11:45 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> I am wondering if we should just embrace using the \\cite{granger} syntax\n> in Markdown and write a MathJax extension to render that pleasantly in HTML\n> \n> If it's a macro-style that expanded by codemirror why not, but adding\n> extra syntax to markdown... you know the drill.\n> Maybe we could have a look at what JATS format (cf #4119https://github.com/ipython/ipython/issues/4119)\n> need for citation/xlink ? It might give us more insight of what will be\n> needed.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4090#issuecomment-23394535\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23588663",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-23588663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 23588663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTg4NjYz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-30T20:55:15Z",
    "updated_at": "2013-08-30T20:55:15Z",
    "author_association": "MEMBER",
    "body": "At the dev meeting this week we decided to go forward with this approach, merging.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25087748",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-25087748",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 25087748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg3NzQ4",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T13:58:07Z",
    "updated_at": "2013-09-25T13:58:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "With respect to the issues in #4251 I wonder why the citation parsing uses lxml instead of simple regex?\nPlease correct me but this could be achieved using something like:\n\n``` python\nimport re\ns2 = u\"Before <STRONG data-cite='granger'>(Granger, 2013)</strong> between <cite data-cite='foo'>(foo, 2012)</cite> behind\"\nre.sub(\"<(?P<tag>[a-z]*) data-cite='(?P<label>[^']*).*?/(?P=tag)>\",'\\\\cite{\\g<label>}',s2, flags=re.S|re.I)\n```\n\nthis gives\n\n``` python\nu'Before \\\\cite{granger} between \\\\cite{foo} behind'\n```\n\nit should be quite robust (the `flags` option requires python >=2.7)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25098704",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-25098704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 25098704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk4NzA0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T15:43:53Z",
    "updated_at": "2013-09-25T15:43:53Z",
    "author_association": "MEMBER",
    "body": "Because 'data-' is a general microdata format for html, and we'll probably use it for other things than citation. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25104735",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-25104735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 25104735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTA0NzM1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:54:00Z",
    "updated_at": "2013-09-25T16:54:00Z",
    "author_association": "MEMBER",
    "body": "Parsing html with regex is almost always a bad idea.  The problems arise\nwhen you pass nested HTML tags to the parser.  The tags having the\n`data-cite` attribute don't have to be simple tags, they could be an entire\nnested HTML structure, like a table.\n\nOn Wed, Sep 25, 2013 at 6:58 AM, Jakob Gager notifications@github.comwrote:\n\n> With respect to the issues in #4251https://github.com/ipython/ipython/issues/4251I wonder why the citation parsing uses lxml instead of simple regex?\n> Please correct me but this could be achieved using something like:\n> \n> import res2 = u\"Before <STRONG data-cite='granger'>(Granger, 2013)</strong> between <cite data-cite='foo'>(foo, 2012)</cite> behind\"re.sub(\"<(?P<tag>[a-z]_) data-cite='(?P<label>[^']_).*?/(?P=tag)>\",'\\cite{\\g<label>}',s2, flags=re.S|re.I)\n> \n> this gives\n> \n> u'Before \\cite{granger} between \\cite{foo} behind'\n> \n> it should be quite robust (the flags option requires python >=2.7)\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4090#issuecomment-25087748\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25125082",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-25125082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 25125082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI1MDgy",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T21:10:30Z",
    "updated_at": "2013-09-25T21:10:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I totally agree that parsing a complete html structure with regex is an odd idea, however in the present case the data-cite microdata looks like just some sort of tag for a particular html container within a markdown text. This container is subsequently completely replaced by `\\\\cite{...}`. Hence I don't see any problems using a simple regex here.\nMoreover, this would fix the bug with `<` in a markdown text (once it appears the rest of the markdown cell is stripped, see #4251 bottom)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25135797",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-25135797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 25135797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTM1Nzk3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T00:27:34Z",
    "updated_at": "2013-09-26T00:27:34Z",
    "author_association": "MEMBER",
    "body": "The `data-cite` attribute was designed to work with any HTML tag, that way\nusers can style the citation in HTML in whatever way they want.\n\nOn Wed, Sep 25, 2013 at 2:10 PM, Jakob Gager notifications@github.comwrote:\n\n> I totally agree that parsing a complete html structure with regex is an\n> odd idea, however in the present case the data-cite microdata looks like\n> just some sort of tag for a particular html container within a markdown\n> text. This container is subsequently completely replaced by \\cite{...}.\n> Hence I don't see any problems using a simple regex here.\n> Moreover, this would fix the bug with < in a markdown text (once it\n> appears the rest of the markdown cell is stripped, see #4251https://github.com/ipython/ipython/issues/4251bottom)\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4090#issuecomment-25125082\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25153198",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-25153198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 25153198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTUzMTk4",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T09:08:02Z",
    "updated_at": "2013-09-26T09:08:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry I'm still not convinced lxml is necessary :confused: \nI've submitted a Draft/Demo PR with my approach to better discuss this. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29178029",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-29178029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 29178029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTc4MDI5",
    "user": {
      "login": "JohnGriffiths",
      "id": 397826,
      "node_id": "MDQ6VXNlcjM5NzgyNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/397826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JohnGriffiths",
      "html_url": "https://github.com/JohnGriffiths",
      "followers_url": "https://api.github.com/users/JohnGriffiths/followers",
      "following_url": "https://api.github.com/users/JohnGriffiths/following{/other_user}",
      "gists_url": "https://api.github.com/users/JohnGriffiths/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JohnGriffiths/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JohnGriffiths/subscriptions",
      "organizations_url": "https://api.github.com/users/JohnGriffiths/orgs",
      "repos_url": "https://api.github.com/users/JohnGriffiths/repos",
      "events_url": "https://api.github.com/users/JohnGriffiths/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JohnGriffiths/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T05:05:08Z",
    "updated_at": "2013-11-25T05:05:08Z",
    "author_association": "NONE",
    "body": "Am now using this very nice feature to I think very nice effect. Posting a Q here because I wasn't sure that e.g. stackoverflow would have much wisdom  on this. \n\nQ = how to change the colour of citations in the final pdf doc? At the moment mine are green, and as I've shifted to APA ('apalike') format rather than numbered references, there's lots of green words all over the text which are rather unsightly. \n\nWhere should I look to change such a setting? \n\nThanks,\n\njohn\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29182328",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-29182328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 29182328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTgyMzI4",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T07:36:47Z",
    "updated_at": "2013-11-25T07:36:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "The coloring of the citation links in the final pdf is done by the `hyperref` package (see .tex file). The default options will color it green, which is what you see. To disable coloring, I guess you could add the option `colorlinks=false`. See e.g. http://stackoverflow.com/q/2770347/2870069 and ftp://tug.ctan.org/pub/tex-archive/macros/latex/contrib/hyperref/doc/options.pdf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133643854",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-133643854",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 133643854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzY0Mzg1NA==",
    "user": {
      "login": "bramtayl",
      "id": 9466324,
      "node_id": "MDQ6VXNlcjk0NjYzMjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9466324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bramtayl",
      "html_url": "https://github.com/bramtayl",
      "followers_url": "https://api.github.com/users/bramtayl/followers",
      "following_url": "https://api.github.com/users/bramtayl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bramtayl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bramtayl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bramtayl/subscriptions",
      "organizations_url": "https://api.github.com/users/bramtayl/orgs",
      "repos_url": "https://api.github.com/users/bramtayl/repos",
      "events_url": "https://api.github.com/users/bramtayl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bramtayl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T06:14:37Z",
    "updated_at": "2015-08-22T08:20:57Z",
    "author_association": "NONE",
    "body": "Is this still functional?\n\nI'm trying to use citations in IPython. I'm having some isssues.\n\nMy notebook has one markdown cell,\n\n```\n<cite data-cite=\"debreu_theory_1959\">(Debreu, 1959)</cite>\n```\n\nMy template looks like this:\n\n```\n((*- extends 'article.tplx' -*))\n\n((* block bibliography *))\n\\bibliographystyle{unsrt}\n\\bibliography{bibliography}\n((* endblock bibliography *))\n```\n\nAnd my bibliography has the section\n\n```\n@book{debreu_theory_1959,\n  address = {New Haven, {CT}},\n  title = {Theory of value: An axiomatic analysis of economic equilibrium},\n  shorttitle = {Theory of value},\n  url = {http://books.google.com/books?hl=en\\&lr=\\&id=QkX10epC46cC\\&oi=fnd\\&pg=PA1\\&dq=debreau+theory+of+value\\&ots=9DNz2653qg\\&sig=fKS1CYQ6ZFmXIUmOgDq3DRLPEmQ},\n  timestamp = {2014-04-17 14:32:20},\n  number = {17},\n  urldate = {2014-04-17},\n  publisher = {Yale University Press},\n  author = {Debreu, Gerard},\n  year = {1959},\n  file = {Snapshot:/home/haldane/.mozilla/firefox/8qzu92vh.default/zotero/storage/CIEI6RPS/books.html:text/html}\n}\n```\n\nMy command line call is\n\n```\nipython3 nbconvert --to pdf bibliography.ipynb --template bibliography.tplx\n```\n\nThe pdf is created, but all it contains is\n\n```\n[?]\n```\n\nYes, bibliography.ipynb, bibliography.tplx, and bibliography.bib are all in the same folder.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133708390",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-133708390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 133708390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcwODM5MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T14:20:53Z",
    "updated_at": "2015-08-22T14:20:53Z",
    "author_association": "MEMBER",
    "body": "@bramtayl try opening an issue if we can track it and debug that there. \nWe are low on manpower these days, so it might be forgotten if you leave it as a comment on a merge Pull request. \n\nI believe if should work. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/133709163",
    "html_url": "https://github.com/ipython/ipython/pull/4090#issuecomment-133709163",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4090",
    "id": 133709163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcwOTE2Mw==",
    "user": {
      "login": "bramtayl",
      "id": 9466324,
      "node_id": "MDQ6VXNlcjk0NjYzMjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9466324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bramtayl",
      "html_url": "https://github.com/bramtayl",
      "followers_url": "https://api.github.com/users/bramtayl/followers",
      "following_url": "https://api.github.com/users/bramtayl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bramtayl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bramtayl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bramtayl/subscriptions",
      "organizations_url": "https://api.github.com/users/bramtayl/orgs",
      "repos_url": "https://api.github.com/users/bramtayl/repos",
      "events_url": "https://api.github.com/users/bramtayl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bramtayl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-22T14:31:51Z",
    "updated_at": "2015-08-22T14:31:51Z",
    "author_association": "NONE",
    "body": "Ok, see #8760\n"
  }
]
