[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34581766",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34581766",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34581766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgxNzY2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T18:36:12Z",
    "updated_at": "2014-02-09T18:36:12Z",
    "author_association": "MEMBER",
    "body": "Hi @rudimk \n\nDocker for isolating kernel are things we did consider. Though, it would be putting a vault door \non a house without wall. Most of the **real** security issues on the notebook are on the network side with notebook, not on the kernel side. \n\nTo answer your other question, yes it is possible to launch a docker container as a kernel with current arch, you just have to configure `KernelManager.kernel_cmd` that can launch any program that can act as a kernel. I agree that auth is slightly more difficult but you shouldn't need a full wrapper around the notebook.\n\nI can speek of some more detail in public, but those are things I like to avoid (don't want to give bad ideas to people). You can contact any of us in private for more details.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34582696",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34582696",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34582696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgyNjk2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:03:41Z",
    "updated_at": "2014-02-09T19:03:41Z",
    "author_association": "MEMBER",
    "body": "Hi, welcome!\n\nAt this point, the security/user model we are planing on using for the\nmultiuser notebook is that of the Unix user model. Having a notebook will\nbe equivalent to having a shell account. With this model, the goal is to\nsimply provide each notebook user with access to the files and process\nspace they have in their Unix account. This model assumes that all users\nare trusted. Sure, someone could build a multiuser notebook server (Wakari\nfor example) that works with untrusted users. But the multiuser notebook\nserver that we ship with IPython, won't for now be that. In this context, I\nam not sure that there is any real benefit in using Docker.\n\nAt the same time, I am following Docker very closely to see if/how/when it\nmakes sense to start to use it. I am pretty sure that at some point we will\nuse it. Docker is extremely powerful and a really great tool for this type\nof thing. So no, I don't think this is crazy to think about at all. But we\nwant to start with the simpler trusted user, non-sandboxed usage case first\nand see how that goes.\n\nBut, most of the infrastructure of the multiuser notebook server will be\nthe same regardless. We need to build a nice proxy that can forward\nrequests to individual notebook servers for each user. We need to build the\nsharing UI, etc. that allows users to share their notebook with each other\nand the public. We need to think more about user accounts, auth, security,\netc. We will be starting on this stuff later in the Spring, if you are\ninterested in helping out please keep in touch.\n\nCheers,\n\nBrian\n\nOn Sun, Feb 9, 2014 at 10:25 AM, Rudi MK notifications@github.com wrote:\n\n> Hello!\n> I'm relatively unknown here, but I'll still go for my pitch. I've been\n> using the IPython Notebook for ages, and my current startup - it's about\n> computational math on the cloud - we use IPython a lot. We use Docker to\n> spin up ad-hoc Linux containers - a user can create a container, specify\n> memory limits and so on, and our platform spins it up, with things like\n> IPython, numpy, octave installed. The containers are essentially sandboxes,\n> and are isolated from one another.\n> \n> It just struck me - Summer 2014's going to be all about the multi-user\n> notebook. Do you think it's a long shot to think about using Docker to\n> achieve that? The idea is that the notebook server runs as root, and every\n> user(the notebook server user, not a Linux user) gets a container to work\n> on. I don't think that can be worked into the existing notebook - so, we go\n> ahead and build a wrapper app around it, that handles user auth, and\n> container creation.\n> \n> Would love to work on the details further, if you guys think it makes\n> sense.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583369",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583369",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzMzY5",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:28:07Z",
    "updated_at": "2014-02-09T19:28:07Z",
    "author_association": "NONE",
    "body": "Hello!\n\nI think going for the Unix model right now, does make sense. Our approach\nusing Docker for MathHarbor is actually a lot of code that's been plugged\ntogether to create sandboxes. BTW, our platform should be up pretty soon,\nand I'd be grateful for your inputs!\nApart from that, I'd love to contribute, come spring, to work on auth and\nmaybe the proxy too.\nOn Feb 10, 2014 12:33 AM, \"Brian E. Granger\" notifications@github.com\nwrote:\n\n> Hi, welcome!\n> \n> At this point, the security/user model we are planing on using for the\n> multiuser notebook is that of the Unix user model. Having a notebook will\n> be equivalent to having a shell account. With this model, the goal is to\n> simply provide each notebook user with access to the files and process\n> space they have in their Unix account. This model assumes that all users\n> are trusted. Sure, someone could build a multiuser notebook server (Wakari\n> for example) that works with untrusted users. But the multiuser notebook\n> server that we ship with IPython, won't for now be that. In this context, I\n> am not sure that there is any real benefit in using Docker.\n> \n> At the same time, I am following Docker very closely to see if/how/when it\n> makes sense to start to use it. I am pretty sure that at some point we will\n> use it. Docker is extremely powerful and a really great tool for this type\n> of thing. So no, I don't think this is crazy to think about at all. But we\n> want to start with the simpler trusted user, non-sandboxed usage case first\n> and see how that goes.\n> \n> But, most of the infrastructure of the multiuser notebook server will be\n> the same regardless. We need to build a nice proxy that can forward\n> requests to individual notebook servers for each user. We need to build the\n> sharing UI, etc. that allows users to share their notebook with each other\n> and the public. We need to think more about user accounts, auth, security,\n> etc. We will be starting on this stuff later in the Spring, if you are\n> interested in helping out please keep in touch.\n> \n> Cheers,\n> \n> Brian\n> \n> On Sun, Feb 9, 2014 at 10:25 AM, Rudi MK notifications@github.com wrote:\n> \n> > Hello!\n> > I'm relatively unknown here, but I'll still go for my pitch. I've been\n> > using the IPython Notebook for ages, and my current startup - it's about\n> > computational math on the cloud - we use IPython a lot. We use Docker to\n> > spin up ad-hoc Linux containers - a user can create a container, specify\n> > memory limits and so on, and our platform spins it up, with things like\n> > IPython, numpy, octave installed. The containers are essentially\n> > sandboxes,\n> > and are isolated from one another.\n> > \n> > It just struck me - Summer 2014's going to be all about the multi-user\n> > notebook. Do you think it's a long shot to think about using Docker to\n> > achieve that? The idea is that the notebook server runs as root, and\n> > every\n> > user(the notebook server user, not a Linux user) gets a container to work\n> > on. I don't think that can be worked into the existing notebook - so, we\n> > go\n> > ahead and build a wrapper app around it, that handles user auth, and\n> > container creation.\n> > \n> > Would love to work on the details further, if you guys think it makes\n> > sense.\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ipython/ipython/issues/5080>\n> > .\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34582696\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583427",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzNDI3",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:30:13Z",
    "updated_at": "2014-02-09T19:30:13Z",
    "author_association": "NONE",
    "body": "Btw - Wakari uses containers too, for multi-user notebooks. OpenVZ\ncontainers, which I personally feel aren't as easy to use or stable in\nterms of disk usage, as compared to Docker.\nOn Feb 10, 2014 12:33 AM, \"Brian E. Granger\" notifications@github.com\nwrote:\n\n> Hi, welcome!\n> \n> At this point, the security/user model we are planing on using for the\n> multiuser notebook is that of the Unix user model. Having a notebook will\n> be equivalent to having a shell account. With this model, the goal is to\n> simply provide each notebook user with access to the files and process\n> space they have in their Unix account. This model assumes that all users\n> are trusted. Sure, someone could build a multiuser notebook server (Wakari\n> for example) that works with untrusted users. But the multiuser notebook\n> server that we ship with IPython, won't for now be that. In this context, I\n> am not sure that there is any real benefit in using Docker.\n> \n> At the same time, I am following Docker very closely to see if/how/when it\n> makes sense to start to use it. I am pretty sure that at some point we will\n> use it. Docker is extremely powerful and a really great tool for this type\n> of thing. So no, I don't think this is crazy to think about at all. But we\n> want to start with the simpler trusted user, non-sandboxed usage case first\n> and see how that goes.\n> \n> But, most of the infrastructure of the multiuser notebook server will be\n> the same regardless. We need to build a nice proxy that can forward\n> requests to individual notebook servers for each user. We need to build the\n> sharing UI, etc. that allows users to share their notebook with each other\n> and the public. We need to think more about user accounts, auth, security,\n> etc. We will be starting on this stuff later in the Spring, if you are\n> interested in helping out please keep in touch.\n> \n> Cheers,\n> \n> Brian\n> \n> On Sun, Feb 9, 2014 at 10:25 AM, Rudi MK notifications@github.com wrote:\n> \n> > Hello!\n> > I'm relatively unknown here, but I'll still go for my pitch. I've been\n> > using the IPython Notebook for ages, and my current startup - it's about\n> > computational math on the cloud - we use IPython a lot. We use Docker to\n> > spin up ad-hoc Linux containers - a user can create a container, specify\n> > memory limits and so on, and our platform spins it up, with things like\n> > IPython, numpy, octave installed. The containers are essentially\n> > sandboxes,\n> > and are isolated from one another.\n> > \n> > It just struck me - Summer 2014's going to be all about the multi-user\n> > notebook. Do you think it's a long shot to think about using Docker to\n> > achieve that? The idea is that the notebook server runs as root, and\n> > every\n> > user(the notebook server user, not a Linux user) gets a container to work\n> > on. I don't think that can be worked into the existing notebook - so, we\n> > go\n> > ahead and build a wrapper app around it, that handles user auth, and\n> > container creation.\n> > \n> > Would love to work on the details further, if you guys think it makes\n> > sense.\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ipython/ipython/issues/5080>\n> > .\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34582696\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583526",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583526",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzNTI2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:33:52Z",
    "updated_at": "2014-02-09T19:33:52Z",
    "author_association": "MEMBER",
    "body": "> Hello!\n> \n> I think going for the Unix model right now, does make sense. Our approach\n> using Docker for MathHarbor is actually a lot of code that's been plugged\n> together to create sandboxes. BTW, our platform should be up pretty soon,\n> and I'd be grateful for your inputs!\n> Apart from that, I'd love to contribute, come spring, to work on auth and\n> maybe the proxy too.\n\nYou could join one of our dev meeting on Thurstday at 10 PST if you like to discuss once 3.0 is on the rails. \n\nI'm curious on how you handle security on the browser and side also, as isolating the kernels is only part of the equation. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583545",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzNTQ1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:34:35Z",
    "updated_at": "2014-02-09T19:34:35Z",
    "author_association": "MEMBER",
    "body": "Great, as we start to work on it we will post here to gather folks together.\n\nCheers,\n\nBrian\n\nOn Sun, Feb 9, 2014 at 11:28 AM, Rudi MK notifications@github.com wrote:\n\n> Hello!\n> \n> I think going for the Unix model right now, does make sense. Our approach\n> using Docker for MathHarbor is actually a lot of code that's been plugged\n> together to create sandboxes. BTW, our platform should be up pretty soon,\n> and I'd be grateful for your inputs!\n> Apart from that, I'd love to contribute, come spring, to work on auth and\n> maybe the proxy too.\n> On Feb 10, 2014 12:33 AM, \"Brian E. Granger\" notifications@github.com\n> wrote:\n> \n> > Hi, welcome!\n> > \n> > At this point, the security/user model we are planing on using for the\n> > multiuser notebook is that of the Unix user model. Having a notebook will\n> > be equivalent to having a shell account. With this model, the goal is to\n> > simply provide each notebook user with access to the files and process\n> > space they have in their Unix account. This model assumes that all users\n> > are trusted. Sure, someone could build a multiuser notebook server\n> > (Wakari\n> > for example) that works with untrusted users. But the multiuser notebook\n> > server that we ship with IPython, won't for now be that. In this\n> > context, I\n> > am not sure that there is any real benefit in using Docker.\n> > \n> > At the same time, I am following Docker very closely to see if/how/when\n> > it\n> > makes sense to start to use it. I am pretty sure that at some point we\n> > will\n> > use it. Docker is extremely powerful and a really great tool for this\n> > type\n> > of thing. So no, I don't think this is crazy to think about at all. But\n> > we\n> > want to start with the simpler trusted user, non-sandboxed usage case\n> > first\n> > and see how that goes.\n> > \n> > But, most of the infrastructure of the multiuser notebook server will be\n> > the same regardless. We need to build a nice proxy that can forward\n> > requests to individual notebook servers for each user. We need to build\n> > the\n> > sharing UI, etc. that allows users to share their notebook with each\n> > other\n> > and the public. We need to think more about user accounts, auth,\n> > security,\n> > etc. We will be starting on this stuff later in the Spring, if you are\n> > interested in helping out please keep in touch.\n> > \n> > Cheers,\n> > \n> > Brian\n> > \n> > On Sun, Feb 9, 2014 at 10:25 AM, Rudi MK notifications@github.com\n> > wrote:\n> > \n> > > Hello!\n> > > I'm relatively unknown here, but I'll still go for my pitch. I've been\n> > > using the IPython Notebook for ages, and my current startup - it's\n> > > about\n> > > computational math on the cloud - we use IPython a lot. We use Docker\n> > > to\n> > > spin up ad-hoc Linux containers - a user can create a container,\n> > > specify\n> > > memory limits and so on, and our platform spins it up, with things like\n> > > IPython, numpy, octave installed. The containers are essentially\n> > > sandboxes,\n> > > and are isolated from one another.\n> > > \n> > > It just struck me - Summer 2014's going to be all about the multi-user\n> > > notebook. Do you think it's a long shot to think about using Docker to\n> > > achieve that? The idea is that the notebook server runs as root, and\n> > > every\n> > > user(the notebook server user, not a Linux user) gets a container to\n> > > work\n> > > on. I don't think that can be worked into the existing notebook - so,\n> > > we\n> > > go\n> > > ahead and build a wrapper app around it, that handles user auth, and\n> > > container creation.\n> > > \n> > > Would love to work on the details further, if you guys think it makes\n> > > sense.\n> > > \n> > > ## \n> > > \n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/ipython/ipython/issues/5080>\n> > > .\n> > \n> > ## \n> > \n> > Brian E. Granger\n> > Cal Poly State University, San Luis Obispo\n> > bgranger@calpoly.edu and ellisonbg@gmail.com\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ipython/ipython/issues/5080#issuecomment-34582696>\n> > .\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34583369\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583797",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzNzk3",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:43:07Z",
    "updated_at": "2014-02-09T19:43:07Z",
    "author_association": "NONE",
    "body": "@Brian - Super.\n\n@Matthias - On the browser end, the biggest challenge we faced was with\nport numbers. When you spin a Docker container, you have to expose a port\non the container to the host; a random port on the host is then bridged-up\nto the port on the container. So, I run a Notebook server on port 5000 on\nthe container, and port 43567 is mapped to the Notebook server. To access\nthe notebook, I'd have to go to platform.mathharbor.com:43567, which was a\nglaring loophole. We fixed that by using hipache - it's a rather neat load\nbalancer and proxy written by the folks behind Docker. We take the\ncontainer's hostname, create a subdomain - <container-hostname>.\nplatform.mathharbor.com, and push a key containing this sub domain and the\nport for the container in question, into Redis. Hipache then reads the key\nstored there, and proxies requests for such sub domains, to the appropriate\nNotebook servers. Apart from that, I haven't really looked into other\npossible vulnerabilities - I'd get started on that right away.\n\nAnd yes, I'd love to join the dev meet. It's a Hangout on Air, right?\nOn Feb 10, 2014 1:04 AM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n>  Hello!\n> \n> I think going for the Unix model right now, does make sense. Our approach\n> using Docker for MathHarbor is actually a lot of code that's been plugged\n> together to create sandboxes. BTW, our platform should be up pretty soon,\n> and I'd be grateful for your inputs!\n> Apart from that, I'd love to contribute, come spring, to work on auth and\n> maybe the proxy too.\n> \n> You could join one of our dev meeting on Thurstday at 10 PST if you like\n> to discuss once 3.0 is on the rails.\n> \n> I'm curious on how you handle security on the browser and side also, as\n> isolating the kernels is only part of the equation.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34583526\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583894",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzODk0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:46:27Z",
    "updated_at": "2014-02-09T19:46:27Z",
    "author_association": "MEMBER",
    "body": "Ha, hipache, great, I wasn't aware of it. We were considering maybe writing something alike using node also. \n\nYes hangout on air and agenda [on hackpad](https://hackpad.com/2014-IPython-Weekly-Development-Meetings-v8bNV6EmqVd) . \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34583963",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34583963",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34583963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgzOTYz",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T19:48:42Z",
    "updated_at": "2014-02-09T19:48:42Z",
    "author_association": "NONE",
    "body": "Hipache works really well. Scales pretty well, too. And it's in node. I'd\nsay, if we need similar functionality, which I reckon we do, Hipache's the\nbest bet. Haven't checked the licensing part, though.\nOn Feb 10, 2014 1:16 AM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> Ha, hipache, great, I wasn't aware of it. We were considering maybe\n> writing something alike using node also.\n> \n> Yes hangout on air and agenda on hackpadhttps://hackpad.com/2014-IPython-Weekly-Development-Meetings-v8bNV6EmqVd.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34583894\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34585381",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34585381",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34585381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTg1Mzgx",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-09T20:31:18Z",
    "updated_at": "2014-02-09T20:31:18Z",
    "author_association": "MEMBER",
    "body": "> Docker for isolating kernel are things we did consider. Though, it would be putting a vault door \n> on a house without wall. Most of the real security issues on the notebook are on the network side with notebook, not on the kernel side.\n\nSpot on @Carreau \n\nThe real utility in putting kernels in Docker would be to be able to spin up jobs (through kernels) on some large set of machines, without having to manage the infrastructure (someone provides the layer above this) for deploying these.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34597304",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34597304",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34597304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTk3MzA0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T02:52:28Z",
    "updated_at": "2014-02-10T02:52:28Z",
    "author_association": "MEMBER",
    "body": "We should point out that there are existing projects that use docker for multiuser notebooks, such as jiffylab and ipydra. Part of the reason we're planning our own multiuser server is to use the 'notebook user is system user' model, which I don't think there's anything for at present.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34598003",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34598003",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34598003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTk4MDAz",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T03:15:40Z",
    "updated_at": "2014-02-10T03:15:40Z",
    "author_association": "NONE",
    "body": "I've played with jiffylab and ipydra. Jiffylab is great for starters -\ndoesn't work so well if you try and scale it, it's meant for classrooms.\nIPydra - same stuff. I think your approach of the notebook user being a\nsystem user is great - and, to paraphrase, there's nothing like that at\npresent. I'm not well-versed with the nitty-gritties of Unix\nauthentication, but I feel it won't scale much, would it? Say, a thousand\nusers..the server itself might not be able to take it. But I went through\nthe roadmap, and I know this isn't something we're working on right now.\nJust sayin'.\nOn Feb 10, 2014 8:22 AM, \"Thomas Kluyver\" notifications@github.com wrote:\n\n> We should point out that there are existing projects that use docker for\n> multiuser notebooks, such as jiffylab and ipydra. Part of the reason we're\n> planning our own multiuser server is to use the 'notebook user is system\n> user' model, which I don't think there's anything for at present.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34597304\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34598179",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34598179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34598179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTk4MTc5",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T03:20:56Z",
    "updated_at": "2014-02-10T03:20:56Z",
    "author_association": "NONE",
    "body": "@Kyle - that's a great idea to test out with. Spin up containers on the\nfly, for jobs. I've built \"clusters\" with containers, and they work pretty\nwell. I might have a go at what you suggested too.\nOn Feb 10, 2014 8:45 AM, \"Rudi MK\" rudimk.firefly@gmail.com wrote:\n\n> I've played with jiffylab and ipydra. Jiffylab is great for starters -\n> doesn't work so well if you try and scale it, it's meant for classrooms.\n> IPydra - same stuff. I think your approach of the notebook user being a\n> system user is great - and, to paraphrase, there's nothing like that at\n> present. I'm not well-versed with the nitty-gritties of Unix\n> authentication, but I feel it won't scale much, would it? Say, a thousand\n> users..the server itself might not be able to take it. But I went through\n> the roadmap, and I know this isn't something we're working on right now.\n> Just sayin'.\n> On Feb 10, 2014 8:22 AM, \"Thomas Kluyver\" notifications@github.com\n> wrote:\n> \n> > We should point out that there are existing projects that use docker for\n> > multiuser notebooks, such as jiffylab and ipydra. Part of the reason we're\n> > planning our own multiuser server is to use the 'notebook user is system\n> > user' model, which I don't think there's anything for at present.\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34597304\n> > .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34600677",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34600677",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34600677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjAwNjc3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T04:46:04Z",
    "updated_at": "2014-02-10T04:46:04Z",
    "author_association": "MEMBER",
    "body": "> I feel it won't scale much, would it?\n\nNo, and it is not intended to. Scaling to large numbers of users is out of\nscope for IPython itself. Scaling IPython deployments is possible, but that\nwork belongs in third party projects, which would need substantial\ncustomization of kernel management, and possibly rewriting much of the\nwebapp itself.\n\n-MinRK\n\nOn Sun, Feb 9, 2014 at 7:20 PM, Rudi MK notifications@github.com wrote:\n\n> @Kyle - that's a great idea to test out with. Spin up containers on the\n> fly, for jobs. I've built \"clusters\" with containers, and they work pretty\n> well. I might have a go at what you suggested too.\n> \n> On Feb 10, 2014 8:45 AM, \"Rudi MK\" rudimk.firefly@gmail.com wrote:\n> \n> > I've played with jiffylab and ipydra. Jiffylab is great for starters -\n> > doesn't work so well if you try and scale it, it's meant for classrooms.\n> > IPydra - same stuff. I think your approach of the notebook user being a\n> > system user is great - and, to paraphrase, there's nothing like that at\n> > present. I'm not well-versed with the nitty-gritties of Unix\n> > authentication, but I feel it won't scale much, would it? Say, a thousand\n> > users..the server itself might not be able to take it. But I went through\n> > the roadmap, and I know this isn't something we're working on right now.\n> > Just sayin'.\n> > On Feb 10, 2014 8:22 AM, \"Thomas Kluyver\" notifications@github.com\n> > wrote:\n> > \n> > > We should point out that there are existing projects that use docker for\n> > > multiuser notebooks, such as jiffylab and ipydra. Part of the reason\n> > > we're\n> > > planning our own multiuser server is to use the 'notebook user is system\n> > > user' model, which I don't think there's anything for at present.\n> > > \n> > > ## \n> > > \n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/ipython/ipython/issues/5080#issuecomment-34597304>\n> > > \n> > > .\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34598179\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34601096",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-34601096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 34601096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjAxMDk2",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T05:00:31Z",
    "updated_at": "2014-02-10T05:00:31Z",
    "author_association": "NONE",
    "body": "Yeah, that's true. Still, I think this is going to be pretty exciting!\nWould love to work on it.\nOn Feb 10, 2014 10:16 AM, \"Min RK\" notifications@github.com wrote:\n\n> > I feel it won't scale much, would it?\n> \n> No, and it is not intended to. Scaling to large numbers of users is out of\n> scope for IPython itself. Scaling IPython deployments is possible, but\n> that\n> work belongs in third party projects, which would need substantial\n> customization of kernel management, and possibly rewriting much of the\n> webapp itself.\n> \n> -MinRK\n> \n> On Sun, Feb 9, 2014 at 7:20 PM, Rudi MK notifications@github.com wrote:\n> \n> > @Kyle - that's a great idea to test out with. Spin up containers on the\n> > fly, for jobs. I've built \"clusters\" with containers, and they work\n> > pretty\n> > well. I might have a go at what you suggested too.\n> > \n> > On Feb 10, 2014 8:45 AM, \"Rudi MK\" rudimk.firefly@gmail.com wrote:\n> > \n> > > I've played with jiffylab and ipydra. Jiffylab is great for starters -\n> > > doesn't work so well if you try and scale it, it's meant for\n> > > classrooms.\n> > > IPydra - same stuff. I think your approach of the notebook user being\n> > > a\n> > > system user is great - and, to paraphrase, there's nothing like that\n> > > at\n> > > present. I'm not well-versed with the nitty-gritties of Unix\n> > > authentication, but I feel it won't scale much, would it? Say, a\n> > > thousand\n> > > users..the server itself might not be able to take it. But I went\n> > > through\n> > > the roadmap, and I know this isn't something we're working on right\n> > > now.\n> > > Just sayin'.\n> > > On Feb 10, 2014 8:22 AM, \"Thomas Kluyver\" notifications@github.com\n> > > wrote:\n> > > \n> > > > We should point out that there are existing projects that use docker\n> > > > for\n> > > > multiuser notebooks, such as jiffylab and ipydra. Part of the reason\n> > > > we're\n> > > > planning our own multiuser server is to use the 'notebook user is\n> > > > system\n> > > > user' model, which I don't think there's anything for at present.\n> > > > \n> > > > ## \n> > > > \n> > > > Reply to this email directly or view it on GitHub<\n> > > > https://github.com/ipython/ipython/issues/5080#issuecomment-34597304>\n> > > > \n> > > > .\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ipython/ipython/issues/5080#issuecomment-34598179>\n> > .\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5080#issuecomment-34600677\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57728977",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-57728977",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 57728977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzI4OTc3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T23:44:14Z",
    "updated_at": "2014-10-02T23:44:14Z",
    "author_association": "MEMBER",
    "body": "This is addressed by [jupyterhub](https://github.com/jupyter/jupyterhub) and its [DockerSpawner](https://github.com/jupyter/dockerspawner)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57804898",
    "html_url": "https://github.com/ipython/ipython/issues/5080#issuecomment-57804898",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5080",
    "id": 57804898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODA0ODk4",
    "user": {
      "login": "rudimk",
      "id": 288007,
      "node_id": "MDQ6VXNlcjI4ODAwNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/288007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rudimk",
      "html_url": "https://github.com/rudimk",
      "followers_url": "https://api.github.com/users/rudimk/followers",
      "following_url": "https://api.github.com/users/rudimk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rudimk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rudimk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rudimk/subscriptions",
      "organizations_url": "https://api.github.com/users/rudimk/orgs",
      "repos_url": "https://api.github.com/users/rudimk/repos",
      "events_url": "https://api.github.com/users/rudimk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rudimk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T14:40:11Z",
    "updated_at": "2014-10-03T14:40:11Z",
    "author_association": "NONE",
    "body": "I tried playing with jupyterhub - not sure how sharing containers for\ncollaboration is going to work. But yes, might as well close this issue.\nOn Oct 3, 2014 5:14 AM, \"Min RK\" notifications@github.com wrote:\n\n> Closed #5080 https://github.com/ipython/ipython/issues/5080.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5080#event-173576009.\n"
  }
]
