[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1678352",
    "html_url": "https://github.com/ipython/ipython/issues/630#issuecomment-1678352",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/630",
    "id": 1678352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzgzNTI=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T02:37:37Z",
    "updated_at": "2011-07-29T02:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure which party is to blame for this particular problem, but creating a module that conflicts with a standard library module is always a bad idea. There is already a 'new' module in the standard library (at least in Python 2):\n\nhttp://docs.python.org/library/new.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1678595",
    "html_url": "https://github.com/ipython/ipython/issues/630#issuecomment-1678595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/630",
    "id": 1678595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzg1OTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T03:47:47Z",
    "updated_at": "2011-07-29T03:47:47Z",
    "author_association": "MEMBER",
    "body": "This is true for all absolute-imported modules in all projects, so not specific to IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1683578",
    "html_url": "https://github.com/ipython/ipython/issues/630#issuecomment-1683578",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/630",
    "id": 1683578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1Nzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T18:36:19Z",
    "updated_at": "2011-07-29T18:36:19Z",
    "author_association": "MEMBER",
    "body": "Yup, just like you can't do anything in the mpl directory because it includes a file named 'collections' that conflicts with the stdlib.\n\nI'm closing this because it's an unfortunate aspect of how Python works but nothing we can control/fix/work around in IPython.  I really wish Python had done something like C++, where the top-level namespace was empty and the stdlib used `std` as the namespace.  Coupled with 'from foo:` syntax, it would be very nice:\n\n<pre>\nfrom std:\n  import sys\n  import os\n  import new\nfrom numpy:\n  import linalg\n  import rand\n\netc...\n</pre>\n\n\nBut that's a rant for another place and time.\n"
  }
]
