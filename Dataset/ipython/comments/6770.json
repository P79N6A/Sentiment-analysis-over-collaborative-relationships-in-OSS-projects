[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60020176",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60020176",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60020176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDIwMTc2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T00:23:08Z",
    "updated_at": "2014-10-22T00:23:08Z",
    "author_association": "MEMBER",
    "body": "Easy way to mitigate this: provide a way to manually call up a tooltip, like we do with shift-tab in the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60131175",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60131175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60131175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMxMTc1",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:24:20Z",
    "updated_at": "2014-10-22T18:24:20Z",
    "author_association": "MEMBER",
    "body": "@Carreau, Spyder _does_ open a tooltip (I maintain that part of the code).  And a console\ncan show the calltip below the current line in the buffer, or do nothing at all with the calltip if it chooses.  What I'm advocating for is a standard way of _when_ to call `do_inspect` in a kernel, which should be front end agnostic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60131407",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60131407",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60131407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMxNDA3",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:25:53Z",
    "updated_at": "2014-10-22T18:26:49Z",
    "author_association": "MEMBER",
    "body": "@takluyver, I'm not sure if a key combination would work in say a Windows command prompt for the ipython console.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60132028",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60132028",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60132028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMyMDI4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:29:35Z",
    "updated_at": "2014-10-22T18:29:35Z",
    "author_association": "MEMBER",
    "body": "I was assuming terminal interfaces were excluded from this, because there's generally no way to show something like a call tip anyway, unless you get into curses. If you want to inspect something in a terminal interface, use the `foo?` syntax.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60133583",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60133583",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60133583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMzNTgz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:39:23Z",
    "updated_at": "2014-10-22T18:39:23Z",
    "author_association": "MEMBER",
    "body": "Ok, maybe not spyder, I don't use IDE a lot, I'm still a VIM  user. I just think that a regex is not the right information, nor the right place to store this information. (I'm already a little worry about having both codemirror and pygments mode in kernel spec) Keep in mind that kernelspec are embeded into the notebook.\n\nFor me deciding when to trigger a tooltip is part of the mode the editor is put in, and an all cases just having the language name should be enough, otherwise it's slippery slope, you embed regexes for identifiers, builins, keywords cause it's easier for syntax highlighting, and so on and so forth. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60134704",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60134704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60134704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTM0NzA0",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:46:43Z",
    "updated_at": "2014-10-22T18:46:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau So are you saying that you want to have code in each frontend that deals with triggering the tooltips based on the language name?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60134773",
    "html_url": "https://github.com/ipython/ipython/issues/6770#issuecomment-60134773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6770",
    "id": 60134773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTM0Nzcz",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:47:10Z",
    "updated_at": "2014-10-22T18:47:10Z",
    "author_association": "MEMBER",
    "body": "I liken this to \"modes\" in emacs.  A function call looks different in a Scheme buffer vs a Python one.\n"
  }
]
