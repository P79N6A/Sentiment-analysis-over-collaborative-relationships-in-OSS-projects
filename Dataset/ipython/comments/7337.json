[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68236671",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-68236671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 68236671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjM2Njcx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-29T07:09:23Z",
    "updated_at": "2014-12-29T07:09:23Z",
    "author_association": "MEMBER",
    "body": "kernelspecs could have either a single signature_scheme or a list of supported schemes. I don't think having a configurable dict of schemes per kernel is desirable. I think ~all kernels should support the basic  gamut of sha-2 at the bare minimum. I don't think we really need to accommodate kernels that do not support digests except in their infancy, during which time temporary server config disabling signatures is a tolerable inconvenience.\n\nIf the kernel wrote the connection file instead of the server, it could pick the signature scheme, and that's better in a lot of ways, but I don't think we can change how that works at this point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69480324",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-69480324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 69480324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDgwMzI0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T01:56:08Z",
    "updated_at": "2015-01-11T01:56:08Z",
    "author_association": "MEMBER",
    "body": "Hmm, shouldn't we pick the scheme globally and refuse to talk to kernels that don't respect it. I think we want to push back on kernel authors that make different choices for no really good reason. Or is there a good reason the IHaskel kernel can't use the default (or any) scheme. Does this really need to be per-kernel configurable?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69483217",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-69483217",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 69483217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDgzMjE3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T04:25:02Z",
    "updated_at": "2015-01-11T04:25:02Z",
    "author_association": "MEMBER",
    "body": "I don't think there should be any per-kernel _config_ for this. But we may want to allow kernels to specify what schemes they do support. Even if we refuse to talk to them, we could do it more gracefully than failure to authenticate messages if we knew beforehand that the current scheme is not supported.\n\nAt this point, I don't think this needs to be addressed for 3.0.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69490949",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-69490949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 69490949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDkwOTQ5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T11:18:58Z",
    "updated_at": "2015-01-11T11:18:58Z",
    "author_association": "MEMBER",
    "body": "> Hmm, shouldn't we pick the scheme globally and refuse to talk to kernels that don't respect it. I think we want to push back on kernel authors that make different choices for no really good reason.\n\nI'm mostly thinking of what if we change ? Let's say one of the ex Kyle's employers had a backdoor in sha256 we use and we switch to (for demonstration purpose) blowfish. This will immediately make all old kernels incompatible. \n\nI think in the long term a list of supported scheme make sens, even if we deprecate it.\n\nI would definitively consider that a bug in a kernel if it does not use auth, but by installing IHaskell, \nI made all my kernel not-signing messages which is definitively bad. And I had no warning about that. \nAgain not totally Jupyter-side fault, but as we only have a global configurable, kernels that are being installed have no choice but to modify user global config. \n\nI don't expect that was done by Andrew on purpose, but just that it was st to no sign at the beginning of project development and then \"just forgotten\".\n\nA per-kernel hint that show a (unconfigurable) warning that kernel communication are unsecure make sens to me. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69510078",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-69510078",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 69510078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTEwMDc4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T20:33:07Z",
    "updated_at": "2015-01-11T20:33:07Z",
    "author_association": "MEMBER",
    "body": "Bumping to 4.0.\n\nI like the idea of @minrk \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76864129",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-76864129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 76864129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODY0MTI5",
    "user": {
      "login": "gibiansky",
      "id": 1865411,
      "node_id": "MDQ6VXNlcjE4NjU0MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1865411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gibiansky",
      "html_url": "https://github.com/gibiansky",
      "followers_url": "https://api.github.com/users/gibiansky/followers",
      "following_url": "https://api.github.com/users/gibiansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/gibiansky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gibiansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gibiansky/subscriptions",
      "organizations_url": "https://api.github.com/users/gibiansky/orgs",
      "repos_url": "https://api.github.com/users/gibiansky/repos",
      "events_url": "https://api.github.com/users/gibiansky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gibiansky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T00:47:32Z",
    "updated_at": "2015-03-03T00:47:32Z",
    "author_association": "NONE",
    "body": "@Carreau \n\nIHaskell will support HMAC-SHA256 in the near future, once it supports IPython 3.0. \n\n> I would definitively consider that a bug in a kernel if it does not use auth, but by installing IHaskell, \n> I made all my kernel not-signing messages which is definitively bad. And I had no warning about that. \n> Again not totally Jupyter-side fault, but as we only have a global configurable, kernels that are being installed have no choice but to modify user global config.\n\nI don't think that is actually the case -- at least, it should not have been. IHaskell has always used it's own `profile_haskell` profile, which was used for Haskell and only haskell, so authentication for the other kernels should not have been affected.\n\nAlso, I am not sure -- should kernels implement anything besides `hmac-sha256`? (The documentation leaves open the possibility of other signing schemes, but it is slightly unclear whether kernels _may_ support other schemes or _should_ support other schemes, and if so, what schemes they should support.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76872325",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-76872325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 76872325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODcyMzI1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T01:59:23Z",
    "updated_at": "2015-03-03T01:59:23Z",
    "author_association": "MEMBER",
    "body": "> should kernels implement anything besides hmac-sha256\n\nAccording to the spec, they should officially expose the gamut of basic hmac+hash algorithms available from whatever crypto library you are using (commonly md5, sha256, sha512, etc.). In practice, I will be surprised if anything other than sha256 is actually used, so if that's all you feel like supporting, I would expect to be fine for the indefinite future. I would at least check the value in the connection file and throw an informative error.\n\nIf we do come up with a reason to move away from sha256, I think we will need to implement something like what's described here - a way for kernelspecs to describe what schemes their kernels support.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316769534",
    "html_url": "https://github.com/ipython/ipython/issues/7337#issuecomment-316769534",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7337",
    "id": 316769534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2OTUzNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:09:10Z",
    "updated_at": "2017-07-20T17:09:10Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  }
]
