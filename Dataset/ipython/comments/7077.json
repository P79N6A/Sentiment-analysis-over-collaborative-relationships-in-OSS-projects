[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65221082",
    "html_url": "https://github.com/ipython/ipython/pull/7077#issuecomment-65221082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7077",
    "id": 65221082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjIxMDgy",
    "user": {
      "login": "jdemeyer",
      "id": 3625785,
      "node_id": "MDQ6VXNlcjM2MjU3ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdemeyer",
      "html_url": "https://github.com/jdemeyer",
      "followers_url": "https://api.github.com/users/jdemeyer/followers",
      "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
      "repos_url": "https://api.github.com/users/jdemeyer/repos",
      "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:01:36Z",
    "updated_at": "2014-12-02T12:01:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> wouldn't path = filter(lambda x:os.access(x, os.X_OK), path) also work and avoid a lot of failed chdir and failed exceptions?\n\nYou also need `os.access(x, os.R_OK)` and then I don't know about the portability of this. But really, what's wrong with failed `chdir` and exceptions?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65223720",
    "html_url": "https://github.com/ipython/ipython/pull/7077#issuecomment-65223720",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7077",
    "id": 65223720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjIzNzIw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:26:36Z",
    "updated_at": "2014-12-02T12:26:36Z",
    "author_association": "MEMBER",
    "body": "> You also need os.access(x, os.R_OK)\n\nAh, indeed, for the listdir.\n\n> But really, what's wrong with failed chdir and exceptions?\n\nNothing, just performance reason for people with really long path. I haven't especially tried, and made the assumption that actually asking the process to chdir and catch would be longer, but it does not appear to be the case. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65224771",
    "html_url": "https://github.com/ipython/ipython/pull/7077#issuecomment-65224771",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7077",
    "id": 65224771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjI0Nzcx",
    "user": {
      "login": "jdemeyer",
      "id": 3625785,
      "node_id": "MDQ6VXNlcjM2MjU3ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdemeyer",
      "html_url": "https://github.com/jdemeyer",
      "followers_url": "https://api.github.com/users/jdemeyer/followers",
      "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
      "repos_url": "https://api.github.com/users/jdemeyer/repos",
      "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:37:39Z",
    "updated_at": "2014-12-02T12:37:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Nothing, just performance reason for people with really long path. I haven't especially tried, and made the assumption that actually asking the process to chdir and catch would be longer, but it does not appear to be the case.\n\nIn the case where no exception occurs (which should be the most common case), doing something inside a `try` block is faster than checking first, then doing it. The former is 1 system call, the latter is 2 system calls. The `try`/`except` style is also the preferred style for Python (see https://docs.python.org/2/glossary.html#term-eafp). It is usually less buggy since you don't need to consider in advance the various ways how `chdir()` or `listdir()` could fail and it's much less prone to http://en.wikipedia.org/wiki/Time_of_check_to_time_of_use.\n\nIn any case, this code is reading all directory entries in `/usr/bin` which certainly overwhelms the runtime of this function.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65658951",
    "html_url": "https://github.com/ipython/ipython/pull/7077#issuecomment-65658951",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7077",
    "id": 65658951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjU4OTUx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T16:27:37Z",
    "updated_at": "2014-12-04T16:27:37Z",
    "author_association": "MEMBER",
    "body": "ok, +1, I'll let a day pass and without objection, merging.\n"
  }
]
