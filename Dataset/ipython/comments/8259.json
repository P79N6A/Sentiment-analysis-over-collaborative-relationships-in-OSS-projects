[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90128147",
    "html_url": "https://github.com/ipython/ipython/issues/8259#issuecomment-90128147",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8259",
    "id": 90128147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTI4MTQ3",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T16:14:28Z",
    "updated_at": "2015-04-06T16:14:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought this problem was fixed precisely in 3.1.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90166254",
    "html_url": "https://github.com/ipython/ipython/issues/8259#issuecomment-90166254",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8259",
    "id": 90166254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTY2MjU0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-06T17:35:52Z",
    "updated_at": "2015-04-06T18:03:51Z",
    "author_association": "MEMBER",
    "body": "It's a cp1252 vs utf8 problem. Since the encoding of `repr(frame)` bytes is ambiguous, we have to guess. Currently, IPython is guessing with `platform.get_preferred_encoding()`, which is returning cp1252. However, pandas is sensibly asking sys.stdout what its encoding is, and encoding with utf8. Some irony is that the utf8 information is coming from IPython itself.\n\nI think the right behavior here is to change the encoding IPython uses to decode reprs in `pretty` to `sys.stdout.encoding`, which will be utf8 in the qtconsole, because that will be the right answer for any code smart enough to ask the output streams what their encoding should be.\n\nPR #8260 does exactly this.\n"
  }
]
