[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17780671",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17780671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17780671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgwNjcx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T16:34:38Z",
    "updated_at": "2013-05-12T16:34:38Z",
    "author_association": "MEMBER",
    "body": "> uses the notebook metadata to define a postsavehook\n\nI'm not sure this is a per notebook setting, IMHO it has more sens as a global(/per project) config flag.\nThis is typically the thing you don't want to share. I for example, personally never strip things from notebook before saving/committing, and user might not have the relevant script.\n\nI would assume one can set a post save hook that read notebook metadata and run other post save hook if needed.\n\nAlso, displaying javascript will be remove soon enough, we probably don't want to make things like that in the core. \n\nFinally, I don't think the example to select how is the cell exported make sens in the core. \nNot that it is not helpfull, but because I think it could live as a standalone project that will be able to have faster release cycle and/or use nbconvert once it is integrated into IPython itself.\n\nSee [here](https://github.com/Carreau/ipython-static-profiles) how I inject different js files into IPython where each project is standalone dir. I plan on writing an extension to make this simpler and/or oneliner, and include multiple custom css...Etc, but I need time for that, and I'll try to make it as compatible as possible with npm and alike so that some pure js extension coul be install with just `npm install <ipython-jsext-name>`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17780692",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17780692",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17780692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgwNjky",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T16:35:43Z",
    "updated_at": "2013-05-12T16:35:43Z",
    "author_association": "MEMBER",
    "body": "> Also, displaying javascript will be remove soon enough, we probably don't want to make things like that in the core.\n\nNo, it will not.  We do not have any plans to remove support for displaying javascript - only inline in markdown.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17781468",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17781468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17781468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgxNDY4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T17:21:22Z",
    "updated_at": "2013-05-12T17:21:22Z",
    "author_association": "MEMBER",
    "body": "> No, it will not. We do not have any plans to remove support for displaying javascript - only inline in markdown.\n\nAh, yes sorry, confusing with script tag in HTML. It is true that display javascript is a problem only if we have live collaboration between users, which will not append soon. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17781599",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17781599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17781599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgxNTk5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T17:28:11Z",
    "updated_at": "2013-05-12T17:28:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to make sure: my usecase is not striping output (see tthis bugreport for a way to do that with git: https://github.com/ipython/nbconvert/pull/142) but making it possible to export only parts of a notebook, so that these parts can be used as a importable script (-> reuse a function/class in another notebook). As such a per-notebook hock is much better than a global/per folder config.\n\nI'm fine with splitting the PR into two and distributing the extension+hook implementation in a different way (@minrk: would you take that as a PR against you extension repo?)\n\nAnd please don't make it mandatory to install npm to install ipython extensions...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17781649",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17781649",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17781649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgxNjQ5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T17:30:47Z",
    "updated_at": "2013-05-12T17:30:47Z",
    "author_association": "MEMBER",
    "body": "The same goes for displaying HTML as well - we are _not_ going to remove display(HTML), we are going to add a sanitize step on HTML at load time.\n\n> And please don't make it mandatory to install npm to install ipython extensions...\n\nIt won't be mandatory for extensions in general - it _may_ be necessary for those with extensive javascript components, particularly dependencies (hopefully not).\n\n@JanSchulz I'm happy taking more extensions into my repo, though I think we do want to figure out a more central repository and/or index of extensions, so that we can remove the R magic, etc. from the IPython repo.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17781891",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17781891",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17781891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzgxODkx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T17:44:54Z",
    "updated_at": "2013-05-12T17:44:54Z",
    "author_association": "MEMBER",
    "body": "> Just to make sure: my usecase is not striping output (see tthis bugreport for a way to do that with git: ipython/nbconvert#142) but making it possible to export only parts of a notebook, so that these parts can be used as a importable script (-> reuse a function/class in another notebook). As such a per-notebook hock is much better than a global/per folder config.\n\nNothing prevent you to have a post-saving hook that looks into metadata to decide wether or not it have to **do** something. It will just be no-op on certain notebook. \n\n> And please don't make it mandatory to install npm to install ipython extensions...\n\nNo of course. But as npm (& co) already have dependency management... this would allow extension to rely on other extension that would all be automatically installed in profiles. \n\nAlso putting js files in profiles allow them to be automatically loaded on notebook startup which avoid the recurrent use of `%load_ext <extname>` if it is just to inject javascript into the frontend.\n\nIn your case for example, I don't see any reason not to inject the javascript in all the notebooks. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17785908",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17785908",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17785908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1OTA4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T21:41:55Z",
    "updated_at": "2013-05-12T21:41:55Z",
    "author_association": "MEMBER",
    "body": "Sorry I haven't been able to fully participate in these discussions.  But these types of hooks don't belong in notebook manager.  We have a separate PR where we are making notebook manager multi-directory aware.  In that new design, users will need the ability to provide per directory customizations for a single ipython profile.  There will be a single notebook manager for all directories on the filesystem and it will be stateless.  We need to spend some time thinking about how this will affect notebook configuration/customization before jumping into adding extension points like this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17785942",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17785942",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17785942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Nzg1OTQy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-12T21:43:55Z",
    "updated_at": "2013-05-12T21:43:55Z",
    "author_association": "MEMBER",
    "body": "Also, I am not sure that notebook metadata is the right place to configure this behavior.  It may be, but I feel like there are too many things that are premature (such as nbconvert and notebook configurability) to figure these things out yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17793901",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-17793901",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 17793901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzkzOTAx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-13T05:55:07Z",
    "updated_at": "2013-05-13T05:55:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Sorry I haven't been able to fully participate in these discussions. But these types of hooks \n> don't belong in notebook manager. \n\nActually, right now it's in the notebook itself. The NotebookManager just executes the hook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18119793",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-18119793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 18119793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE5Nzkz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-19T15:55:40Z",
    "updated_at": "2013-05-19T15:55:40Z",
    "author_association": "MEMBER",
    "body": "FYI, Need a rebase. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19504266",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-19504266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 19504266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA0MjY2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-15T22:06:33Z",
    "updated_at": "2013-06-15T22:06:33Z",
    "author_association": "MEMBER",
    "body": "I am going to closing this PR as I don't think this is the direction we want to go.  We are in the process of completely rewriting the notebook manager and are about the integrate nbconvert into the code base.  As we do this work we will keep in mind the need to allow custom save/import logic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19504268",
    "html_url": "https://github.com/ipython/ipython/pull/3312#issuecomment-19504268",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3312",
    "id": 19504268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA0MjY4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-15T22:06:38Z",
    "updated_at": "2013-06-15T22:06:38Z",
    "author_association": "MEMBER",
    "body": "Closing.\n"
  }
]
