[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6591155",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-6591155",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 6591155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTExNTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-26T23:46:51Z",
    "updated_at": "2012-06-26T23:46:51Z",
    "author_association": "MEMBER",
    "body": "This looks good on first view, but it's obviously 0.14 material, tagging as such.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6591257",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-6591257",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 6591257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTEyNTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-26T23:54:39Z",
    "updated_at": "2012-06-26T23:54:39Z",
    "author_association": "MEMBER",
    "body": "Yep, strongly so.  One thing that I am running into is that we have hardcoded logic about the notebook_dir everywhere.  But that notion only makes sense for the file based notebook manager.  I have going to commit some fixes that work around this fact, but we are going to have to rethink this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6591422",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-6591422",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 6591422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE0MjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-27T00:04:46Z",
    "updated_at": "2012-06-27T00:04:46Z",
    "author_association": "MEMBER",
    "body": "Furthermore, the notebook_dir support is kind of borked now: it refers to the storage dir, but the cwd of the actual kernels is still where the server starts.  Ideally it would do both, so one can (in file-based storage) configure the notebook dir in a config profile and simply start things from wherever, knowing that all kernels will come up in the right place.\n\nI'd actually like to see that fixed for 0.13, but I don't see it happening.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6591452",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-6591452",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 6591452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE0NTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-27T00:06:55Z",
    "updated_at": "2012-06-27T00:06:55Z",
    "author_association": "MEMBER",
    "body": "Scratch that! It was #1958, and Min already fixed it in #1951 :)  So all clear for 0.13 :)\n\nGee, we're merging so much code so fast, that I don't even remember issues _I_ opened only a week ago.  The problems we have :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7049211",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7049211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7049211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDkyMTE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-17T20:53:59Z",
    "updated_at": "2012-07-17T20:53:59Z",
    "author_association": "MEMBER",
    "body": "@fperez do you think this is ready to go in?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7055643",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7055643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7055643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTU2NDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T03:14:37Z",
    "updated_at": "2012-07-18T03:14:37Z",
    "author_association": "MEMBER",
    "body": "Overall the code looks clean, but there are a few things that worry me:\n- untested/untestable: since the only way to test this stuff for real is to run it on azure, it's not exactly test suite material.  But I am becoming increasingly uncomfortable with the amount of new code we're putting in without proper test coverage.  I'm wondering if at least using a mock object that mocks azure would be viable...\n- docs: I think it needs somewhere a bit of mention in the documentation.  I know we have very little in the way of docs about the notebook architecture and possibilities, but we need to start somewhere.  Might as well be here :)\n\nThe former I'm not really sure what to do about, the latter is eminently addressable...  Otherwise the code does look great, and I'm thrilled to see it in.  Good job!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7056749",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7056749",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7056749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTY3NDk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T04:51:31Z",
    "updated_at": "2012-07-18T04:51:31Z",
    "author_association": "MEMBER",
    "body": "I will add some docs for this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7070513",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7070513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7070513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzA1MTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T14:30:46Z",
    "updated_at": "2012-07-18T14:30:46Z",
    "author_association": "MEMBER",
    "body": "> untested/untestable: since the only way to test this stuff for real is to run it on azure, it's not exactly test suite material. But I am becoming increasingly uncomfortable with the amount of new code we're putting in without proper test coverage. I'm wondering if at least using a mock object that mocks azure would be viable...\n\nThis is like the PBS/etc. Launchers, which simply cannot be automatically tested.  We can do some amount of testing with dummy objects, but I'm not sure how useful that is.  Perhaps what is more useful, if more cumbersome, is manual tests a la docs/examples/tests, to make sure things work.  When changing this code, run the test script / step through the test process, etc.\n\nFor instance, we managed to cut 0.13 with PBS/SGE support in ipcluster that [totally doesn't work](https://github.com/ipython/ipython/pull/2126), so we need to figure something out.\n\nre: notebook_dir\n\nWe use notebook_dir for three technically unrelated values, that are all the same by coincidence right now:\n1. the place where notebooks are stored (only relevant for file-based nbserver)\n2. the place where kernels are started (no reason to force these to be the same)\n3. the path used for serving local files from the notebook area (again, easily decoupled)\n\nIs there more to decouple than that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7072856",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7072856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7072856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzI4NTY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T15:53:01Z",
    "updated_at": "2012-07-18T15:53:01Z",
    "author_association": "MEMBER",
    "body": "On Wed, Jul 18, 2012 at 7:31 AM, Min RK\nreply@reply.github.com\nwrote:\n\n> > untested/untestable: since the only way to test this stuff for real is to run it on azure, it's not exactly test suite material. But I am becoming increasingly uncomfortable with the amount of new code we're putting in without proper test coverage. I'm wondering if at least using a mock object that mocks azure would be viable...\n> \n> This is like the PBS/etc. Launchers, which simply cannot be automatically tested.  We can do some amount of testing with dummy objects, but I'm not sure how useful that is.  Perhaps what is more useful, if more cumbersome, is manual tests a la docs/examples/tests, to make sure things work.  When changing this code, run the test script / step through the test process, etc.\n\nThe main difficulty with testing this is that it requires the Azure\ncredentials, which we definitely can't version control.  The test\nscript in this case would be a config file that has those credentials\nand sets the right notebook manager.\n\n> For instance, we managed to cut 0.13 with PBS/SGE support in ipcluster that [totally doesn't work](https://github.com/ipython/ipython/pull/2126), so we need to figure something out.\n> \n> re: notebook_dir\n> \n> We use notebook_dir for three technically unrelated values, that are all the same by coincidence right now:\n> 1. the place where notebooks are stored (only relevant for file-based nbserver)\n> 2. the place where kernels are started (no reason to force these to be the same)\n> 3. the path used for serving local files from the notebook area (again, easily decoupled)\n> \n> Is there more to decouple than that?\n\n3 is the hardest to decouple.  The reason is that eventually the\nkernel will be run on a different host than the notebook server.  The\nnotebook server simply won't have access to the local files of the\nkernel.  Don't know how to handle that.  The other two should be easy\nto decouple.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/2045#issuecomment-7070513\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7149670",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7149670",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7149670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDk2NzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T03:45:16Z",
    "updated_at": "2012-07-21T03:45:16Z",
    "author_association": "MEMBER",
    "body": "> The main difficulty with testing this is that it requires the Azure\n> credentials, which we definitely can't version control.  The test\n> script in this case would be a config file that has those credentials\n> and sets the right notebook manager.\n\nPrecisely - just like the launchers, it could only be run by users with an appropriate environment, and cannot be involved in the _automatic_ test suite.\n\n> 3 is the hardest to decouple.  The reason is that eventually the\n> kernel will be run on a different host than the notebook server. \n\nIs it possible that local files would simply be unavailable in cases where the kernel's filesystem is not visible to the nbserver?  That honestly seems like a reasonable answer to me, since this is not a 100% critical feature.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7150230",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7150230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7150230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTAyMzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T05:35:35Z",
    "updated_at": "2012-07-21T05:35:35Z",
    "author_association": "MEMBER",
    "body": "This one is only waiting for docs, right? And a rebase, now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7165433",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7165433",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7165433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjU0MzM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-22T20:45:11Z",
    "updated_at": "2012-07-22T20:45:11Z",
    "author_association": "MEMBER",
    "body": "Yes, I just need to finish the docs.\n\nOn Fri, Jul 20, 2012 at 10:35 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> This one is only waiting for docs, right? And a rebase, now.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/2045#issuecomment-7150230\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7188201",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7188201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7188201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODgyMDE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-23T19:21:03Z",
    "updated_at": "2012-07-23T19:21:03Z",
    "author_association": "MEMBER",
    "body": "Is there a reason for the base class to be called BaseNotebookManager rather than NotebookManager?  This change would mean that config for 0.13 will be broken in 0.14, that would work perfectly fine otherwise.\n\nSince we have coupled class names to config files, I think we need a pretty high bar for renaming configurable classes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7588842",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7588842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7588842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODg4NDI=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-08T16:20:44Z",
    "updated_at": "2012-08-08T16:21:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I closed pull request #2155 and adjusted my notebook manager to use Brian's work. Thanks Brian.\n\nNoted the following bug in the azurenb branch, causing the default file system based nb manager to fail\n\n```\ndiff --git a/IPython/frontend/html/notebook/filenbmanager.py b/IPython/frontend/html/notebook/filenbmanager.py\nindex 6389ec1..34d7d26 100644\n--- a/IPython/frontend/html/notebook/filenbmanager.py\n+++ b/IPython/frontend/html/notebook/filenbmanager.py\n@@ -193,4 +193,4 @@ class FileNotebookManager(BaseNotebookManager):\n         return name\n\n     def log_info(self):\n-        self.log.info(\"Serving notebooks from local directory: %s\", self.notebook_manager.notebook_dir)\n+        self.log.info(\"Serving notebooks from local directory: %s\", self.notebook_dir)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7590253",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7590253",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7590253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTAyNTM=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-08T17:08:43Z",
    "updated_at": "2012-08-08T17:08:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is another bug fix to the azurenb branch, it was still referring to NotebookManager\n\n```\n\ndiff --git a/IPython/frontend/html/notebook/notebookapp.py b/IPython/frontend/html/notebook/notebookapp.py\nindex 167965d..f867155 100644\n--- a/IPython/frontend/html/notebook/notebookapp.py\n+++ b/IPython/frontend/html/notebook/notebookapp.py\n@@ -50,7 +50,7 @@ from .handlers import (LoginHandler, LogoutHandler,\n     RSTHandler, AuthenticatedFileHandler, PrintNotebookHandler,\n     MainClusterHandler, ClusterProfileHandler, ClusterActionHandler\n )\n-from .notebookmanager import NotebookManager\n+from .basenbmanager import BaseNotebookManager\n from .clustermanager import ClusterManager\n\n from IPython.config.application import catch_config_error, boolean_flag\n@@ -215,7 +215,7 @@ flags['read-only'] = (\n )\n\n # Add notebook manager flags\n-flags.update(boolean_flag('script', 'NotebookManager.save_script',\n+flags.update(boolean_flag('script', 'BaseNotebookManager.save_script',\n                'Auto-save a .py script everytime the .ipynb notebook is saved',\n                'Do not auto-save .py scripts for every notebook'))\n\n@@ -232,7 +232,7 @@ aliases.update({\n     'port-retries': 'NotebookApp.port_retries',\n     'keyfile': 'NotebookApp.keyfile',\n     'certfile': 'NotebookApp.certfile',\n-    'notebook-dir': 'NotebookManager.notebook_dir',\n+    'notebook-dir': 'BaseNotebookManager.notebook_dir',\n     'browser': 'NotebookApp.browser',\n })\n\n@@ -260,7 +260,7 @@ class NotebookApp(BaseIPythonApplication):\n     \"\"\"\n     examples = _examples\n\n-    classes = IPythonConsoleApp.classes + [MappingKernelManager, NotebookManager]\n+    classes = IPythonConsoleApp.classes + [MappingKernelManager, BaseNotebookManager]\n     flags = Dict(flags)\n     aliases = Dict(aliases)\n\n@@ -410,7 +410,7 @@ class NotebookApp(BaseIPythonApplication):\n             else:\n                 self.file_to_run = f\n                 nbdir = os.path.dirname(f)\n-            self.config.NotebookManager.notebook_dir = nbdir\n+            self.config.BaseNotebookManager.notebook_dir = nbdir\n\n     def init_configurables(self):\n         # force Session default to be secure\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7590381",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7590381",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7590381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTAzODE=",
    "user": {
      "login": "benjiec",
      "id": 982245,
      "node_id": "MDQ6VXNlcjk4MjI0NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/982245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjiec",
      "html_url": "https://github.com/benjiec",
      "followers_url": "https://api.github.com/users/benjiec/followers",
      "following_url": "https://api.github.com/users/benjiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjiec/subscriptions",
      "organizations_url": "https://api.github.com/users/benjiec/orgs",
      "repos_url": "https://api.github.com/users/benjiec/repos",
      "events_url": "https://api.github.com/users/benjiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-08T17:12:53Z",
    "updated_at": "2012-08-08T17:12:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "My patches are in https://github.com/benjiec/ipython/tree/azurenb\n\nI will create a pull request to Brian's branch\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7662441",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7662441",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7662441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjI0NDE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-11T00:45:12Z",
    "updated_at": "2012-08-11T00:45:12Z",
    "author_association": "MEMBER",
    "body": "OK, I have addressed all of the comments and the test suite passes without the azure package installed.  I have also added some minimal docs about using a custom notebook manager.  Merging.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7663069",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7663069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7663069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMwNjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-11T02:07:42Z",
    "updated_at": "2012-08-11T02:07:42Z",
    "author_association": "MEMBER",
    "body": "I wish you had pinged, since you did not actually address all comments above.\n\nUnaddressed:\n- you, yourself mentioned adding something about azure to setup.py, but nothing came of it\n- The question about renaming NotebookManager to BaseNotebookManager, which breaks config unnecessarily went unanswered.\n\nAnd the rebased commits re-introduced use of the deprecated assertEquals name, which was otherwise removed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7663107",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7663107",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7663107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMxMDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-11T02:13:13Z",
    "updated_at": "2012-08-11T02:13:13Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg, in general I think it's a good idea to give one last ping on PRs that have had good back-and-forth (such as this one).  Typically what we've been doing is that then the reviewer, if all looks good, ends up merging right away.  That way it doesn't really add any unnecessary lag to the process, it helps catch situations like this one, and it means that when we see the merge logs, the main reviewer tends to stand out right away without having to come back to read the PR process itself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7663399",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7663399",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7663399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjMzOTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-11T03:03:07Z",
    "updated_at": "2012-08-11T03:03:07Z",
    "author_association": "MEMBER",
    "body": "- I decided that it probably doesn't make sense to add the azure package to\n  setup.py.\n- I completely missed the NotebookManager naming thing.  I will submit a PR\n  for that.\n- I was mostly sick of this one hanging over my head, but points taken to\n  heart...\n\nOn Fri, Aug 10, 2012 at 7:13 PM, Fernando Perez notifications@github.comwrote:\n\n> @ellisonbg https://github.com/ellisonbg, in general I think it's a good\n> idea to give one last ping on PRs that have had good back-and-forth (such\n> as this one). Typically what we've been doing is that then the reviewer, if\n> all looks good, ends up merging right away. That way it doesn't really add\n> any unnecessary lag to the process, it helps catch situations like this\n> one, and it means that when we see the merge logs, the main reviewer tends\n> to stand out right away without having to come back to read the PR process\n> itself.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2045#issuecomment-7663107.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7663431",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7663431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7663431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjM0MzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-11T03:08:07Z",
    "updated_at": "2012-08-11T03:08:07Z",
    "author_association": "MEMBER",
    "body": "On Fri, Aug 10, 2012 at 8:03 PM, Brian E. Granger\nnotifications@github.comwrote:\n\n> - I decided that it probably doesn't make sense to add the azure package\n>   to\n>   setup.py.\n> - I completely missed the NotebookManager naming thing. I will submit a PR\n>   for that.\n> - I was mostly sick of this one hanging over my head, but points taken to\n>   heart...\n\nNo worries :)  Min quickly updated the deprecated asserts and I reviewed it\nand merged it, so no biggie.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7663500",
    "html_url": "https://github.com/ipython/ipython/pull/2045#issuecomment-7663500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2045",
    "id": 7663500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjM1MDA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-11T03:20:45Z",
    "updated_at": "2012-08-11T03:20:45Z",
    "author_association": "MEMBER",
    "body": "OK new PR submitted.\n\nOn Fri, Aug 10, 2012 at 8:08 PM, Fernando Perez notifications@github.comwrote:\n\n> On Fri, Aug 10, 2012 at 8:03 PM, Brian E. Granger\n> notifications@github.comwrote:\n> \n> > - I decided that it probably doesn't make sense to add the azure package\n> >   to\n> >   setup.py.\n> > - I completely missed the NotebookManager naming thing. I will submit a\n> >   PR\n> >   for that.\n> > - I was mostly sick of this one hanging over my head, but points taken to\n> >   heart...\n> \n> No worries :) Min quickly updated the deprecated asserts and I reviewed it\n> and merged it, so no biggie.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2045#issuecomment-7663431.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
