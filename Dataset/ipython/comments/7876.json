[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76220690",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-76220690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 76220690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjIwNjkw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T17:13:43Z",
    "updated_at": "2015-02-26T17:13:43Z",
    "author_association": "MEMBER",
    "body": "-1 on the repr changes. I _really_ don't think we should be changing code because the docs do something unpleasant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76227716",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-76227716",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 76227716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjI3NzE2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T17:49:51Z",
    "updated_at": "2015-02-26T17:49:51Z",
    "author_association": "MEMBER",
    "body": "Yeah, once again, I don't think it's a problem that docs change on each build. I think it's a problem that we're publishing docs by pushing each build as a git commit - otherwise, the diff wouldn't actually matter.\n\nI would seriously consider your suggestion of replacing commits instead of adding commits in the built docs repo; I don't think that history is useful in any case. It's just a way of getting files to a server, as far as I'm concerned.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/76261041",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-76261041",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 76261041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjYxMDQx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-26T20:15:28Z",
    "updated_at": "2015-02-26T20:15:28Z",
    "author_association": "MEMBER",
    "body": "> -1 on the repr changes. I really don't think we should be changing code because the docs do something unpleasant.\n\nThis is true also on interactive exploration. I did not change reprs  were it was not making  like stdout that have a random id : \n\n```\nIn [4]: ipc.BaseFormatter.pop?\nType: ...\nString form: <function BaseFormatter.pop at 0x10227c400>\nFile:        ~ipython//IPython/core/formatters.py\nDefinition:  ipc.BaseFormatter.pop(self, typ, default=<object object at 0x101707110>)\n```\n\nvs \n\n```\nDefinition:  ipc.BaseFormatter.pop(self, typ, default=<IPython.core.formatters._RaiseKeyError>)\n```\n\nand thinking about it even more it should not be in this particular case `__classe__.__name__` but also hardcoded as _raise_key_error.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/86785728",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-86785728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 86785728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Nzg1NzI4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-27T01:42:52Z",
    "updated_at": "2015-03-27T01:42:52Z",
    "author_association": "MEMBER",
    "body": "Need rebase. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87462174",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87462174",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87462174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDYyMTc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T19:48:00Z",
    "updated_at": "2015-03-29T19:48:00Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg I think you meant to comment here. \n\nIt's not only about docs building. The following is soooooo Usefull.\n\n```\nIn [1]: from jupyter_nbformat import writes\n\nIn [2]: writes?\nSignature: writes(nb, version=<object object at 0x1024b31e0>, **kwargs)\n```\n\nI feel like the following have more sens:\n\n```\nIn [2]: writes?\nSignature: writes(nb, version=<jupyter_nbformat._NO_CONVERT>, **kwargs)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87467822",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87467822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87467822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY3ODIy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T20:14:42Z",
    "updated_at": "2015-03-29T20:14:42Z",
    "author_association": "MEMBER",
    "body": "I find the second to be more confusing as I know what those funny hex\nnumbers are, but have _never_ seen _NO_CONVERT before.\n\nOn Sun, Mar 29, 2015 at 12:48 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> @ellisonbg https://github.com/ellisonbg I think you meant to comment\n> here.\n> \n> It's not only about docs building. The following is soooooo Usefull.\n> \n> In [1]: from jupyter_nbformat import writes\n> \n> In [2]: writes?\n> Signature: writes(nb, version=<object object at 0x1024b31e0>, **kwargs)\n> \n> I feel like the following have more sens:\n> \n> In [2]: writes?\n> Signature: writes(nb, version=<jupyter_nbformat._NO_CONVERT>, **kwargs)\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/7876#issuecomment-87462174.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87471769",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87471769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87471769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDcxNzY5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T20:34:48Z",
    "updated_at": "2015-03-29T20:34:48Z",
    "author_association": "MEMBER",
    "body": "But you have a way now to query what NO_CONVERT  is,  while for the object, you have no clue how to get it...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87488987",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87488987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87488987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDg4OTg3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T22:23:26Z",
    "updated_at": "2015-03-29T22:23:26Z",
    "author_association": "MEMBER",
    "body": "I wonder if we can whip up a `@namerepr` decorator that gives an object/function a repr corresponding to its name.\n\nI might even take the angle brackets away:\n\n```\nSignature: writes(nb, version=jupyter_nbformat._NO_CONVERT, **kwargs)\n```\n\nThe general rule of thumb is that reprs are either roughly a Python expression that will evaluate to the object (give or take relevant imports), or a brief summary of the object, and angle brackets mark the latter. If it's a name in a module, it's roughly eval-able.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87490492",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87490492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87490492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDkwNDky",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T22:28:53Z",
    "updated_at": "2015-03-29T22:28:53Z",
    "author_association": "MEMBER",
    "body": "woulnd just `class NO_CONVERT(object):pass` do the trick ? (Don't\ninstanciate)\n\nOn Sun, Mar 29, 2015 at 3:23 PM, Thomas Kluyver notifications@github.com\nwrote:\n\n> I wonder if we can whip up a @namerepr decorator that gives an\n> object/function a repr corresponding to its name.\n> \n> I might even take the angle brackets away:\n> \n> Signature: writes(nb, version=jupyter_nbformat._NO_CONVERT, **kwargs)\n> \n> The general rule of thumb is that reprs are either roughly a Python\n> expression that will evaluate to the object (give or take relevant\n> imports), or a brief summary of the object, and angle brackets mark the\n> latter. If it's a name in a module, it's roughly eval-able.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/7876#issuecomment-87488987.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87493092",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87493092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87493092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDkzMDky",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T22:59:23Z",
    "updated_at": "2015-03-29T22:59:23Z",
    "author_association": "MEMBER",
    "body": "That gives you a name, though the repr still looks like `<class 'jupyter_nbconvert.NO_CONVERT'>` instead of just `jupyter_nbconvert.NO_CONVERT`. Maybe the answer is to make our inspection machinery smarter about objects in the function signature. It's a pretty good bet that if `type(default_value) is object` you're looking at a sentinel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87497867",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87497867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87497867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk3ODY3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T23:38:26Z",
    "updated_at": "2015-03-29T23:38:33Z",
    "author_association": "MEMBER",
    "body": "``` python\n# no-conversion singleton\nclass Sentinel(object):\n    \"\"\"Prevent nbformat to convert notebooks to most recent version.\n    \"\"\"\n\n    def __init__(self, name):\n        self.name = name\n\n    def __repr__(self):\n        return str(self.__module__)+'.'+self.name\n\nNO_CONVERT = Sentinel('NO_CONVERT')\n```\n\n??\n\nIs it really worth upgrading inspection ? Once we are python3 only we can rely on Emum right ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87503484",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-87503484",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 87503484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTAzNDg0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T00:38:56Z",
    "updated_at": "2015-03-30T00:38:56Z",
    "author_association": "MEMBER",
    "body": "It seems a bit strange to be using Enum for things that only have one possible value, but I suppose it would work. The Sentinel class also works; I wouldn't be against switching to that at least in public APIs like nbconvert.write.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/89005114",
    "html_url": "https://github.com/ipython/ipython/pull/7876#issuecomment-89005114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7876",
    "id": 89005114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDA1MTE0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T18:40:13Z",
    "updated_at": "2015-04-02T18:40:13Z",
    "author_association": "MEMBER",
    "body": "Closing this as superseded by #8192.\n"
  }
]
