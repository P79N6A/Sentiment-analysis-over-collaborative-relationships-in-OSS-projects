[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2056392",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2056392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2056392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTYzOTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-09T22:23:45Z",
    "updated_at": "2011-09-09T22:23:45Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I understand the question.  `self.root.path.isdir()` is equivalent to `os.path.isdir(self.root)`, since `self.root` is a `path` object, that is a convenient wrapper for path strings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2077849",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2077849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2077849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc4NDk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-13T02:49:02Z",
    "updated_at": "2011-09-13T02:49:02Z",
    "author_association": "MEMBER",
    "body": "The semantics of `os.path.isdir` and the `.isdir` method of path objects are identical regarding symlinks, as demonstrated here:\n\n<pre>\nIn [1]: from IPython.external.path import path as Path\n\nIn [2]: Path('adir').isdir()\nOut[2]: True\n\nIn [3]: Path('alink').isdir()\nOut[3]: True\n\nIn [4]: import os\n\nIn [5]: os.path.isdir('adir')\nOut[5]: True\n\nIn [6]: os.path.islink('alink')\nOut[6]: True\n\nIn [7]: d\ntotal 12\ndrwxr-xr-x 2 fperez 4096 2011-09-12 19:46 adir/\nlrwxrwxrwx 1 fperez    4 2011-09-12 19:46 alink -> adir/\n</pre>\n\n\nClosing as this is not a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2102023",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2102023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2102023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDIwMjM=",
    "user": {
      "login": "fungid",
      "id": 1008142,
      "node_id": "MDQ6VXNlcjEwMDgxNDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1008142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fungid",
      "html_url": "https://github.com/fungid",
      "followers_url": "https://api.github.com/users/fungid/followers",
      "following_url": "https://api.github.com/users/fungid/following{/other_user}",
      "gists_url": "https://api.github.com/users/fungid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fungid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fungid/subscriptions",
      "organizations_url": "https://api.github.com/users/fungid/orgs",
      "repos_url": "https://api.github.com/users/fungid/repos",
      "events_url": "https://api.github.com/users/fungid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fungid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T07:56:45Z",
    "updated_at": "2011-09-15T23:24:40Z",
    "author_association": "NONE",
    "body": "I don't know why,but i use winxp sp3 and python 3.2.2, here is what i got:\n\n```\nWARNING: Readline services not available or not loaded.\nWARNING: Proper color support under MS Windows requires the pyreadline library.\nYou can find it at:\nhttp://ipython.scipy.org/moin/PyReadline/Intro\nGary's readline needs the ctypes module, from:\nhttp://starship.python.net/crew/theller/ctypes\n(Note that ctypes is already part of Python versions 2.5 and newer).\n\nDefaulting color scheme to 'NoColor'\nPython 3.2.2 (default, Sep  4 2011, 09:51:08) [MSC v.1500 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.11 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: from IPython.external.path import path as Path\n\nIn [2]: Path('__pycache__').isdir()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nC:\\Python32\\Scripts\\<ipython-input-2-c97e0f958d2b> in <module>()\n----> 1 Path('__pycache__').isdir()\n\nTypeError: _isdir() takes exactly 1 argument (0 given)\n\nIn [3]: Path('__pycache__').isdir('__pycache__')\nOut[3]: True\n\nIn [4]:\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2110353",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2110353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2110353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTAzNTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T23:26:06Z",
    "updated_at": "2011-09-16T02:33:27Z",
    "author_association": "MEMBER",
    "body": "Mmh, that's seriously weird. @takluyver, could you test something like\n\n<pre>\nfrom IPython.external.path import path as Path\nPath('/home').isdir()\n</pre>\n\n\nin your py3 install of ipython.  Because I certainly don't get the above problem in py2, and I don't even see how it could happen in the first place (it's as if isdir wasn't being treated like an instance method).  So I'm wondering if this is a py3-specific issue...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2111236",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2111236",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2111236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTEyMzY=",
    "user": {
      "login": "fungid",
      "id": 1008142,
      "node_id": "MDQ6VXNlcjEwMDgxNDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1008142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fungid",
      "html_url": "https://github.com/fungid",
      "followers_url": "https://api.github.com/users/fungid/followers",
      "following_url": "https://api.github.com/users/fungid/following{/other_user}",
      "gists_url": "https://api.github.com/users/fungid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fungid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fungid/subscriptions",
      "organizations_url": "https://api.github.com/users/fungid/orgs",
      "repos_url": "https://api.github.com/users/fungid/repos",
      "events_url": "https://api.github.com/users/fungid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fungid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T02:20:02Z",
    "updated_at": "2011-09-16T02:20:02Z",
    "author_association": "NONE",
    "body": "Python 3.2.2 (default, Sep  4 2011, 09:51:08) [MSC v.1500 32 bit (Intel)] on win\n32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > from IPython.external.path import path as Path\n> > > Path('c:\\windows').isdir()\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > > TypeError: _isdir() takes exactly 1 argument (0 given)\n> > > Path('c:\\windows').isdir('c:\\windows')\n> > > True\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2113050",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2113050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2113050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTMwNTA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T09:00:19Z",
    "updated_at": "2011-09-16T09:00:19Z",
    "author_association": "MEMBER",
    "body": "<pre>\nIn [3]: Path('/home').isdir()\nOut[3]: True\n</pre>\n\n\nPython 3.2, Ubuntu Natty.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2113128",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2113128",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2113128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTMxMjg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T09:12:32Z",
    "updated_at": "2011-09-16T09:13:37Z",
    "author_association": "MEMBER",
    "body": "@fungid, what do you get if you do this:\n\n```\nIn [11]: Path(\"/home\").isdir\nOut[11]: <bound method path.isdir of path('/home')>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2113245",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2113245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2113245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTMyNDU=",
    "user": {
      "login": "fungid",
      "id": 1008142,
      "node_id": "MDQ6VXNlcjEwMDgxNDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1008142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fungid",
      "html_url": "https://github.com/fungid",
      "followers_url": "https://api.github.com/users/fungid/followers",
      "following_url": "https://api.github.com/users/fungid/following{/other_user}",
      "gists_url": "https://api.github.com/users/fungid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fungid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fungid/subscriptions",
      "organizations_url": "https://api.github.com/users/fungid/orgs",
      "repos_url": "https://api.github.com/users/fungid/repos",
      "events_url": "https://api.github.com/users/fungid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fungid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T09:29:10Z",
    "updated_at": "2011-09-16T09:37:22Z",
    "author_association": "NONE",
    "body": "```\nWARNING: Readline services not available or not loaded.\nWARNING: Proper color support under MS Windows requires the pyreadline library.\nYou can find it at:\nhttp://ipython.scipy.org/moin/PyReadline/Intro\nGary's readline needs the ctypes module, from:\nhttp://starship.python.net/crew/theller/ctypes\n(Note that ctypes is already part of Python versions 2.5 and newer).\n\nDefaulting color scheme to 'NoColor'\nPython 3.2.2 (default, Sep  4 2011, 09:51:08) [MSC v.1500 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.11 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: from IPython.external.path import path as Path\n\nIn [2]: Path('c:\\windows').isdir\nOut[2]: `<function nt._isdir>`\n\nIn [3]: Path('c:\\windows').isdir()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nC:\\Python32\\Scripts\\<ipython-input-3-e7e1cd734888> in <module>()\n----> 1 Path('c:\\windows').isdir()\n\nTypeError: _isdir() takes exactly 1 argument (0 given)\n\nIn [4]:\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2113372",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2113372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2113372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTMzNzI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T09:57:38Z",
    "updated_at": "2011-09-16T09:58:26Z",
    "author_association": "MEMBER",
    "body": "OK, tracked it down. For Python 3.2.2, the implementation of `os.path.isdir` on Windows has changed to a built-in function. It seems that when you assign a built-in function to a class variable (i.e. the class definition has `isdir = os.path.isdir`), it doesn't get bound to class instances. I think we'll just have to produce a tiny wrapper method for the Path class:\n\n`def isdir(s): return os.path.isdir(s)`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2116881",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2116881",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2116881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY4ODE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T17:33:28Z",
    "updated_at": "2011-09-16T17:33:28Z",
    "author_association": "MEMBER",
    "body": "Feel free to make that tiny change in the 'if py3:' branch of the platform-specific patches.  Since this is only a problem for the specific case when `isdir` is being assigned to an object instance (a somewhat unusual case), it should be only used for the `path.py` file, not in general.  In fact, the patch should be applied to `path.py` itself, so it doesn't pollute the rest of the code with a somewhat unidiomatic trick that's unnecessary in normal cases.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2117142",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2117142",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2117142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTcxNDI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T17:56:21Z",
    "updated_at": "2011-09-16T17:56:21Z",
    "author_association": "MEMBER",
    "body": "I was planning to apply it in `path.py`. But I wonder if I should do it for all Python versions - I think it may have been introduced in a bugfix Python 3 update, so it's possible it might be backported to Python 2.7.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2117266",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2117266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2117266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTcyNjY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T18:08:07Z",
    "updated_at": "2011-09-16T18:08:07Z",
    "author_association": "MEMBER",
    "body": "I would just replace the `isdir=os.path.isdir` with `def isdir(self): return os.path.isdir(self)`, and probably follow suit with other similarly defined methods.  It just seems like the assumption that you can assign os.path.foo as a method is not entirely safe.\n\nI don't see any reason to make it conditional, other than adding complexity and maximizing the probability that we see the issue again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2117316",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2117316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2117316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTczMTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T18:13:55Z",
    "updated_at": "2011-09-16T18:13:55Z",
    "author_association": "MEMBER",
    "body": "I think that approach is sound.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2117694",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2117694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2117694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTc2OTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T18:57:40Z",
    "updated_at": "2011-09-16T19:21:16Z",
    "author_association": "MEMBER",
    "body": "This is one part of Python's object model that bothers me a lot:\n'builtin function' is actually just (I think) \"implemented in C\".  And\nthe binding semantics of C functions is different from that of\nPython-implemented ones, as we see here.\n\nConsider this little Python snippet:\n\n```\nfrom __future__ import print_function\n\ndef _f(*args):\n    print('my args:', args)\n\nclass C(object):\n    p = print\n    f = _f\n\nc = C()\nprint(\"Calling a python-defined function bound to a class\")\nc.f()\nc.f('one')\n\nprint(\"\\nNow calling a builtin - print\")\nc.p()\nc.p('one')\n```\n\nIf we run it (same results in python 2.6-3.2), we get:\n\n<pre>\nlongs[~]> python funmeth.py\nCalling a python-defined function bound to a class\nmy args: (<__main__.C object at 0x7fdf4129c510>,)\nmy args: (<__main__.C object at 0x7fdf4129c510>, 'one')\n\nNow calling a builtin - print\n\none\n</pre>\n\n\nThere, it's very obvious that C- and python-defined functions bind\ndifferently to classes.  That's annoying, because it means that you\ncan't modify your implementation transparently by switching from a\npure python to a c/cython version without an extra wrapping layer.\n\nI don't know why this is the case, but I do find it really annoying.\n\nIn any case, +1 to Min's suggestion, let's go with that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2117887",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2117887",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2117887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTc4ODc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T19:19:25Z",
    "updated_at": "2011-09-16T19:19:25Z",
    "author_association": "MEMBER",
    "body": "I did much the same test, and I agree with you - it should be transparent whether a function is written in Python or C. I'll implement Min's suggestion, if no-one else is already doing it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2117908",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2117908",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2117908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTc5MDg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T19:21:29Z",
    "updated_at": "2011-09-16T19:21:29Z",
    "author_association": "MEMBER",
    "body": "Great, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2118250",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2118250",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2118250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTgyNTA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T20:00:21Z",
    "updated_at": "2011-09-16T20:00:21Z",
    "author_association": "MEMBER",
    "body": "Done and dusted. Forwarded the changes upstream too: https://github.com/dottedmag/path.py/pull/11\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2118294",
    "html_url": "https://github.com/ipython/ipython/issues/737#issuecomment-2118294",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/737",
    "id": 2118294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTgyOTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T20:05:22Z",
    "updated_at": "2011-09-16T20:05:22Z",
    "author_association": "MEMBER",
    "body": "Great, good karma for pushing upstream.  Thanks!\n"
  }
]
