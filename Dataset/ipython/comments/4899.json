[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33477859",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33477859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33477859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc3ODU5",
    "user": {
      "login": "naquad",
      "id": 20373,
      "node_id": "MDQ6VXNlcjIwMzcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naquad",
      "html_url": "https://github.com/naquad",
      "followers_url": "https://api.github.com/users/naquad/followers",
      "following_url": "https://api.github.com/users/naquad/following{/other_user}",
      "gists_url": "https://api.github.com/users/naquad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naquad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naquad/subscriptions",
      "organizations_url": "https://api.github.com/users/naquad/orgs",
      "repos_url": "https://api.github.com/users/naquad/repos",
      "events_url": "https://api.github.com/users/naquad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naquad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T13:30:59Z",
    "updated_at": "2014-01-28T13:30:59Z",
    "author_association": "NONE",
    "body": "Closed why?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33477890",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33477890",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33477890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc3ODkw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T13:31:20Z",
    "updated_at": "2014-01-28T13:31:20Z",
    "author_association": "MEMBER",
    "body": "QtConsole cannot block, this is a known limitation of using qt.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33477975",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33477975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33477975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc3OTc1",
    "user": {
      "login": "naquad",
      "id": 20373,
      "node_id": "MDQ6VXNlcjIwMzcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naquad",
      "html_url": "https://github.com/naquad",
      "followers_url": "https://api.github.com/users/naquad/followers",
      "following_url": "https://api.github.com/users/naquad/following{/other_user}",
      "gists_url": "https://api.github.com/users/naquad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naquad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naquad/subscriptions",
      "organizations_url": "https://api.github.com/users/naquad/orgs",
      "repos_url": "https://api.github.com/users/naquad/repos",
      "events_url": "https://api.github.com/users/naquad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naquad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T13:32:23Z",
    "updated_at": "2014-01-28T13:32:23Z",
    "author_association": "NONE",
    "body": "Any alternative to %edit? I didn't find anything.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33477992",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33477992",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33477992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc3OTky",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T13:32:37Z",
    "updated_at": "2014-01-28T13:32:37Z",
    "author_association": "MEMBER",
    "body": "More particularly there is no way to know when you would be done editting code on the external edittor, so no way to know when to run the code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33478021",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33478021",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33478021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc4MDIx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T13:33:04Z",
    "updated_at": "2014-01-28T13:33:04Z",
    "author_association": "MEMBER",
    "body": "Use %edit and %run, edit to open the file, %run to run it\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33478134",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33478134",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33478134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDc4MTM0",
    "user": {
      "login": "naquad",
      "id": 20373,
      "node_id": "MDQ6VXNlcjIwMzcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naquad",
      "html_url": "https://github.com/naquad",
      "followers_url": "https://api.github.com/users/naquad/followers",
      "following_url": "https://api.github.com/users/naquad/following{/other_user}",
      "gists_url": "https://api.github.com/users/naquad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naquad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naquad/subscriptions",
      "organizations_url": "https://api.github.com/users/naquad/orgs",
      "repos_url": "https://api.github.com/users/naquad/repos",
      "events_url": "https://api.github.com/users/naquad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naquad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T13:34:38Z",
    "updated_at": "2014-01-28T13:34:38Z",
    "author_association": "NONE",
    "body": "Fork process, add PID to file-PID dictionary, register SIGCHLD handler, execute code when it occurs? Or is it not that simple?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33480211",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33480211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33480211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDgwMjEx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T14:02:27Z",
    "updated_at": "2014-01-28T14:02:27Z",
    "author_association": "MEMBER",
    "body": "99% of the time the editor command is non-bloking the forked processed that runned the editor command will die immediately and trigger code run even before you had chance to execute. Agreed some editors have an additional blocking option, which might help, the you loose the use of gui which most of the time is you like something non-bloking. \n\nThen you have the fact that the editor process would be forked from the kernel and not the frontend. Which is not what most people would like. Indeed when you exit your editor you want your editied tex (most of the time) to appear in the frontend.\n\nTechnically,`%edit` is not even the same magic in qtconsole on plain IPython (cf #4513 and #3030), so technically we could have a special handeling of code that will do something on SIGCHLD, but this would work from some edittors and not other, which will just push the problem further. Of course you could then write an edittor plugin that make your favorite edittot works with this version of %edit, but then why not use the zmq binding to just drectly connect like IPython and execute code like Sublime Vim and Emacs are capable to do ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33482550",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33482550",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33482550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDgyNTUw",
    "user": {
      "login": "naquad",
      "id": 20373,
      "node_id": "MDQ6VXNlcjIwMzcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naquad",
      "html_url": "https://github.com/naquad",
      "followers_url": "https://api.github.com/users/naquad/followers",
      "following_url": "https://api.github.com/users/naquad/following{/other_user}",
      "gists_url": "https://api.github.com/users/naquad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naquad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naquad/subscriptions",
      "organizations_url": "https://api.github.com/users/naquad/orgs",
      "repos_url": "https://api.github.com/users/naquad/repos",
      "events_url": "https://api.github.com/users/naquad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naquad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T14:29:36Z",
    "updated_at": "2014-01-28T14:29:36Z",
    "author_association": "NONE",
    "body": "First of all: the use case.\n\nI need to edit a file and run/load code in IPython context that I already have. Not vice versa. If I would need to invoke/interact with IPython from editor I would do so.\n\nAbout editor going to background: too farfetched. **Most** of the editors have switch to stay in foreground. If one doesn't then we can easily make a shell wrapper that'll use wait(1) . Other use cases like single editor instance controlled via some RPC mechanism (like DBus) is users problem. The only thing IPython must know is forking a process and executing code after child exists. Thats it.\n\n\"why not use the zmq binding to just drectly connect like IPython and execute code like Sublime Vim and Emacs are capable to do\" - because again I have a context in IPython. With %edit it is convinient and easy, with all those bridges it is a head ache in this particular use case (which is quiet common).\n\nBottom line: %edit is broken and won't be fixed.\n\nBut there's one thing: \"Of course you could then write an edittor plugin that make your favorite edittot works with this version of %edit\" - yes, I want to do that. Could you please point me to docs that will guide me through making such plugin? Thank you.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33487029",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33487029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33487029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDg3MDI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T15:15:35Z",
    "updated_at": "2014-01-28T15:15:35Z",
    "author_association": "MEMBER",
    "body": "> I need to edit a file and run/load code in IPython context that I already have. Not vice versa. If I would need to invoke/interact with IPython from editor I would do so.\n\nI might miss something, but the `%edit/%run` couple will work, and you will not even have to quit your editor to run the modified file. (you might need to use -i for run though) \n\nMost editor have a switch, but most user don't know that, and by doing edit, in most case, we would execute user file immediately which was not their intent.\n\n> \"Of course you could then write an edittor plugin that make your favorite edittor works with this version of %edit\"\n\nBy \"this\" I was referring to the %edit that would listen for SIGCHILD, sorry my english is not perfect.\n\nIf you like to give a try at defining your own %edit you can have a look at how to write your own magic [here](http://nbviewer.ipython.org/github/ipython/ipython-in-depth/blob/master/notebooks/Customizing%20IPython%20-%20Magics.ipynb#Defining-your-own-magic) you have possibility to define statefull magics using a [Magic class](https://github.com/ipython/ipython/blob/master/IPython/core/magics/script.py#L75) (which would automatically hook into IPython config system), and the \"normal\" edit magic is [here](https://github.com/ipython/ipython/blob/master/IPython/core/magics/code.py#L492).\n\nKeep in mind that things like [vim-ipython](https://github.com/ivanov/vim-ipython) can start editing a file and (should be able to) connect to an existing kernel. Hence you could use this to open a file using vim and execute it in current IPython context. Tricky bit would be to pass the correct connection info to the editor when multiple kernels are running. I'm wondering if we couldn't have a `{connect_info_file}` template for the command that invoke the editor.\n\nYou also have [the api doc](http://ipython.org/ipython-doc/rel-1.1.0/api/generated/IPython.core.magic.html#IPython.core.magic.Magics) and the part on [extensions](http://ipython.org/ipython-doc/rel-1.1.0/config/extensions/index.html) could also be helpfull. \n\nYou can also jump on [help chatroom](http://www.hipchat.com/ghSp7E1uY) to have faster back and forth.\nIf we are not in help room, ping `@all`.\n\nI think I gave you the basic to get started. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33488137",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33488137",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33488137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDg4MTM3",
    "user": {
      "login": "naquad",
      "id": 20373,
      "node_id": "MDQ6VXNlcjIwMzcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naquad",
      "html_url": "https://github.com/naquad",
      "followers_url": "https://api.github.com/users/naquad/followers",
      "following_url": "https://api.github.com/users/naquad/following{/other_user}",
      "gists_url": "https://api.github.com/users/naquad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naquad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naquad/subscriptions",
      "organizations_url": "https://api.github.com/users/naquad/orgs",
      "repos_url": "https://api.github.com/users/naquad/repos",
      "events_url": "https://api.github.com/users/naquad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naquad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T15:25:11Z",
    "updated_at": "2014-01-28T15:25:11Z",
    "author_association": "NONE",
    "body": "> I might miss something, but the %edit/%run couple will work, and you will not even have to quit your editor to run the modified file. (you might need to use -i for run though)\n\nand I'll need to type in something like `/tmp/ipython_edit_ksbjli.py`...\n\n> Most editor have a switch, but most user don't know that, and by doing edit, in most case, we would execute user file immediately which was not their intent.\n\nI honestly doubt that people using IPython have skill level less than \"almost a hacker\" hence they know their software.\n\n> If you like to give a try at defining your own %edit you can have a look at how to write your own magic here you have possibility to define statefull magics using a Magic class (which would automatically hook into IPython config system), and the \"normal\" edit magic is here.\n\nThank you. Will definitely try it.\n\n> Keep in mind that things like vim-ipython can start editing a file and (should be able to) connect to an existing kernel. Hence you could use this to open a file using vim and execute it in current IPython context. Tricky bit would be to pass the correct connection info to the editor when multiple kernels are running. I'm wondering if we couldn't have a {connect_info_file} template for the command that invoke the editor.\n\nVIM-IPython doesn't work for me. Throws errors on start up.\nI plan to pass connection information via environment variable. Still I can't figure out how to get current connection info :\\\n\n> I think I gave you the basic to get started.\n\nYes, thank you very much. I hope to hack something for my use case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33511596",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33511596",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33511596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTExNTk2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T19:01:10Z",
    "updated_at": "2014-01-28T19:01:10Z",
    "author_association": "MEMBER",
    "body": "> and I'll need to type in something like /tmp/ipython_edit_ksbjli.py...\n\nTrue, we coudl have `%edit`return the filename so that you could assign it to a variable and call `%run` on this variable. \n\n> I honestly doubt that people using IPython have skill level less than \"almost a hacker\" hence they know their software.\n\nWe have a huge surge in python beginner, scientist,..and other that sometime are doing their first program using IPython and even don't understand difference between Python and IPython.\n\n> Still I can't figure out how to get current connection info\n\n@ivanov can help :-) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33512590",
    "html_url": "https://github.com/ipython/ipython/issues/4899#issuecomment-33512590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4899",
    "id": 33512590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTEyNTkw",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-28T19:10:06Z",
    "updated_at": "2014-01-28T19:10:06Z",
    "author_association": "MEMBER",
    "body": "> @ivanov can help :-)\n\nThanks, Matthias. @naquad - I created ivanov/vim-ipython#84 where you can tell me about what the error message you're seeing with vim-ipython, so let's continue that part of this conversation there.\n"
  }
]
