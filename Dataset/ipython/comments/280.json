[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/798009",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-798009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 798009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5ODAwOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T17:41:46Z",
    "updated_at": "2011-02-22T17:41:46Z",
    "author_association": "MEMBER",
    "body": "Changed the format check to `except Exception`, and check specifically for `ValueError,AssertionError` in the integer branch.\n\nAlso changed the exception that actually raises from `TypeError` to `ValueError`, since I think that's more accurate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/798171",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-798171",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 798171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5ODE3MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T18:30:31Z",
    "updated_at": "2011-02-22T18:30:31Z",
    "author_association": "MEMBER",
    "body": "OK, looks good to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/798506",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-798506",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 798506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5ODUwNg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T19:38:45Z",
    "updated_at": "2011-02-22T19:38:45Z",
    "author_association": "MEMBER",
    "body": "Idea and code looks good, but we shouldn't commit this without any kind of tests.  I realize that in this case, a good example will likely make a doctest brittle, hence the @skip_doctest is OK.  But _some_ kind of test is necessary.  An easy solution would be to make a simple doctest-only test, along the lines of the doctest_foo() tests in test_magic.py (note that those _must_ be called doctest_foo(), and should be docstring-only functions with no code).\n\nI also have another thought worth pausing on for a second: I'm concerned about accreting more functionality in purely magics, instead of in library code that's easier to use/test on its own, aside from the magic machinery and calling syntax.  In the long run, I think we should strive to make most magics be very small wrappers that process dashed command-line flags (for convenient interactive use) and do little else beyond creating a dict of flags and calling some underlying routine, be it something standalone or some method of the various ipython objects lying around.\n\nAfter we flush all the work we have on 0.11, one of the big pieces of cleanup we'll need to do is the magic system, so I think the less we continue to grow it in this direction, the easier our cleanup will be.\n\nI have to say that I'm the most guilty party on all of this: the old magics like %run and %edit are a complete nightmare.  But even if it will take us a while to clean those up, we should try to write new code in a slightly more testable manner.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/798767",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-798767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 798767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5ODc2Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T20:45:14Z",
    "updated_at": "2011-02-22T20:45:14Z",
    "author_association": "MEMBER",
    "body": "I was actually trying to use the examples for a doctest, but the test runner seems to ignore or reinitialize the DisplayFormatter for some reason, and I couldn't figure it out.  Do you know why this would be?\n\nYour comment about not putting real code in the magics makes perfect sense.  Should I then place the implementation inside PlainTextFormatter (likely into a configurable Trait, like `float_precision`), and replace the magic with a very thin wrapper on that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/798835",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-798835",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 798835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5ODgzNQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T21:02:14Z",
    "updated_at": "2011-02-22T21:02:14Z",
    "author_association": "MEMBER",
    "body": "No, no idea what can be going on with the doctest, sorry.  All the more reason to make it a more library-style piece we can test functionally, without relying on the running environment.  Still, I know we need to clean and simplify all that so the test environment is as normal as possible.  I've made some improvements, but there's a ton more to do.\n\nYes, that sounds to me as good a place as any to put the implementation in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/799422",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-799422",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 799422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTQyMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T23:15:58Z",
    "updated_at": "2011-02-22T23:15:58Z",
    "author_association": "MEMBER",
    "body": "changes made.\n- moved content of `%precision` into `PlainTextFormatter_float_precision_changed` configurable trait\n- `%precision` is now 2 lines that simply sets `PTF.float_precision`\n- added doctests for `%precision`\n- added tests for `PTF.float_precision`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/799447",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-799447",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 799447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTQ0Nw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-22T23:22:35Z",
    "updated_at": "2011-02-22T23:22:35Z",
    "author_association": "MEMBER",
    "body": "Thanks!  Other than the trivial ordering of the imports, merge away.  Great job.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/799588",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-799588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 799588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTU4OA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-23T00:07:52Z",
    "updated_at": "2011-02-23T00:07:52Z",
    "author_association": "MEMBER",
    "body": "Okay, thanks.\n\nI'll go a head and merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/799602",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-799602",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 799602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTYwMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-23T00:13:38Z",
    "updated_at": "2011-02-23T00:13:38Z",
    "author_association": "MEMBER",
    "body": "reorder stdlib imports\n\nclosed by 8e2b82571f5767382252e1eb1ac47583e66804ae\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26680690",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-26680690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 26680690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgwNjkw",
    "user": {
      "login": "rominf",
      "id": 3449635,
      "node_id": "MDQ6VXNlcjM0NDk2MzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rominf",
      "html_url": "https://github.com/rominf",
      "followers_url": "https://api.github.com/users/rominf/followers",
      "following_url": "https://api.github.com/users/rominf/following{/other_user}",
      "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rominf/subscriptions",
      "organizations_url": "https://api.github.com/users/rominf/orgs",
      "repos_url": "https://api.github.com/users/rominf/repos",
      "events_url": "https://api.github.com/users/rominf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rominf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T19:38:37Z",
    "updated_at": "2013-10-20T19:38:37Z",
    "author_association": "NONE",
    "body": "I try to teach my friend to make scientific computations with IPython Qt console (pylab mode). As a programmer I understand difference between `float` and `sympy.core.numbers.Float` and why printing of some numbers changes after execution:\n\n``` python\n%precision 3\n```\n\nand some do not, for example:\n\n``` python\nvar('x')\nsolve(x**2-2,x)[0].n()\n```\n\nBut it's hard to describe the difference to newbie. Calling `n` method with the same argument isn't pretty solution.\n\nI think `%precision` function should change printing precision for Sympy's floats too.\n\nBy the way, I didn't find method for changing printing precision for sympy numbers at all. As I understood after 10-minute googling I should use sympy's printer classes, but that's very unintuitive!\n\nPS: IMHO, problems appears because of 3 different `float` types exists: native Python's `float`, Numpy's `float`, Sympy's `float` (as I understood it uses mpmath for numbers, _sigh_). Are there chances for unifying `floats` to at most 2 different `float` (native and _mathematical_)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26683244",
    "html_url": "https://github.com/ipython/ipython/pull/280#issuecomment-26683244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/280",
    "id": 26683244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgzMjQ0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T21:31:03Z",
    "updated_at": "2013-10-20T21:31:03Z",
    "author_association": "MEMBER",
    "body": "numpy actually handles its own representations of floats, the `%precision` magic just calls the numpy api function to change this (`numpy.set_printoptions`). If sympy has a similar API function, we can do the same, but display precision is more subtle in sympy.\n"
  }
]
