[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1398329",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1398329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1398329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTgzMjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-19T19:19:25Z",
    "updated_at": "2011-06-19T19:19:25Z",
    "author_association": "MEMBER",
    "body": "I'm still getting output in the input area when I do:\n\n``` python\nimport threading, sys, time\ndef printer():\n    time.sleep(2)\n    print 'hello'\n    sys.stdout.flush()\n\nthreading.Thread(target=printer).start()\n```\n\nThen 'hello\\n' gets appended to my next input line.\n\nIs it not possible to write directly into an existing `<div>`?  I don't know enough about how the HTML of the rich widget works, but it seems to me that a structure like:\n\n``` html\n<div id=\"<exec count>\">\n    <div class=\"input\">\n        In []....\n    </div>\n    <div class=\"output\">\n        Out[]...\n    </div>\n</div>\n```\n\nwould allow inserting text into the right field to be easier, and ensure that it never goes into an input area.  The output messages do contain information about the parent message, so they can know which field they belong to.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1403229",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1403229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1403229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDMyMjk=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T15:01:20Z",
    "updated_at": "2011-06-20T15:02:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk I ran that code five times and it worked for me each time. As a sanity check, can you confirm that it is really broken for you?\n\nAs to the larger issue of implementation, it is not possible to write directly into a `<div>`. I would have to extract a subsection of the QTextDocument as HTML, modify it, and replace it. This combined with that fact that the `<div class=\"input\">` tags are specific to the IPython-widget makes me reluctant to attempt this approach. I fear it is actually more complex.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1404042",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1404042",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1404042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQwNDI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T16:57:40Z",
    "updated_at": "2011-06-20T16:57:40Z",
    "author_association": "MEMBER",
    "body": "Crap, sorry for the false alarm.  I was using master when I ran the test before.  It is indeed fixed, and well behaved.\n\nAh, I didn't realize that the Qt Widgets were only a sad imitation of a real HTML viewer, and don't support super basic features like DOM traversal or in-place modification.  Fair enough, then.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1404092",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1404092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1404092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQwOTI=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T17:05:20Z",
    "updated_at": "2011-06-20T17:05:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the Qt guys consider QTextEdit's use of (a subset of) HTML to be an implementation detail. They needed to support rich text, so they went with HTML, but they expose very, very little of the machinery behind it.\n\nQt is a nice toolkit, but there are definitely times when I am frustrated by its opaqueness.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1405343",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1405343",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1405343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDUzNDM=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T20:03:29Z",
    "updated_at": "2011-06-20T20:03:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez I know this issue is of interest to you. If you have a few spare cycles, would you mind trying this branch out? If not, that's fine, and I'll go ahead and merge it (barring any other objections).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1406492",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1406492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1406492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDY0OTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T22:49:44Z",
    "updated_at": "2011-06-20T22:49:44Z",
    "author_association": "MEMBER",
    "body": "testing it now, I see some weirdness... I have to flush something urgent now, in a couple of hours I'll have more feedback.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1406612",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1406612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1406612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDY2MTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T23:10:03Z",
    "updated_at": "2011-06-20T23:10:03Z",
    "author_association": "MEMBER",
    "body": "@epatters, I see this kind of misbehavior:\n\n<pre>\nIn [2]: debug\n> /home/fperez/scratch/error.py(45)RampNum()\n     44     step = (end-start)/(size-1-tmp)\n---> 45     result[:] = arange(size)*step + start\n     46 \n\n6\n\nipdb> !size\n</pre>\n\n\nwhat happened was that I typed `!size` and the 6 appeared before my own prompt.\n\nWe definitely want the output to be written before the _next_ input prompt, but in this case it seems to be moved over above the _current_ one.  I don't know if the logic to disambiguate those two cases is problematic, but right now the behavior seems somewhat erratic and inconsistent:\n\n<pre>\nipdb> print 1\n1\n[ 0.2  0.2  0.2  0.2  0.2  0.2  0.2]\n\nipdb> print step\n</pre>\n\n\nthe `print 1` produced the `1` below the `print` (as expected), but the `print step` gave the output above the `print` (wrong). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1407161",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1407161",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1407161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDcxNjE=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-21T01:09:34Z",
    "updated_at": "2011-06-21T01:09:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, blast. I'll look into that tomorrow.\n\nThanks for trying it out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1413973",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1413973",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1413973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTM5NzM=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-21T21:22:59Z",
    "updated_at": "2011-06-21T21:22:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez Should be fixed now. I can use %debug successfully on this branch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1414185",
    "html_url": "https://github.com/ipython/ipython/pull/526#issuecomment-1414185",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/526",
    "id": 1414185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTQxODU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-21T21:54:08Z",
    "updated_at": "2011-06-21T21:54:08Z",
    "author_association": "MEMBER",
    "body": "Looks perfect to me, I can't seem to find a way to break it, while it was trivial to cause glitches before.\n\nMerge away!\n\nMany, many thanks, this was really a critical piece of the usability puzzle for the qt console.  Excellent work.\n"
  }
]
