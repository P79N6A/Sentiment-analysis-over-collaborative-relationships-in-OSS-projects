[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2390143",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2390143",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2390143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAxNDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T01:00:50Z",
    "updated_at": "2011-10-13T01:00:50Z",
    "author_association": "MEMBER",
    "body": "Thanks for pounding on this one!  BTW, I'd like to change the name of the client from `zmq` (which is just an internal implementation detail) to `console`, which better follows `qtconsole`, and is a more user-informative name.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2390213",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2390213",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2390213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAyMTM=",
    "user": {
      "login": "omazapa",
      "id": 275148,
      "node_id": "MDQ6VXNlcjI3NTE0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/275148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omazapa",
      "html_url": "https://github.com/omazapa",
      "followers_url": "https://api.github.com/users/omazapa/followers",
      "following_url": "https://api.github.com/users/omazapa/following{/other_user}",
      "gists_url": "https://api.github.com/users/omazapa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omazapa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omazapa/subscriptions",
      "organizations_url": "https://api.github.com/users/omazapa/orgs",
      "repos_url": "https://api.github.com/users/omazapa/repos",
      "events_url": "https://api.github.com/users/omazapa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omazapa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T01:14:26Z",
    "updated_at": "2011-10-13T01:14:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks, great!!!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2392566",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2392566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2392566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI1NjY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T08:50:28Z",
    "updated_at": "2011-10-13T08:50:28Z",
    "author_association": "MEMBER",
    "body": "I think I'd given it the name `zmqterminal` at some point, to distinguish it from the standard single-process terminal interface. I don't know what's the best way to make that distinction clear.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2397237",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2397237",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2397237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTcyMzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T17:08:15Z",
    "updated_at": "2011-10-13T17:08:15Z",
    "author_association": "MEMBER",
    "body": "My reasoning was: `ipython` is the simple, one-process call, by historic precedent in terminal. And `ipython <X>` refers to all two process clients, for `<X>` equal to:\n- `console`: regular text console.\n- `qtconsole`: gui\n- `notebook`: web notebook right now.\n- `other future ones`: if they develop, we'll see.\n\nBut at least that gives a clear pattern that should be easy for users to understand/remember.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2528793",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2528793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2528793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjg3OTM=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-26T10:22:00Z",
    "updated_at": "2011-10-26T10:22:00Z",
    "author_association": "MEMBER",
    "body": "Progress report so far:\n1. refactored Qt-based Console and the terminal-based Console (which used to be called 'zmq') using one common mixin that both apps now utilize - both seem to work, though I need to do a more thorough job of flag and alias swallowing.\n2. renamed the ipython subcommand to 'console' - added some basic docs so it shows up in `ipython --help` and does the right thing for `ipython console -h`\n3. handle the interrupt handler for instances which started up with `--existing` flag in the same way as they're treated in qtconsole (print a message saying \"Kernel process is either remote or unspecified. Cannot interrupt.\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2532815",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2532815",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2532815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI4MTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-26T16:43:52Z",
    "updated_at": "2011-10-26T16:43:52Z",
    "author_association": "MEMBER",
    "body": "awesome!  I'll look through it later.  For flags&aliases, I recommend looking at IPython.core.shellapp, and its two derivatives: IPKernelApp and TerminalIPythonApp.  That mixin is actually less complete than what you put together, only defining the unique elements, and letting the descendants assemble the various components.  I don't know which approach is better.\n\nIt would be great if you can split the swallow_args into just a function - it really should just be a single function with three args:\n\n```\nnew_argv = strip_argv(argv, aliases=aliases, flags=flags)\n```\n\nsince it's generically useful for any app that starts one or more others in a subprocess, but you want to be able to specify command-line args for both (e.g. I have designs on using it in ipcluster, so that some flags can be passed on to ipcontroller/ipengine).\n\nI don't exactly know where that should go, though.  Maybe utils.process?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2533029",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2533029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2533029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMwMjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-26T17:00:22Z",
    "updated_at": "2011-10-26T17:00:22Z",
    "author_association": "MEMBER",
    "body": "And if you could figure out how to cleanup connection files on sigint, that would be great.  I think you are better at signal-handling than I am.  The connection-file cleanup is handled in the [`KernelManager.__del__`](https://github.com/ipython/ipython/blob/master/IPython/zmq/kernelmanager.py#L737) method.  The important thing is to _not_ cleanup connection files that you didn't write.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2549295",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2549295",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2549295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDkyOTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-27T20:57:02Z",
    "updated_at": "2011-10-27T20:57:02Z",
    "author_association": "MEMBER",
    "body": "I'm pretty sure I've figured out the connection file cleanup, I'll push that shortly, unless you are working on it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2550200",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2550200",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2550200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTAyMDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-27T22:15:21Z",
    "updated_at": "2011-10-27T22:15:21Z",
    "author_association": "MEMBER",
    "body": "okay, connection file cleanup is definitely better now.  ctrl-C killed qtconsole will cleanup all of its files, and the terminal app will also get it done under normal circumstances.  Obviously unclean shutdown (term) doesn't allow for cleanup.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2551722",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2551722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2551722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTE3MjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-28T01:52:46Z",
    "updated_at": "2011-10-28T01:52:46Z",
    "author_association": "MEMBER",
    "body": "flags and aliases are working now, as well.\n\nThe main things that remain are:\n- a few renames\n  - We need to make sure that the mixin's imports don't break tests or anything if zmq, etc. is not installed.\n  - I'm not certain about the mixin class name.  If it were to match the ShellApp,\n    which is our mixin for applications that start an InteractiveShell, it would \n    probably be KernelManagerApp, as it is a mixin for apps that start a \n    KernelManager, but ConsoleApp may make more sense when it shows up in config.\n  - frontend/terminal/zmqterminal -> frontend/terminal/console, if I understand our plans correctly\n- update docs, to take note of the new client\n- Figure out how to get the connection message from the kernel to _not_ show up in the first prompt. Perhaps\n  it should not be coming from the kernel, rather the frontend should print it,\n  so that it can be managed properly. Otherwise, a `time.sleep(1)` is the only available answer.\n- add a way to kill the kernel.  I don't know if you can bind keys to arbitrary python functions with readline,\n  but if not, we need a frontend-only magic or something.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2620602",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2620602",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2620602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjA2MDI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-03T17:59:10Z",
    "updated_at": "2011-11-03T17:59:10Z",
    "author_association": "MEMBER",
    "body": "Getting pretty close.  I just fixed a few things regarding various message cases, signaling, startup, and unresponsive kernels, and moved the new code into frontend.terminal.console.\n\nAnother thing that needs to be done: port the multiline history changes in shell.interact, once #929 is merged.\n\nI did have to fix two things outside the new code:\n- the heartbeat channel had various logical errors that come up when using the blockingKM, with its shorter poll (which I still had to lengthen to 1s)\n- zmqshell clobbered `page.page` at _import_, which meant that any frontends that import the class for config reference will be operating in a universe without a functional page command.  This has been moved to shell instantiation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2880404",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2880404",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2880404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA0MDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T07:38:22Z",
    "updated_at": "2011-11-26T07:38:22Z",
    "author_association": "MEMBER",
    "body": "update on recent changes:\n- renames have been done (it is now `IPython.frontend.consoleapp.IPythonConsoleApp`)\n- connection message does not interfere with prompt\n\nStill todo:\n- document new interface\n- kill kernel from frontend\n\nafter IRC discussion with @fperez, the idea is:\n\nfrontend magics can be accessed exclusively as `%foo bar`, and these should be checked by simple regexp in run_cell, to bypass relaying to the kernel. \n\nFor instance, this could be handled with `%kernel kill` / `%kernel restart` or similar.\n\nSimple `%kernel?` should access a helpstring, but need not trigger full `pinfo` behavior.\nImprovements affecting qtconsole or other code:\n- heartbeat logic fixed / improved\n- much more likely to cleanup connection files\n- swallow_argv is a standalone function\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2880650",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2880650",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2880650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA2NTA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T08:56:44Z",
    "updated_at": "2011-11-26T08:56:44Z",
    "author_association": "MEMBER",
    "body": "Here's a quick stab at the right regexp for this:\n\n``` python\nimport re\n\nnames = ['kernel', 'edit']\npattern = '^%(?P<name>' + '|'.join(names) + ') (?P<args>.*\\S)\\s+'\nmagic_re = re.compile(pattern)\n\nline = '%kernel a1 a2  '\n\nm = magic_re.match(line)\nprint 'pattern:', pattern\nif m:\n    print 'name:', m.group('name')\n    print 'args:', m.group('args')\n```\n\nWe'll also need to add the logic to catch ? and ??, but that should be about it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2891930",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2891930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2891930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTE5MzA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T02:10:28Z",
    "updated_at": "2011-11-28T02:10:28Z",
    "author_association": "MEMBER",
    "body": "I fixed a couple of small problems arising from my renaming of lib.pylabtools, but I'm still getting an error in the test suite:\n\n```\n======================================================================\nERROR: Failure: ImportError (cannot import name ClientCompleter2p)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/loader.py\", line 390, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 39, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 86, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/console/frontend.py\", line 33, in <module>\n    from IPython.frontend.terminal.console.completer import ClientCompleter2p\nImportError: cannot import name ClientCompleter2p\n\n----------------------------------------------------------------------\n```\n\nI looked at that file, and there's nothing named `ClientCompleter2p` in there, so I'm kind of puzzled as to what happened.  A forgotten commit?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2891952",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2891952",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2891952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTE5NTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T02:13:09Z",
    "updated_at": "2011-11-28T02:13:09Z",
    "author_association": "MEMBER",
    "body": "In actual testing, I noticed that `%debug` isn't working right, b/c of what appears to be a buffering issue.  If I issue a few `l` commands, nothing gets printed (though prompts do come out fine).  Once I quit the debugger, all the buffered listings show up at once.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2906483",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2906483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2906483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDY0ODM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T20:10:04Z",
    "updated_at": "2011-11-28T20:10:04Z",
    "author_association": "MEMBER",
    "body": "@fperez - I think `terminal.console.frontend` is no longer used at all - that was the first draft, that didn't use InteractiveShell or anything.\n\nI see that you pushed some changes to ipython/origin-termzmq.  Did you mean to push them here?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2911734",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2911734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2911734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTE3MzQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T03:45:14Z",
    "updated_at": "2011-11-29T03:45:14Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 28, 2011 at 12:10 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> @fperez - I think `terminal.console.frontend` is no longer used at all - that was the first draft, that didn't use InteractiveShell or anything.\n\nAh, OK.  But the code is still looking for it, so that's an error...\n\n> I see that you pushed some changes to ipython/origin-termzmq.  Did you mean to push them here?\n\nYes, thanks for catching that.  But now I realized that's a bad idea,\nwe should simply pick up those changes upon a rebase from  master.\nBut I'm getting some odd behavior: I tried to rebase, but I got\nstrange errors from git... Could you give it a go and see what you\nget?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2913993",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2913993",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2913993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTM5OTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T05:12:51Z",
    "updated_at": "2011-11-29T05:12:51Z",
    "author_association": "MEMBER",
    "body": "I just did a rebase/push without issue.  Also removed the unused frontend.py.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2914458",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2914458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2914458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQ0NTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T05:26:34Z",
    "updated_at": "2011-11-29T05:26:34Z",
    "author_association": "MEMBER",
    "body": "Thanks!  But I'm really puzzled, I tried again on a different machine and got the same set of errors:\n\n```\n(termzmq)amirbar[ipython]> git rebase master\nFirst, rewinding head to replay your work on top of it...\nApplying: basic kernelmanager and frontend wrote, support indentation but it dont run code yet\nApplying: working in handlers\nApplying: working in tab completion\nApplying: completer not working fine\nApplying: little bug fixed in kernelmanager's queues\nApplying: raw_input captured and working fine\nApplying: -mworking in tab-completion\nApplying: tab completion is not working yet, unknow error\nApplying: Make readline tab-completion work in two-process terminal frontend.\n/home/fperez/ipython/ipython/.git/rebase-apply/patch:18: trailing whitespace.\n\nwarning: 1 line adds whitespace errors.\nUsing index info to reconstruct a base tree...\n<stdin>:18: trailing whitespace.\n\nwarning: 1 line applied after fixing whitespace errors.\nFalling back to patching base and 3-way merge...\nfatal: Unable to create '/home/fperez/ipython/ipython/.git/index.lock': File exists.\n\nIf no other git process is currently running, this probably means a\ngit process crashed in this repository earlier. Make sure no other git\nprocess is running and remove the file manually to continue.\nFailed to merge in the changes.\nPatch failed at 0009 Make readline tab-completion work in two-process terminal frontend.\n\nWhen you have resolved this problem run \"git rebase --continue\".\nIf you would prefer to skip this patch, instead run \"git rebase --skip\".\nTo restore the original branch and stop rebasing run \"git rebase --abort\".\n```\n\nFurthermore, the above looks like a git bug: that index.lock file didn't exist before, I made sure to remove it... And even if I remove it again, it bombs even on `--abort`:\n\n```\n((d8c32bc...)|REBASE)amirbar[ipython]> git rebase --abort\nfatal: Unable to create '/home/fperez/ipython/ipython/.git/index.lock': File exists.\n\nIf no other git process is currently running, this probably means a\ngit process crashed in this repository earlier. Make sure no other git\nprocess is running and remove the file manually to continue.\n(termzmq)amirbar[ipython]> rm .git/ind\n```\n\nVery strange...\n\nIn any case, thanks!  I'll keep a close eye on this version of git, in case it turns out I have to file a git bug report (for reference, it's git 1.7.5.4 from ubuntu 11.10).\n\nBack to ipython...\n\nThe test suite _almost_ passes, but I'm getting these really strange errors:\n\n```\n======================================================================\nERROR: Failure: ImportError (No module named IPython)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/loader.py\", line 390, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 39, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 71, in importFromDir\n    fh, filename, desc = find_module(part, path)\nImportError: No module named IPython\n\n======================================================================\nERROR: Failure: ImportError (No module named IPython)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/loader.py\", line 390, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 39, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 71, in importFromDir\n    fh, filename, desc = find_module(part, path)\nImportError: No module named IPython\n\n======================================================================\nERROR: Failure: ImportError (No module named IPython)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/loader.py\", line 390, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 39, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 71, in importFromDir\n    fh, filename, desc = find_module(part, path)\nImportError: No module named IPython\n\n======================================================================\nERROR: Failure: ImportError (No module named IPython)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/loader.py\", line 390, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 39, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 71, in importFromDir\n    fh, filename, desc = find_module(part, path)\nImportError: No module named IPython\n\n----------------------------------------------------------------------\n```\n\nDo you see those too?  They're in `iptest IPython.frontend`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2915640",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2915640",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2915640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU2NDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T05:55:45Z",
    "updated_at": "2011-11-29T05:55:45Z",
    "author_association": "MEMBER",
    "body": "Ah, I used to see those - I don't know why they happen, but it seems like it tries to do something multithreaded, and can hit a race condition when rebasing many commits. I _always_ `git rebase -i` now, and for some reason that seems to solve the issue.\n\nAs for iptest errors - no, I do not see any errors, the test suite passes just fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2916363",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2916363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2916363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYzNjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T06:13:43Z",
    "updated_at": "2011-11-29T06:13:43Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 28, 2011 at 9:55 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> Ah, I used to see those - I don't know why they happen, but it seems like it tries to do something multithreaded, and can hit a race condition when rebasing many commits. I _always_ `git rebase -i` now, and for some reason that seems to solve the issue.\n\nOK, good to know.  I'll use that trick from now on.\n\n> As for iptest errors - no, I do not see any errors, the test suite passes just fine.\n\nThat's really odd... OK, I'll worry about it later then.\n\nIt seems like the big bug left here is output flushing when raw_input\nis active.  Can you think of any others?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2918186",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-2918186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 2918186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTgxODY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T06:58:08Z",
    "updated_at": "2011-11-29T06:58:08Z",
    "author_association": "MEMBER",
    "body": "The %kernel frontend-magic stuff hasn't been implemented, but I've been thinking, and in my experience, most of the time that I want to kill the kernel, I want to do it when it's not responding, and a magic doesn't help.\n\nOther than that, I can't think of anything else that jumped out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3009118",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3009118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3009118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDkxMTg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-04T21:39:23Z",
    "updated_at": "2011-12-04T21:39:23Z",
    "author_association": "MEMBER",
    "body": "@fperez - `raw_input/%debug` should now be better behaved.\n\nDo we want to block on the frontend-magics?  Note that with the design we have proposed, the magics will only function if the frontend believes the kernel to be fully functional and waiting for input.  That seems to completely eliminate the value of `%kernel interrupt`, and also means there's no difference between `%kernel kill` and `os._exit(0)` unless there is a bug _in the frontend_.  \n\nI don't think it's particularly useful to be able to signal the kernel only when it's perceived to be fully functional and responsive.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3027525",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3027525",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3027525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjc1MjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T02:51:46Z",
    "updated_at": "2011-12-06T02:51:46Z",
    "author_association": "MEMBER",
    "body": "Mmh, something broke here, I typed `ipython console` and I got a never-ending stream of these error messages:\n\n```\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/home/fperez/usr/lib/python2.7/site-packages/IPython/utils/ipstruct.py in __getattr__(self, key)\n    149             result = self[key]\n    150         except KeyError:\n--> 151             raise AttributeError(key)\n    152         else:\n    153             return result\n\nAttributeError: generate_prompt\n---------------------------------------------------------------------------\nUnboundLocalError                         Traceback (most recent call last)\nUnboundLocalError: local variable 'prompt' referenced before assignment\n---------------------------------------------------------------------------\n```\n\nDoes the console work for you?\n\nThis tells me that we should, at the very least, add a test that starts a console, runs something simple, and shuts it down.  We could do it using pexpect, actually...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3027768",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3027768",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3027768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjc3Njg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T03:29:40Z",
    "updated_at": "2011-12-06T03:29:40Z",
    "author_association": "MEMBER",
    "body": "Of course, this was the first rebase since the PromptManager. Should be a quick fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3027807",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3027807",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3027807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjc4MDc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T03:39:14Z",
    "updated_at": "2011-12-06T03:39:14Z",
    "author_association": "MEMBER",
    "body": "PromptManager issue fixed, I'll add a simple test.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3028338",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3028338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3028338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjgzMzg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T05:10:11Z",
    "updated_at": "2011-12-06T05:10:11Z",
    "author_association": "MEMBER",
    "body": "simple pexpect test added as well\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3029044",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3029044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3029044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjkwNDQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T07:18:28Z",
    "updated_at": "2011-12-06T07:18:28Z",
    "author_association": "MEMBER",
    "body": "A few things:\n- prompt spacing is wrong, compare:\n\n```\nIn [1]: import sys\nIn [2]: 'hello ipython'\nOut[2]: 'hello ipython'\nIn [3]:\n```\n\nto\n\n```\nIn [1]: import sys\n\nIn [2]: 'hello ipython'\nOut[2]: 'hello ipython'\n\nIn [3]: \n```\n- plain `exit` doesn't cause an exit (which does work on the 2-process qt console).\n- Calling with `--pylab` causes crash:\n\n```\nTraceback (most recent call last):\n  File \"/home/fperez/usr/bin/ipython\", line 7, in <module>\n    launch_new_instance()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 403, in launch_new_instance\n    app.start()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 373, in start\n    return self.subapp.start()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 377, in start\n    self.shell.mainloop()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/console/interactiveshell.py\", line 205, in mainloop\n    self.interact(display_banner=display_banner)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/console/interactiveshell.py\", line 250, in interact\n    if not self.wait_for_kernel(3):\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/console/interactiveshell.py\", line 220, in wait_for_kernel\n    self.run_cell('1', False)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/console/interactiveshell.py\", line 96, in run_cell\n    self.handle_iopub()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/console/interactiveshell.py\", line 145, in handle_iopub\n    if self.session_id == sub_msg['parent_header']['session']:\nKeyError: 'session'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3035912",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3035912",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3035912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU5MTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T17:54:12Z",
    "updated_at": "2011-12-06T17:54:12Z",
    "author_association": "MEMBER",
    "body": "Interesting, because I see _none_ of those issues.  The KeyError I know is a bug that just doesn't happen to come up for me, but I'll fix it.  However, it is strange that you have incorrect prompt spacing and exit doesn't work, when they behave perfectly for me. Do you have any related config?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3036017",
    "html_url": "https://github.com/ipython/ipython/pull/864#issuecomment-3036017",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/864",
    "id": 3036017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzYwMTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T18:00:54Z",
    "updated_at": "2011-12-06T18:00:54Z",
    "author_association": "MEMBER",
    "body": "The KeyError should be fixed, but I don't know how to deal with the others since I can't reproduce them.\n"
  }
]
