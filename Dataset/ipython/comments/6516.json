[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56382335",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56382335",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56382335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzgyMzM1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T14:36:44Z",
    "updated_at": "2014-09-22T14:36:44Z",
    "author_association": "MEMBER",
    "body": "Probably not at baked in IPython, \n\nTry the following in custom.js, which will drop (roughly) anything after 500 char/output.\nYou could of course package it and refine. Would it suit you ? \n\n``` js\nrequire([\"notebook/js/outputarea\", \"base/js/dialog\",\"notebook/js/codecell\"], function(oa, dialog, cc){\n    console.log(oa.OutputArea, oa.OutputArea.prototype)\n    oa.OutputArea.prototype._handle_output = oa.OutputArea.prototype.handle_output\n    console.log('[extension]: will drop ifmore than 10 messages/cell')\n    oa.OutputArea.prototype.handle_output = function (msg){\n        if(!this.count){this.count=0}\n        this.count = this.count+String(msg.content.data).length;\n        if(this.count>500){\n            if(!this.drop){\n            dialog.modal({\n                    title : 'Infinite loop ? ',\n                    body : \"Oops, I got too many things from kernel ! I'll just drop them !\",\n                    buttons : {'OK' : { 'class' : 'btn-primary' },\n                    }\n                }\n                )\n            }\n            this.drop=true;\n            return \n        }\n        return this._handle_output(msg);\n    }\n\n    cc.CodeCell.prototype._execute = cc.CodeCell.prototype.execute;\n    cc.CodeCell.prototype.execute = function(){\n        // reset counter on execution.\n        this.output_area.count = 0;\n        this.output_area.drop  = false;\n        return this._execute();\n    }\n\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56391858",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56391858",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56391858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzkxODU4",
    "user": {
      "login": "astrofrog",
      "id": 314716,
      "node_id": "MDQ6VXNlcjMxNDcxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/314716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astrofrog",
      "html_url": "https://github.com/astrofrog",
      "followers_url": "https://api.github.com/users/astrofrog/followers",
      "following_url": "https://api.github.com/users/astrofrog/following{/other_user}",
      "gists_url": "https://api.github.com/users/astrofrog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astrofrog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astrofrog/subscriptions",
      "organizations_url": "https://api.github.com/users/astrofrog/orgs",
      "repos_url": "https://api.github.com/users/astrofrog/repos",
      "events_url": "https://api.github.com/users/astrofrog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astrofrog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T15:36:41Z",
    "updated_at": "2014-09-22T15:36:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau - thanks for the js code! I will try it out. However, this maybe be something to consider putting as a default menu option (like many terminals that have 'limit output to x lines'), since I'm not sure if I can easily get my students to install custom javascript if they are having issues with infinite loops ;) (and I suspect this is a common issue).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56392514",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56392514",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56392514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzkyNTE0",
    "user": {
      "login": "keflavich",
      "id": 143715,
      "node_id": "MDQ6VXNlcjE0MzcxNQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/143715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keflavich",
      "html_url": "https://github.com/keflavich",
      "followers_url": "https://api.github.com/users/keflavich/followers",
      "following_url": "https://api.github.com/users/keflavich/following{/other_user}",
      "gists_url": "https://api.github.com/users/keflavich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keflavich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keflavich/subscriptions",
      "organizations_url": "https://api.github.com/users/keflavich/orgs",
      "repos_url": "https://api.github.com/users/keflavich/repos",
      "events_url": "https://api.github.com/users/keflavich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keflavich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T15:40:36Z",
    "updated_at": "2014-09-22T15:40:36Z",
    "author_association": "NONE",
    "body": ":+1: to @astrofrog's suggestion - when I was teaching with the notebook, the entire computing node sometimes froze on costly infinite loops, which froze everyone at the same time.  It required me calling in the IT folks with superuser access to kill the offending Firefox instances.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56394588",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56394588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56394588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mzk0NTg4",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T15:53:11Z",
    "updated_at": "2014-09-22T15:53:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also think this belongs to IPython proper, instead of leaving it to users to deal with it. Qtconsole already has support to print up to a certain number of lines of output, which prevents apps like Spyder to freeze with infinite loops.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56405203",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56405203",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56405203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDA1MjAz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T17:05:05Z",
    "updated_at": "2014-09-22T17:05:05Z",
    "author_association": "MEMBER",
    "body": "One of the issues we have right now with theses things is that we have no way to persist the configuration except `custom.js`. And until this is fixed, the answer to any of these question where the response might depend on use case will be no. So even if it makes sens to have a \"reasonable\" limit, I think we will have to postpone the implementation of this feature. It should push anyone interested in the project (us included) in implementing the config persistence. Then things like limiting output get easy. \n\nIn the meantime, if it is on nodes/clusters, as you (or your IT) is responsible for deployment, it should be relatively easy to add the custom extensions to all students. That's what @dsblank is doing for a course and IIRC they have highly customized notebook.\n\nThe multi-user notebook is taking shape so the need to ask student to install notebook get smaller. \nYou can send profile in the folder that have material for the course and ask to launch notebook with the flag that user profile in CWD. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56411035",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56411035",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56411035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDExMDM1",
    "user": {
      "login": "astrofrog",
      "id": 314716,
      "node_id": "MDQ6VXNlcjMxNDcxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/314716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astrofrog",
      "html_url": "https://github.com/astrofrog",
      "followers_url": "https://api.github.com/users/astrofrog/followers",
      "following_url": "https://api.github.com/users/astrofrog/following{/other_user}",
      "gists_url": "https://api.github.com/users/astrofrog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astrofrog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astrofrog/subscriptions",
      "organizations_url": "https://api.github.com/users/astrofrog/orgs",
      "repos_url": "https://api.github.com/users/astrofrog/repos",
      "events_url": "https://api.github.com/users/astrofrog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astrofrog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T17:46:02Z",
    "updated_at": "2014-09-22T17:46:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau - thanks - what is the preferred approach for adding a custom extension for all students if I have access to the IPython installation? (but not their `.ipython` directories)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56419732",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-56419732",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 56419732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDE5NzMy",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T18:42:25Z",
    "updated_at": "2014-09-22T18:42:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "We are using fairly straightforward notebooks, with an external kernel (using Scheme). But, we have provided some instruction for students to customize their notebooks [1]. Most of the customization I have needed for class, I just do in the kernel, and update in the installed codebase on the server. We are running the jupyterhub on our own servers [2]. This is really a nice way to go, once Jupyter is stable. Only one install... once it works, it mostly works for everyone.\n\nI do think that IPython should not allow a user to crash the browser. Just like Python's max recursion limit, one shouldn't be allowed to output too much text in any one cell. I have had similar problems, but hadn't thought that it may have been caused by sheer volume of output.\n\nIf I wanted to install a particular nbextension, I could just copy it to their custom.js, as all of the accounts are on one computer. Or I could supply a very simple set of directions for them to copy paste, ala [1] instructions on installing the Spell Check (eg, combinations of `!ipython install-nbextension` and `%%file`.\n\nHope that helps! If not, I'd be glad to say more about our setup.\n\n[1] - http://jupyter.cs.brynmawr.edu/hub/dblank/public/Jupyter%20Help.ipynb\n\n[2] - http://jupyter.cs.brynmawr.edu/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143724805",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143724805",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143724805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzcyNDgwNQ==",
    "user": {
      "login": "astrofrog",
      "id": 314716,
      "node_id": "MDQ6VXNlcjMxNDcxNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/314716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astrofrog",
      "html_url": "https://github.com/astrofrog",
      "followers_url": "https://api.github.com/users/astrofrog/followers",
      "following_url": "https://api.github.com/users/astrofrog/following{/other_user}",
      "gists_url": "https://api.github.com/users/astrofrog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astrofrog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astrofrog/subscriptions",
      "organizations_url": "https://api.github.com/users/astrofrog/orgs",
      "repos_url": "https://api.github.com/users/astrofrog/repos",
      "events_url": "https://api.github.com/users/astrofrog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astrofrog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T12:05:01Z",
    "updated_at": "2015-09-28T12:05:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a ping on this - I've had more students crash their notebooks this morning while learning loops (it's not easy for me to deploy a custom JS file to all of them)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143790635",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143790635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143790635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzc5MDYzNQ==",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T16:06:24Z",
    "updated_at": "2015-09-28T16:06:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, this really should be addressed.\n\n@Carreau I am of the opinion that this should be in the notebook proper as well, and that there should be some high default limit -- I don't know, like 10000 lines of output -- that gets truncated past that. I think if anybody _really_ wants that to be bigger than that, they are probably a power user, and should be able to go edit `custom.js` themselves. Students or anyone else just learning how to use the notebook are the most likely to make the mistake of creating an infinite for loop with output, which then crashes their browser, which is a horrible experience for them. Even worse, I've had students for whom this happened, and they had to restart their kernel, but in the process accidentally saved the notebook and then couldn't reopen it because there was too much output saved into it. That's somewhat of a separate issue, but still related -- it really shouldn't end up being the case that someone inadvertently saves the notebook while it's crashing and then can't open it again without manually going in a clearing the outputs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143792838",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143792838",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143792838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzc5MjgzOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T16:14:47Z",
    "updated_at": "2015-09-28T16:14:47Z",
    "author_association": "MEMBER",
    "body": "Marking as 4.1. \nThe limiting factor is likely appending to the DOM, we can probably count the bytes, and if greater than threshold, not append to the DOM, keep in a buffer, and append at the bottom of the cell \"You seem to get a really long output, are you sure you want to display it ?\" with 3 option \"Yes, Append\", \"No, discard\", \"interrupt kernel\", respectively for \"I know what I am doing\", \"I just made a mistake, this is not an infinite loop\", \"Help me I don't know what I am doing\".\n\n![giphy](https://cloud.githubusercontent.com/assets/335567/10141420/b529c392-65c9-11e5-8fa5-00b72f7b06d7.gif)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143796024",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143796024",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143796024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzc5NjAyNA==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T16:23:52Z",
    "updated_at": "2015-09-28T16:23:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, please help this issue. See also comments on #6771\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143797956",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143797956",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143797956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzc5Nzk1Ng==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T16:32:24Z",
    "updated_at": "2015-09-28T16:32:24Z",
    "author_association": "MEMBER",
    "body": "This is also an issue for our users at Quantopian, though I'd argue, as @ellisonbg mentions in #6771, that it should be the kernel's responsibility (with fallback in the frontend) to throttle output.\n\nPart of the challenge here is that you probably want different size thresholds for different mimetypes.  Sending back a 10MB PNG is much more reasonable than sending back 10MB of text output.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143803966",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143803966",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143803966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzgwMzk2Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T16:57:32Z",
    "updated_at": "2015-09-28T16:57:32Z",
    "author_association": "MEMBER",
    "body": "> as @ellisonbg mentions in #6771, that it should be the kernel's responsibility (with fallback in the frontend) to throttle output.\n\nWhich I completely disagree with. The kernel is here to execute, and frontend include nbconvert. \nKernel should not know what they are connected to, and should not be state-full as to wether or not they should retain information because this might not be what the user want. \n\nWhen I go grocery shopping the cashier rarely tells me \"this looks like too much food, I'll wait for your fridge to confirm me you have enough place\".\n\nAns as you point out, even 100 Mb PNG can be nothing if it just go to /dev/null, because you are using the terminal console. \n\nI disagree with how the title of #6771 was rewritten, but I don't want to bikeshed on how to name an issue. \n\nThe mixing of \"We have talked\" and the solution proposed in a single comment make it hard to distinguish who was \"we\", and wether the solution proposed is the reflexion of the team, or a single individual though on the problem raised by the team. \n\nWether it should be on the JS side, or the tornado is another question.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143851248",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143851248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143851248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg1MTI0OA==",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T19:29:51Z",
    "updated_at": "2015-09-28T19:29:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ideally, the client would notify the server what it could handle. The server could then strip/truncate the cell output and replace them with references if need be. IIRC this is a bit tricky in canonical IPython since we treat the .ipynb as both document and datastore. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143909534",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143909534",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143909534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzkwOTUzNA==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T00:23:15Z",
    "updated_at": "2015-09-29T00:23:15Z",
    "author_association": "MEMBER",
    "body": "> Wether it should be on the JS side, or the tornado is another question.\n\nI could see an argument that this functionality belongs on the notebook server itself.\n\nMy concern with rate-limiting only in the frontend is that, in many cases, by the time messages make it to the frontend, it's already too late to prevent service degradation.  Two cases where I might expect this to matter:\n1. In an environment with multiple notebook servers (e.g. tmpnb, or JupyterHub), outbound bandwidth can be a constrained resource.  If the server is allowed to send arbitrarily large amounts of data back to the browser, not only to they crash their own frontend, they can degrade the experience of other users sharing the same infrastructure.  This happens to a lesser extent in the simpler case of a single user running multiple notebooks concurrently.\n2.  If the kernel produces a high volume of messages, the frontend might fall over even if it's dropping them as fast as it can.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143983548",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-143983548",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 143983548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzk4MzU0OA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T08:25:38Z",
    "updated_at": "2015-09-29T08:25:38Z",
    "author_association": "MEMBER",
    "body": "This is probably one of those things where we should probably do it on both sides. The more robust version is on the kernel, because throttling there means that the traffic simply isn't produced. But that means all kernels need to implement a sensible scheme, and that simply won't happen. For this reason, we should _also_ throttle on the frontend, since the first limiting factor is typically putting things on the DOM, and not network traffic. We should also be careful to take time and clearing into account. A notebook that produces 100MB of output over a very long at a reasonable pace with occasional clears should not get throttled.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144028540",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-144028540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 144028540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDAyODU0MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T11:10:46Z",
    "updated_at": "2015-09-29T11:10:46Z",
    "author_association": "MEMBER",
    "body": "I opened jupyter/notebook#506 with some server-side throttling and limiting the chunk-size of consecutive stream outputs that we consider for merging, which is typically the source of killing one's notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144029662",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-144029662",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 144029662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDAyOTY2Mg==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T11:16:48Z",
    "updated_at": "2015-09-29T11:16:48Z",
    "author_association": "MEMBER",
    "body": "As things currently stand, it is pretty easy to kill your browser with\nhasty print statements. When I use the notebook for teaching, this happens\n_all the time_. I agree with Min that we probably need multiple layers of\nthis both in the kernel and the frontend.\n\nThanks for the PR on this @minrk\n\nOn Tue, Sep 29, 2015 at 4:11 AM, Min RK notifications@github.com wrote:\n\n> I opened jupyter/notebook#506\n> https://github.com/jupyter/notebook/pull/506 with some server-side\n> throttling and limiting the chunk-size of consecutive stream outputs that\n> we consider for merging, which is typically the source of killing one's\n> notebook.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6516#issuecomment-144028540.\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/352627080",
    "html_url": "https://github.com/ipython/ipython/issues/6516#issuecomment-352627080",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6516",
    "id": 352627080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjYyNzA4MA==",
    "user": {
      "login": "avriLee",
      "id": 22313470,
      "node_id": "MDQ6VXNlcjIyMzEzNDcw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22313470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avriLee",
      "html_url": "https://github.com/avriLee",
      "followers_url": "https://api.github.com/users/avriLee/followers",
      "following_url": "https://api.github.com/users/avriLee/following{/other_user}",
      "gists_url": "https://api.github.com/users/avriLee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avriLee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avriLee/subscriptions",
      "organizations_url": "https://api.github.com/users/avriLee/orgs",
      "repos_url": "https://api.github.com/users/avriLee/repos",
      "events_url": "https://api.github.com/users/avriLee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avriLee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T03:10:28Z",
    "updated_at": "2017-12-19T05:37:52Z",
    "author_association": "NONE",
    "body": "@Carreau Thanks for your js code and it works for me exactly! I want to know whether it is valid for users to use this similar js code by nbextension? Thanks for your time!"
  }
]
