[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/191168531",
    "html_url": "https://github.com/ipython/ipython/issues/9288#issuecomment-191168531",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9288",
    "id": 191168531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTE2ODUzMQ==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T10:07:55Z",
    "updated_at": "2016-03-02T10:07:55Z",
    "author_association": "NONE",
    "body": "Just found another warning. In a notebook, just activate the inline backend:\n\n```\n%matplotlib inline\n```\n\nA host of DeprecationWarnings will pop up.\n\n```\n/Users/xxx/anaconda/lib/python3.5/site-packages/ipykernel/pylab/config.py:66: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  inline backend.\"\"\"\n/Users/xxx/anaconda/lib/python3.5/site-packages/ipykernel/pylab/config.py:71: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  'retina', 'jpeg', 'svg', 'pdf'.\"\"\")\n/Users/xxx/anaconda/lib/python3.5/site-packages/ipykernel/pylab/config.py:85: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  use `figure_formats` instead)\"\"\")\n/Users/xxx/anaconda/lib/python3.5/site-packages/ipykernel/pylab/config.py:95: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  \"\"\"\n/Users/xxx/anaconda/lib/python3.5/site-packages/ipykernel/pylab/config.py:114: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  \"\"\")\n/Users/xxx/anaconda/lib/python3.5/site-packages/ipykernel/pylab/config.py:44: DeprecationWarning: InlineBackend._config_changed is deprecated: use @observe and @unobserve instead.\n  def _config_changed(self, name, old, new):\n/Users/xxx/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py:770: DeprecationWarning: A parent of InlineBackend._config_changed has adopted the new @observe(change) API\n  clsname, change_or_name), DeprecationWarning)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/191170883",
    "html_url": "https://github.com/ipython/ipython/issues/9288#issuecomment-191170883",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9288",
    "id": 191170883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTE3MDg4Mw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T10:17:47Z",
    "updated_at": "2016-03-02T10:17:47Z",
    "author_association": "MEMBER",
    "body": "Yup, these are because traitlets 4.1 introduced a new API that we will adopt before too long. There's nothing to worry about, and this is why deprecation warnings are off by default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/191172400",
    "html_url": "https://github.com/ipython/ipython/issues/9288#issuecomment-191172400",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9288",
    "id": 191172400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTE3MjQwMA==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-02T10:20:46Z",
    "updated_at": "2016-03-02T10:20:46Z",
    "author_association": "NONE",
    "body": "OK cool. I saw them because another package changed the warning state, which of course shouldn't happen. Anyway, I just wanted to give you a heads up in case this behavior was not intended. Thanks for the quick response.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/216032759",
    "html_url": "https://github.com/ipython/ipython/issues/9288#issuecomment-216032759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9288",
    "id": 216032759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjAzMjc1OQ==",
    "user": {
      "login": "ssbarnea",
      "id": 102495,
      "node_id": "MDQ6VXNlcjEwMjQ5NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssbarnea",
      "html_url": "https://github.com/ssbarnea",
      "followers_url": "https://api.github.com/users/ssbarnea/followers",
      "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions",
      "organizations_url": "https://api.github.com/users/ssbarnea/orgs",
      "repos_url": "https://api.github.com/users/ssbarnea/repos",
      "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssbarnea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-01T10:15:58Z",
    "updated_at": "2016-05-01T10:15:58Z",
    "author_association": "NONE",
    "body": "Can can we get rid of these warnings? Some projects do want and need warnings but if they are unluckily to have something to do related to ipython they are doomed to see enjoy pages and pages of warnings. \n\nThe problem is even worse because some projects do have very tight quality standards that do require to test for warnings during their unittesting and to treat them as errors. So, we do need a way to silence ipython ones. How?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/216257470",
    "html_url": "https://github.com/ipython/ipython/issues/9288#issuecomment-216257470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9288",
    "id": 216257470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjI1NzQ3MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T14:55:29Z",
    "updated_at": "2016-05-02T14:55:29Z",
    "author_association": "MEMBER",
    "body": "@ssbarnea this is a duplicate of #9242, which [has some examples](https://github.com/ipython/ipython/issues/9242#issuecomment-188145256) of filtering out warnings like these, for example ignoring all DeprecationWarnings caused by IPython code:\n\n``` python\nwarnings.filterwarnings('ignore', category=DeprecationWarning, module='.*/IPython/.*')\n```\n"
  }
]
