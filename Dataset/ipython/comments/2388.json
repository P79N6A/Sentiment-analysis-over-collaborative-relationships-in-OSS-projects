[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8537577",
    "html_url": "https://github.com/ipython/ipython/pull/2388#issuecomment-8537577",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2388",
    "id": 8537577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Mzc1Nzc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-13T18:11:25Z",
    "updated_at": "2012-09-13T18:11:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does `ipdb`'s current approach not work?  This seems like a simpler solution.\n\n``` py\n    # make sure we wrap it only once or we would end up with a cycle\n    #  BdbQuit_excepthook.excepthook_ori == BdbQuit_excepthook\n    if sys.excepthook != BdbQuit_excepthook:\n        BdbQuit_excepthook.excepthook_ori = sys.excepthook\n        sys.excepthook = BdbQuit_excepthook\n```\n\nAlso can you provide a script to reproduce this bug without using `ipdb`?  Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8558112",
    "html_url": "https://github.com/ipython/ipython/pull/2388#issuecomment-8558112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2388",
    "id": 8558112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTgxMTI=",
    "user": {
      "login": "DamianHeard",
      "id": 1554798,
      "node_id": "MDQ6VXNlcjE1NTQ3OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1554798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DamianHeard",
      "html_url": "https://github.com/DamianHeard",
      "followers_url": "https://api.github.com/users/DamianHeard/followers",
      "following_url": "https://api.github.com/users/DamianHeard/following{/other_user}",
      "gists_url": "https://api.github.com/users/DamianHeard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DamianHeard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DamianHeard/subscriptions",
      "organizations_url": "https://api.github.com/users/DamianHeard/orgs",
      "repos_url": "https://api.github.com/users/DamianHeard/repos",
      "events_url": "https://api.github.com/users/DamianHeard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DamianHeard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-14T11:10:38Z",
    "updated_at": "2012-09-14T11:10:38Z",
    "author_association": "NONE",
    "body": "Hi Bradley,\n\nthanks for taking the time to look over my pull request. I'm fairly new to this GitHub caper so please pull me up if my etiquette is off.\n\nYou can use something like this is see the loop without ipdb:\n\n```\n# test.py\nfrom IPython.core.debugger import Tracer;\nTracer()\n# Normally there would be lots of really interesting code in\n# here that needs debugging...\nTracer()\nraise Exception\n```\n\nNote you have to run the with python not ipython:\n\n```\npython test.py\n```\n\nIt may seem fairly artificial to use python when ipython is installed however for a lot of people but I do actual know of quite a few devs who do this. Launch django app with\n\n```\npython manage.py runserver\n```\n\nprobably more out of habit than anything and then using ipdb to debug. This bug becomes an issue when multiple ipdb.set_trace() are hit too as ipdb is emulating Tracer's method for installing the except hook.\n\nRegarding the code you pasted above, which branch/repo is this in? I don't have this code in my copy of ipython (install via)\n\n```\npip install ipython\n```\n\nRegardless, this solution won't do exactly what you want in some very rare cases. For example, what if for some reason some replaced the sys.excepthook between the first and the second call to Tracer()?\n\nWhen an exception is thrown the hooks would be called like:\n\nBdbQuit_excepthook -> someother_excepthook -> BdbQuit_exceptionhook -> someother_excepthook -> ...\n\nThat is, BdbQuit_excepthook is a global, as is it's attribute BdbQuit_excepthook.excepthook_ori so when the second Trace is added it stomps on the original BdbQuit_excepthook.excepthook_ori value (which would have been the real sys.excepthook).\n\nThe approach I have advocated avoid this issue because it will keep track of the whatever is in sys.excepthook at the time it replaces it and ensure that is called.\n\nOne slightly light-weight solution would be to simply check if the BdbQuit_excepthook.excepthook_ori attribute has been set and if so don't replace sys.excepthook eg:\n\n```\nif hasattr(BdbQuit_excepthook, 'excepthook_ori'):\n    BdbQuit_excepthook.excepthook_ori = sys.excepthook\n    sys.excepthook = BdbQuit_excepthook\n```\n\nHowever I'm less fond of this approach as I feel each Tracer should be entitled to add it's hook. Not allowing the tracer to do may result in other unwarranted side-effects (although I can't think of any off the top of my head).\n\nRegards,\nDamian\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8558152",
    "html_url": "https://github.com/ipython/ipython/pull/2388#issuecomment-8558152",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2388",
    "id": 8558152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTgxNTI=",
    "user": {
      "login": "DamianHeard",
      "id": 1554798,
      "node_id": "MDQ6VXNlcjE1NTQ3OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1554798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DamianHeard",
      "html_url": "https://github.com/DamianHeard",
      "followers_url": "https://api.github.com/users/DamianHeard/followers",
      "following_url": "https://api.github.com/users/DamianHeard/following{/other_user}",
      "gists_url": "https://api.github.com/users/DamianHeard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DamianHeard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DamianHeard/subscriptions",
      "organizations_url": "https://api.github.com/users/DamianHeard/orgs",
      "repos_url": "https://api.github.com/users/DamianHeard/repos",
      "events_url": "https://api.github.com/users/DamianHeard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DamianHeard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-14T11:13:11Z",
    "updated_at": "2012-09-14T11:13:11Z",
    "author_association": "NONE",
    "body": "Oh I see, I miss read your comment above. That snippet you pasted from ipdb not ipython. Anyway, the comments about it not being quite what you want still stand.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9327065",
    "html_url": "https://github.com/ipython/ipython/pull/2388#issuecomment-9327065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2388",
    "id": 9327065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzMjcwNjU=",
    "user": {
      "login": "DamianHeard",
      "id": 1554798,
      "node_id": "MDQ6VXNlcjE1NTQ3OTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1554798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DamianHeard",
      "html_url": "https://github.com/DamianHeard",
      "followers_url": "https://api.github.com/users/DamianHeard/followers",
      "following_url": "https://api.github.com/users/DamianHeard/following{/other_user}",
      "gists_url": "https://api.github.com/users/DamianHeard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DamianHeard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DamianHeard/subscriptions",
      "organizations_url": "https://api.github.com/users/DamianHeard/orgs",
      "repos_url": "https://api.github.com/users/DamianHeard/repos",
      "events_url": "https://api.github.com/users/DamianHeard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DamianHeard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-11T02:55:30Z",
    "updated_at": "2012-10-11T02:55:30Z",
    "author_association": "NONE",
    "body": "Hi Bradley, just wondering if you had a chance to digest my comment above?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10030983",
    "html_url": "https://github.com/ipython/ipython/pull/2388#issuecomment-10030983",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2388",
    "id": 10030983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDMwOTgz",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T21:32:06Z",
    "updated_at": "2012-11-02T21:32:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @DamianHeard.  Sorry this fell off my radar.  I'm a bit worried about losing backwards compatibility here.\n\nCan you look at #2544 and comment.   I think it's a nice compromise.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10033225",
    "html_url": "https://github.com/ipython/ipython/pull/2388#issuecomment-10033225",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2388",
    "id": 10033225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDMzMjI1",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T23:14:30Z",
    "updated_at": "2012-11-02T23:14:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Replaced by #2544.\n"
  }
]
