[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3930975",
    "html_url": "https://github.com/ipython/ipython/issues/1400#issuecomment-3930975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1400",
    "id": 3930975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzA5NzU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T21:00:33Z",
    "updated_at": "2012-02-12T21:00:33Z",
    "author_association": "MEMBER",
    "body": "This is correct - you cannot delete tasks that are in-flight from the database, because that would leave the database in an inconsistent state.  Perhaps you misunderstand what the database is - it is strictly a record of what has happened, and has exactly no influence on execution.  The best way to think of the database (and the Hub in general) is a kind of Ã¼berlog, which stores enough information that it can reconstruct tasks from the logged information.  Interacting directly with the database should be considered read-only for the most part, and purge_results only exists for conserving memory by allowing you to delete old requests that have completed.\n\nIf it did let you delete tasks that are pending, it would go as follows:\n1. submit task (no engines, so it sits)\n2. request arrives at db\n3. delete request from db\n4. connect engine\n5. request runs on engine, returning result\n6. orphaned result enters db, not associated with any request\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4248907",
    "html_url": "https://github.com/ipython/ipython/issues/1400#issuecomment-4248907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1400",
    "id": 4248907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg5MDc=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-29T23:11:58Z",
    "updated_at": "2012-02-29T23:11:58Z",
    "author_association": "NONE",
    "body": "OK. Thank's for the explanation. So there is really no way of getting rid of a task, once it was given to any engine? Maybe without talking to the database, but communicating with ZMQ for example?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4249673",
    "html_url": "https://github.com/ipython/ipython/issues/1400#issuecomment-4249673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1400",
    "id": 4249673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk2NzM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-29T23:58:18Z",
    "updated_at": "2012-02-29T23:58:18Z",
    "author_association": "MEMBER",
    "body": "The way to abort tasks is to use 'client.abort', but I am sure this is not well behaved when there are no engines registered.  I (or someone else!) can look into improving that behavior by handling aborts in the Scheduler as well as on the Engines (it is only handled directly on the engines at this point).\n"
  }
]
