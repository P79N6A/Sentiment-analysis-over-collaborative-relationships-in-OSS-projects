[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9247470",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-9247470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 9247470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDc0NzA=",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-09T02:57:50Z",
    "updated_at": "2012-10-09T02:57:50Z",
    "author_association": "MEMBER",
    "body": "This may make gh-2402 obsolete.  I like your coroutine idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9255469",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-9255469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 9255469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTU0Njk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-09T10:06:42Z",
    "updated_at": "2012-10-09T10:06:42Z",
    "author_association": "MEMBER",
    "body": "Thanks Jason. Yes, I intend this to offer the same possibilities as #2402 in a more joined up way - I was particularly keen to handle cell magics without the current special casing in inputsplitter.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9601301",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-9601301",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 9601301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDEzMDE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-19T13:40:11Z",
    "updated_at": "2012-10-19T13:40:11Z",
    "author_association": "MEMBER",
    "body": "Also fixes #2507\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9969635",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-9969635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 9969635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5Njk2MzU=",
    "user": {
      "login": "rmcgibbo",
      "id": 641278,
      "node_id": "MDQ6VXNlcjY0MTI3OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcgibbo",
      "html_url": "https://github.com/rmcgibbo",
      "followers_url": "https://api.github.com/users/rmcgibbo/followers",
      "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
      "repos_url": "https://api.github.com/users/rmcgibbo/repos",
      "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-01T03:02:39Z",
    "updated_at": "2012-11-01T03:02:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR also fixes #2539. Looking forward to the merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9976308",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-9976308",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 9976308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NzYzMDg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-01T10:42:43Z",
    "updated_at": "2012-11-01T10:42:43Z",
    "author_association": "MEMBER",
    "body": "What we really need is code review. I suspect a change of this magnitude in the core code needs at least a quick look over by @fperez , but he's very busy at present. If people would like to help, it would be good to get #2301 reviewed and landed. That's a much less invasive change, although it's not trivial.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10317050",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-10317050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 10317050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzE3MDUw",
    "user": {
      "login": "rmcgibbo",
      "id": 641278,
      "node_id": "MDQ6VXNlcjY0MTI3OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcgibbo",
      "html_url": "https://github.com/rmcgibbo",
      "followers_url": "https://api.github.com/users/rmcgibbo/followers",
      "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
      "repos_url": "https://api.github.com/users/rmcgibbo/repos",
      "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T06:29:45Z",
    "updated_at": "2012-11-13T06:29:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been using this branch for a while personally, and I just noticed when trying to launch the qtconsole that the initialization fails with\n\nI'm sure this is a pretty easy fix.\n\n```\n$ ipython qtconsole\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/Current/bin/ipython\", line 7, in <module>\n    launch_new_instance()\n  File \"/Users/rmcgibbo/local/ipython/IPython/frontend/terminal/ipapp.py\", line 388, in launch_new_instance\n    app.initialize()\n  File \"<string>\", line 2, in initialize\n  File \"/Users/rmcgibbo/local/ipython/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/rmcgibbo/local/ipython/IPython/frontend/terminal/ipapp.py\", line 313, in initialize\n    super(TerminalIPythonApp, self).initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/Users/rmcgibbo/local/ipython/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/rmcgibbo/local/ipython/IPython/core/application.py\", line 325, in initialize\n    self.parse_command_line(argv)\n  File \"/Users/rmcgibbo/local/ipython/IPython/frontend/terminal/ipapp.py\", line 308, in parse_command_line\n    return super(TerminalIPythonApp, self).parse_command_line(argv)\n  File \"<string>\", line 2, in parse_command_line\n  File \"/Users/rmcgibbo/local/ipython/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/rmcgibbo/local/ipython/IPython/config/application.py\", line 420, in parse_command_line\n    return self.initialize_subcommand(subc, subargv)\n  File \"<string>\", line 2, in initialize_subcommand\n  File \"/Users/rmcgibbo/local/ipython/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/rmcgibbo/local/ipython/IPython/config/application.py\", line 352, in initialize_subcommand\n    subapp = import_item(subapp)\n  File \"/Users/rmcgibbo/local/ipython/IPython/utils/importstring.py\", line 40, in import_item\n    module = __import__(package,fromlist=[obj])\n  File \"/Users/rmcgibbo/local/ipython/IPython/frontend/qt/console/qtconsoleapp.py\", line 63, in <module>\n    from IPython.frontend.qt.console.frontend_widget import FrontendWidget\n  File \"/Users/rmcgibbo/local/ipython/IPython/frontend/qt/console/frontend_widget.py\", line 15, in <module>\n    from IPython.core.inputsplitter import InputSplitter, transform_classic_prompt\nImportError: cannot import name transform_classic_prompt\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10326734",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-10326734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 10326734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzI2NzM0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T13:54:27Z",
    "updated_at": "2012-11-13T13:54:27Z",
    "author_association": "MEMBER",
    "body": "Thanks, @rmcgibbo , good catch. I've fixed that now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11083033",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11083033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11083033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDgzMDMz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T12:19:18Z",
    "updated_at": "2012-12-06T12:25:21Z",
    "author_association": "MEMBER",
    "body": "As I mention on gh-2612, a lot of the string-based line transformers might be better done as tokenizer transforms.  For example, %magic transformations can automatically take into account line continuations and strings.  See https://github.com/ipython/ipython/issues/2612#issuecomment-11081513 for an example.  In fact, this would probably be a better way to do all of the line-prefix IPython syntax ('%', '!!', etc.).  Just look for the prefix as either the first token or as a token immediately following a newline token.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11959785",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11959785",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11959785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTU5Nzg1",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T16:56:27Z",
    "updated_at": "2013-01-07T16:56:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just ran into this myself, with ! at the beginning of a line being transformed if inside a multiline string, but this discussion seems to have died. What's the current state of this pull request? Has it been superseded by something else?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11959974",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11959974",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11959974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTU5OTc0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T17:00:24Z",
    "updated_at": "2013-01-07T17:00:24Z",
    "author_association": "MEMBER",
    "body": "It's not superseded. I'd like to get it merged, but it's a big enough change that I'm hoping @fperez will be able to look at it first. He's rather busy at the moment, though - maybe we should just land it and look out for breakages, before something comes along to conflict with it.\n\nThoughts, anyone?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11960349",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11960349",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11960349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTYwMzQ5",
    "user": {
      "login": "rmcgibbo",
      "id": 641278,
      "node_id": "MDQ6VXNlcjY0MTI3OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcgibbo",
      "html_url": "https://github.com/rmcgibbo",
      "followers_url": "https://api.github.com/users/rmcgibbo/followers",
      "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
      "repos_url": "https://api.github.com/users/rmcgibbo/repos",
      "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T17:08:33Z",
    "updated_at": "2013-01-07T17:08:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "If there's any work that needs doing (by a novice), I'd be happy to contribute a pair of eyes, write some tests, or whatever.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11960760",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11960760",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11960760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTYwNzYw",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T17:18:01Z",
    "updated_at": "2013-01-07T17:18:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver I think another consideration is where in the release cycle we are.  Given the scope, we probably want to land this a few months before a new point release so we have ample time to work out any kinks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11960941",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11960941",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11960941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTYwOTQx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T17:22:11Z",
    "updated_at": "2013-01-07T17:22:11Z",
    "author_association": "MEMBER",
    "body": "I think what I'm mainly after is a review of the design itself - see the initial description of this PR. For instance, Jason has pushed me to think about token-based transformers, which I think it should be possible to add to the same conceptual framework.\n\nAnyone's welcome to make suggestions like that, but I have a lot of respect for Fernando's judgement in particular about what's required and what's unnecessary. But I agree that we need to get big changes in to give us time to find the problems before 0.14. I'll email Fernando and see if he'll have time soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11968655",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11968655",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11968655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTY4NjU1",
    "user": {
      "login": "rmcgibbo",
      "id": 641278,
      "node_id": "MDQ6VXNlcjY0MTI3OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmcgibbo",
      "html_url": "https://github.com/rmcgibbo",
      "followers_url": "https://api.github.com/users/rmcgibbo/followers",
      "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
      "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
      "repos_url": "https://api.github.com/users/rmcgibbo/repos",
      "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-07T20:01:05Z",
    "updated_at": "2013-01-07T20:01:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sweet. All of this sounds good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11981459",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11981459",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11981459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTgxNDU5",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T02:06:28Z",
    "updated_at": "2013-01-08T02:06:28Z",
    "author_association": "MEMBER",
    "body": "Just catching up here...  I've been away for so long that I need to fit everything back into my mental cache, which right now is very, very cold.  I've given everything a first read and will sleep on it and come back tomorrow to work further on it.  But definitely as @takluyver says, now is the time to pitch in with further feedback on how well this works, ideas/problems, etc.\n\n@bfroehle is 100% right that we need to be very careful regarding our release cycle.  We haven't really had that discussion yet, but indeed merging this close to a release would be a bad idea.  This touches the very heart of the system in major ways, so it should be done early in a full cycle, not late.  But let's bang on it and review it for now, we can see what the right approach re. release will be once we're happy with the approach and code.\n\nThanks again to @takluyver for the enormous amount of work you've put into this: this stuff is _not_ easy, so I really appreciate you working on it with such care.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11982209",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-11982209",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 11982209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTgyMjA5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T02:44:07Z",
    "updated_at": "2013-01-08T02:44:07Z",
    "author_association": "MEMBER",
    "body": "This may or may not make a difference, but right now the transformer system is the major holdup of getting the new IPython in Sage.  In particular, right now there isn't a nice way for us to pass _everything_ on to the input transformers (including things inside of strings).  We can patch our IPython, but having a more flexible official system like this pull request starts giving would be better, of course.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12011892",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12011892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12011892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDExODky",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T19:06:17Z",
    "updated_at": "2013-01-08T19:06:17Z",
    "author_association": "MEMBER",
    "body": "@jasongrout, definitely lay out for us anything in the planned new design that would be insufficient/suboptimal for you guys.  Feedback like that is precisely what we need at this point, and Sage and Sympy are probably our highest priority real-world use cases.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12012189",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12012189",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12012189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDEyMTg5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T19:12:14Z",
    "updated_at": "2013-01-08T19:12:14Z",
    "author_association": "MEMBER",
    "body": "I think having the ideas in this pull request, plus token-based transformers, handles our use cases.\n\nMy comment above was an encouragement to get this pull request in (or at least the ideas behind this pull request).  I haven't converted our transformers over to use AST-based transforms, but hope to in the near future.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12251738",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12251738",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12251738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjUxNzM4",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-15T03:15:22Z",
    "updated_at": "2013-01-15T03:15:22Z",
    "author_association": "MEMBER",
    "body": "@takluyver, this is looking very solid, but I think it needs a bit of documentation explaining how the system is supposed to work and the coroutine logic.  Coroutines aren't one of the most widely used parts of the language, so it's a good idea to provide a little extra explanation on how they fit into the problem here.\n\nI know our docs are a little messy right now so even finding the right place for new information is painful.  But having the explanation means we can always move it once we reorganize the docs (something I hope will happen soon).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12251915",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12251915",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12251915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjUxOTE1",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-15T03:24:32Z",
    "updated_at": "2013-01-15T03:24:32Z",
    "author_association": "MEMBER",
    "body": "On a general note, there's a ton of code with minmal/no docstrings there, which makes it hard for other developers to dig into later on.  I know the old code wasn't perfect either, but now's the time to make an improvement on that front too :) \n\nI'm a little unhappy about the logic implementing the coroutine machinery via a factory that creates a class at runtime: it's complex and requires calling this multiple times (one for each coroutine) at init time.  This will likely add a small amount of startup time (likely very little, but I'm worried about our startup time going up and up, and these small changes add up in the long run and are hard to push back later).\n\nI don't have a simpler solution in my head right now, but I wonder if we can't keep the coroutine design with an implementation that has less moving parts... Ideas?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12462293",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12462293",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12462293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDYyMjkz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-19T22:24:07Z",
    "updated_at": "2013-01-19T22:24:07Z",
    "author_association": "MEMBER",
    "body": "If I'm not mistaken, this should also close #678 when it's done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12474139",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12474139",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12474139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDc0MTM5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-20T17:46:49Z",
    "updated_at": "2013-01-20T17:46:49Z",
    "author_association": "MEMBER",
    "body": "@fperez : I can make `CoroutineInputTransformer` a simple class which is passed the coroutine definition at instantiation. But then, if it's used as a decorator, the result is already an instance, so there's no neat way to create a second instance of it. We could leave the coroutine undecorated, and instantiate it as `CoroutineInputTransformer(cellmagic)` when we're setting up the transformers. I'll have a think about it, but I think that might be the best way.\n\nI'll try to add some docstrings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12632103",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12632103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12632103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjMyMTAz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T01:06:06Z",
    "updated_at": "2013-01-24T01:06:06Z",
    "author_association": "MEMBER",
    "body": "I've rearranged things a bit, so that you can decorator a function with a class method called `wrap`, i.e.\n\n```\n@CoroutineInputTransformer.wrap\ndef classic_prompt():\n    ...\n```\n\nI've also added a prototype `TokenInputTransformer` for @jasongrout. There's an example use in the test module. The API for that might well need to change, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12665278",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12665278",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12665278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjY1Mjc4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T18:22:21Z",
    "updated_at": "2013-01-24T18:22:21Z",
    "author_association": "MEMBER",
    "body": "I notice that several times, you have stateful transformers for the sole reason of supporting line continuations (`\\`).  It would be nice to abstract that pattern out; I can imagine lots of people will want to automatically support line continuations in their line-by-line transforms.  One way to abstract the pattern, just like the look_in_string variable, is that you could have a logical_line variable that would automatically concatenate lines that had continuations before feeding them into the transformer, or a line transformer could actually take a list of lines that were one \"logical line\".\n\nIn fact, that's one of the big reasons I advocated for tokenizer transforms---line continuations and things inside of strings (i.e., the 'logical line' issues) are automatically taken care of then.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12665683",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12665683",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12665683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjY1Njgz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-24T18:30:29Z",
    "updated_at": "2013-01-24T18:30:29Z",
    "author_association": "MEMBER",
    "body": "Above (https://github.com/ipython/ipython/pull/2447#issuecomment-11083033) I commented that the prefix transformers (`%`, `;`, etc.) would probably be a lot more elegant done as token-based transformers (then there is no need to do line continuation tricks, etc.).  What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12701649",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12701649",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12701649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzAxNjQ5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T14:00:35Z",
    "updated_at": "2013-01-25T14:00:35Z",
    "author_association": "MEMBER",
    "body": "Thoughts on line continuations so far:\n- One way would be to provide a separate routine for accumulating a logical line, that transformers could call. But before 3.3 (with `yield from`), the code to delegate to another coroutine is probably as long as the half-a-dozen lines to actually do this.\n- Another approach would be to add a default transformer which assembled logical lines, and acted before the line magic & similar transformers. The latter could then be implemented as stateless transformers again. This is what I currently favour, but I want to think it through for a bit longer.\n\nWith that done, I think doing the prefix transformers based on tokens would be unnecessary complexity.\n\n(The thought has also just occurred to me: could we do the same to multi-line strings? i.e. instead of a `look_in_string` attribute, put those transformers before the transformer that joins multi-line strings? Still thinking about this.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12701800",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12701800",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12701800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzAxODAw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T14:04:43Z",
    "updated_at": "2013-01-25T14:04:43Z",
    "author_association": "MEMBER",
    "body": "In fact, I think one transformer can easily do line continuations and multi-line strings. I love it when a plan comes together.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12722830",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12722830",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12722830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzIyODMw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T21:57:27Z",
    "updated_at": "2013-01-25T21:57:27Z",
    "author_association": "MEMBER",
    "body": "The only slight problem I can see with this approach is that %magic/!system commands etc. can't use an unpaired triple-quote in their syntax, because it will be treated as the start of a multi-line string before they get to process it. But I've never seen anything that uses unpaired triple-quotes, so I think we can cross that bridge when we come to it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12723168",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12723168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12723168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzIzMTY4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T22:06:40Z",
    "updated_at": "2013-01-25T22:06:40Z",
    "author_association": "MEMBER",
    "body": "It sounds like you are basically rewriting the tokenizer.  One other thing token-based magics would do is have a logical line contain tuples or parentheses that span multiple lines.  For example:\n\n```\n%time [i*i for i\n    in range(10)]\n```\n\nwould work fine if %time was a tokenizing transformer.  Do we want to support something like that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12724853",
    "html_url": "https://github.com/ipython/ipython/pull/2447#issuecomment-12724853",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2447",
    "id": 12724853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzI0ODUz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T22:53:09Z",
    "updated_at": "2013-01-25T22:53:09Z",
    "author_association": "MEMBER",
    "body": "Not at all - I'm using Python's tokenizer to find logical lines. I haven't reimplemented any of that functionality.\n\nI'm inclined to say that no, we don't want to support that case. Only a couple of magics take Python code as input, and the input transformation framework isn't, and shouldn't be, aware of what specific magics do. Other magics could accept unbalanced parentheses, without consuming the following lines.\n\nI do see a problem, though, with code like:\n\n```\na = (\"%s\"\n%foo\n)\n```\n\nIt's somewhat contrived, but it is valid, and at present we avoid transforming `%foo`, although I'm not quite sure how. I'll have a think about this.\n"
  }
]
