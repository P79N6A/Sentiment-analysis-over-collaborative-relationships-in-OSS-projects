[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/814187",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-814187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 814187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDE4Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-27T02:56:57Z",
    "updated_at": "2011-02-27T02:56:57Z",
    "author_association": "MEMBER",
    "body": "This looks great.  I'll start exploring the code.\n\nThanks for the work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/820483",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-820483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 820483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDQ4Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-01T00:23:11Z",
    "updated_at": "2011-03-01T00:23:11Z",
    "author_association": "MEMBER",
    "body": "One thought I've not yet implemented: A size check/trimmer operation that can run at startup. This isn't a high priority (I've got some 2700 commands stored now, taking only 152 KB), but if the file keeps growing, eventually we're going to want some way to reduce the size that's better than just deleting it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/824334",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-824334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 824334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDMzNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-01T23:03:42Z",
    "updated_at": "2011-03-01T23:43:52Z",
    "author_association": "MEMBER",
    "body": "All of the main get_hist\\* methods to retrieve history can now retrieve output history if it's available and requested (get_hist_search was the last one to be added). N.B. The search is always done on the input, even when output is being retrieved as well.\n\nI've also simplified some code, so that the %history magic command has a standard interface for the three ways to get history, and added a couple of unit tests.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/832633",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-832633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 832633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjYzMw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-04T00:51:36Z",
    "updated_at": "2011-03-04T00:51:36Z",
    "author_association": "MEMBER",
    "body": "Just a note to help prevent dangling fixed Issues: Merging this will close #284\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/833178",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-833178",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 833178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzE3OA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-04T04:44:56Z",
    "updated_at": "2011-03-04T04:44:56Z",
    "author_association": "MEMBER",
    "body": "I'm going to start playing with this as well over the next few days, after I finish my conference madness.  Many thanks for this work, Thomas!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/840632",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-840632",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 840632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDYzMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-06T20:46:56Z",
    "updated_at": "2011-03-06T20:46:56Z",
    "author_association": "MEMBER",
    "body": "I notice that commands enter the history before history requests are processed. Is it possible to not do this?\n\ne.g.:\n- `In[-1]` will _always_ be 'In[-1]'\n- and `%hist -l <n>` will always return the last n-1 lines, plus '%hist -l n'\n\nProbably not a big deal, but it would be nice for history to not include the present if it's straightforward to do so.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/840836",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-840836",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 840836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDgzNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-06T22:12:55Z",
    "updated_at": "2011-03-06T22:12:55Z",
    "author_association": "MEMBER",
    "body": "All commands are stored before being run at present, and I've not investigated the methods in interactiveshell which call store_inputs. I'll look into it.\n\n(Aside: I've realised `%hist -l` has a corner case - if database caching is enabled, you won't see lines until they're flushed to the database.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/841145",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-841145",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 841145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTE0NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T00:33:31Z",
    "updated_at": "2011-03-07T00:33:31Z",
    "author_association": "MEMBER",
    "body": "Hmmm, I've remembered that part of the motivation for storing commands before running them was that if IPython died during a command (e.g. if an SSH connection failed in a long-running command, or if you find a command that can crash IPython itself), the latest command could be retrieved. \n\nI agree that it's more intuitive for `In[-1]` to be the previous line, rather than the current one. But I'm not sure whether that's more important than the ability to save commands instantly. I'd rather avoid working around it by turning `In` into an object that's almost a list but behaves differently in unexpected ways. I think I'll sleep on it, but feel free to add your thoughts in the meantime.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/844331",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-844331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 844331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDMzMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T20:03:10Z",
    "updated_at": "2011-03-07T20:03:10Z",
    "author_association": "MEMBER",
    "body": "At the moment, I'm inclined to leave the history as is, so commands are stored as the \"last\" command before the history is retrieved. It seems to have been this way since at least 0.10, and I can't see a neat way to change it. Let me know if you think it's more important than that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/844409",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-844409",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 844409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDQwOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T20:25:55Z",
    "updated_at": "2011-03-07T20:25:55Z",
    "author_association": "MEMBER",
    "body": "Fair enough.  It's definitely much more important for commands to persist before execution than it is for edge cases to be neater.  I just thought there might be a clean solution, but don't bother if it's not obvious.  I don't imagine that users actually use the history for recent commands that often, using up-arrow or ctrl-r, etc. instead.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/844529",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-844529",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 844529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDUyOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T20:58:40Z",
    "updated_at": "2011-03-07T20:58:40Z",
    "author_association": "MEMBER",
    "body": "Does it make sense to store the date/time of sessions and/or commands?  That might make later pruning and/or advanced searching efforts easier.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/844784",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-844784",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 844784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDc4NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T21:55:49Z",
    "updated_at": "2011-03-07T21:55:49Z",
    "author_association": "MEMBER",
    "body": "It's an interesting idea, and I can envisage slick timelines of my IPython usage. But I don't want to add further complexity without a good reason, and I'm not sure how useful it would really be (I don't think I've ever remembered a command I used by date; YMMV). We've got this far by simply recording a big list of commands. In fact, I doubt even the session interface will see a huge amount of use. It really grew out of a desire to do something sensible with history if two IPython shells are running at once (in the current setup, whichever one gets the last save_history will wipe away commands from the other).\n\nFor pruning, I envisage something like \"when history db exceeds 500 MB, trim the first 20% of sessions\". (At present, that would take something like 9 million commands before needing pruning!)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/844832",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-844832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 844832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDgzMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T22:07:23Z",
    "updated_at": "2011-03-07T22:07:23Z",
    "author_association": "MEMBER",
    "body": "That makes sense.  Are the tables organized in such a way that it would be easy to attach a single date (or two: for open/close) to each session?  I think that has more value-per-data than a stamp for each command.  Though if you want a close-time, that won't be easy to handle IPython crashing unless you are timestamping each command, which gives you a deducible open/close times from the first and last commands.\n\nI can certainly imagine that one might want to load up the session for last Tuesday, but not want to sift through integer session ids to find the right one.\n\nI'm just throwing out ideas to consider, you don't have to take them.  I know the model for this is to have the same functionality on a database, which has obvious wins, but when you have a potentially large, efficiently searchable history, I do tend to think of fancier ways to use it.  But maybe this stuff really belongs in the notebook interface.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/844902",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-844902",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 844902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDkwMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T22:21:55Z",
    "updated_at": "2011-03-07T22:21:55Z",
    "author_association": "MEMBER",
    "body": "I quite like the idea of loading up last Tuesday's session, yes. Especially with something like the qtconsole, it would be simple to have a little table view of sessions (perhaps with optional names/remarks).\n\nAt present, sessions are just a number in the session column for individual inputs/outputs. But it would be easy enough to add an extra table for sessions. Time would be automatically written when the session started, a remark could be added by the user, and the closing time and number of commands would be saved on a normal exit (but code shouldn't expect them to be there in every case).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/861809",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-861809",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 861809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTgwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-11T20:06:03Z",
    "updated_at": "2011-03-11T20:06:03Z",
    "author_association": "MEMBER",
    "body": "Have  a look at this. If it has trouble, you might need to delete $IPYTHON_DIR/history.sqlite, as the database is slightly different.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/864728",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-864728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 864728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDcyOA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-12T23:47:09Z",
    "updated_at": "2011-03-12T23:47:09Z",
    "author_association": "MEMBER",
    "body": "Hey Thomas, the branch currently doesn't merge onto trunk without conflicts:\n\n<pre>\n(master)amirbar[ipython]> git checkout -b takluyver-sqlite-history master\nSwitched to a new branch 'takluyver-sqlite-history'\n(takluyver-sqlite-history)amirbar[ipython]> git pull https://github.com/takluyver/ipython.git sqlite-history\nFrom https://github.com/takluyver/ipython\n * branch            sqlite-history -> FETCH_HEAD\nAuto-merging IPython/core/displayhook.py\nAuto-merging IPython/core/history.py\nCONFLICT (content): Merge conflict in IPython/core/history.py\nAuto-merging IPython/core/interactiveshell.py\nAuto-merging IPython/core/magic.py\nAuto-merging IPython/core/tests/test_magic.py\nAuto-merging IPython/frontend/qt/console/ipython_widget.py\nAuto-merging IPython/frontend/terminal/interactiveshell.py\nAuto-merging IPython/zmq/ipkernel.py\nAuto-merging IPython/zmq/kernelmanager.py\nAutomatic merge failed; fix conflicts and then commit the result.\n</pre>\n\n\nAny idea why?  Might be worth fixing that so it applies cleanly before further review...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/864773",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-864773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 864773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDc3Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T00:14:39Z",
    "updated_at": "2011-03-13T00:14:39Z",
    "author_association": "MEMBER",
    "body": "Nothing immediately springs to mind, but I'll remember to rebase it once I've sorted out the macro question.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/864814",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-864814",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 864814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDgxNA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T00:38:12Z",
    "updated_at": "2011-03-13T00:38:12Z",
    "author_association": "MEMBER",
    "body": "Ok, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/864843",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-864843",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 864843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDg0Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T00:56:55Z",
    "updated_at": "2011-03-13T00:56:55Z",
    "author_association": "MEMBER",
    "body": "Rebased on trunk, and merged in some code for expanding macros in prefilter (work in progress).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/864911",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-864911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 864911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDkxMQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T01:50:11Z",
    "updated_at": "2011-03-13T01:50:11Z",
    "author_association": "MEMBER",
    "body": "Hey, you may want to rebase again quickly, just so you get a proper passing test suite.  Trunk had inadvertently gone bad with a test suite that hangs because of a %cpaste example, I found it with bisection:\n\n<pre>\n((a2d9aa2...)|BISECTING)amirbar[ipython]> git bisect bad\na2d9aa20c0f1cf170cc16a7e8eaa9289f9af1e29 is the first bad commit\ncommit a2d9aa20c0f1cf170cc16a7e8eaa9289f9af1e29\nAuthor: Sathesh Chandra <satheshchandra88@gmail.com>\nDate:   Tue Feb 15 19:27:38 2011 +0000\n\n    Add example for %cpaste\n</pre>\n\n\nI just pushed a small fix so you can rebase. That way we can evaluate this on top of a properly running test suite.  This is complex enough code that we shouldn't review it without carefully testing it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/864918",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-864918",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 864918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDkxOA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T01:54:27Z",
    "updated_at": "2011-03-13T01:54:27Z",
    "author_association": "MEMBER",
    "body": "BTW, I'm not sure the timestamping is such a bad idea.  Matlab does show old history timestamped; it's a small amount of data and it could come in handy in some scenarios...\n\nNow that we have this rich database, we might as well store all the relevant information so that people can do interesting things with it, no?  You could for example search for commands you typed on a given day while working on something, just like you search gmail with date controls...\n\nI can easily see once this information is in and we're happy with the database, rich frontends like the qt/web ones building a little history navigator with all kinds of doodads :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/865690",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-865690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 865690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTY5MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T12:56:08Z",
    "updated_at": "2011-03-13T12:56:08Z",
    "author_association": "MEMBER",
    "body": "Rerebased.\n\nBy timestamping, do you mean timestamping each individual command? I've added timestamps now for the beginning and end of the session, as Min suggested. It's easy enough to add a timestamp per input, if we want that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/865785",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-865785",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 865785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTc4NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-13T14:05:01Z",
    "updated_at": "2011-03-13T14:05:01Z",
    "author_association": "MEMBER",
    "body": "OK, macros are now working. History is only stored after all the input transformations have been done. I've folded run_one_block and run_single_line into run_cell, so we're down to just three run_\\* methods (cell, source, code), which follow a simple hierarchy.\n\nThis will make a small practical difference - previously, a single line block at the end of a multi-block cell would be dynamically transformed (macros, automagic, and so on). Now, only simple single line cells get that treatment. The last part of a multi-block cell can still get compiled in \"single\" mode, so it produces output, but the dynamic transforms won't happen.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/900593",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-900593",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 900593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDU5Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-21T22:18:14Z",
    "updated_at": "2011-03-21T22:18:14Z",
    "author_association": "MEMBER",
    "body": "I've reworked the magic commands as I suggested on the mailing list, so %rep (=%recall) brings things to the next input prompt, and %rerun executes code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/910420",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-910420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 910420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMDQyMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-24T00:04:21Z",
    "updated_at": "2011-03-24T00:04:21Z",
    "author_association": "MEMBER",
    "body": "Completed code review during sage days 29 sprint.  Upon final edits arising from code review, merge away.\n\nExcellent work across the board, many thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/910545",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-910545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 910545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMDU0NQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-24T00:43:48Z",
    "updated_at": "2011-03-24T00:45:46Z",
    "author_association": "MEMBER",
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/911249",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-911249",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 911249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTI0OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-24T06:31:49Z",
    "updated_at": "2011-03-24T06:31:49Z",
    "author_association": "MEMBER",
    "body": "Dealt with the comments from today. It will move a corrupt database aside on startup, and if there's a collision on the session/line numbers, it will get a new session number from the database (and not crash).\n\nFernando, do you want to give this a final review, or shall I go ahead and merge it straight away?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/911372",
    "html_url": "https://github.com/ipython/ipython/pull/282#issuecomment-911372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/282",
    "id": 911372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMTM3Mg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-24T07:34:51Z",
    "updated_at": "2011-03-24T07:34:51Z",
    "author_association": "MEMBER",
    "body": "Go for it, I think we did a very thorough review today.  And there's always room to improve things later, so we don't need to hold up for perfection at each step :)\n\nThanks!\n"
  }
]
