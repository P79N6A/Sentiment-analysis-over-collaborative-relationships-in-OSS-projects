[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234597222",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-234597222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 234597222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDU5NzIyMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T16:56:00Z",
    "updated_at": "2016-07-22T16:56:00Z",
    "author_association": "MEMBER",
    "body": "ip is injected in the main namespace, though a module is executed by python in it's own namespace we don't have control over.\n\nYou can check for\n\n```\nfrom IPython.terminal.interactiveshell import TerminalInteractiveShell\nTerminalInteractiveShell._instance # None if no IPython available.\n```\n\nIt's,  of course,  private API (because of leading underscore).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234716929",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-234716929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 234716929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcxNjkyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T12:58:12Z",
    "updated_at": "2016-07-23T12:58:12Z",
    "author_association": "MEMBER",
    "body": "I think we do inject `get_ipython()` into the builtins, so it's accessible to every module but possibly we only do that after the startup scripts have run. That's something we may want to fix. `BuiltinTrap` is the class that adds things to builtins.\n\nBTW, it is possible to check for an initialised TIS using public APIs:\n\n``` python\nif TerminalInteractiveShell.initialized():   # Bool - True if it's instantiated\n    ipshell = TerminalInteractiveShell.instance()\n```\n\n`.instance()` will create an instance if one doesn't already exist.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234751840",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-234751840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 234751840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc1MTg0MA==",
    "user": {
      "login": "elvis-sik",
      "id": 11654926,
      "node_id": "MDQ6VXNlcjExNjU0OTI2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11654926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elvis-sik",
      "html_url": "https://github.com/elvis-sik",
      "followers_url": "https://api.github.com/users/elvis-sik/followers",
      "following_url": "https://api.github.com/users/elvis-sik/following{/other_user}",
      "gists_url": "https://api.github.com/users/elvis-sik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elvis-sik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elvis-sik/subscriptions",
      "organizations_url": "https://api.github.com/users/elvis-sik/orgs",
      "repos_url": "https://api.github.com/users/elvis-sik/repos",
      "events_url": "https://api.github.com/users/elvis-sik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elvis-sik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T01:53:31Z",
    "updated_at": "2016-07-24T01:53:31Z",
    "author_association": "NONE",
    "body": "@takluyver I notice if I simply run from from the command line `$ ipython a_module.py`, the module cannot use the functions IPython adds to builtins (ie, no `get_ipython`). My understanding is that this is desired, right? When we call `ipython` from the command line, it should work as if we were calling `python` on the script.\n\nWhen we are in a REPL, though, IPython's inclusions should be in scope. This is in contrast with the previous situation. In one case, `get_ipython` shouldn't be in scope. On the other one, it should.\n\nIt seems to me that scripts executed during startup are in a grey area in which we are not yet in a REPL, leading us to expect that `get_ipython` should not be in scope, but we are not executing some random script from the command line, but rather about to get into a REPL, so maybe `get_ipython` should be in scope.\n\nBut I do not know, just sharing my thoughts.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234767330",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-234767330",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 234767330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc2NzMzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T09:33:21Z",
    "updated_at": "2016-07-24T09:33:21Z",
    "author_association": "MEMBER",
    "body": "I'd be inclined to say that `ipython some_script.py` should expose `get_ipython()` to the script it runs, as it is being run in IPython. But I don't feel that strongly about it either way - I never use IPython like that myself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234984695",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-234984695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 234984695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDk4NDY5NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T15:18:03Z",
    "updated_at": "2016-07-25T15:18:03Z",
    "author_association": "MEMBER",
    "body": "> I'd be inclined to say that ipython some_script.py should expose get_ipython() to the script it runs, as it is being run in IPython. But I don't feel that strongly about it either way - I never use IPython like that myself.\n\nI'm more incline to think that even in the repl, getting the current shell should be something like \n\n```\nimport IPython\nip = IPython.instance()\n```\n\nbut I wouldn't be against making things consistent. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234986809",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-234986809",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 234986809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDk4NjgwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T15:24:44Z",
    "updated_at": "2016-07-25T15:24:44Z",
    "author_association": "MEMBER",
    "body": "I think we've told people for quite a long time that the existence of `get_ipython()` can be used to check that you're inside IPython. Let's not break that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235543630",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-235543630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 235543630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU0MzYzMA==",
    "user": {
      "login": "ludwigschwardt",
      "id": 392144,
      "node_id": "MDQ6VXNlcjM5MjE0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/392144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ludwigschwardt",
      "html_url": "https://github.com/ludwigschwardt",
      "followers_url": "https://api.github.com/users/ludwigschwardt/followers",
      "following_url": "https://api.github.com/users/ludwigschwardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ludwigschwardt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ludwigschwardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ludwigschwardt/subscriptions",
      "organizations_url": "https://api.github.com/users/ludwigschwardt/orgs",
      "repos_url": "https://api.github.com/users/ludwigschwardt/repos",
      "events_url": "https://api.github.com/users/ludwigschwardt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ludwigschwardt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T10:07:47Z",
    "updated_at": "2016-07-27T10:09:18Z",
    "author_association": "NONE",
    "body": "I've just stepped on this very problem in my code...\n\nI have the following in a module I import:\n\n``` python\ntry:\n    # IPython 0.11 and above\n    _ip = get_ipython()\nexcept NameError:\n    # IPython 0.10 and below (or normal Python shell)\n    _ip = __builtins__.get('__IPYTHON__')\n```\n\nThe problem was picked up with the `ipython script.py` incantation. In this case the module could not see `get_ipython()` but `__IPYTHON__` existed and was set to `True` as opposed to a shell instance.\n\nMaybe I should just drop support for IPython 0.10 and below :-) I mainly use the shell instance for adding tab completion hooks but the latest interface for that is much more convenient.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235865321",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-235865321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 235865321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTg2NTMyMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T11:06:18Z",
    "updated_at": "2016-07-28T11:06:18Z",
    "author_association": "MEMBER",
    "body": "#9818 should fix this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235875247",
    "html_url": "https://github.com/ipython/ipython/issues/9791#issuecomment-235875247",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9791",
    "id": 235875247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTg3NTI0Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T12:01:40Z",
    "updated_at": "2016-07-28T12:01:40Z",
    "author_association": "MEMBER",
    "body": "You can always get the current IPython without relying on any modification of builtins by importing `get_ipython`:\n\n``` python\nfrom IPython import get_ipython\nip = get_ipython()\n```\n\nThis `get_ipython()` will return None if there is no IPython instance. Modules should generally not rely on `get_ipython` being injected into builtins, and should import this function instead.\n"
  }
]
