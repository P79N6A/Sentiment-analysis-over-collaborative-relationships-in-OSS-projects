[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63707054",
    "html_url": "https://github.com/ipython/ipython/pull/6989#issuecomment-63707054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6989",
    "id": 63707054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzA3MDU0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T20:24:04Z",
    "updated_at": "2014-11-19T20:24:23Z",
    "author_association": "MEMBER",
    "body": "Checking if the values are not equal before setting them is consistent with the trait notification logic.  Currently, trait notifications do not fire if a trait value is set to the same value. i.e.\n\n``` python\no.x = 0 # Fires callbacks\no.x = 1 # Fires callbacks\no.x = 1 # Doesn't fire callbacks\n```\n\nBefore we decide to remove the equality comparison, are we sure there aren't any niave implementations that would suffer because of this?  For example, the face that the trait notifications don't fire if the value hasn't actually changed helps prevent infinite loops in asynchronous state synchronization logic, like the widget states.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63709899",
    "html_url": "https://github.com/ipython/ipython/pull/6989#issuecomment-63709899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6989",
    "id": 63709899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzA5ODk5",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T20:43:18Z",
    "updated_at": "2014-11-19T20:43:18Z",
    "author_association": "MEMBER",
    "body": "No new event should be fired because of this change. In the following example, there is no need to check for equality before calling `setattr`.\n\n``` Python\nfrom IPython.utils.traitlets import *\nclass un(HasTraits):\n    x = Bool()\ndef cb():\n    print 'coin'\nv = un()\nv.on_trait_change(cb)\nv.x = True              # fires (True->False)\nsetattr(v, 'x', True)   # does not fire. \n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63727335",
    "html_url": "https://github.com/ipython/ipython/pull/6989#issuecomment-63727335",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6989",
    "id": 63727335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzI3MzM1",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T22:35:01Z",
    "updated_at": "2014-11-19T22:35:01Z",
    "author_association": "MEMBER",
    "body": "ping @minrk \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64285502",
    "html_url": "https://github.com/ipython/ipython/pull/6989#issuecomment-64285502",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6989",
    "id": 64285502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjg1NTAy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-24T23:37:17Z",
    "updated_at": "2014-11-24T23:37:17Z",
    "author_association": "MEMBER",
    "body": "> No new event should be fired because of this change. In the following example, there is no need to check for equality before calling setattr.\n\nAh thanks for clarifying @SylvainCorlay \n"
  }
]
