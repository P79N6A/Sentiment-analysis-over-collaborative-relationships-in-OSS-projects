[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684057",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1684057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1684057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQwNTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T19:44:56Z",
    "updated_at": "2011-07-29T19:44:56Z",
    "author_association": "MEMBER",
    "body": "Not a bug, since it's deliberate, if unpleasant.  active figures get flushed at each output.  This prevents all active figures being reprinted after every single input, but it also prevents there being any active figures between cells.  You can still have Figure objects persist with references to them, they are just not 'active', having figure ID, responding to getfigs(), etc.\n\nMarking as 'enhancement', since we would definitely like to improve this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1685021",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1685021",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1685021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUwMjE=",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T21:06:43Z",
    "updated_at": "2011-07-29T21:06:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I figured it was a side effect of the inline pylab magic. Well, good to document it on the issue tracker I guess.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1686338",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1686338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1686338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODYzMzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-30T00:00:08Z",
    "updated_at": "2011-07-30T00:00:08Z",
    "author_association": "MEMBER",
    "body": "I'll add a short note explaining this in the Qt console docs, but as indicated above it's not really a bug, just a consequence of how the system works in this case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1686342",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1686342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1686342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODYzNDI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-30T00:01:13Z",
    "updated_at": "2011-07-30T00:01:13Z",
    "author_association": "MEMBER",
    "body": "Sorry @minrk, I didn't realize you wanted to keep it open.  Do you actually foresee a way to improve the situation?  If so, feel free to reopen.  It's just that I'm not sure right now we can do a whole lot better...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1686353",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1686353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1686353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODYzNTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-30T00:05:08Z",
    "updated_at": "2011-07-30T00:05:08Z",
    "author_association": "MEMBER",
    "body": "I don't know much about matplotlib internals, but it doesn't seem like this should be difficult.  All we want to do is have getfigs, etc. still reference existing figures, but _not_ draw them every time.  It does make it extremely unpleasant to interact with figures using the inline backend, so it should be kept open until we know it's too ugly/impossible to make it work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1686395",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1686395",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1686395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODYzOTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-30T00:15:36Z",
    "updated_at": "2011-07-30T00:15:36Z",
    "author_association": "MEMBER",
    "body": "Well, there is a way to make that work, which is not to draw every time.  But then it means that you need to call draw() or show() explicitly every time you actually want to see a plot.  So a simple\n\n<pre>\nplot(foo)\n</pre>\n\n\ndoesn't work anymore.\n\nI've gotten used to this mode, but it would be easy to make it configurable (and even switchable at runtime) so that people can decide if they are OK with the explicit draw() requirement which gives them the stable references to figures, or if they prefer the current mode.\n\nWe can revisit this post release, so it does make sense to keep it open.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1686440",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-1686440",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 1686440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY0NDA=",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-30T00:27:34Z",
    "updated_at": "2011-07-30T00:27:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Fernando, I agree with Min that there is likely a clever solution that does what we want it to in \"interactive\" mode but also hangs onto active figures in roughly the same way a wx or Qt session would. I will give it some thought over the weekend.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2451061",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-2451061",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 2451061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTEwNjE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T01:47:47Z",
    "updated_at": "2011-10-19T01:52:53Z",
    "author_association": "MEMBER",
    "body": "@dwf.  We're merging this one now; the default behavior won't change for now, but you can set the config value `close_figures` to `False`.  You can drop this (@minrk, correct me if there's a more direct path to this one; you know the config arcana better than I):\n\n<pre>\nc = get_config()\nc.IPKernelApp.exec_lines = [\n\"from IPython.zmq.pylab import backend_inline\",\n\"cfg = backend_inline.InlineBackendConfig.instance()\",\n\"cfg.close_figures = False\",\n]\n</pre>\n\n\ninto a file named `ipython_notebook_config.py` in your `~/.ipython/profile_default` directory, and that will do the trick.\n\nAfter that change, you'll need to call figure() explicitly to get a new figure.  See #892 for more details on the discussion.\n\nYou can put it in the default config if you want it applied everywhere instead of just in the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2451105",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-2451105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 2451105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTExMDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T01:57:05Z",
    "updated_at": "2011-10-19T01:57:05Z",
    "author_association": "MEMBER",
    "body": "Closed by #892.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2451769",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-2451769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 2451769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE3Njk=",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T03:49:29Z",
    "updated_at": "2011-10-19T03:49:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is great. Thanks for letting me know, I'll try it out!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2451889",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-2451889",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 2451889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE4ODk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T04:23:16Z",
    "updated_at": "2011-10-19T04:23:16Z",
    "author_association": "MEMBER",
    "body": "BTW, it just hit me that exec_lines approach feels really silly now that our config files are pure python.  It's an artifact of the old ipythonrc syntax, where I didn't want to try and parse multiline constructs, but now totally pointless.\n\nI'll see if I can quickly hack up an exec_source and exec_function pair of flags that let you either paste a multiline block in a string or a function (the latter being the best option).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2460237",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-2460237",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 2460237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjAyMzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T19:40:08Z",
    "updated_at": "2011-10-19T19:42:12Z",
    "author_association": "MEMBER",
    "body": "Scratch that, you can already do multilines, so it's just a matter of writing the above more cleanly:\n\n<pre>\nc = get_config()\n\nc.IPKernelApp.exec_lines = [\"\"\"\nfrom IPython.zmq.pylab import backend_inline\ncfg = backend_inline.InlineBackendConfig.instance()\ncfg.close_figures = False\n\"\"\"\n                          ]\n</pre>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2460332",
    "html_url": "https://github.com/ipython/ipython/issues/638#issuecomment-2460332",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/638",
    "id": 2460332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjAzMzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T19:45:56Z",
    "updated_at": "2011-10-19T19:45:56Z",
    "author_association": "MEMBER",
    "body": "And just for the sake of completeness, as pointed out in #735, you can just do (even simpler):\n\n``` python\nc.InlineBackendConfig.close_figures = False\n```\n"
  }
]
