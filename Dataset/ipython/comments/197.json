[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/507623",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-507623",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 507623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzYyMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-31T17:47:12Z",
    "updated_at": "2010-10-31T17:47:12Z",
    "author_association": "MEMBER",
    "body": "Thanks, Jorgen, for the report. I'm pretty sure this is part of our big unicode mess.  I hope to tackle it soon, though if you want to dig in first, I won't be angry :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/507709",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-507709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 507709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzcwOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-31T18:53:50Z",
    "updated_at": "2010-10-31T18:53:50Z",
    "author_association": "MEMBER",
    "body": "This is interesting, since I just made a few unicode filenames using the lines in your output, and ls works just fine for me with non-ascii output in ipython-qt (with both ascii and utf8 defaultencoding).\n\nOSX 10.6.4, System Python 2.6.1\n\nDoes it make it easier or harder when things like this work some places and not others?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/507722",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-507722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 507722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzcyMg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-31T18:59:34Z",
    "updated_at": "2010-10-31T18:59:34Z",
    "author_association": "MEMBER",
    "body": "The highly variable nature of these unicode problems is part of what has made them so hard to track.  It seems that OS, locale, terminal, and god knows what else, all have an impact on exactly what works, what doesn't, and what the specific failure modes are.\n\nSigh...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/904305",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-904305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 904305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNDMwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-22T18:53:15Z",
    "updated_at": "2011-03-22T18:53:15Z",
    "author_association": "MEMBER",
    "body": "If someone with Windows can replicate this, what are the error messages that show up at the console you ran it from?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/916136",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-916136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 916136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNjEzNg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-25T07:02:38Z",
    "updated_at": "2011-03-25T07:02:38Z",
    "author_association": "MEMBER",
    "body": "Jorgen, it seems that now it's also ok on linux.  Do let us know if you can still reproduce it, it's quite possible that all the recent unicode work has helped.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/918081",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-918081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 918081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxODA4MQ==",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-25T18:21:23Z",
    "updated_at": "2011-03-25T18:21:23Z",
    "author_association": "MEMBER",
    "body": "Unfortunately it is still there.\n\nHere is the traceback:\n\nC:\\python\\external\\ipython>ipython-qtconsole\nStarting the kernel at pid: 2216\nXREP Channel on port 4380\nPUB Channel on port 4381\nREQ Channel on port 4382\nHeartbeat REP Channel on port 4383\nTo connect another client to this kernel, use:\n\n## -e --xreq 4380 --sub 4381 --rep 4382 --hb 4383\n\nUnicodeDecodeError                        Traceback (most recent call last)\nC:\\python\\external\\ipython<string> in <module>()\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in main()\n    635                                 shell=kernel.shell)\n    636\n--> 637     start_kernel(namespace, kernel)\n    638\n    639\n\nC:\\python\\external\\ipython\\IPython\\zmq\\entry_point.pyc in start_kernel(namespace\n=Namespace(colors=None, hb=4383, interrupt=580, i...t=584, pub=4381, pylab=None,\n req=4382, xrep=4380), kernel=<IPython.zmq.ipkernel.Kernel object at 0x017C2750>\n)\n    142\n    143     # Start the kernel mainloop.\n--> 144     kernel.start()\n    145\n    146\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in start(self=<IPython.zmq.i\npkernel.Kernel object at 0x017C2750>)\n    154         while True:\n    155             time.sleep(self._poll_interval)\n--> 156             self.do_one_iteration()\n        global independent = undefined\n        global bool = undefined\n        global optional = undefined\n        global default = undefined\n        global False = undefined\n    157\n    158     def record_ports(self, xrep_port, pub_port, req_port, hb_port):\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in do_one_iteration(self=<IP\nython.zmq.ipkernel.Kernel object at 0x017C2750>)\n    138             logger.error(\"UNKNOWN MESSAGE TYPE:\" +str(msg))\n    139         else:\n--> 140             handler(ident, msg)\n    141\n    142         # Check whether we should exit, in case the incoming message set\n the\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in execute_request(self=<IPy\nthon.zmq.ipkernel.Kernel object at 0x017C2750>, ident='ede6493c-ac23-470e-8e38-e\n9902850ccbc', parent={u'content': {u'code': u'ls\\n', u'silent': False, u'user_ex\npressions': {}, u'user_variables': []}, u'header': {u'msg_id': 4, u'session': u'\nede6493c-ac23-470e-8e38-e9902850ccbc', u'username': u'username'}, u'msg_type': u\n'execute_request', u'parent_header': {}})\n    270\n    271         # Flush output before sending the reply.\n--> 272         sys.stdout.flush()\n    273         sys.stderr.flush()\n    274         # FIXME: on rare occasions, the flush doesn't seem to make it to\n the\n\nC:\\python\\external\\ipython\\IPython\\zmq\\iostream.pyc in flush(self=<IPython.zmq.i\nostream.OutStream object at 0x017C2510>)\n     48                 msg = self.session.send(self.pub_socket, u'stream',\n     49                                         content=content,\n---> 50                                         parent=self.parent_header)\n     51                 logger.debug(msg)\n     52                 self._buffer.close()\n\nC:\\python\\external\\ipython\\IPython\\zmq\\session.pyc in send(self=<IPython.zmq.ses\nsion.Session object at 0x017C2450>, socket=<zmq.core.socket.Socket object at 0x0\n180D7B0>, msg_or_type=u'stream', content={u'data': ' Volymen i enhet C har ingen\n etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledig\nt\\n', u'name': u'stdout'}, parent={u'msg_id': 4, u'session': u'ede6493c-ac23-470\ne-8e38-e9902850ccbc', u'username': u'username'}, ident=None)\n    122         if ident is not None:\n    123             socket.send(ident, zmq.SNDMORE)\n--> 124         socket.send_json(msg)\n    125         return msg\n    126\n\nC:\\Python26\\lib\\site-packages\\zmq\\core\\socket.pyd in zmq.core.socket.Socket.send\n_json (zmq\\core\\socket.c:5506)()\n\nC:\\Python26\\lib\\site-packages\\zmq\\utils\\jsonapi.pyc in dumps(o={'content': {u'da\nta': ' Volymen i enhet C har ingen etikett.\\n Volymens ...      7 katalog(er)  2\n55\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'name': u'stdout'}, 'header': {'msg_id'\n: 16, 'session': '3b1a706f-0cc2-45eb-b872-7a093cf5a04a', 'username': u'kernel'},\n 'msg_type': u'stream', 'parent_header': {u'msg_id': 4, u'session': u'ede6493c-a\nc23-470e-8e38-e9902850ccbc', u'username': u'username'}}, **kwargs={})\n     60     \"\"\"%jsonmod\n     61\n---> 62     return jsonmod.dumps(o, separators=(',',':'),**kwargs)\n     63\n     64 def loads(s,**kwargs):\n\nC:\\Python26\\lib\\json__init__.pyc in dumps(obj={'content': {u'data': ' Volymen i\n enhet C har ingen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\n\\xa0848 byte ledigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 16, 'session':\n '3b1a706f-0cc2-45eb-b872-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u's\ntream', 'parent_header': {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9\n902850ccbc', u'username': u'username'}}, skipkeys=False, ensure_ascii=True, chec\nk_circular=True, allow_nan=True, cls=<class 'json.encoder.JSONEncoder'>, indent=\nNone, separators=(',', ':'), encoding='utf-8', default=None, *_kw={})\n    235         check_circular=check_circular, allow_nan=allow_nan, indent=inden\nt,\n    236         separators=separators, encoding=encoding, default=default,\n--> 237         *_kw).encode(obj)\n        global are = undefined\n        global allowed = undefined\n        global should = undefined\n        global be = undefined\n        global decoded = undefined\n        global to = undefined\n        global unicode = undefined\n        global first. = undefined\n    238\n    239\n\nC:\\Python26\\lib\\json\\encoder.pyc in encode(self=<json.encoder.JSONEncoder object\n at 0x019027D0>, o={'content': {u'data': ' Volymen i enhet C har ingen etikett.\\\nn Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'na\nme': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a706f-0cc2-45eb-b872-7a\n093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_header': {u'\nmsg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850ccbc', u'username': u'\nusername'}})\n    365         # exceptions aren't as detailed.  The list call should be roughl\ny\n    366         # equivalent to the PySequence_Fast that ''.join() would do.\n--> 367         chunks = list(self.iterencode(o))\n    368         return ''.join(chunks)\n    369\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode(self=<json.encoder.JSONEncoder o\nbject at 0x019027D0>, o={'content': {u'data': ' Volymen i enhet C har ingen etik\nett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n',\n u'name': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a706f-0cc2-45eb-b8\n72-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_header'\n: {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850ccbc', u'username\n': u'username'}}, markers={26244272: {u'data': ' Volymen i enhet C har ingen eti\nkett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n'\n, u'name': u'stdout'}, 26281280: {'content': {u'data': ' Volymen i enhet C har i\nngen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte l\nedigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a706f-0cc\n2-45eb-b872-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream', 'paren\nt_header': {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850ccbc', u\n'username': u'username'}}})\n    307                 yield chunk\n    308         elif isinstance(o, dict):\n--> 309             for chunk in self._iterencode_dict(o, markers):\n    310                 yield chunk\n    311         else:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode_dict(self=<json.encoder.JSONEnco\nder object at 0x019027D0>, dct={'content': {u'data': ' Volymen i enhet C har ing\nen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte led\nigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a706f-0cc2-\n45eb-b872-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_\nheader': {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850ccbc', u'u\nsername': u'username'}}, markers={26244272: {u'data': ' Volymen i enhet C har in\ngen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte le\ndigt\\n', u'name': u'stdout'}, 26281280: {'content': {u'data': ' Volymen i enhet\nC har ingen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848\n byte ledigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a7\n06f-0cc2-45eb-b872-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream',\n 'parent_header': {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850c\ncbc', u'username': u'username'}}})\n    273             yield encoder(key)\n    274             yield key_separator\n--> 275             for chunk in self._iterencode(value, markers):\n    276                 yield chunk\n    277         if newline_indent is not None:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode(self=<json.encoder.JSONEncoder o\nbject at 0x019027D0>, o={u'data': ' Volymen i enhet C har ingen etikett.\\n Volym\nens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'name': u'\nstdout'}, markers={26244272: {u'data': ' Volymen i enhet C har ingen etikett.\\n\nVolymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'name\n': u'stdout'}, 26281280: {'content': {u'data': ' Volymen i enhet C har ingen eti\nkett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n'\n, u'name': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a706f-0cc2-45eb-b\n872-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_header\n': {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850ccbc', u'usernam\ne': u'username'}}})\n    307                 yield chunk\n    308         elif isinstance(o, dict):\n--> 309             for chunk in self._iterencode_dict(o, markers):\n    310                 yield chunk\n    311         else:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode_dict(self=<json.encoder.JSONEnco\nder object at 0x019027D0>, dct={u'data': ' Volymen i enhet C har ingen etikett.\\\nn Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'na\nme': u'stdout'}, markers={26244272: {u'data': ' Volymen i enhet C har ingen etik\nett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n',\n u'name': u'stdout'}, 26281280: {'content': {u'data': ' Volymen i enhet C har in\ngen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte le\ndigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 16, 'session': '3b1a706f-0cc2\n-45eb-b872-7a093cf5a04a', 'username': u'kernel'}, 'msg_type': u'stream', 'parent\n_header': {u'msg_id': 4, u'session': u'ede6493c-ac23-470e-8e38-e9902850ccbc', u'\nusername': u'username'}}})\n    273             yield encoder(key)\n    274             yield key_separator\n--> 275             for chunk in self._iterencode(value, markers):\n    276                 yield chunk\n    277         if newline_indent is not None:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode(self=<json.encoder.JSONEncoder o\nbject at 0x019027D0>, o=' Volymen i enhet C har ingen etikett.\\n Volymens ...\n   7 katalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', markers={26244272: {u\n'data': ' Volymen i enhet C har ingen etikett.\\n Volymens ...      7 katalog(er)\n  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'name': u'stdout'}, 26281280: {'cont\nent': {u'data': ' Volymen i enhet C har ingen etikett.\\n Volymens ...      7 kat\nalog(er)  255\\xa0846\\xa0862\\xa0848 byte ledigt\\n', u'name': u'stdout'}, 'header'\n: {'msg_id': 16, 'session': '3b1a706f-0cc2-45eb-b872-7a093cf5a04a', 'username':\nu'kernel'}, 'msg_type': u'stream', 'parent_header': {u'msg_id': 4, u'session': u\n'ede6493c-ac23-470e-8e38-e9902850ccbc', u'username': u'username'}}})\n    292                     and not (_encoding == 'utf-8')):\n    293                 o = o.decode(_encoding)\n--> 294             yield encoder(o)\n    295         elif o is None:\n    296             yield 'null'\n\nUnicodeDecodeError: 'utf8' codec can't decode bytes in position 60-62: invalid d\nata\nQObject::killTimers: timers cannot be stopped from another thread\n^C\nC:\\python\\external\\ipython>\nC:\\python\\external\\ipython>ipython-qtconsole\nStarting the kernel at pid: 3140\nXREP Channel on port 4534\nPUB Channel on port 4535\nREQ Channel on port 4536\nHeartbeat REP Channel on port 4537\nTo connect another client to this kernel, use:\n\n## -e --xreq 4534 --sub 4535 --rep 4536 --hb 4537\n\nUnicodeDecodeError                        Traceback (most recent call last)\nC:\\python\\external\\ipython<string> in <module>()\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in main()\n    635                                 shell=kernel.shell)\n    636\n--> 637     start_kernel(namespace, kernel)\n    638\n    639\n\nC:\\python\\external\\ipython\\IPython\\zmq\\entry_point.pyc in start_kernel(namespace\n=Namespace(colors=None, hb=4537, interrupt=580, i...t=584, pub=4535, pylab=None,\n req=4536, xrep=4534), kernel=<IPython.zmq.ipkernel.Kernel object at 0x017C2750>\n)\n    142\n    143     # Start the kernel mainloop.\n--> 144     kernel.start()\n    145\n    146\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in start(self=<IPython.zmq.i\npkernel.Kernel object at 0x017C2750>)\n    154         while True:\n    155             time.sleep(self._poll_interval)\n--> 156             self.do_one_iteration()\n        global independent = undefined\n        global bool = undefined\n        global optional = undefined\n        global default = undefined\n        global False = undefined\n    157\n    158     def record_ports(self, xrep_port, pub_port, req_port, hb_port):\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in do_one_iteration(self=<IP\nython.zmq.ipkernel.Kernel object at 0x017C2750>)\n    138             logger.error(\"UNKNOWN MESSAGE TYPE:\" +str(msg))\n    139         else:\n--> 140             handler(ident, msg)\n    141\n    142         # Check whether we should exit, in case the incoming message set\n the\n\nC:\\python\\external\\ipython\\IPython\\zmq\\ipkernel.pyc in execute_request(self=<IPy\nthon.zmq.ipkernel.Kernel object at 0x017C2750>, ident='6807a61a-53a1-451f-a19d-7\n144aa95717a', parent={u'content': {u'code': u'ls\\n', u'silent': False, u'user_ex\npressions': {}, u'user_variables': []}, u'header': {u'msg_id': 2, u'session': u'\n6807a61a-53a1-451f-a19d-7144aa95717a', u'username': u'username'}, u'msg_type': u\n'execute_request', u'parent_header': {}})\n    270\n    271         # Flush output before sending the reply.\n--> 272         sys.stdout.flush()\n    273         sys.stderr.flush()\n    274         # FIXME: on rare occasions, the flush doesn't seem to make it to\n the\n\nC:\\python\\external\\ipython\\IPython\\zmq\\iostream.pyc in flush(self=<IPython.zmq.i\nostream.OutStream object at 0x017C2510>)\n     48                 msg = self.session.send(self.pub_socket, u'stream',\n     49                                         content=content,\n---> 50                                         parent=self.parent_header)\n     51                 logger.debug(msg)\n     52                 self._buffer.close()\n\nC:\\python\\external\\ipython\\IPython\\zmq\\session.pyc in send(self=<IPython.zmq.ses\nsion.Session object at 0x017C2450>, socket=<zmq.core.socket.Socket object at 0x0\n180D7B0>, msg_or_type=u'stream', content={u'data': ' Volymen i enhet C har ingen\n etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledig\nt\\n', u'name': u'stdout'}, parent={u'msg_id': 2, u'session': u'6807a61a-53a1-451\nf-a19d-7144aa95717a', u'username': u'username'}, ident=None)\n    122         if ident is not None:\n    123             socket.send(ident, zmq.SNDMORE)\n--> 124         socket.send_json(msg)\n    125         return msg\n    126\n\nC:\\Python26\\lib\\site-packages\\zmq\\core\\socket.pyd in zmq.core.socket.Socket.send\n_json (zmq\\core\\socket.c:5506)()\n\nC:\\Python26\\lib\\site-packages\\zmq\\utils\\jsonapi.pyc in dumps(o={'content': {u'da\nta': ' Volymen i enhet C har ingen etikett.\\n Volymens ...      7 katalog(er)  2\n55\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'name': u'stdout'}, 'header': {'msg_id'\n: 6, 'session': '6ccc3916-17c0-4305-9286-7e58b4ce9ab9', 'username': u'kernel'},\n'msg_type': u'stream', 'parent_header': {u'msg_id': 2, u'session': u'6807a61a-53\na1-451f-a19d-7144aa95717a', u'username': u'username'}}, **kwargs={})\n     60     \"\"\"%jsonmod\n     61\n---> 62     return jsonmod.dumps(o, separators=(',',':'),**kwargs)\n     63\n     64 def loads(s,**kwargs):\n\nC:\\Python26\\lib\\json__init__.pyc in dumps(obj={'content': {u'data': ' Volymen i\n enhet C har ingen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\n\\xa0296 byte ledigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 6, 'session':\n'6ccc3916-17c0-4305-9286-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'st\nream', 'parent_header': {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-714\n4aa95717a', u'username': u'username'}}, skipkeys=False, ensure_ascii=True, check\n_circular=True, allow_nan=True, cls=<class 'json.encoder.JSONEncoder'>, indent=N\none, separators=(',', ':'), encoding='utf-8', default=None, *_kw={})\n    235         check_circular=check_circular, allow_nan=allow_nan, indent=inden\nt,\n    236         separators=separators, encoding=encoding, default=default,\n--> 237         *_kw).encode(obj)\n        global are = undefined\n        global allowed = undefined\n        global should = undefined\n        global be = undefined\n        global decoded = undefined\n        global to = undefined\n        global unicode = undefined\n        global first. = undefined\n    238\n    239\n\nC:\\Python26\\lib\\json\\encoder.pyc in encode(self=<json.encoder.JSONEncoder object\n at 0x019029F0>, o={'content': {u'data': ' Volymen i enhet C har ingen etikett.\\\nn Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'na\nme': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc3916-17c0-4305-9286-7e5\n8b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_header': {u'm\nsg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717a', u'username': u'u\nsername'}})\n    365         # exceptions aren't as detailed.  The list call should be roughl\ny\n    366         # equivalent to the PySequence_Fast that ''.join() would do.\n--> 367         chunks = list(self.iterencode(o))\n    368         return ''.join(chunks)\n    369\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode(self=<json.encoder.JSONEncoder o\nbject at 0x019029F0>, o={'content': {u'data': ' Volymen i enhet C har ingen etik\nett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n',\n u'name': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc3916-17c0-4305-928\n6-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_header':\n {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717a', u'username'\n: u'username'}}, markers={26247792: {u'data': ' Volymen i enhet C har ingen etik\nett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n',\n u'name': u'stdout'}, 26249088: {'content': {u'data': ' Volymen i enhet C har in\ngen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte le\ndigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc3916-17c0-\n4305-9286-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_\nheader': {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717a', u'u\nsername': u'username'}}})\n    307                 yield chunk\n    308         elif isinstance(o, dict):\n--> 309             for chunk in self._iterencode_dict(o, markers):\n    310                 yield chunk\n    311         else:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode_dict(self=<json.encoder.JSONEnco\nder object at 0x019029F0>, dct={'content': {u'data': ' Volymen i enhet C har ing\nen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte led\nigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc3916-17c0-4\n305-9286-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_h\neader': {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717a', u'us\nername': u'username'}}, markers={26247792: {u'data': ' Volymen i enhet C har ing\nen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte led\nigt\\n', u'name': u'stdout'}, 26249088: {'content': {u'data': ' Volymen i enhet C\n har ingen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296\nbyte ledigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc391\n6-17c0-4305-9286-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', '\nparent_header': {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717\na', u'username': u'username'}}})\n    273             yield encoder(key)\n    274             yield key_separator\n--> 275             for chunk in self._iterencode(value, markers):\n    276                 yield chunk\n    277         if newline_indent is not None:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode(self=<json.encoder.JSONEncoder o\nbject at 0x019029F0>, o={u'data': ' Volymen i enhet C har ingen etikett.\\n Volym\nens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'name': u'\nstdout'}, markers={26247792: {u'data': ' Volymen i enhet C har ingen etikett.\\n\nVolymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'name\n': u'stdout'}, 26249088: {'content': {u'data': ' Volymen i enhet C har ingen eti\nkett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n'\n, u'name': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc3916-17c0-4305-92\n86-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_header'\n: {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717a', u'username\n': u'username'}}})\n    307                 yield chunk\n    308         elif isinstance(o, dict):\n--> 309             for chunk in self._iterencode_dict(o, markers):\n    310                 yield chunk\n    311         else:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode_dict(self=<json.encoder.JSONEnco\nder object at 0x019029F0>, dct={u'data': ' Volymen i enhet C har ingen etikett.\\\nn Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'na\nme': u'stdout'}, markers={26247792: {u'data': ' Volymen i enhet C har ingen etik\nett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n',\n u'name': u'stdout'}, 26249088: {'content': {u'data': ' Volymen i enhet C har in\ngen etikett.\\n Volymens ...      7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte le\ndigt\\n', u'name': u'stdout'}, 'header': {'msg_id': 6, 'session': '6ccc3916-17c0-\n4305-9286-7e58b4ce9ab9', 'username': u'kernel'}, 'msg_type': u'stream', 'parent_\nheader': {u'msg_id': 2, u'session': u'6807a61a-53a1-451f-a19d-7144aa95717a', u'u\nsername': u'username'}}})\n    273             yield encoder(key)\n    274             yield key_separator\n--> 275             for chunk in self._iterencode(value, markers):\n    276                 yield chunk\n    277         if newline_indent is not None:\n\nC:\\Python26\\lib\\json\\encoder.pyc in _iterencode(self=<json.encoder.JSONEncoder o\nbject at 0x019029F0>, o=' Volymen i enhet C har ingen etikett.\\n Volymens ...\n   7 katalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', markers={26247792: {u\n'data': ' Volymen i enhet C har ingen etikett.\\n Volymens ...      7 katalog(er)\n  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'name': u'stdout'}, 26249088: {'cont\nent': {u'data': ' Volymen i enhet C har ingen etikett.\\n Volymens ...      7 kat\nalog(er)  255\\xa0846\\xa0711\\xa0296 byte ledigt\\n', u'name': u'stdout'}, 'header'\n: {'msg_id': 6, 'session': '6ccc3916-17c0-4305-9286-7e58b4ce9ab9', 'username': u\n'kernel'}, 'msg_type': u'stream', 'parent_header': {u'msg_id': 2, u'session': u'\n6807a61a-53a1-451f-a19d-7144aa95717a', u'username': u'username'}}})\n    292                     and not (_encoding == 'utf-8')):\n    293                 o = o.decode(_encoding)\n--> 294             yield encoder(o)\n    295         elif o is None:\n    296             yield 'null'\n\nUnicodeDecodeError: 'utf8' codec can't decode bytes in position 60-62: invalid d\nata\n\nC:\\python\\external\\ipython>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/918118",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-918118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 918118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxODExOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-25T18:29:05Z",
    "updated_at": "2011-03-25T18:29:05Z",
    "author_association": "MEMBER",
    "body": "Copied to gist where it's more readable:\n\nhttps://gist.github.com/887333\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/919245",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-919245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 919245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxOTI0NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-25T23:42:50Z",
    "updated_at": "2011-03-25T23:42:50Z",
    "author_association": "MEMBER",
    "body": "Right. As far as I can work out, it calls an external process, and sucks up its stdout with a pipe. That output gets printed, but we've overridden print by replacing our own process' sys.stdout, so that gets recaptured in order to be sent over zmq. Somewhere along that pipeline, it needs to be decoded with your system code page.\n\nI've made a change for you to try, in my unicode-win-process branch: https://github.com/takluyver/ipython/commit/060f1cab7c31dc3006348b10a7f1f192f16aa0f9, but I can't test it myself. We tried and failed to get it set up on the only Windows laptop here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/919850",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-919850",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 919850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxOTg1MA==",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-26T07:46:13Z",
    "updated_at": "2011-03-26T07:46:13Z",
    "author_association": "MEMBER",
    "body": "Now it works.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/920187",
    "html_url": "https://github.com/ipython/ipython/issues/197#issuecomment-920187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/197",
    "id": 920187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDE4Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-26T13:18:29Z",
    "updated_at": "2011-03-26T13:18:29Z",
    "author_association": "MEMBER",
    "body": "Alright, I'll make it a pull request.\n"
  }
]
