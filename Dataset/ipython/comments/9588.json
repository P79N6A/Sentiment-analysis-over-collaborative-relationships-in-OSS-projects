[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/224954048",
    "html_url": "https://github.com/ipython/ipython/issues/9588#issuecomment-224954048",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9588",
    "id": 224954048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk1NDA0OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T16:41:39Z",
    "updated_at": "2016-06-09T16:41:39Z",
    "author_association": "MEMBER",
    "body": "I'm going to tag that as \"new feature\", that would be one more carrot for Python 3 once implemented :-P. \nI might have a got at that before but not promises !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/228430677",
    "html_url": "https://github.com/ipython/ipython/issues/9588#issuecomment-228430677",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9588",
    "id": 228430677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQzMDY3Nw==",
    "user": {
      "login": "gforsyth",
      "id": 3596999,
      "node_id": "MDQ6VXNlcjM1OTY5OTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3596999?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gforsyth",
      "html_url": "https://github.com/gforsyth",
      "followers_url": "https://api.github.com/users/gforsyth/followers",
      "following_url": "https://api.github.com/users/gforsyth/following{/other_user}",
      "gists_url": "https://api.github.com/users/gforsyth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gforsyth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gforsyth/subscriptions",
      "organizations_url": "https://api.github.com/users/gforsyth/orgs",
      "repos_url": "https://api.github.com/users/gforsyth/repos",
      "events_url": "https://api.github.com/users/gforsyth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gforsyth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T18:53:46Z",
    "updated_at": "2016-06-24T18:54:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith -- what should happen if you have \n\n``` console\nIn [5]: def f():\n   ...:     a = 1[CURSOR]\n```\n\nand hit Ctrl-O.  Do you expect a dedent or a preserved indentation level?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/228469492",
    "html_url": "https://github.com/ipython/ipython/issues/9588#issuecomment-228469492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9588",
    "id": 228469492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ2OTQ5Mg==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T21:44:15Z",
    "updated_at": "2016-06-24T21:44:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess it doesn't matter that much? But an indent seems slightly more convenient?\n\nI guess the general proposal would be: hitting control-O should be equivalent to hitting Enter, except that: (a) it should never cause the current block to be executed, (b) it should leave the cursor where it started.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/278515016",
    "html_url": "https://github.com/ipython/ipython/issues/9588#issuecomment-278515016",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9588",
    "id": 278515016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUxNTAxNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T01:07:14Z",
    "updated_at": "2017-02-09T01:07:14Z",
    "author_association": "MEMBER",
    "body": "THis has been partially addressed by #9770 (well, all things listed in here seem to work). \r\nThe one which is weird is : \r\n\r\n```\r\ndef foo():[CURSOR]\r\n    a = 1$\r\n````\r\n`Ctrl-O` end up with:\r\n\r\n```\r\ndef foo():[CURSOR]\r\n$\r\n    a = 1$\r\n```\r\nWhich is still copying indent (if it's a method you are still at class level at least).\r\nBut we appear to have the logic for dedenting one level after `pass`, `return` and indenting one more after `:` so we should be able to improve. \r\n\r\n \r\n\r\n"
  }
]
