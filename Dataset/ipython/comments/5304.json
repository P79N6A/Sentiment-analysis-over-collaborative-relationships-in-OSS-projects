[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37132496",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-37132496",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 37132496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTMyNDk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T17:27:46Z",
    "updated_at": "2014-03-09T17:27:46Z",
    "author_association": "MEMBER",
    "body": "Assigning this to myself for review. I think this should probably be held until after 2.0 now, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37141593",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-37141593",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 37141593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQxNTkz",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T22:11:48Z",
    "updated_at": "2014-03-09T22:11:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've done a `--coverage` test and noticed a few \"invalid\" branches that need testing. So don't worry about that in review. (And don't worry about release version. This has been sitting around in a gist for months.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37142139",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-37142139",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 37142139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyMTM5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T22:30:28Z",
    "updated_at": "2014-03-09T22:30:28Z",
    "author_association": "MEMBER",
    "body": "That's thorough of you - I'm sure there's plenty of branches in our codebase that aren't covered by tests ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37142230",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-37142230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 37142230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyMjMw",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T22:34:25Z",
    "updated_at": "2014-03-09T22:34:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fair enough. Only 40% of lines on my count (without all addons)...\n\nOn 10 March 2014 09:30, Thomas Kluyver notifications@github.com wrote:\n\n>  That's thorough of you - I'm sure there's plenty of branches in our\n> codebase that aren't covered by tests ;-)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5304#issuecomment-37142139\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40995481",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-40995481",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 40995481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTk1NDgx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T01:35:56Z",
    "updated_at": "2014-04-22T01:35:56Z",
    "author_association": "MEMBER",
    "body": "Thanks for this work, and thanks again for the thorough tests.\n\nThe big problem we run into doing introspection is tools like RPC systems that try to do clever stuff on each method call. Can you check how this behaves with some [Pyro4]https://pypi.python.org/pypi/Pyro4) object proxies?\n\n@minrk any other likely culprits to test against?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41075218",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41075218",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41075218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc1MjE4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T18:19:57Z",
    "updated_at": "2014-04-22T18:19:57Z",
    "author_association": "MEMBER",
    "body": "I think we should be fine, as long as the key completion is either:\n- only on `type(obj) is dict` (no subclasses)\n- behind `greedy=True`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41077023",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41077023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41077023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc3MDIz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T18:34:20Z",
    "updated_at": "2014-04-22T18:34:20Z",
    "author_association": "MEMBER",
    "body": "The tests currently cover completing on keys of numpy structs and pandas dataframes. pandas in particular would be useful to have.\n\nI wonder if we can check for some special method or attribute that would indicate that item completion was safe, and/or how it should be done. Akin to the way that you can customise method completion by defining `obj.__dir__()`. We'd still special case `dict` itself, but we'd rely on pandas et al to define this for other objects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41114952",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41114952",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41114952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE0OTUy",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T01:16:13Z",
    "updated_at": "2014-04-23T01:16:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "So you're concerned that there are many methods called on the object, and an RPC overhead might be a bad idea? Currently most of the method calls are hasattrs and getattrs, but I assume that's not specialcased by Pyro. How many hasattrs are too many?\n\nI don't see why this should handle only `dict`, and not `defaultdict`, `Counter`, `OrderedDict`, etc. although I do see why it might be a bad idea for dynamically calculated `keys()` (e.g. a large on-disk kv store). I had considered testing `len` was under some threshold for the `keys` case. I assume an asynchronous timeout is not a good solution? :s \n\nWe could have a non-greedy operation that works for standard-library in-memory dict implementations, and a greedy operation that is broader.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41118542",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41118542",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41118542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE4NTQy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T02:31:01Z",
    "updated_at": "2014-04-23T02:31:01Z",
    "author_association": "MEMBER",
    "body": "I think this is safer than the `eval`s caused by the greedy flag, so it might be okay to have it on by default. I do think it should be disable-able for the unfortunate few for whom it will cause performance and side effect problems (in the general case, calling `obj.keys()` can result in unintended execution of code with undesirable side effects).\n\nI don't think `obj.keys()` should be called unless `isinstance(obj, dict)`. I don't think Dict-like objects that aren't subclasses of dict are an important case to handle, and `obj.keys()` is untrustworthy unless it's a dict instance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41118605",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41118605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41118605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE4NjA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-23T02:32:40Z",
    "updated_at": "2014-04-23T02:32:40Z",
    "author_association": "MEMBER",
    "body": "I would probably put the same type check on dtype - check for ndarray.\n\nDuck-typing is often convenient, but I think completion is an appropriate place to be conservative.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41464406",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41464406",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41464406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDY0NDA2",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-26T09:35:08Z",
    "updated_at": "2014-04-26T09:35:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Doing those `isinstance` checks means that we need to import `numpy` and `pandas` where available. Currently this is causing a test failure because I'm doing it as the module loads. I can do it when the completer is first called, but that lag is only slightly less pleasant. What would you recommend, @minrk?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41478255",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41478255",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41478255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDc4MjU1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-26T19:27:34Z",
    "updated_at": "2014-04-26T19:27:34Z",
    "author_association": "MEMBER",
    "body": "Ah, the isinstance checks should be inside `if 'numpy' in sys.modules`, etc. to avoid unnecessary imports.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41483273",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41483273",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41483273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgzMjcz",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-26T22:47:10Z",
    "updated_at": "2014-04-26T22:47:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay. That makes sense; they can only have such an instance if the module\nis already loaded. Done\n\nOn 27 April 2014 05:27, Min RK notifications@github.com wrote:\n\n>  Ah, the isinstance checks should be inside if 'numpy' in sys.modules,\n> etc. to avoid unnecessary imports.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5304#issuecomment-41478255\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41493329",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-41493329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 41493329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDkzMzI5",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T10:41:55Z",
    "updated_at": "2014-04-27T10:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Changes made, tests passing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42062226",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42062226",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42062226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDYyMjI2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-02T18:23:40Z",
    "updated_at": "2014-05-02T18:23:40Z",
    "author_association": "MEMBER",
    "body": "Thanks @jnothman . I'm merging this - we'll ping you if people run into bugs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42062566",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42062566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42062566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDYyNTY2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-02T18:26:38Z",
    "updated_at": "2014-05-02T18:26:38Z",
    "author_association": "MEMBER",
    "body": "OK, one bug already:\n\n```\nIn [1]: d = {\"hithere\": 0, 1988: 7}\n\nIn [2]: d[\"hi<TAB>   --> d[\"hithere\"]\"\n```\n\nNote the extra trailing `\"`. @jnothman, can you look into this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42100833",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42100833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42100833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAwODMz",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T09:43:56Z",
    "updated_at": "2014-05-03T09:43:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I actually mentioned this on the Issue thread before this PR. It's a\nproblem with not being able to configure GNU Readline: by default it does\nautomatic quote closing on top of the explicit quote closing introduced for\nthis case in this PR. So, for example, this won't happen in Notebook. I'm\nnot sure what a good solution is, except perhaps to detect GNU Readline and\nnot do any explicit quote closing there; or to reimplement Readline :(\n\nOn 3 May 2014 04:26, Thomas Kluyver notifications@github.com wrote:\n\n>  OK, one bug already:\n> \n> In [1]: d = {\"hithere\": 0, 1988: 7}\n> \n> In [2]: d[\"hi<TAB>   --> d[\"hithere\"]\"\n> \n> Note the extra trailing \". @jnothman https://github.com/jnothman, can\n> you look into this?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5304#issuecomment-42062566\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42112121",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42112121",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42112121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTEyMTIx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T18:07:34Z",
    "updated_at": "2014-05-03T18:07:34Z",
    "author_association": "MEMBER",
    "body": "Ah, sorry, I missed that. In that case, I think we should just drop the explicit quote closing. I'd probably just disable it everywhere for now, and open an issue for a proper API to detect whether the frontend is using readline.\n\nWe already have an attribute `readline_use` that says whether the process is using readline, but it doesn't know about the frontend, so it's wrong in `ipython console` (where the frontend is using readline but talking to a kernel process that isn't).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42118282",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42118282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42118282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE4Mjgy",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T22:34:52Z",
    "updated_at": "2014-05-03T22:34:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's a bit unfortunate. One reason to keep it is that it differentiates dict key completion from the myriad other completions suggested at any particular point. If there were a way to _show_ the closing quote but not add it, that would also be useful!\nAre there others who should have a say in this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42118806",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42118806",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42118806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE4ODA2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T23:04:50Z",
    "updated_at": "2014-05-03T23:04:50Z",
    "author_association": "MEMBER",
    "body": "Any of the core IPython developers might jump in, but I think they'd probably agree that the little extra convenience in the notebook doesn't warrant breaking things in the terminal like this.\n\nWe are planning to have a way to send metadata with a completion reply to categorise different kinds of completion. We won't immediately be using that in the UI, but if we ever do, it would be a cleaner way to differentiate than closing the quotes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42119679",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42119679",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42119679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE5Njc5",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T23:53:09Z",
    "updated_at": "2014-05-03T23:53:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "> breaking things in the terminal like this\n\nBreaking a new feature is at least the most innocuous kind of breaking. But\nI guess a series of bug reports about it isn't what you're looking for in\nmaintenance.\n\n> We are planning to have a way to send metadata with a completion reply to\n> categorise different kinds of completion.\n\nThis sounds potentially useful. At the moment the completion UI is very\ncluttered, so finding a way to incorporate it there would benefit.\n\nOn 4 May 2014 09:05, Thomas Kluyver notifications@github.com wrote:\n\n>  Any of the core IPython developers might jump in, but I think they'd\n> probably agree that the little extra convenience in the notebook doesn't\n> warrant breaking things in the terminal like this.\n> \n> We are planning to have a way to send metadata with a completion reply to\n> categorise different kinds of completion. We won't immediately be using\n> that in the UI, but if we ever do, it would be a cleaner way to\n> differentiate than closing the quotes.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5304#issuecomment-42118806\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42120080",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42120080",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42120080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIwMDgw",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-04T00:13:18Z",
    "updated_at": "2014-05-04T00:13:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Btw, this is really either a bug in [Python bindings for] readline, or a problem in not interacting correctly with readline. Arguably, readline should realise that a quote is closed by the completion, and not have to add its own closer. Its API instead provides a `rl_completion_suppress_quote` flag which allows an application to disable the quote completion feature, which is settable by the [`rl.readline`](http://pythonhosted.org/rl/readline.html) Python bindings, but apparently not `readline` or `gnureadline`.\n\nI think the quote completion and bracket closing provided dict key completion is a really useful part of the feature... as long as one is not thwarted by this bug. So I'd like to work out if there's a path towards resolving it, while disabling the feature temporarily.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42120952",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42120952",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42120952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIwOTUy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-04T01:10:14Z",
    "updated_at": "2014-05-04T01:10:14Z",
    "author_association": "MEMBER",
    "body": "Sure, if it can be enabled without this issue, I think we'd be happy to have it. But it's annoying enough in the terminal that I think the quote closing should be disabled until we find a fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42124466",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42124466",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42124466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI0NDY2",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-04T05:20:55Z",
    "updated_at": "2014-05-04T05:20:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We already have an attribute `readline_use` that says whether the process is using readline, but it doesn't know about the frontend, so it's wrong in `ipython console` (where the frontend is using readline but talking to a kernel process that isn't).\n\nReally the issue then is including in the message to the kernel whether `rlcomplete` or `complete` was called. If the initiator is `rlcomplete`, then a `IPCompleter.from_readline` flag could be set. Is that too crazy (i.e. application-specific)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42124480",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-42124480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 42124480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI0NDgw",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-04T05:22:26Z",
    "updated_at": "2014-05-04T05:22:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Sure, if it can be enabled without this issue, I think we'd be happy to have it. But it's annoying enough in the terminal that I think the quote closing should be disabled until we find a fix.\n\nEven if I could get a patch into Python's `readline` module and `gnureadline`, setting the `rl_completion_suppress_quote` flag would require handling the quote completion internally (which would be good for notebook, et al, but certainly additional work)...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/237104354",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-237104354",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 237104354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzEwNDM1NA==",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-03T01:26:14Z",
    "updated_at": "2016-08-03T01:26:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "This, btw, does not appear to have made it into IPython 3.0 release notes.\n\nDespite which, I personally find myself using it all the time as an increasing user of Pandas. Thanks for accepting it!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/237211818",
    "html_url": "https://github.com/ipython/ipython/pull/5304#issuecomment-237211818",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5304",
    "id": 237211818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzIxMTgxOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-03T11:28:18Z",
    "updated_at": "2016-08-03T11:28:18Z",
    "author_association": "MEMBER",
    "body": "Sorry for the oversight! We forgot to ask you for a note in `docs/source/whatsnew/pr`, which is used to compose the release notes. Thanks for working on it :-)\n"
  }
]
