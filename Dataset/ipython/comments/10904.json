[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/344899368",
    "html_url": "https://github.com/ipython/ipython/issues/10904#issuecomment-344899368",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10904",
    "id": 344899368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg5OTM2OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T11:45:01Z",
    "updated_at": "2017-11-16T11:45:01Z",
    "author_association": "MEMBER",
    "body": "Yup, `io.stdout` is deprecated, because it seemed to be unnecessary everywhere that it was being used. We may not have checked the sphinxext code carefully enough in that regard. But I'd rather not un-deprecate it now, because it makes life more confusing to have two different stdout objects around.\r\n\r\nI don't think there's any reason why `IPython.sphinxext` needs to avoid importing Sphinx, so your logging idea sounds good to me.\r\n\r\nThe sphinxext code is somewhat unloved, because we don't actually use that ourselves, so it would be good to have some more attention on it from pandas."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/344904710",
    "html_url": "https://github.com/ipython/ipython/issues/10904#issuecomment-344904710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10904",
    "id": 344904710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkwNDcxMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T12:10:01Z",
    "updated_at": "2017-11-16T12:10:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another side effect from using the main sys.stdout for catching the embedded shell's output is that it makes debugging the code more difficult: you can't put print statements in code to check what is happening (of course you can also use sphinx logging, but I think typically a contributor will try printing), and it seems it also makes it impossible to set pdb breakpoints in the code (not sure why that is, but that is what I am experiencing, it just hangs). \r\nBut not sure that is worth keeping the io module around (it could also be private for ipython directive) .. Or would there be other ways to solve this? Eg can you somehow re-use the sys.stdout implementation / object for a separate stream?\r\n\r\n(independently from that, I think using the sphinx logging for output is a good idea anyhow)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/344906374",
    "html_url": "https://github.com/ipython/ipython/issues/10904#issuecomment-344906374",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10904",
    "id": 344906374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkwNjM3NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T12:17:58Z",
    "updated_at": "2017-11-16T12:18:08Z",
    "author_association": "MEMBER",
    "body": "You could switch `sys.stdout` while it's executing code in the embedded shell, and switch it back afterwards so it functions for normal debugging. It actually looks like there's already code to do that (in `process_input_line()`), but `sys.stdout` is also assigned in `__init__`, making the other code redundant. Maybe you can just get rid of the assignment in `__init__`?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/344908334",
    "html_url": "https://github.com/ipython/ipython/issues/10904#issuecomment-344908334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10904",
    "id": 344908334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkwODMzNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T12:27:08Z",
    "updated_at": "2017-11-16T12:27:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed, those lines are just redundant, and removing the sys.stdout assignment in init seems to fix everything! It makes debugging possible, and also fixes the original issue of output not printed (I suppose you only cannot put print/debug statements inside the inner part of `process_input_line`, but that is already the case right now). \r\nThanks for looking at it! Will do a PR for that.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/344912650",
    "html_url": "https://github.com/ipython/ipython/issues/10904#issuecomment-344912650",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10904",
    "id": 344912650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDkxMjY1MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T12:47:17Z",
    "updated_at": "2017-11-16T12:47:17Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche great! FWIW, for debugging when stdout is redirected, you can always print to `sys.__stdout__`, which should never be redirected and is always the original stdout (same for stderr)."
  }
]
