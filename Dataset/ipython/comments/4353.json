[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25745096",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-25745096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 25745096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzQ1MDk2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-05T09:31:44Z",
    "updated_at": "2013-10-05T09:31:44Z",
    "author_association": "MEMBER",
    "body": "Ping @fperez who apparently added this line as part of dceccd93b8a81ab920529f4f433018fbe9ee5f4b a few years ago.\n\n```\n* commit dceccd93b8a81ab920529f4f433018fbe9ee5f4b\n| Author: Fernando Perez <Fernando.Perez@berkeley.edu>\n| Date:   Tue Oct 5 21:47:21 2010 -0700\n|\n|     Add support for accessing raw data to inputsplitter.\n|\n|     This is necessary to be able to use inputsplitter systematically\n|     across all frontends, including plain terminal one.\n|\n|  IPython/core/history.py                       | 41 ++++++++++++++++++++++++++++++++++++-----\n|  IPython/core/inputsplitter.py                 | 51 ++++++++++++++++++++++++++++++++++++++++++---------\n|  IPython/core/interactiveshell.py              | 46 ++++++++++++++++++++++------------------------\n|  IPython/core/logger.py                        |  7 ++++---\n|  IPython/core/prefilter.py                     |  2 +-\n|  IPython/core/tests/test_inputsplitter.py      | 25 +++++++++++++++++--------\n|  IPython/frontend/terminal/interactiveshell.py | 83 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++--------------------------\n|  7 files changed, 179 insertions(+), 76 deletions(-)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26002847",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26002847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26002847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDAyODQ3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T19:54:02Z",
    "updated_at": "2013-10-09T19:54:02Z",
    "author_association": "MEMBER",
    "body": "This is a tough one. I imagine the reason this is here is that some 3rd party libraries that people are using in IPython muck with these things. Users complain that IPython is broken because of that, so we have fixed it :)\n\nI think a better approach would be to define an appropriate configurable in the `InteractiveShell` class that controls _which_ completer is used. Then we can continue to restore it after each call, but users can use a custom completer by tying in the config system. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26012672",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26012672",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26012672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDEyNjcy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:59:13Z",
    "updated_at": "2013-10-09T21:59:13Z",
    "author_association": "MEMBER",
    "body": "I think it's reasonable to allow code to customize readline after start. I would simply remove the 'fix' that disables any such customization.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26026642",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26026642",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26026642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDI2NjQy",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T03:26:20Z",
    "updated_at": "2013-10-10T03:26:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let me first say that it think it would be awesome if IPython had an API for providing completions. It seems that is blocked on an IPEP, though. \n\nBrian's idea would work, but it seems wrong to me. The _correct_ place to set readline completers should be `readline.set_completer`. I don't see a good reason to force this API to be done through IPython, but then again, I have a very rudimentary understanding of how IPython and readline interact. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26027600",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26027600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26027600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDI3NjAw",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T04:01:17Z",
    "updated_at": "2013-10-10T04:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "By the way should I add a test for this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26068743",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26068743",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26068743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDY4NzQz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T16:27:14Z",
    "updated_at": "2013-10-10T16:27:14Z",
    "author_association": "MEMBER",
    "body": "We do have APIs for providing completions - for objects, you can make attribute completions available by defining `__dir__(self)`. For other syntax, you can register a completer function like so:\n\n```\nip.set_hook('complete_command', my_func, str_key='prefix')\n```\n\nSee examples in InteractiveShell.init_completer()`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26078714",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26078714",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26078714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDc4NzE0",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T18:29:17Z",
    "updated_at": "2013-10-10T18:29:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Jedi completes a lot more than that. It works on nested levels of method chaining, and it doesn't require annotating the code it competes.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26078940",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-26078940",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 26078940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDc4OTQw",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T18:32:32Z",
    "updated_at": "2013-10-10T18:32:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "An example of something Jedi can do\n\n![](http://jedi.jedidjah.ch/en/latest/_images/screenshot_complete.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29243825",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29243825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29243825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQzODI1",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T21:27:43Z",
    "updated_at": "2013-11-25T21:27:43Z",
    "author_association": "MEMBER",
    "body": "What is the status of this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29244536",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29244536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29244536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ0NTM2",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T21:35:18Z",
    "updated_at": "2013-11-25T21:35:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seemed the core devs never decided if this was a good idea or not. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29245557",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29245557",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29245557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ1NTU3",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T21:46:22Z",
    "updated_at": "2013-11-25T21:46:22Z",
    "author_association": "MEMBER",
    "body": "Thanks @asmeurer...\n@minrk @takluyver what do you think about this one? This seems reasonable to me (today is a holiday in my country, so I have time to bother you a lot :grin:, don't kill me :astonished:, he he) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29247451",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29247451",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29247451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3NDUx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:08:01Z",
    "updated_at": "2013-11-25T22:08:01Z",
    "author_association": "MEMBER",
    "body": "Can anyone come up with an actual case where the completions are messed up by someone else? I still think just preventing the reset (this PR), so that users / libraries can override completion makes the most sense.\n\nThe API for recovering from undesirable readline overrides remains simple. Just call:\n\n```\nget_ipython().set_readline_completer()\n```\n\nSo I am +1 to merge this as-is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29247746",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29247746",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29247746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3NzQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:11:28Z",
    "updated_at": "2013-11-25T22:11:28Z",
    "author_association": "MEMBER",
    "body": "I guess we won't know whether anything messes up the completions unless we merge this. So I guess I'm +0 - merge it to see what happens, but be ready to put it back if we break things.\n\nOn the other hand, if the motivation is really to allow enhanced completions in IPython, then I'd be +1 on improving our completion APIs to provide better ways to do that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29249079",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29249079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29249079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ5MDc5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:27:15Z",
    "updated_at": "2013-11-25T22:27:15Z",
    "author_association": "MEMBER",
    "body": "Great! My +1 to merge as is and see later what happens...\n\n> I'd be +1 on improving our completion APIs\n\nI also think it would be interesting at medium(long)-term\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29249276",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29249276",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29249276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ5Mjc2",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:29:34Z",
    "updated_at": "2013-11-25T22:29:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm also obviously +1 to merge. There are apparently no known use-cases of resetting it each time, but there is at least one use-case of not doing so (the Jedi one I mentioned above). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29964457",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29964457",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29964457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY0NDU3",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T05:26:49Z",
    "updated_at": "2013-12-06T05:26:49Z",
    "author_association": "MEMBER",
    "body": "I think it's fiine to merge as-is. Users who outright replace the completer will be responsible for putting in something that's fully functional.\n\nIf we start getting reports of real-world problems, we can go back and think a bit more carefully about making a clean API for this.\n\nI'm sure that original code went in after having one or two reports of problems, but I'm OK moving forward with this right now. Since I didn't document precisely what it was about, let's just go ahead: @asmeurer's case is valid and the fix simple enough.\n\nMerging now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29964671",
    "html_url": "https://github.com/ipython/ipython/pull/4353#issuecomment-29964671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4353",
    "id": 29964671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY0Njcx",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T05:33:28Z",
    "updated_at": "2013-12-06T05:33:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Fernando!\n"
  }
]
