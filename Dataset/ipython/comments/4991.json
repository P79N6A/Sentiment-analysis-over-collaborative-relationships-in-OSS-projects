[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33906972",
    "html_url": "https://github.com/ipython/ipython/issues/4991#issuecomment-33906972",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4991",
    "id": 33906972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA2OTcy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T18:00:35Z",
    "updated_at": "2014-02-02T18:00:35Z",
    "author_association": "MEMBER",
    "body": "Do you mean that the is cleared when the user presses `?+enter` to run the cell? I think the current behavior does make sense most of the time, but let's see what everyone thinks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33907236",
    "html_url": "https://github.com/ipython/ipython/issues/4991#issuecomment-33907236",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4991",
    "id": 33907236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA3MjM2",
    "user": {
      "login": "alanedelman",
      "id": 862530,
      "node_id": "MDQ6VXNlcjg2MjUzMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/862530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alanedelman",
      "html_url": "https://github.com/alanedelman",
      "followers_url": "https://api.github.com/users/alanedelman/followers",
      "following_url": "https://api.github.com/users/alanedelman/following{/other_user}",
      "gists_url": "https://api.github.com/users/alanedelman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alanedelman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alanedelman/subscriptions",
      "organizations_url": "https://api.github.com/users/alanedelman/orgs",
      "repos_url": "https://api.github.com/users/alanedelman/repos",
      "events_url": "https://api.github.com/users/alanedelman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alanedelman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T18:09:51Z",
    "updated_at": "2014-02-02T18:09:51Z",
    "author_association": "NONE",
    "body": "That's what I mean.  We can see if other people prefer the instant disappearing act, but\nI for one do not. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33908458",
    "html_url": "https://github.com/ipython/ipython/issues/4991#issuecomment-33908458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4991",
    "id": 33908458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA4NDU4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T18:51:24Z",
    "updated_at": "2014-02-02T18:51:24Z",
    "author_association": "MEMBER",
    "body": "For me editting a cell an pressing shift enter mean that I made a mistake so any result that could be waiting is in any case not interesting. \n\nI can understand the need to re-execute with many parameters, but then where do you stop ? I can in a few second execute a cell with ten different parameter ? What should happend? Show everything ? only the last ? Show something until the next output arrives ? \n\nI'm trying to understand your use case, and what you would want instead of what we have, but I don't see any alternative that would not be confusing, or annoying half of the time. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33908540",
    "html_url": "https://github.com/ipython/ipython/issues/4991#issuecomment-33908540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4991",
    "id": 33908540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA4NTQw",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T18:54:20Z",
    "updated_at": "2014-02-02T18:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "How hard of a compromise would it be to have it available as a Javascript\nplugin for those who want it?\n\nOn Sun, Feb 2, 2014 at 1:51 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> For me editting a cell an pressing shift enter mean that I made a mistake\n> so any result that could be waiting is in any case not interesting.\n> \n> I can understand the need to re-execute with many parameters, but then\n> where do you stop ? I can in a few second execute a cell with ten different\n> parameter ? What should happend? Show everything ? only the last ? Show\n> something until the next output arrives ?\n> \n> I'm trying to understand your use case, and what you would want instead of\n> what we have, but I don't see any alternative that would not be confusing,\n> or annoying half of the time.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4991#issuecomment-33908458\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33908595",
    "html_url": "https://github.com/ipython/ipython/issues/4991#issuecomment-33908595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4991",
    "id": 33908595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA4NTk1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T18:56:16Z",
    "updated_at": "2014-02-02T18:56:16Z",
    "author_association": "MEMBER",
    "body": "> How hard of a compromise would it be to have it available as a Javascript\n> plugin for those who want it?\n\nNot super easy. But doable. Though it would be smth statefull so brittle.\n"
  }
]
