[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234256048",
    "html_url": "https://github.com/ipython/ipython/issues/9790#issuecomment-234256048",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9790",
    "id": 234256048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDI1NjA0OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T13:40:57Z",
    "updated_at": "2016-07-21T13:40:57Z",
    "author_association": "MEMBER",
    "body": "Maybe it should be deleting and recreating the shell instance. We don't use `ipython_directive` in our own docs, so I'm not very familiar with it. @tacaswell @mdboom and @chebee7i have all done stuff with it (relatively) recently.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234270112",
    "html_url": "https://github.com/ipython/ipython/issues/9790#issuecomment-234270112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9790",
    "id": 234270112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDI3MDExMg==",
    "user": {
      "login": "saimn",
      "id": 311639,
      "node_id": "MDQ6VXNlcjMxMTYzOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saimn",
      "html_url": "https://github.com/saimn",
      "followers_url": "https://api.github.com/users/saimn/followers",
      "following_url": "https://api.github.com/users/saimn/following{/other_user}",
      "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saimn/subscriptions",
      "organizations_url": "https://api.github.com/users/saimn/orgs",
      "repos_url": "https://api.github.com/users/saimn/repos",
      "events_url": "https://api.github.com/users/saimn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saimn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T14:26:15Z",
    "updated_at": "2016-07-21T14:26:15Z",
    "author_association": "NONE",
    "body": "Yes, but the `InteractiveShell` is a singleton. It seems that I can force recreating the shell instance with `.clear_instance()` but again it does not any effect on the memory usage. \n\n```\n        if not self.state.document.current_source in self.seen_docs:\n            print('>>>>>', self.state.document.current_source)\n            self.shell.IP.reset()\n            self.shell.IP.clear_instance()\n            self.shell = EmbeddedSphinxShell(exec_lines)\n            self.shell.directive = self\n```\n\nThere must be something else ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234349970",
    "html_url": "https://github.com/ipython/ipython/issues/9790#issuecomment-234349970",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9790",
    "id": 234349970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM0OTk3MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T18:57:16Z",
    "updated_at": "2016-07-21T18:57:16Z",
    "author_association": "MEMBER",
    "body": "Hum, maybe the history should be turned off with the directive ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234480463",
    "html_url": "https://github.com/ipython/ipython/issues/9790#issuecomment-234480463",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9790",
    "id": 234480463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ4MDQ2Mw==",
    "user": {
      "login": "saimn",
      "id": 311639,
      "node_id": "MDQ6VXNlcjMxMTYzOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saimn",
      "html_url": "https://github.com/saimn",
      "followers_url": "https://api.github.com/users/saimn/followers",
      "following_url": "https://api.github.com/users/saimn/following{/other_user}",
      "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saimn/subscriptions",
      "organizations_url": "https://api.github.com/users/saimn/orgs",
      "repos_url": "https://api.github.com/users/saimn/repos",
      "events_url": "https://api.github.com/users/saimn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saimn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T08:05:51Z",
    "updated_at": "2016-07-22T08:05:51Z",
    "author_association": "NONE",
    "body": "Oh, it seems actually to be due to some quirk with `resource.getrusage(resource.RUSAGE_SELF)` !\nThis [post](http://fa.bianp.net/blog/2013/different-ways-to-get-memory-consumption-or-lessons-learned-from-memory_profiler/) shows some difference in the memory usage from psutil and the resource module: \"_Notably it seems to differ when objects have been recently liberated from the python interpreter_\". And if I compare the two on my sphinx build I get much better result from psutil (and coherent with htop, which I forgot to look at before ...):\nhttps://gist.github.com/saimn/ac795656b7d53cc2625276ee48caa213\n(For each line executed the 1st figure is from resource and the second from psutil)\nSo it seems there is no issue after all, sorry for the noise :/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234585491",
    "html_url": "https://github.com/ipython/ipython/issues/9790#issuecomment-234585491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9790",
    "id": 234585491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDU4NTQ5MQ==",
    "user": {
      "login": "chebee7i",
      "id": 326005,
      "node_id": "MDQ6VXNlcjMyNjAwNQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/326005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chebee7i",
      "html_url": "https://github.com/chebee7i",
      "followers_url": "https://api.github.com/users/chebee7i/followers",
      "following_url": "https://api.github.com/users/chebee7i/following{/other_user}",
      "gists_url": "https://api.github.com/users/chebee7i/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chebee7i/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chebee7i/subscriptions",
      "organizations_url": "https://api.github.com/users/chebee7i/orgs",
      "repos_url": "https://api.github.com/users/chebee7i/repos",
      "events_url": "https://api.github.com/users/chebee7i/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chebee7i/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T16:06:46Z",
    "updated_at": "2016-07-22T16:06:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just confirming: Are any modifications necessary to keep memory usage down?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234886652",
    "html_url": "https://github.com/ipython/ipython/issues/9790#issuecomment-234886652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9790",
    "id": 234886652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDg4NjY1Mg==",
    "user": {
      "login": "saimn",
      "id": 311639,
      "node_id": "MDQ6VXNlcjMxMTYzOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saimn",
      "html_url": "https://github.com/saimn",
      "followers_url": "https://api.github.com/users/saimn/followers",
      "following_url": "https://api.github.com/users/saimn/following{/other_user}",
      "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saimn/subscriptions",
      "organizations_url": "https://api.github.com/users/saimn/orgs",
      "repos_url": "https://api.github.com/users/saimn/repos",
      "events_url": "https://api.github.com/users/saimn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saimn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T08:32:56Z",
    "updated_at": "2016-07-25T08:32:56Z",
    "author_association": "NONE",
    "body": "@chebee7i - Now that I have a more reliable memory measurement, it seems that we still need to end each rst file closing all figures, and doing a `%reset`. With this I end the build at 370Mb of RAM, versus ~1Gb without. But I don't know if there is a good way to handle this directly in the extension.\n\n```\n.. ipython::\n   :suppress:\n\n   In [4]: plt.close(\"all\")\n\n   In [4]: %reset -f\n```\n"
  }
]
