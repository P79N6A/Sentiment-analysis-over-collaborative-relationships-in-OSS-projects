[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6883932",
    "html_url": "https://github.com/ipython/ipython/issues/2114#issuecomment-6883932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2114",
    "id": 6883932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODM5MzI=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-10T18:13:46Z",
    "updated_at": "2012-07-10T18:13:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "From `%logstart`:\n\n```\n  -o: log also IPython's output.  In this mode, all commands which\n  generate an Out[NN] prompt are recorded to the logfile, right after\n  their corresponding input line.  The output lines are always\n  prepended with a '#[Out]# ' marker, so that the log remains valid\n  Python code.\n```\n\nYour code likely isn't generating any `Out[NN]` lines and therefore no output is getting logged.\n\nIn your use case, I think it'd be easier to just use regular command line tools for logging:\n\n```\n$ ipython pg_backup.ipy DEV > pg_backup.log\n```\n\nThere are a plethora of variations on this theme, including piping through `tee` so that you can watch the output as it is produced and combining stderr and stdout (`2>&1`), as in: \n\n```\n$ ipython pg_backup.ipy DEV 2>&1 | tee pg_backup.log\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6889319",
    "html_url": "https://github.com/ipython/ipython/issues/2114#issuecomment-6889319",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2114",
    "id": 6889319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODkzMTk=",
    "user": {
      "login": "tarkawebfoot",
      "id": 1944790,
      "node_id": "MDQ6VXNlcjE5NDQ3OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1944790?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarkawebfoot",
      "html_url": "https://github.com/tarkawebfoot",
      "followers_url": "https://api.github.com/users/tarkawebfoot/followers",
      "following_url": "https://api.github.com/users/tarkawebfoot/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarkawebfoot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarkawebfoot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarkawebfoot/subscriptions",
      "organizations_url": "https://api.github.com/users/tarkawebfoot/orgs",
      "repos_url": "https://api.github.com/users/tarkawebfoot/repos",
      "events_url": "https://api.github.com/users/tarkawebfoot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarkawebfoot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-10T21:05:59Z",
    "updated_at": "2012-07-10T21:05:59Z",
    "author_association": "NONE",
    "body": "Thanks bfroehle,\n\nI see now. The %logstart magic is really only for replaying IPython sessions. I was using it because I want to calculate the location of the log file based on other variables in the script. Sounds like I should just use Python code to redirect stdout after calculating the file location.\n\nBrian\n"
  }
]
