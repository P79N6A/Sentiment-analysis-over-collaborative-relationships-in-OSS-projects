[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25102845",
    "html_url": "https://github.com/ipython/ipython/issues/4262#issuecomment-25102845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4262",
    "id": 25102845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTAyODQ1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T16:30:38Z",
    "updated_at": "2013-09-25T16:30:38Z",
    "author_association": "MEMBER",
    "body": "Multi user is definitively on the list, and having a plugable authentifiaction  probably also. \nI just don't think we are ready yet, as auth might need several level of things (read, write, execute). \n\nWe are not even sure this will be done at current server level, and there is also the question as of which user is the server running and same question for the kernel. \n\nWe are wondering wether or not a proxy/client architecture might be good, where the proxy would actually handle launchin 1 ipython-server per user, and proxy to it. Then the proxy would handle auth.\n\nAnyway, if you think specifically at one way to do that, I suggest for you to draft a proposal and/or submit a pull request.\n\nI would also suggest looking at `DottedObjectName` configurable, that can allow to use custom class for some object in IPython.\n\nYou can probably have a look at [bookstore](https://github.com/rgbkrk/bookstore) a python package that allow to use rackspace as a storage backend. \n\nIt is a good example of how to use that with a 4 config line (extract from above link) : \n\n```\n# Setup IPython Notebook to write notebooks to CloudFiles\nc.NotebookApp.notebook_manager_class = 'bookstore.cloudfiles.CloudFilesNotebookManager'\n\n# Set your user name and API Key\nc.CloudFilesNotebookManager.account_name = USER_NAME\nc.CloudFilesNotebookManager.account_key = API_KEY\n\n# Container on CloudFiles\nc.CloudFilesNotebookManager.container_name = u'notebooks'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25112307",
    "html_url": "https://github.com/ipython/ipython/issues/4262#issuecomment-25112307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4262",
    "id": 25112307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTEyMzA3",
    "user": {
      "login": "sychan",
      "id": 1479353,
      "node_id": "MDQ6VXNlcjE0NzkzNTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1479353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sychan",
      "html_url": "https://github.com/sychan",
      "followers_url": "https://api.github.com/users/sychan/followers",
      "following_url": "https://api.github.com/users/sychan/following{/other_user}",
      "gists_url": "https://api.github.com/users/sychan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sychan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sychan/subscriptions",
      "organizations_url": "https://api.github.com/users/sychan/orgs",
      "repos_url": "https://api.github.com/users/sychan/repos",
      "events_url": "https://api.github.com/users/sychan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sychan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T18:27:01Z",
    "updated_at": "2013-09-25T18:27:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Matthias,\n    I agree that handling authentication can be complicated. However if you look at how pluggable authentication is handled in other web platforms, you'll probably see that what I suggested is a fairly conventional approach to dealing with a reasonable number of use cases. I would rather not fork the IPython core and send a PR without a reasonable belief that it would be acceptable to the IPython core devs - so some reasonable guidance about what would be acceptable/unacceptable in terms of design decisions would be helpful.\n\nAs far as having a front end proxy that instantiates new per user notebook instances, as you're no doubt aware, there's a bunch of people working on docker based solutions. We implemented a proof of concept with an nginx proxy + jiffylab, but I can't work on further it for a few weeks. I promised Paul Ivanov that I would upload the current duct tape and bailing wire prototype but haven't been able to scrape together the time for that yet. In the long term, my plan is to move most of the current jiffylab functionality into Nginx and enforce some level of authentication in the Nginx handlers - however that is a couple of months away, and will likely be using the Nginx embedded lua interpreter instead of python. It also doesn't solve the problem of making the authentication token available to a backend services like the notebook manager.\n\nThe example you posted uses a static username and password, so it doesn't support permissions based on user authentication. Thats really the problem, there needs to be a way to pass an authentication token from the web client through to the notebook manager and similar notebook server services, as well as a way to pass it through to the kernel - I implemented a monkeypatching solution for now on the notebook server and a parallel solution with frontend javascript calling into the kernel, but those are just hacks to get around the lack of support. I'll write up a strawman proposal to initiate discussion as you suggested, but it may take a couple of weeks until I'm past the current delivery crunch.\n\n   Steve\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69481070",
    "html_url": "https://github.com/ipython/ipython/issues/4262#issuecomment-69481070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4262",
    "id": 69481070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDgxMDcw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T02:31:06Z",
    "updated_at": "2015-01-11T02:31:06Z",
    "author_association": "MEMBER",
    "body": "@minrk this is an older issue on notebook auth. Is it still relevant?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69483039",
    "html_url": "https://github.com/ipython/ipython/issues/4262#issuecomment-69483039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4262",
    "id": 69483039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDgzMDM5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T04:14:05Z",
    "updated_at": "2015-01-11T04:14:05Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg this should be addressed now\n"
  }
]
