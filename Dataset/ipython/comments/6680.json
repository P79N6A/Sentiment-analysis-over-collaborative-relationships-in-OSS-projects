[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58746928",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58746928",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58746928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ2OTI4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T11:42:18Z",
    "updated_at": "2014-10-11T11:42:18Z",
    "author_association": "MEMBER",
    "body": "Despite the fact that the fix is simple, I love to see this kind of explanation in the PR first message. \nThanks for spending time to do it in this way.\n\n:+1:  for me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58760248",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58760248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58760248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzYwMjQ4",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T18:53:20Z",
    "updated_at": "2014-10-11T18:53:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@damianavila: Eh, it saves time in the end ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58761432",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58761432",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58761432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzYxNDMy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T19:26:28Z",
    "updated_at": "2014-10-11T19:26:28Z",
    "author_association": "MEMBER",
    "body": "After the discussion in #6611, this makes sense to me. I'd like to hear from @takluyver on the implementation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58767293",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58767293",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58767293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzY3Mjkz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T22:47:16Z",
    "updated_at": "2014-10-11T22:47:16Z",
    "author_association": "MEMBER",
    "body": "Let's not push it into `run_code` - that's the very innermost core of IPython. Is it practical to do it using a post_execute callback?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58783649",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58783649",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58783649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzgzNjQ5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T09:49:18Z",
    "updated_at": "2014-10-12T09:49:18Z",
    "author_association": "MEMBER",
    "body": "> Is it practical to do it using a post_execute callback?\n\nI don't see a problem... probably safer than the current one. \nLet's see what @njsmith think about that...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58816921",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58816921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58816921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODE2OTIx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T19:05:11Z",
    "updated_at": "2014-10-12T19:05:11Z",
    "author_association": "MEMBER",
    "body": "> Is it practical to do it using a post_execute callback?\n\nThat should be fine. Just register it as a hook during initialization.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58834214",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58834214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58834214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODM0MjE0",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T01:35:19Z",
    "updated_at": "2014-10-13T01:35:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are three separate issues here: (a) to use a hook or just to hard-code it in the file, (b) whether to clear the registry before or after the code runs, (c) whether to clear the registry in `run_cell` (`*_execute` hooks) or `run_code` (some sort of legacy hook system?).\n\nRe: (a): I don't see much point in decoupling for the sake of decoupling -- there's a tradeoff between the benefits of flexibility and the costs of reduce locality making it harder to read and understand the code. In this case, the `__warningregistry__` thing isn't something that needs to be configured -- it should happen unconditionally every time we execute some code, so I just put it in the code. This might seem less flexible, but IME it's _easier_ to edit a hardcoded bit source than to disable a hook -- it takes less grepping to find the source itself than to find where a hook is registered :-). But, you know, this is basically a taste issue, and it's your codebase, so!\n\nRe: (b): IMO it's better to clear the `__warningregistry__` before executing code rather than after. If our clearing code gets called every single time we execute code, then it doesn't matter whether we do the clearing `pre_` or `post_` execution. But, it's also possible that some code will be run without our knowledge and pollute the `__warningregistry__` with spurious entries. (This is esp. true if we move the logic into `run_cell`. I don't know under what circumstances people use `run_cell` vs `run_ast_nodes` vs `run_code`, but anyone using the latter two will skip the logic in `run_cell`.) So if we use a hook we should use a `pre_*` hook, etc.\n\nRe: (c): My reasoning for pushing the registry clearing down into `run_code` instead of just `run_cell` was that every call to `exec` creates a new line number scope and invalidates the entries in `__warningregistry__`, so we should clear the registry every time we call `exec`. And `run_code` is where we call `exec`. Pushing it further out creates more situations where code could be run with spurious entries in the `__warningregistry__`.\n\nSo, that's why I wrote the patch the way I did :-). If on reflection you'd prefer something else let me know.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58923576",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-58923576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 58923576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTIzNTc2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T17:10:27Z",
    "updated_at": "2014-10-13T17:10:27Z",
    "author_association": "MEMBER",
    "body": "Thanks for explaining your reasoning:\n- I would still like to do this with a hook, just for the sake of decoupling. Clearing the warnings registry is not fundamental to running code, and that part of the codebase is already more than complex enough without adding extra concerns to it.\n- In terms of when people use the different methods: I promote only `run_cell` as something that third parties should use. There might be third parties using run_ast_nodes or run_code, but I would consider those corner cases. All our own uses, as far as I recall, go through run_cell.\n- Pre/post: Whichever you prefer. I don't think we've ever heard about code polluting `__warningregistry__`, and it seems hard to do accidentally, so I'm not especially concerned about that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59979878",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-59979878",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 59979878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTc5ODc4",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T19:01:16Z",
    "updated_at": "2014-10-21T19:01:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I made an attempt to get this working as a hook (see the current version of this PR), and noticed two issues:\n- AFAICT the only place to define and register the hook is still directly inside `InteractiveShell` code, and the hook code itself is a method on `InteractiveShell`. So the coupling is not very reduced.\n- The tests are failing because there's a test which calls `ip.events.reset_all()`, which of course deletes my hook before my test gets a chance to run. IMO if I have a pristine `InteractiveShell`, then calling `ip.events.reset_all()` should be a no-op. But there's really no way to make this work with a default hook, unless we start poking at the definition of `EventManager` itself which ugh.\n\nSo..... how do you want to do this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60011902",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-60011902",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 60011902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDExOTAy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T22:51:12Z",
    "updated_at": "2014-10-21T22:51:12Z",
    "author_association": "MEMBER",
    "body": "Registering hooks doesn't have to be done inside interactiveshell code - anything that gets a reference to the shell object (like extensions) can use `shell.events.register()`. In this case, since you want it on all shell objects, doing it inside interactiveshell makes sense.\n\nMaybe the `reset` methods should be renamed something like `clear` (events is a new API, so I think we can get away with this before release). The test shouldn't really be doing `reset_all()`, whatever the name is - it should be taking out only the callbacks it installed. Using `reset_all()` there was just laziness on my part.\n\nGoing one step further, maybe `reset()` and `reset_all()` shouldn't even exist. The design of using events is precisely that you shouldn't think about what other callbacks might be triggered by an event, so killing all the callbacks on an event is generally the wrong thing to do. It's especially bad when most events aren't handled by default, so it's easy to fall into using it just to clear a callback you know about. That should probably be a separate PR, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61172521",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-61172521",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 61172521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTcyNTIx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T21:27:03Z",
    "updated_at": "2014-10-30T21:27:03Z",
    "author_association": "MEMBER",
    "body": "@takluyver it sounds like cleaning up event reset should be a separate PR. What should we do here so this can be merged, and the other stuff investigated separately?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61205518",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-61205518",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 61205518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjA1NTE4",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T02:19:05Z",
    "updated_at": "2014-10-31T02:19:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a start, I went ahead and made a commit that just removes the `reset` APIs. This PR currently contains that commit plus the `__warningregistry__` commit (click the \"commits\" tab if you want to review them separately). We could make them into two PRs I guess if that would make everyone happier, though if they look good then it might be simpler just to merge them both together here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61290351",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-61290351",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 61290351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjkwMzUx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T16:45:38Z",
    "updated_at": "2014-10-31T16:45:38Z",
    "author_association": "MEMBER",
    "body": "I'm fine with this as-is. @takluyver?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61292249",
    "html_url": "https://github.com/ipython/ipython/pull/6680#issuecomment-61292249",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6680",
    "id": 61292249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjkyMjQ5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T16:57:34Z",
    "updated_at": "2014-10-31T16:57:34Z",
    "author_association": "MEMBER",
    "body": "Yep. Thanks for your patience, @njsmith .\n"
  }
]
