[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72663179",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72663179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72663179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjYzMTc5",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T14:52:03Z",
    "updated_at": "2015-02-03T14:52:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you have two problems:\n\n1) When you \"paste\" into IPython (or Python for that matter) you have to make sure this is all in one \"cell\"... all at one In prompt. Try pasting this:\n\n``` python\n_memo = {}\ndef test(n, _memo=_memo):\n    if n in _memo:\n        return _memo[n]\n    start = 0\n    for i in range(start, n + 1):\n        pass\n    return b\n```\n\n2) The second problem is that b is undefined.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72690131",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72690131",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72690131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjkwMTMx",
    "user": {
      "login": "CreamyCookie",
      "id": 3063858,
      "node_id": "MDQ6VXNlcjMwNjM4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3063858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CreamyCookie",
      "html_url": "https://github.com/CreamyCookie",
      "followers_url": "https://api.github.com/users/CreamyCookie/followers",
      "following_url": "https://api.github.com/users/CreamyCookie/following{/other_user}",
      "gists_url": "https://api.github.com/users/CreamyCookie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CreamyCookie/subscriptions",
      "organizations_url": "https://api.github.com/users/CreamyCookie/orgs",
      "repos_url": "https://api.github.com/users/CreamyCookie/repos",
      "events_url": "https://api.github.com/users/CreamyCookie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CreamyCookie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T17:05:47Z",
    "updated_at": "2015-02-03T17:05:47Z",
    "author_association": "NONE",
    "body": "@dsblank Ahh.. thanks! So, no newlines allowed? Is this a limitation that can be removed from iPython? The current error message is also pretty weird, as it doesn't complain that `b` is undefined.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72693638",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72693638",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72693638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjkzNjM4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T17:23:19Z",
    "updated_at": "2015-02-03T17:23:19Z",
    "author_association": "MEMBER",
    "body": "In terminal IPython, a blank line means you're finished entering one bit of code, and it should go and run that. You can get round this by using `%paste` or `%cpaste` to paste a block of code.\n\nIt doesn't complain that b is undefined because it processes these lines as one chunk:\n\n```\nstart = 0\nfor i in range(start, n + 1):\n    pass\nreturn b\n```\n\nSo it sees the undefined `n`, and stops before it gets the chance to notice that there's a problem with `b` too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72693762",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72693762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72693762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjkzNzYy",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T17:23:57Z",
    "updated_at": "2015-02-03T17:23:57Z",
    "author_association": "MEMBER",
    "body": "@snapy666 the reason you're not seeing the error about `b` being undefined is that you're not getting to that line. What's happening is that, when you paste your code into the REPL, it's as though you pasted each line one-by-one and hit enter after each line.  The problem that occurs is, because you've got a blank line in the middle of your function, the python interpreter assumes that that function is done, so you end up executing the equivalent of:\n\n```\n_memo = {}\n\ndef test(n, _memo=_memo):\n    if n in _memo:\n        return _memo[n]\n\n# Note that we're no longer in the function, which means the name `n` isn't bound to anything.\nstart = 0\nfor i in range(start, n + 1):\n    pass\nreturn b\n```\n\nAs @dsblank notes, you can fix this particular issue by pasting the text with no blank lines.  However, a cleaner solution is to use `%paste`, which copies the content of the clipboard in a way that's aware of the above quirks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72693801",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72693801",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72693801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjkzODAx",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T17:24:11Z",
    "updated_at": "2015-02-03T17:24:11Z",
    "author_association": "MEMBER",
    "body": "Gah, @takluyver you beat me by 20 seconds.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72698135",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72698135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72698135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjk4MTM1",
    "user": {
      "login": "CreamyCookie",
      "id": 3063858,
      "node_id": "MDQ6VXNlcjMwNjM4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3063858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CreamyCookie",
      "html_url": "https://github.com/CreamyCookie",
      "followers_url": "https://api.github.com/users/CreamyCookie/followers",
      "following_url": "https://api.github.com/users/CreamyCookie/following{/other_user}",
      "gists_url": "https://api.github.com/users/CreamyCookie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CreamyCookie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CreamyCookie/subscriptions",
      "organizations_url": "https://api.github.com/users/CreamyCookie/orgs",
      "repos_url": "https://api.github.com/users/CreamyCookie/repos",
      "events_url": "https://api.github.com/users/CreamyCookie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CreamyCookie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T17:46:06Z",
    "updated_at": "2015-02-03T17:46:06Z",
    "author_association": "NONE",
    "body": "@takluyver @ssanderson I mean the compacted version of @dsblank where it doesn't throw an error message regarding `b`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72698879",
    "html_url": "https://github.com/ipython/ipython/issues/7672#issuecomment-72698879",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7672",
    "id": 72698879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjk4ODc5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-03T17:49:53Z",
    "updated_at": "2015-02-03T17:49:53Z",
    "author_association": "MEMBER",
    "body": "Then it's inside a function, so there won't be an error until you call the function. And if you define `b` globally in the meantime, the function call will succeed too.\n"
  }
]
