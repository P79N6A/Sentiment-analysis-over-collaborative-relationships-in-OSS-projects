[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6386004",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-6386004",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 6386004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODYwMDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-17T23:44:37Z",
    "updated_at": "2012-06-17T23:44:37Z",
    "author_association": "MEMBER",
    "body": "That should be pretty easy, just by putting the compiled file and generated html inside the notebook-dir, since everything there is already available.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6386198",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-6386198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 6386198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODYxOTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-18T00:15:17Z",
    "updated_at": "2012-06-18T00:15:17Z",
    "author_association": "MEMBER",
    "body": "Yes, I think it's very straightforward.  I was tempted to do it just now but I'm in the middle of other stuff, so I decided to at least record it here...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6433667",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-6433667",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 6433667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzM2Njc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-19T18:35:12Z",
    "updated_at": "2012-06-19T18:35:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately this is a not a completely straightforward task as our call to `cythonize` passes the options as part of the `ctx` parameter which has been ignored since [0.14](https://github.com/cython/cython/commit/bc01fbfd7c21ac6da0ad53a501d6968d4c9cdf59#L0L426).\n\nSince our `%%cython` magic is based upon `cython.inline`, I filed a [bug report upstream](http://trac.cython.org/cython_trac/ticket/781).  I'm not sure quite what the best way to fix this yet is, but regardless I expect that it shouldn't be very difficult.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6538703",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-6538703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 6538703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg3MDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-25T02:37:14Z",
    "updated_at": "2012-06-25T02:37:14Z",
    "author_association": "MEMBER",
    "body": "@bfroehle, what about setting the global Cython flag as I indicated above?  I took that tip from a thread on the cython list just a few days ago, so I assumed it would work fine...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7008534",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-7008534",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 7008534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDg1MzQ=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-16T15:03:26Z",
    "updated_at": "2012-07-16T15:04:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just closed #2143 as a duplicate.  There is a small bit of code in the issue which may be useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7018541",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-7018541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 7018541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTg1NDE=",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-16T20:47:39Z",
    "updated_at": "2012-07-16T20:47:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's an implementation in #PR2147 that works for me on win32. Whilst it seems to work perfectly in the Notebook, in the QtConsole the underlying c code which is usually collapsed is visible.\n\nHaving done this I now understand the point Fernando was making in his initial comment. \n  `Cython.Compiler.Options.annotate = True`\n...is probably a much cleaner solution. I'll try to find time to look into it further.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7032029",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-7032029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 7032029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzIwMjk=",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-17T10:47:42Z",
    "updated_at": "2012-07-17T10:47:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "It appears that the `cythonize` command could automatically annotate the source by passing `annotate = True` as an option. The cythonize command is however within an if statement `if force or not os.path.isfile(module_path)` which I believe prevents re-cythonizing the same source? \n\nIt appears that unconditionally re-cythonizing leads to a link error due to a permission error on the `.pyd` which I assume means your session is holding onto a reference to it because it has already been imported? It seems strange then that the `cython -a` command would work in the subprocess command at the end...\n\nI'm a bit stumped there - I haven't been able to get it to work correctly other than the code which is in my pull-request.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7630915",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-7630915",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 7630915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzA5MTU=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T00:14:19Z",
    "updated_at": "2012-08-10T00:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "`--annotate` was merged in #2225.\n\nI'm not sure what @fperez meant by failures in the title.  If the cython fails to compile the best we can do is output the error message (which we already do).  I suppose it could fail to compile?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7655663",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-7655663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 7655663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTU2NjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T20:26:38Z",
    "updated_at": "2012-08-10T20:26:38Z",
    "author_association": "MEMBER",
    "body": "Yes, sometimes cython will sucessfully emit C code that then gcc can't compile.  Having a link to the auto-generated C file is very useful, since often looking directly at the raw (and hyper-ugly) C is the only way to figure out what went wrong.  Since these filenames look random to the human eye, manually rooting through your cache is kind of annoying, and a direct clickable link would help a lot.\n\nI've had to do this very kind of manual debugging in the past, whence my opening of this issue.  I'm pretty sure sage does give a link to the C file for this very reason.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20237120",
    "html_url": "https://github.com/ipython/ipython/issues/1976#issuecomment-20237120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1976",
    "id": 20237120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjM3MTIw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-29T21:02:17Z",
    "updated_at": "2013-06-29T21:02:17Z",
    "author_association": "MEMBER",
    "body": "Any progress or thoughts on putting the C file somewhere accessible, and/or printing its location?\n"
  }
]
