[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/145497832",
    "html_url": "https://github.com/ipython/ipython/issues/8863#issuecomment-145497832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8863",
    "id": 145497832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTQ5NzgzMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-05T11:10:36Z",
    "updated_at": "2015-10-05T11:10:36Z",
    "author_association": "MEMBER",
    "body": "Since we forward output over zmq, getting output from subprocesses is a bit complicated. The subprocess publishes messages over zmq to the parent, but the parent process only forwards those on to the public socket when `sys.stdout.flush` is called. You can see this if you call sys.stdout.flush periodically while waiting for the async job:\n\n``` python\nimport sys\nimport multiprocessing\n\ndef bar(x):\n    for i in range(x*10000000):\n        pass\n    print('%i done\\n' % x, end='')\n    return 0\n\npool = multiprocessing.Pool(2)\nmr = pool.map_async(bar, range(16))\nwhile not mr.ready():\n    sys.stdout.flush()\n    mr.wait(0.1)\n```\n\nI think we may be able to address this by putting output publishing in its own thread, which would allow subprocess output to be published as it arrives, even if the main thread is blocking (as long as it releases the GIL once in a while). I think that would improve the situation quite a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/175009299",
    "html_url": "https://github.com/ipython/ipython/issues/8863#issuecomment-175009299",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8863",
    "id": 175009299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTAwOTI5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T13:25:01Z",
    "updated_at": "2016-01-26T13:25:01Z",
    "author_association": "MEMBER",
    "body": "@minrk can this be closed with your recent work on IO?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/175016411",
    "html_url": "https://github.com/ipython/ipython/issues/8863#issuecomment-175016411",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8863",
    "id": 175016411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTAxNjQxMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T13:37:46Z",
    "updated_at": "2016-01-26T13:37:46Z",
    "author_association": "MEMBER",
    "body": "Yes\n"
  }
]
