[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/367892892",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-367892892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 367892892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg5Mjg5Mg==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T02:43:47Z",
    "updated_at": "2018-02-23T02:43:47Z",
    "author_association": "MEMBER",
    "body": "Hi @chrisgmorton - sorry you're having trouble. A couple of question to help us figure out what might be happening:\r\n\r\nSo are you able to run all other commands after running your script, with the exception of `ls` - is that right? How are you running your script - just with the `%run` magic, or some other way? Does your script by chance create a variable in the namespace with the name `ls` - in other words, does `type(ls)` raise a NameError, or does it return something?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368094054",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368094054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368094054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA5NDA1NA==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T18:18:15Z",
    "updated_at": "2018-02-23T18:18:15Z",
    "author_association": "NONE",
    "body": "Hi Paul, thanks for the follow-up. I am able to run other imported functions from my package, following execution completion. I also get a correct result from 'pwd'. The script is run by importing my created package and a wrapper script that creates objects and executes methods. I am not using %run magic. Performing type(ls) raises an NameError so 'ls' is not redefined in the namespace. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368128135",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368128135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368128135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODEyODEzNQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T20:21:41Z",
    "updated_at": "2018-02-23T20:22:25Z",
    "author_association": "MEMBER",
    "body": "Hmmm. That's strange. If it's constrained to just `ls`, I'm thinking either `ls` isn't the command that we think it normally is (is it somehow an alias or a link to something that expects an interactive shell and isn't getting it?) or alternatively is it possible that there's just a whole bunch (thousands?) of files? \r\n\r\nWhat are the results of running `!which ls` and `ls | wc -l`? For me, this is\r\n\r\n```\r\nIn [6]: !which ls\r\n/bin/ls\r\n\r\nIn [7]: ls | wc -l\r\n      27\r\n```\r\n\r\nA possible workaround that might be worth trying is to just call `!ls` instead of `ls` - which won't try to add platform-specific flags for color based on filename and trailing slashes for folders, etc. It's possible that `ls` flags we give under OS X have changed in this version of OS X? You can see the flags we're using on your specific instance by using the `%alias` magic.\r\n\r\nFor example, for me: \r\n```\r\nIn [13]: %alias\r\nTotal number of aliases: 16\r\nOut[13]:\r\n[('cat', 'cat'),\r\n ('clear', 'clear'),\r\n ('cp', 'cp'),\r\n ('ldir', 'ls -F -G -l %l | grep /$'),\r\n ('less', 'less'),\r\n ('lf', 'ls -F -l -G %l | grep ^-'),\r\n ('lk', 'ls -F -l -G %l | grep ^l'),\r\n ('ll', 'ls -F -l -G'),\r\n ('ls', 'ls -F -G'),\r\n ('lx', 'ls -F -l -G %l | grep ^-..x'),\r\n ('man', 'man'),\r\n ('mkdir', 'mkdir'),\r\n ('more', 'more'),\r\n ('mv', 'mv'),\r\n ('rm', 'rm'),\r\n ('rmdir', 'rmdir')]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368155383",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368155383",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368155383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE1NTM4Mw==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T22:21:40Z",
    "updated_at": "2018-02-23T22:30:04Z",
    "author_association": "NONE",
    "body": "`ls` is pointing to `/bin/ls` and file count is 31 in my case so this likely eliminates the simple issues.\r\n\r\nI dug in a little and looked to see if I could isolate an offending call that was causing 'ls' to lock the terminal. I followed execution deep down into the sparse matrix code of my application and it looks like calls into linear and sparse linear algebra code cause the `ls` lock even though execution completes successfully and the application exits gracefully.\r\n\r\nWhen I replaced calls to `numpy.linalg.norm()` with `scipy.linalg.norm()` this stopped the terminal lock-up of 'ls' after script completion. Unfortunately uncommenting out the call to `scipy.sparse.linalg.lgmres()` again caused the terminal lock-up with 'ls' after script completion.\r\n\r\nI'm using NumPy 1.13.1 and SciPy 0.19.1 built with the gnu 7 compilers and Intel Math Kernel Library. I see the same lock-up on OSX and Ubuntu although the investigation I describe here was only done on OSX.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368169796",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368169796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368169796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE2OTc5Ng==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T23:34:11Z",
    "updated_at": "2018-02-23T23:34:11Z",
    "author_association": "MEMBER",
    "body": "I'm a bit baffled.. is there no difference in behavior with `!ls` ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368172452",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368172452",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368172452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE3MjQ1Mg==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T23:50:02Z",
    "updated_at": "2018-02-23T23:50:15Z",
    "author_association": "NONE",
    "body": "There is no difference in behavior with `!ls`. I will try to create a reproducible test case for you."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368174562",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368174562",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368174562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE3NDU2Mg==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T00:04:07Z",
    "updated_at": "2018-02-24T00:44:12Z",
    "author_association": "NONE",
    "body": "This is a very simple reproducible test case which shows the lock at the end with `ls`. The MKL version is 2018.1.126 on OSX and 2018.1.163 on Ubuntu. Note also that if x is of size 1000 rather than 10000, there is no lock. Same behavior on both OS platforms.\r\n\r\nPython 3.6.4 (default, Jan 21 2018, 20:39:54) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: ls\r\nDesktop/                 Music/                 bin/\r\nDocuments/             Nolo Documents Backup/ tmp/\r\nDownloads/             Pictures/              usr/\r\nDropbox/               Public/                work@\r\nLibrary/               Sites/\r\nMovies/                atest.sh*\r\n\r\nIn [2]: import numpy as np\r\n\r\nIn [3]: np.\\_\\_version\\_\\_\r\nOut[3]: '1.13.1'\r\n\r\nIn [4]: from numpy import linalg\r\n\r\nIn [5]: x=np.arange(10000)\r\n\r\nIn [6]: x\r\nOut[6]: array([   0,    1,    2, ..., 9997, 9998, 9999])\r\n\r\nIn [7]: linalg.norm(x)\r\nOut[7]: 577306.96773900103\r\n\r\nIn [8]: ls\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368182082",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368182082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368182082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE4MjA4Mg==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T01:00:30Z",
    "updated_at": "2018-02-24T01:00:30Z",
    "author_association": "MEMBER",
    "body": "Your test case doesn't reproduce the behavior for me - but i'm on numpy 1.14.1 and without MKL.\r\n\r\nOne last thought - our `pwd` uses python's `os.getcwd()` under the hood, I wonder if the problem is with anything that tries to shell out. Does `!pwd` or `!echo 'hi'` also stall after the call to linalg?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368183078",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368183078",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368183078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE4MzA3OA==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T01:08:50Z",
    "updated_at": "2018-02-24T01:08:50Z",
    "author_association": "NONE",
    "body": "Interestingly, pwd shows the correct output but !pwd locks. Also !echo 'hi' locks."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368183774",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368183774",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368183774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE4Mzc3NA==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T01:15:09Z",
    "updated_at": "2018-02-24T01:15:09Z",
    "author_association": "MEMBER",
    "body": "ok - so it seems calling python functions work, but shelling out does not - at  least it's  nothing special about `ls` - does `os.system` also lock up the way `!` does?  Say `os.system(\"pwd\")`, for example?\r\n\r\nAnd can you try this in just a plain python shell - I suspect this isn't IPython related, but it's numpy leaving the system in this unhappy state."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368186527",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-368186527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 368186527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE4NjUyNw==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T01:43:14Z",
    "updated_at": "2018-02-24T01:43:14Z",
    "author_association": "NONE",
    "body": "os.system(\"pwd\") does not lock up and shows the correct output as does os.system(\"ls\"). As you might expect, this correct behavior is also shown in a plain python shell."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/377200793",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-377200793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 377200793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzIwMDc5Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T11:03:22Z",
    "updated_at": "2018-03-29T11:03:26Z",
    "author_association": "MEMBER",
    "body": "The behaviour of `!` depends on whether you're using IPython in the terminal or as a Jupyter kernel.\r\n\r\nIn the terminal, it calls:\r\n\r\n```python\r\nsubprocess.call('ls', shell=True, executable=os.environ.get('SHELL'))\r\n```\r\n\r\nIf you can still reproduce the error, does running that command produce the same behaviour? Can you check if the SHELL environment variable is being changed?\r\n\r\n(From what you've said above, I think you're using terminal IPython. If you're using it through Jupyter, then `!` commands are more complicated - it involves tricking the subprocess into thinking that it's running in a terminal.)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/377373720",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-377373720",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 377373720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM3MzcyMA==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T21:11:08Z",
    "updated_at": "2018-03-29T21:21:37Z",
    "author_association": "NONE",
    "body": "I can still reproduce the error.\r\n\r\nExecuting the above python code in an IPython terminal and then importing os and subprocess and executing:\r\n\r\n`\r\nos.environ.get('SHELL')\r\n`\r\n\r\ngives '/bin/bash'.\r\n\r\nExecuting,\r\n\r\n`\r\nsubprocess.call('ls', shell=True, executable=os.environ.get('SHELL'))\r\n`\r\n\r\nhangs the terminal. Ctrl C does not even force an exit.\r\n\r\nThis seems to be specific to Intel's Math Kernel Library. If I were to hazard a guess, I would say this is related to MKL's multithreading execution and exit. When I use a smaller vector size (1000 instead of 10000) in the test case above, the error does not show up. MKL likely decides not to use multiple threads when the problem size is small enough that multithreading has no practical advantage.\r\n\r\nThis will very likely show up for all distributions that use MKL with NumPy and SciPy such as Anaconda. Calls to SciPy's sparse.linalg.lmgres() also cause the hang. Importantly for those digging in further, replacing Numpy's norm() with Scipy's linalg.norm() stops the hang in my test case. I still have the issue with sparse.linalg.lmgres() through and I am assuming (possibly wrongly) that the root causes are one and the same.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/377378068",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-377378068",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 377378068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM3ODA2OA==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T21:28:37Z",
    "updated_at": "2018-03-29T21:35:17Z",
    "author_association": "NONE",
    "body": "I should have mentioned also that Jupyter's qtconsole also hangs and the notebook never complete's command execution ie In[*] persists, blocking further commands."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/377462775",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-377462775",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 377462775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQ2Mjc3NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T07:09:30Z",
    "updated_at": "2018-03-30T07:09:30Z",
    "author_association": "MEMBER",
    "body": "Your guess sounds reasonable. Try playing around with the `subprocess` call to see if you can narrow down what situations it fails in."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/394821020",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-394821020",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 394821020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDgyMTAyMA==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T18:53:39Z",
    "updated_at": "2018-06-05T18:53:39Z",
    "author_association": "NONE",
    "body": "I'm unable to narrow down further. Trying subprocess.run('ls'), subprocess.run('ls', check=True), subprocess.Popen('ls') all just cause the hang. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/412917701",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-412917701",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 412917701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjkxNzcwMQ==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T15:42:14Z",
    "updated_at": "2018-08-14T15:45:03Z",
    "author_association": "NONE",
    "body": "I have found a workaround for this issue which is to set the environment variable, `KMP_INIT_AT_FOLK=FLASE`. This issue relates to problems with Intel's MKL multithreading. See numpy/numpy#11734, issues and workarounds. I have not tested for the existence of this issue or resolution thereof on Win64. The issue is resolved for this workaround on OSX and Linux."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/413714170",
    "html_url": "https://github.com/ipython/ipython/issues/11012#issuecomment-413714170",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11012",
    "id": 413714170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzcxNDE3MA==",
    "user": {
      "login": "chrisgmorton",
      "id": 4575602,
      "node_id": "MDQ6VXNlcjQ1NzU2MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisgmorton",
      "html_url": "https://github.com/chrisgmorton",
      "followers_url": "https://api.github.com/users/chrisgmorton/followers",
      "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisgmorton/orgs",
      "repos_url": "https://api.github.com/users/chrisgmorton/repos",
      "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisgmorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T23:29:03Z",
    "updated_at": "2018-08-16T23:30:04Z",
    "author_association": "NONE",
    "body": "The root cause of this issue is Intel's MKL library and can be resolved either by using `KMP_INIT_AT_FORK=FALSE` or using the  Intel TBB threading layer (see numpy/numpy#11734 for more details.)"
  }
]
