[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3381024",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3381024",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3381024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODEwMjQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T05:21:17Z",
    "updated_at": "2012-01-06T05:21:17Z",
    "author_association": "MEMBER",
    "body": "Valid request, though in the meantime you can achieve this by putting `from __future__ import division` to be executed at startup in your config file. See [this example](http://ipython.org/ipython-doc/dev/config/ipython.html#example) for details, you simply set that in the `exec_lines` field.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3386690",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3386690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3386690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODY2OTA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T16:22:04Z",
    "updated_at": "2012-01-06T16:22:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez Thanks for the great tip --- I had been trying to figure out how to turn on the new division.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3623396",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3623396",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3623396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzOTY=",
    "user": {
      "login": "echu79",
      "id": 1308504,
      "node_id": "MDQ6VXNlcjEzMDg1MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1308504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/echu79",
      "html_url": "https://github.com/echu79",
      "followers_url": "https://api.github.com/users/echu79/followers",
      "following_url": "https://api.github.com/users/echu79/following{/other_user}",
      "gists_url": "https://api.github.com/users/echu79/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/echu79/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/echu79/subscriptions",
      "organizations_url": "https://api.github.com/users/echu79/orgs",
      "repos_url": "https://api.github.com/users/echu79/repos",
      "events_url": "https://api.github.com/users/echu79/events{/privacy}",
      "received_events_url": "https://api.github.com/users/echu79/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-23T22:34:08Z",
    "updated_at": "2012-01-23T22:34:08Z",
    "author_association": "NONE",
    "body": "Thanks - maybe there's another setting for this, but if you were to create a script that simply did \"return 1/2\", and set the config in ipython from your link, running the script prints a 0.  But in the actual interactive ipython session, typing 1/2 will return .5.  Is there a way to apply new division to the interactive session, and any other scripts, modules that are run or imported from that ipython session?\n\nThank you\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3625903",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3625903",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3625903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjU5MDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-24T01:45:43Z",
    "updated_at": "2012-01-24T01:45:43Z",
    "author_association": "MEMBER",
    "body": "There is no way to set it for all imported modules, because that would most likely introduce bugs: there are many modules out there that assume the old division behavior, and if that was changed implicitly, you'd likely get weird, random crashes all over the place.\n\nThat's why the division behavior has to be _explicitly_ indicated for each scope, at the module level and interactively.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3675284",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3675284",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3675284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzUyODQ=",
    "user": {
      "login": "echu79",
      "id": 1308504,
      "node_id": "MDQ6VXNlcjEzMDg1MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1308504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/echu79",
      "html_url": "https://github.com/echu79",
      "followers_url": "https://api.github.com/users/echu79/followers",
      "following_url": "https://api.github.com/users/echu79/following{/other_user}",
      "gists_url": "https://api.github.com/users/echu79/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/echu79/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/echu79/subscriptions",
      "organizations_url": "https://api.github.com/users/echu79/orgs",
      "repos_url": "https://api.github.com/users/echu79/repos",
      "events_url": "https://api.github.com/users/echu79/events{/privacy}",
      "received_events_url": "https://api.github.com/users/echu79/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T19:49:55Z",
    "updated_at": "2012-01-26T19:49:55Z",
    "author_association": "NONE",
    "body": "Understood, but we actually desired to have the -Qnew flag be applied to all the imported modules.  In the older version of ipython, we were able to achieve this by applying -Qnew to python itself in the ipython startup script before it called IPython.Shell.IPShell().mainloop(sys_exit=1)\n\nThis still seems to work in the text version of the new ipython, but was curious if this was possible with the QT version of ipython\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3675998",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3675998",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3675998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzU5OTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-26T20:30:27Z",
    "updated_at": "2012-01-26T20:30:27Z",
    "author_association": "MEMBER",
    "body": "Ah, the issue is that we'd have to propagate that flag to the kernel start: the qt console runs the kernel in a separate process.  The code that does that is in `zmq/entry_point`, so a quick and dirty hack for you would be to add  a line with `arguments.append('-Qnew')` [here](https://github.com/fperez/ipython/blob/master/IPython/zmq/entry_point.py#L218).\n\nWe can definitely add support for this at the command-line, though.  So I'll leave this open as an enhancement request, since to do it right we want to expose it so _any_ frontend (qtconsole, text console or notebook) can use it uniformly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3690566",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3690566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3690566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTA1NjY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T17:28:46Z",
    "updated_at": "2012-01-27T17:29:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, I think you'd actually have to put `'-Qnew'` earlier in the command line listing.  Observe:\n\n```\n$ python --version\nPython 2.7.2 -- EPD 7.2-2 (64-bit)\n$ python -Qnew -c \"print 1/2\" \n0.5\n$ python -c \"print 1/2\" -Qnew\n0\n```\n\n(Using the `-c` option causes `python` to stop scanning the options list.)\n\nSo, something like `arguments.insert('-Qnew', 1)` should work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3854846",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3854846",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3854846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQ4NDY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T19:50:25Z",
    "updated_at": "2012-02-07T19:50:25Z",
    "author_association": "MEMBER",
    "body": "I am closing this as this type of thing should be handled by the user in config files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3857094",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3857094",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3857094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTcwOTQ=",
    "user": {
      "login": "echu79",
      "id": 1308504,
      "node_id": "MDQ6VXNlcjEzMDg1MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1308504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/echu79",
      "html_url": "https://github.com/echu79",
      "followers_url": "https://api.github.com/users/echu79/followers",
      "following_url": "https://api.github.com/users/echu79/following{/other_user}",
      "gists_url": "https://api.github.com/users/echu79/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/echu79/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/echu79/subscriptions",
      "organizations_url": "https://api.github.com/users/echu79/orgs",
      "repos_url": "https://api.github.com/users/echu79/repos",
      "events_url": "https://api.github.com/users/echu79/events{/privacy}",
      "received_events_url": "https://api.github.com/users/echu79/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T21:28:56Z",
    "updated_at": "2012-02-07T21:28:56Z",
    "author_association": "NONE",
    "body": "What's the best way to achieve this functionality using the config files?\n\nAs bfroehle points out above, order matters here, so to append it to arguments in entry_point with extra_arguments won't work.  And as fperez commented above, it would be nice if this option was supported as an ipython startup option and propagated properly to any frontend.\n\nIs it possible to reopen this issue?\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3858267",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3858267",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3858267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTgyNjc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T22:30:13Z",
    "updated_at": "2012-02-07T22:30:13Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg, the point is that it _can't_ be done in config files correctly, b/c it requires modifying how the interpreter itself is started.  So I think it's a valid request (not a bug though)...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3858710",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3858710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3858710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTg3MTA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T22:55:26Z",
    "updated_at": "2012-02-07T22:55:26Z",
    "author_association": "MEMBER",
    "body": "Ahh, OK, feel free to reopen, but let's reclassify this as not as\nNotebook related issue.\n\nOn Tue, Feb 7, 2012 at 2:30 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> @ellisonbg, the point is that it _can't_ be done in config files correctly, b/c it requires modifying how the interpreter itself is started.  So I think it's a valid request (not a bug though)...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1239#issuecomment-3858267\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3862809",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-3862809",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 3862809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI4MDk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T05:37:30Z",
    "updated_at": "2012-02-08T05:37:30Z",
    "author_association": "MEMBER",
    "body": "I'd labeled it as nb _and_ zmq _and_ qtc, but since it more or less applies to everything, might as well just not put  those labels in.  I've removed them all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7680291",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-7680291",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 7680291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODAyOTE=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-12T21:56:15Z",
    "updated_at": "2012-08-12T21:56:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, `-Qnew` is extremely interesting. I thought it only impacted the interpreter scope but apparently it leaks to imported modules and exec'ed files:\n\n``` sh\n$ cat > test.py\nprint(1/2)\n$ python -c \"import test\"\n0\n$ python -Qnew -c \"import test\"\n0.5\n$ python -c \"execfile('test.py')\"\n0\n$ python -Qnew -c \"execfile('test.py')\"\n0.5\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234924869",
    "html_url": "https://github.com/ipython/ipython/issues/1239#issuecomment-234924869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1239",
    "id": 234924869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDkyNDg2OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T11:07:00Z",
    "updated_at": "2016-07-25T11:07:00Z",
    "author_association": "MEMBER",
    "body": "I don't think we can practically do this as an option on IPython, because it has to be set when the Python interpreter starts, and our command line argument handling happens inside Python.\n\nI don't think we will do this in any Jupyter frontends, because it's something entirely specific to Python 2.\n\nI'm therefore closing this; we can reopen it if people disagree.\n"
  }
]
