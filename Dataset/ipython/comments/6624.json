[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57946958",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57946958",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57946958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2OTU4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:28:22Z",
    "updated_at": "2014-10-05T18:28:22Z",
    "author_association": "MEMBER",
    "body": "I think this is the right way to go. Can you add tests for all three of binary, text, and notebook files to make sure it works properly?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57947767",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57947767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57947767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3NzY3",
    "user": {
      "login": "m3nu",
      "id": 3916435,
      "node_id": "MDQ6VXNlcjM5MTY0MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3916435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3nu",
      "html_url": "https://github.com/m3nu",
      "followers_url": "https://api.github.com/users/m3nu/followers",
      "following_url": "https://api.github.com/users/m3nu/following{/other_user}",
      "gists_url": "https://api.github.com/users/m3nu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m3nu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m3nu/subscriptions",
      "organizations_url": "https://api.github.com/users/m3nu/orgs",
      "repos_url": "https://api.github.com/users/m3nu/repos",
      "events_url": "https://api.github.com/users/m3nu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m3nu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:53:00Z",
    "updated_at": "2014-10-05T18:53:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure can I add them in IPython / html / tests / test_files.py? \n\n`request.get()` some files and checksum the content?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57949734",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57949734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57949734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ5NzM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T19:53:20Z",
    "updated_at": "2014-10-05T19:53:20Z",
    "author_association": "MEMBER",
    "body": "checksum might be overzealous, but at least verify that they make sense (e.g. binary files are binary, not base64, notebook is parseable, etc.).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57952264",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57952264",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57952264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTUyMjY0",
    "user": {
      "login": "m3nu",
      "id": 3916435,
      "node_id": "MDQ6VXNlcjM5MTY0MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3916435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3nu",
      "html_url": "https://github.com/m3nu",
      "followers_url": "https://api.github.com/users/m3nu/followers",
      "following_url": "https://api.github.com/users/m3nu/following{/other_user}",
      "gists_url": "https://api.github.com/users/m3nu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m3nu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m3nu/subscriptions",
      "organizations_url": "https://api.github.com/users/m3nu/orgs",
      "repos_url": "https://api.github.com/users/m3nu/repos",
      "events_url": "https://api.github.com/users/m3nu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m3nu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T21:04:48Z",
    "updated_at": "2014-10-05T21:04:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tests are in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57955772",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57955772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57955772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU1Nzcy",
    "user": {
      "login": "m3nu",
      "id": 3916435,
      "node_id": "MDQ6VXNlcjM5MTY0MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3916435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3nu",
      "html_url": "https://github.com/m3nu",
      "followers_url": "https://api.github.com/users/m3nu/followers",
      "following_url": "https://api.github.com/users/m3nu/following{/other_user}",
      "gists_url": "https://api.github.com/users/m3nu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m3nu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m3nu/subscriptions",
      "organizations_url": "https://api.github.com/users/m3nu/orgs",
      "repos_url": "https://api.github.com/users/m3nu/repos",
      "events_url": "https://api.github.com/users/m3nu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m3nu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T22:58:03Z",
    "updated_at": "2014-10-05T22:58:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Travis builds in 2.7 seem to fail for everyone at the moment. In `IPython.html.services.contents.tests.test_contents_api.APITest`. I'll wait this one out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57974441",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57974441",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57974441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTc0NDQx",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T04:45:03Z",
    "updated_at": "2014-10-06T04:45:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since we're already involving the content manager, can we allow the ContentsManager to override? I monkey patched the `get_absolute_path` here and just let the native tornado static handler do its work. \nhttps://github.com/dalejung/nbx/commit/bd4be416446d8e9527de7ab1a60e120894bc173e\n\nrelated issue: #6399 \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57977511",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57977511",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57977511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTc3NTEx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T06:04:22Z",
    "updated_at": "2014-10-06T06:04:22Z",
    "author_association": "MEMBER",
    "body": "Why would we allow ContentsManager to override this? What use case isn't covered by this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57978849",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57978849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57978849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTc4ODQ5",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T06:32:48Z",
    "updated_at": "2014-10-06T06:32:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "The paths shouldn't be tied to the filesystem and the ContentsManager is the integration point for well everything. Imagine you had a contents manager that showed folders for each user. So the `/user1` and `/user2` reference a `notebooks` directory in their corresponding home directories. The contents manager can properly handle serving notebooks from anywhere, but any static assets would 404 since the root_dir obviously can't work but for one user. \n\nAlso, we're assuming that static content would come from a file system.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57980843",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57980843",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57980843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTgwODQz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T07:06:52Z",
    "updated_at": "2014-10-06T07:06:52Z",
    "author_association": "MEMBER",
    "body": "I'm confused about your last comment. I may miss understand your setup.\nAre you trying to get one server with 2 authenticated users?\n\nNote that you can also swap the `FileFindHandler` with `tornado_settings` and switch for a custom class if needed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57982978",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57982978",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57982978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTgyOTc4",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T07:36:00Z",
    "updated_at": "2014-10-06T07:36:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I was just using users as an example of pathing providing a namespace and not representing filepaths. My setup is a bit wonkier as I have multiple backends under a MetaManger that delegates. \n\nA more realistic example for me is that I have a Gist backend. Right now, I only expose the notebook but there's no reason I couldn't represent the gist as a directory and expose the other files. Without a ContentManager override, that file would have to be placed on the filesystem in a particular path. Maybe I don't want to store it on disk or only download it to a tempdir on demand. \n\nI'm already set on having patched the FileHandler. My point was that if the ContentsManager is meant to allow arbitrary backends, it should also allow static files from those backends. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57985555",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-57985555",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 57985555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTg1NTU1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T08:07:35Z",
    "updated_at": "2014-10-06T08:07:35Z",
    "author_association": "MEMBER",
    "body": "Oh, OK, I think I see where I got confused. I mixed the StaticFIle handler from IPython files, from the one that served user content. I'll have to dive a little bit in the current state of the handler, but yes I understand it make sens to be able to serve non .ipynb files from a DB backend.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58013443",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58013443",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58013443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDEzNDQz",
    "user": {
      "login": "m3nu",
      "id": 3916435,
      "node_id": "MDQ6VXNlcjM5MTY0MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3916435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3nu",
      "html_url": "https://github.com/m3nu",
      "followers_url": "https://api.github.com/users/m3nu/followers",
      "following_url": "https://api.github.com/users/m3nu/following{/other_user}",
      "gists_url": "https://api.github.com/users/m3nu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m3nu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m3nu/subscriptions",
      "organizations_url": "https://api.github.com/users/m3nu/orgs",
      "repos_url": "https://api.github.com/users/m3nu/repos",
      "events_url": "https://api.github.com/users/m3nu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m3nu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T13:03:32Z",
    "updated_at": "2014-10-06T13:03:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tests are OK now.\n\nTo comment on @dalejung's proposal on moving the logic to serve files into `ContentsManager`, I thought about it too. In the end files handler is really just serving files from `get_model()`, which is a separation that makes sense. In which cases would you want to override this? You can already use a metamanager. Our setup also mixes files from disk with notebooks from Mongo.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58056238",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58056238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58056238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDU2MjM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T17:38:57Z",
    "updated_at": "2014-10-06T17:38:57Z",
    "author_association": "MEMBER",
    "body": "This PR gives the ContentsManager total control over what files are served at what URLs. That's why I'm confused by the desire for a customizable `get_absolute_path`, which seems to address a strict subset of what this already addresses.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58059937",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58059937",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58059937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDU5OTM3",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T17:58:46Z",
    "updated_at": "2014-10-06T17:58:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk you're confused because I'm an dum dum. I didn't mean override `get_absolute_path`, but letting  ContentsManager override the whole process. Which, with morning coffee, I see this PR is doing. \n\nI hit:\n\n``` python\n+        abs_path = os.path.join(cm.root_dir, path)\n+        if is_hidden(abs_path):\n```\n\nand glazed over the rest assuming it was tied to the filesystem as well. That should be `cm.is_hidden(path):`. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58062348",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58062348",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58062348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDYyMzQ4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T18:08:05Z",
    "updated_at": "2014-10-06T18:08:05Z",
    "author_association": "MEMBER",
    "body": "Ah, ok. Sorry for the confusion. I'm glad it does address your need.\n\nWe may need to try a different approach after a bit, since this will have very poor performance for binary files. It may make sense to have a `ContentsManager.FilesHandler` class, which can be a StaticFileHandler for the default FileSystemHandler case, something like the one here in the most general case, and maybe something that just computes a redirect for http-addressable stores like S3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58080963",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58080963",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58080963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDgwOTYz",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T19:37:46Z",
    "updated_at": "2014-10-06T19:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah. Part of the reason I overrode `get_absolute_path` was assuming tornado would handle static files better. I just gave it a nudge and let it handle all the chunking, headers, etc. \n\nMy use case doesn't involve accessing large files via the ipython web interface. Though I suppose a class downloading large datasets would become an issue. \n\nWas `FileContentsManager._file_model(content=True)` every called directly? AFAIK, the files serving was always short-circuited by tornado and the directory listings don't read content. `f.read()` breaks for large files on OSX, though I'm pretty sure that's on OSX. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58278342",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58278342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58278342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjc4MzQy",
    "user": {
      "login": "m3nu",
      "id": 3916435,
      "node_id": "MDQ6VXNlcjM5MTY0MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3916435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3nu",
      "html_url": "https://github.com/m3nu",
      "followers_url": "https://api.github.com/users/m3nu/followers",
      "following_url": "https://api.github.com/users/m3nu/following{/other_user}",
      "gists_url": "https://api.github.com/users/m3nu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m3nu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m3nu/subscriptions",
      "organizations_url": "https://api.github.com/users/m3nu/orgs",
      "repos_url": "https://api.github.com/users/m3nu/repos",
      "events_url": "https://api.github.com/users/m3nu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m3nu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T23:16:27Z",
    "updated_at": "2014-10-07T23:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's right. I removed that part. Thanks for the pointer, @takluyver.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58286321",
    "html_url": "https://github.com/ipython/ipython/pull/6624#issuecomment-58286321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6624",
    "id": 58286321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjg2MzIx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-08T00:31:35Z",
    "updated_at": "2014-10-08T00:31:35Z",
    "author_association": "MEMBER",
    "body": "I think this looks OK, and the test failures are unrelated - something we merged today had some unintended side effects. @minrk , I'll let you have a last review of this.\n"
  }
]
