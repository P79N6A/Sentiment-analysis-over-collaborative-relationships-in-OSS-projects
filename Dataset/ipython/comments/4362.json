[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25902202",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25902202",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25902202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAyMjAy",
    "user": {
      "login": "mgaitan",
      "id": 2355719,
      "node_id": "MDQ6VXNlcjIzNTU3MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2355719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgaitan",
      "html_url": "https://github.com/mgaitan",
      "followers_url": "https://api.github.com/users/mgaitan/followers",
      "following_url": "https://api.github.com/users/mgaitan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgaitan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgaitan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgaitan/subscriptions",
      "organizations_url": "https://api.github.com/users/mgaitan/orgs",
      "repos_url": "https://api.github.com/users/mgaitan/repos",
      "events_url": "https://api.github.com/users/mgaitan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgaitan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T15:50:12Z",
    "updated_at": "2013-10-08T15:50:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would close #2118, right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25902770",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25902770",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25902770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAyNzcw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T15:56:05Z",
    "updated_at": "2013-10-08T15:56:05Z",
    "author_association": "MEMBER",
    "body": "Not totally as if you 'reload' the page, some cells are greyd, but should are still technically be valid as they reflect the kernel state...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25903009",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25903009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25903009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTAzMDA5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T15:58:46Z",
    "updated_at": "2013-10-08T15:58:46Z",
    "author_association": "MEMBER",
    "body": "Also it would be nice that Modification then Ctrl+Z on codemirror restore the color if relevant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25906018",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25906018",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25906018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTA2MDE4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T16:34:43Z",
    "updated_at": "2013-10-08T16:34:43Z",
    "author_association": "MEMBER",
    "body": "I like it, but the PR do not include the css... will you add it later? or you have another idea?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25907484",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25907484",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25907484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTA3NDg0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T16:53:01Z",
    "updated_at": "2013-10-08T16:53:01Z",
    "author_association": "MEMBER",
    "body": "Not sure if people **want** the css.\nI woudl prefer not to change the behavior for now. I mainly opened the PR to discuss about that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25990371",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25990371",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25990371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTkwMzcx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T17:21:56Z",
    "updated_at": "2013-10-09T17:21:56Z",
    "author_association": "MEMBER",
    "body": "I'll still try to investigate if there is a way to diminish the number of dirty event, like not triggering if the cell is already dirty.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25991332",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25991332",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25991332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTkxMzMy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T17:33:53Z",
    "updated_at": "2013-10-09T17:33:53Z",
    "author_association": "MEMBER",
    "body": "could probably use [isClean](http://codemirror.net/doc/manual.html#isClean) from CM also...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25992180",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-25992180",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 25992180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTkyMTgw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T17:44:48Z",
    "updated_at": "2013-10-09T17:44:48Z",
    "author_association": "MEMBER",
    "body": "I have one other question, which is to know when/wether I should consider that cells other than code cell are dirty ? can they be now or in the future ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26002315",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-26002315",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 26002315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDAyMzE1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T19:47:07Z",
    "updated_at": "2013-10-09T19:47:07Z",
    "author_association": "MEMBER",
    "body": "I am 50/50 on adding this.  I know it is simple, but it is not clear how important this functionality really is. In the notebook's lifetime I haven't heard anyone ask for this other than on issue #2118.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/29211266",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-29211266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 29211266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjExMjY2",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T15:38:32Z",
    "updated_at": "2013-11-25T15:38:32Z",
    "author_association": "MEMBER",
    "body": "@Carreau do you have plans to keep this one live... I really like the idea of this PR ;-) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30841793",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-30841793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 30841793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQxNzkz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T13:37:44Z",
    "updated_at": "2013-12-18T13:37:44Z",
    "author_association": "MEMBER",
    "body": "> @Carreau do you have plans to keep this one live... I really like the idea of this PR ;-)\n\n@Carreau pinging you again :wink: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30842033",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-30842033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 30842033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQyMDMz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T13:41:46Z",
    "updated_at": "2013-12-18T13:41:46Z",
    "author_association": "MEMBER",
    "body": "I'll put that on dev meeting.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30842376",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-30842376",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 30842376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQyMzc2",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T13:46:58Z",
    "updated_at": "2013-12-18T13:46:58Z",
    "author_association": "MEMBER",
    "body": "> I'll put that on dev meeting.\n\nThanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31205043",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-31205043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 31205043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA1MDQz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-25T20:45:32Z",
    "updated_at": "2013-12-25T20:45:32Z",
    "author_association": "MEMBER",
    "body": "I've push a brand new branch on this, which now will mark things clean when using undo/redo and include the CSS.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31505401",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-31505401",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 31505401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA1NDAx",
    "user": {
      "login": "jaredly",
      "id": 112170,
      "node_id": "MDQ6VXNlcjExMjE3MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/112170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaredly",
      "html_url": "https://github.com/jaredly",
      "followers_url": "https://api.github.com/users/jaredly/followers",
      "following_url": "https://api.github.com/users/jaredly/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaredly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaredly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaredly/subscriptions",
      "organizations_url": "https://api.github.com/users/jaredly/orgs",
      "repos_url": "https://api.github.com/users/jaredly/repos",
      "events_url": "https://api.github.com/users/jaredly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaredly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T04:53:06Z",
    "updated_at": "2014-01-03T04:53:06Z",
    "author_association": "NONE",
    "body": "I definitely want the css (fwiw), but I could stand having it be a config setting. My biggest thing is when I start a new ipython session and open an old notebook, I would like everything marked \"not executed\" until I run it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32980299",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-32980299",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 32980299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgwMjk5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T00:21:10Z",
    "updated_at": "2014-01-22T00:21:10Z",
    "author_association": "MEMBER",
    "body": "About the UI of this:\n- I like the idea of greying the prompt once a cell has been edited and the input/output is out of sync.\n- I think we should be extremely conservative on adding visual styling to the notebook that indicates state change. But this styling is quite subtle and might be OK.\n- I don't like how a reloaded or newly opened notebook has all grey prompts. While I understand that the notion of a cell being dirty that you are using suggests this behavior, I think it is confusing for a user and doesn't reflect the reality that all cells could have been previously run in that kernel and all outputs could be in sync with the inputs. Thus I am -1 on defaulting to the dirty state with grey prompts. All prompts should start out colored and only go grey when a user types into a CM CodeCell.\n- This confusion about how to handle the state when a notebook loaded suggests that we are exposing a leaky abstraction to the user that will cause confusion in many cases.\n\nIf we can get colored prompts always upon a notebook loading I am probably +0.5 on the styling. If we have to live with grey prompts upon load I am -1.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33004705",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33004705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33004705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDA0NzA1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T09:20:46Z",
    "updated_at": "2014-01-22T09:20:46Z",
    "author_association": "MEMBER",
    "body": "Updated as per @ellisonbg comment, fixed semicolon and rebased; \n\nTechnically you can still edit a cell and have the grey prompt even if in the end your edit has a diff of 0. like adding `foo` + 3 times `backspace`. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33057000",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33057000",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33057000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDU3MDAw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-22T19:18:35Z",
    "updated_at": "2014-01-22T19:18:35Z",
    "author_association": "MEMBER",
    "body": "OK I will play with this more, thanks.\n\nOn Wed, Jan 22, 2014 at 1:20 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Updated as per @ellisonbg https://github.com/ellisonbg comment, fixed\n> semicolon and rebased;\n> \n> Technically you can still edit a cell and have the grey prompt even if in\n> the end your edit has a diff of 0. like adding foo + 3 times backspace.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4362#issuecomment-33004705\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33300169",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33300169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33300169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAwMTY5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T20:47:16Z",
    "updated_at": "2014-01-25T20:47:16Z",
    "author_association": "MEMBER",
    "body": "> All prompts should start out colored and only go grey when a user types into a CM CodeCell.\n> This confusion about how to handle the state when a notebook loaded suggests that we are exposing a leaky abstraction to the user that will cause confusion in many cases.\n\nTrying to be an user without the details of the implementation, I encounter myself with this problem...\nThe coloring at the notebook load seems contradictory... you first notice the grey input when you modified a cell... and if it is not execute it, it keeps the gray prompt... you close the notebook and open it again (or reload it) and you will see the coloring instead of the grey prompt... but you expect to stay grey... I know we can explain the behaviour and thell to the user that they have to wait for coloring... but I think that intuitively, this will lead to many confusions...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33300187",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33300187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33300187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAwMTg3",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T20:48:05Z",
    "updated_at": "2014-01-25T20:48:05Z",
    "author_association": "MEMBER",
    "body": "An it is bummer because I like the idea of this PR... :rage: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33300583",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33300583",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33300583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAwNTgz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T21:03:20Z",
    "updated_at": "2014-01-25T21:03:20Z",
    "author_association": "MEMBER",
    "body": "That was my first implémentation, but Brian asked me to change the color at load...\n\nEnvoyé de mon iPhone\n\n> Le 25 janv. 2014 à 21:47, Damián Avila notifications@github.com a écrit :\n> \n> All prompts should start out colored and only go grey when a user types into a CM CodeCell.\n> This confusion about how to handle the state when a notebook loaded suggests that we are exposing a leaky abstraction to the user that will cause confusion in many cases.\n> \n> Trying to be an user without the details of the implementation, I encounter myself with this problem...\n> The coloring at the notebook load seems contradictory... you first notice the grey input when you modified a cell... and if it is not execute it, it keeps the gray prompt... you close the notebook and open it again (or reload it) and you will see the coloring instead of the grey prompt... but you expect to stay grey... I know we can explain the behaviour and thell to the user that they have to wait for coloring... but I think that intuitively, this will lead to many confusions...\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33300648",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33300648",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33300648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAwNjQ4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T21:05:38Z",
    "updated_at": "2014-01-25T21:05:38Z",
    "author_association": "MEMBER",
    "body": "I think there are some confusing aspects of the original behavior or the\ncurrent one. I think that having grey prompts upon a load/refresh is super\nconfusing as the output is very likely fully in sync with the input and the\nkernel.\n\nOn Sat, Jan 25, 2014 at 1:03 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> That was my first implémentation, but Brian asked me to change the color\n> at load...\n> \n> Envoyé de mon iPhone\n> \n> > Le 25 janv. 2014 à 21:47, Damián Avila notifications@github.com a\n> > écrit :\n> > \n> > All prompts should start out colored and only go grey when a user types\n> > into a CM CodeCell.\n> > This confusion about how to handle the state when a notebook loaded\n> > suggests that we are exposing a leaky abstraction to the user that will\n> > cause confusion in many cases.\n> > \n> > Trying to be an user without the details of the implementation, I\n> > encounter myself with this problem...\n> > The coloring at the notebook load seems contradictory... you first\n> > notice the grey input when you modified a cell... and if it is not execute\n> > it, it keeps the gray prompt... you close the notebook and open it again\n> > (or reload it) and you will see the coloring instead of the grey prompt...\n> > but you expect to stay grey... I know we can explain the behaviour and\n> > thell to the user that they have to wait for coloring... but I think that\n> > intuitively, this will lead to many confusions...\n> > \n> > —\n> > Reply to this email directly or view it on GitHub.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4362#issuecomment-33300583\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33300938",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33300938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33300938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAwOTM4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T21:18:46Z",
    "updated_at": "2014-01-25T21:18:46Z",
    "author_association": "MEMBER",
    "body": "> I think there are some confusing aspects of the original behavior or the\n> current one. I think that having grey prompts upon a load/refresh is super\n> confusing as the output is very likely fully in sync with the input and the\n> kernel.\n\nMaybe we are looking to communicate the wrong thing... I mean, in the current implementation (but we grey prompt at load), we can tell to the user the status of the cells at the notebook frontend level and not at the kernel level... if we try to go deeper (to the kernel level), the complexity grows and we can not use the differential coloring to inform the state... With the coloring, we just can inform if the cell was executed at the notebook UI level in the current \"session\" and nothing more... I think that this info is enough useful to push forward the PR, but maybe others think different... :wink: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33303011",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33303011",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33303011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAzMDEx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T22:44:59Z",
    "updated_at": "2014-01-25T22:44:59Z",
    "author_association": "MEMBER",
    "body": "Could we store the dirty state in cell metadata, and restore the colour\nwhen the notebook is loaded? Of course, we can't guarantee that the output\nis up to date if someone has changed the notebook file outside IPython, but\nin normal cases it would work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33303174",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33303174",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33303174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAzMTc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T22:51:20Z",
    "updated_at": "2014-01-25T22:51:20Z",
    "author_association": "MEMBER",
    "body": "> Could we store the dirty state in cell metadata, and restore the colour\n> when the notebook is loaded? Of course, we can't guarantee that the output\n> is up to date if someone has changed the notebook file outside IPython, but\n> in normal cases it would work.\n\nI would like to avoid going to this, but one could store a (a hash of) the last executed input and compare it\nto the input also.\n\nBut I just feel like we are all trying to show different things with this which are incompatible.\n- input is the one that created this output. \n- input has been runned in this browser session.\n- input has been modified and not re-runned\n\n...  and everything liked to kernel. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33303775",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33303775",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33303775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAzNzc1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T23:17:55Z",
    "updated_at": "2014-01-25T23:17:55Z",
    "author_association": "MEMBER",
    "body": "The confusing of trying to show different things that are similar but\nultimately different is why I still have reservations about this.\n\nOn Sat, Jan 25, 2014 at 2:51 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Could we store the dirty state in cell metadata, and restore the colour\n> when the notebook is loaded? Of course, we can't guarantee that the output\n> is up to date if someone has changed the notebook file outside IPython, but\n> in normal cases it would work.\n> \n> I would like to avoid going to this, but one could store a (a hash of) the\n> last executed input and compare it\n> to the input also.\n> \n> But I just feel like we are all trying to show different things with this\n> which are incompatible.\n> - input is the one that created this output.\n> - input has been runned in this browser session.\n> - input has been modified and not re-runned\n> \n> ... and everything liked to kernel.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4362#issuecomment-33303174\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33730896",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-33730896",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 33730896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzMwODk2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T20:41:25Z",
    "updated_at": "2014-01-30T20:41:25Z",
    "author_association": "MEMBER",
    "body": "The decision at the dev meeting is that we need to keep thinking about this. There is still some hesitation about the leakiness of this idea, but we want to keep playing with it. Definitely for 3.0.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46779856",
    "html_url": "https://github.com/ipython/ipython/pull/4362#issuecomment-46779856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4362",
    "id": 46779856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc5ODU2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-22T12:27:53Z",
    "updated_at": "2014-06-22T12:27:53Z",
    "author_association": "MEMBER",
    "body": "Closing and opening issues #6030 instead.\n"
  }
]
