[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225154563",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225154563",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225154563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE1NDU2Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T11:03:44Z",
    "updated_at": "2016-06-10T11:04:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Strange thing, if I try to copy multiple lines (more than two):\n\n```\nx = 1\ny = 2\nz = 3\n```\n\nthen the first two (or all but the last) lines are concatenated and of course give a Syntax Error. Result of pasting the above:\n\n```\nIn [33]: x = 1y = 2\n  File \"<ipython-input-33-68a99508cab0>\", line 1\n    x = 1y = 2\n         ^\nSyntaxError: invalid syntax\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225165409",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225165409",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225165409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE2NTQwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T12:09:06Z",
    "updated_at": "2016-06-10T12:09:06Z",
    "author_association": "MEMBER",
    "body": "@jonathanslenders any idea what could be up with pasting on Windows? I wonder if it's a line-ending issue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225193829",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225193829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225193829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE5MzgyOQ==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T14:16:32Z",
    "updated_at": "2016-06-10T14:16:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can reproduce this too:\n\n``` python\nIn [3]: x = 1y = 2\n  File \"<ipython-input-3-68a99508cab0>\", line 1\n    x = 1y = 2\n         ^\nSyntaxError: invalid syntax\n```\n\npasting same in opened triple quotes works:\n\n``` python\nIn [4]: a = '''x = 1\n   ...: y = 2\n   ...: '''\n\nIn [5]: a\nOut[5]: 'x = 1\\ny = 2\\n'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225247680",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225247680",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225247680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI0NzY4MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T17:40:44Z",
    "updated_at": "2016-06-10T17:40:44Z",
    "author_association": "MEMBER",
    "body": "Can both of you try with PTK master ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225263813",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225263813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225263813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2MzgxMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:44:12Z",
    "updated_at": "2016-06-10T18:44:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I get the same on prompt_toolkit master, but, I do get some errors with master when using any arrow key\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225265886",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225265886",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225265886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NTg4Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:52:35Z",
    "updated_at": "2016-06-10T18:52:35Z",
    "author_association": "MEMBER",
    "body": "> I get the same on prompt_toolkit master, but, I do get some errors with master when using any arrow key\n\nIf you have errors on IPython/ptk-master can you post them here ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225266793",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225266793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225266793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2Njc5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:56:07Z",
    "updated_at": "2016-06-10T18:56:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just opened an issue at ptk: https://github.com/jonathanslenders/python-prompt-toolkit/issues/316 (opened it at ptk, as I didn't change the IPython version so suspected it is a ptk issue)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225275538",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225275538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225275538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI3NTUzOA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T19:34:54Z",
    "updated_at": "2016-06-10T20:54:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "The bug regarding the pasting is probably in this key binding (Ctrl-J). I can reproduce it, but it doesn't happen for ptpython.\n\nhttps://github.com/ipython/ipython/blob/master/IPython/terminal/ptshell.py#L183\n\nedit: or maybe not.... I'm looking into this.\n\nSo, the problem is that when a large piece of text is pasted, then this is read in one system call. `windll.kernel32.ReadConsoleInputW` on Windows, or `os.read` on Linux. All the input that is read, will be processed in one shot. (Max 1024 events in the case of windows.) This means, that if the `Ctrl-J` (enter) key binding is handled, it calls `buffer.accept_action.validate_and_handle`, which sets the result value and calls the `close` function of the event loop. However, we will only return to the event loop after this whole chunk of input data has been processed. So, we keep processing all the other input, but we don't add newlines. Exactly the same bug happens on Linux if we disable bracketed paste, and paste multiline text.\n\nThere are a few ways to fix this, and I'm not yet entirely sure what the best way is (give me a few days):\n- We can attach timestamps to all the `KeyPress` objects. If `Ctrl-J` has exactly the same timestamp as the previous keypress (we can generate timestamps when calling `ReadConsoleInputW`), then we know that this enter keypress is part of a multiline paste. This would also allow us to keep the indentation when pasting in Windows, en being sure that pasting will never execute anything. One difficulty here is how to handle the situation when the pasted text starts with a newline.\n- We could attach the whole input chunk to each fragment, and check that way whether the `\\n` was a sole `\\n`. I started this way, but it doesn't look like the best approach on Windows.\n- Maybe something else.\n\nFuther, I think that in `prompt_toolkit.interface._InterfaceEventLoopCallbacks.feed_key`, we should check whether `self._active_cli.is_done` has been set, and if so, not call the handlers, but return to the event loop.\n\nTomorrow, I'll have a new look. Keeping you posted.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225348481",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225348481",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225348481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM0ODQ4MQ==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-11T09:50:08Z",
    "updated_at": "2016-06-11T09:50:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do you feel if I can make pasting on Windows 99.9% accurate, but not 100%?\n\nBy this I mean, as far as I know, there is no way to detect when a user is pasting text, rather than typing fast. However, when pasting text, one `ReadConsoleInputW` will probably return multiple keys. (Up to 1024, according to the current setting.) This means, that if a user is pasting 1025 characters from which the last is a newline, then we will receive first one chunk of 1024 characters; process these; and later one single newline and process that separate. This means that in this particular case, it will be really hard to know whether this last newline was pasted or not. However, in the other cases, we can be rather confident, and emulate bracketed paste.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225358367",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225358367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225358367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM1ODM2Nw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-11T12:33:06Z",
    "updated_at": "2016-06-11T12:33:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Proof of concept for a possible fix in prompt-toolkit: https://github.com/jonathanslenders/python-prompt-toolkit/pull/318\n(This should fix multiline paste on Windows, but probably still breaks paste in some situations in Linux. Still working on that.)\n\nNote that the fix above does not try to interpret pasting as something different from typing normal text. This fix simply ensures that on Win32, we only read events from the input device until the CLI is put into the \"done\" state. (which is when it has to return a result to IPython). That way, all the following input will be preserved until the next `prompt()` call.\n\nNext step, if we want to, is to discover that a newline is part of a larger sequence of text, and if so: consider it a paste. After thinking a lot about this, I think it is possible, but there are some edge cases, and it makes me wonder whether it's worth the effort. It comes down to tracing whether a key press was preceded by another key press or is followed by another keypress without any delay. I want a universal solution which also handles the case of a unix terminal without bracketed paste. And the hard thing there is that one key press can match multiple characters at the input stream, and so we have several layers of abstraction through which we have to track this information.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225442067",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225442067",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225442067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0MjA2Nw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T15:14:58Z",
    "updated_at": "2016-06-12T15:14:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "New implementation: https://github.com/jonathanslenders/python-prompt-toolkit/pull/319\n\nI'd appreciate if anyone with a Windows system can test this branch. It emulates bracketed paste on Windows. That means that if the input is detected as a paste, no indentation is added, nothing is automatically executed and all text is kept in one input field.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225448666",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225448666",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225448666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0ODY2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T17:12:02Z",
    "updated_at": "2016-06-12T17:12:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonathanslenders tested it, and seems to work! (at least for the simple paste cases I filed this issue for)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225450941",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225450941",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225450941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ1MDk0MQ==",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T17:55:28Z",
    "updated_at": "2016-06-12T17:57:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok. On Windows7/ Python3.5/IPython5.0.0b3/jupyter-console5.0.0b1, It works in:\n- jupyter-console, \n- ptpython,\n- ipython notebook ? (maybe no relationship there, but checking anyway)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225461470",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225461470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225461470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ2MTQ3MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T21:26:58Z",
    "updated_at": "2016-06-12T21:26:58Z",
    "author_association": "MEMBER",
    "body": "There's something I haven't understood: if pasting text acts just like\ntyping it, why wouldn't pasting a newline act like typing one? Does return\ngenerate a different character?\n\nCan we pick up ctrl+v on windows? Maybe we can use that to offer another\nway to paste into the terminal.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225643470",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225643470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225643470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY0MzQ3MA==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T17:01:06Z",
    "updated_at": "2016-06-13T17:01:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didnt try new implementation but though to comment regardless.\n\nI dont fully understand Jonathan comments, the same as I dont understand why pasting mulitline string in opened triple quotes works, while multiline paste on command line doesnt work?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225660932",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225660932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225660932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY2MDkzMg==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T18:05:12Z",
    "updated_at": "2016-06-13T18:05:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is correct to assume that pasting text acts like just typing. (On Windows.)\n\nSo, what I do on windows is make an assumption: \" if `ReadConsoleInputW` returns at least one `\\r` character, along with at least one other textual character, then we turn it into a paste event. \"\n\nWhy this combination? Because it is the best trade-off I could find between correctness and practicality. When the pasted text doesn't contain line endings, usually we can handle them correctly as normal key strokes, so in that situation it's better not to do special tricks. And if a single `\\r` was found in the input buffer, then it means that the user pressed a key by hand. (Not many people past a single line ending.)\n\nSo, what if a user types really fast, and is able to fill the input buffer faster than we can read from it? On my Windows system, this never happened, even holding the enter key down was not fast enough to put multiple enter sequences in the input buffer. However, if at some point this happens, a user typed really fast and an `\\n` was inserted instead of executing the command, then we still have the visual feedback, telling the user that something else happened.\n\nI could make this an option so it can be disabled, if ever this is not desired. (What do you think?)\n\n@klonuo: About pasting in multiline strings:\nThis will always work, because IPython knows that whatever the user types in between triple quoted strings can be multiline, and it won't interpret the \"enter\" key as \"execute now\" until the string has been terminated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225670725",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225670725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225670725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY3MDcyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T18:40:48Z",
    "updated_at": "2016-06-13T18:40:48Z",
    "author_association": "MEMBER",
    "body": "> So, what I do on windows is make an assumption: \" if ReadConsoleInputW returns at least one \\r character, along with at least one other textual character, then we turn it into a paste event. \"\n\nTo clarify, is this description what you did in response to this issue, or was this a mechanism that was already in place and something was going wrong with it?\n\nIf when @jorisvandenbossche found this issue pasting was just treated as typing fast, I'm having a hard time understanding how that would cause the symptoms he described. I understand why lines would be lost when the 'return' triggers IPython's execution, but I'm not sure why newlines would be lost to concatenate lines into one.\n\n> So, what if a user types really fast, and is able to fill the input buffer faster than we can read from it? On my Windows system, this never happened,\n\nThe situation I'd be concerned about is not freakishly fast users, but the possibility that our event loop could be running slow for some reason. E.g. could this occur if you're using an input hook to integrate with a GUI event loop, and reading input gets delayed a few milliseconds?\n\nIf we can detect Ctrl-V in Windows, we already have [code](https://github.com/ipython/ipython/blob/master/IPython/lib/clipboard.py) for getting data from the clipboard. That could be more convenient for users, and it might be easier to tell all users 'paste like this' than explain the limitations of cmd-native paste if it ever goes wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225672249",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225672249",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225672249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY3MjI0OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T18:46:29Z",
    "updated_at": "2016-06-13T18:46:29Z",
    "author_association": "MEMBER",
    "body": "> E.g. could this occur if you're using an input hook to integrate with a GUI event loop, and reading input gets delayed a few milliseconds?\n\nThinking about this some more, could even background threads potentially interfere, due to the GIL?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225697986",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225697986",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225697986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY5Nzk4Ng==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T20:27:19Z",
    "updated_at": "2016-06-13T20:29:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "This was an indirect response to the issue where pasted lines were concatenated into one line.\n\nThe concatenation was caused by the fact that incoming keys were processed in bulk. We did not return to the event loop after a newline has set a return value in the CommandLineInterface. Instead, we did set the return value, but processed the other keys using the same input buffer. This is wrong, the CLI should always quit after a return value has been set.\nThis was easy to fix, however by fixing this, I created a new issue. The one where all input on the input buffer after the \"enter\" key press would be discarded. There is no reliable way to push information that has been read back into the input stream. (Remember, we use a lower level I/O interface, than `sys.stdin`.)\n\nBy treating this as a paste event, I could avoid triggering the key binding for \"Enter\" and make sure that nothing would be discarded.\n\nBackground threads could interfere. Everything that blocks the main I/O loop could result in accumulating key presses in the input buffer. However, usually, a user stops typing if he doesn't see any feedback. (And we only display feedback in the next run of the event loop.) Further, a user doesn't easily press enter if he did not see any feedback. But, as I said, if ever this happens, the resulting behavior is acceptable.\n\nI know, not 100% perfect, but probably 99.9%. I'll see whether I come up with something different. If not, and we're in doubt, I'll maybe merge it, but disable this behavior by default.\n\nP.S. Getting data from the clipboard is easy, but Ctrl-V is not the only way to paste text.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225724930",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225724930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225724930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTcyNDkzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T22:14:26Z",
    "updated_at": "2016-06-13T22:14:26Z",
    "author_association": "MEMBER",
    "body": "OK, I understand now. Thanks for taking the time to explain it all.\n\nI think it probably makes sense for you to implement that in PTK, and us to add a Ctrl-V shortcut in IPython (only for Windows? Or for all platforms?). I know Ctrl-V isn't the only way to paste, but if it works and it's convenient, it reduces the likelihood of people hitting edge cases with the native paste handling.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/225791143",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-225791143",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 225791143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTc5MTE0Mw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T06:29:29Z",
    "updated_at": "2016-06-14T06:29:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding `Ctrl-V` on Windows is much more trivial than on the other platforms. Actually, for a VT terminal, you can't do it reliably. (It won't work through telnet/ssh, or you would paste something from the clipboard of the remote server.) Pyperclip (https://github.com/asweigart/pyperclip) tries to do this.\n\nIt could make sense, except if somebody would use Vi mode and expect quoted insert or block selection to work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226346310",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-226346310",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 226346310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjM0NjMxMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T23:09:17Z",
    "updated_at": "2016-06-15T23:09:17Z",
    "author_association": "MEMBER",
    "body": "Can we consider this one close now ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/226453769",
    "html_url": "https://github.com/ipython/ipython/issues/9600#issuecomment-226453769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9600",
    "id": 226453769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjQ1Mzc2OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T10:59:22Z",
    "updated_at": "2016-06-16T10:59:22Z",
    "author_association": "MEMBER",
    "body": "I think so.\n"
  }
]
