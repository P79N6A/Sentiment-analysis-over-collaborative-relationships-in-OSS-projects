[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57311664",
    "html_url": "https://github.com/ipython/ipython/issues/6576#issuecomment-57311664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6576",
    "id": 57311664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzExNjY0",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-30T13:17:59Z",
    "updated_at": "2014-09-30T13:17:59Z",
    "author_association": "MEMBER",
    "body": "> That's not all of the solutions, just the ones that I have thought about and tried locally. I'm assuming that minifying/concatenating javascript isn't going to fly, because it's too annoying for developers and users on master. \n\nyes, it could be feasible is master is used only for developers... but it fact it is used by a lot of users.  \n\n> So I would current lean toward using static_url to compute hashed URLs for required files. We can also consider having different behaviour for development installs (e.g. never cache, rely on 304), which has load-time consequences, but easy update benefits. This could also be governed by a flag, instead of checking the install type.\n\nI like the idea of a development install governed by a flag... in development load time consequences are probably well paid by the benefit of avoid the evil aggressive cache.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/112259856",
    "html_url": "https://github.com/ipython/ipython/issues/6576#issuecomment-112259856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6576",
    "id": 112259856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjI1OTg1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T02:08:16Z",
    "updated_at": "2015-06-16T02:08:16Z",
    "author_association": "MEMBER",
    "body": "@minrk can this one be considered closes now ? As we did the solution that you said would not fly?\n"
  }
]
