[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8033135",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8033135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8033135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzMxMzU=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-26T13:29:55Z",
    "updated_at": "2012-08-26T13:29:55Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2241678) (merged 58d78fce into 5bb0ae49).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8373705",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8373705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8373705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzM3MDU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-07T18:11:07Z",
    "updated_at": "2012-09-07T18:11:07Z",
    "author_association": "MEMBER",
    "body": "The idea of notebook diffs seems quite powerful, but I wonder if there are larger issues here about how we save notebooks.  @fperez and @minrk do you think there is an IPEP lurking here?  I am not quite sure what it would be though.  But I _love_ the idea of being able to do nb diffs, just not sure how to integrate it with the rest of our plans.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8387007",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8387007",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8387007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODcwMDc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T12:16:23Z",
    "updated_at": "2012-09-08T12:16:23Z",
    "author_association": "MEMBER",
    "body": "What do you mean with `issues here about how we save notebooks`?\n\nThe main point of this PR is to discuss how we handle UUID, is it worth keeping track of ancestors UUIDs or not.\nI think it is for having good custom merging and diffing. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8393258",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8393258",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8393258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTMyNTg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T17:54:39Z",
    "updated_at": "2012-09-08T17:54:39Z",
    "author_association": "MEMBER",
    "body": "I think it is probably not worth it to track ancestors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8393471",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8393471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8393471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTM0NzE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T17:59:49Z",
    "updated_at": "2012-09-08T17:59:57Z",
    "author_association": "MEMBER",
    "body": "Then how do you diff when you have cell merge, or uuid changes ?\nthere are some operation like copying/pasting/merging cell, that can't conserve uuid.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8396166",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8396166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8396166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTYxNjY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T19:01:29Z",
    "updated_at": "2012-09-08T19:01:29Z",
    "author_association": "MEMBER",
    "body": "How do you diff a simple cell move?\n\nHow do you handle multiple merges?\n\nIt seems to me that there are cases where the ancestor id wont work.\n\nOn Saturday, September 8, 2012, Bussonnier Matthias wrote:\n\n> Then how do you diff when you have cell merge, or uuid changes ?\n> there are some operation like copying/pasting/merging cell, that con't\n> conserve uuid.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2342#issuecomment-8393471.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8396522",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8396522",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8396522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTY1MjI=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T19:06:13Z",
    "updated_at": "2012-09-08T19:06:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this diff tool going to be a building block for \"Google Doc like\" notebook sync across clients?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8396742",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8396742",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8396742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTY3NDI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T19:09:25Z",
    "updated_at": "2012-09-08T19:09:25Z",
    "author_association": "MEMBER",
    "body": "On Sat, Sep 8, 2012 at 10:59 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> Then how do you diff when you have cell merge, or uuid changes ?\n> there are some operation like copying/pasting/merging cell, that con't\n> conserve uuid.\n\nSometimes the diff won't deduce everything, and might show the change as\nlarger than a human would.\nThis happens all the time with regular diffs, and is not generally a\nproblem.\n\nI just don't think the benefit is worth the complexity.\n\nFor example, compare these two actions:\n\nusers A and B are both given the same notebook with a single cell\nuser A does split-cell to create a two-cell notebook\nuser B creates a new cell, and does copy/paste to move text from one cell\nto the next.\n\nTheir two notebooks are now identical, and created from the same source.\n If we depend on ancestor ID, wouldn't A's diff be significantly different\nfrom B's? This doesn't seem desirable.\n\n>  —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2342#issuecomment-8393471.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8397421",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8397421",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8397421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTc0MjE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T20:16:42Z",
    "updated_at": "2012-09-08T20:16:42Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg\n\n> How do you diff a simple cell move?\n\njust extend the diff syntax to \n\n```\n@@ diff for cell 4 @@\n--- 1_old_cell\n+++ 1_new_cell\n@@ -1,4 +1,3, move from position 4 to 18 @@\n```\n\nfor example, or store in the metadata of the newly created cell to show a special UI\n\n> How do you handle multiple merges?\n> it does work with current implementation. \n\nassumming `A,B,C` to `AB,C` to `C,AB` to `CAB`\n\nyour family tree woull be smth like \n\n```\nupper_cell:{\n    C\n    }\nlower_cell:\n    {\n    AB : { upper_cell: A,\n           lower_cell: B\n    }\n```\n\nso wether you have (C,AB), or (C,A,B) you can reconstitute the merge.\n\n> It seems to me that there are cases where the ancestor id wont work.\n\nMaybe, but introducing cell ID, allows us to do something better than simple\njson diffing in many cases. \n\n## \n\n@tkf, \n\n> Is this diff tool going to be a building block for \"Google Doc like\" notebook\n> sync across clients?\n\nI don't thinkn so, with live collaborating, document will be in sync, so you\ndon't need to look for differences. But UUID will help with syncing. \n\n## \n\n@minrk,\n\n> Sometimes the diff won't deduce everything, and might show the change as\n> larger than a human would.\n> This happens all the time with regular diffs, and is not generally a\n> problem.\n\nYes, and we have the occasion to reduce this effect, we can remove it totally but it will be better than anything.\n\nLots of interpreters don't show colored tracebacks, and it's not generally a problem.\n\n> I just don't think the benefit is worth the complexity.\n\nThe added complexity is small, and stored in metadata.\n\nWe have the occasion of storing additionnal metadata on the document and to\nbuild a format that might use that to offer better versionning. Like some\nSoftware allow you to see who edited what, let not miss the occasion. \n\n> users A and B are both given the same notebook with a single cell\n> user A does split-cell to create a two-cell notebook\n> user B creates a new cell, and does copy/paste to move text from one cell\n> to the next.\n> \n> Their two notebooks are now identical, and created from the same source.\n> If we depend on ancestor ID, wouldn't A's diff be significantly different\n> from B's? This doesn't seem desirable.\n\nI know some people that don't use/know git mv, should I consider that git-mv is worthless ?\n\nI don't say that we should alway rely the extra-information to do diff and/or merge,\nbut we can have it, in metadata, the point of metadata is to add additionnal\ninformations, and we have the occasion of adding something that is awfully\ndifficult to guess afterward, and would make a **really** good plus for the fileformat. \n\ngit allows to manually edit chunk when commiting because diff tool does not always get things right. \nlet's do better and give versioning tool what they need to do their job better ! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8397613",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8397613",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8397613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTc2MTM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T20:34:34Z",
    "updated_at": "2012-09-08T20:34:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Ah, sorry, this is a sub-cell level diff tool, not worksheet level (this tool is not for detecting reordering of cells, etc.).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8397701",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8397701",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8397701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTc3MDE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T20:41:45Z",
    "updated_at": "2012-09-08T20:41:45Z",
    "author_association": "MEMBER",
    "body": "> @Carreau Ah, sorry, this is a sub-cell level diff tool, not worksheet level (this tool is not for detecting reordering of cells, etc.).\n\nYes This **is** is to detect cell movement and merge. \n\nYou don't **need** to **detect** cell move and merge while live editting because you are actually **dooing it**\nLive collaboration [does not need this tool](http://elacave.lmdb.eu/~carreau/NotebookLiveCollaboration.mov). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8408553",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8408553",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8408553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDg1NTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-09T19:55:51Z",
    "updated_at": "2012-09-09T19:55:51Z",
    "author_association": "MEMBER",
    "body": "The reason this is related to how notebooks are saved is that if we want to add a UI to the notebook for viewing diffs, we would need access to different versions of the notebooks.  This would require some sort of version control for the notebooks.  We could build that ourselves or use git, but it definitely gets back to how the notebooks are saved.\n\nBut if we just want to have this diff capability as a separate tool, we don't have to think about that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8408637",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8408637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8408637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDg2Mzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-09T20:03:38Z",
    "updated_at": "2012-09-09T20:03:38Z",
    "author_association": "MEMBER",
    "body": "It also seems like there are other overlaps between:\n- Notebook saving\n- Live collaboration\n- Diffs and version control\n\nLet me try to explain.  Live notebook collaboration requires that the client sends cell level diffs to the server, which are then broadcast to other clients.  These diffs are things like:\n- Move cell 2 down\n- Merge cells 4 and 5\n- Update the contents of cell 4 with the text \"...\"\n\nEven without multiple people editing documents, this is exactly the information required to do things like track versions through time, rewind to older versions, etc.  Essentially we are inventing structured version control for notebooks.\n\nBut there is then the question of where do we store that information.  If we don't save it to a db/file, it will be lost.  If we want to save it to file, we would have to invent a new file format.\n\nBut this all takes me back to my desire to see a new IPEP created where we can discuss all of these things.  There are huge issues here that span a number of different areas of the code base.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8428962",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-8428962",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 8428962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0Mjg5NjI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-10T16:32:26Z",
    "updated_at": "2012-09-10T16:32:26Z",
    "author_association": "MEMBER",
    "body": "> Even without multiple people editing documents, this is exactly the information required to do things like track versions through time, rewind to older versions, etc. Essentially we are inventing structured version control for notebooks.\n\nOk, you think about storing \"patches\" and use them to do diffs and other. \nI didn't thought of this one. \n\nThis is (I think) what [darcs](http://darcs.net/) is trying to do. It is IMHO, a much to complex approach. \nPatch could be used to lower the data that have to transit on the wire, but storing and using them give you theoretically more freedom, but would be a nightmare to program.\n\nI have a better understanding of what you want to discuss, and will try to comme up with a new PEP.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9013554",
    "html_url": "https://github.com/ipython/ipython/pull/2342#issuecomment-9013554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2342",
    "id": 9013554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTM1NTQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-30T13:16:37Z",
    "updated_at": "2012-09-30T13:16:37Z",
    "author_association": "MEMBER",
    "body": "Hi, \nThis PR is without activities for 2 month now, \nI'm going to close it and open an issue to reference it. \nThis does not mean than we refuse the code that is here, but that we try to keep the number of opened Pull request as low as possible to have better bird view of active code.\n\nFell free to reopen this PR whenever you want or contact us if you have any questions.\n\nThanks for contributing.\n"
  }
]
