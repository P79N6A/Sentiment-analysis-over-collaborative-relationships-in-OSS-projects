[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11917111",
    "html_url": "https://github.com/ipython/ipython/issues/2750#issuecomment-11917111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2750",
    "id": 11917111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTE3MTEx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-05T17:54:50Z",
    "updated_at": "2013-01-05T17:54:50Z",
    "author_association": "MEMBER",
    "body": "This wouldn't work as the cell would be cleaned even before `%%off` beeing analysed. \nAlso there is a strong decoupling frontend/kernel a magic is on kernel side which has no knowledge of frontend.\n\nYou should be able to copy past trackback in MD cell between triple back-ticks and still have the syntactic coloration.\n\nYou should also be able to use %%capture to rerun the cell and capture the sterr/stdout in variables. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11917167",
    "html_url": "https://github.com/ipython/ipython/issues/2750#issuecomment-11917167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2750",
    "id": 11917167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTE3MTY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-05T17:59:03Z",
    "updated_at": "2013-01-05T17:59:03Z",
    "author_association": "MEMBER",
    "body": "The basic idea makes sense, but it's really a frontend issue - you want a way to freeze a code cell. I've retitled the issue to reflect that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11929713",
    "html_url": "https://github.com/ipython/ipython/issues/2750#issuecomment-11929713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2750",
    "id": 11929713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI5NzEz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-06T15:26:08Z",
    "updated_at": "2013-01-06T15:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually I don't want to freeze a cell: i just want a fast way to disable a cell which only contains \"debugging\" code. I wouldn't even mind if the cell output is cleared. Funnily, `%%off` works, kind of: it simple returns an error instead of running the cell, which is almost what I want :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11929799",
    "html_url": "https://github.com/ipython/ipython/issues/2750#issuecomment-11929799",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2750",
    "id": 11929799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI5Nzk5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-06T15:35:10Z",
    "updated_at": "2013-01-06T15:35:10Z",
    "author_association": "MEMBER",
    "body": "Toggle between 'code' and 'raw' cell ? (C-m, r)\n\nor `If False :` indent the rest ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11930440",
    "html_url": "https://github.com/ipython/ipython/issues/2750#issuecomment-11930440",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2750",
    "id": 11930440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTMwNDQw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-06T16:24:54Z",
    "updated_at": "2013-01-06T16:24:54Z",
    "author_association": "MEMBER",
    "body": "Or does Codemirror have a 'comment this out' shortcut?\n\nIf not, it's very easy to add your own 'do nothing' cell magic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22069264",
    "html_url": "https://github.com/ipython/ipython/issues/2750#issuecomment-22069264",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2750",
    "id": 22069264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDY5MjY0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-04T09:52:04Z",
    "updated_at": "2013-08-04T09:52:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "My case is satisfied with teh extension in minrks repository. So closing.\n"
  }
]
