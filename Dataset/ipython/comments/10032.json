[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256075980",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256075980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256075980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA3NTk4MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T15:49:57Z",
    "updated_at": "2016-10-25T15:49:57Z",
    "author_association": "MEMBER",
    "body": "I don't think we want to support passing command line arguments to a notebook. It's not possible when you open a notebook, and it's not possible with `jupyter nbconvert --execute`.\n\nDepending on what you're trying to do, you could try setting environment variables.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256076610",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256076610",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256076610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA3NjYxMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T15:52:06Z",
    "updated_at": "2016-10-25T15:52:06Z",
    "author_association": "MEMBER",
    "body": "I tend to agree. It should not be not that hard to pull into a separate project (for now) I'm going to guess that's it might even be in the runipy package. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256080062",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256080062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256080062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA4MDA2Mg==",
    "user": {
      "login": "nastasi-oq",
      "id": 1670278,
      "node_id": "MDQ6VXNlcjE2NzAyNzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1670278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nastasi-oq",
      "html_url": "https://github.com/nastasi-oq",
      "followers_url": "https://api.github.com/users/nastasi-oq/followers",
      "following_url": "https://api.github.com/users/nastasi-oq/following{/other_user}",
      "gists_url": "https://api.github.com/users/nastasi-oq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nastasi-oq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nastasi-oq/subscriptions",
      "organizations_url": "https://api.github.com/users/nastasi-oq/orgs",
      "repos_url": "https://api.github.com/users/nastasi-oq/repos",
      "events_url": "https://api.github.com/users/nastasi-oq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nastasi-oq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T16:03:54Z",
    "updated_at": "2016-10-25T16:03:54Z",
    "author_association": "NONE",
    "body": "I'm using secondary notebooks as part of a principal workflow, without this feature I must set all parameters in a previously created object and than retrieved in the called ipynb from the same object.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256086581",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256086581",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256086581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA4NjU4MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T16:27:34Z",
    "updated_at": "2016-10-25T16:27:34Z",
    "author_association": "MEMBER",
    "body": "But `sys.argv` makes no sense when you're actually editing the notebook.\n\nMaybe you'd be interested in [nbparameterise](https://github.com/takluyver/nbparameterise), which works by replacing values set in the first code cell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256092429",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256092429",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256092429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA5MjQyOQ==",
    "user": {
      "login": "nastasi-oq",
      "id": 1670278,
      "node_id": "MDQ6VXNlcjE2NzAyNzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1670278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nastasi-oq",
      "html_url": "https://github.com/nastasi-oq",
      "followers_url": "https://api.github.com/users/nastasi-oq/followers",
      "following_url": "https://api.github.com/users/nastasi-oq/following{/other_user}",
      "gists_url": "https://api.github.com/users/nastasi-oq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nastasi-oq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nastasi-oq/subscriptions",
      "organizations_url": "https://api.github.com/users/nastasi-oq/orgs",
      "repos_url": "https://api.github.com/users/nastasi-oq/repos",
      "events_url": "https://api.github.com/users/nastasi-oq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nastasi-oq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T16:48:21Z",
    "updated_at": "2016-10-25T16:48:21Z",
    "author_association": "NONE",
    "body": "@takluyver maybe I'm missing something: does is it correct assume that a secondary ipynb runned with `%run` inherit all the global variables of the primary ?\nIf it is the case: can I use a global array to store arguments that I want to pass to the secondary ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256126217",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256126217",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256126217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEyNjIxNw==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T18:26:00Z",
    "updated_at": "2016-10-25T18:26:00Z",
    "author_association": "MEMBER",
    "body": "@nastasi-oq that's correct, if you have a `simple_notebook.ipynb` with just a cell `print(x)` and you try to run it, you'll get an error. However, if after you run `x=42` in another notebook, you `%run simple_notebook.ipynb` you will see `42` as the output of your `%run` cell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256127065",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256127065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256127065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEyNzA2NQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T18:27:23Z",
    "updated_at": "2016-10-25T18:27:23Z",
    "author_association": "MEMBER",
    "body": "Thanks for chiming in with this pull request, @nastasi-oq, I'm going to go ahead and close it as it is not something we plan to support and there are workarounds for the functionality you want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256187545",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256187545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256187545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4NzU0NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T21:54:18Z",
    "updated_at": "2016-10-25T21:54:18Z",
    "author_association": "MEMBER",
    "body": "Broadly, it's because we don't think it makes sense to write notebooks as\n'scripts' like that. We see notebooks as a companion to regular Python\nfiles, not a replacement. So if you want something that takes command line\narguments, write a .py script! Notebooks shine as an interactive document\nthat tells a story about code, and the way that you normally load them and\nexecute them doesn't take command line arguments. If you write a notebook\nthat expects sys.argv, it can only be run in a special way - it won't work\nwhen you open the notebook and run it interactively. We don't want to\nencourage people to make such notebooks.\n\nOn 25 October 2016 at 21:11, Marco Pagani notifications@github.com wrote:\n\n> Dear Thomas and Matthias, thank you for your comments. I apologise but I\n> don't understand why don't you think this might be a useful feature. If I'm\n> not mistaken passing arguments through sys.argv is supported in ipython.\n> I've been setting environment variables as you suggest to circumvent the\n> impossibility of passing arguments with %run. This is definitely not an\n> efficient solution since you must do it outside the jupyter environment.\n> I've been also using runipy - which is a useful package - but in some cases\n> this is also not the right option since you run the notebook through\n> subprocess. The change suggested by Matteo is rather small and does not\n> break everything is already there. On the contrary it definitely makes the\n> use of the %run magic more powerful. btw I saw similar requests in a number\n> of discussion threads on stackoverflow.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/ipython/ipython/pull/10032#issuecomment-256161515,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAUA9bzBsJail8vR8vatxZDn6I16ekF5ks5q3mJ7gaJpZM4KgIop\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256189796",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256189796",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256189796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4OTc5Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T22:00:44Z",
    "updated_at": "2016-10-25T22:00:44Z",
    "author_association": "MEMBER",
    "body": "> Dear Thomas and Matthias, thank you for your comments. I apologise but I don't understand why don't you think this might be a useful feature. If I'm not mistaken passing arguments through sys.argv is supported in ipython. \n> I've been setting environment variables as you suggest to circumvent the impossibility of passing arguments with %run. This is definitely not an efficient solution since you must do it outside the jupyter environment. I've been also using runipy - which is a useful package - but in some cases this is also not the right option since you run the notebook through subprocess. The change suggested by Matteo is rather small and does not break everything is already there. On the contrary it definitely makes the use of the %run magic more powerful. btw I saw similar requests in a number of discussion threads on stackoverflow.\n\nSorry if we were a bit blunt on conveyed that this was not a useful feature. Beyond what thomas said we have been more and more trying to pull feature out of IPython into separate module. Just recently the deep reload magic, as well as longer ago cython magic and R magic. There are many advantage of not having that in the core that I won't repeat here but might write a blog post about. \n\nAnother  successful example  is [the content management plugin](https://github.com/jupyter-incubator/contentmanagement) that expose many magic that handle notebook in various way (as template, run locally and display output... )\n\nIf you develop a magic that does what you wish, and it gets wider adoption, we can consider incorporating it. But for now we don't believe it does fit the way notebook are used or should be used. \n\nHope that clarify things more. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256471405",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256471405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256471405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQ3MTQwNQ==",
    "user": {
      "login": "mmpagani",
      "id": 318811,
      "node_id": "MDQ6VXNlcjMxODgxMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/318811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmpagani",
      "html_url": "https://github.com/mmpagani",
      "followers_url": "https://api.github.com/users/mmpagani/followers",
      "following_url": "https://api.github.com/users/mmpagani/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmpagani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmpagani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmpagani/subscriptions",
      "organizations_url": "https://api.github.com/users/mmpagani/orgs",
      "repos_url": "https://api.github.com/users/mmpagani/repos",
      "events_url": "https://api.github.com/users/mmpagani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmpagani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T20:44:36Z",
    "updated_at": "2016-10-26T20:44:36Z",
    "author_association": "NONE",
    "body": "Dear Thomas and Matthias,\nThank you so much for your kind email and clear explanations.\nI have now a better understanding of your comments and suggestions.\nBest wishes,\nMarco\n\nOn 26/10/16 00:01, Matthias Bussonnier wrote:\n\n> ```\n> Dear Thomas and Matthias, thank you for your comments. I apologise\n> but I don't understand why don't you think this might be a useful\n> feature. If I'm not mistaken passing arguments through sys.argv is\n> supported in ipython.\n> I've been setting environment variables as you suggest to\n> circumvent the impossibility of passing arguments with %run. This\n> is definitely not an efficient solution since you must do it\n> outside the jupyter environment. I've been also using runipy -\n> which is a useful package - but in some cases this is also not the\n> right option since you run the notebook through subprocess. The\n> change suggested by Matteo is rather small and does not break\n> everything is already there. On the contrary it definitely makes\n> the use of the %run magic more powerful. btw I saw similar\n> requests in a number of discussion threads on stackoverflow.\n> ```\n> \n> Sorry if we were a bit blunt on conveyed that this was not a useful \n> feature. Beyond what thomas said we have been more and more trying to \n> pull feature out of IPython into separate module. Just recently the \n> deep reload magic, as well as longer ago cython magic and R magic. \n> There are many advantage of not having that in the core that I won't \n> repeat here but might write a blog post about.\n> \n> Another successful example is the content management plugin \n> https://github.com/jupyter-incubator/contentmanagement that expose \n> many magic that handle notebook in various way (as template, run \n> locally and display output... )\n> \n> If you develop a magic that does what you wish, and it gets wider \n> adoption, we can consider incorporating it. But for now we don't \n> believe it does fit the way notebook are used or should be used.\n> \n> Hope that clarify things more.\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub \n> https://github.com/ipython/ipython/pull/10032#issuecomment-256189796, \n> or mute the thread \n> https://github.com/notifications/unsubscribe-auth/AATdW9rNYNySDInHmy1oCWsR0lVdSNCuks5q3nwjgaJpZM4KgIop.\n\n## \n\n_MARCO PAGANI_ | Seismic Hazard Coordinator | mm.pagani | \nmarco.pagani@globalquakemodel.org | +39-0382-5169863\n_GLOBAL EARTHQUAKE MODEL \\* working together to assess risk\n*GEM -_ globalquakemodel.org http://www.globalquakemodel.org/ | _T -_ \n@GEMwrld http://twitter.com/GEMwrld | _F -_ GEMwrld \nhttp://www.facebook.com/GEMwrld\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256486829",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256486829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256486829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQ4NjgyOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T21:46:00Z",
    "updated_at": "2016-10-26T21:46:00Z",
    "author_association": "MEMBER",
    "body": "> Dear Thomas and Matthias,\n> Thank you so much for your kind email and clear explanations.\n> I have now a better understanding of your comments and suggestions.\n> Best wishes,\n\nThanks ! If you are trying to publish that as a separate extension and need help fell free to ask ! We'll be also happy to see you advertise it on the mailing list. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256680103",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256680103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256680103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjY4MDEwMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-27T15:39:42Z",
    "updated_at": "2016-10-27T15:39:42Z",
    "author_association": "MEMBER",
    "body": "You're welcome :-). Thanks for taking the time to understand why we turned\nthe feature down!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256691119",
    "html_url": "https://github.com/ipython/ipython/pull/10032#issuecomment-256691119",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10032",
    "id": 256691119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjY5MTExOQ==",
    "user": {
      "login": "willingc",
      "id": 2680980,
      "node_id": "MDQ6VXNlcjI2ODA5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willingc",
      "html_url": "https://github.com/willingc",
      "followers_url": "https://api.github.com/users/willingc/followers",
      "following_url": "https://api.github.com/users/willingc/following{/other_user}",
      "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willingc/subscriptions",
      "organizations_url": "https://api.github.com/users/willingc/orgs",
      "repos_url": "https://api.github.com/users/willingc/repos",
      "events_url": "https://api.github.com/users/willingc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willingc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-27T16:07:52Z",
    "updated_at": "2016-10-27T16:07:52Z",
    "author_association": "MEMBER",
    "body": "@mmpagani Thanks for being so gracious and appreciating @takluyver and @Carreau's views. We hope you will keep sharing your ideas and thoughts with us. :cake: :sunny:\n"
  }
]
