[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6084587",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6084587",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6084587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODQ1ODc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-03T10:52:45Z",
    "updated_at": "2012-06-03T10:52:45Z",
    "author_association": "MEMBER",
    "body": "made a mistake, close, will reopen.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6086046",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6086046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6086046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODYwNDY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-03T14:46:55Z",
    "updated_at": "2012-06-03T14:46:55Z",
    "author_association": "MEMBER",
    "body": "@fperez , this should remove the \"duplicates\" completions by favoring introspection completion from context completion. \n\nThere might (really not sure) be some false positive of 'duplicates', so some context completion might not show up in rare case, but no completion coming from live object introspection will be discarded.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6091553",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6091553",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6091553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTE1NTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-04T02:53:37Z",
    "updated_at": "2012-06-04T02:53:37Z",
    "author_association": "MEMBER",
    "body": "The functionality seems to work correctly, thanks!  I only have a couple of comments:\n1. You are using code in this style of brace handling:\n\n```\n    function _existing_completion(item, completion_array)\n    {\n        if(item.substr(0,1) == '.')\n        {\n            for( var c in completion_array )\n            {\n```\n\nbut in general I see our JS files use the more traditional placing of the opening brace in the same line:\n\n```\n    function _existing_completion(item, completion_array) {\n        if(item.substr(0,1) == '.') {\n            for( var c in completion_array ) {\n```\n\nso it should probably conform to that.\n1. I don't know enough JS to say anything about the actual implementation of the filtering.  It looks a bit complicated to me, in Python I would have simply done right before returning something like:\n\n```\nreturn sorted(set(matches))\n```\n\nthus ensuring uniqueness, rather than doing all the per-item check you are doing.  But again, I don't know much JS, so perhaps there's no cleaner way to do it.  @ellisonbg, @minrk, thoughts on this one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6091616",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6091616",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6091616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTE2MTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-04T03:02:45Z",
    "updated_at": "2012-06-04T03:02:45Z",
    "author_association": "MEMBER",
    "body": "There doesn't seem to be something like `set` in javascript, but a quick Googling reveals a pretty simple sort/unique transform, that could probably be even simpler if you know that everything is a string:\n\nhttp://stackoverflow.com/questions/4833651/javascript-array-sort-and-unique\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6093727",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6093727",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6093727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTM3Mjc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-04T07:25:05Z",
    "updated_at": "2012-06-04T07:25:05Z",
    "author_association": "MEMBER",
    "body": "Well, issue is that both introspection and context completion does not return the same thing. \nIf you try to complete `a.b.<tab>` kernel will return `a.b.something` whereas coompletion based on codemirror token will only return `.something` , so as the 2 kinds of completion are not the same length you have to keep the replace range tightly linked to the completion, then i'm sorting  and comparing dict based on their keys.\n\nAnd as the 2 keys are different I have the deduplication try to match only the ends of the strings, but only when one of them start with a dot, because obviously, you don't want to find that `width` is the same as `set_width`.\n\nStill I'll see If I can shorten the logic.\n\nAs for the brace, i'll never get used to it, will fix it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6115198",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6115198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6115198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTUxOTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T00:42:41Z",
    "updated_at": "2012-06-05T00:42:41Z",
    "author_association": "MEMBER",
    "body": "Great, thanks.  Ping us when you've updated the logic and we'll revisit, I'd really like to see this merged.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6119691",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6119691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6119691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTk2OTE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T07:39:05Z",
    "updated_at": "2012-06-05T07:39:05Z",
    "author_association": "MEMBER",
    "body": "Well, I tried, there is one check that I can omit, but I don't see how I can deduplicate faster. Sorting does not help, uniqueness is not well enough related to comparing items.\n\nassuming I want `methA`from object `object`. Then `object.<tab>` gives me :\n- `object.methA`   # from kernel\n- `object.methB`   # from kernel\n- `.methA`  # from codemirror.\n- `.methB`  # from codemirror.\n\nWhich is already sorted. and obviously the duplicates are not next to each other... so you can't test for equality, or use hash, set ....\n\nIf you have any more ideas ... or i'm good to go\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6187606",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6187606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6187606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODc2MDY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T20:51:27Z",
    "updated_at": "2012-06-07T20:51:27Z",
    "author_association": "MEMBER",
    "body": "I think this can go in as is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6193599",
    "html_url": "https://github.com/ipython/ipython/pull/1841#issuecomment-6193599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1841",
    "id": 6193599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM1OTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-08T03:12:20Z",
    "updated_at": "2012-06-08T03:12:20Z",
    "author_association": "MEMBER",
    "body": "I'm OK too if there's no better option, I just wanted to look into it.  Thanks for taking the time to investigate, @Carreau.  I'm merging now b/c this bug is really annoying me.\n"
  }
]
