[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5203949",
    "html_url": "https://github.com/ipython/ipython/issues/1623#issuecomment-5203949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1623",
    "id": 5203949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDM5NDk=",
    "user": {
      "login": "eelsirhc",
      "id": 1069709,
      "node_id": "MDQ6VXNlcjEwNjk3MDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1069709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eelsirhc",
      "html_url": "https://github.com/eelsirhc",
      "followers_url": "https://api.github.com/users/eelsirhc/followers",
      "following_url": "https://api.github.com/users/eelsirhc/following{/other_user}",
      "gists_url": "https://api.github.com/users/eelsirhc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eelsirhc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eelsirhc/subscriptions",
      "organizations_url": "https://api.github.com/users/eelsirhc/orgs",
      "repos_url": "https://api.github.com/users/eelsirhc/repos",
      "events_url": "https://api.github.com/users/eelsirhc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eelsirhc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T17:25:39Z",
    "updated_at": "2012-04-18T17:25:39Z",
    "author_association": "NONE",
    "body": "I notice that during the construction of the image the array 'rgba' is created as nx \\* ny \\* 4 \\* (64 bits), which for a 16 million point image is 500 megabytes, which could start to impact the 8GB free memory I have if the memory isn't being freed fast enough/ at all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5207086",
    "html_url": "https://github.com/ipython/ipython/issues/1623#issuecomment-5207086",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1623",
    "id": 5207086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDcwODY=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T19:51:24Z",
    "updated_at": "2012-04-18T19:51:24Z",
    "author_association": "MEMBER",
    "body": "This likely has to do with the fact that since you don't have semicolons at the end of your calls to imshow, you get back instances of the axes image object from matplotlib in your Out[] array (output cache) in ipython.\n\n``` python\n\nIn [7]: plt.imshow(np.random.rand(10,10))\nOut[7]: <matplotlib.image.AxesImage at 0x3b78e90>\n\nIn [8]: plt.imshow(np.random.rand(10,10));\n```\n\nBasically, without the semicolon, you can at a later point refer to the object returned after running the code for `In[7]` by either `Out[7]` or `_7` which are equivalent. Depending on the version of IPython you're running, you may be able to run `%reset out` to flush out this output cache. Also, you can disable the caching via the `--cache-size` parameter (run `ipython --help` to read about it.\n\nNote that if you really find yourself doing this a lot, you'll likely get better performance (and more sensible memory usage) by getting a handle on the AxesImage returned after the first call to imshow, and then using that instance's `set_data` method to replace the data it has\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5207298",
    "html_url": "https://github.com/ipython/ipython/issues/1623#issuecomment-5207298",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1623",
    "id": 5207298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDcyOTg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T20:00:46Z",
    "updated_at": "2012-04-18T20:00:46Z",
    "author_association": "MEMBER",
    "body": "I'm going to close this since, as Paul explained, the output caching is a feature. We know it causes problems in some situations like this, and there are a few options to work round it or disable it. If you think we can improve on those options, or document them better, please let us know. Thanks for taking the time to report it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5207698",
    "html_url": "https://github.com/ipython/ipython/issues/1623#issuecomment-5207698",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1623",
    "id": 5207698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDc2OTg=",
    "user": {
      "login": "eelsirhc",
      "id": 1069709,
      "node_id": "MDQ6VXNlcjEwNjk3MDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1069709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eelsirhc",
      "html_url": "https://github.com/eelsirhc",
      "followers_url": "https://api.github.com/users/eelsirhc/followers",
      "following_url": "https://api.github.com/users/eelsirhc/following{/other_user}",
      "gists_url": "https://api.github.com/users/eelsirhc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eelsirhc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eelsirhc/subscriptions",
      "organizations_url": "https://api.github.com/users/eelsirhc/orgs",
      "repos_url": "https://api.github.com/users/eelsirhc/repos",
      "events_url": "https://api.github.com/users/eelsirhc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eelsirhc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T20:16:53Z",
    "updated_at": "2012-04-18T20:17:49Z",
    "author_association": "NONE",
    "body": "Thanks Paul. Using the semi-colon allows me to run the same `imshow` command (seemingly) as many times as I want.\nThanks also for the `set_data` information. I apparently need to call `draw` to update the plot but it also works perfectly.\n\nI'm happy for you to close this issue. Apart from me not knowing that ipython cached objects like this, this issue is clearly a case of user error! \n\nI did a quick search for \"ipython caching\" and the first result is essentially my error from a year ago. Had I known that caching was the cause of the problem I could have found the solution, but I probably would have been further confused by the documentation for version 0.9 (the first ipython result on Google) which notes\n\n> Put a ‘;’ at the end of a line to suppress the printing of output. This is useful when doing calculations which generate\n> long output you are not interested in seeing. The _\\* variables and the Out[] list do get updated with the contents \n> of the output, even if it is not printed. You can thus still access the generated results this way for further processing.\n\nThis suggests to me that the presence of the semi-colon only controls whether `repr` or `str` is called on the returned object, not whether it is stored. The 0.12 documentation notes the configuration option `cache_size` but not the semi-colon behavior (in http://ipython.org/ipython-doc/rel-0.12/interactive/reference.html#output-caching-system)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5208003",
    "html_url": "https://github.com/ipython/ipython/issues/1623#issuecomment-5208003",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1623",
    "id": 5208003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDgwMDM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T20:31:04Z",
    "updated_at": "2012-04-18T20:31:04Z",
    "author_association": "MEMBER",
    "body": "In fact it is documented, although it doesn't mention memory use. I'll\npush a quick update to add to it.\n\nhttp://ipython.org/ipython-doc/rel-0.12/interactive/tips.html#suppress-output\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5208197",
    "html_url": "https://github.com/ipython/ipython/issues/1623#issuecomment-5208197",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1623",
    "id": 5208197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDgxOTc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T20:38:45Z",
    "updated_at": "2012-04-18T20:38:45Z",
    "author_association": "MEMBER",
    "body": "Added that detail in b2d5229dd746b8e215aef5e1320847d0677b37f8.\n"
  }
]
