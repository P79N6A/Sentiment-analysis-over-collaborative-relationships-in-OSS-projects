[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1938482",
    "html_url": "https://github.com/ipython/ipython/pull/745#issuecomment-1938482",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/745",
    "id": 1938482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mzg0ODI=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T02:34:53Z",
    "updated_at": "2011-08-30T02:34:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the fix, Min. I noticed this crash recently myself.\n\nThat said, this approach makes me a little leery. The Qt console (and no doubt other frontends as well) makes many different requests: for execution, history, tab completion, object info, etc. It seems painful to have check status and possibly retry the request under all these differences circumstances. I wonder if it possible to abstract at least some of this away, e.g. by having BaseFrontendMixin handle the retries automatically.\n\nThis is all somewhat vague. I will think about this some more and see if I can produce anything more substantial.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1938697",
    "html_url": "https://github.com/ipython/ipython/pull/745#issuecomment-1938697",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/745",
    "id": 1938697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mzg2OTc=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T03:09:15Z",
    "updated_at": "2011-08-30T03:09:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I have an implementation plan for more robust error handling. Since this will involve some refactoring, I think it's worth merging this now as an interim fix.\n"
  }
]
