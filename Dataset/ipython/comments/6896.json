[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62500201",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-62500201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 62500201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTAwMjAx",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T04:21:09Z",
    "updated_at": "2014-11-11T04:21:09Z",
    "author_association": "MEMBER",
    "body": "@minrk I don't have a great sense of how technically risky this feature is (I assume it is somewhat since you mention not wanting to merge it pre 3.0), but I would likely use this in for quantopian's notebook implementation, so :+1: for the feature concept at least.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62500543",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-62500543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 62500543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTAwNTQz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T04:27:01Z",
    "updated_at": "2014-11-11T04:27:01Z",
    "author_association": "MEMBER",
    "body": "I have a history of adding poorly thought-out features that scratch an itch, but ultimately end up a maintenance problem (`--script`, for example), so things like this make me nervous. That said, This seems pretty simple, and solves the same problem `--script` did in a more general way.\n\nOther ways to implement hooks:\n- scripts on-disk, such as git hooks\n- dispatched via an event system, like we do in core\n\nOf course, the scripts-on-disk convention could be implemented as a single Python function that finds and executes scripts based on the directory structure.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62501434",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-62501434",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 62501434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTAxNDM0",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T04:43:09Z",
    "updated_at": "2014-11-11T04:43:09Z",
    "author_association": "MEMBER",
    "body": "The specific problem this solves that's useful to us is the ability to save code but not output.  That makes storing notebooks for a large population of people (especially people working with large datasets) a lot less arduous.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62640950",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-62640950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 62640950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjQwOTUw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-11T23:25:50Z",
    "updated_at": "2014-11-11T23:25:50Z",
    "author_association": "MEMBER",
    "body": "I think the idea is reasonable, but it brings up a couple of questions:\n- There's no reason you couldn't have several independent hooks doing things on save, but the current interface only appears to allow one pre- and one post-save hook. I think the API in `IPython.core.events` can be used for this. Not sure how best to make it configurable, though.\n- We have kernel extensions and JS nbextensions; should we have notebook server extensions?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63475544",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-63475544",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 63475544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDc1NTQ0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T14:09:07Z",
    "updated_at": "2014-11-18T14:09:07Z",
    "author_association": "MEMBER",
    "body": "As long as this a stopgap I'm fine with only one hook as one can make a function that make several call in order if needed.\n\nBut I think the hook should not be assumed to mutate their argument. the pre_ one would return a model if I had to do it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63475582",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-63475582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 63475582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDc1NTgy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T14:09:23Z",
    "updated_at": "2014-11-18T14:09:23Z",
    "author_association": "MEMBER",
    "body": "And I kicked travis.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63556289",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-63556289",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 63556289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU2Mjg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T22:19:49Z",
    "updated_at": "2014-11-18T22:19:49Z",
    "author_association": "MEMBER",
    "body": "> There's no reason you couldn't have several independent hooks doing things on save\n\nThat's true. We could either allow chaining callbacks, or just require people to define one function that calls all their other functions. I don't think there's anything that can't actually be done if it's a Python function.\n\n>  I think the API in IPython.core.events can be used for this.\n\nI looked into that, and there are a some assumptions that tie the event system in core to InteractiveShell (mainly for traceback rendering, so not hard to remove), so we would have to refactor that code a little bit to be able to use it here. It does make it a bit harder to configure than just assigning a single function.\n\n> But I think the hook should not be assumed to mutate their argument. the pre_ one would return a model if I had to do it.\n\nI disagree, actually. I think if the hook is to modify the model, it should do it in-place. Some hooks might only notify external services, such as git, and have no effect on the model, so it seems a little odd to make them return the model unchanged.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63557241",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-63557241",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 63557241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU3MjQx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T22:26:00Z",
    "updated_at": "2014-11-18T22:26:00Z",
    "author_association": "MEMBER",
    "body": "> or just require people to define one function that calls all their other functions\n\nThis assumes that all the callbacks are being set up directly by the user; it would make it very awkward for extensions to use the hook as an integration point without interfering with each other. Since we don't yet have a notion of server extensions, however, it's somewhat moot, and when that is a possibility, I would just make these config settings add the assigned function to the callback system.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65871914",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-65871914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 65871914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODcxOTE0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-05T23:36:06Z",
    "updated_at": "2014-12-05T23:36:06Z",
    "author_association": "MEMBER",
    "body": "This PR is now based on #7118, but once that's in, I think it should be ready to go.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65934375",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-65934375",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 65934375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTM0Mzc1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-07T11:33:31Z",
    "updated_at": "2014-12-07T11:33:31Z",
    "author_association": "MEMBER",
    "body": "Need rebase. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65949580",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-65949580",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 65949580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTQ5NTgw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-07T19:20:59Z",
    "updated_at": "2014-12-07T19:20:59Z",
    "author_association": "MEMBER",
    "body": "rebased\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66707276",
    "html_url": "https://github.com/ipython/ipython/pull/6896#issuecomment-66707276",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6896",
    "id": 66707276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzA3Mjc2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T23:18:10Z",
    "updated_at": "2014-12-11T23:18:10Z",
    "author_association": "MEMBER",
    "body": "I'll merge this soon, unless someone wants to review further.\n"
  }
]
