[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5165710",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5165710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5165710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjU3MTA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T00:19:34Z",
    "updated_at": "2012-04-17T00:19:34Z",
    "author_association": "MEMBER",
    "body": "I should add that I have no way of unit-testing this, because it's simply up to checking that in various interactive use scenarios, the expected number of figures are displayed inline (it's easy to get spurious copies by mistake).  Since that's a purely visual check, that's what I did.\n\nAs provided by @dwf, here's a snippet that runs fine in `ipython --pylab` but raises the AttributeError in `ipython notebook --pylab=inline` (or `qtconsole`):\n\n``` python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nplt.ioff()                                                                      \nx = np.random.uniform(-5, 5, size=(100))\ny = np.random.uniform(-5, 5, size=(100))\nf = plt.figure()\nplt.scatter(x, y)\nplt.plot(y)\nf.show()\n```\n\nps - this _could_ in principle be unittested, but it would be a really tricky test to write involving a 2-process check of objects being sent over the messaging channels.  While it would be great to have machinery for such tests in the long run, that's a whole project by itself which I can't tackle right now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5183512",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5183512",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5183512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODM1MTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T19:21:57Z",
    "updated_at": "2012-04-17T19:21:57Z",
    "author_association": "MEMBER",
    "body": "@fperez - for things that cannot (or at least not easily) be unittested, @takluyver and I have been putting scripts in docs/examples/tests (actually, his is in examples/test_embed, which should probably be moved into docs/examples/tests), to at least ease reproduction.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5183560",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5183560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5183560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODM1NjA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T19:24:37Z",
    "updated_at": "2012-04-17T19:24:37Z",
    "author_association": "MEMBER",
    "body": "Good idea, I'll do that now...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5186788",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5186788",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5186788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODY3ODg=",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T21:42:32Z",
    "updated_at": "2012-04-17T21:42:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez Yep, it seems to do the job for me. (I should note that in the case I was using it, the stuff I wanted to see _was_ getting plotted, just after an annoying traceback.) Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5188834",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5188834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5188834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODg4MzQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T23:53:45Z",
    "updated_at": "2012-04-17T23:53:45Z",
    "author_association": "MEMBER",
    "body": "thanks for the info, @dwf.  Yes, it was getting shown because we still track that drawing happened and flush the drawing pipeline at the end of execution.  But this is the right fix for this problem, thanks for confirming.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5188874",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5188874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5188874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODg4NzQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-17T23:57:00Z",
    "updated_at": "2012-04-17T23:57:00Z",
    "author_association": "MEMBER",
    "body": "Ok, manual test pushed, thanks @minrk for the tip.  I didn't want to do the cleanup of @takluyver's directory here, but I agree we should merge those manual tests into a single dir and put up a notice in the dev guide about it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5205849",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5205849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5205849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDU4NDk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T18:50:21Z",
    "updated_at": "2012-04-18T18:50:21Z",
    "author_association": "MEMBER",
    "body": "I think this looks good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5207431",
    "html_url": "https://github.com/ipython/ipython/pull/1615#issuecomment-5207431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1615",
    "id": 5207431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDc0MzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T20:05:33Z",
    "updated_at": "2012-04-18T20:05:33Z",
    "author_association": "MEMBER",
    "body": "Great, thanks everyone for the review.  Merging now.\n"
  }
]
