[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58523382",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58523382",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58523382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTIzMzgy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T15:06:41Z",
    "updated_at": "2014-10-09T15:06:41Z",
    "author_association": "MEMBER",
    "body": "I haven't looked at the technical details, but yeah! Thanks for working on this :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58547754",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58547754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58547754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQ3NzU0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T17:41:24Z",
    "updated_at": "2014-10-09T17:41:42Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg you `/-/_/` in shortcut, how do you bind shortcuts to `_`??\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58548530",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58548530",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58548530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQ4NTMw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T17:46:28Z",
    "updated_at": "2014-10-09T17:46:28Z",
    "author_association": "MEMBER",
    "body": "Hmmm, not quite following your question. Can you elaborate?\n\nOn Thu, Oct 9, 2014 at 10:41 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> @ellisonbg https://github.com/ellisonbg you '/-/_/' in shortcut, how do\n> you bind shortcuts to `_`??\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6668#issuecomment-58547754.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58563102",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58563102",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58563102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTYzMTAy",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T19:21:26Z",
    "updated_at": "2014-10-09T19:21:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is awesome! Mostly looks good to me, except a few comments about when and where things get set in the environment object.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58685675",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58685675",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58685675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njg1Njc1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T17:11:50Z",
    "updated_at": "2014-10-10T17:11:50Z",
    "author_association": "MEMBER",
    "body": "Updated, still work in progress, double/multiple shortcut work, like binding `d,d`, or  `x,x,x` but no warning that they are incompat with single one, and do not handle varying letter. like `c,t,f` is not a valid shortcut.\n\nQuickhelp widow need to be highly rethought, e.g. it show `k-select previous cell` instead of `up` and `k` as the 2 action are now the same. There are still a lot to do for the implementation and abstraction to be clean.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58755356",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58755356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58755356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU1MzU2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T16:29:05Z",
    "updated_at": "2014-10-11T16:29:05Z",
    "author_association": "MEMBER",
    "body": "Stil work in progress, now support multi key shortcut. `i,d,d,q,d` and `i,d,k,f,a` are now valid shortcuts when in command mode. These sequences \"kinda\" work. Still need some edge cases cleanup to raise if a subsequence of one shadows another, and remove old code that still rely on the \"count\" handler. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58757019",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58757019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58757019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU3MDE5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T17:16:45Z",
    "updated_at": "2014-10-11T17:16:45Z",
    "author_association": "MEMBER",
    "body": "I am not sure what you mean by multimeter shortcuts, can you explain more?\n\nSent from my iPhone\n\n> On Oct 11, 2014, at 9:29 AM, Matthias Bussonnier notifications@github.com wrote:\n> \n> Stil work in progress, now support multi key shortcut. i,d,d,q,d and i,d,k,f,a are now valid shortcuts when in command mode. These sequences \"kinda\" work. Still need some edge cases cleanup to raise if a subsequence of one shadows another, and remove old code that still rely on the \"count\" handler.\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58757833",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58757833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58757833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU3ODMz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T17:40:58Z",
    "updated_at": "2014-10-11T17:40:58Z",
    "author_association": "MEMBER",
    "body": "> by multimeter shortcuts\n\nDid I miss type  ? I think I wanted to say multi-key.\nYou can do things like `i,i` : press i twice interrupt kernel. `m,a` press `m`, then press `a` add a markdown cell above. `f,o,r,a,t,c` (fuck off, run all the cells) if you press `f`, then `o`, then `r`.... it runs all the cells skipping exception. It does not yet support things like `Ctr-X, Ctrl-S` or a like, but it will probably be possible. The current way of writing shortcut is `-` for key that should be pressed at the same time, and `,` between each chunk of the sequence. `d` with a count of `2`can thus be written `d,d`, press `i` twice :`i,i`... etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58758166",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58758166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58758166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU4MTY2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T17:51:02Z",
    "updated_at": "2014-10-11T17:51:02Z",
    "author_association": "MEMBER",
    "body": "Ahh, OK. After seeing how the Bloomberg terminal works, I started to wonder\nif going in this type of direction was a good idea. But before we jump into\nthis, I think we should step back and ask some questions:\n- Do we want to go in this direction - it adds a lot of power, but also a\n  lot of hidden/modal state.\n- There are a number of ways of implementing a multikey command mode. We\n  should do a quick survey of the different approaches. Another option is to\n  have more of a full blown mini command line where you can type commands\n  such as \"dd 0-10\"\n- I feel like our existing keyboard shortcuts are less than optimal. I am\n  all for improving them, but I want to make sure that any changes we make\n  are aboslutely a clear improvement.\n\nWhat do other people think about this? @fperez @jdfreder @minrk @takluyver\n@jasongrout\n\nOn Sat, Oct 11, 2014 at 10:41 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> by multimeter shortcuts\n> \n> Did I miss type ? I think I wanted to say multi-key.\n> You can do things like i,i : press i twice interrupt kernel. m,a press m,\n> then press a add a markdown cell above. f,o,r,a,t,c (fuck off, run all\n> the cells) if you press f, then o, then r.... it runs all the cells\n> skipping exception. It does not yet support things like Ctr-X, Ctrl-S or\n> a like, but it will probably be possible. The current way of writing\n> shortcut is - for key that should be pressed at the same time, and ,\n> between each chunk of the sequence. d with a count of 2can thus be\n> written d,d, press i twice :i,i... etc.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6668#issuecomment-58757833.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58758917",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58758917",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58758917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU4OTE3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T18:13:52Z",
    "updated_at": "2014-10-11T18:13:52Z",
    "author_association": "MEMBER",
    "body": "I'll go to the simpler implementation, \nWhich in the end will be simpler than the count handler. The mini language is out of scope, but your count handler implementation has a leaky abstraction where the action taken had to carry the information of the number of time the key have to be pressed. While the action should not know about the shortcut. Keeping the \"count\" handler is hard for me as I need to keep the logic that check that the same shortcut is press twice. Now you should get only one path for all the handler.\n\nGeneralizing the logic had the side effect of adding virtually infinite depth shortcut, but I don't expect to use them. \n\nThe internal state is not much higher, instead of  remembering the previously press key and the number of time it was pressed, it remembers a stack of pressed keys... \n\n## \n\nM\nEnvoyÃ© de mon iPhone\n\n> Le 11 oct. 2014 Ã  19:51, \"Brian E. Granger\" notifications@github.com a Ã©crit :\n> \n> Ahh, OK. After seeing how the Bloomberg terminal works, I started to wonder \n> if going in this type of direction was a good idea. But before we jump into \n> this, I think we should step back and ask some questions: \n> - Do we want to go in this direction - it adds a lot of power, but also a \n>   lot of hidden/modal state. \n> - There are a number of ways of implementing a multikey command mode. We \n>   should do a quick survey of the different approaches. Another option is to \n>   have more of a full blown mini command line where you can type commands \n>   such as \"dd 0-10\" \n> - I feel like our existing keyboard shortcuts are less than optimal. I am \n>   all for improving them, but I want to make sure that any changes we make \n>   are aboslutely a clear improvement. \n> \n> What do other people think about this? @fperez @jdfreder @minrk @takluyver \n> @jasongrout \n> \n> On Sat, Oct 11, 2014 at 10:41 AM, Matthias Bussonnier < \n> notifications@github.com> wrote: \n> \n> > by multimeter shortcuts \n> > \n> > Did I miss type ? I think I wanted to say multi-key. \n> > You can do things like i,i : press i twice interrupt kernel. m,a press m, \n> > then press a add a markdown cell above. f,o,r,a,t,c (fuck off, run all \n> > the cells) if you press f, then o, then r.... it runs all the cells \n> > skipping exception. It does not yet support things like Ctr-X, Ctrl-S or \n> > a like, but it will probably be possible. The current way of writing \n> > shortcut is - for key that should be pressed at the same time, and , \n> > between each chunk of the sequence. d with a count of 2can thus be \n> > written d,d, press i twice :i,i... etc. \n> > \n> > â€” \n> > Reply to this email directly or view it on GitHub \n> > https://github.com/ipython/ipython/pull/6668#issuecomment-58757833. \n> \n> ## \n> \n> Brian E. Granger \n> Cal Poly State University, San Luis Obispo \n> @ellisonbg on Twitter and GitHub \n> bgranger@calpoly.edu and ellisonbg@gmail.com\n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58759770",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58759770",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58759770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU5Nzcw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T18:39:39Z",
    "updated_at": "2014-10-11T18:39:39Z",
    "author_association": "MEMBER",
    "body": "Ok\n\nIs it timeout based?\nHow does a user abort a partially typed multikey shortcut?\n\nSent from my iPhone\n\n> On Oct 11, 2014, at 11:14 AM, Matthias Bussonnier notifications@github.com wrote:\n> \n> I'll go to the simpler implementation, \n> Which in the end will be simpler than the count handler. The mini language is out of scope, but your count handler implementation has a leaky abstraction where the action taken had to carry the information of the number of time the key have to be pressed. While the action should not know about the shortcut. Keeping the \"count\" handler is hard for me as I need to keep the logic that check that the same shortcut is press twice. Now you should get only one path for all the handler. \n> \n> Generalizing the logic had the side effect of adding virtually infinite depth shortcut, but I don't expect to use them. \n> \n> The internal state is not much higher, instead of remembering the previously press key and the number of time it was pressed, it remembers a stack of pressed keys... \n> \n> ## \n> \n> M \n> EnvoyÃ© de mon iPhone \n> \n> > Le 11 oct. 2014 Ã  19:51, \"Brian E. Granger\" notifications@github.com a Ã©crit : \n> > \n> > Ahh, OK. After seeing how the Bloomberg terminal works, I started to wonder \n> > if going in this type of direction was a good idea. But before we jump into \n> > this, I think we should step back and ask some questions: \n> > - Do we want to go in this direction - it adds a lot of power, but also a \n> >   lot of hidden/modal state. \n> > - There are a number of ways of implementing a multikey command mode. We \n> >   should do a quick survey of the different approaches. Another option is to \n> >   have more of a full blown mini command line where you can type commands \n> >   such as \"dd 0-10\" \n> > - I feel like our existing keyboard shortcuts are less than optimal. I am  \n> >   all for improving them, but I want to make sure that any changes we make \n> >   are aboslutely a clear improvement. \n> > \n> > What do other people think about this? @fperez @jdfreder @minrk @takluyver \n> > @jasongrout \n> > \n> > On Sat, Oct 11, 2014 at 10:41 AM, Matthias Bussonnier < \n> > notifications@github.com> wrote: \n> > \n> > > by multimeter shortcuts \n> > > \n> > > Did I miss type ? I think I wanted to say multi-key. \n> > > You can do things like i,i : press i twice interrupt kernel. m,a press m, \n> > > then press a add a markdown cell above. f,o,r,a,t,c (fuck off, run all  \n> > > the cells) if you press f, then o, then r.... it runs all the cells \n> > > skipping exception. It does not yet support things like Ctr-X, Ctrl-S or \n> > > a like, but it will probably be possible. The current way of writing \n> > > shortcut is - for key that should be pressed at the same time, and , \n> > > between each chunk of the sequence. d with a count of 2can thus be \n> > > written d,d, press i twice :i,i... etc. \n> > > \n> > > â€” \n> > > Reply to this email directly or view it on GitHub \n> > > https://github.com/ipython/ipython/pull/6668#issuecomment-58757833. \n> > \n> > ## \n> > \n> > Brian E. Granger \n> > Cal Poly State University, San Luis Obispo \n> > @ellisonbg on Twitter and GitHub \n> > bgranger@calpoly.edu and ellisonbg@gmail.com \n> > â€” \n> > Reply to this email directly or view it on GitHub.\n> > â€”\n> > Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58759937",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58759937",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58759937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU5OTM3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T18:44:33Z",
    "updated_at": "2014-10-11T18:44:33Z",
    "author_association": "MEMBER",
    "body": "> Is it timeout based?\n\nI will cancel the queue after a timeout (not done yet), we can easily bind escape to (also) abort the queue. \n\nRight now, the queue also reset as soon as one sequence do not match anything. As none of our defined sequence terminate with Esc, pressing escape does already bring you back to empty queue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58764208",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58764208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58764208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzY0MjA4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T20:54:57Z",
    "updated_at": "2014-10-11T20:54:57Z",
    "author_association": "MEMBER",
    "body": "> full blown mini command line where you can type commands\n> such as \"dd 0-10\"\n\n-1 for a mini command line that is used to interact with the document.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58766948",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58766948",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58766948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzY2OTQ4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-11T22:32:31Z",
    "updated_at": "2014-10-11T22:32:31Z",
    "author_association": "MEMBER",
    "body": "I should have clarified - I am probably also -1 on the mini command line.\nBUT...I am worried that we will start to introduce more multi-key shortcuts\nand end up there anyways. For example, why not have `a,m` and `a,y` insert\na new markdown and code cell above? It sounds like you code is a solid\nimprovement over my old stuff, I am just worried about the slippery slope\nit maybe introduces.\n\nOn Sat, Oct 11, 2014 at 1:55 PM, Jonathan Frederic <notifications@github.com\n\n> wrote:\n> \n> full blown mini command line where you can type commands\n> such as \"dd 0-10\"\n> \n> -1 for a mini command line that is used to interact with the document.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6668#issuecomment-58764208.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58773230",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58773230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58773230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzczMjMw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T04:31:51Z",
    "updated_at": "2014-10-12T04:31:51Z",
    "author_association": "MEMBER",
    "body": "OK I left a bunch of comments about action names. Because these will be come part of our public API, we need to think a bit more about the naming of these. Right now the names have a ton of inconsistencies (so do the methods). Here is what I recommend to help:\n- List the existing shortcut hames and method names in the hackpad in one place.\n- Let's go through them and come up with a simple \"naming algorithm\" we can apply now and in the future so we end up with consistent names.\n- This should address things like:\n  - Do we name the object (cell, notebook) the action applies to?\n  - Do we always give the verb (move, delete)?\n  - Do we mention that the action is applied to the current or selected cell?\n  - Do we can it next/prev or above/below?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58780709",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58780709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58780709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzgwNzA5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T09:18:16Z",
    "updated_at": "2014-10-12T09:18:16Z",
    "author_association": "MEMBER",
    "body": "> Because these will be come part of our public API, we need to think a bit more about the naming of these.\n\nAgreed, but I disagree with most of your comment to make name shorter. \n\n> Let's go through them and come up with a simple \"naming algorithm\" we can apply now and in the future so we end up with consistent names.\n\nSeems good.\n\n> This should address things like:\n> Do we name the object (cell, notebook) the action applies to?\n\nYes, always, this is API, yo only type it once or twice, better be explicit so that we can add things later.\n\n> Do we always give the verb (move, delete)?\n\nYes always. \n\n> Do we mention that the action is applied to the current or selected cell?\n\nYes, especially since we want to add sections/multi-selction. we need to distinguish `collapse-cell` from `collapse-cells` from `collapse-sections`.\n\n> Do we can it next/prev or above/below?\n\n`next/prev`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58824025",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-58824025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 58824025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODI0MDI1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T21:59:11Z",
    "updated_at": "2014-10-12T21:59:11Z",
    "author_association": "MEMBER",
    "body": "I am fine with longer names as long as they are use a consistent naming\nalgorithm. There are a few places where I think the names maybe too long,\nbut let's just collect all the actions+method names together and have a\nlook at them as a whole.\n\nYou have a good point about multiple selection - maybe we should look at\nPaul's draft implementation of that to see what types of actions are needed.\n\nThanks for working on this.\n\nOn Sun, Oct 12, 2014 at 2:18 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Because these will be come part of our public API, we need to think a bit\n> more about the naming of these.\n> \n> Agreed, but I disagree with most of your comment to make name shorter.\n> \n> Let's go through them and come up with a simple \"naming algorithm\" we can\n> apply now and in the future so we end up with consistent names.\n> \n> Seems good.\n> \n> This should address things like:\n> Do we name the object (cell, notebook) the action applies to?\n> \n> Yes, always, this is API, yo only type it once or twice, better be\n> explicit so that we can add things later.\n> \n> Do we always give the verb (move, delete)?\n> \n> Yes always.\n> \n> Do we mention that the action is applied to the current or selected cell?\n> \n> Yes, especially since we want to add sections/multi-selction. we need to\n> distinguish collapse-cell from collapse-cells from collapse-sections.\n> \n> Do we can it next/prev or above/below?\n> \n> next/prev\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6668#issuecomment-58780709.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59006384",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59006384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59006384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDA2Mzg0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T08:23:50Z",
    "updated_at": "2014-10-14T08:23:50Z",
    "author_association": "MEMBER",
    "body": "Need rebase\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59027688",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59027688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59027688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDI3Njg4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T11:23:54Z",
    "updated_at": "2014-10-14T11:23:54Z",
    "author_association": "MEMBER",
    "body": "Rebased on top of master. It start to get close of the +1k lines, I'm worried about the ability to do reviews if I grow it more. \n\nShould I target a Pull Request which is still reviewable, but still have somme rubber-bands that would be cleaned up afterwards ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59030539",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59030539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59030539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDMwNTM5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T11:53:08Z",
    "updated_at": "2014-10-14T11:53:08Z",
    "author_association": "MEMBER",
    "body": "> Should I target a Pull Request which is still reviewable, but still have somme rubber-bands that would be cleaned up afterwards ?\n\nI would say yes... big PRs are painful to review. Once you have something solid/stable, later you can iterate over it with upcoming PRs. I have a nice experience with this methodology...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59073902",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59073902",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59073902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDczOTAy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T16:25:40Z",
    "updated_at": "2014-10-14T16:25:40Z",
    "author_association": "MEMBER",
    "body": "I think it is great to split big PRs into multiple pieces. Smaller is simpler to review for sure. Do you see a way to split this PR into multiple PRs that fully implement a particular part of the functionality? I am -1 on merging PRs without review just because they are big. Overall 1k lines is pretty small for us.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59084133",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59084133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59084133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDg0MTMz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T17:30:39Z",
    "updated_at": "2014-10-14T17:30:39Z",
    "author_association": "MEMBER",
    "body": "> Do you see a way to split this PR into multiple PRs that fully implement a particular part of the functionality?\n\nI can do `N` (N~4) PR that implement ~90% of each functionality. But I doubt each can be perfect, I'll probably have some edge cases when working on the functionality. \nRoughly : \n- Polish keyboard/actions\n- Make toolbar use actions.\n- Make Menus use action. \n- Polish the integration between the 3.\n\nHow does that sound ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59094361",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59094361",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59094361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDk0MzYx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T18:37:03Z",
    "updated_at": "2014-10-14T18:37:03Z",
    "author_association": "MEMBER",
    "body": "+1\n\nSent from my iPhone\n\n> On Oct 14, 2014, at 1:30 PM, Matthias Bussonnier notifications@github.com wrote:\n> \n> Do you see a way to split this PR into multiple PRs that fully implement a particular part of the functionality?\n> \n> I can do N (N~4) PR that implement ~90% of each functionality. But I doubt each can be perfect, I'll probably have some edge cases when working on the functionality. \n> Roughly :\n> \n> Polish keyboard/actions\n> Make toolbar use actions.\n> Make Menus use action.\n> Polish the integration between the 3.\n> How does that sound ?\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59099405",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59099405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59099405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDk5NDA1",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T19:10:36Z",
    "updated_at": "2014-10-14T19:10:36Z",
    "author_association": "MEMBER",
    "body": "> How does that sound ?\n\nYep, sounds good...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59176448",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59176448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59176448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTc2NDQ4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T08:57:35Z",
    "updated_at": "2014-10-15T08:57:35Z",
    "author_association": "MEMBER",
    "body": "Ok, I cleaned most of what is not shortcut related. \n\n@ellisonbg will be happy, documentation is after function definition. \n\nCan we not fight on the names of actions now, but discussed about that later ? I know it will be controversial and take some time to get right.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59177027",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59177027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59177027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTc3MDI3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T09:02:50Z",
    "updated_at": "2014-10-15T09:02:50Z",
    "author_association": "MEMBER",
    "body": "And to get angry on action name, there is the hackpad ! : https://ipython.hackpad.com/Notebook-actions-Names-MXVvot9hyIf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59177866",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-59177866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 59177866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTc3ODY2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T09:10:23Z",
    "updated_at": "2014-10-15T09:10:23Z",
    "author_association": "MEMBER",
    "body": "Note that I don't understand the test failures. I tried manually and I do get the expected results.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60477075",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-60477075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 60477075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDc3MDc1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T09:28:37Z",
    "updated_at": "2014-10-25T09:28:37Z",
    "author_association": "MEMBER",
    "body": "Someone ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61260006",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-61260006",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 61260006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjYwMDA2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T13:32:28Z",
    "updated_at": "2014-10-31T13:32:28Z",
    "author_association": "MEMBER",
    "body": "Bump.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61336338",
    "html_url": "https://github.com/ipython/ipython/pull/6668#issuecomment-61336338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6668",
    "id": 61336338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzM2MzM4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T21:50:11Z",
    "updated_at": "2014-10-31T21:50:11Z",
    "author_association": "MEMBER",
    "body": "Did we have a discussion about normalizing the naming scheme for actions\nand methods? What was the result of that discussion?\n\nOn Fri, Oct 31, 2014 at 6:32 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Bump.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6668#issuecomment-61260006.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
