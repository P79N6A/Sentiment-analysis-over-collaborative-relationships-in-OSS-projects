[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684055",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1684055",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1684055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQwNTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T19:44:45Z",
    "updated_at": "2011-07-29T19:44:45Z",
    "author_association": "MEMBER",
    "body": "Yes I love it!  This looks absolutely fantastic.  I will merge this and also throw the YouTubeVideo example in the examples directory.  My only question is if we want to start to put useful object like your YouTubeVideo class in IPython so others can use them.  Maybe in lib?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684108",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1684108",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1684108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQxMDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T19:51:07Z",
    "updated_at": "2011-07-29T19:51:07Z",
    "author_association": "MEMBER",
    "body": "It's such trivial code that I don't think it belongs in lib, but probably does belong in docs when we write them. Maybe if we write a small tool that is more general - supporting youtube, vimeo, etc.\n\nA RawHTML object might be more useful, so that people can dump arbitrary HTML into the frontend.  Something like:\n\n``` python\n\nclass RawHTML(object):\n    def __init__(self, src):\n        self.src = src\n\n    def _repr_html_(self):\n        return self.src\n\n    def draw(self):\n        from IPython.core.display import display\n        display(self)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684360",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1684360",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1684360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQzNjA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T20:05:49Z",
    "updated_at": "2011-07-29T20:05:49Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jul 29, 2011 at 12:51 PM, minrk\nreply@reply.github.com\nwrote:\n\n> It's such trivial code that I don't think it belongs in lib, but probably does belong in docs when we write them. Maybe if we write a small tool that is more general - supporting youtube, vimeo, etc.\n\nBut think about very intro users who could easily find the id of a\nYouTubeVideo, but wouldn't have a clue about how to find the HTML for\nembedding.  I was just looking at soundcloud to see if we could create\nan MP3 object that 1) could embed a player with display and 2) use\npyaudio or similar to provide the raw audio data as a numpy array.\nFor audio work that would be killer.\n\n> A RawHTML object might be more useful, so that people can dump arbitrary HTML into the frontend.  Something like:\n\nI do like this idea.  We could also have other basic things like\nRawJSON, RawLatex, RawJavascript in lib as well.\n\n> ``` python\n> \n> class RawHTML(object):\n>    def __init__(self, src):\n>        self.src = src\n> \n>    def _repr_html_(self):\n>        return self.src\n> \n>    def draw(self):\n>        from IPython.core.display import display\n>        display(self)\n> ```\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/635#issuecomment-1684108\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684650",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1684650",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1684650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQ2NTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T20:37:33Z",
    "updated_at": "2011-07-29T20:37:33Z",
    "author_association": "MEMBER",
    "body": "That makes sense.  We should probably start a lib/web for working with various websites, etc.\n\nIs there a functional (not class-based) way to draw raw HTML/JSON/etc?  I quite dislike having a class that wraps a single raw string for use in a single method, but I don't know a simpler way.\n\nThere should be something like display_raw_html(htmlstring) that does the most basic construction/publishing of the message, without any type-formatters being called.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684943",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1684943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1684943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQ5NDM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T20:56:01Z",
    "updated_at": "2011-07-29T20:56:01Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jul 29, 2011 at 1:37 PM, minrk\nreply@reply.github.com\nwrote:\n\n> That makes sense.  We should probably start a lib/web for working with various websites, etc.\n> \n> Is there a functional (not class-based) way to draw raw HTML/JSON/etc?  I quite dislike having a class that wraps a single raw string for use in a single method, but I don't know a simpler way.\n\nNot yet, but we should have such a function.\n\n> There should be something like display_raw_html(htmlstring) that does the most basic construction/publishing of the message, without any type-formatters being called.\n\nYes and these functions could just call put the string in a\nRawHTML/RawJSON class and return it.\n\nCheers,\n\nBrian\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/635#issuecomment-1684650\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1684985",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1684985",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1684985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQ5ODU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T21:02:15Z",
    "updated_at": "2011-07-29T21:02:15Z",
    "author_association": "MEMBER",
    "body": "I disagree with the last point - if we have the function, the RawX classes are entirely pointless.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1685045",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1685045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1685045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUwNDU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T21:11:07Z",
    "updated_at": "2011-07-29T21:11:07Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jul 29, 2011 at 2:02 PM, minrk\nreply@reply.github.com\nwrote:\n\n> I disagree with the last point - if we have the function, the RawX classes are entirely pointless.\n\nNot entirely.  The functions would render immediately, the classes not\nuntil display was called or they are returned by the displayhook.  The\nclasses would allow HTML to be constructed but not rendered until\nlater, which could be quite useful.  For example, you might have a set\nof objects that each have a RawHTML object.  You may want to combine\nthose in some manner before the final display.  The objects could also\nprovide additional APIs for working with the formats.  Fro example,\nyou might want methods of RawHTML to convert between the ElementTree\nand plain HTMl text representations of the data.\n\nBut if we want to implement the functions to not have to rely on the\nclasses, that can be done.  We are _almost_ there already in the\npublish_display_data function of IPython.core.displaypub.  Any such\nfunctions should probably be added in that module.\n\nCheers,\n\nBrian\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/635#issuecomment-1684985\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1685206",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1685206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1685206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUyMDY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T21:18:22Z",
    "updated_at": "2011-07-29T21:18:22Z",
    "author_association": "MEMBER",
    "body": "There could certainly be a use for a more advanced class for containing HTML, but `display_raw_html(html_string)` should _not_ instantiate or return a class of any kind, and a purely basic RawHTML class like the one I sketched above would be perfectly useless once the raw display function exists.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1685390",
    "html_url": "https://github.com/ipython/ipython/pull/635#issuecomment-1685390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/635",
    "id": 1685390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUzOTA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-29T21:36:43Z",
    "updated_at": "2011-07-29T21:36:43Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jul 29, 2011 at 2:18 PM, minrk\nreply@reply.github.com\nwrote:\n\n> There could certainly be a use for a more advanced class for containing HTML, but `display_raw_html(html_string)` should _not_ instantiate or return a class of any kind, and a purely basic RawHTML class like the one I sketched above would be perfectly useless once the raw display function exists.\n\nSounds good.\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/635#issuecomment-1685206\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
