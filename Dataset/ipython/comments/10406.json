[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/289237704",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-289237704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 289237704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTIzNzcwNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-25T20:32:26Z",
    "updated_at": "2017-03-25T20:32:26Z",
    "author_association": "MEMBER",
    "body": "Possibly we should use `patch_stdout_context` for the whole time that the prompt_toolkit interface runs. I don't know if that has any adverse effects, though."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/289293624",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-289293624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 289293624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTI5MzYyNA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-26T16:04:47Z",
    "updated_at": "2017-03-26T16:04:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, this is indeed a consequence of the terminal flags that are set by prompt_toolkit.\r\n\r\nUsing ``patch_stdout_context`` does indeed solve this, but it's important to set this as soon as possible, because this replaces ``sys.stdout`` by a proxy object. It needs to be set as early as possible, because every import of ``sys`` that was done before patching stdout will still refer to the original object. The disadvantage is of course the monkey patch. ``sys.stdout`` won't refer to the real output.\r\n\r\n\r\nA better, but much more complex solution I can think of is by using ``os.openpty()`` to create a new pty, then use ``os.dup2`` and fiddle with the file descriptors to make sure that ``prompt_toolkit`` writes to the original stdout, while all stdout objects will point to a proxy object while the interface is visible. This would need a reader for the PTY master FD in the event loop. It is a solution that would work on Posix systems. (Mac+Linux.) But this is something I prefer to implement in prompt_toolkit itself.\r\n\r\nCan somebody please create a feature request in prompt_toolkit for this? I think I can include this at least in the 2.0 branch.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/312306470",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-312306470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 312306470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjMwNjQ3MA==",
    "user": {
      "login": "ngg",
      "id": 550654,
      "node_id": "MDQ6VXNlcjU1MDY1NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/550654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngg",
      "html_url": "https://github.com/ngg",
      "followers_url": "https://api.github.com/users/ngg/followers",
      "following_url": "https://api.github.com/users/ngg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngg/subscriptions",
      "organizations_url": "https://api.github.com/users/ngg/orgs",
      "repos_url": "https://api.github.com/users/ngg/repos",
      "events_url": "https://api.github.com/users/ngg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T15:59:59Z",
    "updated_at": "2017-06-30T16:23:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi! I have this same issue, and I tried to use `patch_stdout_context` but it doesn't seem to work for me.\r\n\r\nI'm using IPython 5.4.1 (python2.7), I have inserted it into the `prompt_for_code` function in `TerminalInteractiveShell`. It definitely helps, now the prompt is working great when there is output from background threads. However the lines are still truncated.\r\n\r\nEdit:\r\nI could find an ugly workaround that's ok for me.\r\nFrom the background thread I simply prefix each print with '\\x1b[?7h' and that enables linewrapping."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/312436517",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-312436517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 312436517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQzNjUxNw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-01T14:56:02Z",
    "updated_at": "2017-07-01T14:56:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just coming back to this issue. ``patch_stdout_context`` would not be required. I could change it this way that it disables autowrap right before rendering and enables it again when done. Personally, I think that's more clean than patching ``sys.stdout``. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/312437752",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-312437752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 312437752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQzNzc1Mg==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-01T15:18:26Z",
    "updated_at": "2017-07-01T15:18:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "See https://github.com/jonathanslenders/python-prompt-toolkit/pull/520\r\nThis pull request should enable line wrapping for background threads. Could you please test whether it works? I think it's a clearer solution than patching stdout."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/321111031",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-321111031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 321111031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTExMTAzMQ==",
    "user": {
      "login": "vincentwoo",
      "id": 613320,
      "node_id": "MDQ6VXNlcjYxMzMyMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/613320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincentwoo",
      "html_url": "https://github.com/vincentwoo",
      "followers_url": "https://api.github.com/users/vincentwoo/followers",
      "following_url": "https://api.github.com/users/vincentwoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincentwoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincentwoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincentwoo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincentwoo/orgs",
      "repos_url": "https://api.github.com/users/vincentwoo/repos",
      "events_url": "https://api.github.com/users/vincentwoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincentwoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T23:37:12Z",
    "updated_at": "2017-08-08T23:37:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe there is a similar problem when ipython is run in interactive mode (`ipython -i filename.py`): the terminal stream of output produced by `filename.py` doesn't appear to have line breaks."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/321113107",
    "html_url": "https://github.com/ipython/ipython/issues/10406#issuecomment-321113107",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10406",
    "id": 321113107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTExMzEwNw==",
    "user": {
      "login": "vincentwoo",
      "id": 613320,
      "node_id": "MDQ6VXNlcjYxMzMyMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/613320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincentwoo",
      "html_url": "https://github.com/vincentwoo",
      "followers_url": "https://api.github.com/users/vincentwoo/followers",
      "following_url": "https://api.github.com/users/vincentwoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincentwoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincentwoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincentwoo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincentwoo/orgs",
      "repos_url": "https://api.github.com/users/vincentwoo/repos",
      "events_url": "https://api.github.com/users/vincentwoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincentwoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T23:50:36Z",
    "updated_at": "2017-08-08T23:50:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, I think the problem was that ipython doesn't understand that it is in a shell when run with `exec ipython` as opposed being a child process of a shell command."
  }
]
