[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9866648",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9866648",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9866648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4NjY2NDg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-29T13:47:33Z",
    "updated_at": "2012-10-29T13:47:33Z",
    "author_association": "MEMBER",
    "body": "looks ok to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9880187",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9880187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9880187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODAxODc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-29T18:35:19Z",
    "updated_at": "2012-10-29T18:35:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks okay.\n\nSome nitpicky comments.\n1. `datetime` is imported but not used.\n2. Why require a `timedelta` object instead of just an integer number of seconds.  I'd prefer the logic as\n\n``` python\ndisplay(YouTubeVideo(\"abc\", start=6423))\n```\n\nThis is also preferable since [start](https://developers.google.com/youtube/player_parameters#start) is supposed to be an integer (but `.total_seconds()` will return a float).\n1. Perhaps the function parameter default should be `None` and we should only write out the `?start=` if `start is not None`.\n\nWe can suggest in the docstring that `int(timedelta(...).total_seconds())` can be used to get an integer amount of time, if necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9882493",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9882493",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9882493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODI0OTM=",
    "user": {
      "login": "dannystaple",
      "id": 426859,
      "node_id": "MDQ6VXNlcjQyNjg1OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/426859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dannystaple",
      "html_url": "https://github.com/dannystaple",
      "followers_url": "https://api.github.com/users/dannystaple/followers",
      "following_url": "https://api.github.com/users/dannystaple/following{/other_user}",
      "gists_url": "https://api.github.com/users/dannystaple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dannystaple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dannystaple/subscriptions",
      "organizations_url": "https://api.github.com/users/dannystaple/orgs",
      "repos_url": "https://api.github.com/users/dannystaple/repos",
      "events_url": "https://api.github.com/users/dannystaple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dannystaple/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-29T19:41:47Z",
    "updated_at": "2012-10-29T19:41:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "On 1 - Ah - yes, I'd left in the`datetime` import as I was considering doing something more clever by parsing the string \"1:47:31\" -  but decided against it - I should clean that up. \n\nYour comments have lead me to thinking I was about to make this class too clever and do too much.\n\nI've been thinking about this more now - considering that the original code currently (and this isn't guaranteed compatibility later) passes the provided video hash as the end of the string, and isn't fussy about what is in it, you could do the following:\n\n```\nfrom datetime import timedelta\nfrom IPython.display import YouTubeVideo\nYouTubeVideo(\"Pi9NpxAvYSs?start=%d\" % \n                        int(timedelta(hours=1, minutes=46, seconds=40).total_seconds()))\n```\n\nHowever, the caveat is already there - if that code changed, the embedding of the start param in the hash would break.\n\nThinking about this another way, perhaps one way to do this would be that kwargs to YouTubeVideo are converted (urllib.urlencode perhaps?) and used - this way, any of these Youtube player parameters could be used - this does mean it would simply be an int as you suggested, but also that others would be possible too. Start is just then one of many. The docstring can then refer to the google doc's link for other possible args.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9882900",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9882900",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9882900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODI5MDA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-29T19:53:48Z",
    "updated_at": "2012-10-29T19:53:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, converting `**kw` to `'?' + urllib.urlencode(kw)` would be a slick trick. @Carreau what do you think of that idea?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9921906",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9921906",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9921906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjE5MDY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T20:40:31Z",
    "updated_at": "2012-10-30T20:40:31Z",
    "author_association": "MEMBER",
    "body": "The **kw stuff is a good idea. \nAlso i think having the `int(timedelta(hours=1, minutes=46, seconds=40).total_seconds())` example in the docstring is nice.\n\nThough, it looks like `self.start` does not exist (and should be casted to an int) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9921948",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9921948",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9921948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjE5NDg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T20:41:38Z",
    "updated_at": "2012-10-30T20:41:38Z",
    "author_association": "MEMBER",
    "body": "also `self.params = **kwargs` is not valid.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9925337",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-9925337",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 9925337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjUzMzc=",
    "user": {
      "login": "dannystaple",
      "id": 426859,
      "node_id": "MDQ6VXNlcjQyNjg1OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/426859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dannystaple",
      "html_url": "https://github.com/dannystaple",
      "followers_url": "https://api.github.com/users/dannystaple/followers",
      "following_url": "https://api.github.com/users/dannystaple/following{/other_user}",
      "gists_url": "https://api.github.com/users/dannystaple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dannystaple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dannystaple/subscriptions",
      "organizations_url": "https://api.github.com/users/dannystaple/orgs",
      "repos_url": "https://api.github.com/users/dannystaple/repos",
      "events_url": "https://api.github.com/users/dannystaple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dannystaple/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T22:25:53Z",
    "updated_at": "2012-10-30T22:25:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "That is what I get for editing directly in github and not pylinting/testing back here. Let me just work this out properly - and post an edit that would actually work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10023985",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-10023985",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 10023985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDIzOTg1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T18:17:31Z",
    "updated_at": "2012-11-02T18:17:31Z",
    "author_association": "MEMBER",
    "body": "Looks good to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10028710",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-10028710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 10028710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDI4NzEw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T20:13:51Z",
    "updated_at": "2012-11-02T20:13:51Z",
    "author_association": "MEMBER",
    "body": "Will we achieve <30 open PR before the end of the Week-end ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10033682",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-10033682",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 10033682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDMzNjgy",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-02T23:41:26Z",
    "updated_at": "2012-11-02T23:41:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17219872",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-17219872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 17219872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjE5ODcy",
    "user": {
      "login": "pleabargain",
      "id": 640846,
      "node_id": "MDQ6VXNlcjY0MDg0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/640846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pleabargain",
      "html_url": "https://github.com/pleabargain",
      "followers_url": "https://api.github.com/users/pleabargain/followers",
      "following_url": "https://api.github.com/users/pleabargain/following{/other_user}",
      "gists_url": "https://api.github.com/users/pleabargain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pleabargain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pleabargain/subscriptions",
      "organizations_url": "https://api.github.com/users/pleabargain/orgs",
      "repos_url": "https://api.github.com/users/pleabargain/repos",
      "events_url": "https://api.github.com/users/pleabargain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pleabargain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T10:31:22Z",
    "updated_at": "2013-04-30T10:31:22Z",
    "author_association": "NONE",
    "body": "I've tried many variations on the above code \nhere's my ipynb file\nhttp://pastebin.com/n57jaf0N\n\nNone of the variations work.\nI'm running ipython dev.\n\nShould I post a bug?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17221730",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-17221730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 17221730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjIxNzMw",
    "user": {
      "login": "dannystaple",
      "id": 426859,
      "node_id": "MDQ6VXNlcjQyNjg1OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/426859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dannystaple",
      "html_url": "https://github.com/dannystaple",
      "followers_url": "https://api.github.com/users/dannystaple/followers",
      "following_url": "https://api.github.com/users/dannystaple/following{/other_user}",
      "gists_url": "https://api.github.com/users/dannystaple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dannystaple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dannystaple/subscriptions",
      "organizations_url": "https://api.github.com/users/dannystaple/orgs",
      "repos_url": "https://api.github.com/users/dannystaple/repos",
      "events_url": "https://api.github.com/users/dannystaple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dannystaple/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T11:25:30Z",
    "updated_at": "2013-04-30T11:25:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm getting an \"unknown paste id\" for that pastebin url...\n\nOn 30 April 2013 11:31, Dennis notifications@github.com wrote:\n\n> I've tried many variations on the above code\n> here's my ipynb file\n> http://pastebin.com/n57jaf0N\n> \n> None of the variations work.\n> I'm running ipython dev.\n> \n> Should I post a bug?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2530#issuecomment-17219872\n> .\n\n## \n\nDanny Staple\n\nDirector, ODM Solutions Ltd\nw: http://www.odmsolutions.co.uk\nBlog: http://orionrobots.co.uk/blog1-Danny-Staple\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17228919",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-17228919",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 17228919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI4OTE5",
    "user": {
      "login": "pleabargain",
      "id": 640846,
      "node_id": "MDQ6VXNlcjY0MDg0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/640846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pleabargain",
      "html_url": "https://github.com/pleabargain",
      "followers_url": "https://api.github.com/users/pleabargain/followers",
      "following_url": "https://api.github.com/users/pleabargain/following{/other_user}",
      "gists_url": "https://api.github.com/users/pleabargain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pleabargain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pleabargain/subscriptions",
      "organizations_url": "https://api.github.com/users/pleabargain/orgs",
      "repos_url": "https://api.github.com/users/pleabargain/repos",
      "events_url": "https://api.github.com/users/pleabargain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pleabargain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T14:04:04Z",
    "updated_at": "2013-04-30T14:04:04Z",
    "author_association": "NONE",
    "body": "@dannystaple Yes. Interesting. I just cked my account and the pastes are not there. This one should work.\nhttp://pastebin.com/4Lse4fCk\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17231287",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-17231287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 17231287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjMxMjg3",
    "user": {
      "login": "dannystaple",
      "id": 426859,
      "node_id": "MDQ6VXNlcjQyNjg1OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/426859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dannystaple",
      "html_url": "https://github.com/dannystaple",
      "followers_url": "https://api.github.com/users/dannystaple/followers",
      "following_url": "https://api.github.com/users/dannystaple/following{/other_user}",
      "gists_url": "https://api.github.com/users/dannystaple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dannystaple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dannystaple/subscriptions",
      "organizations_url": "https://api.github.com/users/dannystaple/orgs",
      "repos_url": "https://api.github.com/users/dannystaple/repos",
      "events_url": "https://api.github.com/users/dannystaple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dannystaple/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T14:42:01Z",
    "updated_at": "2013-04-30T14:42:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "In that pastebin example - using \"t\" requires a hash not a question mark to work... The kwargs here only work as API parameters from https://developers.google.com/youtube/player_parameters.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21414990",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-21414990",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 21414990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDE0OTkw",
    "user": {
      "login": "pleabargain",
      "id": 640846,
      "node_id": "MDQ6VXNlcjY0MDg0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/640846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pleabargain",
      "html_url": "https://github.com/pleabargain",
      "followers_url": "https://api.github.com/users/pleabargain/followers",
      "following_url": "https://api.github.com/users/pleabargain/following{/other_user}",
      "gists_url": "https://api.github.com/users/pleabargain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pleabargain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pleabargain/subscriptions",
      "organizations_url": "https://api.github.com/users/pleabargain/orgs",
      "repos_url": "https://api.github.com/users/pleabargain/repos",
      "events_url": "https://api.github.com/users/pleabargain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pleabargain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-23T13:50:11Z",
    "updated_at": "2013-07-23T13:50:11Z",
    "author_association": "NONE",
    "body": "Hello dannystaple,\nYour fix used to work, now it does not with IPython git pull as of 23july.\n\nHere's the notebook for ref:\nhttp://pastebin.com/hayyG13Q\n\nfrom IPython.display import YouTubeVideo\nYouTubeVideo('zEyEC34MY1A#t=1m23s') \n\nI see above that a number of changes have been enabled with the code to display video.\n\nI did try reading up on the changes by:\nfrom IPython.display import YouTubeVideo\n\nand then\n\nIPython.display?\n\nbut I get \nObject `IPython.display` not found.\n\nbelow are some screen shots showing that I did try FWIW. I would appreciate help in getting YT videos to load at a specific time.\n\n![startsatzeroscreenshot](https://f.cloud.github.com/assets/640846/841770/1950b236-f39e-11e2-906a-22b15bf81d4c.png)\n![fromipython displayscreenshot](https://f.cloud.github.com/assets/640846/841776/38f85cc4-f39e-11e2-9712-af62911ee0a9.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21417491",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-21417491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 21417491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDE3NDkx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-23T14:25:28Z",
    "updated_at": "2013-07-23T14:25:28Z",
    "author_association": "MEMBER",
    "body": "hi @pleabargain , \n\nYou are not without knowing that when doing\n\n```\nfrom foo.bar import  myfunc\n```\n\nThe namespace is not injected with `foo.bar`, so not finding `IPython.display` in the name space is expected.\n\nOtherwise I would read the docstring of the constructor of the object you are trying to use. It contains a lot of usefull informations, like available kwargs and their effects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21583543",
    "html_url": "https://github.com/ipython/ipython/pull/2530#issuecomment-21583543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2530",
    "id": 21583543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTgzNTQz",
    "user": {
      "login": "dannystaple",
      "id": 426859,
      "node_id": "MDQ6VXNlcjQyNjg1OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/426859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dannystaple",
      "html_url": "https://github.com/dannystaple",
      "followers_url": "https://api.github.com/users/dannystaple/followers",
      "following_url": "https://api.github.com/users/dannystaple/following{/other_user}",
      "gists_url": "https://api.github.com/users/dannystaple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dannystaple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dannystaple/subscriptions",
      "organizations_url": "https://api.github.com/users/dannystaple/orgs",
      "repos_url": "https://api.github.com/users/dannystaple/repos",
      "events_url": "https://api.github.com/users/dannystaple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dannystaple/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-25T20:48:55Z",
    "updated_at": "2013-07-25T20:48:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "To time offset with my commit (using the current youtube API), you need to have a timedelta in seconds as the &quot;start&quot; parameter. For example:\n&nbsp;\n&nbsp; from datetime import timedelta\n&nbsp;&nbsp;YouTubeVideo(&quot;Pi9NpxAvYSs&quot;, start=timedelta(hours=1, minute\ns=47, seconds=3))\n\n&nbsp;\n\n-----Original Message-----\n\nRe: [ipython] Adding time offsets to the video (#2530)\nFrom: Matthias Bussonnier &lt;notifications@github.com&gt;\nTo: ipython/ipython &lt;ipython@noreply.github.com&gt;\nCc: Danny Staple &lt;danny@orionrobots.co.uk&gt;\nTuesday, July 23, 2013 at 3:25PM\n\nhi @pleabargain ,\nYou are not without knowing that when doing\n\nfrom foo.bar import  myfunc \nThe namespace is not injected with foo.bar, so not finding IPython.display in the name space is expected.\nOtherwise I would read the docstring of the constructor of the object you are trying to use. It contains a lot of usefull informations, like available kwargs and their effects.\n&mdash;\nReply to this email directly or view it on GitHub.\n\n&nbsp;\n"
  }
]
