[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/270893106",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-270893106",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 270893106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDg5MzEwNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-06T12:18:44Z",
    "updated_at": "2017-01-06T12:18:44Z",
    "author_association": "MEMBER",
    "body": "It is not possible, not without hack that won't work (displaying Javascript that execute Python code).\r\n\r\nHere are some reasons why the kernel (in this case IPython):\r\n  - may not be running from single file\r\n  - even if one file, the file may not be a notebook. \r\n  - even if notebook, the notebook may not be on a filesystem. \r\n  - even if on a file system, it may not be on the same machine.\r\n  - even if on the same machine the path to the file may not make sens in the IPython context. \r\n  - even if it make sens the Jupyter Protocol has not been designed to do so. And we have no plan to change this abstraction in short or long term. \r\n\r\nThough, you _can_ run a notebook without a notebook server via an external script, and copy the notebook at the same time as well. That's a simple manner of  `jupyter nbconvert --execute --output-dir='results/'`\r\n\r\nHope that helps."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/271320647",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-271320647",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 271320647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTMyMDY0Nw==",
    "user": {
      "login": "abast",
      "id": 20513804,
      "node_id": "MDQ6VXNlcjIwNTEzODA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20513804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abast",
      "html_url": "https://github.com/abast",
      "followers_url": "https://api.github.com/users/abast/followers",
      "following_url": "https://api.github.com/users/abast/following{/other_user}",
      "gists_url": "https://api.github.com/users/abast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abast/subscriptions",
      "organizations_url": "https://api.github.com/users/abast/orgs",
      "repos_url": "https://api.github.com/users/abast/repos",
      "events_url": "https://api.github.com/users/abast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T15:53:12Z",
    "updated_at": "2017-01-09T15:53:33Z",
    "author_association": "NONE",
    "body": "Maybe the fact that you closed this issue immediately indicates, that this topic has been thoroughly discussed somewhere else. Could you give me a link to the discussion, so I can understand that decision better?\r\n\r\nOtherwise I am wondering: Why can't the iPython environment set a python variable e.g. inside the IPython module as soon as a kernel get's started? This variable then could hold information on how the kernel got started, like the URL of the iPython notebook."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/271334096",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-271334096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 271334096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTMzNDA5Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T16:36:14Z",
    "updated_at": "2017-01-09T16:36:14Z",
    "author_association": "MEMBER",
    "body": "There is no particular place where this is thoroughly discussed, it's in many place, but I'll reuse another metaphor I'm seen before.  \r\n\r\nYou are a book writer. Your reader want one thing regularly. As they identify to the characters, they want themain character to have the same eye color they do. How do you do that ? Well as a book writer you can't. For each single person the answer is obvious, but for the majority of user you can't.\r\n\r\nYou may print 10 versions with 10 eyes color, and ask the reader to choose. But the reader _have_ to do it. \r\n\r\nIt the same for the IPython kernel.\r\n\r\nThe kernel does not know what started it. The things that started could _try_ to set a env variable, but it might not even make sens in this context. You may not have a notebook connected. The process you start may not be python.\r\n\r\nYou have a thing (your kernel) whos sole purpose is to execute code. It may or may not have access to a file system, it may or may not be python. It may or may not be even already connected to a frontend. it may or may not be connected to multiple client during its life maybe even simultaneously.\r\n\r\nSo while in each case you _can likely_ give a definitive answer as to whether there is a document attached to a kernel and what it is, the general response and how to get it is unclear. The question does not make sens, or at least we haven't found one.\r\n\r\nSo as the books reader, you have to make a choice and tell the kernel the filename that _you_ think is the right one.\r\n\r\nWhen the notebook server starts it set the name of the file linked to it. There are technical challenges to do so, mainly not coupling components, but assume we can. A couple of question from the top of my head.\r\n\r\nWhen running your notebook via nbconvert, what name do you set ?\r\n   - if input is stdin ?\r\n   - if input is network\r\n   - if output notebook =! input_notebook\r\n   - in the \"bookbook\" mode that take multiple notebook in input.\r\nWhen attaching a console, what name do you set ?\r\nIf you attach multiple notebook, what name do you set ?\r\n  - If you execute multiple notebook in a row, what name do you set ?\r\n  - If you execute multiple notebook in parallel, what name do you set ?\r\nwhen working in an env without filesystem (postgres DB), what name ?\r\nBinary or ASCII ? Defined encoding ?\r\nNotebook name of FullPath ?\r\nWhat if not on the same machine ?\r\nWhat if execution is purely in-memory because the notebook was generated on the fly?\r\nEven if you have a name and `print()` it... what if the file get's renamed ?\r\n   - renamed while kernel is off ?\r\n   - renamed during kernel execution ?\r\nRealtime collaboration and hardlinks when a file may have multiple names,which one is right ?\r\n\r\nNone of the above question have  clear answers for me. If there is a consensus on how to do it correctly, without blocking us in a corner we'll think about it, and then there will be all the technical difficulties. \r\n\r\nHope that clarify things a bit.You can try hackish things like [this](http://stackoverflow.com/questions/12544056/how-to-i-get-the-current-ipython-notebook-name), but you'll see that they rarely content everyone.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/336548082",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-336548082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 336548082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjU0ODA4Mg==",
    "user": {
      "login": "patricksilva",
      "id": 8302712,
      "node_id": "MDQ6VXNlcjgzMDI3MTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8302712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricksilva",
      "html_url": "https://github.com/patricksilva",
      "followers_url": "https://api.github.com/users/patricksilva/followers",
      "following_url": "https://api.github.com/users/patricksilva/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricksilva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricksilva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricksilva/subscriptions",
      "organizations_url": "https://api.github.com/users/patricksilva/orgs",
      "repos_url": "https://api.github.com/users/patricksilva/repos",
      "events_url": "https://api.github.com/users/patricksilva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricksilva/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T19:37:22Z",
    "updated_at": "2017-10-13T19:42:42Z",
    "author_association": "NONE",
    "body": "Excuse-me, but with this:\r\n```\r\n!echo %cd% # under windows\r\n!pwd # under linux/mac\r\n```\r\nyou get the desired information.\r\nIn order to re-use it, just do:\r\n```\r\nmyInfo01 = !echo %cd% # under windows\r\nmyInfo02 = !pwd # under linux/mac\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/336666949",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-336666949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 336666949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY2Njk0OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-14T20:56:54Z",
    "updated_at": "2017-10-14T20:56:54Z",
    "author_association": "MEMBER",
    "body": "It won't work because the process CWD may change and may even not be where the notebook is stored."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/337596522",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-337596522",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 337596522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzU5NjUyMg==",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T13:48:30Z",
    "updated_at": "2017-10-18T13:48:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is it at least guaranteed that if you open a notebook in a fresh notebook server and implicitly start a kernel by running some code, it will get pwd the folder the ipynb-file is in?\r\n\r\nJust because ipython can't magically handle every weird edge case, which I think nobody expected, shouldn't stop it from having a _simple_ rule like that for the _simple_ cases people actually care about (like handing a notebook + data files in the same folder to students)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/337644515",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-337644515",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 337644515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY0NDUxNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T16:13:17Z",
    "updated_at": "2017-10-18T16:13:17Z",
    "author_association": "MEMBER",
    "body": "> Is it at least guaranteed that if you open a notebook in a fresh notebook server and implicitly start a kernel by running some code, it will get pwd the folder the ipynb-file is in?\r\n\r\nNo.\r\n\r\nIt is not guarantied that the kernel is on the same machine than the ipynb, it is not even guarantied that the ipynb file even exist, will exists, is unique, or have a unique path, or even is/will be a file. Example: real time collaboration on google drive. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/337661118",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-337661118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 337661118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY2MTExOA==",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T17:10:55Z",
    "updated_at": "2017-10-18T17:10:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I didn't formulate my question well enough.  200 students will have a python environment setup, most by installing anaconda on their own laptops. I will hand them the computer exercise as a notebook and data files in a folder. One of them might store the notebook in postgres DB, two might run the kernel on a different machine than their laptop where they have the notebook. Three students will setup a real-time collaboration on google drive together. Six students will do something else that you might or might have not mentioned so far. I'm mainly thinking about the 190 students that are going to reasonably follow the instructions, unzip the folder on their own laptop (Windows, OS X or Linux), start a notebook server on the _same_ laptop (either by the notebook server explorer or double clicking the notebook file), and let it implicitly start a new kernel (again on the same laptop) by executing the first cell. The question is whether cwd works for _those_ students. Will ~15 students come to my office because `os.getcwd()`  didn't work or should I expect closer to 50-100? \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/337663717",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-337663717",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 337663717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY2MzcxNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T17:20:15Z",
    "updated_at": "2017-10-18T17:20:15Z",
    "author_association": "MEMBER",
    "body": "> I'm mainly thinking about the 190 students that are going to reasonably follow the instructions, unzip the folder on their own laptop (Windows, OS X or Linux), start a notebook server on the same laptop (either by the notebook server explorer or double clicking the notebook file), and let it implicitly start a new kernel (again on the same laptop) by executing the first cell.\r\n\r\nYes, using os.cwd() or even `c = !cwd` will work for these users; and I think in your context it's fine to ask them to do that. But as a _general_ use case that is not the case. we'll also try to be careful in when stating things on this bug tracker as it may pass as an explicit endorsement of this method. And we know people ted to not read in depth."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/337700887",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-337700887",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 337700887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzcwMDg4Nw==",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T19:24:05Z",
    "updated_at": "2017-10-18T19:24:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fair enough, thanks for your concern of precise communication."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/354889020",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-354889020",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 354889020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDg4OTAyMA==",
    "user": {
      "login": "SurealCereal",
      "id": 6961673,
      "node_id": "MDQ6VXNlcjY5NjE2NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6961673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SurealCereal",
      "html_url": "https://github.com/SurealCereal",
      "followers_url": "https://api.github.com/users/SurealCereal/followers",
      "following_url": "https://api.github.com/users/SurealCereal/following{/other_user}",
      "gists_url": "https://api.github.com/users/SurealCereal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SurealCereal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SurealCereal/subscriptions",
      "organizations_url": "https://api.github.com/users/SurealCereal/orgs",
      "repos_url": "https://api.github.com/users/SurealCereal/repos",
      "events_url": "https://api.github.com/users/SurealCereal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SurealCereal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T22:12:01Z",
    "updated_at": "2018-01-02T22:12:01Z",
    "author_association": "NONE",
    "body": "The *first* time the script is run in a workbook, and before changing it, `os.cwd()` is the notebook directory.\r\nSo what I often use in my code is\r\n```python\r\nif not 'workbookDir' in globals():\r\n    workbookDir = os.getcwd()\r\nprint('workbookDir: ' + workbookDir)\r\nos.chdir(workbookDir)  # If you changed the current working dir, this will take you back to the workbook dir.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/410758996",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-410758996",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 410758996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc1ODk5Ng==",
    "user": {
      "login": "burnpanck",
      "id": 1310437,
      "node_id": "MDQ6VXNlcjEzMTA0Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1310437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/burnpanck",
      "html_url": "https://github.com/burnpanck",
      "followers_url": "https://api.github.com/users/burnpanck/followers",
      "following_url": "https://api.github.com/users/burnpanck/following{/other_user}",
      "gists_url": "https://api.github.com/users/burnpanck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/burnpanck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/burnpanck/subscriptions",
      "organizations_url": "https://api.github.com/users/burnpanck/orgs",
      "repos_url": "https://api.github.com/users/burnpanck/repos",
      "events_url": "https://api.github.com/users/burnpanck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/burnpanck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T16:01:04Z",
    "updated_at": "2018-08-06T16:01:04Z",
    "author_association": "NONE",
    "body": "As it seems, most of the users here do not really want to access the \"path of the notebook\" whatever that might actually mean in a given deployment, but rather to access resources that are associated with that notebook, in such a way that the details of the deployment are abstracted away.\r\n\r\nObviously, distributing notebooks together with associated data is general and broad use-case. Maybe there is a need for an abstract mechanism to access resources from within a kernel? It would then be the responsibility of the deployment (i.e. the notebook server installation) to properly set-up that resource access API, possibly with the help of some metadata from the notebook? Then, the local notebook server could default to actually serving these resources from a path relative to the notebook. Other deployments might provide a separate interface (such as an upload method or an URL pointing to resources), or simply not support the interface at all."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/444316116",
    "html_url": "https://github.com/ipython/ipython/issues/10123#issuecomment-444316116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10123",
    "id": 444316116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDMxNjExNg==",
    "user": {
      "login": "ChihChiu29",
      "id": 25016750,
      "node_id": "MDQ6VXNlcjI1MDE2NzUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25016750?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChihChiu29",
      "html_url": "https://github.com/ChihChiu29",
      "followers_url": "https://api.github.com/users/ChihChiu29/followers",
      "following_url": "https://api.github.com/users/ChihChiu29/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChihChiu29/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChihChiu29/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChihChiu29/subscriptions",
      "organizations_url": "https://api.github.com/users/ChihChiu29/orgs",
      "repos_url": "https://api.github.com/users/ChihChiu29/repos",
      "events_url": "https://api.github.com/users/ChihChiu29/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChihChiu29/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T00:51:46Z",
    "updated_at": "2018-12-05T00:51:46Z",
    "author_association": "NONE",
    "body": "It might be too late now but it sounds like Colaboratory might help your work here:\r\nhttps://colab.research.google.com/notebooks/welcome.ipynb"
  }
]
