[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470322624",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470322624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470322624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDMyMjYyNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-06T23:43:42Z",
    "updated_at": "2019-03-06T23:43:42Z",
    "author_association": "MEMBER",
    "body": "Assign to `__signature__` maybe ? You might be able to either give it a string, or a signature object on recent enough Python ? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470439706",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470439706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470439706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQzOTcwNg==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T08:53:26Z",
    "updated_at": "2019-03-07T08:53:26Z",
    "author_association": "NONE",
    "body": "Thanks a lot for your answer! I did not know you could change the `__signature__` of the function\r\n\r\nThis is madness...\r\n```Python\r\nfrom inspect import signature, Parameter\r\n\r\ndef foo(**kwargs):\r\n    return FloatSlider(**kwargs)\r\n\r\nfoo.__signature__ = signature(foo).replace(parameters=[\r\n    Parameter(name='min', kind=Parameter.KEYWORD_ONLY), \r\n    Parameter(name='max', kind=Parameter.KEYWORD_ONLY)\r\n])\r\n```\r\n\r\nIt does the trick, ipython will autocomplete `min` and `max` arguments. I'm not sure I would put it in my code though. Not really feeling confident about it.\r\n\r\nThe thing is that changing the signature does not change the way it is called by Python. Meaning that this code:\r\n```Python\r\ndef foo(x, y): \r\n     print(\"Hello\")\r\n\r\nfoo.__signature__ = signature(foo).replace(parameters=[\r\n    Parameter(name='x', kind=Parameter.POSITIONAL_OR_KEYWORD), \r\n    Parameter(name='name', kind=Parameter.POSITIONAL_OR_KEYWORD)\r\n])\r\n\r\nfoo(name=4, x=5)\r\n```\r\nleads to `TypeError: foo() got an unexpected keyword argument 'name'`\r\n\r\nSo I guess changing the signature is only safe if the function was originally taking `*args, **kwargs` as arguments."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470440759",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470440759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470440759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ0MDc1OQ==",
    "user": {
      "login": "maartenbreddels",
      "id": 1765949,
      "node_id": "MDQ6VXNlcjE3NjU5NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1765949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maartenbreddels",
      "html_url": "https://github.com/maartenbreddels",
      "followers_url": "https://api.github.com/users/maartenbreddels/followers",
      "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}",
      "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions",
      "organizations_url": "https://api.github.com/users/maartenbreddels/orgs",
      "repos_url": "https://api.github.com/users/maartenbreddels/repos",
      "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maartenbreddels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T08:56:54Z",
    "updated_at": "2019-03-07T08:56:54Z",
    "author_association": "NONE",
    "body": "This can be really useful for widgets right?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470441712",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470441712",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470441712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ0MTcxMg==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T09:00:02Z",
    "updated_at": "2019-03-07T09:00:02Z",
    "author_association": "NONE",
    "body": "Definitely :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470630447",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470630447",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470630447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDYzMDQ0Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T17:59:41Z",
    "updated_at": "2019-03-07T17:59:41Z",
    "author_association": "MEMBER",
    "body": "If you ever ends up writing a decorator that automate some of this stuff it would be helpful for matplotlib . I would love a \r\n\r\n```\r\n@extra_kwargs_are_passed_to(pyplot.axis)\r\ndef plot(...)\r\n```\r\n\r\n>  I'm not sure I would put it in my code though. Not really feeling confident about it.\r\n\r\n`__signature__` is made to be overwritten for decorators, and other function-modifying-object. \r\nStdlib decrators like [`@wraps`](https://docs.python.org/3/library/functools.html#functools.wraps) make use of it to expose the original function signature. So yes it's purely decorative :-) \r\n\r\nIt's also useful for c-defined function that cant' be inspected. So please use heavily :-) "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470864367",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470864367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470864367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDg2NDM2Nw==",
    "user": {
      "login": "maartenbreddels",
      "id": 1765949,
      "node_id": "MDQ6VXNlcjE3NjU5NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1765949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maartenbreddels",
      "html_url": "https://github.com/maartenbreddels",
      "followers_url": "https://api.github.com/users/maartenbreddels/followers",
      "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}",
      "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions",
      "organizations_url": "https://api.github.com/users/maartenbreddels/orgs",
      "repos_url": "https://api.github.com/users/maartenbreddels/repos",
      "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maartenbreddels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T09:31:47Z",
    "updated_at": "2019-03-08T09:31:47Z",
    "author_association": "NONE",
    "body": "```python\r\nimport traitlets\r\nclass Test(traitlets.HasTraits):\r\n    a = traitlets.Int(1)\r\n    min = traitlets.Int()\r\n    widget = traitlets.Instance(object)\r\n    value = traitlets.Unicode()\r\n\r\nfrom inspect import signature, Parameter, Signature\r\n\r\ndef create_parameter(cls, name):\r\n    trait = getattr(cls, name)\r\n    if trait.default_value == traitlets.Undefined:\r\n        default = Parameter.empty\r\n    else:\r\n        default = trait.default_value\r\n    return Parameter(name=name, kind=Parameter.KEYWORD_ONLY, default=default)\r\n\r\ndef fix_signature(cls):\r\n    cls.__init__.__signature__ = cls.__signature__ = signature(cls).replace(parameters=\r\n    [\r\n        create_parameter(cls, trait_name)\r\n        for trait_name in cls.class_trait_names()\r\n        if not trait_name.startswith('_')\r\n    ]\r\n)\r\nfix_signature(Test)\r\n```\r\nIf I do `Test(val<tab>` it will not autocomplete :(\r\nit seems wraps actually sets __wrapped__\r\nIPython 7.2.0"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470865012",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470865012",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470865012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDg2NTAxMg==",
    "user": {
      "login": "maartenbreddels",
      "id": 1765949,
      "node_id": "MDQ6VXNlcjE3NjU5NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1765949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maartenbreddels",
      "html_url": "https://github.com/maartenbreddels",
      "followers_url": "https://api.github.com/users/maartenbreddels/followers",
      "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}",
      "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions",
      "organizations_url": "https://api.github.com/users/maartenbreddels/orgs",
      "repos_url": "https://api.github.com/users/maartenbreddels/repos",
      "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maartenbreddels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T09:34:07Z",
    "updated_at": "2019-03-08T09:34:07Z",
    "author_association": "NONE",
    "body": "FYI, the same behaviour with wraps, using tab you see the arguments in the popup window/help, but tab completion does not work."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/470936575",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-470936575",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 470936575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDkzNjU3NQ==",
    "user": {
      "login": "btel",
      "id": 41565,
      "node_id": "MDQ6VXNlcjQxNTY1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btel",
      "html_url": "https://github.com/btel",
      "followers_url": "https://api.github.com/users/btel/followers",
      "following_url": "https://api.github.com/users/btel/following{/other_user}",
      "gists_url": "https://api.github.com/users/btel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btel/subscriptions",
      "organizations_url": "https://api.github.com/users/btel/orgs",
      "repos_url": "https://api.github.com/users/btel/repos",
      "events_url": "https://api.github.com/users/btel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-08T13:56:29Z",
    "updated_at": "2019-03-08T13:56:29Z",
    "author_association": "NONE",
    "body": "@maartenbreddels it's interesting to see how attrs solved this problem:\r\n\r\nhttps://github.com/python-attrs/attrs/blob/4fe28966e88b9b85c9c2df77ffb34f70175c4492/src/attr/_make.py#L1651\r\n\r\nI think it's something that could be implemented in traitlets. Also it might help to catch constructor arguments that were not defined."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477136857",
    "html_url": "https://github.com/ipython/ipython/issues/11624#issuecomment-477136857",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11624",
    "id": 477136857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzEzNjg1Nw==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T12:47:22Z",
    "updated_at": "2019-03-27T12:48:47Z",
    "author_association": "NONE",
    "body": "> If I do Test(val<tab> it will not autocomplete :(\r\n\r\nAssigning to `__signature__` only works for ipython=7.1.1. I guess it's because for this version jedi was not used. And jedi [does not take into account the `__signature__`](https://github.com/davidhalter/jedi/issues/1058) for autocompletion. Either we try to fix it upstream, or we find a way around it."
  }
]
