[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27822289",
    "html_url": "https://github.com/ipython/ipython/issues/4493#issuecomment-27822289",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4493",
    "id": 27822289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODIyMjg5",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-05T22:57:34Z",
    "updated_at": "2013-11-05T23:39:56Z",
    "author_association": "MEMBER",
    "body": "this isn't actually specific to qtconsole, but applies to all two-process clients (running the print statement in `ipython console` also yields a similar traceback for me).\n\nI think the problem is that the extract_dates is overzealous in zmq.session, (or the unserialization in general), since this is just a user defined string that's being printed, and should have no be going down this code path.\n\n@minrk would probably figure this out quicker, but that's the basic gist of it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27823011",
    "html_url": "https://github.com/ipython/ipython/issues/4493#issuecomment-27823011",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4493",
    "id": 27823011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODIzMDEx",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-05T23:07:39Z",
    "updated_at": "2013-11-05T23:07:39Z",
    "author_association": "MEMBER",
    "body": "and Min, could you ping me when you start looking at this, I'd like to understand what's happening here better. One simple idea to patch over this is to simply wrap the last elif branch which has the call to datetime.strptime in a try-except, but I don't know what else that has the potential for breaking\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27823267",
    "html_url": "https://github.com/ipython/ipython/issues/4493#issuecomment-27823267",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4493",
    "id": 27823267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODIzMjY3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-05T23:11:23Z",
    "updated_at": "2013-11-05T23:11:23Z",
    "author_association": "MEMBER",
    "body": "there are two issues here:\n1. our regular expression for ISO8601 dates is wrong (it uses `\\d+` instead of what strptime actually supports (maybe only `\\d{6}`, or maybe anywhere from 1-6, we just need to check this).\n2. we don't check what keys we are applying this check to, so any string key that matches ISO8601 will be deserialized to a datetime object. This is harder to fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27827337",
    "html_url": "https://github.com/ipython/ipython/issues/4493#issuecomment-27827337",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4493",
    "id": 27827337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODI3MzM3",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-06T00:21:14Z",
    "updated_at": "2013-11-06T00:41:35Z",
    "author_association": "MEMBER",
    "body": "in the meantime, a simple \"workaround\" is to simply print a \"\\r\" at the beginning of the string, or adding a space (or any other character) at the end\n\n```\nprint '\\r2013-11-05T16:36:22.100000002'\n```\n"
  }
]
