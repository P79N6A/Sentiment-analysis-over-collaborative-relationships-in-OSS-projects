[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15619282",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15619282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15619282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjE5Mjgy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-28T22:29:18Z",
    "updated_at": "2013-03-28T22:29:18Z",
    "author_association": "MEMBER",
    "body": "Wow, I just looked at the partitioning code for constructing map requests, and there were some terrible O(N^2) operations that were completely unnecessary.  Try #3108, and see if you get a better experience.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15624197",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15624197",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15624197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjI0MTk3",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T01:04:45Z",
    "updated_at": "2013-03-29T01:04:45Z",
    "author_association": "MEMBER",
    "body": "Yes, just as you have said this solves the problem with submission time, leaving however another serious problem with O(N) operations in the ipcontroller as long as `TaskScheduler.hwm != 0`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15627795",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15627795",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15627795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjI3Nzk1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T03:44:44Z",
    "updated_at": "2013-03-29T03:44:44Z",
    "author_association": "MEMBER",
    "body": "I've also fixed an O(N) operation in the Scheduler while HWM is not zero.  It's still far from ideal, but the real pathological behavior is addressed.  I do have plans to completely rewrite the scheduler (#2866), but that's probably not going to happen soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15637061",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15637061",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15637061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjM3MDYx",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T11:08:24Z",
    "updated_at": "2013-03-29T11:08:24Z",
    "author_association": "MEMBER",
    "body": "Much better, but still scales with the number of jobs. I see it now taking full cpu at 1e5 jobs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15651532",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15651532",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15651532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjUxNTMy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T17:36:30Z",
    "updated_at": "2013-03-29T17:36:30Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I can really fix the scheduler without rewriting it - I have one more idea that I will try today.\n\nCan I ask what your workload is like? Task size, duration, cpu-bound / io-bound, engine and task count, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15651894",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15651894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15651894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjUxODk0",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T17:44:19Z",
    "updated_at": "2013-03-29T17:44:19Z",
    "author_association": "MEMBER",
    "body": "I was still referring to the sample task above, just adding yet another order of magnitude to the job count. I guess that is one thing that shouldn't make scheduling more complicated. For my purposes in the short run setting hwm=0 is perfectly fine (a lot of homogeneous tasks). What poses more of a limitation is that the number of engines is bounded by ~250 due to ulimits on file handles. Is there a plan to remove this limitation?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15656654",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15656654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15656654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU2NjU0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T19:27:51Z",
    "updated_at": "2013-03-29T19:27:51Z",
    "author_association": "MEMBER",
    "body": "> I was still referring to the sample task above, just adding yet another order of magnitude to the job count. I guess that is one thing that shouldn't make scheduling more complicated.\n\nIt's not more complicated, it's just that I had a few poorly chosen data structures for when the queue is large.  It should be a bit better now (I see 1-2% CPU with a queue of 100k tasks), if you want to try the PR again.\n\n> Is there a plan to remove this limitation?\n\nIt's a limitation imposed by your OS - if you have permissions to move ulimit, then you can change it.  I do have some sharding models in my mind to scale the constellation controller of processes, which would limit the number of connections per process, but I think that's a long way off.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15657659",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15657659",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15657659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU3NjU5",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T19:52:19Z",
    "updated_at": "2013-03-29T19:52:51Z",
    "author_association": "MEMBER",
    "body": "Perfect, I confirm: it works and I guess closes the issue. Memory usage might be something else to look into, but it is much less of a problem, and I'm not sure how much can be done with performance there. Thanks for a quick response and the great software.\n\nPS. Any chance for this to end in 0.13.2?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15660238",
    "html_url": "https://github.com/ipython/ipython/issues/3106#issuecomment-15660238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3106",
    "id": 15660238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjYwMjM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-29T20:54:53Z",
    "updated_at": "2013-03-29T20:54:53Z",
    "author_association": "MEMBER",
    "body": "> Perfect, I confirm: it works and I guess closes the issue.\n\nGreat, we can close it when the PR is merged.\n\n> Memory usage might be something else to look into, but it is much less of a problem, and I'm not sure how much can be done with performance there.\n\nWe need a notion of culling history - right now, we have no way of knowing whether tasks may show up in the dependency graph, so the scheduler never forgets.  This means that IPython.parallel cannot be an indefinitely running scheduler (that's not a massive problem, since it's not meant to be), but there is an upper limit on the number of tasks a Scheduler can process before running out of memory.\n\n> PS. Any chance for this to end in 0.13.2?\n\nNot even close - lots of pieces of the parallel code have been rewritten since 0.13, and 0.13.2 is strictly a minimal bugfix release.\n\nI should note one more thing: if your work involves a large number of small, homogeneous tasks, and you do not use task dependencies or retries or any of the other richer logic in the python scheduler, I would recommend you try the `pure` scheduler (`TaskScheduler.scheme = 'pure'`), which is a stateless pure-C zmq forwarding device - it should have none of the problems listed above.\n"
  }
]
