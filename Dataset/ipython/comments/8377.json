[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96118539",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96118539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96118539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTE4NTM5",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T01:36:25Z",
    "updated_at": "2015-04-25T01:36:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "The error is caused by the line after your comment. Remove that line and your code will run fine. Remember to use `from __future__ import division` to obtain the intended division of 5/9.\n\nThis is also happening in master.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96121026",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96121026",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96121026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTIxMDI2",
    "user": {
      "login": "amitsaha",
      "id": 512598,
      "node_id": "MDQ6VXNlcjUxMjU5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/512598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitsaha",
      "html_url": "https://github.com/amitsaha",
      "followers_url": "https://api.github.com/users/amitsaha/followers",
      "following_url": "https://api.github.com/users/amitsaha/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitsaha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitsaha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitsaha/subscriptions",
      "organizations_url": "https://api.github.com/users/amitsaha/orgs",
      "repos_url": "https://api.github.com/users/amitsaha/repos",
      "events_url": "https://api.github.com/users/amitsaha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitsaha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T01:56:33Z",
    "updated_at": "2015-04-25T01:56:33Z",
    "author_association": "NONE",
    "body": "@rsmith31415 i forgot to mention this is Python 3. Did you mean the \"blank line\" ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96121671",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96121671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96121671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTIxNjcx",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T02:16:13Z",
    "updated_at": "2015-04-25T02:25:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amitsaha Correct. \n\nOh, you don't need `from __future__ import division`. Excellent. IPython 2.3 is a bit old, though. In any case, that's not the problem here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96124461",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96124461",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96124461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTI0NDYx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T03:27:37Z",
    "updated_at": "2015-04-25T03:27:37Z",
    "author_association": "MEMBER",
    "body": "I know this seems odd, but this is the expected behaviour. Allow me to explain.\n\nThe reason IPython ignores `>>>` is so that you can easily copy and paste examples that have the interactive prompts in. But ignoring part of the code the user gives is a tricky game - what if you wanted to write code like this:\n\n``` python\na = \"\"\"\n>>> YOU WIN <<<\n\"\"\"\n```\n\nTry it - the `>>>` that was supposed to be in the string goes missing. There's no 100% accurate way to tell whether those characters at the start of the line are what the user intended, or just the way an example was presented. So whatever we do is a guess. And the compromise we have is that if either of the first two lines in a cell appears to have a prompt, we guess that you've copied and pasted a code example, and we strip the prompts. If not, we assume that you really meant to type those characters.\n\nWhy the first two lines? Because with a code example like:\n\n``` python\n>>> for a in range(5):\n...     print(a)\n...     print(a**2)\n```\n\nSome people will copy from the initial `>>>`, and some will leave that out and copy from the `for`. Either way, they both get the `...` on the second line.\n\nI know this probably seemed bizarrely inconsistent when you ran into it, but that's the pitfall of trying to make interfaces that are clever about this kind of thing. If you've read this far, thanks for making it worth my time to write this far. ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96145145",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96145145",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96145145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTQ1MTQ1",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T07:13:15Z",
    "updated_at": "2015-04-25T07:13:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice explanation, but I was wondering, what are the pitfalls of using the rule \"If there is a block comment or inline comment, ignore it\" and start processing after that part. You are already throwing an error if there are nested comments, so that rules out the issue of parsing nested patterns with regex. \n\nThe interesting thing is that the console is doing the right thing:\n\n```\nIn [1]: #P18: Fahrenheit to Celsius conversion\n\nIn [2]: \n\nIn [2]: >>> F = 98.6\n\nIn [3]: >>> (F - 32) * (5 / 9)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96249428",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96249428",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96249428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MjQ5NDI4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T18:07:10Z",
    "updated_at": "2015-04-25T18:07:10Z",
    "author_association": "MEMBER",
    "body": "Each `In [x]:` prompt at the console is equivalent to a new cell in the notebook. If you run that code as a single block using `%paste`, you'll see the same thing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96263994",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96263994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96263994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MjYzOTk0",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T19:05:36Z",
    "updated_at": "2015-04-25T19:05:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're right, I see the same error. \n\nIf the whole block is being processed, then it is probably not a good idea to spend much time writing some positive lookbehind assertion to deal with this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/96291715",
    "html_url": "https://github.com/ipython/ipython/issues/8377#issuecomment-96291715",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8377",
    "id": 96291715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MjkxNzE1",
    "user": {
      "login": "amitsaha",
      "id": 512598,
      "node_id": "MDQ6VXNlcjUxMjU5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/512598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitsaha",
      "html_url": "https://github.com/amitsaha",
      "followers_url": "https://api.github.com/users/amitsaha/followers",
      "following_url": "https://api.github.com/users/amitsaha/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitsaha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitsaha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitsaha/subscriptions",
      "organizations_url": "https://api.github.com/users/amitsaha/orgs",
      "repos_url": "https://api.github.com/users/amitsaha/repos",
      "events_url": "https://api.github.com/users/amitsaha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitsaha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T23:18:59Z",
    "updated_at": "2015-04-25T23:18:59Z",
    "author_association": "NONE",
    "body": "Thanks @takluyver  for the explanation. It does make sense why I am seeing this behavior. \n\nThank you @rsmith31415 too.\n"
  }
]
