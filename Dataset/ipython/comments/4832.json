[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32750923",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32750923",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32750923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzUwOTIz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T11:08:54Z",
    "updated_at": "2014-01-20T11:08:54Z",
    "author_association": "MEMBER",
    "body": "Make sens. Would you like to add handeling for returning NotImplemented ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32787240",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32787240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32787240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg3MjQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T19:03:13Z",
    "updated_at": "2014-01-20T19:03:13Z",
    "author_association": "MEMBER",
    "body": "> Would you like to add handling for returning NotImplemented?\n\nNo, returning NotImplemented is only for overriding comparison methods, not for general use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32787609",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32787609",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32787609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg3NjA5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T19:07:31Z",
    "updated_at": "2014-01-20T19:07:31Z",
    "author_association": "MEMBER",
    "body": "> No, returning NotImplemented is only for overriding comparison methods, not for general use.\n\nOk. I could argue that Python does not have \"rich representation\" and that the [Python doc](http://docs.python.org/3/library/constants.html?highlight=notimplemented#NotImplemented) use the term \"rich comparaison\" (sic).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32787804",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32787804",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32787804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg3ODA0",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T19:10:05Z",
    "updated_at": "2014-01-20T19:10:05Z",
    "author_association": "MEMBER",
    "body": "@minrk: I'm curious: what sources suggest that NotImplemented is not for general use, especially in situations like rich comparison, when you want to signal that the system should try some other ways to accomplish a result?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32788236",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32788236",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32788236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg4MjM2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T19:15:15Z",
    "updated_at": "2014-01-20T19:15:15Z",
    "author_association": "MEMBER",
    "body": "@Carreau It is a similar case, sure. But we do not handle it in the way Python comparison handles NotImplemented, which is to proceed with dispatch as if that entry didn't exist.\n\n@jasongrout [Python docs](http://docs.python.org/2/library/constants.html#NotImplemented). It doesn't say it's specifically to be avoided elsewhere, but it does describe the case for which it exists, and I have not seen it used for anything else.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32796038",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32796038",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32796038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk2MDM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T20:53:32Z",
    "updated_at": "2014-01-20T20:53:32Z",
    "author_association": "MEMBER",
    "body": "@jasongrout I don't feel strongly, it just seems like a sufficiently rare pattern that we should only handle the more common one. If the NotImplemented singleton is more common outside of comparison methods than I thought, I have no problem using it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32797216",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32797216",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32797216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk3MjE2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T21:09:20Z",
    "updated_at": "2014-01-20T21:09:20Z",
    "author_association": "MEMBER",
    "body": "I'm fine with not handeling `NotImplemented`, we can put that on dev meeting agenda. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32801634",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32801634",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32801634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODAxNjM0",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T22:06:31Z",
    "updated_at": "2014-01-20T22:06:31Z",
    "author_association": "MEMBER",
    "body": "I don't feel strongly about it either, but I do feel like handling NotImplemented is a nice solution in the discussion on `_ipython_display_` and the `_repr_*` framework.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32804957",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32804957",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32804957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODA0OTU3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-20T22:51:04Z",
    "updated_at": "2014-01-20T22:51:04Z",
    "author_association": "MEMBER",
    "body": "I don't feel strongly about _which_ we use, but I do think we should use just one of `NotImplemented` or `NotImplementedError` - allowing both just makes the API more confusing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32823129",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-32823129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 32823129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODIzMTI5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-21T05:47:05Z",
    "updated_at": "2014-01-21T06:05:09Z",
    "author_association": "MEMBER",
    "body": "I'm coming around to NotImplemented in terms of basic design, which @jasongrout prefers, but there's one point where NotImplementedError has a big advantage: it's backward-compatible. Returning NotImplemented will raise a TypeError in IPython json serialization, whereas raising NotImplementedError will have the same behavior in 1.0 and 2.0. For that alone, if we pick just one, I think it should be NotImplementedError, even if it is the less elegant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33250816",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-33250816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 33250816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjUwODE2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T19:00:13Z",
    "updated_at": "2014-01-24T19:00:13Z",
    "author_association": "MEMBER",
    "body": "We discussed NotImplemented vs NotImplementedError in the dev meeting yesterday, and agreed to stick with NotImplementedError for the reason Min gives above.\n\n@minrk, is there anything else you want to do before we merge this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33252853",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-33252853",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 33252853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjUyODUz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T19:28:12Z",
    "updated_at": "2014-01-24T19:28:12Z",
    "author_association": "MEMBER",
    "body": "Nope, it should be all set.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33337767",
    "html_url": "https://github.com/ipython/ipython/pull/4832#issuecomment-33337767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4832",
    "id": 33337767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzM3NzY3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-27T01:59:37Z",
    "updated_at": "2014-01-27T01:59:37Z",
    "author_association": "NONE",
    "body": "I'm noticing that executing a cell that raises such an error pops up a Formatter warning on first execution\nbut repeated execution of the same cell or the same code in a new cell does not produce a warning.\n\nIs that intentional?\n"
  }
]
