[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65099345",
    "html_url": "https://github.com/ipython/ipython/pull/7074#issuecomment-65099345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7074",
    "id": 65099345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDk5MzQ1",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T17:16:30Z",
    "updated_at": "2014-12-01T17:16:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Title: s/moar/more/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65100043",
    "html_url": "https://github.com/ipython/ipython/pull/7074#issuecomment-65100043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7074",
    "id": 65100043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTAwMDQz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T17:20:56Z",
    "updated_at": "2014-12-01T17:20:56Z",
    "author_association": "MEMBER",
    "body": "> Title: s/moar/more/\n\nThis one was [on purpose](http://knowyourmeme.com/memes/moar).\n\nThis is WIP, so yes full of typo/comment and does not (totally) work as expected. I'm more looking for a probing on how other dev think about such an approach. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65149146",
    "html_url": "https://github.com/ipython/ipython/pull/7074#issuecomment-65149146",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7074",
    "id": 65149146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTQ5MTQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T22:48:08Z",
    "updated_at": "2014-12-01T22:48:08Z",
    "author_association": "MEMBER",
    "body": "I think the basic idea is reasonable, but it's hard to tell what you're proposing in detail because there are half a dozen different APIs there.\n\nI think this should more clearly distinguish:\n1. A simple, standardised way to warn/raise when deprecated features are used (calling methods, setting trait values, etc.)\n2. A marker for our own use to remind us to remove deprecated things. This needn't be a special code path, I think just grepping for 'deprecate' is probably good enough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65194527",
    "html_url": "https://github.com/ipython/ipython/pull/7074#issuecomment-65194527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7074",
    "id": 65194527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTk0NTI3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T07:57:05Z",
    "updated_at": "2014-12-02T07:57:05Z",
    "author_association": "MEMBER",
    "body": "> I think this should more clearly distinguish:\n> 1. A simple, standardised way to warn/raise when deprecated features are used (calling methods, setting trait values, etc.)\n> 2. A marker for our own use to remind us to remove deprecated things. This needn't be a special code path, I think just grepping for 'deprecate' is probably good enough.\n\nYes, sure, but search our code for `deprecate` can you in any of them tell when the feature will be removed ? We still have some 2.6 codepath...\n\nIn a first pass I can simplify things a bit to get just a decorator and a context manager. \nI'm not good ad naming so if you have proposal I'm all open but I'd like something like:\n\n``` python\n@deprecate((4,0,0))\ndef _i_should_not_be_used(...):\n    pass\n\n\ndef I_can_still_be_use(*args,**kwarg):\n    do_something()\n    with deprecate((4,0,0)):\n        print('this will not exist anymore at some point')\n    continue stuff...\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65289876",
    "html_url": "https://github.com/ipython/ipython/pull/7074#issuecomment-65289876",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7074",
    "id": 65289876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjg5ODc2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T19:34:17Z",
    "updated_at": "2014-12-02T19:34:17Z",
    "author_association": "MEMBER",
    "body": "> Yes, sure, but search our code for deprecate can you in any of them tell when the feature will be removed ?\n\nI don't think this is a big problem that needs a technical fix. Deprecated generally means 'don't rely on this, we are considering removing it at some time in the future'. We don't need to make concrete plans in advance about exactly when that will be, and making the code shout at us about things we haven't yet removed sounds more annoying than helpful.\n\nI would, at least for now, focus this on providing warnings/errors when people try to use deprecated APIs. I think there are two main bits that would be useful:\n- A decorator for deprecated functions\n- Something for deprecated traitlets:\n\n``` python\n# either using traitlet metadata:\nfoo = Unicode(deprecated=True)\n\n# or a function\nfoo = Unicode()\ndeprecate(foo)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69970772",
    "html_url": "https://github.com/ipython/ipython/pull/7074#issuecomment-69970772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7074",
    "id": 69970772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTcwNzcy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T19:00:42Z",
    "updated_at": "2015-01-14T19:00:42Z",
    "author_association": "MEMBER",
    "body": "This has been inactive for over a month, and it's not in a form we can merge, so closing for now.\n"
  }
]
