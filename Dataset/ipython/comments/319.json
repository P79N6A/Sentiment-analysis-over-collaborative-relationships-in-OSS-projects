[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/923323",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-923323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 923323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMzMyMw==",
    "user": {
      "login": "efiring",
      "id": 85125,
      "node_id": "MDQ6VXNlcjg1MTI1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/85125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/efiring",
      "html_url": "https://github.com/efiring",
      "followers_url": "https://api.github.com/users/efiring/followers",
      "following_url": "https://api.github.com/users/efiring/following{/other_user}",
      "gists_url": "https://api.github.com/users/efiring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/efiring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/efiring/subscriptions",
      "organizations_url": "https://api.github.com/users/efiring/orgs",
      "repos_url": "https://api.github.com/users/efiring/repos",
      "events_url": "https://api.github.com/users/efiring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/efiring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-27T18:26:52Z",
    "updated_at": "2011-03-27T18:26:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Works for me, thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/923537",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-923537",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 923537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMzUzNw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-27T19:40:11Z",
    "updated_at": "2011-03-27T19:40:11Z",
    "author_association": "MEMBER",
    "body": "Hey Thomas, this works in the sense of clearing the bug, but it doesn't restore the intended behavior.\n\nWhat we need to do is to repopulate the readline history upon re-entry to ipython.  So the history_saving_wrapper should still be there, it just needs to repopulate the readline history from the sqlite database when exiting the trapped sub-program.\n\nDoes this make sense?\n\nThe idea is that if you enter pdb:\n\n<pre>\nIn [2]: debug\n> /home/fperez/scratch/err.py(9)<module>()\n      7 f\"\"\"\n      8 \n----> 9 foo33\n\nipdb> l\n      4 d\n      5 sf\n      6 asd\n      7 f\"\"\"\n      8 \n----> 9 foo33\n\nipdb> q\n</pre>\n\n\nthen at the next ipython prompt, up-arrow shouldn't show 'q', it should show 'debug'.  Otherwise, if you had a long pdb session, now you'll have to slog through all the pdb commands (which don't make sense in ipython) to get to your previous meaningful ipython command.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/923684",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-923684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 923684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMzY4NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-27T20:30:53Z",
    "updated_at": "2011-03-27T20:30:53Z",
    "author_association": "MEMBER",
    "body": "OK, this context manager seems to work. I'd like to refine it a bit, though - at present, it hits the database no matter what. If when we enter the block, we fingerprint the readline history in some way (e.g. can we get the last 10 items?), then we can avoid reloading the history in the cases where the block needed no user input.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/928086",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-928086",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 928086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyODA4Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-28T21:10:54Z",
    "updated_at": "2011-03-28T21:10:54Z",
    "author_association": "MEMBER",
    "body": "This should improve performance a bit: if the last 10 entries in readline are the same as when we entered the block, it doesn't bother clearing and refilling readline.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/950239",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-950239",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 950239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MDIzOQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T03:13:53Z",
    "updated_at": "2011-04-03T03:13:53Z",
    "author_association": "MEMBER",
    "body": "This is now great, many thanks!  Since I have it ready here, I'll just merge it now and it will get closed.\n\n@efiring, thanks a lot for the bug report!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951205",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951205",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTIwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T15:14:33Z",
    "updated_at": "2011-04-03T15:14:33Z",
    "author_association": "MEMBER",
    "body": "The only thing I should mention is something I saw on Stackoverflow - do we want to offer the user a version of raw_input wrapped with this, so that their input doesn't get added to readline history?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951429",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951429",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTQyOQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T17:08:09Z",
    "updated_at": "2011-04-03T17:08:09Z",
    "author_association": "MEMBER",
    "body": "Sorry, not sure what you mean... Do you have a link to the SO discussion so I can understand better?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951458",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTQ1OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T17:19:21Z",
    "updated_at": "2011-04-03T17:19:21Z",
    "author_association": "MEMBER",
    "body": "Here:\nhttp://stackoverflow.com/questions/5506728/remove-items-from-ipythons-history\n\nIn short: what we do for subprograms and %debug, we could also do for calls\nto raw_input, or even for all user code. That way, when the user code asks\nfor input, what they type doesn't go into readline history.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951483",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTQ4Mw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T17:30:07Z",
    "updated_at": "2011-04-03T17:30:07Z",
    "author_association": "MEMBER",
    "body": "Ok, this sounds fine, but it should be exposed as a separate method.\nWe shouldn't do this trapping by monkeypatching the system's\nraw_input.  Exposing a utility function that wraps this functionality\nfor people to call is OK, though...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951504",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951504",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTUwNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T17:37:36Z",
    "updated_at": "2011-04-03T17:37:36Z",
    "author_association": "MEMBER",
    "body": "OK. Is the best place to expose it as a method on the InteractiveShell? Or on the TerminalInteractiveShell, since we're not using readline elsewhere? TIS.user_raw_input() ? Or we could just execute user code inside the context manager, so that anything they type before our next prompt is dropped from readline.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951521",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951521",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTUyMQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T17:43:58Z",
    "updated_at": "2011-04-03T17:43:58Z",
    "author_association": "MEMBER",
    "body": "On Sun, Apr 3, 2011 at 10:37 AM, takluyver\nreply@reply.github.com\nwrote:\n\n> OK. Is the best place to expose it as a method on the InteractiveShell? Or on the TerminalInteractiveShell, since we're not using readline elsewhere? TIS.user_raw_input() ? Or we could just execute user code inside the context manager, so that anything they type before our next prompt is dropped from readline.\n\nI think a TIS method is the right place.  I don't want to do it by\ndefault, because concievably someone could want to have their\napplication actually fill readline history.  And in that case, if our\ncontext manager is hardwired it becomes very difficult for them to\nchange that, short of reimplementing core ipython methods.\n\nSo I think an easily usable public api for this is the right approach,\nand people who care enough about this can call that instead of plain\nraw_input.\n\nQuestion, is it possible to make this a standalone function instead of\na method of TIS?  Or does it really need to access the shell object?\nIf it can be made a standalone function (without playing nasty tricks\nwith globals) that would be best, otherwise a TIS method seems like\nthe best alternative.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951692",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951692",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTY5Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T18:58:08Z",
    "updated_at": "2011-04-03T18:58:08Z",
    "author_association": "MEMBER",
    "body": "I think the crucial link to the shell is the readline_no_record decorator.That could be made into a global variable, although I know some people frown on that practice. Other than that, I believe the shell's `readline` attribute is just a reference to the imported readline module.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951733",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951733",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTczMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T19:13:46Z",
    "updated_at": "2011-04-03T19:13:46Z",
    "author_association": "MEMBER",
    "body": "Well, what's important is not to expose as a global module-level\nvariable anything that has references to a running ipython shell\nobject.  In the past we've had (again, the usual historical mess) a\nlot of that, and it causes many problems.  Assuming there's a single\n'master' ipython object makes test isolation hard and introduces nasty\nhidden effects when embedding.\n\nNow, if the only global is the self.readline thing that points to a\nmodule, that probably can just be done away with.  In fact, I think we\nhave an open ticket somewhere about that precisely, there's really no\ngood architectural reason for that to be there.\n\nIn summary, if this can be done as a standalone function that doesn't\nreally depend on the existance of any running ipython kernel, that\nwould be the ideal solution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951739",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951739",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTczOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T19:17:47Z",
    "updated_at": "2011-04-03T19:17:47Z",
    "author_association": "MEMBER",
    "body": "OK, I'll look into it, and make a new pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/951751",
    "html_url": "https://github.com/ipython/ipython/pull/319#issuecomment-951751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/319",
    "id": 951751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MTc1MQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-03T19:23:03Z",
    "updated_at": "2011-04-03T19:23:03Z",
    "author_association": "MEMBER",
    "body": "Great, thanks!\n"
  }
]
