[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28607940",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28607940",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28607940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjA3OTQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-15T22:13:55Z",
    "updated_at": "2013-11-15T22:13:55Z",
    "author_association": "MEMBER",
    "body": "It's not as simple as this. The entry points created are not quite the same for Python 2 and 3, so this can't work just yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28608939",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28608939",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28608939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjA4OTM5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-15T22:29:50Z",
    "updated_at": "2013-11-15T22:29:50Z",
    "author_association": "MEMBER",
    "body": "Plus, the dependencies of IPython vary by platform, so the lack of logic (the main reason wheels are faster) means that we can't use platform-independent wheels until/unless that is addressed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28613320",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28613320",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28613320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjEzMzIw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-15T23:54:40Z",
    "updated_at": "2013-11-16T00:21:02Z",
    "author_association": "MEMBER",
    "body": "Since the benefit of wheels for source-only packages like IPython is minimal, and the cost of supporting them for IPython in particular is high (currently, we would need to make at least six platform and version-dependent wheels), I propose we close this and consider wheels at a later point, either when wheels address the needs of IPython, or those needs change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28618725",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28618725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28618725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE4NzI1",
    "user": {
      "login": "dholth",
      "id": 208018,
      "node_id": "MDQ6VXNlcjIwODAxOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/208018?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dholth",
      "html_url": "https://github.com/dholth",
      "followers_url": "https://api.github.com/users/dholth/followers",
      "following_url": "https://api.github.com/users/dholth/following{/other_user}",
      "gists_url": "https://api.github.com/users/dholth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dholth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dholth/subscriptions",
      "organizations_url": "https://api.github.com/users/dholth/orgs",
      "repos_url": "https://api.github.com/users/dholth/repos",
      "events_url": "https://api.github.com/users/dholth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dholth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T03:23:01Z",
    "updated_at": "2013-11-16T03:23:01Z",
    "author_association": "NONE",
    "body": "It is already possible to do conditional dependencies with simple expressions called environment markers; the \"wheel\" distribution does that to only require argparse on Python 2.6.\n\nThere isn't any support for naming ipython26 / ipython30 script wrappers. This is something we want for pip itself too but it won't happen until we specify and implement Metadata 2.0. (We will probably also get better script wrappers than the setuptools implementation.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28635245",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28635245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28635245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjM1MjQ1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T20:39:27Z",
    "updated_at": "2013-11-16T20:42:17Z",
    "author_association": "MEMBER",
    "body": "Thanks, that might be helpful. Where are the docs for environment markers? Searching the setuptools or wheel docs turns up no results.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28635599",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28635599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28635599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjM1NTk5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T20:56:37Z",
    "updated_at": "2013-11-16T20:56:37Z",
    "author_association": "MEMBER",
    "body": "> There isn't any support for naming ipython26 / ipython30 script wrappers. This is something we want for pip itself too but it won't happen until we specify and implement Metadata 2.0\n\nSounds good, I know pip and nose do similar things - we based our current behavior on theirs. Perhaps we should wait for metadata 2.0 to use wheels for IPython, then. Or at least wait for that to do universal packages.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28636060",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28636060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28636060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjM2MDYw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-16T21:17:45Z",
    "updated_at": "2013-11-16T21:17:45Z",
    "author_association": "MEMBER",
    "body": "The unfortunate push caused by pythonwheels.com has even caused packages as prominant as setuptools to make exactly this mistake. If you pip install the current setuptools wheel, it will install an `easy_install-3.3` entry point, no matter what Python you use to install it. This is exactly what we are trying to avoid, and why the pythonwheels shaming website is so counterproductive.\n\nTo test this, I did in a fresh virtualenv:\n\neasy_install --upgrade setuptools pip\npip install --ignore-installed --use-wheel setuptools\n\nAnd the result is that I do not have `easy_install` anymore. It created non-executable `easy_install.pya` and `easy_install-3.3.pya` files.  So not only are they the wrong version, they don't work at all. My guess is the wheel was created on Windows, and did a bunch of Windows-specific logic. Then it _incorrectly_ marked the wheel as universal, even though it is actually specific to Python 3.3 on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28642904",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28642904",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28642904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQyOTA0",
    "user": {
      "login": "ncoghlan",
      "id": 1026649,
      "node_id": "MDQ6VXNlcjEwMjY2NDk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncoghlan",
      "html_url": "https://github.com/ncoghlan",
      "followers_url": "https://api.github.com/users/ncoghlan/followers",
      "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
      "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
      "repos_url": "https://api.github.com/users/ncoghlan/repos",
      "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-17T05:22:07Z",
    "updated_at": "2013-11-17T05:22:07Z",
    "author_association": "NONE",
    "body": "I filed an issue against setuptools regarding the lack of documentation for the environment marker support (https://bitbucket.org/pypa/setuptools/issue/109/environment-marker-support-is-not).\n\nSeveral rough edges are being filed off pip's handling of wheels in pip 1.5 (some because the pip team were already working on them, others specifically because they're needed for the PEP 453 integration into the CPython installers). Waiting until after pip 1.5 is released before publishing wheels would certainly be a reasonable idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/28642935",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-28642935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 28642935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQyOTM1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-17T05:24:35Z",
    "updated_at": "2013-11-17T05:24:35Z",
    "author_association": "MEMBER",
    "body": "Sounds good. Closing this then, and we can revisit it later when the pip/wheel situation has progressed a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30118905",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-30118905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 30118905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTE4OTA1",
    "user": {
      "login": "pfmoore",
      "id": 1110419,
      "node_id": "MDQ6VXNlcjExMTA0MTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfmoore",
      "html_url": "https://github.com/pfmoore",
      "followers_url": "https://api.github.com/users/pfmoore/followers",
      "following_url": "https://api.github.com/users/pfmoore/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions",
      "organizations_url": "https://api.github.com/users/pfmoore/orgs",
      "repos_url": "https://api.github.com/users/pfmoore/repos",
      "events_url": "https://api.github.com/users/pfmoore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfmoore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-09T09:57:20Z",
    "updated_at": "2013-12-09T09:57:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to note, the setuptools `.pya` files were not a wheel issue. They were caused by a setuptools packaging error (as I understand it) where the maintainers built the wheel using an experimental \"executable archive\" format that is not generally supported. That's since been fixed.\n\nThe question of versioned entry points has been discussed on the distutils list. There doesn't seem to be consistency on what projects provide (unversioned, `name-X`, `nameX`, `name-X.Y`, `nameX.Y` pick any N from 5 :-)). Even pip and setuptools differ in their conventions. Unless we get a consensus that we always produce a specific set of versioned wrappers, we'll need to define a \"mini-language\" to allow projects to specify for themselves. Feedback on this from projects (to explain why they chose the formats they did, in particular) would be useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30152085",
    "html_url": "https://github.com/ipython/ipython/pull/4547#issuecomment-30152085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4547",
    "id": 30152085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTUyMDg1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-09T17:24:43Z",
    "updated_at": "2013-12-09T17:24:43Z",
    "author_association": "MEMBER",
    "body": "For reference: we now install `ipython` and `ipythonX` (X=2 or 3), and other scripts following the same pattern. We previously installed only `ipython` on Python 2, and only `ipython3` on Python 3, but this was somewhat surprising if you installed IPython in a Python 3 virtualenv or conda env.\n"
  }
]
