[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18787034",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-18787034",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 18787034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Nzg3MDM0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-01T10:49:50Z",
    "updated_at": "2013-06-01T10:49:50Z",
    "author_association": "MEMBER",
    "body": "Could the 2x factor be modifiable ? We're starting to see higher resolution that have bastard format that are not 2x (Chromebook pixel IIRC) . \nI'm convince that their are only few users, but having a `Bool` would change the api in the future if we want multiple option. \nIf you think that unnecessary for now, that also fine with me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18792772",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-18792772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 18792772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzkyNzcy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-01T17:05:42Z",
    "updated_at": "2013-06-01T17:05:42Z",
    "author_association": "MEMBER",
    "body": "could introduce an arbitrary scale factor, I guess.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18808121",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-18808121",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 18808121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODA4MTIx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-02T15:40:29Z",
    "updated_at": "2013-06-02T15:40:29Z",
    "author_association": "MEMBER",
    "body": "> could introduce an arbitrary scale factor, I guess.\n\nUp to you, You probably have more devices with variable resolutions around you than I do. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19504217",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-19504217",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 19504217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA0MjE3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-15T22:02:35Z",
    "updated_at": "2013-06-15T22:02:35Z",
    "author_association": "MEMBER",
    "body": "I don't think we need to do the arbitrary scale factor yet.  I don't have a retina screen to test, but the code looks good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20219180",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-20219180",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 20219180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE5MTgw",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T23:03:13Z",
    "updated_at": "2013-06-28T23:03:13Z",
    "author_association": "MEMBER",
    "body": "we figured that we can add the arbitrary factor later, so decided to merge as is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210237614",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-210237614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 210237614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDIzNzYxNA==",
    "user": {
      "login": "chuckdries",
      "id": 1351436,
      "node_id": "MDQ6VXNlcjEzNTE0MzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1351436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chuckdries",
      "html_url": "https://github.com/chuckdries",
      "followers_url": "https://api.github.com/users/chuckdries/followers",
      "following_url": "https://api.github.com/users/chuckdries/following{/other_user}",
      "gists_url": "https://api.github.com/users/chuckdries/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chuckdries/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chuckdries/subscriptions",
      "organizations_url": "https://api.github.com/users/chuckdries/orgs",
      "repos_url": "https://api.github.com/users/chuckdries/repos",
      "events_url": "https://api.github.com/users/chuckdries/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chuckdries/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T01:27:28Z",
    "updated_at": "2016-04-15T01:27:28Z",
    "author_association": "NONE",
    "body": "The command %config InlineBackend.figure_format = 'retina' appears to work well in Jupiter Notebooks but not in qtconsole. Any ideas why?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210286695",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-210286695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 210286695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDI4NjY5NQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T04:45:54Z",
    "updated_at": "2016-04-15T04:45:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chuckdries, that's becauser qtconsole is not using Qt5, I think. According to Qt release notes, the first version that truly solves retina display problems is Qt 5.6 (released a couple of weeks ago :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210451648",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-210451648",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 210451648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDQ1MTY0OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T12:52:10Z",
    "updated_at": "2016-04-15T12:52:10Z",
    "author_association": "MEMBER",
    "body": "Qtconsole can run on PyQt5, I believe. I suspect there's something the qtconsole code needs to do to display the image at double-resolution, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210502969",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-210502969",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 210502969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDUwMjk2OQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T15:22:05Z",
    "updated_at": "2016-04-15T15:22:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, Qtconsole can run on PyQt5, but Anaconda (at least) is not using it. But I thought just setting `retina` for `InlineBackend.figure_format` was enough to have 2x images.\n\n@minrk, is that not the case?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210601654",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-210601654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 210601654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDYwMTY1NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T19:08:51Z",
    "updated_at": "2016-04-15T19:08:51Z",
    "author_association": "MEMBER",
    "body": "That's enough for the spec, but I'm not sure if the qtconsole handles it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/241127288",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-241127288",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 241127288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTEyNzI4OA==",
    "user": {
      "login": "wjakob",
      "id": 1203629,
      "node_id": "MDQ6VXNlcjEyMDM2Mjk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1203629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wjakob",
      "html_url": "https://github.com/wjakob",
      "followers_url": "https://api.github.com/users/wjakob/followers",
      "following_url": "https://api.github.com/users/wjakob/following{/other_user}",
      "gists_url": "https://api.github.com/users/wjakob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wjakob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wjakob/subscriptions",
      "organizations_url": "https://api.github.com/users/wjakob/orgs",
      "repos_url": "https://api.github.com/users/wjakob/repos",
      "events_url": "https://api.github.com/users/wjakob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wjakob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T20:31:49Z",
    "updated_at": "2016-08-19T20:31:49Z",
    "author_association": "NONE",
    "body": "Specifying\n\n```\nInlineBackend.figure_format = 'retina'\n```\n\nat the beginning of every notebook indeed does the job of providing images at the right resolution, but it's unfortunate that this is always necessary as High-DPI displays are fairly common nowadays.\n\nIt _is_ possible to get a cross-platform pixel density value from the browser (javascript or CSS resolution query). To me, this seems like a much more robust and user-friendly way to do this automatically.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310828687",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310828687",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310828687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDgyODY4Nw==",
    "user": {
      "login": "dkasak",
      "id": 463342,
      "node_id": "MDQ6VXNlcjQ2MzM0Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/463342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dkasak",
      "html_url": "https://github.com/dkasak",
      "followers_url": "https://api.github.com/users/dkasak/followers",
      "following_url": "https://api.github.com/users/dkasak/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkasak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dkasak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkasak/subscriptions",
      "organizations_url": "https://api.github.com/users/dkasak/orgs",
      "repos_url": "https://api.github.com/users/dkasak/repos",
      "events_url": "https://api.github.com/users/dkasak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dkasak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T09:45:45Z",
    "updated_at": "2017-06-24T09:54:11Z",
    "author_association": "NONE",
    "body": "Is there a reason this is not the default, at least for notebooks? The out-of-the-box experience for notebooks is pretty bad right now on a higher resolution screen, with both graphics and text very visibly blurry."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310828871",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310828871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310828871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDgyODg3MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T09:49:21Z",
    "updated_at": "2017-06-24T09:49:21Z",
    "author_association": "MEMBER",
    "body": "> Is there a reason this is not the default, at least for notebooks? The out-of-the-box experience for notebooks is pretty bad right now on a higherG resolution screen, with both graphics and text very visibly blurry.\r\n\r\nYes: Because the kernel does not know it is controlled from a notebook. And even if it is controlled from a notebook it does not mean the notebook is on hi-DPI screen."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310830545",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310830545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310830545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDgzMDU0NQ==",
    "user": {
      "login": "dkasak",
      "id": 463342,
      "node_id": "MDQ6VXNlcjQ2MzM0Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/463342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dkasak",
      "html_url": "https://github.com/dkasak",
      "followers_url": "https://api.github.com/users/dkasak/followers",
      "following_url": "https://api.github.com/users/dkasak/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkasak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dkasak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkasak/subscriptions",
      "organizations_url": "https://api.github.com/users/dkasak/orgs",
      "repos_url": "https://api.github.com/users/dkasak/repos",
      "events_url": "https://api.github.com/users/dkasak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dkasak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T10:29:22Z",
    "updated_at": "2017-06-24T10:29:22Z",
    "author_association": "NONE",
    "body": "Ah, the first part explains it. As was mentioned before, it would probably be possible to query the DPI value. Would it make more sense then to implement this in Jupyter by making it send this command when the python kernel is used?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310836240",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310836240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310836240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDgzNjI0MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T12:39:06Z",
    "updated_at": "2017-06-24T12:39:06Z",
    "author_association": "MEMBER",
    "body": "You can't really do that either, as the frontend try to be as agnostic as\npossible WRT what language is implemented in the back end and sending  that\ncommand would be an IPython specific thing. Also nothing guarantee that the\nkernel is connected to a single client ( which is even more true with RT\ncollaboration comming soon)  in which case \"connected to Hi DPI\" is not a\nbinary choice.\n\nOn Jun 24, 2017 12:29, \"Denis Kasak\" <notifications@github.com> wrote:\n\n> Ah, the first part explains it. As was mentioned before, it would probably\n> be possible to query the DPI value. Would it make more sense then to\n> implement this in Jupyter by making it send this command when the python\n> kernel is used?\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/pull/3381#issuecomment-310830545>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez2sLYNa5mggrAYlKQzjSX1UHyT9Nks5sHOUDgaJpZM4AsWrs>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310837953",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310837953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310837953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDgzNzk1Mw==",
    "user": {
      "login": "dkasak",
      "id": 463342,
      "node_id": "MDQ6VXNlcjQ2MzM0Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/463342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dkasak",
      "html_url": "https://github.com/dkasak",
      "followers_url": "https://api.github.com/users/dkasak/followers",
      "following_url": "https://api.github.com/users/dkasak/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkasak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dkasak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkasak/subscriptions",
      "organizations_url": "https://api.github.com/users/dkasak/orgs",
      "repos_url": "https://api.github.com/users/dkasak/repos",
      "events_url": "https://api.github.com/users/dkasak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dkasak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T13:18:07Z",
    "updated_at": "2017-06-24T14:08:05Z",
    "author_association": "NONE",
    "body": "> You can't really do that either, as the frontend try to be as agnostic as possible WRT what language is implemented in the back end and sending that command would be an IPython specific thing. Also nothing guarantee that the kernel is connected to a single client ( which is even more true with RT collaboration comming soon) in which case \"connected to Hi DPI\" is not a binary choice.\r\n\r\nThat sounds reasonable and I realize the frontend is maximally agnostic of the backend by design. On the other hand, this particular situation is less than ideal and seems to point to a possible deficiency in the abstraction from a usability point of view. Perhaps there *is* a need for a way to specify some backend-specific configuration in Jupyter?\r\n\r\nI'm also trying to consider what a higher-by-default figure resolution would imply for lower resolution screens. I'm not too familiar with the current architecture of Jupyter, but I suppose there isn't any scaling involved so the figure would simply appear larger than usual? I'm wondering whether this is perhaps a more graceful kind of failure than displaying blurry images. Then again, if there isn't any scaling involved, I'm not sure why I even saw blur as opposed to just a very small (but sharp) figure.\r\n\r\nI guess a first reasonable step would be to at least make the syntax for this a bit less arcane and awkward, such as was suggested in #3982. `%matplotlib inline retina` or `%matplotlib inline svg` seem much cleaner than `%config InlineBackend.figure_format = 'retina'`"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310849833",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310849833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310849833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg0OTgzMw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T16:46:06Z",
    "updated_at": "2017-06-24T16:46:06Z",
    "author_association": "MEMBER",
    "body": "I do probably agree that it is time to update the default on this. I agree\nthat kernels should be agnostic to frontends, but the current default *is*\nbiased towards particular frontends with low resolution rendering. I don't\nknow the numbers, but high resolution screens are extremely popular these\ndays. I have been embarrassed multiple times showing people matplotlib on\nmy laptop and having to explain to them why it looks bad. Defaulting to\nsomething that looks good everywhere is a safe bet in my mind.\n\nI am also +1 for making the API simpler to adjust. That way if folks have\nlarge notebooks and need the lower resolution, it is easy to set it.\n\nOn Sat, Jun 24, 2017 at 6:18 AM, Denis Kasak <notifications@github.com>\nwrote:\n\n> You can't really do that either, as the frontend try to be as agnostic as\n> possible WRT what language is implemented in the back end and sending that\n> command would be an IPython specific thing. Also nothing guarantee that the\n> kernel is connected to a single client ( which is even more true with RT\n> collaboration comming soon) in which case \"connected to Hi DPI\" is not a\n> binary choice.\n>\n> That sounds reasonable and I realize the frontend is maximally agnostic of\n> the backend by design. On the other hand, it's a somewhat sad state of\n> affairs and seems to point to a possible deficiency in the abstraction from\n> a usability point of view. Perhaps there *is* a need for a way to specify\n> some backend-specific configuration in Jupyter?\n>\n> I'm also trying to consider what a higher-by-default figure resolution\n> would imply for lower resolution screens. I'm not too familiar with the\n> current architecture of Jupyter, but I suppose there isn't any scaling\n> involved so the figure would simply appear larger than usual? I'm wondering\n> whether this is perhaps a more graceful kind of failure than displaying\n> blurry images. Then again, if there isn't any scaling involved, I'm not\n> sure why I even saw blur as opposed to just a very small (but sharp) figure.\n>\n> I guess a first reasonable step would be to at least make the syntax for\n> this a bit less arcane and awkward, such as was suggested in #3982\n> <https://github.com/ipython/ipython/issues/3982>. %matplotlib inline\n> retina or %matplotlib inline svg seem much more reasonable than %config\n> InlineBackend.figure_format = 'retina'\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/pull/3381#issuecomment-310837953>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AABr0GwCmzJsiWx6i9eyLBWg9k8j1boZks5sHQyqgaJpZM4AsWrs>\n> .\n>\n\n\n\n-- \nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310861702",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310861702",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310861702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg2MTcwMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T19:44:38Z",
    "updated_at": "2017-06-24T19:44:38Z",
    "author_association": "MEMBER",
    "body": "> I do probably agree that it is time to update the default on this. I agree\r\n> that kernels should be agnostic to frontends, but the current default *is*\r\n> biased towards particular frontends with low resolution rendering. I don't\r\n> know the numbers, but high resolution screens are extremely popular these\r\n> days. I have been embarrassed multiple times showing people matplotlib on\r\n> my laptop and having to explain to them why it looks bad. Defaulting to\r\n> something that looks good everywhere is a safe bet in my mind.\r\n> \r\n> I am also +1 for making the API simpler to adjust. That way if folks have\r\n> large notebooks and need the lower resolution, it is easy to set it.\r\n\r\nIf/when we change, I would consider that close to breaking API so I would _prefer_ to have it in a major version of IPython/IPykernel."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/310863716",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-310863716",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 310863716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg2MzcxNg==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T20:25:45Z",
    "updated_at": "2017-06-24T20:25:45Z",
    "author_association": "MEMBER",
    "body": "+1\n\nSent from my iPhone\n\n> On Jun 24, 2017, at 12:44 PM, Matthias Bussonnier <notifications@github.com> wrote:\n> \n> I do probably agree that it is time to update the default on this. I agree\n> that kernels should be agnostic to frontends, but the current default is\n> biased towards particular frontends with low resolution rendering. I don't\n> know the numbers, but high resolution screens are extremely popular these\n> days. I have been embarrassed multiple times showing people matplotlib on\n> my laptop and having to explain to them why it looks bad. Defaulting to\n> something that looks good everywhere is a safe bet in my mind.\n> \n> I am also +1 for making the API simpler to adjust. That way if folks have\n> large notebooks and need the lower resolution, it is easy to set it.\n> \n> If/when we change, I would consider that close to breaking API so I would prefer to have it in a major version of IPython/IPykernel.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/398435511",
    "html_url": "https://github.com/ipython/ipython/pull/3381#issuecomment-398435511",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3381",
    "id": 398435511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODQzNTUxMQ==",
    "user": {
      "login": "kencoken",
      "id": 1108445,
      "node_id": "MDQ6VXNlcjExMDg0NDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1108445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kencoken",
      "html_url": "https://github.com/kencoken",
      "followers_url": "https://api.github.com/users/kencoken/followers",
      "following_url": "https://api.github.com/users/kencoken/following{/other_user}",
      "gists_url": "https://api.github.com/users/kencoken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kencoken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kencoken/subscriptions",
      "organizations_url": "https://api.github.com/users/kencoken/orgs",
      "repos_url": "https://api.github.com/users/kencoken/repos",
      "events_url": "https://api.github.com/users/kencoken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kencoken/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T15:12:38Z",
    "updated_at": "2018-06-19T15:12:38Z",
    "author_association": "NONE",
    "body": "Running notebook server 5.4.0 and iPython 6.3.1, and using:\r\n```\r\n%matplotlib inline\r\nimport matplotlib\r\n%config InlineBackend.figure_format = 'retina'\r\nfrom matplotlib import pyplot as plt\r\nplt.plot([1,2,3,4,5])\r\n```\r\nSeems to have no effect. I can set:\r\n```\r\nmatplotlib.rcParams['figure.dpi'] = 144\r\n```\r\nWhen running matplotlib to get retina-resolution images, but these are then displayed double-size in my notebooks.\r\n\r\nHas something changed recently to make this fix no longer function, or am I doing something stupid at my end?"
  }
]
