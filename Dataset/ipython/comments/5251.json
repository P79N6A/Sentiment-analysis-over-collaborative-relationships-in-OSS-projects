[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36476167",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36476167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36476167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc2MTY3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T02:00:29Z",
    "updated_at": "2014-03-03T02:02:09Z",
    "author_association": "MEMBER",
    "body": "Something weird is happening in the messages being sent. I get all the outputs after the first:\n\n```\nIn [1]: ccall(:printf, Cint, (Ptr{Uint8},), \"Hello world!\\n\")\nOut[1]: 13\n\nIn [2]: ccall(:printf, Cint, (Ptr{Uint8},), \"Hello world!\\n\")\nOut[2]: 13\nHello world!\n\nIn [3]: ccall(:printf, Cint, (Ptr{Uint8},), \"Hello world!\\n\")\nOut[3]: 13\nHello world!\n```\n\nNo stream message arrives from the first execution.\n\nSo stream messages are definitely handled properly. But when I inspect the traffic, I see stream messages arriving after status-idle. This shouldn't ever happen - the idle status message should always be the last message on the IOPub channel. It looks unique to ccall, because `println(\"hello\")` always works correctly. How is ccall output captured?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36477186",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36477186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36477186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc3MTg2",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T02:30:15Z",
    "updated_at": "2014-03-03T02:37:36Z",
    "author_association": "NONE",
    "body": "Julia provides a way to redirect all standard output (and standard error) to a \"pipe\" object, including stdio from external C routines.  A background task blocks on this pipe: whenever output is written, it wakes up and sends a `stream` message to the front-end, then sleeps for 100ms (to allow output to accumulate).  At the end of an execute request, before the `idle` message is sent, however, we flush stdio and send anything in the buffer to the front-end immediately.\n\nIs it possible that the ZMQ messages are just arriving out of order?\n\nEither that, or it is some side-effect of stdio buffering which makes the output not show up in the pipe until after execution finished. (cc: @loladiro).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36477252",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36477252",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36477252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc3MjUy",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T02:32:20Z",
    "updated_at": "2014-03-03T02:38:41Z",
    "author_association": "NONE",
    "body": "In any case, Julia can certainly send I/O after the `idle` status is sent, because the user can start an asynchronous background task.  For example,\n\n```\n@async for i = 1:10\n    println(i)\n    sleep(1)\nend\n```\n\nprints the integers from `1` to `10`, once per second, running in the background (in a green thread), so the stream messages are sent after the execution \"finishes\".  This works fine in the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36481568",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36481568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36481568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDgxNTY4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T04:49:00Z",
    "updated_at": "2014-03-03T04:49:38Z",
    "author_association": "MEMBER",
    "body": "That's true - the same thing can happen in Python, adding print statements from a thread for instance.\n\nThe notebook and qtconsole are a lot more sensible with of out-of-order IO because they are event-driven async apps, but the terminal console is fundamentally synchronous (messages are not handled while readline is waiting for input).\n\nI do see a place where the filtering of output is overly strict, and have addressed this in #5253. Async output may not be displayed until the next time you press enter, but it will at least be displayed eventually.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36543887",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36543887",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36543887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQzODg3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T18:44:30Z",
    "updated_at": "2014-03-03T18:44:30Z",
    "author_association": "MEMBER",
    "body": "@stevengj can you confirm that #5253 helps?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36561358",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36561358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36561358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTYxMzU4",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T21:22:49Z",
    "updated_at": "2014-03-03T21:23:02Z",
    "author_association": "NONE",
    "body": "The original problem with `ccall` seems to be fixed, but I don't get any output from `@async for i = 1:10; println(i); sleep(1); end` in the `console`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36571194",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36571194",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36571194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTcxMTk0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T22:52:10Z",
    "updated_at": "2014-03-03T22:52:10Z",
    "author_association": "MEMBER",
    "body": "Output is only handled at each REPL event, so to see any async output, you have to press enter, or submit another execution, to see it. I do see the output from your `@async` call in #5253.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36579708",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-36579708",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 36579708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTc5NzA4",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-04T00:43:50Z",
    "updated_at": "2014-03-04T00:43:50Z",
    "author_association": "NONE",
    "body": "I tried submitting more executions and I didn't see anything...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37057317",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-37057317",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 37057317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU3MzE3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T19:15:27Z",
    "updated_at": "2014-03-07T19:15:27Z",
    "author_association": "MEMBER",
    "body": "@stevengj I think we are going to merge #5253. I see it fixing both examples. Are you sure you waited long enough for the output to arrive? Here is what I see (pressing enter occasionally):\n\n``` julia\nIn [2]: @async for i = 1:10; println(i); sleep(1); end\nOut[2]: Task\n1\nIn [3]: \n2\nIn [3]: \n3\n4\n5\nIn [3]: \n6\n7\nIn [3]: \n8\n9\nIn [3]: \nIn [3]: \n10\nIn [3]: \n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37065149",
    "html_url": "https://github.com/ipython/ipython/issues/5251#issuecomment-37065149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5251",
    "id": 37065149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY1MTQ5",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-07T20:38:16Z",
    "updated_at": "2014-03-07T20:38:16Z",
    "author_association": "NONE",
    "body": "@minrk, sorry, I didn't notice that it wasn't merged yet; I was just using `master`.  Looks good!\n"
  }
]
