[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3682775",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3682775",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3682775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI3NzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T06:49:55Z",
    "updated_at": "2012-01-27T06:49:55Z",
    "author_association": "MEMBER",
    "body": "Looking great!  A few comments:\n- plaintext: probably a good idea, so there's a way for people to more easily implement other transformations onto their notebooks.\n- I think we can leave for now both markdown and rst.  Honestly for lots of stuff markdown is just easier to type...\n- UI element: My vote would be for a dropdown menu in the (yet to be written) toolbar, that both shows the current style and lets you select it. Most word processors and lyx work this way, and I think it's a good solution.  It gives immediate visual feedback and makes changing styles easily, so it's efficient use of the screen space used.\n- keybindings: I'd make C-m-<1>..<6> for heading-1..6.\n\nAwesome job!  I haven't reviewed the code yet, just playing with the functionality for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3682993",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3682993",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3682993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODI5OTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T07:23:37Z",
    "updated_at": "2012-01-27T07:23:37Z",
    "author_association": "MEMBER",
    "body": "- For the plaintext cell, would you just call it that and get away with the notion of a RST cell altogether.\n- for the UI element, I agree that something in the toolbar is in order and I think your idea is a good one.  Are you OK with that going in as a separate PR?\n- Keybindings: these are already in place, let me know if they are not working.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3683331",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3683331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3683331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODMzMzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T08:04:51Z",
    "updated_at": "2012-01-27T08:04:51Z",
    "author_association": "MEMBER",
    "body": "Hey,\n\nOn Thu, Jan 26, 2012 at 11:23 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> - For the plaintext cell, would you just call it that and get away with the notion of a RST cell altogether.\n\nWell, I'm wondering if it doesn't make sense to have both: rst cells\nwould be meant to be post-processed by docutils/sphinx, etc.  While\nplaintext ones would be left alone by all exporters (but users could\nwrite their own tools that do something special to them).\n\n> - for the UI element, I agree that something in the toolbar is in order and I think your idea is a good one. Â Are you OK with that going in as a separate PR?\n\nOh sure, that's totally for later.  It's fine if for now there's not\nmuch UI  feedback on the style, I think the fact that they render\nvisibly differently is OK for the time being.\n\n> - Keybindings: these are already in place, let me know if they are not working.\n\nAh, I didn't realize because they weren't listed in the keybindings\nhelp screen.  Which btw, is starting to get long in the vertical\ndirection.  I wonder if we should make it two-columns, like the gmail\none (type ? while in the message list view to see theirs).\n\nBut they seem to work fine, which is awesome!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3696757",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3696757",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3696757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTY3NTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T00:24:21Z",
    "updated_at": "2012-01-28T00:24:21Z",
    "author_association": "MEMBER",
    "body": "- I think we should have one plain text cell type.  The implementation of latex/RST/plaintext in the notebook UI and the nbformat would be identical.  It would be very redundant to have all of these cell types.\n- Should we increment the nbformat version?  Notebooks with the new heading and RST cells cannot be opened by earlier versions of the notebook.  Earlier notebooks open fine with the new code.  I hate to have to do this, but we probably should.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3697397",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3697397",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3697397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTczOTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T01:49:05Z",
    "updated_at": "2012-01-28T01:49:05Z",
    "author_association": "MEMBER",
    "body": "Can I ask why, in general, RST is abbreviated (and as the unconventional RST no less), and others are not?  It seems like the menu item should say 'reStructuredText', or at least use the more common 'reST' abbreviation if that's too long for some reason.  Abbreviations in menu items are generally a bad idea.\n\nAnd yes, I think we do need to increment the notebook version if you are adding things that aren't sensible in previous versions.  We also should add all the planned cell metadata (UUIDs, etc.) in the next revision, and ideally the hash mechanism Stefan would need for his plan to reduce the enormous network traffic on save, which will be critical once remote notebook servers of anything beyond trivial notebooks become common.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3697936",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3697936",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3697936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTc5MzY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T03:31:34Z",
    "updated_at": "2012-01-28T03:31:34Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jan 27, 2012 at 5:49 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> Can I ask why, in general, RST is abbreviated (and as the unconventional RST no less), and others are not? Â It seems like the menu item should say 'reStructuredText', or at least use the more common 'reST' abbreviation if that's too long for some reason. Â Abbreviations in menu items are generally a bad idea.\n\nHehe, good question.  I am completely unsatisfied with the traditional\nspellings and abbreviations of restructured text.  I picked RST\nbecause it is a reasonable linear combination of the the filename\nextension and acronym.  From the Wikipedia page:\n\n\"reStructuredText is sometimes abbreviated as RST, ReST, or reST\"\n\nI suppose \"reStructuredText\" is the best non-abbreviated version and I\ndon't mind going with that....But I do think we should only have a\nplaintext cell and not separate ones for latex/rest/plaintext, which\neliminates this decision altogether.\n\n> And yes, I think we do need to increment the notebook version if you are adding things that aren't sensible in previous versions. Â We also should add all the planned cell metadata (UUIDs, etc.) in the next revision, and ideally the hash mechanism Stefan would need for his plan to reduce the enormous network traffic on save, which will be critical once remote notebook servers of anything beyond trivial notebooks become common.\n\nOK I will increment the nbformat version in this PR.  I agree that we\nshould revisit the nbformat before we release to see if there are\nother things we need to add in.  But let's take one thing at a time\nand focus on the reST and heading cells in this PR.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1331#issuecomment-3697397\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3698071",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3698071",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3698071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTgwNzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T04:05:40Z",
    "updated_at": "2012-01-28T04:05:52Z",
    "author_association": "MEMBER",
    "body": "> But I do think we should only have a\n> plaintext cell and not separate ones for latex/rest/plaintext, which\n> eliminates this decision altogether.\n\nSo there's just one cell type for 'untransformed'?  Then I think it should definitely _not_ be called RST.  How about calling it 'raw'?\n\n> But let's take one thing at a time and focus on the reST and heading cells in this PR.\n\nYes, I didn't mean that this should all be part of the same PR, I was just making the point that since we have additions planned that already require incrementing the format, we don't need to try to fit this change into the previous version since there will never be a release with this change and not a new format.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3702637",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3702637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3702637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDI2Mzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T19:03:08Z",
    "updated_at": "2012-01-28T19:03:08Z",
    "author_association": "MEMBER",
    "body": "> So there's just one cell type for 'untransformed'? Â Then I think it should definitely _not_ be called RST, then. Â How about calling it 'raw'?\n\nI have not implemented this yet, but I was going to call these cells\n\"Plaintext\".\n\n> Yes, I didn't mean that this should all be part of the same PR, I was just making the point that since we have additions planned that already require incrementing the format, we don't need to try to fit this change into the previous version since there will never be a release with this change and not a new format.\n\nAhh OK this sounds good.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1331#issuecomment-3698071\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3704365",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3704365",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3704365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQzNjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-28T22:16:42Z",
    "updated_at": "2012-01-28T22:16:42Z",
    "author_association": "MEMBER",
    "body": "I'm OK with leaving just one plaintext cell type for now.  We can always revisit that later if we find a compelling need for both plaintext and explicit reST cells for some reason.\n\n@ellisonbg, it seems that once you update the cell name in the menu, this one is almost ready to go, right?  The only thing I see missing is that the new cell types will need to be added to the drop-list in the new toolbar, which got merged in the meantime.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3710816",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3710816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3710816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTA4MTY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-29T20:09:56Z",
    "updated_at": "2012-01-29T20:09:56Z",
    "author_association": "MEMBER",
    "body": "BTW, I suggest we wait on merging this one until #1332 is in, to avoid creating that conflict again which @astraw has already had to manually disentangle twice.  That one seems more or less good to go, I just don't want to merge it without Brian having a chance to look at it first in its final state.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3711725",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3711725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3711725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE3MjU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-29T22:00:15Z",
    "updated_at": "2012-01-29T22:00:15Z",
    "author_association": "MEMBER",
    "body": "More work is needed on this one before it is merged, #1332 should be\nmerged before this one.\n\nOn Sun, Jan 29, 2012 at 12:09 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> BTW, I suggest we wait on merging this one until #1332 is in, to avoid creating that conflict again which @astraw has already had to manually disentangle twice. Â That one seems more or less good to go, I just don't want to merge it without Brian having a chance to look at it first in its final state.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1331#issuecomment-3710816\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3712030",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3712030",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3712030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTIwMzA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-29T22:34:14Z",
    "updated_at": "2012-01-29T22:34:14Z",
    "author_association": "MEMBER",
    "body": "OK, I just merged #1332 and there are no conflicts here, which is good.  It also seems to work fine, the only changes I see still pending are:\n- Change the RST label, and have a keybinding for this cell type.\n- List the cell type keybindings in the help popup.\n- Add the new cell types to the dropdown menu in the toolbar.  That would be IMO sufficient UI feedback for this. I imagine later on we could for example add something in the editing mode where a small area atop the cell itself shows its type, so that even without the toolbar one could directly see the type of a cell when editing it.  But this is just thinking out loud for the future; as far as I'm concerned once the dropdown menu lists all cell types, we're good for now.\n\nDid I miss anything?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732404",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3732404",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3732404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI0MDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:27:57Z",
    "updated_at": "2012-01-31T02:27:57Z",
    "author_association": "MEMBER",
    "body": "I'm not sure this was ready for merge, because the notebook format version handling was not fully fleshed out.  For instance, if I open an existing notebook and add rst/heading cells to it, and save it, it _remains_ notebook format v2, which is inaccurate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732449",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3732449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3732449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI0NDk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:32:15Z",
    "updated_at": "2012-01-31T02:32:15Z",
    "author_association": "MEMBER",
    "body": "@minrk:  Hmm, I thought I tested everything pretty well, but looks like there is a bug.  Do you have an example of a notebook that behaves in this way, or is it completely general?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732478",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3732478",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3732478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI0Nzg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:34:35Z",
    "updated_at": "2012-01-31T02:34:35Z",
    "author_association": "MEMBER",
    "body": "What if you open the notebook and resave without adding any new cell types?\n\nOn Mon, Jan 30, 2012 at 6:27 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> I'm not sure this was ready for merge, because the notebook format version handling was not fully fleshed out. Â For instance, if I open an existing notebook and add rst/heading cells to it, and save it, it _remains_ notebook format v2, which is inaccurate.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1331#issuecomment-3732404\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732497",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3732497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3732497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI0OTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:36:27Z",
    "updated_at": "2012-01-31T02:36:27Z",
    "author_association": "MEMBER",
    "body": "Also, can you do an extra notebook reload or two.  The nbformat used\nto save a notebook is set in the Javascript code and if there is\ncaching you would see this behavior.\n\nOn Mon, Jan 30, 2012 at 6:34 PM, Brian Granger ellisonbg@gmail.com wrote:\n\n> What if you open the notebook and resave without adding any new cell types?\n> \n> On Mon, Jan 30, 2012 at 6:27 PM, Min RK\n> reply@reply.github.com\n> wrote:\n> \n> > I'm not sure this was ready for merge, because the notebook format version handling was not fully fleshed out. Â For instance, if I open an existing notebook and add rst/heading cells to it, and save it, it _remains_ notebook format v2, which is inaccurate.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ipython/ipython/pull/1331#issuecomment-3732404\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732597",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3732597",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3732597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI1OTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:46:07Z",
    "updated_at": "2012-01-31T02:46:07Z",
    "author_association": "MEMBER",
    "body": "Hm, could have been my mistake being too hasty.  Do we really want to be silently upgrading users' notebooks to a version incompatible with the stable release, with no indication that this is happening at all?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3737870",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3737870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3737870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc4NzA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T12:10:51Z",
    "updated_at": "2012-01-31T12:10:51Z",
    "author_association": "MEMBER",
    "body": "You should send a message on the dev list that notebook version is bumped, hopefully **I** do have versionning of **my** .ipynb files\nAnd the notebook example might have been updated, but they still speak of a \"Left Panel\" by the way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3738597",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3738597",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3738597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg1OTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T13:09:35Z",
    "updated_at": "2012-01-31T13:09:35Z",
    "author_association": "MEMBER",
    "body": "Yes, let's be careful with this in the future.   This very nearly bit me yesterday, as I was writing (using master) a [set of notebooks](https://github.com/ivanov/AY250) for a lecture at Berkeley, that were meant to be used by a bunch of students using EPD.  Fortunately I hadn't pulled during the day, but it could have led to an awkward scramble to disentangle a version mess in front of the whole class (they were meant to follow me along).\n\nSo let's try to be pretty strict from now on about announcing clearly whenever we bump the notebook version number so at least it doesn't happen silently under the hood.  \n\nAnd I think that whenever a notebook gets opened that's in an older format, we should pop up immediately a dialog saying something like:\n\n\"This notebook was saved in an older format X, note that the first time you save it, it will be written in the new format Y.  If you do not want this to happen, reopen it with the older version of IPython used to create it.\"\n\nor similar.  We don't want to say that on save, b/c by that point the user may have already done a bunch of work, so I think that warning on open is the right approach.\n\nI'm at the airport about to board a flight, so I'll be offline at least until tomorrow; but I think pinging the lists (both -dev and -user) soon explaining this would  be a good idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3743721",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3743721",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3743721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDM3MjE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T17:38:31Z",
    "updated_at": "2012-01-31T17:38:31Z",
    "author_association": "MEMBER",
    "body": "A few points:\n- We have always been handling notebook conversions in this manner -\n  the only difference is that not many people ever had v1 notebooks\n  (mostly a few core devs) and we converted our notebooks long ago and\n  never released the v1 code.\n- We can add a dialog/notification when a notebook is converted to a\n  new version...\n- But, we can't give the user the option to not convert.  The reason\n  is that by the time the notebook has gotten to the client/JS it has\n  already been converted.  The client/JS code only knows how to handle\n  the current version of the nbformat and _all_ conversions are done\n  server side before passing the notebook to the client.\n- I will add the dialog and some other code to handle these issues in\n  a separate PR.\n- I will also notify the list about these changes.\n\nOn Tue, Jan 31, 2012 at 5:09 AM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> Yes, let's be careful with this in the future. Â  This very nearly bit me yesterday, as I was writing (using master) a [set of notebooks](https://github.com/ivanov/AY250) for a lecture at Berkeley, that were meant to be used by a bunch of students using EPD. Â Fortunately I hadn't pulled during the day, but it could have led to an awkward scramble to disentangle a version mess in front of the whole class (they were meant to follow me along).\n> \n> So let's try to be pretty strict from now on about announcing clearly whenever we bump the notebook version number so at least it doesn't happen silently under the hood.\n> \n> And I think that whenever a notebook gets opened that's in an older format, we should pop up immediately a dialog saying something like:\n> \n> \"This notebook was saved in an older format X, note that the first time you save it, it will be written in the new format Y. Â If you do not want this to happen, reopen it with the older version of IPython used to create it.\"\n> \n> or similar. Â We don't want to say that on save, b/c by that point the user may have already done a bunch of work, so I think that warning on open is the right approach.\n> \n> I'm at the airport about to board a flight, so I'll be offline at least until tomorrow; but I think pinging the lists (both -dev and -user) soon explaining this would Â be a good idea.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1331#issuecomment-3738597\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3744322",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3744322",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3744322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDQzMjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T18:05:11Z",
    "updated_at": "2012-01-31T18:05:11Z",
    "author_association": "MEMBER",
    "body": "- We have always been handling notebook conversions in this manner -\n  the only difference is that not many people ever had v1 notebooks\n  (mostly a few core devs) and we converted our notebooks long ago and\n  never released the v1 code.\n\nRight, and this is why this is the first _real_ notebook increment.  The notebook format was v2 before it was even in master, I think, and certainly well before anybody other than you and Fernando were using it for real.\n- We can add a dialog/notification when a notebook is converted to a new version...\n\nYes, I think we must do this.  It is _terrible_ practice to silently upgrade in a destructive way, which we are doing in master now.  Information is preserved, but compatibility is destroyed.\n- But, we can't give the user the option to not convert.  The reason\n  is that by the time the notebook has gotten to the client/JS it has\n  already been converted.  The client/JS code only knows how to handle\n  the current version of the nbformat and _all_ conversions are done\n  server side before passing the notebook to the client.\n\nI think that's fair. We just want to avoid destroying their ability to collaborate with 0.12 users without giving them a chance to take some precautions.  Probably just offering to: save / cancel / duplicate old version before save should do it.  If we want a 'compatibility mode', we would need to define a v3->v2 conversion on the server side, which would of course not be lossless as we are adding new metadata and cell types, but would still probably be useful.\n- I will add the dialog and some other code to handle these issues in a separate PR.\n- I will also notify the list about these changes.\n\nGreat, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3772417",
    "html_url": "https://github.com/ipython/ipython/pull/1331#issuecomment-3772417",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1331",
    "id": 3772417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzI0MTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-02T04:17:53Z",
    "updated_at": "2012-02-02T04:17:53Z",
    "author_association": "MEMBER",
    "body": "Just to say that I think the dialog as added is fine.  As long as the user has a way to back off from the destructive write (not everybody has backups or uses version control), that's OK.  So I think in the future (there _will_ be more instances of this) we can keep this policy: notify both user/dev lists, and add a similar dialog that at least lets people back off manually before they clobber the on-disk version of their notebooks.\n"
  }
]
