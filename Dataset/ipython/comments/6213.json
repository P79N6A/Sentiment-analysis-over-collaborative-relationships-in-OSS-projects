[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52249193",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52249193",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52249193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ5MTkz",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:44:00Z",
    "updated_at": "2014-08-14T21:48:50Z",
    "author_association": "NONE",
    "body": "I have implemented some basic modifications to IPython aimed at getting it running on Jython.\nThey include a _process implementation for Java, based on CLI and poxis and some other modifications.\nIt can be found [here](https://github.com/Brittix1023/ipython/tree/basic-jython-fixes).\nUnfortunately, Jython does not seem to like a lot of the decorators used in IPython.core.history. This can be seen with:\n\n``` python\n>>> import sys\n# I was using standalone Jython, so this gives sys.executable a non-None value\n>>> sys.executable = 'java.exe'\n>>> from IPython import start_ipython()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"IPython\\__init__.py\", line 120, in start_ipython\n.....\n  File \"IPython\\core\\interactiveshell.py\", line 1586, in init_history\n    self.history_manager = HistoryManager(shell=self, parent=self)\n  File \"IPython\\core\\history.py\", line 498, in __init__\n    self.new_session()\n  TypeError: new_session() takes exactly 2 arguments (1 given)\n```\n\n_new_session_ defines default values, but the _@needs_sqlite_ decorator does not seem to be working on Jython. I seem to recall this failing on Jython 2.7b2 and the Jython I build from the Jython repo about a week ago.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52250002",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52250002",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52250002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjUwMDAy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:51:54Z",
    "updated_at": "2014-08-14T21:51:54Z",
    "author_association": "MEMBER",
    "body": "Is it because we're using the decorator library? If you rewrite needs sqlite like this:\n\n``` python\ndef needs_sqlite(f):\n    if sqlite3 is None or not self.enabled:\n            return lambda self, *a, **kw: []\n        return\n    else:\n        return f\n```\n\ndoes it work? It might be that decorator is relying on something CPython specific. If it still doesn't work, I think it's a bug in Debian.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52251990",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52251990",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52251990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjUxOTkw",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T22:11:48Z",
    "updated_at": "2014-08-14T22:12:52Z",
    "author_association": "NONE",
    "body": "It seems that the decorator library does not work correctly on Jython when the decorated functions have default arguments:\n\n``` python\n@decorator\ndef deco(f,a):\n  return f(a)   # identity decorator\n\n@deco\ndef foo(a=5):\n   return a*a\n\nfoo(6) # works fine on CPython and Jython\nfoo() # works on CPython, TypeError on Jython\n```\n\nWill have to report this to the Jython guys, as _decorator_ does not seem to use anything special.\n\nIn the mean time, I will work on modifying the decorated IPython functions....\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52252938",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52252938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52252938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjUyOTM4",
    "user": {
      "login": "jimbaker",
      "id": 160446,
      "node_id": "MDQ6VXNlcjE2MDQ0Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/160446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbaker",
      "html_url": "https://github.com/jimbaker",
      "followers_url": "https://api.github.com/users/jimbaker/followers",
      "following_url": "https://api.github.com/users/jimbaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbaker/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbaker/orgs",
      "repos_url": "https://api.github.com/users/jimbaker/repos",
      "events_url": "https://api.github.com/users/jimbaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T22:21:25Z",
    "updated_at": "2014-08-14T22:21:25Z",
    "author_association": "NONE",
    "body": "This might be related to this bug: http://bugs.jython.org/issue2184\nIt's an easy fix with an existing patch that just needs to be applied.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52255276",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52255276",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52255276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjU1Mjc2",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T22:49:20Z",
    "updated_at": "2014-08-14T23:04:25Z",
    "author_association": "NONE",
    "body": "I tried applying that patch and rebuilding a standalone Jython. No joy I'm afraid :(\n\nThat said, with the changes to replace the use of the _decorator_ module in place, the fork linked above is now in the state where calling start_ipython() will get you an IPython prompt, although one composed of random characters. Unforunately, executing the code 'x=1' ends up with the following:\n\n``` python\n...\n  File \"IPython\\core\\compilerop.py\", line 100, in ast_parse\n    return compile(source, filename, symbol, self.flags | PyCF_ONLY_AST, 1)\nAttributeError: CachingCompiler instance has no attribute 'flags'\n```\n\nHopefully, I will be able to get back to this over the weekend.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52389471",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52389471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52389471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzg5NDcx",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-16T10:23:28Z",
    "updated_at": "2014-08-16T13:01:13Z",
    "author_association": "NONE",
    "body": "A further modification to IPython.core.compilerop has resulted in a usable IPython prompt; code can now be executed. It does however crash on exit:\n\n``` python\n...\n  File \"D:\\code\\ipython\\IPython\\utils\\py3compat.py\", line 142, in input\n    return builtin_mod.raw_input(prompt)\nTypeError: 'NoneType' object is not callable\n```\n\nI have traced this back and found that at this point within IPython, invoking sys.stdin.read(1) or sys.stdin.readline() both result in a 'NoneType' not callable Type Error. Something buried within sys.stdin is failing...\n\nI am using a standalone Jython built from sources pulled from the Jython repo.\n\nMy branch of IPython can be found at:\n\n[https://github.com/Brittix1023/ipython/tree/basic-jython-fixes](https://github.com/Brittix1023/ipython/tree/basic-jython-fixes)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52924097",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-52924097",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 52924097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MDk3",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T14:05:34Z",
    "updated_at": "2014-08-21T14:09:32Z",
    "author_association": "NONE",
    "body": "I have also started work on a separate branch, the objective of which is to abstract away the use of pyzmq so that we can use Jython to connect to an IPython kernel running in a separate process:\n\n[https://github.com/Brittix1023/ipython/tree/zmq-jeromq-abstraction](https://github.com/Brittix1023/ipython/tree/zmq-jeromq-abstraction)\n\nThe very simple script run_code_on_ext_kernel.py runs some simple lines of code on an external kernel. It works on CPython. The aim challenge is to get it running on Jython.\n\nThe work that is in this branch is an attempt to modify IPython so that it uses JeroMQ rather than pyzmq when running on Jython. Its not yet working, as JeroMQ, Java NIO channels and Netty NIO channels (used by Jython internally) are proving to be a bit of a rats nest of compatibility issues.\n\nGiven that Jython includes Netty and that Netty-ZMTP provides support for the ZMQ protocol, an alternative approach involves getting rid of JeroMQ altogether.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53025854",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-53025854",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 53025854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDI1ODU0",
    "user": {
      "login": "jimbaker",
      "id": 160446,
      "node_id": "MDQ6VXNlcjE2MDQ0Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/160446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbaker",
      "html_url": "https://github.com/jimbaker",
      "followers_url": "https://api.github.com/users/jimbaker/followers",
      "following_url": "https://api.github.com/users/jimbaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbaker/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbaker/orgs",
      "repos_url": "https://api.github.com/users/jimbaker/repos",
      "events_url": "https://api.github.com/users/jimbaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-22T05:55:35Z",
    "updated_at": "2014-08-22T05:55:35Z",
    "author_association": "NONE",
    "body": "@Brittix1023 please elaborate more on the compatibility issues you have faced. Netty-ZMTP looks intriguing, but moving to the Netty event loop model is probably a lot of work compared to simply wrapping JeroMQ. In general, I would expect whatever Netty is doing with Jython's socket-reboot implementation to play well with such a parallel usage, assuming no jar hell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53184007",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-53184007",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 53184007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTg0MDA3",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-24T08:35:15Z",
    "updated_at": "2014-08-24T08:40:47Z",
    "author_association": "NONE",
    "body": "The basic IPython console with in-process kernel now works and exits fine when running on Jython if you use my (slightly) modified branch of IPython:\n\n[https://github.com/Brittix1023/ipython/tree/basic-jython-fixes]\n\nand a Jython stand-alone built from:\n\n[https://github.com/Brittix1023/jython/commit/4e5c4e5a0942a6e848313c7202ba5c060a48d881] with corresponding pull request: [https://github.com/jythontools/jython/pull/10].\n\nUnfortunately the test suite does not yet run, as the StreamCapture class within testing/iptest.py relies on os.pipe, which is not yet available on Jython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53184131",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-53184131",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 53184131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTg0MTMx",
    "user": {
      "login": "Britefury",
      "id": 897534,
      "node_id": "MDQ6VXNlcjg5NzUzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/897534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Britefury",
      "html_url": "https://github.com/Britefury",
      "followers_url": "https://api.github.com/users/Britefury/followers",
      "following_url": "https://api.github.com/users/Britefury/following{/other_user}",
      "gists_url": "https://api.github.com/users/Britefury/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Britefury/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Britefury/subscriptions",
      "organizations_url": "https://api.github.com/users/Britefury/orgs",
      "repos_url": "https://api.github.com/users/Britefury/repos",
      "events_url": "https://api.github.com/users/Britefury/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Britefury/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-24T08:38:47Z",
    "updated_at": "2014-08-24T08:38:47Z",
    "author_association": "NONE",
    "body": "@jimbaker I managed to get around the API incompatibility. The minitornado.eventloop.platform Waker class was using python sockets, whose Netty based implementation cannot be used by JeroMQ. On the Jython platform, a JeroMQ REP-REQ based Waker is now used.\n\nMy branch is now at the state where it attempts to send code for execution to an external kernel (I am using one from Anaconda). Unfortunately, at that point it halts. Still more work to do.\n\n[https://github.com/Brittix1023/ipython/tree/zmq-jeromq-abstraction](https://github.com/Brittix1023/ipython/tree/zmq-jeromq-abstraction)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/101874858",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-101874858",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 101874858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTg3NDg1OA==",
    "user": {
      "login": "jimbaker",
      "id": 160446,
      "node_id": "MDQ6VXNlcjE2MDQ0Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/160446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbaker",
      "html_url": "https://github.com/jimbaker",
      "followers_url": "https://api.github.com/users/jimbaker/followers",
      "following_url": "https://api.github.com/users/jimbaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbaker/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbaker/orgs",
      "repos_url": "https://api.github.com/users/jimbaker/repos",
      "events_url": "https://api.github.com/users/jimbaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T01:22:59Z",
    "updated_at": "2015-05-14T01:22:59Z",
    "author_association": "NONE",
    "body": "We should restart this work now that Jython 2.7.0 is out. We plan to have 2.7.1 released in early November. Full release scheduling details will be posted on jython-dev reasonably soon!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/298721500",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-298721500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 298721500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODcyMTUwMA==",
    "user": {
      "login": "amitsudharshan",
      "id": 93822,
      "node_id": "MDQ6VXNlcjkzODIy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/93822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitsudharshan",
      "html_url": "https://github.com/amitsudharshan",
      "followers_url": "https://api.github.com/users/amitsudharshan/followers",
      "following_url": "https://api.github.com/users/amitsudharshan/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitsudharshan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitsudharshan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitsudharshan/subscriptions",
      "organizations_url": "https://api.github.com/users/amitsudharshan/orgs",
      "repos_url": "https://api.github.com/users/amitsudharshan/repos",
      "events_url": "https://api.github.com/users/amitsudharshan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitsudharshan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T18:31:51Z",
    "updated_at": "2017-05-02T18:31:51Z",
    "author_association": "NONE",
    "body": "I'd love to help out here. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/298724288",
    "html_url": "https://github.com/ipython/ipython/issues/6213#issuecomment-298724288",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6213",
    "id": 298724288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODcyNDI4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T18:42:13Z",
    "updated_at": "2017-05-02T18:42:13Z",
    "author_association": "MEMBER",
    "body": "> I'd love to help out here.\r\n\r\nThe easiest way to help would be to get a fresh clone of IPython (warning `master` and `6.x` are Python 3 only I don't know if Jython supports 3.x) and start sending patches that that fixes issues, or even just opening issue with what does not work (and why if possible)."
  }
]
