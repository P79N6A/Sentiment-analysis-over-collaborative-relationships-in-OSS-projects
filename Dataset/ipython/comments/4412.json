[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26759323",
    "html_url": "https://github.com/ipython/ipython/pull/4412#issuecomment-26759323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4412",
    "id": 26759323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzU5MzIz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T21:39:04Z",
    "updated_at": "2013-10-21T21:39:04Z",
    "author_association": "MEMBER",
    "body": " Tests ? \n\nFor whatever reason, Travis have decided not to test this PR ...\n\n(Yes, I know I'm the first not to write test) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26760903",
    "html_url": "https://github.com/ipython/ipython/pull/4412#issuecomment-26760903",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4412",
    "id": 26760903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYwOTAz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:00:57Z",
    "updated_at": "2013-10-21T22:01:48Z",
    "author_association": "MEMBER",
    "body": "Thanks for the reminder, I was still trying to isolate an example of the problem.  This notebook code shows the issue:\n\n**IN**\n\n```\nfrom IPython.config import LoggingConfigurable\nfrom IPython.utils.traitlets import Int\n\nclass A(LoggingConfigurable):\n\n    listen_to = ['a']\n\n    a = Int(0)\n    b = 0\n\n    def __init__(self, **kwargs):\n        super(A, self).__init__(**kwargs)\n        self.on_trait_change(self.listener1, self.listen_to)\n\n    def listener1(self, name, old, new):\n        self.b += 1\n\nclass B(A):\n\n    c = 0\n    d = 0\n\n    def __init__(self, **kwargs):\n        super(B, self).__init__(**kwargs)\n        self.on_trait_change(self.listener2)\n\n    def listener2(self, name, old, new):\n        self.c += 1\n\n    def _a_changed(self, name, old, new):\n        self.d += 1\n```\n\n**IN**\n\n```\ninstance = B()\n\nfor i in range(3):\n    instance.a += 1\n    print \"%d should equal %d and %d\" % (instance.b, instance.c, instance.d)\n```\n\n**OUT**\n\n```\n1 should equal 1 and 1\n2 should equal 3 and 3\n3 should equal 6 and 6\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26761385",
    "html_url": "https://github.com/ipython/ipython/pull/4412#issuecomment-26761385",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4412",
    "id": 26761385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYxMzg1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T22:08:54Z",
    "updated_at": "2013-10-21T22:08:54Z",
    "author_association": "MEMBER",
    "body": "Test added\n"
  }
]
