[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25857457",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-25857457",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 25857457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU3NDU3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T00:47:13Z",
    "updated_at": "2013-10-08T00:47:13Z",
    "author_association": "MEMBER",
    "body": "Found a bug while testing - a trailing slash on the URL when creating a new untitled notebook causes it to fail with a 500 code and a message \"Unknown error renaming notebook: /home/takluyver/scratch/Untitled2.ipynb [Errno 2] No such file or directory: \\'/home/takluyver/scratch/Untitled2.ipynb\\'\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25858055",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-25858055",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 25858055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU4MDU1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T01:02:11Z",
    "updated_at": "2013-10-08T01:02:11Z",
    "author_association": "MEMBER",
    "body": "Tracked it down - in [save_notebook_model](https://github.com/ipython/ipython/blob/686ac334cacd383616dff99765190b1c6b5d5488/IPython/html/services/notebooks/filenbmanager.py#L216) it compares `path != new_path` to decide whether it's trying to rename it. But one copy of the path has had a `.strip('/')` done to it, so with the trailing slash, they're not the same, and it tries to rename a file that doesn't yet exist.\n\nShould be easy to fix, but I'll leave it for @minrk, as I know handling paths properly is non-trivial.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25938985",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-25938985",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 25938985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTM4OTg1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T00:32:51Z",
    "updated_at": "2013-10-09T00:32:51Z",
    "author_association": "MEMBER",
    "body": "Question for @ellisonbg:\n\nWe currently interrupt/kill kernels via POST requests to `/api/kernels/<kernel-id>/interrupt` and `/api/kernels/<kernel-id>/kill`. Might there be a more RESTful url scheme with PATCH and/or PUT, possibly without the extra postfix verb?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25940121",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-25940121",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 25940121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQwMTIx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T01:04:23Z",
    "updated_at": "2013-10-09T01:04:23Z",
    "author_association": "MEMBER",
    "body": "@minrk before you go (I guess you're still checking e-mail) - have you recorded somewhere what still needs to be done before this lands? If we are able to get it merged before you get back, that would be great.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25990497",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-25990497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 25990497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTkwNDk3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T17:23:34Z",
    "updated_at": "2013-10-09T17:23:34Z",
    "author_association": "MEMBER",
    "body": "I think this is pretty close - We've taken at least one pass on all of the major changes, I think.  So I think living in it for a bit (opening, saving, renaming, interrupting, killing, etc.) is the way to go, then merge if nothing new comes up.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26009013",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26009013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26009013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA5MDEz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:09:47Z",
    "updated_at": "2013-10-09T21:09:47Z",
    "author_association": "MEMBER",
    "body": "OK I will spend some time with it.\n\nOn Wed, Oct 9, 2013 at 10:23 AM, Min RK notifications@github.com wrote:\n\n> I think this is pretty close - We've taken at least one pass on all of the\n> major changes, I think. So I think living in it for a bit (opening, saving,\n> renaming, interrupting, killing, etc.) is the way to go, then merge if\n> nothing new comes up.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4303#issuecomment-25990497\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26011348",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26011348",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26011348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDExMzQ4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:40:02Z",
    "updated_at": "2013-10-19T00:26:53Z",
    "author_association": "MEMBER",
    "body": "Here are some review notes. Some of these things may already be done...\n\nServices in general:\n- [x] Review how we handle trailing slashes in the kernels, sessions and notebooks APIs. In general we should be following GitHub's convention of not including trailing slashes, so it is `/api/notebooks` not `/api/notebooks/`. The kernels service may need special handling for this as kernel ids can't begin with a slash. Make sure the IPEP reflects our decisions on this.\n- [x] Make sure that the web services return JSON with an error message when an error happens on the server side. This should be tested.\n\nNotebooks web service:\n- [x] Direct .ipynb download to the `files` URLs.\n- [x] How do we want to handle the copying of notebooks?\n- [x] Remove the download of `.py` files from the web service and notebook UI.\n- [x] Test notebook uploading interactively.\n- [x] Make sure that `.py` files can't be uploaded. This should probably be done by requiring a `.ipynb` file extension.\n- [x] Check docstrings.\n- [x] Write a test for `copy_notebook` in nbmanager.py.\n- [x] Make sure that older formats can be uploaded. To do this, we need to convert an uploaded notebooks JSON to the current format. We will probably have to refactor some of the code in `nbformat` to do this.\n\nKernels:\n- [x] Do we want to change how to handle kernel kill and interrupt to move away from `POST`ing to a URL with a `kill` or `interrupt` postfix. _ellisonbg says_: I don't think it is possible to use a more RESTful design for this because these actions don't correspond to sending state to the server. I think they are OK like this.\n\nCheckpoints web service:\n- [x] Test notebook checkpoints interactively.\n- [x] Write tests for the checkpoints web service.\n- [x] In the checkpoints JSON model, rename `checkpoint_id` to `id`. This will also have to be changed in the web app JS code.\n\nSessions web service:\n- [x] Test the `Location` header in the `POST` call.\n\nOther handlers:\n- [x] Make sure that the `files` handler sets the `Content-Type` to `application/json` if the filename ends with `.ipynb` and that `Content-Disposition` is set as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26012433",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26012433",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26012433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDEyNDMz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:55:50Z",
    "updated_at": "2013-10-10T00:37:34Z",
    "author_association": "MEMBER",
    "body": "More:\n- [x] Remove download/format logic from `NotebookHandler.get`. All notebook downloads should be handled through the `files` URLs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26012534",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26012534",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26012534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDEyNTM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T21:57:19Z",
    "updated_at": "2013-10-09T21:57:19Z",
    "author_association": "MEMBER",
    "body": "> Review how we handle trailing slashes in the kernels, sessions and notebooks APIs. In general we should be following GitHub's convention of not including trailing slashes, so it is /api/notebooks not /api/notebooks/. The kernels service may need special handling for this as kernel ids can't begin with a slash. Make sure the IPEP reflects our decisions on this.\n\nWhen possible (GET), trailing slashes are stripped and the client is redirected to the right URL. No API entry points expect a trailing slash, though a few may tolerate them.\n\n> Make sure that the web services return JSON with an error message when an error happens on the server side. This should be tested.\n\nThis is handled by a `@json_errors` decorator. It should be on every service handler method.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26014832",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26014832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26014832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE0ODMy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T22:31:26Z",
    "updated_at": "2013-10-09T22:31:26Z",
    "author_association": "MEMBER",
    "body": "@minrk do you know why `AuthenticatedFileHandler` doesn't use our custom `FileFindHandler`? We need to set `Content-Type` and `Content-Disposition` when a `.ipynb` file is downloaded from the `/files` URL handler. That logic needs to be under the `AuthenticatedFileHandler`, but Zach originally put it under the old `FileFindHandler`.  Seems like it should be moved over to the `AuthenticatedFileHandler` right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26015062",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26015062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26015062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE1MDYy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T22:35:21Z",
    "updated_at": "2013-10-09T22:35:21Z",
    "author_association": "MEMBER",
    "body": "It seems like we are trying to serve a dual-purpose if we want to set content-disposition only on one filetype on the static file handler.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26015116",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26015116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26015116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE1MTE2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T22:36:08Z",
    "updated_at": "2013-10-09T22:36:08Z",
    "author_association": "MEMBER",
    "body": "The `/files/` handler doesn't use the search path, because it can't serve from more than one location, so there's no point. It shouldn't be a `FileFindHandler`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26015302",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26015302",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26015302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE1MzAy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T22:39:21Z",
    "updated_at": "2013-10-09T22:39:21Z",
    "author_association": "MEMBER",
    "body": "We are using /files/ for a dual purpose now.  It is being used for downloading notebooks (File:Download As).  We could create a custom URL and handler for this?  All of the download stuff is really in flux because it 1) has to be moved out of the notebooks web service and 2) we haven't redesigned it for use with nbconvert.  So the easiest temporary hack is to use `/files`. What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26015759",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26015759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26015759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE1NzU5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T22:47:50Z",
    "updated_at": "2013-10-09T22:48:07Z",
    "author_association": "MEMBER",
    "body": "> We are using /files/ for a dual purpose now. It is being used for downloading notebooks (File:Download As)\n\nNot right now, we aren't. Zach's PR pointed Download As to `/api/notebooks?download=ipynb`, and I haven't changed that here, yet.\n\nIs it possible to effect the same behavior client-side as the Content-Disposition header (i.e. trigger download without messing with the server)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26020537",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26020537",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26020537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwNTM3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T00:28:51Z",
    "updated_at": "2013-10-10T00:28:51Z",
    "author_association": "MEMBER",
    "body": "Sorry I should have clarified.  I have a branch going locally where I have removed the logic in `GET /api/notebooks` for downloads, so I am trying to get it working with the `files` URLs.  Zach and I have been meaning to remove it for a while.  I don't think it is possible to trigger download behavior, at least with filename, without using `Content-Disposition`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26020878",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26020878",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26020878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIwODc4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T00:37:25Z",
    "updated_at": "2013-10-10T00:37:25Z",
    "author_association": "MEMBER",
    "body": "I got it to work just fine using `AuthenticatedFileHandler`. I think that is good for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26021748",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26021748",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26021748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDIxNzQ4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T00:58:26Z",
    "updated_at": "2013-10-10T00:58:26Z",
    "author_association": "MEMBER",
    "body": "I have completely removed all traces of the `.py` file upload and now display a dialog telling the user that uploads must be `.ipynb` files. In the future we should use the contents web service for uploads and allow any file type at all. This will simplify the upload logic quite a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26036172",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26036172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26036172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDM2MTcy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T08:19:29Z",
    "updated_at": "2013-10-10T08:19:29Z",
    "author_association": "MEMBER",
    "body": "Double slash when opening notebook via dashboard : \n`https://localhost:8888/notebooks//InstitutCurie/ipynb/Article.ipynb`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26118910",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26118910",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26118910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTE4OTEw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T07:22:38Z",
    "updated_at": "2013-10-11T07:22:38Z",
    "author_association": "MEMBER",
    "body": "@Carreah fixed, thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26155070",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26155070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26155070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTU1MDcw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T17:24:58Z",
    "updated_at": "2013-10-11T17:24:58Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg I can write tests for uploading older formats. What are the key differences? I.e. how can I quickly construct a v2 notebook that would certainly not be a valid v3 notebook, and a v1 notebook that would not be valid v2?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26156303",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26156303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26156303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTU2MzAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T17:43:36Z",
    "updated_at": "2013-10-11T17:43:36Z",
    "author_association": "MEMBER",
    "body": "@minrk s memory is way better than mine on this. The main thing is that\nwhen we get a notebook from the client, we need to call the code in\nnbformat to convert the notebook to the current format.\n\nOn Fri, Oct 11, 2013 at 10:24 AM, Thomas Kluyver\nnotifications@github.comwrote:\n\n> @ellisonbg https://github.com/ellisonbg I can write tests for uploading\n> older formats. What are the key differences? I.e. how can I quickly\n> construct a v2 notebook that would certainly not be a valid v3 notebook,\n> and a v1 notebook that would not be valid v2?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4303#issuecomment-26155070\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26521208",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26521208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26521208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTIxMjA4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-17T16:02:31Z",
    "updated_at": "2013-10-17T16:02:39Z",
    "author_association": "MEMBER",
    "body": "I wouldn't worry about v1, that was pre- anything anyone actually used.\nThe main changes in v3 are:\n- add raw cells\n- add heading cells\n- add nbformat_minor\n- add cell / output metadata\n\nThe 2 :arrow_forward: 3 conversion is pretty much a no-op, just revving the nbformat version.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26555448",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26555448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26555448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTU1NDQ4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-17T21:38:51Z",
    "updated_at": "2013-10-17T21:38:51Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg you wanted to rename `checkpoint_id` to `id`. I presume that means you also wan to rename `kernel_id` to `id` in the API?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26555579",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26555579",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26555579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTU1NTc5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-17T21:40:54Z",
    "updated_at": "2013-10-17T21:40:54Z",
    "author_association": "MEMBER",
    "body": "Or do you _just_ mean at the JSON API level, and not also at the Python API level?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26558685",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26558685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26558685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTU4Njg1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-17T22:30:40Z",
    "updated_at": "2013-10-17T22:30:40Z",
    "author_association": "MEMBER",
    "body": "Our plan was to use `id` in the JSON and `foo_id` in the Python API.  We\nwould use `id` everywhere in Python as well, but it is builtin.\n\nOn Thu, Oct 17, 2013 at 2:40 PM, Min RK notifications@github.com wrote:\n\n> Or do you _just_ mean at the JSON API level, and not also at the Python\n> API level?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4303#issuecomment-26555579\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26558704",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26558704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26558704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTU4NzA0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-17T22:31:01Z",
    "updated_at": "2013-10-17T22:31:01Z",
    "author_association": "MEMBER",
    "body": "ok, makes sense. Code should reflect that now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26639238",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26639238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26639238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM5MjM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-19T00:27:39Z",
    "updated_at": "2013-10-19T00:27:39Z",
    "author_association": "MEMBER",
    "body": "I think every task box is checked, if people want to live in the branch for a bit to test.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26869342",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26869342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26869342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODY5MzQy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-23T00:30:05Z",
    "updated_at": "2013-10-23T00:30:05Z",
    "author_association": "MEMBER",
    "body": "after some fiddling, tests are now passing on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26883806",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-26883806",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 26883806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODgzODA2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-23T06:46:22Z",
    "updated_at": "2013-10-23T06:46:22Z",
    "author_association": "MEMBER",
    "body": ":ship: :+1:  \n\nSooo good congrat everyone.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27874466",
    "html_url": "https://github.com/ipython/ipython/pull/4303#issuecomment-27874466",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4303",
    "id": 27874466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODc0NDY2",
    "user": {
      "login": "hadim",
      "id": 528003,
      "node_id": "MDQ6VXNlcjUyODAwMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/528003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hadim",
      "html_url": "https://github.com/hadim",
      "followers_url": "https://api.github.com/users/hadim/followers",
      "following_url": "https://api.github.com/users/hadim/following{/other_user}",
      "gists_url": "https://api.github.com/users/hadim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hadim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hadim/subscriptions",
      "organizations_url": "https://api.github.com/users/hadim/orgs",
      "repos_url": "https://api.github.com/users/hadim/repos",
      "events_url": "https://api.github.com/users/hadim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hadim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-06T13:52:30Z",
    "updated_at": "2013-11-06T13:52:30Z",
    "author_association": "NONE",
    "body": "Since PR has been merged to master I installed master through `pip install git+https://github.com/ipython/ipython.git#egg=master`.\n\nBut when I launch ipython notebook I don't see any changes and I still can't navigate into sub folders.\n\nI must be missing something here or maybe you didn't write \"frontend stuff\" to be able to enjoy multi dir support.\n\nAny idea ? \n"
  }
]
