[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32108935",
    "html_url": "https://github.com/ipython/ipython/issues/4782#issuecomment-32108935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4782",
    "id": 32108935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA4OTM1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-11T22:19:44Z",
    "updated_at": "2014-01-11T22:19:44Z",
    "author_association": "MEMBER",
    "body": "Thanks for the feedback, I really appreciate your careful thoughts on this.\n\nFirst about the side effects. There are only a few actions that have the\nside effect of changing the mode:\n- shift+enter. We have had many long discussions about how shift+enter\n  works. Remember before the modal UI, shift+enter would select the next cell\n  and put it in edit mode. In the modal UI we wanted shift+enter to leave the\n  notebook in a state that was \"closest\" to as many next actions as possible.\n  By putting the cell in command mode, the user can do almost anything within\n  1 keystroke. If we left it in edit mode, most actions would be 2 keystroke\n  away (esc + something). After working with this for a while I think we made\n  the right choice on this.\n- ctrl+enter. The logic for ctrl+enter selecting next in command mode is\n  mostly the same as shift+enter. But it is worth mentioning that the main\n  usage case for ctrl+enter is when you are simply wanting to walk down a\n  notebook's cell running each as you go. I think that in this case, it makes\n  more sense to be in command mode the entire time.\n- All of the shortcuts that change to cell type (m,y,t,1,2,3,4,5,6). These\n  always enter edit mode after changing the type. The reason we chose this is\n  that this behavior was present before the modal UI. However, as I have used\n  the modal UI more and more, I continue to be surprised by it. I want to run\n  the idea by everyone else, but I am thinking of removing this particular\n  side effect.\n\nThe cut/copy/paste shortcuts are the ones we have used all along and I\nthink they are a natural extension of the usual ctrl+x|c|v and cmd+x|c|v.\nWe could however bind other keys to these actions as well.\n\nYou have noticed one of the most subtle (and painful) parts of all this.\nThat CodeMirror manages its own shortcuts as well. It is extremely subtle\nto manage ours alongside those. I have tried to reduce the amount of logic\nthat CM handles, but until we refactor our tooltip it is tough. There are a\nnumber of reasons we can't use our own keyboard manager stuff to manage\nthose:\n- Some of the tests are more subtle than a simple \"which key was pressed\"\n  test.\n- The API of the handlers is completely different. The event object for CM\n  is a special CM event (not jQuery) with a different API and the return\n  values of the handlers mean completely different things.\n- The command mode shortcuts are managed globally by binding events to\n  $(document). The CM events are bound on a per cell bases to the CM object\n  for that cell.\n\nI wish it weren't so complex...\n\nOn Sat, Jan 11, 2014 at 3:55 AM, Juergen Hasch notifications@github.comwrote:\n\n> First, thank you very much for the new modal UI. I think it is a big\n> improvement.\n> My experience with it so far:\n> \n>    -\n> \n>    keyboard shortcuts should not have side effects, i.e. the mode should\n>    be retained. For example, shift+enter and ctrl+enter should stay in edit\n>    mode if called from there, they jump into command mode for me.\n>    -\n> \n>    some shortcut keys like copy, cut, paste and delete cell are unusual.\n>    I think they should (also) be available using traditional shortcuts,\n>    i.e the \"del\" key and the clipboard copy/cut/paste keys.\n>    -\n> \n>    in edit mode, there are two places where hotkeys are defined. Within\n>    IPython and when inizializing a CodeMirror cell. This leads to confusion. I\n>    think it would be helpful to allow keyboard_manager to also define\n>    CodeMirror hotkeys, so hotkeys can be defind in one place.\n>    -\n> \n>    some keyboard shortcuts will never work on international keyboards,\n>    e.g. the ctrl+= hotkey doesn't work for me. Adding new keyboard shortcuts\n>    in custom.js using add_shortcuts() works well, however. Tried it already.\n>    -\n> \n>    single-hotkey toggling between command and edit mode using the esc key\n>    would be nice\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4782\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32111307",
    "html_url": "https://github.com/ipython/ipython/issues/4782#issuecomment-32111307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4782",
    "id": 32111307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTExMzA3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-12T00:11:49Z",
    "updated_at": "2014-01-12T00:11:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I really like the new modes, but I had also an issue with the `Ctrl-Enter` behaviour.  For `Ctrl-Enter`, you say the main use  case is to walk down a notebook. However, a typical use case for me personally is also somethings else:\n- Somewhere in the notebook where I want to add something (so not always at the end), I add a couple of empty cells with `a`/`b` in command mode, I type some code in the first cell, press `Ctrl-Enter`, and want to continue typing some more code in the following cell. However, now every time going to the next cell with `Ctrl-Enter`, I first have to enter edit mode again before I can start typing.  \n\nWhen this was the last cell of the notebook, you keep edit mode. But when somewhere in the middle of the notebook not. This seems a little bit strange to me, as it often occurs that I am adding content not at the end of the notebook. And furthermore, keeping the edit mode does not prevent you from going down the notebook with repeated `Ctrl-enter`s, as is indeed also a common use case. \nAnd because this was a typical work flow for me, I often start typing code after `Ctrl-Enter`, but because I am in command mode, some wrong things can happen.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32124169",
    "html_url": "https://github.com/ipython/ipython/issues/4782#issuecomment-32124169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4782",
    "id": 32124169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTI0MTY5",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-12T14:54:22Z",
    "updated_at": "2014-01-12T14:54:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Brian, thanks for your detailed reply.\n\nAs to Shift/Ctrl-Enter going into command mode:\nI have no strong feelings on this, and I fully understand your reasoning. \nIt just looks more transparent to me when a command only does what it says it will do. Personally, I changed shift/ctrl+enter to stay in edit mode. Much more efficient for me, because I often make changes to parameters in a cell and execute it to see the changes, so I always want to work in edit mode there.\n\nConcerning CodeMirror, I have made a number of IPython extensions, so I understand, that the interactions between IPython notebooks, cells and CodeMirror are complex.\nStill, I think most of the cases customizing CodeMirror hotkeys are trivial, like wanting a different key combination for a functionality  IPython configures (e.g. comments). This could be handled by dynamically creating CodeMirror options (cm_config) for instatiating cells, instead of hardcoding them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/32239107",
    "html_url": "https://github.com/ipython/ipython/issues/4782#issuecomment-32239107",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4782",
    "id": 32239107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjM5MTA3",
    "user": {
      "login": "sjobeek",
      "id": 5043700,
      "node_id": "MDQ6VXNlcjUwNDM3MDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5043700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjobeek",
      "html_url": "https://github.com/sjobeek",
      "followers_url": "https://api.github.com/users/sjobeek/followers",
      "following_url": "https://api.github.com/users/sjobeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjobeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjobeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjobeek/subscriptions",
      "organizations_url": "https://api.github.com/users/sjobeek/orgs",
      "repos_url": "https://api.github.com/users/sjobeek/repos",
      "events_url": "https://api.github.com/users/sjobeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjobeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-14T05:05:14Z",
    "updated_at": "2014-01-14T05:06:10Z",
    "author_association": "NONE",
    "body": "I've been confused by the choice to leave section headings / markdown cells in \"un-compiled\" display format until they are explicitly \"run\".  It seems that on leaving edit-mode for a section heading or markdown cell it should automatically revert to the normal visual heading format (as in 1.0).\n\nPerhaps for a complex markdown cell there are some use cases that this behavior makes sense for, but I've often found scattered section headings stuck in an edit-like display format that I need to manually execute shift-enter on to get them to display properly.  \n\nI apologize if there's already a discussion on this, but nothing turned up in my searching.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33156112",
    "html_url": "https://github.com/ipython/ipython/issues/4782#issuecomment-33156112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4782",
    "id": 33156112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTU2MTEy",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-23T18:58:57Z",
    "updated_at": "2014-01-23T18:58:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "After working with the new UI for some days now, it feels very natural to me. I did a number of tweaks, mostly  to allow for easier navigation.  I am really happy how easy this can be achieved.\nSo here is what I did for reference:\n- ESC toggles between edit and command mode\n- Alt+N turns line numbering in cells for on/off\n\nCommand mode\n- mouse wheel scrolls up/down by selecting previous/next cell\n- `home` jumps to top of the notebook\n- `end` jumpt to bottom of the notebook\n- `pageup` scrolls one page up\n- `pagedown` scrolls one page down\n- `ctrl+end` runs from current cell to end\n- `ctrl+c`,`ctrl+v`,`ctrl+x` copy/paste/cut current cell to system clipboard in json and text format. Allows copying cells between notebooks (Chrome only)\n\nEdit mode\n- `alt+plus` splits cell at cursor position\n- `alt+substract` merges cell \n- `shift+enter` executes current cell and stay in edit mode\n- `ctrl+enter` executes current cell and moves to next codecell\n- `ctrl+home` jumps to top of the notebook\n- `ctrl+end` jumpt to bottom of the notebook\n\nHere is the custom.js to do this:\nhttps://gist.github.com/juhasch/8408061\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33301273",
    "html_url": "https://github.com/ipython/ipython/issues/4782#issuecomment-33301273",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4782",
    "id": 33301273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAxMjcz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T21:31:13Z",
    "updated_at": "2014-01-25T21:31:13Z",
    "author_association": "MEMBER",
    "body": "Closing this, please open new issues for ongoing bugs/enhancements of the modal UI.\n"
  }
]
