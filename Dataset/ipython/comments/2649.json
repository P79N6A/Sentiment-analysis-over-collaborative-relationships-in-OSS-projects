[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11064359",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11064359",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11064359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDY0MzU5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-05T22:41:32Z",
    "updated_at": "2012-12-05T22:41:32Z",
    "author_association": "MEMBER",
    "body": "Version field is already in the msg header, what utility does this serve?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11067469",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11067469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11067469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDY3NDY5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T00:10:41Z",
    "updated_at": "2012-12-06T00:10:41Z",
    "author_association": "MEMBER",
    "body": "I don't see that in the message spec.  What version is written there, the\nipython version of a messaging protocol version?\n\nOn Wed, Dec 5, 2012 at 2:41 PM, Min RK notifications@github.com wrote:\n\n> Version field is already in the msg header, what utility does this serve?\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2649#issuecomment-11064359.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11084726",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11084726",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11084726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg0NzI2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T13:01:15Z",
    "updated_at": "2012-12-06T13:01:15Z",
    "author_association": "MEMBER",
    "body": "IIRC from the ruby integration I did [0,14,dev] https://github.com/Carreau/iruby/blob/master/lib/session.rb#L36\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11084864",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11084864",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11084864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg0ODY0",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T13:05:55Z",
    "updated_at": "2012-12-06T13:05:55Z",
    "author_association": "MEMBER",
    "body": "Wow, the IPython version number is transmitted in _every_ message with that change?  Doesn't that seem a bit wasteful?  Maybe it could be transmitted at the start of a session or something, but since the version number probably won't change in a single session, it seems a shame to have to waste the bandwidth.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11084957",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11084957",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11084957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg0OTU3",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T13:09:50Z",
    "updated_at": "2012-12-06T13:11:29Z",
    "author_association": "MEMBER",
    "body": "(Note that I like the idea of this pull request, which adds a new message handler instead of a new header field).  Also, it does appear that @carreau is talking about the IPython version number, while @tkf is talking about the messaging spec version number.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11085043",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11085043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11085043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg1MDQz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T13:13:24Z",
    "updated_at": "2012-12-06T13:13:24Z",
    "author_association": "MEMBER",
    "body": "And: the confusion here between IPython version number and messaging spec version number indicates that this message should probably have a more descriptive type name, maybe protocol_version or something.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11126457",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11126457",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11126457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTI2NDU3",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T11:12:27Z",
    "updated_at": "2012-12-07T11:12:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk Sorry, I should have clarified the context.  This PR is based on the discussion in the mailing list:\nhttp://thread.gmane.org/gmane.comp.python.ipython.devel/9500/\n\n@Carreau What does it tells to client?  Something like \"you need at least this version\"?\n\nProbably @jasongrout is right about the protocol naming.  So, should it be `protocol_version_request` and `protocol_version_reply`?  Or message properties should be `protocol_version`, `protocol_version_major`, and so on?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11127150",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11127150",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11127150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTI3MTUw",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T11:42:06Z",
    "updated_at": "2012-12-07T11:42:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, so this is how IPython sends version of IPython itself.:\n\n``` python\nimport IPython\n\n_version_info_list = list(IPython.version_info)\n\ndef msg_header(msg_id, msg_type, username, session):\n    date = datetime.now()\n    version = _version_info_list\n    return locals()\n```\n\nhttps://github.com/ipython/ipython/blob/6c36cd9332f1138bfe2910516b80f8a7c750ac40/IPython/zmq/session.py#L189\n\nI agree with @jasongrout that this is a bit of waste.  But probably a list in the header won't give you any significant penalty?  I can't tell, as I don't do any benchmarks.\n\nMore important than that, if it is in the header, client needs to send a no-op message to get that.  I guess `execute_reply` with an empty code does the job but maybe it is not straight forward for client writer.\n\n---\n\nBTW I'd write it this way:\n\n``` python\ndef msg_header(**kwds):\n    kwds.update(date=datetime.now(), version=_version_info_list)\n    return kwds\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11127287",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11127287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11127287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTI3Mjg3",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T11:47:33Z",
    "updated_at": "2012-12-07T11:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Other topic we need to discuss is weather we need the \"patch version\" (`Z` in `X.Y.Z`).  @ellisonbg suggested to go without the patch version like notebook format number (i.e., `X.Y`) in the mailing list.  Unlike notebook format number, kernel can change the behavior (i.e., bug fix) without changing protocol interface.  This is why I suggested [Semantic Versioning](http://semver.org/) in the mailing list.\n\nDisclaimer: I've never used the semantic versioning.  I just thought it fit well with protocol versioning.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11142910",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11142910",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11142910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQyOTEw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T19:28:33Z",
    "updated_at": "2012-12-07T19:28:33Z",
    "author_association": "MEMBER",
    "body": "Okay, then if we are adding this, I would suggest a few changes:\n- the protocol version should live in zmq.session, _not_ ipkernel.  session is where the protocol implementation is.\n- the version info currently included in the header should be removed, as it is wasteful and redundant.\n- the version request should reply with more information (at least IPython version, msg spec version, Python version, and maybe even platform info).  This message should be the only one we need for a whole \"who are you, and what are your capabilities\"\n- a version tuple makes more sense than a dict that duplicates its own content\n\nI think using semantic versioning is fine, but may be overkill - a 'bugfix' to a protocol definition doesn't make a lot of sense to me, but people generally expect 3-part versions, so we might as well use it, even if the last field is always zero.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11143836",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11143836",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11143836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQzODM2",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T19:54:01Z",
    "updated_at": "2012-12-07T19:54:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the message spec will be something like this?\n\n``` python\ncontent = {\n    'protocol_version': [int, int],  # or [int, int, int]?\n    'ipython_version': [int, int],\n    'python_version': [int, int, int],\n    'platform': str,\n}\n```\n\nI guess `python_version` will be `ruby_version` for @Carreau's ruby kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11143964",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11143964",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11143964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQzOTY0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T19:57:40Z",
    "updated_at": "2012-12-07T19:57:40Z",
    "author_association": "MEMBER",
    "body": "As you point out, with other kernel implementations, perhaps adding 'language' makes sense, or something more generic, such as 'kernel', which identifies the kernel implementation.\n\nAlso, IPython's version is a 3-tuple, not 2 (0.13.1, etc.) - dev should give inf, so Python 3's new comparison rules don't barf.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11144012",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11144012",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11144012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0MDEy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T19:58:59Z",
    "updated_at": "2012-12-07T19:58:59Z",
    "author_association": "MEMBER",
    "body": "> I guess python_version will be ruby_version for @Carreau's ruby kernel.\n\nI guess you will have to add also 'julia_version' soon (even if it does not move fast...) \n\nI agree with min that we should make the protocol without ipython/python specificities.\n\n(Hoooo we can drag and drop images into comment field now....) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11144467",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11144467",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11144467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0NDY3",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:11:25Z",
    "updated_at": "2012-12-07T20:11:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, protocol spec version 3!\n\n``` python\ncontent = {\n    'protocol_version': [int, int],       # or [int, int, int]?\n    'ipython_version': [int, int, int],   # e.g. [0, 13, 0]\n    'kernel_version': [int, int, int],    # e.g. [2, 7, 2]\n    'language': str,                      # e.g., 'python'\n    'platform': str,                      # = sys.platform\n}\n```\n\nHow about other general stuff, such as `$HOST` and `$USER`?\n\n`[0, 14, inf]` for `0.14.dev` feels wrong as it implies `0.14.0 < 0.14.dev`.  We never have `0.14.dev` after `0.14.0`, right?  How about `[0, 14, -1]`?\n\nCan't wait to see Julia kernel!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11144552",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11144552",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11144552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0NTUy",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:13:38Z",
    "updated_at": "2012-12-07T20:13:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I forgot `platform.platform()`.  I guess it's better for 'platform'.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11144651",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11144651",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11144651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0NjUx",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:16:08Z",
    "updated_at": "2012-12-07T20:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, probably `interpreter` is better than `language`?  It can be cpython/ironpython/pypy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11144809",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11144809",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11144809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0ODA5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:20:14Z",
    "updated_at": "2012-12-07T20:20:14Z",
    "author_association": "MEMBER",
    "body": "> [0, 14, inf] for 0.14.dev feels wrong as it implies 0.14.0 < 0.14.dev.\n\nThis is the correct relationship.\n\nIt is not important to place dev versions in-between patch revisions. dev should always evaluate as 'latest', so inf is actually correct.  -1 would give the wrong semantics, as comparing with 0.14.0 should give True for any 0.14dev, whereas -1 would make that not true.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11144952",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11144952",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11144952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0OTUy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:24:06Z",
    "updated_at": "2012-12-07T20:24:06Z",
    "author_association": "MEMBER",
    "body": "On Fri, Dec 7, 2012 at 12:16 PM, Takafumi Arakaki\nnotifications@github.comwrote:\n\n> Also, probably interpreter is better than language? It can be\n> cpython/ironpython/pypy.\n> \n> You would have to be careful, as you don't want to require frontends to\n> support a whitelist of Python interpreters to tell if a kernel is a Python\n> one.\n> For most frontends, the only thing that would matter is the language, not\n> the interpreter.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11145339",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11145339",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11145339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ1MzM5",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:36:45Z",
    "updated_at": "2012-12-07T20:36:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, I just thought kernel_version won't mean anything as long as you don't know what implementation of language you are talking to.\n\nAlso you can't stop clients to get interpreter name as they can execute any code.  All the properties other than `protocol_version` and `language` is redundant in that sense.  They just provides convenient access.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11145980",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11145980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11145980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ1OTgw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T20:54:56Z",
    "updated_at": "2012-12-07T20:54:56Z",
    "author_association": "MEMBER",
    "body": "> Well, I just thought kernel_version won't mean anything as long as you don't know what implementation of language you are talking to.\n\npypy, CPython, and IronPython all report the Python version they implement.  So I would expect a pypy interpreter to identify itself as Python 2.7.1.  It's fine if interpreter is a _separate_ field, but it shouldn't be used in place of the more significant fact that it implements a particular version of Python.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11147216",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11147216",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11147216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ3MjE2",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T21:29:51Z",
    "updated_at": "2012-12-07T21:29:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right.  I was wrong about replacing the language property.\n\nClose to the landing point?:\n\n``` python\ncontent = {\n    'protocol_version': [int, int],       # or [int, int, int]?\n    'ipython_version': [int, int, int],   # e.g. [0, 13, 0]\n    'kernel_version': [int, int, int],    # e.g. [2, 7, 2]\n    'language': str,                      # e.g., 'python'\n    'interpreter': str,                   # e.g., platform.python_implementation()\n    'platform': str,                      # ?\n}\n```\n\nHow about `uname` instead of `platform`?  We can use `platform.uname()`:\n\n> `platform.uname()`\n> Fairly portable uname interface. Returns a tuple of strings (system, node, release, version, machine, processor) identifying the underlying platform.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11148903",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11148903",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11148903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ4OTAz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T22:19:51Z",
    "updated_at": "2012-12-07T22:19:51Z",
    "author_association": "MEMBER",
    "body": "Would other languages need to conform to the python uname format?  Maybe we're overreaching ourselves here, and need to just go back to protocol version and language (and possibly language version).  It's easier to add to the spec than to take away from it if we decide later we made a wrong decision.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11149770",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11149770",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11149770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ5Nzcw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T22:48:48Z",
    "updated_at": "2012-12-07T22:48:48Z",
    "author_association": "MEMBER",
    "body": "I'm inclined to agree with @jasongrout - let's not try to add every potentially relevant field we can think of here.\n\n(As to the question of language version numbers: my understanding is that the Python _language_ has a two-part version number, e.g. `2.7`, and bugfix releases of the _implementations_ increment the third part. So CPython 2.7.2 is not directly comparable to IronPython 2.7.2.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11150017",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11150017",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11150017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUwMDE3",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T22:57:35Z",
    "updated_at": "2012-12-07T22:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, so the remaining decision is the format of `protocol_version`.  2-part? 3-part?  If 3-part, use semvar?\n\n``` python\ncontent = {\n    'protocol_version': [int, int],       # or [int, int, int]?\n    'ipython_version': [int, int, int],   # e.g. [0, 13, 0]\n    'kernel_version': [int, int, int],    # e.g. [2, 7, 2]\n    'language': str,                      # e.g., 'python'\n    'interpreter': str,                   # e.g., platform.python_implementation()\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11150140",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11150140",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11150140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUwMTQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-07T23:01:24Z",
    "updated_at": "2012-12-07T23:01:24Z",
    "author_association": "MEMBER",
    "body": "On Fri, Dec 7, 2012 at 2:20 PM, Jason Grout notifications@github.comwrote:\n\n> Would other languages need to conform to the python uname format? Maybe\n> we're overreaching ourselves here, and need to just go back to protocol\n> version and language (and possibly language version). It's easier to add to\n> the spec than to take away from it if we decide later we made a wrong\n> decision.\n> \n> I don't think it's particularly important to have extra information be\n> formal.  We should define a core message (spec version, IPython version,\n> language, language version), and anything beyond that should be considered\n> extra identifying information - it could even go in a subdict called\n> 'details', which is not actually defined in the spec as anything other than\n> a black box (like 'content' in any other message).\n\nI think more information is better, but there should be a line between\n'this is the formal spec, which all kernels must provide and frontends can\nrely upon', and 'extra identifying information'.  For instance, it may make\nsense to include zmq / pyzmq versions, but the use of zmq is not even a\npart of the msg spec, so the spec wouldn't change even if zmq is totally\ndropped.\n\nWe may even be going beyond what is useful here - a significant change to\nthe msg spec will mean that the message won't even be readable, so it\ndoesn't matter what's inside.  Plus, the msg spec version is _fully\nredundant_ with the IPython version.\n\nDepending on how we define the message spec, we haven't made a release yet\nthat wouldn't require a major version bump (0.14 is incompatible with 0.13\nis incompatible with 0.12 is incompatible with 0.11, taking the _full_ spec\ninto account).  So currently, and probably for the next few releases at\nleast, IPython version == msg spec version.\n\n â€”\n\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2649#issuecomment-11148903.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11160472",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11160472",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11160472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTYwNDcy",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T16:46:10Z",
    "updated_at": "2012-12-08T16:46:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't think it's particularly important to have extra information be\n> formal.\n\nI think extra information is better be optional (can be omitted), but it\nshould be formal.  If it is not, client depending on that information\nmust know which kernel send particular information in what format.\nIt may be end up defining its own code to fetch that data.\n\n> Plus, the msg spec version is _fully redundant_ with the IPython version.\n\nIf you ignore users of master branch, yes.  Also, it requires client\nto know what version of IPython kernel is backward compatible to what\nversion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11165752",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11165752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11165752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY1NzUy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T00:27:56Z",
    "updated_at": "2012-12-09T00:27:56Z",
    "author_association": "MEMBER",
    "body": "I think this much is fairly well settled, yes?\n\n``` python\ncontent = {\n    'protocol_version': [int, int, int],       # or [int, int]?\n    'ipython_version': [int, int, int],   # e.g. [0, 13, 0]\n    'language_version': [int, int, int],    # e.g. [2, 7, 2]\n    'language': str,                      # e.g., 'python', 'ruby', or 'R'\n}\n```\n\nHere are some additional differentiators we may be interested in:\n- Python interpeter (@tkf proposed `interpreter` as a top-level key). I'm not sure this is needed for non-Python kernels.\n- Kernel implementation - for instance, if someone writes subclasses of the IPython kernel, which adds a few message types.  The spec is meant to handle this, so it seems this is the place for such a Kernel to identify itself. We could use 'ipython' by default, and if we ever bring back the pure-Python kernel, we would call it 'ipython-pure' or something.\n- platform - It could be defined on a per-language basis, rather than trying to force each language to conform to Python's `platform.platform()`.\n\nIf these aren't easily settled, we can go with the 4-key version above for now, and add more as we discover a need for them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11166090",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11166090",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11166090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY2MDkw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T01:04:17Z",
    "updated_at": "2012-12-09T01:04:17Z",
    "author_association": "MEMBER",
    "body": "I like this 4 key version.  We can always _add_ new keys later if they\nbecome important.\n\nOn Sat, Dec 8, 2012 at 4:28 PM, Min RK notifications@github.com wrote:\n\n> I think this much is fairly well settled, yes?\n> \n> content = {\n>     'protocol_version': [int, int, int],       # or [int, int]?\n> \n> ```\n> 'ipython_version': [int, int, int],   # e.g. [0, 13, 0]\n> \n> 'language_version': [int, int, int],    # e.g. [2, 7, 2]\n> 'language': str,                      # e.g., 'python', 'ruby', or 'R'}\n> ```\n> \n> Here are some additional differentiators we may be interested in:\n> - Python interpeter (@tkf https://github.com/tkf proposed interpreteras a top-level key). I'm not sure this is needed for non-Python kernels.\n> - Kernel implementation - for instance, if someone writes subclasses\n>   of the IPython kernel, which adds a few message types. The spec is meant to\n>   handle this, so it seems this is the place for such a Kernel to identify\n>   itself. We could use 'ipython' by default, and if we ever bring back the\n>   pure-Python kernel, we would call it 'ipython-pure' or something.\n> - platform - It could be defined on a per-language basis, rather than\n>   trying to force each language to conform to Python's\n>   platform.platform().\n> \n> If these aren't easily settled, we can go with the 4-key version above for\n> now, and add more as we discover a need for them.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2649#issuecomment-11165752.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11166676",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11166676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11166676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY2Njc2",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T02:22:38Z",
    "updated_at": "2012-12-09T02:22:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that @minrk's suggestion is good for a start.\n\nRemaining decision: format of protocol_version. 2-part? 3-part? If 3-part, use semvar?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11167453",
    "html_url": "https://github.com/ipython/ipython/pull/2649#issuecomment-11167453",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2649",
    "id": 11167453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY3NDUz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T04:27:47Z",
    "updated_at": "2012-12-09T04:27:47Z",
    "author_association": "MEMBER",
    "body": "On Sat, Dec 8, 2012 at 6:22 PM, Takafumi Arakaki\nnotifications@github.comwrote:\n\n> I agree that @minrk https://github.com/minrk's suggestion is good for a\n> start.\n> \n> Remaining decision: format of protocol_version. 2-part? 3-part? If 3-part,\n> use semvar?\n\n2-part seems to cover it, but I wouldn't object to having the third field\nanyway.  Can anyone propose a scenario where the message spec itself would\nactually have a 'patch'? I can't think of one.\n\n>  â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2649#issuecomment-11166676.\n"
  }
]
