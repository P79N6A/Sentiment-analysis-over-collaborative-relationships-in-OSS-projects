[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12193574",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12193574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12193574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTkzNTc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-13T13:22:46Z",
    "updated_at": "2013-01-13T13:22:46Z",
    "author_association": "MEMBER",
    "body": "For soem security reason, not going through the server will probably be not recommended and not supported, \nBut this could be done as an extension.\n\nBut this is great.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12193615",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12193615",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12193615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTkzNjE1",
    "user": {
      "login": "yoavram",
      "id": 1288133,
      "node_id": "MDQ6VXNlcjEyODgxMzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yoavram",
      "html_url": "https://github.com/yoavram",
      "followers_url": "https://api.github.com/users/yoavram/followers",
      "following_url": "https://api.github.com/users/yoavram/following{/other_user}",
      "gists_url": "https://api.github.com/users/yoavram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yoavram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yoavram/subscriptions",
      "organizations_url": "https://api.github.com/users/yoavram/orgs",
      "repos_url": "https://api.github.com/users/yoavram/repos",
      "events_url": "https://api.github.com/users/yoavram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yoavram/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-13T13:26:15Z",
    "updated_at": "2013-01-13T13:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you explain why it is not recommended or supported? To educate me, because I'm implementing this kind of think in another project of mine ([markx](https://github.com/yoavram/markx)), and I've seen it implemented in a very nice web app ([prose](http://prose.io)).\nAlso, if you could point me toward a tutorial for writing extensions for the web UI, I might have time to implement it and do a PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12193949",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12193949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12193949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTkzOTQ5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-13T13:56:10Z",
    "updated_at": "2013-01-13T13:56:10Z",
    "author_association": "MEMBER",
    "body": "> Could you explain why it is not recommended or supported?\n\nThis is because the notebook is the perfect place to do javascript injection, and we will probably want to sanitize some part of the notebook on server side.\nIf it is also done client side that might be acceptable. \n\nBut we definitively want a way to interact with github. \n\n> Also, if you could point me toward a tutorial for writing extensions for the web UI, I might have time to implement it and do a PR.\n\nThere are none right now. You have a basic doc here : \nhttp://elacave.lmdb.eu/~carreau/yui/\nYou might be interested in https://github.com/ipython/ipython/pull/2333\n\nIf you have a specific thing in mind, please describe, it might be part of our futur plan and we'll be really happy to see how it can integrate, or help us design the internals.\n\nThe easiest way to inject javascript is to create a custom.js file in \n`~/.ipython/profile_xxx/static/js/custom.js`\nand add a `$.getScript(url)` in it. \nWith your others file you wan't to \"get\" in `~/.ipython/profile_xxx/static/js/` too. \n\nWe will also change a few things on css/js (like moving to bootstrap) and we don't want people to write stuff that wil be broken soon after. \n\nMarkx look really cool, it makes me think of [socrates.io](http://socrates.io/)\nI'll have a look. https://github.com/ipython/nbconvert would be the point where to write converter between the 2 formats.\n\nPinging @ellisonbg as he might be interested. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12194106",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12194106",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12194106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTk0MTA2",
    "user": {
      "login": "yoavram",
      "id": 1288133,
      "node_id": "MDQ6VXNlcjEyODgxMzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yoavram",
      "html_url": "https://github.com/yoavram",
      "followers_url": "https://api.github.com/users/yoavram/followers",
      "following_url": "https://api.github.com/users/yoavram/following{/other_user}",
      "gists_url": "https://api.github.com/users/yoavram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yoavram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yoavram/subscriptions",
      "organizations_url": "https://api.github.com/users/yoavram/orgs",
      "repos_url": "https://api.github.com/users/yoavram/repos",
      "events_url": "https://api.github.com/users/yoavram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yoavram/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-13T14:09:55Z",
    "updated_at": "2013-01-13T14:09:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This is because the notebook is the perfect place to do javascript injection, and we will probably want to sanitize some part of the notebook on server side.\n\nYou mean that someone could write malicious js in the notebook and then use the `gist it` button and that would cause malicious js to run? I didn't think it was possible... \nYou just pickup the notebook raw code with jquery and put it in a `var` and send it to github, I mean, you would do the same sending it to the server for sanitation, wouldn't you? \nAnyway, one could have some ajax query to the server to get a sanitized raw notebook and use that with github.js instead of directly accessing the raw notebook code. Is the notebook currently sanitized before `download` or `print`? \n\nIf this is not the place for this kind of elaboration please let me know :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12194437",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12194437",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12194437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTk0NDM3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-13T14:41:56Z",
    "updated_at": "2013-01-13T14:41:56Z",
    "author_association": "MEMBER",
    "body": "There are no sanitizing now. \nThe problem is more at retrieve time than posting any `<script>` tag in a cell output would be executed at load time.\nSo what we want is to sanitize ipynb files before sending it to the browser.\n\nWith your solution people will certainly use it to download notebook from other's repository. \n\nThere will be extra security browser side to escape some javascript. We'll probably don't want to fully duplicate the sanitizing logic in javascript. The reason for sanitizing in python more than js is that we will have static export with nbconvert which is written in python, and hence we want to be able to  re-use the sanitizing code. \n\nAlso as we will move to multiuser with time, there wil be a working copy of the notebook on server side, \nand in that sens, loading only on client side adds extra logic. \n\nOf course loading from github on client side would be really nice, and will be perfect as an extension, but we just don't have the manpower to maintain everything.\n\nThere are probably other solution like having a node server able to sanitize in javascript so that we can use the same code on both side, and talk to it through zmq, but it comes with the burden on having both tornado and node to run IPython.\n\nOf course all those are prevision and we might be wrong and you might find a better solution. \n\nIn any case this is my interpretation of the consensus.\n\nAlso personally I think this is totally doable outside of 'the core' of IPython which would allow such a project to evolve much more quickly eventually becoming part of the core later. \nIt is something that I would totally use on my day to day routine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12197855",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12197855",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12197855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTk3ODU1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-13T18:40:49Z",
    "updated_at": "2013-01-13T18:40:49Z",
    "author_association": "MEMBER",
    "body": "Just to reiterate the points that Matthias has made:\n- Right now, even though it would be ideal, we can't have the notebook web\n  app talk directly to github because of security reasons.\n- We are in the process of fixing those security problems.\n- Once that is done, we will think about ways of integrating better with\n  github directly through the browser.\n- In the meantime, we recommend just putting your notebooks in github repos\n  and starting the notebook server in that directory.\n\nOn Sun, Jan 13, 2013 at 4:31 AM, Yoav Ram notifications@github.com wrote:\n\n> I'd like to see a feature where I can sync my notebooks across computers\n> and platforms by saving (commit+pull) them to and loading (pull) them from\n> github.\n> This can be done fairly easy with github.jshttps://github.com/michael/githubusing javascript alone (no server-side code). See this\n> jsFiddle http://jsfiddle.net/639hU/ for an example.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/2780.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12210861",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12210861",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12210861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjEwODYx",
    "user": {
      "login": "yoavram",
      "id": 1288133,
      "node_id": "MDQ6VXNlcjEyODgxMzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1288133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yoavram",
      "html_url": "https://github.com/yoavram",
      "followers_url": "https://api.github.com/users/yoavram/followers",
      "following_url": "https://api.github.com/users/yoavram/following{/other_user}",
      "gists_url": "https://api.github.com/users/yoavram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yoavram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yoavram/subscriptions",
      "organizations_url": "https://api.github.com/users/yoavram/orgs",
      "repos_url": "https://api.github.com/users/yoavram/repos",
      "events_url": "https://api.github.com/users/yoavram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yoavram/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T09:11:25Z",
    "updated_at": "2013-01-14T09:11:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I understand. BTW I found it easier to change the notebook configuration to load notebooks from a repo folder rather than starting the server from that folder, but of course this is still not ideal, it constraints me to keep all my notebooks in the same repo instead of having them in their project repos - it's like saving all my data files in the same folder instead of saving them in project folders. And of course if I want to collaborate with someone on a notebook I need to give him permissions for all my notebooks. But I guess you know all this.\nOne question, though - if I fork and implement it, would that be helpful some day or probably not, because there are many other changes planned?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12212855",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12212855",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12212855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjEyODU1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T10:22:10Z",
    "updated_at": "2013-01-14T10:22:10Z",
    "author_association": "MEMBER",
    "body": "> OK, I understand. BTW I found it easier to change the notebook configuration to load notebooks from a repo folder rather than starting the server from that folder, but of course this is still not ideal, it constraints me to keep all my notebooks in the same repo instead of having them in their project repos - it's like saving all my data files in the same folder instead of saving them in project folders. And of course if I want to collaborate with someone on a notebook I need to give him permissions for all my notebooks. But I guess you know all this.\n\nWe' ve planed on adding the ability to browse the filesystem.\n\n> One question, though - if I fork and implement it, would that be helpful some day or probably not, because there are many other changes planned?\n\nYou will probably find that some function are require or API is bad to plug such extension, so it will at least point some place that can get improvement and those could get into the core. So yes forking and implementing that would be usefull. \n\nRight now, we are trying to lang a few big PR to reduce the possibility of conflict between PRs. \nThe main PR that could potentially conflict with your work would be \nhttps://github.com/ipython/ipython/pull/2333 and https://github.com/ipython/ipython/pull/2708\nyou probably want o keep an eye on it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12230866",
    "html_url": "https://github.com/ipython/ipython/issues/2780#issuecomment-12230866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2780",
    "id": 12230866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjMwODY2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T17:59:32Z",
    "updated_at": "2013-01-14T17:59:32Z",
    "author_association": "MEMBER",
    "body": "I am closing this so we have only one issue for Notebook+GitHub integration: #1648 \n"
  }
]
