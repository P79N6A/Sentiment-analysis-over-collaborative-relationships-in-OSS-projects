[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2381576",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2381576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2381576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE1NzY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-12T16:52:59Z",
    "updated_at": "2011-10-12T16:52:59Z",
    "author_association": "MEMBER",
    "body": "Another instance of our crash handler being overzealous.  Should probably be a modest fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2691848",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2691848",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2691848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTE4NDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-10T05:55:47Z",
    "updated_at": "2011-11-10T05:55:47Z",
    "author_association": "MEMBER",
    "body": "What matplotlib version and backend are you using?  With current master (1.2.x), I get a regular traceback on this one, so this may have been fixed in the 1.1 release.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2705852",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2705852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2705852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDU4NTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-11T08:04:25Z",
    "updated_at": "2011-11-11T08:04:25Z",
    "author_association": "MEMBER",
    "body": "@minrk, I was able to reproduce the giant traceback with mpl 1.1.1.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2737645",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2737645",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2737645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc2NDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T22:21:46Z",
    "updated_at": "2011-11-14T22:21:46Z",
    "author_association": "MEMBER",
    "body": "@fperez - what backend?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2737948",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2737948",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2737948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc5NDg=",
    "user": {
      "login": "richardeverson",
      "id": 1095604,
      "node_id": "MDQ6VXNlcjEwOTU2MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1095604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richardeverson",
      "html_url": "https://github.com/richardeverson",
      "followers_url": "https://api.github.com/users/richardeverson/followers",
      "following_url": "https://api.github.com/users/richardeverson/following{/other_user}",
      "gists_url": "https://api.github.com/users/richardeverson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richardeverson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richardeverson/subscriptions",
      "organizations_url": "https://api.github.com/users/richardeverson/orgs",
      "repos_url": "https://api.github.com/users/richardeverson/repos",
      "events_url": "https://api.github.com/users/richardeverson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richardeverson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T22:45:55Z",
    "updated_at": "2011-11-14T22:45:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm using mpl 1.1.0.   With the MacOS backend I get the giant traceback, but with TkAgg a normal traceback:\n\nIn [3]: matplotlib.**version**\nOut[3]: '1.1.0'\n\nIn [4]: rcParams['backend']\nOut[4]: 'TkAgg'\n\nIn [5]: import breaker\n\nIn [6]: Exception in Tkinter callback\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py\", line 1410, in **call**\n    return self.func(_args)\n  File \"/usr/local/Cellar/python/2.7.2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py\", line 495, in callit\n    func(_args)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/backends/backend_tkagg.py\", line 254, in idle_draw\n    self.draw()\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/backends/backend_tkagg.py\", line 239, in draw\n    FigureCanvasAgg.draw(self)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/backends/backend_agg.py\", line 401, in draw\n    self.figure.draw(self.renderer)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/artist.py\", line 55, in draw_wrapper\n    draw(artist, renderer, _args, *_kwargs)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/figure.py\", line 884, in draw\n    func(*args)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/axes3d.py\", line 189, in draw\n    for col in self.collections]\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/art3d.py\", line 315, in do_3d_projection\n    vxs, vys, vzs, vis = proj3d.proj_transform_clip(xs, ys, zs, renderer.M)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/proj3d.py\", line 203, in proj_transform_clip\n    return proj_transform_vec_clip(vec, M)\n  File \"/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/proj3d.py\", line 160, in proj_transform_vec_clip\n    vecw = np.dot(M, vec)\nTypeError: can't multiply sequence by non-int of type 'float'\n\nIn [6]: \n\nI'll try the more recent versions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2738094",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2738094",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2738094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzgwOTQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T22:57:35Z",
    "updated_at": "2011-11-14T23:09:05Z",
    "author_association": "MEMBER",
    "body": "I do not see the crash with current master matplotlib and IPython on:\n- Ubuntu (10.04, default Python 2.6.5): tk, qt (PyQt4)\n- Mac OSX (10.7.2, System Python 2.7.1): osx, tk, qt (PySide)\n\nIn these five cases (10, counting the fact that the same behavior is seen in the qtconsole), I see a regular traceback.\n\nThe only situation where I can reproduce the crash traceback is with the gtk backend (both terminal and qtconsole).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2738313",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2738313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2738313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzgzMTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T23:12:10Z",
    "updated_at": "2011-11-14T23:12:10Z",
    "author_association": "MEMBER",
    "body": "In any case, we have a general issue:  The IPython crash handler should only be catching errors in IPython code.  That means that when we hook up to an eventloop, we have to disable the crash handler immediately, and add enabling/disabling the crash handler as part of the callback we inject to the loop, so it is only active during IPython execution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2739285",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2739285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2739285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzkyODU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-15T00:48:29Z",
    "updated_at": "2011-11-15T00:48:29Z",
    "author_association": "MEMBER",
    "body": "I get it with the Qt4agg backend on ubuntu 10.10, mpl current git.\n\nBut on the more general issue, I completely agree with you, the crash handler needs to get out of the way when event loops are there.\n\nI'm actually inclined to go forward, and consider _disabling_ the crash handler by default, and instead add a magic that turns it manually on.  If people come to us with normal tracebacks that we can't debug and their crash is reproducible, we can tell them to type\n\n%crash_handler on\n\nand then to mail us the output.\n\nI wrote that crash handler code early in ipython's life, when there was _zero_ test suite and basically every problem I fixed was via crashes reported by users, so having this information was extremely useful.  But in recent years, with increasingly solid test suite coverage (not perfect, but certainly decent), it seems like the CH is actually causing us more headaches than solutions.  What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2739455",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2739455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2739455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzk0NTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-15T01:08:29Z",
    "updated_at": "2011-11-15T01:08:29Z",
    "author_association": "MEMBER",
    "body": "I'm inclined to agree.  Do we want to still override excepthook with something that mentions how to report issues or turn on the verbose handler, but without the big crash message, and massive traceback?\n\ne.g.\n\n```\n-------------------------\nregular traceback\n...\nException : msg\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to ipython-dev@scipy.org\n\nYou can enable a much more verbose traceback with `%crash_handler on`.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2739459",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2739459",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2739459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzk0NTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-15T01:09:11Z",
    "updated_at": "2011-11-15T01:09:11Z",
    "author_association": "MEMBER",
    "body": "That sounds like the perfect solution to me, yes!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2803325",
    "html_url": "https://github.com/ipython/ipython/issues/833#issuecomment-2803325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/833",
    "id": 2803325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDMzMjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-20T10:41:46Z",
    "updated_at": "2011-11-20T10:41:46Z",
    "author_association": "MEMBER",
    "body": "Actually I'm closing this: it's just a bad call to matplotlib that only triggers in the event loop.  The user did make an error, there's nothing we can do other than printing the traceback.  The fact that the traceback looks different is an indicator that it came from somewhere outside of the normal execution.  Users can still use `%tb` to get a detailed traceback and `%debug` also works, so I don't see what else we need to do here.\n"
  }
]
