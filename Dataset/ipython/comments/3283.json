[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17503326",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17503326",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17503326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTAzMzI2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T19:43:09Z",
    "updated_at": "2013-05-06T19:43:09Z",
    "author_association": "MEMBER",
    "body": "what do you mean 'maintained the use of files'?  Please provide specific code that produces the behavior you are concerned about.  I expect this is simply the behavior of Python imports / path (when in doubt about this sort of thing, always try to compare IPython's behavior with Python's - if they do not differ, it is almost certainly not a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17503607",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17503607",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17503607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTAzNjA3",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T19:48:15Z",
    "updated_at": "2013-05-06T19:48:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk - I think the idea here is that because IPython explicitly maintains a concept of directory state (the Python interpreter does not), the user should see files in the current working directory as being on their Python-import-ready sys.path.\n\nAddressing this would involve modifying the directory-navigation IPython magic %cd so that it automatically pushes and pops the current working directory from sys.path during traversal.  It doesn't seem unreasonable to me to consider this as a feature request, but yes, it is almost certainly not a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17504017",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17504017",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17504017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA0MDE3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T19:55:20Z",
    "updated_at": "2013-05-06T19:55:20Z",
    "author_association": "MEMBER",
    "body": "But it does - the first entry on sys.path is `''`, which evaluates to the CWD at import time, so if you do:\n\n``` bash\nmkdir bar\necho \"which = 'just foo'\" > foo.py\necho \"which = 'in bar'\" > bar/foo.py\nipython\n```\n\nThen `foo` will be whichever one is in the CWD at the time of import:\n\n``` python\nIn [1]: import foo\n\nIn [2]: foo.which\nOut[2]: 'just foo'\n\nIn [3]: cd bar\n/Users/minrk/temp/bar\n\nIn [4]: reload(foo)\nOut[4]: <module 'foo' from 'foo.py'>\n\nIn [5]: foo.which\nOut[5]: 'in bar'\n```\n\nPlain Python behaves the same way:\n\n``` python\n>>> import foo\n>>> foo.which\n'just foo'\n>>> import os\n>>> os.chdir('bar')\n>>> reload(foo)\n<module 'foo' from 'foo.pyc'>\n>>> foo.which\n'in bar'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17504914",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17504914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17504914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA0OTE0",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T20:10:45Z",
    "updated_at": "2013-05-06T20:10:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk Consider me taken to school :)\n\n@jennajella - were you using a !cd command instead of IPython's native cd\nor %cd syntax?  The two do different things (the first launches a new shell\nthat does a cd command and exits, the second form actually changes the\nIPython interpreter state).\n\nOn Mon, May 6, 2013 at 8:55 PM, Min RK notifications@github.com wrote:\n\n> But it does - the first entry on sys.path is '', which evaluates to the\n> CWD at import time, so if you do:\n> \n> mkdir barecho \"which = 'just foo'\" > foo.pyecho \"which = 'in bar'\" > bar/foo.py\n> ipython\n> \n> Then foo will be whichever one is in the CWD at the time of import:\n> \n> In [1]: import foo\n> In [2]: foo.whichOut[2]: 'just foo'\n> In [3]: cd bar/Users/minrk/temp/bar\n> In [4]: reload(foo)Out[4]: <module 'foo' from 'foo.py'>\n> In [5]: foo.whichOut[5]: 'in bar'\n> \n> Plain Python behaves the same way:\n> \n> > > > import foo>>> foo.which'just foo'>>> import os>>> os.chdir('bar')>>> reload(foo)<module 'foo' from 'foo.pyc'>>>> foo.which'in bar'\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3283#issuecomment-17504017\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17505050",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17505050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17505050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA1MDUw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T20:13:01Z",
    "updated_at": "2013-05-06T20:13:01Z",
    "author_association": "MEMBER",
    "body": "My guess is that @jennajella is importing `foo` (or the equivalent), and then changing directory, but foo stays the same because it has already been imported the first time (the reason I had to `reload(foo)` to get the new local `foo` after cd.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17506066",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17506066",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17506066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA2MDY2",
    "user": {
      "login": "jniedziela",
      "id": 4357678,
      "node_id": "MDQ6VXNlcjQzNTc2Nzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4357678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jniedziela",
      "html_url": "https://github.com/jniedziela",
      "followers_url": "https://api.github.com/users/jniedziela/followers",
      "following_url": "https://api.github.com/users/jniedziela/following{/other_user}",
      "gists_url": "https://api.github.com/users/jniedziela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jniedziela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jniedziela/subscriptions",
      "organizations_url": "https://api.github.com/users/jniedziela/orgs",
      "repos_url": "https://api.github.com/users/jniedziela/repos",
      "events_url": "https://api.github.com/users/jniedziela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jniedziela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T20:30:16Z",
    "updated_at": "2013-05-06T20:33:42Z",
    "author_association": "NONE",
    "body": "The first item on my path is the ' ', and I was using cd (ipython native).  I will read the docs about the differences.\n\nI've confirmed that the example from @minrk  works as posted, and when I do the reset on the workspace, foo goes away.\n\nBut this still doesn't quite add up, since I've imported the module, run it, changed the directory, cleared the workspace, and then imported again when working in the new directory, but the import is defaulting to the old location.  The ipython output for the exercise is below.\n\n```\njj:sandbox  $ cd DW/\n```\n\n## list directory contents\n\n```\njj:DW  $ ls\nRMSD.txt  \nFORCE_CONSTANTS         \nNb_CF_Script.py     \nNb_input.py             \nkernelGenerator\nutils/\n```\n\n## start ipython\n\n``` python\njj:DW  $ ipython\nPython 2.7.2 (default, Oct 11 2012, 20:14:37) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.14.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\n#run the script.  The location of the NbSetupFiles module is not on the path at this time, so the import fails.\n\nIn [1]: run Nb_CF_Script.py\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/Library/Python/2.7/site-packages/ipython-0.14.dev-py2.7.egg/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    181             else:\n    182                 filename = fname\n--> 183             __builtin__.execfile(filename, *where)\n\n/Users/ /Documents/sandbox/DW/Nb_CF_Script.py in <module>()\n      1 \n      2 \n----> 3 from NbSetupFiles import *\n      4 \n      5 \n\nImportError: No module named NbSetupFiles\n\nIn [2]: quit()\n```\n\n## Change to CF directory (predecessor of DW)\n\n```\njj:DW  $ cd ../CF\n```\n\n## list directory contents\n\nNbSetupFiles is in the top level here, and is imported when the script is run in ipython line [1].  Import fails because the remainder of the required packages is not on the path.\n\n```\njj:CF  $ ls\nNbSetupFiles.py     \nNb_m1m1m3_narrow.txt        \nkernelGenerator\nCalcSQE_Nb_5K.png   \nNbSetupFiles.pyc        \nNb_input.py         \nNb_narrow_simulation.txt\nutils/\nNb_CF_Script.py \nNb_m1m1m3_full.txt      \nRMSD.txt\n```\n\n``` python\njj:CF  $ ipython\nPython 2.7.2 (default, Oct 11 2012, 20:14:37) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.14.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\n\nIn [1]: run Nb_CF_Script.py\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/Library/Python/2.7/site-packages/ipython-0.14.dev-py2.7.egg/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    181             else:\n    182                 filename = fname\n--> 183             __builtin__.execfile(filename, *where)\n\n/Users/jj/Documents/sandbox/CF/Nb_CF_Script.py in <module>()\n      1 \n      2 \n----> 3 from NbSetupFiles import *\n      4 \n      5 \n\n/Users/jj/Documents/sandbox/CF/NbSetupFiles.py in <module>()\n      2 import matplotlib.pyplot as plt\n      3 import matplotlib.pylab\n----> 4 from SystemDefinition import *\n      5 from BinnedSQE import *\n      6 from kernelGenerator.sqeForExistedPhononsForGivenQ import SQECalculatorForExistingPhononsForGivenQ\n\nImportError: No module named SystemDefinition\n```\n\n## I reset the namespace to clear out the old imports\n\n``` python\nIn [2]: reset\nOnce deleted, variables cannot be recovered. Proceed (y/[n])? y\n```\n\n## Change to the desired directory\n\n``` python\nIn [3]: cd ../DW/\n/Users/jj/Documents/sandbox/DW\n```\n\n## show directory contents - no NbSetupFiles as expected\n\n``` python\nIn [4]: ls\nRMSD.txt  \nFORCE_CONSTANTS         \nNb_CF_Script.py     \nNb_input.py             \nkernelGenerator\nutils/\n```\n\n## Check that the namespace is empty\n\n```\nIn [5]: whos\nInteractive namespace is empty.\n```\n\n## Run the script, and the old NbSetupFiles is used.\n\n``` python\nIn [6]: run Nb_CF_Script.py\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/Library/Python/2.7/site-packages/ipython-0.14.dev-py2.7.egg/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    181             else:\n    182                 filename = fname\n--> 183             __builtin__.execfile(filename, *where)\n\n/Users/jj/Documents/sandbox/DW/Nb_CF_Script.py in <module>()\n      1 \n      2 \n----> 3 from NbSetupFiles import *\n      4 \n      5 \n\n/Users/jj/Documents/sandbox/CF/NbSetupFiles.py in <module>()\n      2 import matplotlib.pyplot as plt\n      3 import matplotlib.pylab\n----> 4 from SystemDefinition import *\n      5 from BinnedSQE import *\n      6 from kernelGenerator.sqeForExistedPhononsForGivenQ import SQECalculatorForExistingPhononsForGivenQ\n\nImportError: No module named SystemDefinition\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17506492",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17506492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17506492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA2NDky",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T20:37:28Z",
    "updated_at": "2013-05-06T20:37:28Z",
    "author_association": "MEMBER",
    "body": "> I reset the namespace to clear out the old imports\n\nHere is where you are getting tripped up - `reset` does _not_ 'undo' imports, it only clears out the user namespace.  You must use `reload` (via `reload`, `dreload`, or `autoreload`) if you want to reimport a module from a new file.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17506574",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17506574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17506574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA2NTc0",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T20:38:42Z",
    "updated_at": "2013-05-06T20:40:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Python's import caches previously loaded modules, even when you clear your workspace.  \n\nYou have to explicitly reload(modulename) if you want to reload a new one.  To play off Min's example:\n\n``` python\nIn [1]: import foo\n\nIn [2]: %reset\nOnce deleted, variables cannot be recovered. Proceed (y/[n])? y\n\nIn [3]: cd bar\n/Users/aron/sandbox/playground/bar\n\nIn [4]: foo\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-4-d3b07384d113> in <module>()\n----> 1 foo\n\nNameError: name 'foo' is not defined\n\nIn [5]: import foo\n\nIn [6]: foo.which\nOut[6]: 'just foo'\n\nIn [7]: reload(foo)\nOut[7]: <module 'foo' from 'foo.pyc'>\n\nIn [8]: foo.which\nOut[8]: 'in bar'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17507585",
    "html_url": "https://github.com/ipython/ipython/issues/3283#issuecomment-17507585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3283",
    "id": 17507585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTA3NTg1",
    "user": {
      "login": "jniedziela",
      "id": 4357678,
      "node_id": "MDQ6VXNlcjQzNTc2Nzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4357678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jniedziela",
      "html_url": "https://github.com/jniedziela",
      "followers_url": "https://api.github.com/users/jniedziela/followers",
      "following_url": "https://api.github.com/users/jniedziela/following{/other_user}",
      "gists_url": "https://api.github.com/users/jniedziela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jniedziela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jniedziela/subscriptions",
      "organizations_url": "https://api.github.com/users/jniedziela/orgs",
      "repos_url": "https://api.github.com/users/jniedziela/repos",
      "events_url": "https://api.github.com/users/jniedziela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jniedziela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-06T20:55:52Z",
    "updated_at": "2013-05-06T20:55:52Z",
    "author_association": "NONE",
    "body": "OK - I believe this is cleared up - Thanks for your help!\n"
  }
]
