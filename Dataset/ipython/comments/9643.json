[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/227215775",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-227215775",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 227215775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzIxNTc3NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T17:45:49Z",
    "updated_at": "2016-06-20T17:45:49Z",
    "author_association": "MEMBER",
    "body": "We show that if there's a factor of 4 difference between the fastest and slowest run, IIRC. But we step up the number of loops we time until it takes long enough to get an accurate reading, so if you time something very fast, the first timings with only a few loops will be dominated by the overhead. Unfortunately it's tricky to distinguish that from a case where something is actually cached and you may not be timing what you think you're timing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/227498478",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-227498478",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 227498478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzQ5ODQ3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T16:40:51Z",
    "updated_at": "2016-06-21T16:40:51Z",
    "author_association": "MEMBER",
    "body": "Well, one of the things we could try is starting the tuning at `number=10`, or check whether the 1st tuning loop is below a certain threshold, in which case the overhead is likely the thing we measure. \n\nYou can regardless use explicit -n, -r, in which case there will be no tuning, and you will get a more consistent response. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281851141",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-281851141",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 281851141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTg1MTE0MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T00:30:21Z",
    "updated_at": "2017-02-23T00:30:21Z",
    "author_association": "MEMBER",
    "body": "#9984 have improved timeit significantly, report mean +std instead of best/worst. And have a check a 1e-6 seconds below which it does not warn.  So this is likely fixed. Can any of you confirm ? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/282502285",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-282502285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 282502285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUwMjI4NQ==",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T18:22:17Z",
    "updated_at": "2017-02-25T18:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "The latest version works great, and the std return is very useful.  Thank you!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/282502333",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-282502333",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 282502333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUwMjMzMw==",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T18:23:04Z",
    "updated_at": "2017-02-25T18:23:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "(The one thing that is slightly unclear is what the phrase 'using standard deviation' means.)\r\n\r\n```\r\n10000000 loops, average of 7: 103 ns +- 1.18 ns per loop (using standard deviation)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/282503181",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-282503181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 282503181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUwMzE4MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T18:36:53Z",
    "updated_at": "2017-02-25T18:36:53Z",
    "author_association": "MEMBER",
    "body": "It means that 1.18 is std, and not max=103+1.18 and min=103-1.18.\r\nDo you have a better  phrasing in mind ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/282504120",
    "html_url": "https://github.com/ipython/ipython/issues/9643#issuecomment-282504120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9643",
    "id": 282504120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUwNDEyMA==",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-25T18:51:55Z",
    "updated_at": "2017-02-25T18:52:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps: `mean 103 ns, standard deviation 1.18` or `103 ns +- 1.18 s (standard deviation)`\r\n\r\nIt was 'using' that confused me thinking that it is being used to determine the number of runs, e.g., and that there is another method available."
  }
]
