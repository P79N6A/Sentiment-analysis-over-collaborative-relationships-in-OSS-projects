[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242375871",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242375871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242375871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM3NTg3MQ==",
    "user": {
      "login": "gforsyth",
      "id": 3596999,
      "node_id": "MDQ6VXNlcjM1OTY5OTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3596999?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gforsyth",
      "html_url": "https://github.com/gforsyth",
      "followers_url": "https://api.github.com/users/gforsyth/followers",
      "following_url": "https://api.github.com/users/gforsyth/following{/other_user}",
      "gists_url": "https://api.github.com/users/gforsyth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gforsyth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gforsyth/subscriptions",
      "organizations_url": "https://api.github.com/users/gforsyth/orgs",
      "repos_url": "https://api.github.com/users/gforsyth/repos",
      "events_url": "https://api.github.com/users/gforsyth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gforsyth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T12:57:13Z",
    "updated_at": "2016-08-25T12:57:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau have you played around with @scopatz's amalgamation package yet?   https://github.com/xonsh/amalgamate\n\nhttps://github.com/xonsh/lazyasd might help also\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242381663",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242381663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242381663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM4MTY2Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T13:16:01Z",
    "updated_at": "2016-08-25T13:16:01Z",
    "author_association": "MEMBER",
    "body": "I've done a bit of work on this years ago - mainly trying to eliminate imports of modules we don't actually need. It's hard to make much difference that way, but we're probably due for another pass. @scopatz's tools look neat, though I'd be a bit worried about the clever things they do with imports breaking other things we haven't thought of.\n\nI wonder how much of that startup time is due to the `pkg_resources` problem where it scans all installed packages on import?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242383544",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242383544",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242383544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM4MzU0NA==",
    "user": {
      "login": "gforsyth",
      "id": 3596999,
      "node_id": "MDQ6VXNlcjM1OTY5OTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3596999?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gforsyth",
      "html_url": "https://github.com/gforsyth",
      "followers_url": "https://api.github.com/users/gforsyth/followers",
      "following_url": "https://api.github.com/users/gforsyth/following{/other_user}",
      "gists_url": "https://api.github.com/users/gforsyth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gforsyth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gforsyth/subscriptions",
      "organizations_url": "https://api.github.com/users/gforsyth/orgs",
      "repos_url": "https://api.github.com/users/gforsyth/repos",
      "events_url": "https://api.github.com/users/gforsyth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gforsyth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T13:22:10Z",
    "updated_at": "2016-08-25T13:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "On our end, it was almost entirely the `pkg_resources` problem\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242390641",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242390641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242390641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM5MDY0MQ==",
    "user": {
      "login": "scopatz",
      "id": 320553,
      "node_id": "MDQ6VXNlcjMyMDU1Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/320553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scopatz",
      "html_url": "https://github.com/scopatz",
      "followers_url": "https://api.github.com/users/scopatz/followers",
      "following_url": "https://api.github.com/users/scopatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/scopatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scopatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scopatz/subscriptions",
      "organizations_url": "https://api.github.com/users/scopatz/orgs",
      "repos_url": "https://api.github.com/users/scopatz/repos",
      "events_url": "https://api.github.com/users/scopatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scopatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T13:42:38Z",
    "updated_at": "2016-08-25T13:42:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi all, my guess is that lazyasd would get IPython most of the way there.  As @takluyver said, I think you probably end up actually using most of your imports in IPython, so really the only thing amalgamate would help with is filesystem thrashing (which can be a big deal on older machines).\n\nImplementing lazily loaded data structures, lazily compiled regexes, etc can have a huge effect on startup time.\n\n> @scopatz's tools look neat, though I'd be a bit worried about the clever things they do with imports breaking other things we haven't thought of.\n\nWe have yet to encounter anything that wasn't a couple of line change in xonsh.  There are some annoyances with debugging and amalgamate. We have yet to figure out how to get the traceback to point to the original file.\n\n> I wonder how much of that startup time is due to the pkg_resources problem where it scans all installed packages on import?\n> \n> On our end, it was almost entirely the pkg_resources problem\n\nOnce the code base is lazy, `pkg_resources` does become the dominating effect.  However, lazyasd has a 'fix' for this by loading it in a background thread. This happens is such a way that if someone actually tries to use it, the calling thread will block until the module is loaded.  See https://github.com/xonsh/lazyasd#background-imports\n\nThis is why I think you might be able to mostly get away with lazyasd.  In any event, it is just a single file that you should feel free to drop into IPython if you don't want to have another dependency.  As someone who isn't doing the work, I think it is worth trying out :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242424810",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242424810",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242424810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQyNDgxMA==",
    "user": {
      "login": "willingc",
      "id": 2680980,
      "node_id": "MDQ6VXNlcjI2ODA5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willingc",
      "html_url": "https://github.com/willingc",
      "followers_url": "https://api.github.com/users/willingc/followers",
      "following_url": "https://api.github.com/users/willingc/following{/other_user}",
      "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willingc/subscriptions",
      "organizations_url": "https://api.github.com/users/willingc/orgs",
      "repos_url": "https://api.github.com/users/willingc/repos",
      "events_url": "https://api.github.com/users/willingc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willingc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T15:16:11Z",
    "updated_at": "2016-08-25T15:16:11Z",
    "author_association": "MEMBER",
    "body": "@Carreau Do you remember which operating system took 10s at the bootcamp?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242453036",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242453036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242453036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ1MzAzNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T16:30:54Z",
    "updated_at": "2016-08-25T16:30:54Z",
    "author_association": "MEMBER",
    "body": "Thanks @scopatz and @gforsyth for chiming in. Yes, I've seen both, and want to try this out. \nas amalgamate can also be \"opt-in\" we might be able to provide that only as a first pass as an option with an env variable.\n\n> Do you remember which operating system took 10s at the bootcamp\n\nThe slowest one was an ultramobile windows box laptop, that felt slow even in IE. Though there was also a Old-ish Mac close to 7sec as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242453976",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-242453976",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 242453976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ1Mzk3Ng==",
    "user": {
      "login": "scopatz",
      "id": 320553,
      "node_id": "MDQ6VXNlcjMyMDU1Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/320553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scopatz",
      "html_url": "https://github.com/scopatz",
      "followers_url": "https://api.github.com/users/scopatz/followers",
      "following_url": "https://api.github.com/users/scopatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/scopatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scopatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scopatz/subscriptions",
      "organizations_url": "https://api.github.com/users/scopatz/orgs",
      "repos_url": "https://api.github.com/users/scopatz/repos",
      "events_url": "https://api.github.com/users/scopatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scopatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T16:33:21Z",
    "updated_at": "2016-08-25T16:33:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "\"opt-in\" is a good plan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/243004724",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-243004724",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 243004724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzAwNDcyNA==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-28T22:55:18Z",
    "updated_at": "2016-08-28T23:00:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just wanted to open another issue about startup timing of new IPython 5. Hope this is the right place.\n\nSo I'm on Windows 10, 8GB RAM and i5. The first time I run IPython it can take several seconds, maybe even 10 seconds, like if I'm opening Visual Studio.\n\nI tried simply `python -v -m IPython` but could not detect offender - a large list of imports just passes by. So this is only on first time I instantiate IPython, as later it loads quick.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/243779020",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-243779020",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 243779020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzc3OTAyMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T14:19:22Z",
    "updated_at": "2016-08-31T14:19:22Z",
    "author_association": "MEMBER",
    "body": "@klonuo in your installed `IPython/__init__.py`, find the line `import sys`, and immediately below, try inserting:\n\n``` python\nsys.modules['pkg_resources'] = None\n```\n\nThat should block one particular module we think is slowing it down. Can you see if that makes a noticeable/measurable difference?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244159240",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-244159240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 244159240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE1OTI0MA==",
    "user": {
      "login": "klonuo",
      "id": 361447,
      "node_id": "MDQ6VXNlcjM2MTQ0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/361447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klonuo",
      "html_url": "https://github.com/klonuo",
      "followers_url": "https://api.github.com/users/klonuo/followers",
      "following_url": "https://api.github.com/users/klonuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/klonuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klonuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klonuo/subscriptions",
      "organizations_url": "https://api.github.com/users/klonuo/orgs",
      "repos_url": "https://api.github.com/users/klonuo/repos",
      "events_url": "https://api.github.com/users/klonuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klonuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T17:55:21Z",
    "updated_at": "2016-09-01T17:55:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, after inserting that line and rebooting (so that I start IPython clean) it starts noticeable quick., w/o need to make any measurements.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244182412",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-244182412",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 244182412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE4MjQxMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T19:15:07Z",
    "updated_at": "2016-09-01T19:15:07Z",
    "author_association": "MEMBER",
    "body": "OK, so maybe we should look into lazyasd's background module loading.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/247154954",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-247154954",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 247154954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzE1NDk1NA==",
    "user": {
      "login": "hainm",
      "id": 4451957,
      "node_id": "MDQ6VXNlcjQ0NTE5NTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4451957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hainm",
      "html_url": "https://github.com/hainm",
      "followers_url": "https://api.github.com/users/hainm/followers",
      "following_url": "https://api.github.com/users/hainm/following{/other_user}",
      "gists_url": "https://api.github.com/users/hainm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hainm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hainm/subscriptions",
      "organizations_url": "https://api.github.com/users/hainm/orgs",
      "repos_url": "https://api.github.com/users/hainm/repos",
      "events_url": "https://api.github.com/users/hainm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hainm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T21:10:53Z",
    "updated_at": "2016-09-14T21:10:53Z",
    "author_association": "NONE",
    "body": "making the startup time much shorter (or using lazy import) will be incredibly helpful. Although It only takes few seconds to go to IPython mode, it's just like 'slow motion' when I just need it for quickly checking function's doc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/271622026",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-271622026",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 271622026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTYyMjAyNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T16:23:54Z",
    "updated_at": "2017-01-10T16:23:54Z",
    "author_association": "MEMBER",
    "body": "I've made PR #10147 with some changes to avoid loading pkg_resources. I didn't use lazyasd for this, because while what it does is really clever, I'm still worried that something will go wrong, and that's the sort of issue that would be horrible to debug.\r\n\r\nI made a simpler, more specific change. The downside is that it could be broken if `pygments.plugin` changes, but that doesn't seem a major risk at the present pace of pygments development."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/300688628",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-300688628",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 300688628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY4ODYyOA==",
    "user": {
      "login": "o11c",
      "id": 964689,
      "node_id": "MDQ6VXNlcjk2NDY4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/964689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/o11c",
      "html_url": "https://github.com/o11c",
      "followers_url": "https://api.github.com/users/o11c/followers",
      "following_url": "https://api.github.com/users/o11c/following{/other_user}",
      "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o11c/subscriptions",
      "organizations_url": "https://api.github.com/users/o11c/orgs",
      "repos_url": "https://api.github.com/users/o11c/repos",
      "events_url": "https://api.github.com/users/o11c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/o11c/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-11T05:46:05Z",
    "updated_at": "2017-05-11T05:46:05Z",
    "author_association": "NONE",
    "body": "Instead of just guessing randomly, I profiled (these specific timings are for 5.1.0, but 6.0.0 is not notably different).\r\n\r\nFirst: real timings, on a hot cache:\r\n```\r\n$ time python3 -m IPython -c 'import sys'\r\nreal    0m2.547s\r\nuser    0m1.876s\r\nsys     0m0.072s\r\n```\r\nOf this, about half is from `import IPython`. But this comment is about the *other* half.\r\n(as a rule, anything over 0.25 is considered \"not for interactive use\")\r\n\r\nI ran `pprofile` in deterministic mode (*very* slow, so you can't depend on the absolute timings, just the relative ones), opened it in kcachegrind, and found one callstack dominating the post-import time:\r\n\r\n```\r\n(uninteresting regex internals snipped since I'm typing this manually)\r\nre.py:22: in compile\r\npygments/lexer.py:423: in_process_regex\r\npygments/lexer.py:470: in _process_state\r\n(unknown): <cycle 9>\r\npygments/lexer.py:514: in process_tokendef\r\npygments/lexer.py:571: in __call__\r\nprompt_toolkit/layout/lexers.py:174: in __init__\r\nIPython/terminal/ptutils.py:79: in __init__\r\nIPython/terminal/interactiveshell.py:303: in _layout_options\r\nIPython/terminal/interactiveshell.py:209: in init_prompt_toolkit_cli\r\nIPython/terminal/interactiveshell.py:395: in __init__\r\n(and I presume you know how to get there)\r\n```\r\n\r\nOr in short: once import is over, it's all `pygments.lexers.Python3Lexer`'s fault. In particular, the grammar is constructed in an absolutely retarded way (speaking as a semi-expert in parsing) - and it certainly doesn't help that python's regexes are perl-based rather than posix-based.\r\n\r\nIf I had to guess, the biggest win would be dropping all the keyword tokens during regex-time, and doing a dict lookup if it is `name`."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/300754223",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-300754223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 300754223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDc1NDIyMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-11T10:51:38Z",
    "updated_at": "2017-05-11T10:51:38Z",
    "author_association": "MEMBER",
    "body": "Thanks @o11c for that investigation. Would you have time to have a go at improving the regexes [in pygments](https://bitbucket.org/birkenfeld/pygments-main)? We had some success getting another performance related improvement into pygments."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/300829929",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-300829929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 300829929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDgyOTkyOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-11T15:41:06Z",
    "updated_at": "2017-05-11T15:41:06Z",
    "author_association": "MEMBER",
    "body": "Would pickling/caching make things faster ? Or maybe we can figure out how to load that lazily onee the user has an already usable interface ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/301185335",
    "html_url": "https://github.com/ipython/ipython/issues/9908#issuecomment-301185335",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9908",
    "id": 301185335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTE4NTMzNQ==",
    "user": {
      "login": "o11c",
      "id": 964689,
      "node_id": "MDQ6VXNlcjk2NDY4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/964689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/o11c",
      "html_url": "https://github.com/o11c",
      "followers_url": "https://api.github.com/users/o11c/followers",
      "following_url": "https://api.github.com/users/o11c/following{/other_user}",
      "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o11c/subscriptions",
      "organizations_url": "https://api.github.com/users/o11c/orgs",
      "repos_url": "https://api.github.com/users/o11c/repos",
      "events_url": "https://api.github.com/users/o11c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/o11c/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-12T21:03:19Z",
    "updated_at": "2017-05-12T21:03:19Z",
    "author_association": "NONE",
    "body": "@takluyver I don't have time right now, and it would probably require major internal architectural changes, for which I don't have the experience.\r\n\r\n@Carreau pickling wouldn't help, because the pickled form of compiled regexes is just \"call `re.compile` with `\"abc|def|ghi\"` as an argument\""
  }
]
