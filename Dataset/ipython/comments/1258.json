[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3470814",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3470814",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3470814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA4MTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-12T21:22:54Z",
    "updated_at": "2012-01-12T21:22:54Z",
    "author_association": "MEMBER",
    "body": "Yup, confirmed.  Swamped right now, but we definitely need this one fixed, along with an added test... Thanks for the report!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3470816",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3470816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3470816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA4MTY=",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-12T21:22:58Z",
    "updated_at": "2012-01-12T21:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "The line that is triggering the problem is the `,1,2,3` line. The initial `,` is IPython syntax for applying autocalling. `,f x y` gets translated to `f('x','y')`. I'm not entirely sure why `store_or_execute()` is trying to transform that line independently. Typing that code at that IPython prompt manually does not cause any problem. Executing `,1,2,3` by itself at the command line \"correctly\" transforms it to `1(\",2,3\")` and fails as expected.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3471238",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3471238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3471238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzEyMzg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-12T21:53:05Z",
    "updated_at": "2012-01-12T21:53:05Z",
    "author_association": "MEMBER",
    "body": "Normally we only run prefilter when the input is a single line. Is there a good reason we use it on multiline code for %paste?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3472305",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3472305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3472305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzIzMDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-12T23:06:19Z",
    "updated_at": "2012-01-12T23:06:19Z",
    "author_association": "MEMBER",
    "body": "On Thu, Jan 12, 2012 at 1:53 PM, Thomas\nreply@reply.github.com\nwrote:\n\n> Normally we only run prefilter when the input is a single line. Is there a good reason we use it on multiline code for %paste?\n\nWell, we still want magics and such to work in pasted blocks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3473156",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3473156",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3473156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzMxNTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-13T00:14:15Z",
    "updated_at": "2012-01-13T00:14:15Z",
    "author_association": "MEMBER",
    "body": "> Well, we still want magics and such to work in pasted blocks.\n\nOf course. But we could use inputsplitter, as we do for multiline cells. It just means automagics (`paste` without the %) don't work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3473215",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3473215",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3473215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzMyMTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-13T00:19:24Z",
    "updated_at": "2012-01-13T00:19:24Z",
    "author_association": "MEMBER",
    "body": "On Thu, Jan 12, 2012 at 4:14 PM, Thomas\nreply@reply.github.com\nwrote:\n\n> Of course. But we could use inputsplitter, as we do for multiline cells. It just means automagics (`paste` without the %) don't work.\n\nAh, we most certainly should be doing that!  It's probably then that\nthis code never got updated.  It's OK for unqualified magics to not\nwork here, just like they don't work in multiline cells either.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3473868",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3473868",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3473868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzM4Njg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-13T01:18:15Z",
    "updated_at": "2012-01-13T01:18:15Z",
    "author_association": "MEMBER",
    "body": "For that matter, we should probably unify inputsplitter and prefilter, as they now do largely equivalent things (since inputsplitter is no longer responsible for actually splitting input).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3473968",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-3473968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 3473968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzM5Njg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-13T01:28:04Z",
    "updated_at": "2012-01-13T01:28:04Z",
    "author_association": "MEMBER",
    "body": "On Thu, Jan 12, 2012 at 5:18 PM, Thomas\nreply@reply.github.com\nwrote:\n\n> For that matter, we should probably unify inputsplitter and prefilter, as they now do largely equivalent things (since inputsplitter is no longer responsible for actually splitting input).\n\nYes, a cleanup on this front would be great.\n\nIt's important that we maintain an entry point for users to provide\ntheir own custom parsing of user input, as this is used in practice by\nprojects such as Sage.  But a simplification of this machinery would\nbe most welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5137787",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-5137787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 5137787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzc3ODc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T08:34:25Z",
    "updated_at": "2012-04-15T08:34:25Z",
    "author_association": "MEMBER",
    "body": "@takluyver, do you want to tackle this one?  I'm kind of triaging what's realistic for 0.13, and this one is indeed a bit of a nasty bug, but there's only so much we'll be able to chew before release...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5138391",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-5138391",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 5138391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzgzOTE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T10:45:16Z",
    "updated_at": "2012-04-15T10:45:16Z",
    "author_association": "MEMBER",
    "body": "I'll have a look, but it may be that it needs to wait for a proper refactoring of prefilter & inputsplitter, which I guess would be post 0.13.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5142509",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-5142509",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 5142509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDI1MDk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T20:49:08Z",
    "updated_at": "2012-04-15T20:49:08Z",
    "author_association": "MEMBER",
    "body": "OK, thanks.  I'll leave it to you then: if you decide not to tackle it soon, then go ahead and remove the milestone marker on it so that it doesn't appear for 0.13.  It would be great to have this cleaned up, bug given how going deep into that machinery is potentially very disruptive, the wiser course of action may just be to wait so we don't break something critical just prior to release.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6317491",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-6317491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 6317491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTc0OTE=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-14T00:13:59Z",
    "updated_at": "2012-06-14T00:13:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another case where this can bite you is the % magic syntax:\n\n```\nIn [3]: cpaste\nPasting code; enter '--' alone on the line to stop or use Ctrl-D.\n:    print('My favorite number is %d'\n:          % 5)\n:\n:<EOF>\n  File \"<ipython-input-3-d00b86fe925c>\", line 2\n    get_ipython().magic(u'5 )')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6522835",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-6522835",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 6522835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjI4MzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-23T05:50:18Z",
    "updated_at": "2012-06-23T05:50:18Z",
    "author_association": "MEMBER",
    "body": "BTW, I'm working on this one... Just pinging here so nobody starts at the same time and we don't repeat work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6528471",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-6528471",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 6528471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjg0NzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-23T21:27:55Z",
    "updated_at": "2012-06-23T21:27:55Z",
    "author_association": "MEMBER",
    "body": "As indicated by @jseabold on the mailing list:\n\nI am able to reproduce this with the latest master. Can anyone\nreproduce? Known issue? If I have a function with a line that ends in\na commented out question mark I get an error when using paste magic.\n\nIe., this code\n\n```\ndef func():\n   if True: #am i true?\n       a = 3\n```\n\nif copied and pasted into the IPython interpreter via paste looks like this\n\n```\n[39]: paste\ndef func():\n   if True: #am i true?\n       a = 3\n## -- End pasted text --\nObject `if` not found.\n```\n\nI need to add a test for this as well...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6566391",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-6566391",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 6566391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjYzOTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-26T03:52:15Z",
    "updated_at": "2012-06-26T03:52:15Z",
    "author_association": "MEMBER",
    "body": "OK folks, I'd greatly appreciate a review of #2015 now.  I'm not willing to admit in public how long it took me to code this, it proved to be quite tricky and I kept stumbling on odd edge cases.  But the code is now well tested and does fix a pretty broken `%paste/%cpaste` (their logic was very messed up), so I'd like to see this go into 0.13.\n\nHence my plea for review :)  @wesm, let me know if #2015 indeed fixes all the problem cases you'd found...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6592685",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-6592685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 6592685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTI2ODU=",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-27T01:39:38Z",
    "updated_at": "2012-06-27T01:39:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, this fixes the issues I was seeing. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6592728",
    "html_url": "https://github.com/ipython/ipython/issues/1258#issuecomment-6592728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1258",
    "id": 6592728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTI3Mjg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-27T01:43:44Z",
    "updated_at": "2012-06-27T01:43:44Z",
    "author_association": "MEMBER",
    "body": "Great, glad to hear that @jseabold, thanks for the feedback!  I'll leave it in case @takluyver has a chance to review it tomorrow, but if he can't make it we'll merge it for sure; your data point helps cement that decision.\n"
  }
]
