[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276732466",
    "html_url": "https://github.com/ipython/ipython/issues/10232#issuecomment-276732466",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10232",
    "id": 276732466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjczMjQ2Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T18:03:08Z",
    "updated_at": "2017-02-01T18:03:08Z",
    "author_association": "MEMBER",
    "body": "autoreload is a bit black magic, so it's not a big surprise when it breaks.\r\n\r\nI'd guess that the recursion error is because enum values have a reference back to their class (e.g. `MyEnum.A.__objclass__`, so there's an infinite chain of attributes that it's trying to replace: `MyEnum.A.__objclass__.A.__objclass__.<etc>`"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276733701",
    "html_url": "https://github.com/ipython/ipython/issues/10232#issuecomment-276733701",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10232",
    "id": 276733701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjczMzcwMQ==",
    "user": {
      "login": "alexmarder",
      "id": 22181506,
      "node_id": "MDQ6VXNlcjIyMTgxNTA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22181506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexmarder",
      "html_url": "https://github.com/alexmarder",
      "followers_url": "https://api.github.com/users/alexmarder/followers",
      "following_url": "https://api.github.com/users/alexmarder/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexmarder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexmarder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexmarder/subscriptions",
      "organizations_url": "https://api.github.com/users/alexmarder/orgs",
      "repos_url": "https://api.github.com/users/alexmarder/repos",
      "events_url": "https://api.github.com/users/alexmarder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexmarder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T18:07:44Z",
    "updated_at": "2017-02-01T18:07:44Z",
    "author_association": "NONE",
    "body": "If that's true, is there a way to mark a class as having been already reloaded so autoreload does not try again?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276736700",
    "html_url": "https://github.com/ipython/ipython/issues/10232#issuecomment-276736700",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10232",
    "id": 276736700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjczNjcwMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T18:19:04Z",
    "updated_at": "2017-02-01T18:19:04Z",
    "author_association": "MEMBER",
    "body": "Not at present. Actually, I now think my guess was wrong; MyEnum.A is not a type, so it should be updated like that. You can see the code updating a class object here:\r\nhttps://github.com/ipython/ipython/blob/e8341164d5f525a3bb3bf440cb042cc8145a5642/IPython/extensions/autoreload.py#L276"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276742397",
    "html_url": "https://github.com/ipython/ipython/issues/10232#issuecomment-276742397",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10232",
    "id": 276742397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc0MjM5Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T18:40:13Z",
    "updated_at": "2017-02-01T18:40:13Z",
    "author_association": "MEMBER",
    "body": "seem like in `update_class` the two references `old_obj` and  `new_obj` can be the same (I'm going to guess that's the point of enums, where instances are shared. \r\nSo `continue` if they are the same should be enough. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276742888",
    "html_url": "https://github.com/ipython/ipython/issues/10232#issuecomment-276742888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10232",
    "id": 276742888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc0Mjg4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T18:42:11Z",
    "updated_at": "2017-02-01T18:42:11Z",
    "author_association": "MEMBER",
    "body": "also we should bump the number of stacks shown to something like 10-ish (or make it configurable) to be able to debug things like that better. "
  }
]
