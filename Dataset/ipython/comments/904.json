[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2465186",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2465186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2465186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjUxODY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T06:13:07Z",
    "updated_at": "2011-10-20T06:13:07Z",
    "author_association": "MEMBER",
    "body": "There's a troubling implication that we have to allow that numpy may not really be numpy.  We check for numpy in quite a few places, I think, because it's such a basic package.\n\nI guess to be friendly to PyPy, we would have to make sure that we never consider numpy present in that context.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2466341",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2466341",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2466341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjYzNDE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T09:05:30Z",
    "updated_at": "2011-10-20T09:05:30Z",
    "author_association": "MEMBER",
    "body": "I don't really think PyPy should be calling this library 'numpy', at least until it's substantially equivalent to numpy. I know quite a few of the tests break on PyPy because of this as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2470953",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2470953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2470953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzA5NTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T16:36:02Z",
    "updated_at": "2011-10-20T16:36:02Z",
    "author_association": "MEMBER",
    "body": "True, it would probably be better if they left it as micronumpy while they are in these extremely early stages in development, and especially if their goal is not 100% API coverage.\n\nIn any case, I acked the source and we really don't deal with numpy that much, except in the parallel code where PyPy support is a long way off (if ever), given that it all starts with pyzmq.\n\nChanging this whos check is a two-line fix.  magic_precision also checks for numpy assuming it's real, and can be made to be a more direct check for the function it calls.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2471068",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2471068",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2471068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzEwNjg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T16:45:54Z",
    "updated_at": "2011-10-20T16:45:54Z",
    "author_association": "MEMBER",
    "body": "There was a GSoC project to allow Cython to produce pure Python output with ctypes for compiled libraries, which would work on PyPy. It didn't get finished, but hopefully someone will pick it up.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2471329",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2471329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2471329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzEzMjk=",
    "user": {
      "login": "hpaulj",
      "id": 1126648,
      "node_id": "MDQ6VXNlcjExMjY2NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1126648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hpaulj",
      "html_url": "https://github.com/hpaulj",
      "followers_url": "https://api.github.com/users/hpaulj/followers",
      "following_url": "https://api.github.com/users/hpaulj/following{/other_user}",
      "gists_url": "https://api.github.com/users/hpaulj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hpaulj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hpaulj/subscriptions",
      "organizations_url": "https://api.github.com/users/hpaulj/orgs",
      "repos_url": "https://api.github.com/users/hpaulj/repos",
      "events_url": "https://api.github.com/users/hpaulj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hpaulj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T17:06:03Z",
    "updated_at": "2011-10-20T17:06:03Z",
    "author_association": "NONE",
    "body": "The simplest fix, at least in magic.py is to set ndarry_type to None if there is an AttributeError.  If the user does create a pypy numpy variable, it will be displayed like 'Everything else'.  I have fudged summary information for numarray type (e.g. there's no size or itemsize attribute), but that's aiming at a moving target.\n\nI agree that it would cleaner to not even import numpy if the user has not already done so, and created a ndarray variable, but I'm not sure if that can be done simply and cleanly (without risk of breaking something else).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2472438",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2472438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2472438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzI0Mzg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T18:35:04Z",
    "updated_at": "2011-10-20T18:35:04Z",
    "author_association": "MEMBER",
    "body": "Yes, I think we will go with the more explicit check for the attribute, it's easy enough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2475414",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2475414",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2475414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU0MTQ=",
    "user": {
      "login": "hpaulj",
      "id": 1126648,
      "node_id": "MDQ6VXNlcjExMjY2NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1126648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hpaulj",
      "html_url": "https://github.com/hpaulj",
      "followers_url": "https://api.github.com/users/hpaulj/followers",
      "following_url": "https://api.github.com/users/hpaulj/following{/other_user}",
      "gists_url": "https://api.github.com/users/hpaulj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hpaulj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hpaulj/subscriptions",
      "organizations_url": "https://api.github.com/users/hpaulj/orgs",
      "repos_url": "https://api.github.com/users/hpaulj/repos",
      "events_url": "https://api.github.com/users/hpaulj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hpaulj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T22:36:38Z",
    "updated_at": "2011-10-20T22:36:38Z",
    "author_association": "NONE",
    "body": "core/formatters.py also uses numpy in\nPlainTextFormater._float_precision_changed()\nIt checks if 'numpy' in sys.modules.  In pypy numpy is part of builtins, so this always True, regardless of whether the user has imported it or not.\n\nSo a\n%precision 4\nmagic command gets an error:\nAttributeError: 'module' object has no attribute 'set_printoptions'\nbecause the micro numpy does not have printoptions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2475506",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2475506",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2475506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU1MDY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T22:45:44Z",
    "updated_at": "2011-10-20T22:45:44Z",
    "author_association": "MEMBER",
    "body": "Yes, I know. I'm somewhat inclined to leave it that way, because it is a PyPy bug that they deliver a package called numpy that does not provide any of numpy's functionality.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2476059",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2476059",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2476059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzYwNTk=",
    "user": {
      "login": "hpaulj",
      "id": 1126648,
      "node_id": "MDQ6VXNlcjExMjY2NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1126648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hpaulj",
      "html_url": "https://github.com/hpaulj",
      "followers_url": "https://api.github.com/users/hpaulj/followers",
      "following_url": "https://api.github.com/users/hpaulj/following{/other_user}",
      "gists_url": "https://api.github.com/users/hpaulj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hpaulj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hpaulj/subscriptions",
      "organizations_url": "https://api.github.com/users/hpaulj/orgs",
      "repos_url": "https://api.github.com/users/hpaulj/repos",
      "events_url": "https://api.github.com/users/hpaulj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hpaulj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T23:45:32Z",
    "updated_at": "2011-10-20T23:45:32Z",
    "author_association": "NONE",
    "body": "You have a good point.  The whos error jumped out right away.  I had to dig for the precision one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2483274",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2483274",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2483274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODMyNzQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T16:28:17Z",
    "updated_at": "2011-10-21T16:28:17Z",
    "author_association": "MEMBER",
    "body": "There's a raging debate about this:\n\nhttp://blog.streamitive.com/2011/10/19/more-thoughts-on-arrays-in-pypy/\n\nand this bug is a good data point we should provide.  Pypy really should _not_ be calling their library numpy unless it provides the real numpy API.  If any of you can jump in and at least give them this info, that would be awesome...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2484936",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2484936",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2484936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODQ5MzY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T18:57:46Z",
    "updated_at": "2011-10-21T18:57:46Z",
    "author_association": "MEMBER",
    "body": "Yes, I've been following that, and I'm pretty sure the name issue has also been brought up on pypy mailing lists.  I don't think   adding \"hey, here's another thing you haven't gotten around to yet\" to the noise will be particularly informative.\n\nIt's also true that the `%whos` error comes first and is unconditional, so the magic was inaccessible for all PyPy users.  The `%precision` error is already conditional on the presence of numpy in sys.modules, so it only affects PyPy users already using micronumpy, and it also happens to be at the end of the block, so the magic still has the desired effect, even with the traceback.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2485850",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2485850",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2485850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODU4NTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T20:28:51Z",
    "updated_at": "2011-10-21T20:28:51Z",
    "author_association": "MEMBER",
    "body": "It's also relevant to note that pypy absolutely does aim for 100% numpy _Python_ API compatibility, so these errors (and anything seen from IPython itself) just mean they aren't done, which makes sense since they are just getting started.  \n\nMuch of the big debate is about the fact that numpy really has _two_ apis - Python and C, and how useful a numpy without the C-API can be (in many areas, the answer is not at all, but in others it doesn't matter).  The obvious problem being that in CPython, if you have numpy you get a whole universe of tools that can talk to each other (see Travis' various presentations on numpy as _Lingua Franca_), but if your numpy implementation only provides the Python API, you lose a _huge_ fraction of that universe.\n\nIf I had any relevantly useful skills, I would jump right in to the Cython -> Python+ctypes project, so I could get pyzmq on PyPy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2486756",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2486756",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2486756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY3NTY=",
    "user": {
      "login": "hpaulj",
      "id": 1126648,
      "node_id": "MDQ6VXNlcjExMjY2NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1126648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hpaulj",
      "html_url": "https://github.com/hpaulj",
      "followers_url": "https://api.github.com/users/hpaulj/followers",
      "following_url": "https://api.github.com/users/hpaulj/following{/other_user}",
      "gists_url": "https://api.github.com/users/hpaulj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hpaulj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hpaulj/subscriptions",
      "organizations_url": "https://api.github.com/users/hpaulj/orgs",
      "repos_url": "https://api.github.com/users/hpaulj/repos",
      "events_url": "https://api.github.com/users/hpaulj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hpaulj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-21T22:04:38Z",
    "updated_at": "2011-10-21T22:04:38Z",
    "author_association": "NONE",
    "body": "The nuisance with the current pypy numpy is 2 fold:\n\nits API is nonstandard, missing functions and attributes like ndarray and set_printoptions\n\nit is a builtin that appears in sys.modules regardless of whether the user has imported it or not.  Is there a way of checking whether a builtin has been imported or not (other than looking in globals)?\n\nSimply changing it's name back to something like micronumpy is probably enough to avoid these conflicts.\n\nUsing an explicit format like\n%precision %.5f\nworks fine because it does not try to do anything with numpy\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2998896",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2998896",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2998896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTg4OTY=",
    "user": {
      "login": "hpaulj",
      "id": 1126648,
      "node_id": "MDQ6VXNlcjExMjY2NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1126648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hpaulj",
      "html_url": "https://github.com/hpaulj",
      "followers_url": "https://api.github.com/users/hpaulj/followers",
      "following_url": "https://api.github.com/users/hpaulj/following{/other_user}",
      "gists_url": "https://api.github.com/users/hpaulj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hpaulj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hpaulj/subscriptions",
      "organizations_url": "https://api.github.com/users/hpaulj/orgs",
      "repos_url": "https://api.github.com/users/hpaulj/repos",
      "events_url": "https://api.github.com/users/hpaulj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hpaulj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-03T03:41:10Z",
    "updated_at": "2011-12-03T03:41:10Z",
    "author_association": "NONE",
    "body": "In pypy 1.7 \"NumPy effort in PyPy was renamed numpypy.\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2998978",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-2998978",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 2998978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTg5Nzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-03T04:07:36Z",
    "updated_at": "2011-12-03T04:07:36Z",
    "author_association": "MEMBER",
    "body": "@minrk, do you want to go back to the simpler code without the defensive check, or leave it as it is now in case something else masquerading as numpy is found for some reason in sys.modules?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3002230",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-3002230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 3002230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIyMzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-03T18:49:36Z",
    "updated_at": "2011-12-03T18:49:36Z",
    "author_association": "MEMBER",
    "body": "I think the current check is better anyway, might as well leave it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3002787",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-3002787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 3002787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI3ODc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-03T20:31:14Z",
    "updated_at": "2011-12-03T20:31:14Z",
    "author_association": "MEMBER",
    "body": "Sounds good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3002880",
    "html_url": "https://github.com/ipython/ipython/issues/904#issuecomment-3002880",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/904",
    "id": 3002880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI4ODA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-03T20:47:06Z",
    "updated_at": "2011-12-03T20:47:06Z",
    "author_association": "MEMBER",
    "body": "@hpaulj thanks for the heads up!  I think the change will be better for a lot of people until they get closer to API completeness.\n"
  }
]
