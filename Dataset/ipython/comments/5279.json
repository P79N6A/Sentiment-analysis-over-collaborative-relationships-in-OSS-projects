[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36787683",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36787683",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36787683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg3Njgz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T20:11:33Z",
    "updated_at": "2014-03-05T20:11:47Z",
    "author_association": "MEMBER",
    "body": "@minrk I love the check_version function.  I made the changes and pushed, what do you think of having the return_code on the same line as the check_version call (see checked in code).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36787856",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36787856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36787856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg3ODU2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T20:13:13Z",
    "updated_at": "2014-03-05T20:13:13Z",
    "author_association": "MEMBER",
    "body": "> what do you think of having the return_code on the same line as the check_version call (see checked in code).\n\nNot what I would have done, but it's fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36793496",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36793496",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36793496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzkzNDk2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T21:06:26Z",
    "updated_at": "2014-03-05T21:06:26Z",
    "author_association": "MEMBER",
    "body": "I realize there is one more thing missing in this fallback. In the case of neither node nor pandoc being present, the user will be presented with a 'pandoc missing' error, rather than recommending the preferred installation of 'node' for HTML conversion. I'm not certain we should address that in this PR, but it is suboptimal.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36794133",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36794133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36794133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk0MTMz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T21:12:16Z",
    "updated_at": "2014-03-05T21:12:16Z",
    "author_association": "MEMBER",
    "body": "It's not ideal that this is running subprocesses on import, either. But it was doing that before this change, so it's not critical to fix now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36800179",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36800179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36800179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwMTc5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:05:51Z",
    "updated_at": "2014-03-05T22:05:51Z",
    "author_association": "MEMBER",
    "body": "I think we can merge this one. Maybe I'll take a pass at cleaning up both node and pandoc checking later if it keeps bothering me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36800304",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36800304",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36800304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwMzA0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:07:06Z",
    "updated_at": "2014-03-05T22:07:06Z",
    "author_association": "MEMBER",
    "body": "> But it was doing that before\n\nIt was not launching node before, just locating it (which may have involved calling `which`).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36800464",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36800464",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36800464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNDY0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:08:38Z",
    "updated_at": "2014-03-05T22:08:38Z",
    "author_association": "MEMBER",
    "body": "I can add a warning to the else where node isn't found... something like \n\n```\nwarnings.warn(  \"Node.js 0.9.12 or later wasn't found.\\n\" +\n                                \"Nbconvert will try to use Pandoc instead.\")\n```\n\nAlso I can move the logic into a method that runs once and caches the results- so subprocess isn't called on import.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36800516",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36800516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36800516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNTE2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:09:12Z",
    "updated_at": "2014-03-05T22:09:12Z",
    "author_association": "MEMBER",
    "body": "> I can add a warning to the else where node isn't found\n\nNo, what we absolutely must not do is add a warning on import.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36800680",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36800680",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36800680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwNjgw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:10:52Z",
    "updated_at": "2014-03-05T22:10:52Z",
    "author_association": "MEMBER",
    "body": "> must not do is add a warning on import.\n\nIs that a no to moving it into a method that runs once when the code is called too?\n\nI was thinking \n\n``` python\n\ndef markdown2html(source):\n    \"\"\"Convert a markdown string to HTML\"\"\"\n    if _node[0] is None:\n        # prefer md2html via marked if node.js >= 0.9.12 is available\n        # node is called nodejs on debian, so try that first\n        node_cmd = 'nodejs'\n        if _verify_node(node_cmd):\n            _node[0] = True\n        else:\n            node_cmd = 'node'\n            if _verify_node(node_cmd):\n                _node[0] = True\n            else:\n                warnings.warn(  \"Node.js 0.9.12 or later wasn't found.\\n\" +\n                                \"Nbconvert will try to use Pandoc instead.\")\n                _node[0] = False\n    if not _node[0]:\n        return markdown2html_pandoc(source)\n    else:\n        return markdown2html_marked(source)\n```\n\nPardon the `[0]` - scope issues.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36800844",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36800844",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36800844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAwODQ0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:12:30Z",
    "updated_at": "2014-03-05T22:12:30Z",
    "author_association": "MEMBER",
    "body": "Actually like this:\n\n``` python\n\ndef markdown2html(source):\n    \"\"\"Convert a markdown string to HTML\"\"\"\n    if _node[0] is None:\n        # prefer md2html via marked if node.js >= 0.9.12 is available\n        # node is called nodejs on debian, so try that first\n        _node[0] = 'nodejs'\n        if not _verify_node(_node[0] ):\n            _node[0] = 'node'\n            if not _verify_node(_node[0] ):\n                warnings.warn(  \"Node.js 0.9.12 or later wasn't found.\\n\" +\n                                \"Nbconvert will try to use Pandoc instead.\")\n                _node[0] = False\n    if not _node[0]:\n        return markdown2html_pandoc(source)\n    else:\n        return markdown2html_marked(source)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36801067",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36801067",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36801067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxMDY3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:14:39Z",
    "updated_at": "2014-03-05T22:14:39Z",
    "author_association": "MEMBER",
    "body": "Something like that should be fine. Except for the `_node[0]` index access. Why would you do that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36801408",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36801408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36801408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxNDA4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:17:37Z",
    "updated_at": "2014-03-05T22:17:37Z",
    "author_association": "MEMBER",
    "body": "> . Why would you do that?\n\nBecause the method isn't child to a class, so I don't have a `self` to store the results in (variable assignment).  I could do `global _node` instead, but I thought globals were generally a bad idea, right?  Also I think the new `local` keyword is Python 3 only right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36801572",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36801572",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36801572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxNTcy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:18:59Z",
    "updated_at": "2014-03-05T22:18:59Z",
    "author_association": "MEMBER",
    "body": "... or we could just not cache the results, and run the check each time\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36801604",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36801604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36801604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxNjA0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:19:22Z",
    "updated_at": "2014-03-05T22:19:22Z",
    "author_association": "MEMBER",
    "body": "`_node` is already a global. There is no benefit to making it a global container with one element rather than a singleton.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36801803",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36801803",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36801803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxODAz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:21:13Z",
    "updated_at": "2014-03-05T22:21:13Z",
    "author_association": "MEMBER",
    "body": "> _node is already a global. There is no benefit to making it a global container with one element rather than a singleton.\n\nAhh okay, I was totally confused about the scope of `global` then.  I thought it spanned across imports, but you're saying it only will span across imports if it is explicitly imported (i.e. `from markdown import _node`)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36801914",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36801914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36801914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAxOTE0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:22:16Z",
    "updated_at": "2014-03-05T22:22:16Z",
    "author_association": "MEMBER",
    "body": "global just means module-level\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36802657",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36802657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36802657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAyNjU3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:29:28Z",
    "updated_at": "2014-03-05T22:29:28Z",
    "author_association": "MEMBER",
    "body": "@takluyver and @minrk want to take a look again?  I moved the code into a method and added a warning for the no-node case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36803012",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36803012",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36803012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAzMDEy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:32:47Z",
    "updated_at": "2014-03-05T22:32:47Z",
    "author_association": "MEMBER",
    "body": "Yes, this no longer executes a subcommand on import. :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36803201",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36803201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36803201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAzMjAx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:34:38Z",
    "updated_at": "2014-03-05T22:34:38Z",
    "author_association": "MEMBER",
    "body": "Great, this looks good to me now. Thanks, @jdfreder.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36803569",
    "html_url": "https://github.com/ipython/ipython/pull/5279#issuecomment-36803569",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5279",
    "id": 36803569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODAzNTY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T22:38:36Z",
    "updated_at": "2014-03-05T22:38:36Z",
    "author_association": "MEMBER",
    "body": "Order switched\n"
  }
]
