[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33762076",
    "html_url": "https://github.com/ipython/ipython/issues/4938#issuecomment-33762076",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4938",
    "id": 33762076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzYyMDc2",
    "user": {
      "login": "drevicko",
      "id": 1086081,
      "node_id": "MDQ6VXNlcjEwODYwODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1086081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drevicko",
      "html_url": "https://github.com/drevicko",
      "followers_url": "https://api.github.com/users/drevicko/followers",
      "following_url": "https://api.github.com/users/drevicko/following{/other_user}",
      "gists_url": "https://api.github.com/users/drevicko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drevicko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drevicko/subscriptions",
      "organizations_url": "https://api.github.com/users/drevicko/orgs",
      "repos_url": "https://api.github.com/users/drevicko/repos",
      "events_url": "https://api.github.com/users/drevicko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drevicko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-31T05:04:55Z",
    "updated_at": "2014-01-31T05:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to open the idea up for discussion, what do people think of the possibility of several kernels running behind a single notebook? A user could choose which kernel to attach to... \n\nI think allowing this could potentially create very confusing situations (eg: to whom does the output belong? Should each kernel have it's own output? Even more difficulty in understanding which code led to the current the kernel state...) , but I can also think of a few use cases in which it could be handy, eg: \n- for running the same code on different parts of a data set in parallel (I haven't familliarised myself well with the parallel capabilities of ipython/notebooks: is there already a sensible way to examine running parallel threads/processes? Can it be integrated sensibly here?)\n- running unit tests in a separate kernel\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33768887",
    "html_url": "https://github.com/ipython/ipython/issues/4938#issuecomment-33768887",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4938",
    "id": 33768887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY4ODg3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-31T08:29:53Z",
    "updated_at": "2014-01-31T08:29:53Z",
    "author_association": "MEMBER",
    "body": "> Just to open the idea up for discussion, what do people think of the possibility of several kernels running behind a single notebook? A user could choose which kernel to attach to...\n\nNo, we thought of that. 1-kernel : 1-notebook. You will though be at some point able to kill a kernel and restart one from a different language/with a different config.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33824135",
    "html_url": "https://github.com/ipython/ipython/issues/4938#issuecomment-33824135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4938",
    "id": 33824135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODI0MTM1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-31T17:39:30Z",
    "updated_at": "2014-01-31T17:39:30Z",
    "author_association": "MEMBER",
    "body": "To expand a bit: for 3.0, we want to have a notion of different kernel types, so you could create a new notebook and start, say, a Julia kernel for it. But I think the complexity of having multiple kernels running for a single notebook would really outweigh the benefits.\n\nFor running code in parallel, there are various things you can already use, including `IPython.parallel`. I don't think we should go down the road of trying to build a GUI for that, but I don't think that precludes someone else extending the notebook to experiment with it. Even so, I wouldn't recommend doing it with multiple kernels that the notebook server manages, but with one kernel that starts other engines and distributes work to them.\n"
  }
]
