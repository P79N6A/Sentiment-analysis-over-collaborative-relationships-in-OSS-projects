[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10357656",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-10357656",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 10357656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzU3NjU2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T07:44:32Z",
    "updated_at": "2012-11-14T07:44:32Z",
    "author_association": "MEMBER",
    "body": "Could it be that the previous input variable stored in memory ( `_`, `_i1`...`_ix`, `In` and `Out`) are too big and slow down the process (even if it does not swap, it could be something in IPython machinery).\n\nYou could try to delete them by hand,(there should be an option to stat IPython without storing them but I don't find it right now) to see if it helps.\n\n%whos will also show you all the variable and their size in your namespace but not the hidden one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10360167",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-10360167",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 10360167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzYwMTY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T09:38:03Z",
    "updated_at": "2012-11-14T09:38:03Z",
    "author_association": "MEMBER",
    "body": "There's also a %reset magic which should clear the places where IPython\nremembers it. Does that help?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10416184",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-10416184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 10416184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE2MTg0",
    "user": {
      "login": "aheilbut",
      "id": 361132,
      "node_id": "MDQ6VXNlcjM2MTEzMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/361132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aheilbut",
      "html_url": "https://github.com/aheilbut",
      "followers_url": "https://api.github.com/users/aheilbut/followers",
      "following_url": "https://api.github.com/users/aheilbut/following{/other_user}",
      "gists_url": "https://api.github.com/users/aheilbut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aheilbut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aheilbut/subscriptions",
      "organizations_url": "https://api.github.com/users/aheilbut/orgs",
      "repos_url": "https://api.github.com/users/aheilbut/repos",
      "events_url": "https://api.github.com/users/aheilbut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aheilbut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T17:02:59Z",
    "updated_at": "2012-11-15T17:02:59Z",
    "author_association": "NONE",
    "body": "I've experimented with deleting the input / output history, and that doesn't seem to be the problem... it is caused only by the large dataframes being in memory.  If I delete them (though they have to be deleted from the output cache too), then the pausing goes away.  Running the exact same code (at the same time, same box) in a regular python session has no problems.  Strange.. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10416987",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-10416987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 10416987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE2OTg3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T17:24:22Z",
    "updated_at": "2012-11-15T17:24:22Z",
    "author_association": "MEMBER",
    "body": "You did mention it before, but have you definitely checked IPython's memory\nusage as you're doing that?\n\nOn 15 November 2012 17:03, Adrian Heilbut notifications@github.com wrote:\n\n> I've experimented with deleting the input / output history, and that\n> doesn't seem to be the problem... it is caused only by the large dataframes\n> being in memory. If I delete them (though they have to be deleted from the\n> output cache too), then the pausing goes away. Running the exact same code\n> (at the same time, same box) in a regular python session has no problems.\n> Strange..\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/2575#issuecomment-10416184.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10417975",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-10417975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 10417975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE3OTc1",
    "user": {
      "login": "aheilbut",
      "id": 361132,
      "node_id": "MDQ6VXNlcjM2MTEzMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/361132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aheilbut",
      "html_url": "https://github.com/aheilbut",
      "followers_url": "https://api.github.com/users/aheilbut/followers",
      "following_url": "https://api.github.com/users/aheilbut/following{/other_user}",
      "gists_url": "https://api.github.com/users/aheilbut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aheilbut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aheilbut/subscriptions",
      "organizations_url": "https://api.github.com/users/aheilbut/orgs",
      "repos_url": "https://api.github.com/users/aheilbut/repos",
      "events_url": "https://api.github.com/users/aheilbut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aheilbut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T17:48:29Z",
    "updated_at": "2012-11-15T18:18:35Z",
    "author_association": "NONE",
    "body": "The memory usage goes up pretty high (~4G) but there are 16 gigs of RAM and it isn't swapping.  The weird thing is that there is some kind of state that IPython/python gets into where this happens; it doesn't happen all the time.  I can restart the interpreter entirely and load up all the same objects, and all is fine for a while.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10419248",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-10419248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 10419248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDE5MjQ4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T18:23:16Z",
    "updated_at": "2012-11-15T18:23:16Z",
    "author_association": "MEMBER",
    "body": "Well, I'm pretty mystified for now. Is there some way to use a profiler to\nsee what's going on? Or, more crudely, get it to happen a few times and\ninterrupt the kernel (Ctrl-C in the Qt console, use the Kernel menu in the\nnotebook), and see what code the traceback is in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18112921",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-18112921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 18112921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTEyOTIx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-19T06:03:56Z",
    "updated_at": "2013-05-19T06:03:56Z",
    "author_association": "NONE",
    "body": "I am seeing a similar issue. Have a server grade machine with around 90 Gb memory. Once a notebook loads a fairly large dataset (5-10 Gb, typically pandas dataframes) there is a slow down even for simple things like \"1 + 1\".  Also, if a different notebook is started (in parallel) it does not experience a slow down. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46268678",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-46268678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 46268678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjY4Njc4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T05:28:17Z",
    "updated_at": "2014-06-17T05:28:17Z",
    "author_association": "MEMBER",
    "body": "this bug has had no activity for a year, so I'm going to close it. To reopen this issue, I would want @aheilbut or @ghost to first verify that this is an IPython issue by checking if similar memory usage under plain Python does not exhibit this slow down behavior (my hunch is that it does, and this may have been either a pandas or just an OS problem)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/92443424",
    "html_url": "https://github.com/ipython/ipython/issues/2575#issuecomment-92443424",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2575",
    "id": 92443424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDQzNDI0",
    "user": {
      "login": "histed",
      "id": 176407,
      "node_id": "MDQ6VXNlcjE3NjQwNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/176407?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/histed",
      "html_url": "https://github.com/histed",
      "followers_url": "https://api.github.com/users/histed/followers",
      "following_url": "https://api.github.com/users/histed/following{/other_user}",
      "gists_url": "https://api.github.com/users/histed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/histed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/histed/subscriptions",
      "organizations_url": "https://api.github.com/users/histed/orgs",
      "repos_url": "https://api.github.com/users/histed/repos",
      "events_url": "https://api.github.com/users/histed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/histed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T17:47:29Z",
    "updated_at": "2015-04-13T17:49:31Z",
    "author_association": "NONE",
    "body": "I see this behavior too.  From the first post:\n\n> I've noticed strange behaviour that seems to occur after loading in and working on largeish (a few gigs) datasets through the notebook. At some point, ipython starts to get very slow to return control - ie. after executing a cell, there will be a ~5s delay during which it says \"kernel busy\", even for some trivial computation such as evaluating an integer.\n\nI also start with the notebook, and load variables into memory and see a ~5s delay.  Today, this happened after around 100 prompts in the notebook.\n\n> I observe the same thing if I connect to that kernel through the Qt console. There, I can see that the output from whatever I type is actually returned right away, but there's the same 5s delay before the input prompt returns. The only way to fix it is to restart the kernel.\n\nI also see similar behavior with the qtconsole, and the only way to fix is to restart the kernel.\n\nIf I close the qtconsole, my ipython notebook process is at 2330Mb.  %qtconsole in the notebook takes ~30s to open the console, and memory goes as high as 4000Mb while this happens.  If I leaving the console open for a few minutes, ipython drops down to 2330Mb again.  Then, running any command in the qtconsole brings memory up over 4000Mb again.\n\nI'm not using pandas.\n"
  }
]
