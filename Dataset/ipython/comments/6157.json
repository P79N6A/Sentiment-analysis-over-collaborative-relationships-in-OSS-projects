[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49375393",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49375393",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49375393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc1Mzkz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-17T22:32:32Z",
    "updated_at": "2014-07-17T22:32:32Z",
    "author_association": "MEMBER",
    "body": "My regular push back: I would really rather the dashboard didn't gradually scope-creep into reimplementing a file manager.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49375522",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49375522",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49375522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc1NTIy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-17T22:33:56Z",
    "updated_at": "2014-07-17T22:35:55Z",
    "author_association": "MEMBER",
    "body": "why not?  I think it's a perfect place for basic file management tasks.  Especially for users that don't really want to touch the command line for simple things.\n\n(@sylvaincorlay points out that maybe we should integrate an existing file manager web app...)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49375694",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49375694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49375694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mzc1Njk0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-17T22:36:16Z",
    "updated_at": "2014-07-17T22:36:16Z",
    "author_association": "MEMBER",
    "body": "I most agree with @takluyver on this. A full blown file manager is a huge undertaking and adding subdirectory-file moving is a step on that slippery slope. But I think we do have to think about how we can enable users to do this. When the notebook is run on your local system, you can use the regular file manager. But when running remotely, you can't do that. I am hoping we can find creative ways to make these things easier (maybe a thin command line at the top of the dashboard?) without diving all the way into a file manager GUI.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49391735",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49391735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49391735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzkxNzM1",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T03:18:58Z",
    "updated_at": "2014-07-18T03:18:58Z",
    "author_association": "NONE",
    "body": "While the command line interface is a good catch all for file operations,\nit seems there is a small set of operations that a user of the notebook\nwould like to be able to do through the web interface with a GUI. As you\npointed out this is extra important when working remotely where direct\naccess to the box's file system is not possible.\n\nOn Thu, Jul 17, 2014 at 6:36 PM, Brian E. Granger notifications@github.com\nwrote:\n\n> I most agree with @takluyver https://github.com/takluyver on this. A\n> full blown file manager is a huge undertaking and adding subdirectory-file\n> moving is a step on that slippery slope. But I think we do have to think\n> about how we can enable users to do this. When the notebook is run on your\n> local system, you can use the regular file manager. But when running\n> remotely, you can't do that. I am hoping we can find creative ways to make\n> these things easier (maybe a thin command line at the top of the\n> dashboard?) without diving all the way into a file manager GUI.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6157#issuecomment-49375694.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49420899",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49420899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49420899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDIwODk5",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T11:27:22Z",
    "updated_at": "2014-07-18T11:27:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thinking about the Jupyter Dashboard in the large sense, it needs to be able to manage notebooks for a potentially large range of types of kernels, and thus uses. Falling back to a command-line API to accomplish a \"move\" is problematic for a number of reasons. First, the commands would be different for each operating system. Second, it would be another \"language\" to teach on top of the language of the kernel.\n\nIt seems that a small number of operations would greatly enhance the Dashboard, without bogging down the overall project. Some enhancements I'd love to see:\n- date/time column for all files and folders\n  - have column be sortable would be useful\n- cut/copy/paste for notebooks (that could be the way to \"move\")\n- allow bulk operations (delete, copy, cut)\n  - select checkbox column\n\nThis could provide the infrastructure for others to add additional notebook management functionality (like \"diff\").\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49441162",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49441162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49441162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDQxMTYy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T15:04:54Z",
    "updated_at": "2014-07-18T15:04:54Z",
    "author_association": "MEMBER",
    "body": "This makes sense to me:\n- search/filter textbox\n- sortable columns of creation/modification date/time, file size, name, possibly a short description that you pull from the notebook title, and a list of tags associated with the notebook.\n- create, rename, copy, delete, or download file or directory.  Moving files into a directory could also be accomplished by drag and drop.  Downloading a directory downloads a zip file\n- bulk operations (checkbox column)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49441544",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49441544",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49441544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDQxNTQ0",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T15:07:44Z",
    "updated_at": "2014-07-18T15:07:44Z",
    "author_association": "NONE",
    "body": "I assume that beyond the basic functionality built into the UI (which I\nthink should include move and create subdir; I like the list in the post\nabove), I imagine more functionality can be added using Widgets?\n\nOn Fri, Jul 18, 2014 at 11:05 AM, Jason Grout notifications@github.com\nwrote:\n\n> This makes sense to me:\n> - search/filter textbox\n> - sortable columns of creation/modification date/time, file size,\n>   name, possibly a short description that you pull from the notebook title,\n>   and a list of tags associated with the notebook.\n> - create, rename, copy, delete, or download file or directory. Moving\n>   files into a directory could also be accomplished by drag and drop.\n>   Downloading a directory downloads a zip file\n> - bulk operations (checkbox column)\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6157#issuecomment-49441162.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49444655",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49444655",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49444655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDQ0NjU1",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T15:33:51Z",
    "updated_at": "2014-07-18T15:33:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jasongrout Yes, great additional ideas! This would save so much time, and is _necessary_ for server-only installations (which we are headed to pretty quickly). That list isn't so complicated and seems fairly complete.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49454262",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-49454262",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 49454262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDU0MjYy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-18T16:57:34Z",
    "updated_at": "2014-07-18T16:57:34Z",
    "author_association": "MEMBER",
    "body": "The contents service in PR #5938 makes creating directories possible with a simple POST request. It doesn't add UI for it, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52121601",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-52121601",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 52121601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTIxNjAx",
    "user": {
      "login": "coderforlife",
      "id": 1537688,
      "node_id": "MDQ6VXNlcjE1Mzc2ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1537688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coderforlife",
      "html_url": "https://github.com/coderforlife",
      "followers_url": "https://api.github.com/users/coderforlife/followers",
      "following_url": "https://api.github.com/users/coderforlife/following{/other_user}",
      "gists_url": "https://api.github.com/users/coderforlife/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coderforlife/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coderforlife/subscriptions",
      "organizations_url": "https://api.github.com/users/coderforlife/orgs",
      "repos_url": "https://api.github.com/users/coderforlife/repos",
      "events_url": "https://api.github.com/users/coderforlife/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coderforlife/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T22:38:42Z",
    "updated_at": "2014-08-13T22:38:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some comments on the current file-manager (using 3.0.0-dev):\n1. The new contents web service mentioned by @minrk improves some things, but there need to be updates to the UI:\n   - create directory button (I was going to make a little script for this soon, shouldn't be too difficult)\n   - the text \"To import a notebook, drag the file onto the listing below or click here.\" needs to be updated to indicate the all files are supported\n2. There are other UI problems with the current manager besides missing functionality, not necessarily related to the new contents service:\n   - Uploading a file with the same name as a previous file will blindly overwrite the old file with no confirmation\n   - Uploading a file leaves the file list in a strange state, the new file is put at the top, above \"..\", and if it overwrote a file, both are on the list, this stays until a refresh occurs (in my browser I have to manually click the refresh icon although I though it was supposed to auto-refresh)\n   - The file upload text box should support hitting \"enter\" (or whatever would cause a submit) in the item's new name instead of having to use the \"Upload\" button\n   - The name \"..\" for the directory above makes sense to most people who use command lines, but there are plenty of people this will confuse. Using an icon (like http://fontawesome.io/icon/level-up/) and name like \"Up a directory\" may be better, or just skip it, you have the breadcrumbs already.\n\nBefore adding tons of features (and I agree that many of those are over-zealous, but do think some should be added) the ones that exist need to be ironed out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52130994",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-52130994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 52130994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTMwOTk0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T00:43:24Z",
    "updated_at": "2014-08-14T00:43:24Z",
    "author_association": "MEMBER",
    "body": "I would like to investigate file moving and directory creation using a simplified UI such as what GitHub uses for editing and renaming files in their UI:\n\nhttps://github.com/blog/1436-moving-and-renaming-files-on-github\n\nThis would be a really simple way of supporting a good number of actions with little UI.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69629649",
    "html_url": "https://github.com/ipython/ipython/issues/6157#issuecomment-69629649",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6157",
    "id": 69629649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjI5NjQ5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T19:28:59Z",
    "updated_at": "2015-01-12T19:28:59Z",
    "author_association": "MEMBER",
    "body": "This is implemented in master...closing\n"
  }
]
