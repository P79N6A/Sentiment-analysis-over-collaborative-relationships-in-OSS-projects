[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62954449",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62954449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62954449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU0NDQ5",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T19:49:49Z",
    "updated_at": "2014-11-13T19:49:49Z",
    "author_association": "MEMBER",
    "body": "You might want to take a look at https://github.com/ipython/ipython/pull/6892 for making this work with `Type`, `Instance` and `This`. (Unless I'm missing something, this implementation will fail for cases like `Union(This(), Unicode())`.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62955265",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62955265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62955265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU1MjY1",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T19:54:47Z",
    "updated_at": "2014-11-13T19:54:47Z",
    "author_association": "MEMBER",
    "body": "Ok, I will look at it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62963787",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62963787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62963787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTYzNzg3",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T20:51:43Z",
    "updated_at": "2014-11-13T20:51:43Z",
    "author_association": "MEMBER",
    "body": "If you wanted to get real fancy with this, you could overload `__or__` on `TraitType`, to return Unions so you could do:\n\n```\nclass Foo(HasTraits):\n    attr = Unicode() | List(Unicode())\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62966852",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62966852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62966852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTY2ODUy",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T21:11:57Z",
    "updated_at": "2014-11-13T21:12:37Z",
    "author_association": "MEMBER",
    "body": "> you could overload **or** on TraitType to return Unions\n\nThe statistician in me loves `Unicode() | List(Unicode())`.\n\nThe hacker in me says \"Neat!\"\n\nThe programmer in me says \"Please don't do that, it makes the operator and any code base using it confusing. Do these return something truthy?\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62970786",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62970786",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62970786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTcwNzg2",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T21:38:30Z",
    "updated_at": "2014-11-13T21:38:52Z",
    "author_association": "MEMBER",
    "body": "I'm not sure that `Unicode() | List(Unicode())` is all that cryptic.  That's almost exactly the syntax used by functional languages like ocaml and haskell for declaring these sorts of types, and more often than not you're using traitlets more like type declarations than like instances variables, because the whole system is built on the fact that you're declaring them as class-level attributes on something with a `MetaHasTraits` metaclass.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62977489",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62977489",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62977489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTc3NDg5",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T22:22:02Z",
    "updated_at": "2014-11-13T22:22:23Z",
    "author_association": "MEMBER",
    "body": "I like @ssanderson 's idea. Although I am waiting for Min's decision on scope. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62984815",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62984815",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62984815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTg0ODE1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T23:19:03Z",
    "updated_at": "2014-11-13T23:19:03Z",
    "author_association": "MEMBER",
    "body": "I'm fine with `Foo | Bar`, and I think Union makes sense.  Can you add some tests?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62985185",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62985185",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62985185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTg1MTg1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T23:22:28Z",
    "updated_at": "2014-11-13T23:22:28Z",
    "author_association": "MEMBER",
    "body": "@rgbkrk `Foo | Bar` is okay because it's bitwise-or, not boolean-or, which is typically used for masking, and a reasonable analogue of what's going on here:\n\n``` python\nIn [1]: 1 or 2\nOut[1]: 1\n\nIn [2]: 1 | 2\nOut[2]: 3\n\nIn [3]: (1).__or__(2)\nOut[5]: 3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62991960",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62991960",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62991960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTkxOTYw",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T00:28:57Z",
    "updated_at": "2014-11-14T00:28:57Z",
    "author_association": "MEMBER",
    "body": "I think as of https://github.com/ipython/ipython/pull/6892/ being merged, supporting `This/Instance/Type` should be made possible by overriding `instance_init` on `UnionType` with something like:\n\n```\ndef instance_init(self, obj):\n    for trait in self.traits:\n        if isinstance(trait, TraitType):\n            trait.this_class = self.this_class\n        if hasattr(self._trait, 'instance_init'):\n            trait.instance_init(obj)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62994098",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-62994098",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 62994098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTk0MDk4",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T00:53:28Z",
    "updated_at": "2014-11-14T01:13:00Z",
    "author_association": "MEMBER",
    "body": "Great, I will update this and add a couple of tests. \n\nI like the idea of the \"or\" because its left to right precedence exposes to the user that the validation is attempted first with the first type, then with the second, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63124192",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-63124192",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 63124192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI0MTky",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T20:27:53Z",
    "updated_at": "2014-11-14T21:02:18Z",
    "author_association": "MEMBER",
    "body": "It now allows for trait types like Type or Instance - and I added a test. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63559637",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-63559637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 63559637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU5NjM3",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T22:42:24Z",
    "updated_at": "2014-11-18T22:42:24Z",
    "author_association": "MEMBER",
    "body": "Just added the bit-wise or operator for trait types, and a test. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63576722",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-63576722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 63576722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTc2NzIy",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T01:15:02Z",
    "updated_at": "2014-11-19T01:15:02Z",
    "author_association": "MEMBER",
    "body": "Just made the changes suggested by Min. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63589766",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-63589766",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 63589766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTg5NzY2",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T04:12:27Z",
    "updated_at": "2014-11-19T04:12:27Z",
    "author_association": "MEMBER",
    "body": "Rebased. Test for string->class resolution. @minrk sorry for the failed test earlier.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63712769",
    "html_url": "https://github.com/ipython/ipython/pull/6925#issuecomment-63712769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6925",
    "id": 63712769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzEyNzY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T21:01:50Z",
    "updated_at": "2014-11-19T21:01:50Z",
    "author_association": "MEMBER",
    "body": "@SylvainCorlay looks good thanks!\n"
  }
]
