[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2891294",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2891294",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2891294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTEyOTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T00:14:00Z",
    "updated_at": "2011-11-28T00:14:00Z",
    "author_association": "MEMBER",
    "body": "Using the commit mentioned above, I'm finding the frequency is a bit lower than I seemed to be getting yesterday. It also seems like it happens a bit more often when the memory is full (i.e. after loading a load of big applications), although this could be a red herring. Yesterday when I tried, I couldn't get it to happen when I had both cores running makework.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2892135",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2892135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2892135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTIxMzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T02:50:22Z",
    "updated_at": "2011-11-28T02:50:22Z",
    "author_association": "MEMBER",
    "body": "I've just committed to master a temporary fix that effectively disables #956 without actually deleting @Carreau's code.  I simply copied back the old static list and commented out the call to the new dynamic function.  @Carreau, if you can find a proper fix, start off this and simply delete the code I added in 65546bf, I made it be a minimal amount that only fixed the current problem and nothing else.\n\nWith this workaround, if push comes to shove we could release 0.12 as-is and push this issue back to 0.13.  I'd prefer to have a proper fix, but now at least we don't have a completely broken qt console in master.\n\nFor that reason I'm downgrading the priority to just 'high', as it's not really a blocker anymore.  But I'd much prefer to have a real fix than this band-aid I just put in.  @Carreau, let us know if we can help in some way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2893910",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2893910",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2893910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM5MTA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T07:41:26Z",
    "updated_at": "2011-11-28T07:41:26Z",
    "author_association": "MEMBER",
    "body": "Hum, I'm totally unable to reproduce this bug (on my debian at least, i'll try on mac). even after 25 launch in a row. \nI'm ok to try 100, maybe the 25 last will all crash, we never know with randomness.\n\nI've already connect the action to kernel `firstResponse` to avoid this bug that otherwise appear 100% of the time. So maybe it's a deeper issue.\nI'm not familiar with the kerner startup internals. Do you think it can get confuse if it get the request for the list of magic too early ?  Does the bug still appear if you change `get_ipython().lsmagic()` (mainwindow.py L619) to a more simple expression like `[\"item1\",\"item2\"]` ?\n\nDo you think just setting a timer after which updating the menu might be enough or do you want something more specific.\nlike updating after history request...? \n\nI can also propose to leave the \"static\" menu at startup but put a 'update menu' at the top of it (ie, just don't trigger the auto update as startup).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2893933",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2893933",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2893933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM5MzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T07:46:05Z",
    "updated_at": "2011-11-28T07:46:05Z",
    "author_association": "MEMBER",
    "body": "On Sun, Nov 27, 2011 at 11:41 PM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> Hum, I'm totally unable to reproduce this bug (on my debian at least, i'll try on mac). even after 25 launch in a row.\n> I'm ok to try 100, maybe the 25 last will all crash, we never know with randomness.\n\nNote that I did add this afternoon a fix to master that effectively\nundid some of your changes.  So right now, master doesn't have the\nproblem.  See this commit for details:\n\nhttps://github.com/ipython/ipython/commit/65546bf8a85a3fdf359d0784204360e9ecdc95ec\n\nYou would need to re-activate that code to see the problem.  It was\nhappening frequently enough for me that I really had to turn it off,\nas this was on master that people do update from.\n\n> I've already connect the action to kernel `firstResponse` to avoid this bug that otherwise appear 100% of the time. So maybe it's a deeper issue.\n> I'm not familiar with the kerner startup internals. Do you think it can get confuse if it get the request for the list of magic too early ? Â Does the bug still appear if you change `get_ipython().lsmagic()` (mainwindow.py L619) to a more simple expression like `[\"item1\",\"item2\"]` ?\n> \n> Do you think just setting a timer after which updating the menu might be enough or do you want something more specific.\n> like updating after history request...?\n\nNo, timers are never the solution to race conditions.  The issue is\none of logic, and adding a timer simply makes the problem harder to\ntrigger and thus harder to fix, but it doesn't really fix it.\n\n> I can also propose to leave the \"static\" menu at startup but put a 'update menu' at the top of it (ie, just don't trigger the auto update as startup).\n\nThat's probably a good idea.\n\nThanks for the quick response!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2894019",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2894019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2894019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQwMTk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T07:58:13Z",
    "updated_at": "2011-11-28T07:58:13Z",
    "author_association": "MEMBER",
    "body": "@fperez\nI did test without updating to master, and I tempered with the code to try to reproduce it, so i would have noticed your fix.\n\nActually, If a dirrectly trigger `update_magic_menu()` even before kernel's first response, and changed the request kernel from `get_ipython().lsmagic()` to a static list, then the bug is gone. So my guess is that there might be a deeper issue in a 'too early' request for the list of magics. \n\nI'll try to get it **not work** on Ubuntu at work....\n\nAnd BTW, this afternoon is durring the night for me :-) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2894044",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2894044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2894044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQwNDQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T08:01:55Z",
    "updated_at": "2011-11-28T08:01:55Z",
    "author_association": "MEMBER",
    "body": "On Sun, Nov 27, 2011 at 11:58 PM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> @fperez\n> I did test without updating to master, and I tempered with the code to try to reproduce it, so i would have noticed your fix.\n\nAh, ok.\n\n> Actually, If a dirrectly trigger `update_magic_menu()` even before kernel's first response, and changed the request kernel from `get_ipython().lsmagic()` to a static list, then the bug is gone. So my guess is that there might be a deeper issue in a 'too early' request for the list of magics.\n\nYes, that's probably it.  @minrk, have you seen this problem, or do\nyou have perhaps an inkling of what could be going wrong here\nregarding the sequence of initial requests to the kernel?\n\n> I'll try to get it **not work** on Ubuntu at work....\n\nToday when I fixed it, it was to the point where I simply couldn't\nstart the console at all.  Every attempt to open it gave me a stuck\nconsole.\n\n> And BTW, this afternoon is durring the night for me :-)\n\nYes, I think you're in Europe, right?  But why do you point this out,\ndid I say something about the afternoon before?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2894077",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2894077",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2894077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQwNzc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T08:06:49Z",
    "updated_at": "2011-11-28T08:06:49Z",
    "author_association": "MEMBER",
    "body": "@fperez\n\n```\nNote that I did add this afternoon a fix to master that effectively[...]\n```\n\nSo yeah, you kind of mentioned it... :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2894097",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2894097",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2894097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQwOTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T08:09:14Z",
    "updated_at": "2011-11-28T08:09:14Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 28, 2011 at 12:06 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> So yeah, you kind of mentioned it... :-)\n\nAh, yes.  I just said that because I figured the changes had happened\nwhile you were asleep, and thought you might have pulled them in\nalready, that's all...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2894149",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2894149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2894149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQxNDk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T08:14:53Z",
    "updated_at": "2011-11-28T08:14:53Z",
    "author_association": "MEMBER",
    "body": "I know, don't worry, I was just messing with you. Now it's my turn to be awake while most of you will be asleep if I'm right.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2894169",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2894169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2894169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQxNjk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T08:17:12Z",
    "updated_at": "2011-11-28T08:17:12Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 28, 2011 at 12:14 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> I know, don't worry, I was just messing with you. Now it's my turn to be awake while most of you will be asleep if I'm right.\n\nyes, I'm clocking out now for some sleep... Bye!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2895403",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2895403",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2895403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTU0MDM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T10:49:50Z",
    "updated_at": "2011-11-28T10:49:50Z",
    "author_association": "MEMBER",
    "body": "I think I got it... (the why, not the how to fix it)\nin `frontendwidget.py` I wrote\n\n``` python\n    self._request_info['execute'] = self._ExecutionRequest(msg_id, 'silent_exec_callback')\n```\n\nInstead of \"appending\" another execute request. Then the `_handle_execute_callback` doesn't see the previous one as assigned to it ...But `_ExecutionRequest` is a named tuple and the current logic seem to not allow(not be written for ?) multiple execution request waiting. (I'm not quite familiar with the whole logic and named tuple, so I may be wrong)\n\nI might not have have time to deeply look at it during my day/your night. I'll try to make a better \"Quick-fix\" and try to modifie the current code to handle several multiple execution request waiting. There might be something I haven't understand, and I 'll appreciate some advice in the **right** way to handle that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2906262",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2906262",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2906262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDYyNjI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T19:54:04Z",
    "updated_at": "2011-11-28T19:54:04Z",
    "author_association": "MEMBER",
    "body": "@fperez, @takluyver\ncould you try this branch [ qtconsole-racecondition ] and tell me if it fixes the race condition for you ? \nIf so I'll clean it up tomorow (for me), and send a PR. \nIt basically slightly complicate the `_request_info['execute']` handeling by making it a list which stores several waiting execution request.\nI know there are still print statement in a few places, I'll remove and rebase later, same for changings the lists to mabe more adapted container.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2906536",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2906536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2906536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDY1MzY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T20:14:39Z",
    "updated_at": "2011-11-28T20:14:39Z",
    "author_association": "MEMBER",
    "body": "@carreau - you are correct, the qtconsole does not allow multiple outstanding execution requests, and does not protect itself by preventing them.  This is fine if there are no background operations, but now that we have some, it obviously isn't.  \n\nI think your approach has the right idea, but I would use a dict by msg_id instead of a list.  msg_ids are unique, so there is no worry about duplication.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2909384",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2909384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2909384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDkzODQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T23:26:42Z",
    "updated_at": "2011-11-28T23:26:42Z",
    "author_association": "MEMBER",
    "body": "I checked out the commit after you reverted @fperez's temporary fix, but before your fix, to check that I could still reproduce the bug. Unfortunately, I can't reproduce it after more than 40 tries, so I won't be able to tell if your fix makes a difference. Hopefully @fperez can check it.\n\nThe problem and the approach makes sense. I agree with Min that a dictionary is preferable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2909893",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2909893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2909893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDk4OTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T00:11:47Z",
    "updated_at": "2011-11-29T00:11:47Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 28, 2011 at 3:26 PM, Thomas\nreply@reply.github.com\nwrote:\n\n> Hopefully @fperez can check it.\n\nI'll try to check tonight with my home machine, which is where I could\nreliably reproduce the problem.  It's an extremely fast desktop, and\nthat may be why it happens so easily on that system.  Slower boxes may\nhave enough builtin delays to mask it; I can't see it on my laptop,\nfor example.\n\nThanks everyone for working on this one, we'll get to the bottom of it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2917736",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2917736",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2917736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTc3MzY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T06:46:49Z",
    "updated_at": "2011-11-29T06:46:49Z",
    "author_association": "MEMBER",
    "body": "Won't have much time to ti re-write it today, and i'll do it with more suitable container. \nIf we start storing message id in dictionary, does it still make sens to have several `_handle_xxx_reply` ? \ncouldn't we just have a `_handle_reply` and switch code branch depending on what is poped from the dict ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2931201",
    "html_url": "https://github.com/ipython/ipython/issues/1057#issuecomment-2931201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1057",
    "id": 2931201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzEyMDE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-29T15:30:09Z",
    "updated_at": "2011-11-29T15:30:09Z",
    "author_association": "MEMBER",
    "body": "Ok, fixed, with dictionnary, (rebased, force pushed ) several times because I'm a moron, and also to put space around equal sign...\n\nThere is some redundent info as now, `_ExecutionRequest` namedTuple not only contains `msg_id` and `kind` , but are stored in a dictionnary with `msg_id` as key... \nJust get a question on this `else`:\nhttps://github.com/ipython/ipython/blob/master/IPython/frontend/qt/console/ipython_widget.py#L173\nwhy is it aligned with `if info.kind` and not `if info` , like here :\nhttps://github.com/ipython/ipython/blob/master/IPython/frontend/qt/console/frontend_widget.py#L403\n"
  }
]
