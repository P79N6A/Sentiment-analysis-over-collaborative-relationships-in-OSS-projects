[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236190",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-236190",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 236190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE5MA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:35:46Z",
    "updated_at": "2010-05-10T09:35:46Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Fernando Perez, on 2010-04-25 23:36:38.673176+00:00 ]\n\nOK, I can confirm the problem (even on trunk), but it's hard.  I am just for now making sure this bug is confirmed so we keep tracking it, but I'm not sure how to fix it.\n\nThe issue is that in embedded shells, we try to update the global namespace to use the surrounding scope (that's the point of an embedded shell, to be able to see what's around you).  But this then causes python to fail to resolve the ipython interactive namespace when nested things (like local functions) are defined.  See the mainloop() method of the embedded shell for details.\n\nI need to think a lot more about how to fix this one, any ideas very much welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/588682",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-588682",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 588682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODY4Mg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-12-04T20:23:08Z",
    "updated_at": "2010-12-04T20:23:08Z",
    "author_association": "MEMBER",
    "body": "Over at launchpad...\n\nchairmanK wrote 20 hours ago:\n\nMe Too. In addition to functions, this bug also appears in generator expressions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/908374",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-908374",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 908374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODM3NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T16:36:52Z",
    "updated_at": "2011-03-23T16:36:52Z",
    "author_association": "MEMBER",
    "body": "The equivalent component in trunk seems to be IPython.frontend.terminal.InteractiveShellEmbed. But that's broken in other ways, and evidently hasn't been tested much. Does anyone know what its future is?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/908506",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-908506",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 908506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODUwNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T17:03:41Z",
    "updated_at": "2011-03-23T17:03:41Z",
    "author_association": "MEMBER",
    "body": "Could this be the same issue as #136?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2893009",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-2893009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 2893009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTMwMDk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-28T05:26:56Z",
    "updated_at": "2011-11-28T05:26:56Z",
    "author_association": "MEMBER",
    "body": "This has been now fixed:\n\n```\namirbar[ipython]> python\nPython 2.7.2+ (default, Oct  4 2011, 20:06:09) \n[GCC 4.6.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from IPython import embed\n>>> embed()\nPython 2.7.2+ (default, Oct  4 2011, 20:06:09) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: a = 1\n\nIn [2]: def f(x):\n   ...:     return a*x\n   ...: \n\nIn [3]: f(3)\nOut[3]: 3\n\nIn [4]: b = 1\n\nIn [5]: (lambda : b)()\nOut[5]: 1\n\nIn [6]: \n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3853421",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-3853421",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 3853421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM0MjE=",
    "user": {
      "login": "daf",
      "id": 228715,
      "node_id": "MDQ6VXNlcjIyODcxNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/228715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daf",
      "html_url": "https://github.com/daf",
      "followers_url": "https://api.github.com/users/daf/followers",
      "following_url": "https://api.github.com/users/daf/following{/other_user}",
      "gists_url": "https://api.github.com/users/daf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daf/subscriptions",
      "organizations_url": "https://api.github.com/users/daf/orgs",
      "repos_url": "https://api.github.com/users/daf/repos",
      "events_url": "https://api.github.com/users/daf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T18:34:35Z",
    "updated_at": "2012-02-07T18:34:35Z",
    "author_association": "NONE",
    "body": "Can someone explain a little more what went into the fix of this?  I still encounter the issue, but only when I'm one layer removed via a method call, and only if I run from a script, not interactively.\n\npython 2.7.2 on OSX 10.6.8, ipython 0.11 and 0.12 both exhibit similar behavior (using 0.12 for this comment)\n\nThis is a problem with our project which features (prominently) an embedded IPython shell.\n\ntestembed.py\n\n``` python\nfrom IPython import embed\n\ndef hi():\n    embed()\n\nif __name__ == '__main__':\n    #embed()\n    hi()\n```\n\nRun this on the command line with `python testembed.py` and see this session:\n\n```\nPython 2.7.2 (default, Aug 29 2011, 12:33:18) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import time\n\nIn [2]: def tim():\n   ...:     print time.time()\n   ...:     \n\nIn [3]: tim()\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n[snip] in <module>()\n----> 1 tim()\n\n[snip] in tim()\n      1 def tim():\n----> 2     print time.time()\n      3 \n\nNameError: global name 'time' is not defined\n\nIn [4]: \n```\n\nHowever, comment out the call to `hi()` and replace it with the `embed()` call:\n\n```\nPython 2.7.2 (default, Aug 29 2011, 12:33:18) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import time\n\nIn [2]: def tim():\n    print time.time()\n   ...:     \n\nIn [3]: tim()\n1328639444.29\n\nIn [4]: \n```\n\nAfter poking around, I think it has to do with the `stack_depth` parameter used here and this block: https://github.com/ipython/ipython/blob/master/IPython/frontend/terminal/embed.py#L185\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3853666",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-3853666",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 3853666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM2NjY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T18:48:03Z",
    "updated_at": "2012-02-07T18:48:03Z",
    "author_association": "MEMBER",
    "body": "This is somewhat complicated, but I believe that's a restriction in Python itself.\n\nIn the failing case you show, `time` is not actually put into the global namespace: because you called `embed` inside the `hi` function, new variables you create interactively are local to that function. Ideally, `tim()` should work as a closure, closing over the reference to the time module. However, closures only appear to work when the containing function is compiled in one go. As far as I can tell, there is no way to define a closure dynamically. This simple example fails:\n\n```\ndef outer():\n    import time\n    exec(\"def inner(): return time.time()\")\n    return inner\n\nouter()()\n```\n\nThis is probably because nested scopes were added to Python relatively late (they were a **future** import in 2.1, and always on in 2.2).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3853875",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-3853875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 3853875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM4NzU=",
    "user": {
      "login": "daf",
      "id": 228715,
      "node_id": "MDQ6VXNlcjIyODcxNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/228715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daf",
      "html_url": "https://github.com/daf",
      "followers_url": "https://api.github.com/users/daf/followers",
      "following_url": "https://api.github.com/users/daf/following{/other_user}",
      "gists_url": "https://api.github.com/users/daf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daf/subscriptions",
      "organizations_url": "https://api.github.com/users/daf/orgs",
      "repos_url": "https://api.github.com/users/daf/repos",
      "events_url": "https://api.github.com/users/daf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T18:58:36Z",
    "updated_at": "2012-02-07T18:58:51Z",
    "author_association": "NONE",
    "body": "Ok, I think I understand.  Looks like we can't really do anything about this then, other than dumping what I would write interactively to a file and then reading that file back in.  Probably too complex for what we want to be able to do interactively.\n\nThanks, btw.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3854153",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-3854153",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 3854153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQxNTM=",
    "user": {
      "login": "daf",
      "id": 228715,
      "node_id": "MDQ6VXNlcjIyODcxNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/228715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daf",
      "html_url": "https://github.com/daf",
      "followers_url": "https://api.github.com/users/daf/followers",
      "following_url": "https://api.github.com/users/daf/following{/other_user}",
      "gists_url": "https://api.github.com/users/daf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daf/subscriptions",
      "organizations_url": "https://api.github.com/users/daf/orgs",
      "repos_url": "https://api.github.com/users/daf/repos",
      "events_url": "https://api.github.com/users/daf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T19:14:26Z",
    "updated_at": "2012-02-07T19:14:26Z",
    "author_association": "NONE",
    "body": "Sorry to keep harping on here, but it just makes interactive sessions feel very clunky:\n\nRegular python:\n\n```\n>>> d={'one':1, 'two':2}\n>>> getkeys=lambda: d.keys()\n>>> getkeys()\n['two', 'one']\n```\n\nRegular IPython:\n\n```\nIn [1]: d={'one':1, 'two':2}\n\nIn [2]: getkeys=lambda: d.keys()\n\nIn [3]: getkeys()\nOut[3]: ['two', 'one']\n```\n\nEmbedded IPython:\n\n```\n>>> from IPython import embed\n>>> embed()\nPython 2.7.2 (default, Aug 29 2011, 12:33:18) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: d={'one':1, 'two':2}\n\nIn [2]: getkeys=lambda: d.keys()\n\nIn [3]: getkeys()\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n/Users/asadeveloper/Documents/Dev/code/pyon/bin/python in <module>()\n----> 1 getkeys()\n\n/Users/asadeveloper/Documents/Dev/code/pyon/bin/python in <lambda>()\n----> 1 getkeys=lambda: d.keys()\n\nNameError: global name 'd' is not defined\n```\n\nI guess there isn't much that can be done, but I don't get why we can create a dynamic closure in regular python/ipython but not the embedded version.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3854940",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-3854940",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 3854940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQ5NDA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-07T20:02:58Z",
    "updated_at": "2012-02-07T20:02:58Z",
    "author_association": "MEMBER",
    "body": "By the oddities of Python scoping, in standard Python/IPython, we're not actually creating a closure. `d` is a global variable, and the rules for accessing those work differently from closures. Each function keeps a reference to the global namespace where it was defined (`getkeys.func_globals`), so it can access any variables defined there.\n\nIn contrast, when you make a closure, Python attaches references to each variable over which it has closed, as determined by the compiler - but that only works when the inner and outer functions are compiled at the same time. It looks like this:\n\n```\nIn [8]: def outer():\n    a = 1\n    def inner():\n        return a\n    return inner\n   ...: \n\nIn [9]: f = outer()\n\nIn [10]: f\nOut[10]: <function __main__.inner>\n\nIn [11]: f.func_closure\nOut[11]: (<cell at 0x9f5e344: int object at 0x9a830b0>,)\n```\n\nThis is possibly done to save memory - if the closure carried a reference to the local scope where it was defined, none of the variables from that scope could be freed while the closure was live.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5306745",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5306745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5306745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDY3NDU=",
    "user": {
      "login": "liokm",
      "id": 179341,
      "node_id": "MDQ6VXNlcjE3OTM0MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/179341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liokm",
      "html_url": "https://github.com/liokm",
      "followers_url": "https://api.github.com/users/liokm/followers",
      "following_url": "https://api.github.com/users/liokm/following{/other_user}",
      "gists_url": "https://api.github.com/users/liokm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liokm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liokm/subscriptions",
      "organizations_url": "https://api.github.com/users/liokm/orgs",
      "repos_url": "https://api.github.com/users/liokm/repos",
      "events_url": "https://api.github.com/users/liokm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liokm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-24T15:12:33Z",
    "updated_at": "2012-04-24T15:12:33Z",
    "author_association": "NONE",
    "body": "I'm using Python 2.7.2 and IPython 0.12.1 on OSX 10.7.3 and having this issue still. When I run `./manage.py shell` of Django which invokes `IPython.embed()`, the issue occurs. However, manually invoking the `embed()` in Python shell or from simple script file, there is no problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5306921",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5306921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5306921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDY5MjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-24T15:19:02Z",
    "updated_at": "2012-04-24T15:19:02Z",
    "author_association": "MEMBER",
    "body": "There's not a lot we can directly do about that, but we should probably encourage third parties away from `embed` for non-trivial uses.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5307763",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5307763",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5307763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc3NjM=",
    "user": {
      "login": "liokm",
      "id": 179341,
      "node_id": "MDQ6VXNlcjE3OTM0MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/179341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liokm",
      "html_url": "https://github.com/liokm",
      "followers_url": "https://api.github.com/users/liokm/followers",
      "following_url": "https://api.github.com/users/liokm/following{/other_user}",
      "gists_url": "https://api.github.com/users/liokm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liokm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liokm/subscriptions",
      "organizations_url": "https://api.github.com/users/liokm/orgs",
      "repos_url": "https://api.github.com/users/liokm/repos",
      "events_url": "https://api.github.com/users/liokm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liokm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-24T15:53:17Z",
    "updated_at": "2012-04-24T15:53:17Z",
    "author_association": "NONE",
    "body": "@takluyver Do you mean that better to use ipython directly in this case?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5308175",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5308175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5308175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDgxNzU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-24T16:10:16Z",
    "updated_at": "2012-04-24T16:10:16Z",
    "author_association": "MEMBER",
    "body": "It's possible for Django to start IPython in a way that won't cause this problem, but that's not the way we currently make easy. The problem occurs when IPython starts with separate local and global namespaces. There's no reason that Django requires separate local and global namespaces, but that's what calling `embed()` inside a function implies.\n\nFor reference, here's the code in Django:\nhttps://code.djangoproject.com/browser/django/trunk/django/core/management/commands/shell.py\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5323816",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5323816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5323816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjM4MTY=",
    "user": {
      "login": "liokm",
      "id": 179341,
      "node_id": "MDQ6VXNlcjE3OTM0MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/179341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liokm",
      "html_url": "https://github.com/liokm",
      "followers_url": "https://api.github.com/users/liokm/followers",
      "following_url": "https://api.github.com/users/liokm/following{/other_user}",
      "gists_url": "https://api.github.com/users/liokm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liokm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liokm/subscriptions",
      "organizations_url": "https://api.github.com/users/liokm/orgs",
      "repos_url": "https://api.github.com/users/liokm/repos",
      "events_url": "https://api.github.com/users/liokm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liokm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-25T03:55:25Z",
    "updated_at": "2012-04-25T03:55:25Z",
    "author_association": "NONE",
    "body": "@takluyver That makes sense, thank! I'm opening a Django ticket for this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5324053",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5324053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5324053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjQwNTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-25T04:17:41Z",
    "updated_at": "2012-04-25T04:17:41Z",
    "author_association": "MEMBER",
    "body": "@takluyver, now that we've merged embed_kernel so all the main pieces are in place, do you want to tackle a bit a cleanup of this to make slightly more fine-tuned uses easier?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5327036",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-5327036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 5327036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjcwMzY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-25T09:03:08Z",
    "updated_at": "2012-04-25T09:03:08Z",
    "author_association": "MEMBER",
    "body": "I'll have a look at what interface might make most sense.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8100772",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-8100772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 8100772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDA3NzI=",
    "user": {
      "login": "dellis23",
      "id": 1346302,
      "node_id": "MDQ6VXNlcjEzNDYzMDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1346302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dellis23",
      "html_url": "https://github.com/dellis23",
      "followers_url": "https://api.github.com/users/dellis23/followers",
      "following_url": "https://api.github.com/users/dellis23/following{/other_user}",
      "gists_url": "https://api.github.com/users/dellis23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dellis23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dellis23/subscriptions",
      "organizations_url": "https://api.github.com/users/dellis23/orgs",
      "repos_url": "https://api.github.com/users/dellis23/repos",
      "events_url": "https://api.github.com/users/dellis23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dellis23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-28T17:55:37Z",
    "updated_at": "2012-08-28T17:55:37Z",
    "author_association": "NONE",
    "body": "I am still having trouble with this issue.  I've tried narrowing down exactly what's causing it, and the best I can determine is that it only happens on Ubuntu 12.04.  I've tried all of the latest release versions on other servers, and it works fine.  But any time I define a function in ipython or use %cpaste to paste in a function from another file, the inside of that function has no access to the global scope.  It makes it basically impossible to do anything useful in terms of writing functions on the fly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8982354",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-8982354",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 8982354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODIzNTQ=",
    "user": {
      "login": "fletom",
      "id": 127497,
      "node_id": "MDQ6VXNlcjEyNzQ5Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/127497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fletom",
      "html_url": "https://github.com/fletom",
      "followers_url": "https://api.github.com/users/fletom/followers",
      "following_url": "https://api.github.com/users/fletom/following{/other_user}",
      "gists_url": "https://api.github.com/users/fletom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fletom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fletom/subscriptions",
      "organizations_url": "https://api.github.com/users/fletom/orgs",
      "repos_url": "https://api.github.com/users/fletom/repos",
      "events_url": "https://api.github.com/users/fletom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fletom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-28T16:22:38Z",
    "updated_at": "2012-09-28T16:22:38Z",
    "author_association": "NONE",
    "body": "I am still having this problem with IPython 0.13 when it is called from other tools (e.g. Django's debugsqlshell command). It's very frustrating that something as basic as defining a function is totally broken.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8984677",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-8984677",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 8984677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODQ2Nzc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-28T17:27:27Z",
    "updated_at": "2012-09-28T17:27:27Z",
    "author_association": "MEMBER",
    "body": "I think embed() is the wrong interface for those to be using. embed() is\nintended more for examining the state of a running program, so it uses\nseparate local and global namespaces. To get round this issue, ipython\nneeds to be started with a single interface. Sorry, I haven't had time to\nwork out what the best way to do it is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10544226",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-10544226",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 10544226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTQ0MjI2",
    "user": {
      "login": "JoeZ99",
      "id": 479027,
      "node_id": "MDQ6VXNlcjQ3OTAyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/479027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoeZ99",
      "html_url": "https://github.com/JoeZ99",
      "followers_url": "https://api.github.com/users/JoeZ99/followers",
      "following_url": "https://api.github.com/users/JoeZ99/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoeZ99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoeZ99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoeZ99/subscriptions",
      "organizations_url": "https://api.github.com/users/JoeZ99/orgs",
      "repos_url": "https://api.github.com/users/JoeZ99/repos",
      "events_url": "https://api.github.com/users/JoeZ99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoeZ99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-20T06:30:50Z",
    "updated_at": "2012-11-20T06:30:50Z",
    "author_association": "NONE",
    "body": "Not only ubuntu. debian wheezy also shows that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12692225",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-12692225",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 12692225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjkyMjI1",
    "user": {
      "login": "reverie",
      "id": 73446,
      "node_id": "MDQ6VXNlcjczNDQ2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/73446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reverie",
      "html_url": "https://github.com/reverie",
      "followers_url": "https://api.github.com/users/reverie/followers",
      "following_url": "https://api.github.com/users/reverie/following{/other_user}",
      "gists_url": "https://api.github.com/users/reverie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reverie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reverie/subscriptions",
      "organizations_url": "https://api.github.com/users/reverie/orgs",
      "repos_url": "https://api.github.com/users/reverie/repos",
      "events_url": "https://api.github.com/users/reverie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reverie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-25T08:37:42Z",
    "updated_at": "2013-01-25T08:37:42Z",
    "author_association": "NONE",
    "body": "FYI, the Django ticket @liokm created above is https://code.djangoproject.com/ticket/18204, which now points to https://code.djangoproject.com/ticket/17078, which looks to have been fixed in trunk. It should land in 1.5.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22248255",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-22248255",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 22248255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ4MjU1",
    "user": {
      "login": "bkvirendra",
      "id": 1097043,
      "node_id": "MDQ6VXNlcjEwOTcwNDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1097043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkvirendra",
      "html_url": "https://github.com/bkvirendra",
      "followers_url": "https://api.github.com/users/bkvirendra/followers",
      "following_url": "https://api.github.com/users/bkvirendra/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkvirendra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkvirendra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkvirendra/subscriptions",
      "organizations_url": "https://api.github.com/users/bkvirendra/orgs",
      "repos_url": "https://api.github.com/users/bkvirendra/repos",
      "events_url": "https://api.github.com/users/bkvirendra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkvirendra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T12:46:13Z",
    "updated_at": "2013-08-07T12:46:13Z",
    "author_association": "NONE",
    "body": "I m having the same issue on Ubuntu with Ipython 0.13.2\n![screenshot from 2013-08-07 18 13 33](https://f.cloud.github.com/assets/1097043/924119/51d107e2-ff5f-11e2-9ff4-e823d236fd69.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22267046",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-22267046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 22267046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjY3MDQ2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T17:09:59Z",
    "updated_at": "2013-08-07T17:09:59Z",
    "author_association": "MEMBER",
    "body": "@bkvirendra that is fixed in django 1.6\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22267283",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-22267283",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 22267283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjY3Mjgz",
    "user": {
      "login": "bkvirendra",
      "id": 1097043,
      "node_id": "MDQ6VXNlcjEwOTcwNDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1097043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkvirendra",
      "html_url": "https://github.com/bkvirendra",
      "followers_url": "https://api.github.com/users/bkvirendra/followers",
      "following_url": "https://api.github.com/users/bkvirendra/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkvirendra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkvirendra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkvirendra/subscriptions",
      "organizations_url": "https://api.github.com/users/bkvirendra/orgs",
      "repos_url": "https://api.github.com/users/bkvirendra/repos",
      "events_url": "https://api.github.com/users/bkvirendra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkvirendra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T17:13:32Z",
    "updated_at": "2013-08-07T17:13:32Z",
    "author_association": "NONE",
    "body": "But 1.6 is not even stable yet! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22267905",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-22267905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 22267905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjY3OTA1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T17:22:16Z",
    "updated_at": "2013-08-07T17:22:16Z",
    "author_association": "MEMBER",
    "body": "> But 1.6 is not even stable yet!\n\nSoftware are not always stable, and between releases there might still be bugs. But there is nothing that should be fixed in IPython. Even if we do something here, the fix would not be in IPython stable before it is released either...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/223814163",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-223814163",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 223814163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzgxNDE2Mw==",
    "user": {
      "login": "philippschw",
      "id": 16430633,
      "node_id": "MDQ6VXNlcjE2NDMwNjMz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/16430633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philippschw",
      "html_url": "https://github.com/philippschw",
      "followers_url": "https://api.github.com/users/philippschw/followers",
      "following_url": "https://api.github.com/users/philippschw/following{/other_user}",
      "gists_url": "https://api.github.com/users/philippschw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philippschw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philippschw/subscriptions",
      "organizations_url": "https://api.github.com/users/philippschw/orgs",
      "repos_url": "https://api.github.com/users/philippschw/repos",
      "events_url": "https://api.github.com/users/philippschw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philippschw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-05T13:51:05Z",
    "updated_at": "2016-06-05T13:51:05Z",
    "author_association": "NONE",
    "body": "Problem still persists in ipython==4.2.0. Interestingly under windows it is no problem but together with ubuntu global variables are not recognized.\n\nUse case:\n\n```\nfrom ipywidgets import interact, FloatSlider, IntSlider,RadioButtons, Dropdown\n\n@interact(sv1 = radio_1, Scenario = drop_1, sv2 = slider_2)\ndef update_map(sv1,sv2, Scenario):\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244865710",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-244865710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 244865710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDg2NTcxMA==",
    "user": {
      "login": "blackball",
      "id": 522354,
      "node_id": "MDQ6VXNlcjUyMjM1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/522354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blackball",
      "html_url": "https://github.com/blackball",
      "followers_url": "https://api.github.com/users/blackball/followers",
      "following_url": "https://api.github.com/users/blackball/following{/other_user}",
      "gists_url": "https://api.github.com/users/blackball/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blackball/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blackball/subscriptions",
      "organizations_url": "https://api.github.com/users/blackball/orgs",
      "repos_url": "https://api.github.com/users/blackball/repos",
      "events_url": "https://api.github.com/users/blackball/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blackball/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T06:59:26Z",
    "updated_at": "2016-09-06T06:59:26Z",
    "author_association": "NONE",
    "body": "Problem remains. IPython 3.1.0, Debian Whezzy. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/254361207",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-254361207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 254361207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDM2MTIwNw==",
    "user": {
      "login": "anfedorov",
      "id": 9820,
      "node_id": "MDQ6VXNlcjk4MjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anfedorov",
      "html_url": "https://github.com/anfedorov",
      "followers_url": "https://api.github.com/users/anfedorov/followers",
      "following_url": "https://api.github.com/users/anfedorov/following{/other_user}",
      "gists_url": "https://api.github.com/users/anfedorov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anfedorov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anfedorov/subscriptions",
      "organizations_url": "https://api.github.com/users/anfedorov/orgs",
      "repos_url": "https://api.github.com/users/anfedorov/repos",
      "events_url": "https://api.github.com/users/anfedorov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anfedorov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-17T23:11:29Z",
    "updated_at": "2016-10-18T17:39:30Z",
    "author_association": "NONE",
    "body": "If I recall correctly, this was fixed for a little while, and seems to be reintroduced (reproduced using IPython 5.1.0 on macOS here: https://git.io/vPDrJ).\n\n(edit: I may be mis-remembering the fix. It's possible I just threw everything I needed into a startup file instead of using embed)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/254676612",
    "html_url": "https://github.com/ipython/ipython/issues/62#issuecomment-254676612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/62",
    "id": 254676612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDY3NjYxMg==",
    "user": {
      "login": "Erotemic",
      "id": 3186211,
      "node_id": "MDQ6VXNlcjMxODYyMTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Erotemic",
      "html_url": "https://github.com/Erotemic",
      "followers_url": "https://api.github.com/users/Erotemic/followers",
      "following_url": "https://api.github.com/users/Erotemic/following{/other_user}",
      "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions",
      "organizations_url": "https://api.github.com/users/Erotemic/orgs",
      "repos_url": "https://api.github.com/users/Erotemic/repos",
      "events_url": "https://api.github.com/users/Erotemic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Erotemic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T00:22:16Z",
    "updated_at": "2016-10-19T00:22:43Z",
    "author_association": "NONE",
    "body": "Just in case this helps anyone I've been using this piece of code as a workaround \n\n``` python\n    def fix_embed_globals(N=0):\n        # Get the parent frame\n        import inspect\n        frame_level0 = inspect.currentframe()\n        frame_cur = frame_level0\n        N = 2  # I may have this value off by one. I rewrote this function to use only standard calls\n        strict = False\n        for _ix in range(N + 1):\n            frame_next = frame_cur.f_back\n            if frame_next is None:\n                if strict:\n                    raise AssertionError('Frame level %r is root' % _ix)\n                else:\n                    break\n            frame_cur = frame_next\n        parent_frame = frame_cur\n        # Add locals to parent globals\n        parent_frame.f_locals.update(parent_frame.f_globals)\n        parent_frame.f_globals['_didfixipyglobals'] = True\n```\n\nI just call that function whenever I get the name error. It puts all locals in your current frame into the global dictionary. Its hacky but it works in most circumstances. \n"
  }
]
