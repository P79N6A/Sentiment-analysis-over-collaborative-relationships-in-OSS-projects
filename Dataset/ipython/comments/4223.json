[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24603539",
    "html_url": "https://github.com/ipython/ipython/issues/4223#issuecomment-24603539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4223",
    "id": 24603539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjAzNTM5",
    "user": {
      "login": "jsw-fnal",
      "id": 1820733,
      "node_id": "MDQ6VXNlcjE4MjA3MzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1820733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsw-fnal",
      "html_url": "https://github.com/jsw-fnal",
      "followers_url": "https://api.github.com/users/jsw-fnal/followers",
      "following_url": "https://api.github.com/users/jsw-fnal/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsw-fnal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsw-fnal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsw-fnal/subscriptions",
      "organizations_url": "https://api.github.com/users/jsw-fnal/orgs",
      "repos_url": "https://api.github.com/users/jsw-fnal/repos",
      "events_url": "https://api.github.com/users/jsw-fnal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsw-fnal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T16:46:17Z",
    "updated_at": "2013-09-17T16:46:17Z",
    "author_association": "NONE",
    "body": "This is not unique to Control-Enter.  It works with Shift-Enter and the various \"Run\" options from the cell menu as well.  You don't even have to use the same means of execution twice, for example Control-Enter followed by \"Run all\" will produce doubled output.\n\nFinally, you don't need a spinning delay (like a long computation) to produce this effect.  Making a delay with time.sleep() works just as well.\n\n```\nimport time\ntime.sleep(5)\nprint 'xxx'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24609234",
    "html_url": "https://github.com/ipython/ipython/issues/4223#issuecomment-24609234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4223",
    "id": 24609234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjA5MjM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T18:01:55Z",
    "updated_at": "2013-09-17T18:02:32Z",
    "author_association": "MEMBER",
    "body": "This is a bit more general than an order of operations bug.  This should be a summary of the relevant bits:\n- when you execute, `cell.output_area.handle_output` is registered as the callback\n- this callback is never cleared\n- when you submit a new execution, the output_area is cleared, but it remains the same object, so the old callback is still registered\n- if output from an execution has not come by the time the cell is resubmitted, the earlier executions output will still be appended\n\nI think we can get away with fixing this by simply clearing the callbacks for the last execution when we submit a new one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24609424",
    "html_url": "https://github.com/ipython/ipython/issues/4223#issuecomment-24609424",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4223",
    "id": 24609424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjA5NDI0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T18:04:12Z",
    "updated_at": "2013-09-17T18:04:12Z",
    "author_association": "MEMBER",
    "body": "should be fixed by #4224.\n"
  }
]
