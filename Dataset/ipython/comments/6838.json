[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61429737",
    "html_url": "https://github.com/ipython/ipython/pull/6838#issuecomment-61429737",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6838",
    "id": 61429737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDI5NzM3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T23:45:03Z",
    "updated_at": "2014-11-02T23:45:10Z",
    "author_association": "MEMBER",
    "body": "This patch doesn't apply cleanly because it's based on a version of IPython from a year and a half ago. Can you try to rebase on a fresh checkout of master?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61433865",
    "html_url": "https://github.com/ipython/ipython/pull/6838#issuecomment-61433865",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6838",
    "id": 61433865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDMzODY1",
    "user": {
      "login": "mattvonrocketstein",
      "id": 182887,
      "node_id": "MDQ6VXNlcjE4Mjg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/182887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattvonrocketstein",
      "html_url": "https://github.com/mattvonrocketstein",
      "followers_url": "https://api.github.com/users/mattvonrocketstein/followers",
      "following_url": "https://api.github.com/users/mattvonrocketstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattvonrocketstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattvonrocketstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattvonrocketstein/subscriptions",
      "organizations_url": "https://api.github.com/users/mattvonrocketstein/orgs",
      "repos_url": "https://api.github.com/users/mattvonrocketstein/repos",
      "events_url": "https://api.github.com/users/mattvonrocketstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattvonrocketstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T01:52:29Z",
    "updated_at": "2014-11-03T01:52:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry about that, my github fork was old so the diff looked clean.  My branch should be good now.  (Do I need to submit another pull request or is this one updated after I change my branch?)  Incidentally, since none of these files have changed in forever.. backports are simple if anyone actually cares about that.  My test coverage is 100% of the new code, but I'm not sure if I'm abusing any of the preferred style / API idioms.. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61437489",
    "html_url": "https://github.com/ipython/ipython/pull/6838#issuecomment-61437489",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6838",
    "id": 61437489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDM3NDg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T03:31:57Z",
    "updated_at": "2014-11-03T03:31:57Z",
    "author_association": "MEMBER",
    "body": "> (Do I need to submit another pull request or is this one updated after I change my branch?)\n\nNo need for a new PR, just keep updating the same branch, and it will update the PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62655031",
    "html_url": "https://github.com/ipython/ipython/pull/6838#issuecomment-62655031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6838",
    "id": 62655031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjU1MDMx",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T01:24:09Z",
    "updated_at": "2014-11-12T01:24:09Z",
    "author_association": "MEMBER",
    "body": "I agree with @takluyver about that general idea of keeping this as an external extension... for the reason already exposed...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62672540",
    "html_url": "https://github.com/ipython/ipython/pull/6838#issuecomment-62672540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6838",
    "id": 62672540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjcyNTQw",
    "user": {
      "login": "mattvonrocketstein",
      "id": 182887,
      "node_id": "MDQ6VXNlcjE4Mjg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/182887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattvonrocketstein",
      "html_url": "https://github.com/mattvonrocketstein",
      "followers_url": "https://api.github.com/users/mattvonrocketstein/followers",
      "following_url": "https://api.github.com/users/mattvonrocketstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattvonrocketstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattvonrocketstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattvonrocketstein/subscriptions",
      "organizations_url": "https://api.github.com/users/mattvonrocketstein/orgs",
      "repos_url": "https://api.github.com/users/mattvonrocketstein/repos",
      "events_url": "https://api.github.com/users/mattvonrocketstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattvonrocketstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T05:32:07Z",
    "updated_at": "2014-11-12T05:32:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think it makes sense to have some amount of shell-like functionality within IPython, like !foo and aliases for things like ls. I suspect we could give up the x = !ls syntax without too many complaints - I've only seen it used as a party trick - but since it's already there and doesn't seem to interfere too much, why bother ripping it out?\n\nNo complaints about externalizing the extension, but I do think there are still some open questions as far as the what's-in-stays-in aspect.  Isn't it odd to keep something that there's no interest in maintaining/improving in the repo?  I do think there are existing bugs:\n\n```\nIn [1]: ! function hello { echo hello; } && hello\nhello\nIn [2]: x=! function hello { echo hello; } && hello\nIn [3]: x\nOut[3]: \n['/bin/sh: 1: function: not found',\n '/bin/sh: 1: Syntax error: \"&&\" unexpected']\n```\n\nWould fixes for things like this be considered for the main repo or is there a freeze on any such change?  Granted quite possibly no one cares except me, but, it's not ideal to have to monkey patch stuff to get around the issues.  There is another thing I've been thinking about, and I'm not sure if this document is still current, but does the treatment of \"!\" preprocessing not also complicate things like [IPEP-11:-Tab-Completion-System-Refactor](https://github.com/ipython/ipython/wiki/IPEP-11:-Tab-Completion-System-Refactor)?  And as I mentioned before, rehashx creates aliases that are impossible to use (anything with a subtraction sign, so \"apt-get\" and friends).  \n\nIn summary I'm fine with pysh being completely external, but what is the future of dealing with corner cases for the built in shell-like behavior?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62783141",
    "html_url": "https://github.com/ipython/ipython/pull/6838#issuecomment-62783141",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6838",
    "id": 62783141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzgzMTQx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T19:59:24Z",
    "updated_at": "2014-11-12T19:59:24Z",
    "author_association": "MEMBER",
    "body": "I think with things like that, we have to take them on a case by case basis. If a clean, sensible fix is possible, we'll accept it, but if it's too ugly or complex, I don't think it matters if something like writing bash functions in a `!command` is broken. It's intended as a simple interactive convenience for running other programs, not an escape for arbitrary shell coding (we have a `%%bash` cell magic and a bash kernel that come closer to that).\n\nAnyway, it doesn't seem like anyone is arguing pysh really belongs in IPython, so I'm going to close this PR. Feel free to continue discussion here, or open new issues for specific things you think we should do.\n"
  }
]
