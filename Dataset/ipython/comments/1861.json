[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6136169",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6136169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6136169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzYxNjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T20:43:48Z",
    "updated_at": "2012-06-05T20:43:48Z",
    "author_association": "MEMBER",
    "body": "This looks pretty nice.  Though you mustn't use the dvipng backend unconditionally, as it may not be present.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6136455",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6136455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6136455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzY0NTU=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T20:55:28Z",
    "updated_at": "2012-06-05T20:55:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quite right.  Is returning None delegate the work to other formatter?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6136514",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6136514",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6136514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzY1MTQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T20:57:42Z",
    "updated_at": "2012-06-05T20:57:42Z",
    "author_association": "MEMBER",
    "body": "returning None will delegate to other mimetypes, but if you want to fallback on the mpl backend, then you have to do that yourself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6137007",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6137007",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6137007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzcwMDc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T21:17:18Z",
    "updated_at": "2012-06-05T21:17:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think latex output of Matrix can't rendered by matplotlib.  So I guess returning None when dvipng is not present is OK here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6137204",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6137204",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6137204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzcyMDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T21:25:08Z",
    "updated_at": "2012-06-05T21:25:08Z",
    "author_association": "MEMBER",
    "body": "That makes sense, can you add a comment to that effect?  The function itself looks generic, so it's unclear why it would never be used with mpl.\n\nAnd please don't do pep8 cleanup on code other than your own in the future.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6137579",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6137579",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6137579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzc1Nzk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T21:41:11Z",
    "updated_at": "2012-06-05T21:41:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added comment/docstrings.\n\nSorry about PEP8.  I just removed it.  I remember the discussion (I think it was about copyright year stuff) saying this kind of cleanup should be done when the code is touched.  Now I guess it was only for core developers.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6137964",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6137964",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6137964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzc5NjQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T21:58:38Z",
    "updated_at": "2012-06-05T21:58:38Z",
    "author_association": "MEMBER",
    "body": "Thanks!\n\nIPython doesn't enforce pep8, so not all changes it would make should be made just for the sake of it.  The copyright discussion specifically referred to the copyright notice at the top of the file, which everyone is welcome to fix as they edit fies.  Even (or especially) core devs don't do file-wide pep8 at any time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6138064",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6138064",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6138064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzgwNjQ=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T22:03:55Z",
    "updated_at": "2012-06-05T22:03:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had impression that IPython devs try to follow pep8 as much as possible because devs try to apply pep8 even to JS.  But anyway, lesson learned!  Thanks for the explanation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6138332",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6138332",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6138332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzgzMzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-05T22:16:58Z",
    "updated_at": "2012-06-05T22:16:58Z",
    "author_association": "MEMBER",
    "body": "We have been more strict in the JS because it's unfamiliar territory for all of us, so it helps us all stay on the same page while learning a new language.\n\nWe are much more comfortable in Python, and thus more comfortable letting authors make personal style choices in Python code.  pep8 is a great guideline, and \"when in doubt: pep8\", but that doesn't mean an 82 character line needs to be wrapped.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6166295",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6166295",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6166295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjYyOTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T00:24:20Z",
    "updated_at": "2012-06-07T00:24:20Z",
    "author_association": "MEMBER",
    "body": "I don't have dvipng on my machine, so I'm just checking that it does the right thing.  It appears to do the right thing at the Python level, but latex barfs a bunch of crap to the terminal.  Can you squash that by capturing stdout/err on your subprocesses?\n\nYou might also want to use IPython.utils.process.find_cmd on dvipng before even trying, because then you can be fairly sure it's not worth it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6167356",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6167356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6167356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjczNTY=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T02:02:35Z",
    "updated_at": "2012-06-07T02:02:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233067",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6233067",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6233067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMwNjc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T23:41:06Z",
    "updated_at": "2012-06-10T23:41:06Z",
    "author_association": "MEMBER",
    "body": "Sorry if it's a bit of a dumb question: why is this nicer than using mathjax?  In general, mathjax renders more cleanly in the browser, zooms correctly, etc.  Dvipng solutions tend to suffer from nasty resolution-dependent behavior (which are likely to get worse with systems like the upcoming macs with retina displays).\n\nI'm just trying to understand and make sure this is really always an improvement (since it's activated unconditionally).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233143",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6233143",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6233143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMxNDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T23:53:09Z",
    "updated_at": "2012-06-10T23:53:09Z",
    "author_association": "MEMBER",
    "body": "This is for the QtConsole, and not relevant to the notebook.  The notebook will still display the math with mathjax, ignoring the png this produces.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233151",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6233151",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6233151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMxNTE=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T23:54:33Z",
    "updated_at": "2012-06-10T23:54:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it is an improvement because mathjax does not work in Qt console.  My intention to add dvipng backend to latex_to_png function is to cover latex math expressions which are not covered by matplotlib (such as the one by sympy.Matrix).  Besides, if you put latex mime-type notebook won't show png (Am I understanding it correctly?).  So I think it is improvement (or at least zero improvement) for all frontends.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233172",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6233172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6233172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMxNzI=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-10T23:57:36Z",
    "updated_at": "2012-06-10T23:57:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, notebook server will send unused data to notebook client, so I guess it will slow down the response a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233239",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6233239",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6233239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMyMzk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:10:32Z",
    "updated_at": "2012-06-11T00:10:32Z",
    "author_association": "MEMBER",
    "body": "But this is already true of all the other sympy latex, so no big deal to add Matrices to the list.\n\nThe long-term answer is to render latex client-side in the QtConsole, which I think is preferable for various reasons.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233399",
    "html_url": "https://github.com/ipython/ipython/pull/1861#issuecomment-6233399",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1861",
    "id": 6233399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMzOTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:34:51Z",
    "updated_at": "2012-06-11T00:34:51Z",
    "author_association": "MEMBER",
    "body": "Ah, got it.  Then it's good to go, I just wanted to clarify that.  I'll explain in the merge commit.\n\n@tkf, thanks for the contribution!  Merging now, thanks Min for the careful review.\n"
  }
]
