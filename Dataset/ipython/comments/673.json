[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1721692",
    "html_url": "https://github.com/ipython/ipython/issues/673#issuecomment-1721692",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/673",
    "id": 1721692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjE2OTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-03T20:55:12Z",
    "updated_at": "2011-08-03T20:55:12Z",
    "author_association": "MEMBER",
    "body": "Good catch.  The stdin socket is definitely the wrong type.  We need to do one of the following:\n1. use ROUTER to ask a specific frontend for stdin.\n2. restrict the model to give only one frontend access to stdin (this is what our diagram implies is the case)\n\nwhat currently happens with multiple frontends is entirely nonsensical: stdin requests are LRU load-balanced across frontends.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1723132",
    "html_url": "https://github.com/ipython/ipython/issues/673#issuecomment-1723132",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/673",
    "id": 1723132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjMxMzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-04T00:03:38Z",
    "updated_at": "2011-08-04T00:03:38Z",
    "author_association": "MEMBER",
    "body": "Yup, you caught this :)  Thanks for making a proper report for it, we really need to fix this to have real use of multi-client scenarios.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1723308",
    "html_url": "https://github.com/ipython/ipython/issues/673#issuecomment-1723308",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/673",
    "id": 1723308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjMzMDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-04T00:33:11Z",
    "updated_at": "2011-08-04T00:33:11Z",
    "author_association": "MEMBER",
    "body": "There are actually several more than the 2 options I proposed, but all would require some amount of handshaking to be added to frontends connecting to the kernel.  The one we use now (and #2 above) is probably the worst, since a malicious/accidental connection to the stdin socket would cause this problem in a way the kernel has no way of preventing.\n\nMore could be:\n3. implement stdin with a pair of PUB/SUB sockets, broadcasting the request to all, and accepting the first reply\n4. separate req/rep pairs for each frontend\n\nI think 1. and 3. are the best choices, depending on whether we want to bind the stdin request to the caller who caused it in the first place, or let any frontend respond (more flexible, but potentially weird side effects).\n"
  }
]
