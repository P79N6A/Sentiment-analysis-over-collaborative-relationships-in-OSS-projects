[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23482377",
    "html_url": "https://github.com/ipython/ipython/issues/4133#issuecomment-23482377",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4133",
    "id": 23482377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDgyMzc3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T11:27:36Z",
    "updated_at": "2013-08-29T11:27:36Z",
    "author_association": "MEMBER",
    "body": "Docstring are autogenerated, and yes, `construct_parser` does not handle cell magic only function. \nWould you like to open a PR that fixes it, as well as the example ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23483591",
    "html_url": "https://github.com/ipython/ipython/issues/4133#issuecomment-23483591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4133",
    "id": 23483591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDgzNTkx",
    "user": {
      "login": "pleabargain",
      "id": 640846,
      "node_id": "MDQ6VXNlcjY0MDg0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/640846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pleabargain",
      "html_url": "https://github.com/pleabargain",
      "followers_url": "https://api.github.com/users/pleabargain/followers",
      "following_url": "https://api.github.com/users/pleabargain/following{/other_user}",
      "gists_url": "https://api.github.com/users/pleabargain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pleabargain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pleabargain/subscriptions",
      "organizations_url": "https://api.github.com/users/pleabargain/orgs",
      "repos_url": "https://api.github.com/users/pleabargain/repos",
      "events_url": "https://api.github.com/users/pleabargain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pleabargain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T11:54:49Z",
    "updated_at": "2013-08-29T11:54:49Z",
    "author_association": "NONE",
    "body": "I do not know what a PR is but if you point me in the right direction I'd be happy to do what I can. Further, can you tell me why `%%writefile [6] h.py` in screenshot above does not work? Do you have an example of a successful writefile for cell content?\n\nthank you\nDennis\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23484162",
    "html_url": "https://github.com/ipython/ipython/issues/4133#issuecomment-23484162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4133",
    "id": 23484162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDg0MTYy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T12:07:05Z",
    "updated_at": "2013-08-29T12:07:05Z",
    "author_association": "MEMBER",
    "body": "PR means \"Pull Request\". If you fork IPython on gihtub  and modify code it's a mean of telling \"sending\" us your changes.\n\n`writefile` is defined in `IPython/core/magics/osm.py` \n\nUsually `[something]` in docs means that argument is optional and have to be written as is. When value is undefined and can take any form (like a filename) it will be between angle bracket. ie `<something>`\n\nso you have to explicitetly pass `-a`. cf screenshot.\n![capture decran 2013-08-29 a 14 07 53](https://f.cloud.github.com/assets/335567/1049369/6f8a9352-10a3-11e3-9b28-a74d01b80248.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23493156",
    "html_url": "https://github.com/ipython/ipython/issues/4133#issuecomment-23493156",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4133",
    "id": 23493156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDkzMTU2",
    "user": {
      "login": "pleabargain",
      "id": 640846,
      "node_id": "MDQ6VXNlcjY0MDg0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/640846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pleabargain",
      "html_url": "https://github.com/pleabargain",
      "followers_url": "https://api.github.com/users/pleabargain/followers",
      "following_url": "https://api.github.com/users/pleabargain/following{/other_user}",
      "gists_url": "https://api.github.com/users/pleabargain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pleabargain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pleabargain/subscriptions",
      "organizations_url": "https://api.github.com/users/pleabargain/orgs",
      "repos_url": "https://api.github.com/users/pleabargain/repos",
      "events_url": "https://api.github.com/users/pleabargain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pleabargain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T14:25:28Z",
    "updated_at": "2013-08-29T14:25:28Z",
    "author_association": "NONE",
    "body": "Thank you for the detailed response.\n\nre: PRs\nI'll need to read up on how to do this. I'm just tackling this tutorial (with some success)\nhttp://nbviewer.ipython.org/urls/github.com/fperez/reprosw/raw/master/Version%2520Control.ipynb\n\nI would need something similar to know how to do a PR without f*ing things up.\n\nre: %%writefile\nI'm trying to write the contents of cell [6] to file x.py\neg:\n`%%writefile [contents of cell 6] mynewfile.py`\n\nDoes Ipython allow for writing out the contents of a cell to a file?\n\nthank you\nDennis\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23494536",
    "html_url": "https://github.com/ipython/ipython/issues/4133#issuecomment-23494536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4133",
    "id": 23494536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDk0NTM2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T14:42:18Z",
    "updated_at": "2013-08-29T14:43:32Z",
    "author_association": "MEMBER",
    "body": "> I would need something similar to know how to do a PR without f*ing things up.\n\nDon't worry, it is really difficult to break things in git. In github you can even edit everythong without leaving your browser.\n\n> I'm trying to write the contents of cell [6] to file x.py\n> eg:\n> %%writefile [contents of cell 6] mynewfile.py\n\nNo you cannot. It does not make sens if you speak of `<cell number>`\n\nThe process that execute the code does not know about the cell. \n\nPicture yourself on the phone, with a book with line number.\nYou tell random sentences from the book to the person on the other side.\n\nYou can ask : \n    > write the sixth sentence I told you to a sheep of paper.\nIt is the equivalent of asking to save a **Input** number.\n\nBut the following have no sens :  \n\n> write  the sixth line of the book on a paper.\n\nIt is the equivalent of writing a Cell number.\n\nThe only think you can say is \"write what I'll say down\" with `writefile`.\n"
  }
]
