[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299988717",
    "html_url": "https://github.com/ipython/ipython/issues/10518#issuecomment-299988717",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10518",
    "id": 299988717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk4ODcxNw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T20:57:18Z",
    "updated_at": "2017-05-08T20:57:18Z",
    "author_association": "MEMBER",
    "body": "> The drawback is that it will make exporting the notebook to a python script potentially invalid.\r\n\r\nCertainly on par with the magics for the lack of exportability.\r\n\r\nWhen exporting a notebook to a python script, we could define the globals from `ipykernel` assumptions at the top."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299989900",
    "html_url": "https://github.com/ipython/ipython/issues/10518#issuecomment-299989900",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10518",
    "id": 299989900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk4OTkwMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:02:15Z",
    "updated_at": "2017-05-08T21:02:15Z",
    "author_association": "MEMBER",
    "body": "Well you can't really because an exported python script may not run in an\nIPython context. in which case get_ipython will fail.\n\nBut we can figure that later.\n\nOn May 8, 2017 13:57, \"Kyle Kelley\" <notifications@github.com> wrote:\n\n> The drawback is that it will make exporting the notebook to a python\n> script potentially invalid.\n>\n> Certainly on par with the magics for the lack of exportability.\n>\n> When exporting a notebook to a python script, we could define the globals\n> from ipykernel assumptions at the top.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/issues/10518#issuecomment-299988717>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez8Buq9R1c3KZdOz1mhtU0bjBpQLXks5r34GwgaJpZM4NUYtM>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299989944",
    "html_url": "https://github.com/ipython/ipython/issues/10518#issuecomment-299989944",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10518",
    "id": 299989944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk4OTk0NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:02:25Z",
    "updated_at": "2017-05-08T21:02:25Z",
    "author_association": "MEMBER",
    "body": "The primary motivation for this is that a lot of spark documentation and other notebooks assume a global `display` function for displaying and manipulating data frames. It also tends to be very user focused.\r\n\r\nOur current `IPython.display.display` docstring is better for us as developers than users. If we expose a display function, we should make sure that `display?` has more of a data scientist user focus, even if it defers to `IPython.display.display`. :smile:"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299990678",
    "html_url": "https://github.com/ipython/ipython/issues/10518#issuecomment-299990678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10518",
    "id": 299990678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk5MDY3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:05:25Z",
    "updated_at": "2017-05-08T21:05:25Z",
    "author_association": "MEMBER",
    "body": "Do you mind opening another issue for this? We can improve the docs\nseparately.\n\nOn May 8, 2017 14:02, \"Kyle Kelley\" <notifications@github.com> wrote:\n\n> The primary motivation for this is that a lot of spark documentation and\n> other notebooks assume a global display function for displaying and\n> manipulating data frames. It also tends to be very user focused.\n>\n> Our current IPython.display.display docstring is better for us as\n> developers than users. If we expose a display function, we should make sure\n> that display? has more of a data scientist user focus, even if it defers\n> to IPython.display.display. ðŸ˜„\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/issues/10518#issuecomment-299989944>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUez2Vmw1BYvxOnAcxXBmYGWjSlQi5iks5r34LkgaJpZM4NUYtM>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299996438",
    "html_url": "https://github.com/ipython/ipython/issues/10518#issuecomment-299996438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10518",
    "id": 299996438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk5NjQzOA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:29:18Z",
    "updated_at": "2017-05-08T21:29:18Z",
    "author_association": "MEMBER",
    "body": "You're wanting to expose `IPython.display.display` as the global then? I can open a separate issue if the global exposed is `IPython.display.display` as `display`."
  }
]
