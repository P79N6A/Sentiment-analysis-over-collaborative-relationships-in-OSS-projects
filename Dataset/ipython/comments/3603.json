[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20775892",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-20775892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 20775892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc1ODky",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-10T21:48:20Z",
    "updated_at": "2013-07-10T21:48:20Z",
    "author_association": "MEMBER",
    "body": "itemize should not be possible to appear in section headers\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20776179",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-20776179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 20776179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc2MTc5",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-10T21:53:02Z",
    "updated_at": "2013-07-10T21:53:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, they are not rendered, but the are stored in the json and therefore get converted to latex!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21148863",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21148863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21148863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTQ4ODYz",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:09:59Z",
    "updated_at": "2013-07-17T22:13:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jakobgager Actually, \\newcommand etc. are allowed inside math environments.\nThe problem is that they are local to those environments!\n\nI thought of just sticking the \\newcommand's in a %%latex magic cell, but that gets \nhorribly mangled in the conversion process, rather than just passed straight through as it should!\n\nProbably this separate %%latex is a reasonable solution, but at the moment it copies the \\newcommand etc. to the output -- maybe this could somehow be automatically suppressed? \n\nThere is also a funny issue with the converter with the following in a markdown cell:\n\n$\ny = f(x)\n$\n\nThis is correctly interpreted in the markdown cell as an inline equation, but also gets mangled in the LaTeX output.\n$y = f(x)$ all on one line works correctly...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21148946",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21148946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21148946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTQ4OTQ2",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:11:35Z",
    "updated_at": "2013-07-17T22:11:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could there be some kind of %%header magic, which could import an external header file for all of the extra \\usepackage stuff one could need in the latex converter? I presume other converters may also need similar header boilerplate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21150932",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21150932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21150932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUwOTMy",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:46:15Z",
    "updated_at": "2013-07-17T22:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the LaTeX backend and any others which can end up as PDF there must be an option to have the figures exported as PDF rather than PNG. Matplotlib exports excellent PDFs so I guess this is pretty easy for somebody who understands how the code works. I'll give it a try once I get my head round the structure. \n\nIs there a good description somewhere of the nbconvert process?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21151050",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21151050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21151050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUxMDUw",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:48:31Z",
    "updated_at": "2013-07-17T22:48:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @dpsanders for clarifying the \\newcommand issue. I only tested it the other way, so sorry for the somehow wrong info.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21151246",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21151246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21151246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUxMjQ2",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:52:03Z",
    "updated_at": "2013-07-17T22:52:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, there is the option to specify the matplotlib output as svg, which finally gets converted to pdf during the nbconversion process. So I guess this should solve your problem. Should be something like:\n`>>> %config InlineBackend.figure_format = 'svg'`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21151482",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21151482",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21151482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUxNDgy",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:56:15Z",
    "updated_at": "2013-07-17T22:56:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice idea (is that documented somewhere?) but it doesn't seem to work -- still bitmapped images in the PDF.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21151589",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21151589",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21151589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUxNTg5",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T22:58:20Z",
    "updated_at": "2013-07-17T22:58:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding the Latex Header stuff, I proposed a PR some time ago #3570 which splits the markdown cell into \n- markdown,\n- html tags, and\n- something I called tagged comments.\n\nLater are basically provided to inject invisible latex code, so this could be used to define such newcommands.\nHowever, I think includes have to be defined in the preamble and are not permitted in the latex body - please correct me if I'm wrong here (again :smile: )\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21151686",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21151686",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21151686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUxNjg2",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T23:00:16Z",
    "updated_at": "2013-07-17T23:00:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found the svg config here: http://ipython.org/ipython-doc/dev/interactive/qtconsole.html\nIt's really strange that these svgs get pixeled! Will try this tomorrow too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21151776",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21151776",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21151776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUxNzc2",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T23:02:01Z",
    "updated_at": "2013-07-17T23:02:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're correct that includes are not allowed after \\begin{document}.\nOf course, it would be possible to collect all the \\usepackage's from the rest of the document and output them all together...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21152288",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21152288",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21152288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUyMjg4",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T23:12:38Z",
    "updated_at": "2013-07-17T23:12:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "From what I understand in #3607 , inkscape (!) is used to convert SVG to PDF.\nThis seems to me to be a non-useful solution, at least as far as the LaTeX backend is concerned,\nsince a better solution would just be to output PDF straight from matplotlib.\n\nThere is no reason (from my naive, non-developer's point of view) why the _inline_ backend for viewing in the notebook web app should be related to the backend that nbconvert decides to use for a particular output format.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21153637",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21153637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21153637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUzNjM3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T23:44:15Z",
    "updated_at": "2013-07-17T23:44:15Z",
    "author_association": "MEMBER",
    "body": "> since a better solution would just be to output PDF straight from matplotlib.\n\nYes, absolutely.  But this decision has to be done at plot-time, not nbconvert-time, and we have to add a PDF formatter for the PDF to be included in the notebook document.\n\n> There is no reason (from my naive, non-developer's point of view) why the inline backend for viewing in the notebook web app should be related to the backend that nbconvert decides to use for a particular output format.\n\nThere is, in that the inline backend determines what matplotlib generates, and thus what is embedded into the notebook document.  A very important part of nbconvert is that it _does not_ re-run code to generate new figures, it just takes the output already saved in the notebook document, and plops that into the destination format.\n\nThe _right_ way to do proper plots for pdf (in my opinion) is to register a PDF formatter for figures _in addition to_ the PNG / SVG, since PDF won't be visible in the live notebook.  This PDF will then be used by nbconvert for latex output.  This should be helped by some of the cleanup in IPEP 13 / notebook format 4.  But all of this happens before nbconvert is involved at all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21153777",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21153777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21153777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUzNzc3",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-17T23:47:20Z",
    "updated_at": "2013-07-17T23:47:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, thanks for the clarification -- fundamental misunderstanding on my part.\nI completely agree with your proposed solution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21154382",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21154382",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21154382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTU0Mzgy",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T00:01:51Z",
    "updated_at": "2013-07-18T00:01:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Having said that, while I understand that this is the idea of nbconvert, there then needs to be some other tool that can \"run\" a given \"notebook document\" (@Carreau is right: there is a real language problem here) in different ways to produce different output, with the correct configuration for each.\n\nIndeed, I understand that the whole point of the notebook is finally to be able to use a single document to produce, say\n- a reveal slideshow\n- a publishable paper\n- an HTML blog version\n- a documented Python library\n\nWe don't want to have to be going into the Notebook app and manually changing around things like matplotlib backends to get out all these different beasts. Are there proposals in this kind of direction that I can look at?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21154852",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21154852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21154852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTU0ODUy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T00:13:48Z",
    "updated_at": "2013-07-18T00:13:48Z",
    "author_association": "MEMBER",
    "body": "It's actually very [simple](https://gist.github.com/minrk/2620876) to 'run' a notebook in a headless environment.  Stepping through a notebook and running cells is something we should add to IPython.  This is independent of nbconvert, in my mind.\n\nThat said, I think a Transformer could be used by nbconvert to include re-execution as a part of the export process, ignoring the output saved in the document.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21158685",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21158685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21158685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTU4Njg1",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T02:19:26Z",
    "updated_at": "2013-07-18T02:34:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was under the impression that with the `_repr_...` methods, objects could have different representations for different purposes. So there could be one for the display in the notebook and a different one for LaTeX output (so that no PDF representation would be needed in the notebook application for example). Is this correct? Where can I check this in detail? \n\nBut of course if I'm working interactively in the notebook app, I want to see inline SVG's and not generate PDFs separately at the same time.\n\nI guess I'm again misunderstanding nbconvert.\nThanks for the link to stepping through the notebook @minrk , definitely something to add in to IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160430",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160430",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwNDMw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:23:00Z",
    "updated_at": "2013-07-18T03:23:00Z",
    "author_association": "MEMBER",
    "body": "> I was under the impression that with the _repr_... methods, objects could have different representations for different purposes. So there could be one for the display in the notebook and a different one for LaTeX output (so that no PDF representation would be needed in the notebook application for example). Is this correct? Where can I check this in detail?\n\nSort of.  Objects can have different representations for use in different contexts, but **all of them are rendered at once**.  It is in the live notebook that these representations are computed and then all of them stored in the notebook document (A JSON structure).  Note that only one is _displayed_ in the live notebook UI, but all are stored in the document.\n\nIn NbConvert, no code execution happens and thus no new representations are computed - only transformations of the input and output from what is already stored in this notebook document.\n\n> I guess I'm again misunderstanding nbconvert.\n\nI think the main point is that representations are computed at 'execution' time, which is distinct from 'nbconvert' time, which is given the static input and output of the notebook document.\n\nThat said, a script that 're-runs' the notebook can certainly be used to PDF-ify figures by executing the notebook again after enabling PDF output.   However, this is only feasible if re-running the notebook actually makes sense (e.g.. it doesn't depend on time-changing or otherwise unavailable data, for instance, or it takes a few days to execute).  But this would just be another 'execution' of a notebook, and still done prior to using nbconvert to translate to other formats.\n\nFurther, it is not out of the question that a 'Transformer', in the current terminology, could be used to actually re-execute the entire notebook and generate new output.  This might be a misuse of nbconvert, I'm not sure. Nonetheless, it would not be the standard behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160564",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160564",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwNTY0",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:27:41Z",
    "updated_at": "2013-07-18T03:27:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, let me step back a bit.\nI've been looking at the SVG / PDF business.\n\nApparently, inkscape is the correct solution for the conversion. I now even have a sneaking feeling that perhaps matplotlib uses this somehow, since the output seems to be identical. (I will confirm this tomorrow.)\n\nThere is in fact a package 'svg' on CTAN (the TeX package repository), but I cannot get it to work at the moment.\nIn any case, it's just a question of running \n\ninkscape myfig.svg --export-pdf=myfig.pdf\n\non all the SVG's and problem solved! \nI guess this is easy (\"trivial\", for those for whom it is trivial :P) to put into the transformation technology.\n\nI think I was just remembering that a few years ago SVG support was very bad, so that PDF was the correct vectorized solution. Apparently now SVG is just as good?\n\nTo summarize: SVG is the way to go!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160728",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwNzI4",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:35:40Z",
    "updated_at": "2013-07-18T03:35:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "By the way, why is it not possible to stretch (with the mouse) SVG figures in the Notebook app? It seems that they should be ideally suited for this treatment, being vector format (unlike PNGs, for which it _is_ possible, but which look terrible in the process)? Could this be fixed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160746",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160746",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwNzQ2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:36:38Z",
    "updated_at": "2013-07-18T03:36:38Z",
    "author_association": "MEMBER",
    "body": "It probably can be fixed - ironically it's easy to just make a plain image resizable with a single call than it is an SVG.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160913",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160913",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwOTEz",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:44:18Z",
    "updated_at": "2013-07-18T03:44:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please give me a pointer to the right place in the code and I'll have a look...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160949",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwOTQ5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:46:01Z",
    "updated_at": "2013-07-18T03:46:01Z",
    "author_association": "MEMBER",
    "body": "For resizable SVG?  I would first look up a general solution for how to add resize handles on SVGs in a page, then the place to add it in the code would be [here](https://github.com/ipython/ipython/blob/master/IPython/html/static/notebook/js/outputarea.js#L471).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21160951",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21160951",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21160951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYwOTUx",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T03:46:09Z",
    "updated_at": "2013-07-18T03:46:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "The sphinx_howto format also fails to process the SVGs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21165402",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21165402",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21165402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY1NDAy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T06:41:21Z",
    "updated_at": "2013-07-18T06:41:21Z",
    "author_association": "MEMBER",
    "body": "> Could there be some kind of %%header magic, which could import an external header file for all of the extra \\usepackage stuff one could need in the latex converter? I presume other converters may also need similar header boilerplate.\n\nYou got `raw` cells that should be unchanged in the latex exporter.\n\n> That said, I think a Transformer could be used by nbconvert to include re-execution as a part of the export process, ignoring the output saved in the document.\n\nWell this go into the ipynb -> ipynb conversion process. it is meaningfull to me. you could even have a \"template\" notebook and nbconvert could spit derivatives of it.\n\n> There is in fact a package 'svg' on CTAN (the TeX package repository), but I cannot get it to work at the moment.\n> In any case, it's just a question of running\n\nI had it to work (if it's the one I think of). It's ... complex and awesome. You can typeset the text of the svg **by LaTeX** at compile time. which mean the `.tex`have access to what is inside the svg and vice-versa. cross references environment.... Problem is it is a PAIN to put the text at the right place as Matplotlib (for example) do not know the exact size of the font that will be use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21165764",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21165764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21165764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY1NzY0",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-18T06:51:31Z",
    "updated_at": "2013-07-18T06:51:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "The issue with the %%header magic was to get some includes which are only allowed in the preamble of the tex file. `raw` cells, however, are placed inside the tex body and this won't work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21237053",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21237053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21237053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjM3MDUz",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T08:13:00Z",
    "updated_at": "2013-07-19T08:13:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Everything seems to already be setup in the code for the LaTeX exporter to convert SVGs to PDFs using Inkscape.\nBut nonetheless it does not work...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21238660",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21238660",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21238660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjM4NjYw",
    "user": {
      "login": "jakobgager",
      "id": 1677740,
      "node_id": "MDQ6VXNlcjE2Nzc3NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1677740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakobgager",
      "html_url": "https://github.com/jakobgager",
      "followers_url": "https://api.github.com/users/jakobgager/followers",
      "following_url": "https://api.github.com/users/jakobgager/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakobgager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakobgager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakobgager/subscriptions",
      "organizations_url": "https://api.github.com/users/jakobgager/orgs",
      "repos_url": "https://api.github.com/users/jakobgager/repos",
      "events_url": "https://api.github.com/users/jakobgager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakobgager/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T08:54:24Z",
    "updated_at": "2013-07-19T08:54:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah I can confirm this problem. Can you open a separate issue for this one? I want to keep the present more related to non-blocking problems :smile: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21245856",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21245856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21245856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjQ1ODU2",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T12:00:52Z",
    "updated_at": "2013-07-19T12:00:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done: #3693\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21284763",
    "html_url": "https://github.com/ipython/ipython/issues/3603#issuecomment-21284763",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3603",
    "id": 21284763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjg0NzYz",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T00:21:27Z",
    "updated_at": "2013-07-20T00:21:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some important `nbconvert` issues I have opened:\n#3701, #3702, #3703 \n"
  }
]
