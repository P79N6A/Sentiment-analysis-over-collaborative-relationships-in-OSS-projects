[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2435454",
    "html_url": "https://github.com/ipython/ipython/issues/888#issuecomment-2435454",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/888",
    "id": 2435454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzU0NTQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-17T22:06:26Z",
    "updated_at": "2011-10-17T22:06:26Z",
    "author_association": "MEMBER",
    "body": "I like your idea to have the ReST preview open a new tab/window and it should be a deliberate action on the part of the user.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2809462",
    "html_url": "https://github.com/ipython/ipython/issues/888#issuecomment-2809462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/888",
    "id": 2809462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDk0NjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-20T23:51:52Z",
    "updated_at": "2011-11-20T23:51:52Z",
    "author_association": "MEMBER",
    "body": "Here are my notes about reST support from a recent email discussion (it may repeat some of Min's points, I'm just pasting my whole email for reference).  None of this is cast in stone, just putting it out here so we have material for the discussion:\n1. There's one nasty problem with reST in that its specification of heading levels is ambiguous and resolved at runtime by looking at the whole document (i.e., `====` doesn't uniquely specify the heading level until the other underline types have been looked at).  To solve this problem, we're going to take a slightly different approach: users\n   will NOT type headings directly into text cells, but instead we will have a 'heading' type of cell, with a level (say 0-9).  These cells will determine the document structure, letting us:\n- produce output reST that is consistent in its use of heading underlines.\n- offer (eventually) document navigation, level folding and structural operations such as moving, promoting and demoting entire sections.\n1. Once structural cells are in place, we'll also have reST text cells (in addition to the current markdown ones).  These can initially be left completely unrendered, though eventually it would be nice to be able to render them at least cosmetically (i.e. only resolving cell-local markup and links but not trying to render the whole document).\n2. There would be a button/menu action to force a server-side render of all the reST in a notebook.  This would take longer, but would give fully working cross-references, etc.\n3. Given a .ipynb, it should be possible to export it to reST via the command line.  This would make it possible to have for example a make rule like:\n\n```\n%.rst : %.ipynb\n       ipython notebook export-rest $(NBFLAGS) $<\n```\n\nYou could then imagine having a complex sphinx document (even a book) where certain parts are hand-written reST files and other sections/chapters are actually written as notebooks.  The flags would allow you to control whether the notebook is only exported from the file as-is, or actually re-executed before export (allowing for a much more sophisticated form of tutorial/documentation creation for libraries, as well as a doctest-like capability of a higher degree).\n\nThe reST export will require a fair amount of machinery: currently in the notebook all data is inlined (figures, etc) and that will have to go somewhere.  I think a sensible solution is to add a directory called <notebook>_files/ (like browsers do when they download a full html page), where figures and other files get disentangled and saved. The export will then create `.. image::` references to these.\n1. I think our focus should be on high-quality Sphinx export, and we leave latex/pdf/html generation in sphinx's hands.  We may need to produce a few sphinx extensions (such as improving Ondej Certik's dollarmath one for writing TeX like this: $x+1+\\gamma$), but that's it.  Beyond that, shpinx does a good job and we should use it.\n\n> We talked about Sphinx at EuroSciPy. What are your plans regarding \n> back-and-forth conversion between json and restructuredtext ?\n\nI don't think we should focus too much on lossless roundtrip conversion: ensuring perfect roundtripping is devilishly hard and making such a promise to users is a hard to maintain contract. However, we could certainly implement reST _import_ so that from a reST document, code blocks are read in as cells.  That would make it possible for someone to migrate a reST document into a notebook. Basically this would mean writing a docutils writer that outputs ipynb files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3747752",
    "html_url": "https://github.com/ipython/ipython/issues/888#issuecomment-3747752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/888",
    "id": 3747752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc3NTI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T20:53:08Z",
    "updated_at": "2012-01-31T20:53:08Z",
    "author_association": "MEMBER",
    "body": "Implemented as Plaintext cells in master.\n"
  }
]
