[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21786569",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-21786569",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 21786569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzg2NTY5",
    "user": {
      "login": "niallrobinson",
      "id": 2979205,
      "node_id": "MDQ6VXNlcjI5NzkyMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2979205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niallrobinson",
      "html_url": "https://github.com/niallrobinson",
      "followers_url": "https://api.github.com/users/niallrobinson/followers",
      "following_url": "https://api.github.com/users/niallrobinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/niallrobinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niallrobinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niallrobinson/subscriptions",
      "organizations_url": "https://api.github.com/users/niallrobinson/orgs",
      "repos_url": "https://api.github.com/users/niallrobinson/repos",
      "events_url": "https://api.github.com/users/niallrobinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niallrobinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T12:15:37Z",
    "updated_at": "2013-07-30T12:15:37Z",
    "author_association": "NONE",
    "body": "Has there been any more progress on this issue? For what its worth I think it would be a killer feature that would attract everyone where I work to use IPython, especially if it was integrated into the notebook\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23185981",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-23185981",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 23185981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTg1OTgx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-23T19:30:20Z",
    "updated_at": "2013-08-23T19:30:20Z",
    "author_association": "MEMBER",
    "body": "Mike McKerns, the author of Dill, says he has fixed some bugs so that `save_session()` works from inside IPython:\n\nhttp://trac.mystic.cacr.caltech.edu/project/pathos/changeset/511\n\nhttp://mail.scipy.org/pipermail/ipython-dev/2013-August/012204.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24034224",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24034224",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24034224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDM0MjI0",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T01:18:35Z",
    "updated_at": "2013-09-09T01:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like there's going to be at least one more issue...\n\nThis code (inside of interactiveshell.InteractiveShell's prepare_user_module):\n\n```\n        if user_module is None and user_ns is not None:\n            user_ns.setdefault(\"__name__\", \"__main__\")\n            class DummyMod(object):\n                \"A dummy module used for IPython's interactive namespace.\"\n                pass\n            user_module = DummyMod()\n            user_module.__dict__ = user_ns\n```\n\nin the case where user_module == None, but user_ns != None, you are returned\na user_module where the instance is <IPython.core.interactiveshell.DummyMod at 0x165d310>...\nwhich is bogus because DummyMod is defined inside of the above method in the InteractiveShell class\nand is not located at the namespace where the module code places it.\n\nThis will make pickling fail for these objects unless: (1) you define DummyMod at the namespace the code assigns the DummyMod object to, or (2) don't monkey with the namespaces.\n\nAnyone want to tell me if it's important to have DummyMod defined inside the method of the class and not where it shows up in the namespace? (e.g. does faking the namespace trigger something important for you in other parts of the code?).  Defining DummyMod at IPython.core.interactiveshell.DummyMod would likely clear up pickling issues for whatever ipython is doing for interactively defined user modules here.\n\nI don't have a test case here, just noticed it in the code, created the DummyMod object, and noted that it fails to pickle.\n\n```\ns = InteractiveShell()\nm = s.prepare_user_module(None, {})\ndill.dumps(m0)\n```\n\nYou get a:\n\n```\nPicklingError: Can't pickle <class 'IPython.core.interactiveshell.DummyMod'>: it's not found as IPython.core.interactiveshell.DummyMod\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24035868",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24035868",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24035868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDM1ODY4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T02:36:41Z",
    "updated_at": "2013-09-09T02:36:41Z",
    "author_association": "MEMBER",
    "body": "@mmckerns : I wrote that, and I don't think there was any special reason to define `DummyMod` within the function, it was just convenience. It's not a code path we test very much, because when you start IPython normally, both `user_module` and `user_ns` are passed in as `None`, in which case, IIRC, we create an instance of the regular `ModuleType`, and use its `__dict__` as `user_ns`. But it is an important case, because a lot of projects that offer an IPython shell to control other code (e.g. Django shell) will pass in `user_ns`.\n\nDo you want to do a pull request to move it up to the module level? And double check that there are no obvious ill effects if you pass `user_ns` in - you can call `IPython.start_ipython(user_ns={'a':123})`. Thanks for taking the time to look into this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24065234",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24065234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24065234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDY1MjM0",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T11:26:19Z",
    "updated_at": "2013-09-09T11:26:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver: Yeah, I'll see if I can alleviates the issue, and if I can and doesn't cause any new one I can see, I'll do a pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24080703",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24080703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24080703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDgwNzAz",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T14:32:59Z",
    "updated_at": "2013-09-09T14:32:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver: can you tell me a little bit more about the reason for this DummyMod?  It seems that it's a substitute for `__main__` as a namespace for objects built in an interactive session.  Why?  Do you save this DummyMod instance anywhere when you shut down an ipython session?  It doesn't look like it on cursory exam.  In 0.13, ipython dumped all interactively built code into `__main__`... and dill can pickle everything in the session built in `__main__` pretty easily... but if it's being masked in DummyMod... I'll have to know more about what the intent of this guy is.\n\nWhat I see happening is that if I use 0.13, I can pickle anything built interactively, and save the entire session in a .pkl file.  Then if I start 1.0, and load the .pkl file, I get everything from my saved session.  However, if I try to save the session in 1.0, I just get the DummyMod stub as the only thing I'm saving in the .pkl file.  A fix would be that if you are saving a session, then dump DummyMod's `__dict__` into `__main__`'s.  However, that either means that I have to add it to dill and it's getting too much of injecting a ipython workaround into dill for my comfort... or we'd have to overload dill's dump_session with a ipython specific ipython.dump_session.\n\nThoughts here before I dig into this deeper?  I'd like to learn as little of ipython's internals as possible in making this work. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24091075",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24091075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24091075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDkxMDc1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T16:18:16Z",
    "updated_at": "2013-09-09T16:18:31Z",
    "author_association": "MEMBER",
    "body": "For others reading this, I've tried to explain the rationale for DummyMod in @mmckerns PR #4186.\n\nI'm puzzled about the difference between 0.13 and 1.0 - I don't think we changed any of this code since 0.12.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24093831",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24093831",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24093831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDkzODMx",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T16:47:05Z",
    "updated_at": "2013-09-09T16:47:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I get the three bullets you present in PR #4186 ... that's just what the encapsulating method does.\nWhat I mean is why use DummyMod for the main ipython namespace?  That seems to be what's going on.\n\nI'll have to look into it, but on quick exam it looks like in 0.13 ipython's `__main__` is simply the python interpreter's `__main__`; while in 1.0, ipython's `__main__` is actually created with DummyMod.\n\nI didn't dig to far, but it seems like the `init_create_namespaces` in core.interactiveshell.InteractiveShell might be getting called with user_ns != None by default... and that would put you in the case that the default interactive shell would be a DummyMod... which you seem to be saying is supposed to be a corner case.\n\nMaybe what I suggest above is not actually the case... but is seem like it is. It wouldn't be that code around DummyMod was changed, it would be that there was a change in how the `__main__` namespace was initialized, I believe.\n\nIt just looks like InteractiveShell is doing some funny stuff with namespacing that I'll have to actually sit and think about... and I don't really like thinking too much (about how code works).  I'm assuming at this point it's best I just suck it up and go digging.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24094700",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24094700",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24094700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk0NzAw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T16:56:16Z",
    "updated_at": "2013-09-09T16:56:16Z",
    "author_association": "MEMBER",
    "body": "Hmm, you seem to be right. I'll dig into that, I'm not sure what has changed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24095827",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24095827",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24095827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk1ODI3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T17:08:29Z",
    "updated_at": "2013-09-09T17:08:29Z",
    "author_association": "MEMBER",
    "body": "It's an exciting result of our application/config system. I hate debugging this stuff...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24096012",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24096012",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24096012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk2MDEy",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T17:10:16Z",
    "updated_at": "2013-09-09T17:10:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I'm into that code as well... it's hard to follow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24096764",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24096764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24096764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk2NzY0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T17:18:38Z",
    "updated_at": "2013-09-09T17:18:38Z",
    "author_association": "MEMBER",
    "body": "See #4188. If the fix is that simple, we might be able to get it backported for a 1.x release.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24097426",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24097426",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24097426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk3NDI2",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T17:26:36Z",
    "updated_at": "2013-09-09T17:26:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "That looks like that would cause it.  I'll manually make the change, and see if that fixes the issue (#112) here too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24097696",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24097696",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24097696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk3Njk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T17:29:39Z",
    "updated_at": "2013-09-09T17:29:39Z",
    "author_association": "MEMBER",
    "body": "I've checked that that does avoid it using `DummyMod` in the default case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24097993",
    "html_url": "https://github.com/ipython/ipython/issues/112#issuecomment-24097993",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/112",
    "id": 24097993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk3OTkz",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-09T17:33:10Z",
    "updated_at": "2013-09-09T17:33:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome.  Just tried it.  Your change in #4188 also restores the ability to use dill.dump_session to save the entire ipython session.\n"
  }
]
