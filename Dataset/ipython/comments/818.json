[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2170798",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2170798",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2170798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzA3OTg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-22T18:46:05Z",
    "updated_at": "2011-09-22T18:46:05Z",
    "author_association": "MEMBER",
    "body": "It might make sense to just encode unicode filenames with `sys.getfilesystemencoding()` before passing to execfile.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2213162",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2213162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2213162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTMxNjI=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-27T16:49:02Z",
    "updated_at": "2011-09-27T16:49:02Z",
    "author_association": "MEMBER",
    "body": "Min RK skrev 2011-09-22 20:46:\n\n> It might make sense to just encode unicode filenames with `sys.getfilesystemencoding()` before passing to execfile.\n> \n> That would work for my usecase but not for a more general case where \n> there is a mixture of say latin and greek letters in the files system.\n\n/JÃ¶rgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2213472",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2213472",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2213472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTM0NzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-27T17:16:54Z",
    "updated_at": "2011-09-27T17:16:54Z",
    "author_association": "MEMBER",
    "body": "Why would a mixture of Greek and Latin make a difference?  I can (and do) have Greek, Latin, and Japanese filenames on my system, all of which are encoded with the filesystem encoding, and work just fine with execfile.  \n\nDoes Windows have different encodings associated on a per-file basis?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2226477",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2226477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2226477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjY0Nzc=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-28T15:40:46Z",
    "updated_at": "2011-09-28T15:40:46Z",
    "author_association": "MEMBER",
    "body": "Min RK skrev 2011-09-27 19:16:\n\n> Why would a mixture of Greek and Latin make a difference?  I can (and do) have Greek, Latin, and Japanese filenames on my system, all of which are encoded with the filesystem encoding, and work just fine with execfile.\n> \n> Does Windows have different encodings associated on a per-file basis?\n> \n> I think the actual fileencoding is a multibyte encoding.  But (at least \n> on my computer) using \"mbcs\" (which is the default filesystem encoding) \n> results in an 8-bit string where several of the greek letters are \n> encoded as ? which clearly won't work since that is an illegal character \n> for a filename.\n\nExample:\n\n   In [1]: import sys,glob\n\n   In [2]: a=glob.glob(u\"*\")\n\n   In [3]: a\n   Out[3]:\n   [u'abg',\n    u'crlf.py',\n    u'data.txt',\n    u'getcwdu',\n    u'runbug.py',\n    u'script\\xe5\\xe4\\xf6.py',\n    u'\\xe5\\xe4\\xf6',\n    u'\\u03b1\\u03b2\\u03b3']\n\n   In [4]: sys.getfilesystemencoding()\n   Out[4]: 'mbcs'\n\n   In [5]: a[-1].encode(sys.getfilesystemencoding())\n   Out[5]: 'a\\xdf?'\n\nThe last string in a is a string containing alpha, beta, gamma\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2436840",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2436840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2436840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzY4NDA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T00:57:52Z",
    "updated_at": "2011-10-18T00:57:52Z",
    "author_association": "MEMBER",
    "body": "@jstenar, what's your take on this then moving forward?  If the approach suggested by @minrk isnt' enough on win32, then we may need to go with yours.  Keep in mind we have a function called `safe_execfile()` that we make all our `execfile` calls through.  That would be the right point to put more layers of safety in.\n\nAnd if the more manual approach you describe is truly necessary on win32, we can just do it conditionally: use the simpler method Min suggested in general, but specialize to you manual method on win32.\n\nIf that sounds reasonable, feel free to whip up a PR for it.  The window before 0.12 is closing though... I'd like to try to close as many of the open PRs as possible and start freezing for beta testing and stabilization.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2446414",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2446414",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2446414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY0MTQ=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T19:47:54Z",
    "updated_at": "2011-10-18T19:47:54Z",
    "author_association": "MEMBER",
    "body": "I created PR #896\n\nI think it makes more sense to put it in the py3compat module because otherwise I will have to put py3 related logic in safe_execfile as well which seems awkward to me. \n\nDo you have any ideas on how to test this? safe_execfile is supposed to swallow all exceptions so how do I check for my error case?\n\n/JÃ¶rgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2446542",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2446542",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2446542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY1NDI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T19:59:19Z",
    "updated_at": "2011-10-18T19:59:19Z",
    "author_association": "MEMBER",
    "body": "On Tue, Oct 18, 2011 at 12:47 PM, JÃ¶rgen Stenarson\nreply@reply.github.com\nwrote:\n\n> I think it makes more sense to put it in the py3compat module because otherwise I will have to put py3 related logic in safe_execfile as well which seems awkward to me.\n\nMakes sense.\n\n> Do you have any ideas on how to test this? safe_execfile is supposed to swallow all exceptions so how do I check for my error case?\n\nYou could add a kwarg `raise_exceptions` to `safe_execfile`,\ndefaulting to False but meant for this kind of validation scenario...\nThe default behavior would remain unchanged but it would allow us to\nsee the right exceptions in the test suite by explicitly requesting\nthem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2447542",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2447542",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2447542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc1NDI=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-18T20:46:49Z",
    "updated_at": "2011-10-18T20:46:49Z",
    "author_association": "MEMBER",
    "body": "Fernando Perez skrev 2011-10-18 21:59:\n\n> On Tue, Oct 18, 2011 at 12:47 PM, JÃ¶rgen Stenarson\n> reply@reply.github.com\n> wrote:\n> \n> >  I think it makes more sense to put it in the py3compat module because otherwise I will have to put py3 related logic in safe_execfile as well which seems awkward to me.\n> \n> Makes sense.\n> \n> >  Do you have any ideas on how to test this? safe_execfile is supposed to swallow all exceptions so how do I check for my error case?\n> \n> You could add a kwarg `raise_exceptions` to `safe_execfile`,\n> defaulting to False but meant for this kind of validation scenario...\n> The default behavior would remain unchanged but it would allow us to\n> see the right exceptions in the test suite by explicitly requesting\n> them.\n> \n> I have added a test now.\n\n/JÃ¶rgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2462695",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2462695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2462695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjI2OTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T23:16:53Z",
    "updated_at": "2011-10-19T23:16:53Z",
    "author_association": "MEMBER",
    "body": "@jstenar: The PR relating to this is merged now - can we close this issue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2473016",
    "html_url": "https://github.com/ipython/ipython/issues/818#issuecomment-2473016",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/818",
    "id": 2473016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzMwMTY=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-20T19:12:31Z",
    "updated_at": "2011-10-20T19:12:31Z",
    "author_association": "MEMBER",
    "body": "Thomas skrev 2011-10-20 01:17:\n\n> @jstenar: The PR relating to this is merged now - can we close this issue?\n> \n> Yes it looks fine\n\n/JÃ¶rgen\n"
  }
]
