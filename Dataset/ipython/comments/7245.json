[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67180627",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67180627",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67180627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTgwNjI3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T15:52:58Z",
    "updated_at": "2014-12-16T15:52:58Z",
    "author_association": "MEMBER",
    "body": "So, to continue the discussion on StackOverflow, you can create a module that have all the logic you want but in order to get access to the currently running IPython instance you should define specific function and load the module with `%load_ext modulename` as explained [here](http://ipython.org/ipython-doc/dev/config/extensions/)\n\nI havent really dived into the completer itself, but as far as I can tell, you can register a function that will get current token and is responsible from returning a list of completion.\n\ni guess you will need to do a class with a `__call__` method in your case and share some global state with Iris. Or agressively inspect objects. \n\nThere are upgrade proposal  to current completer state [here](https://github.com/ipython/ipython/wiki/IPEP-11%3A-Tab-Completion-System-Refactor) thigs might be a bit out of date, but it's a wiki.\n\nI suppose you could also try to integrate libray like [Jedi](https://github.com/davidhalter/jedi), though I haven't looked at the API.\n\nLet us know if you want more precisions on some points. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67194205",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67194205",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67194205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTk0MjA1",
    "user": {
      "login": "niallrobinson",
      "id": 2979205,
      "node_id": "MDQ6VXNlcjI5NzkyMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2979205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niallrobinson",
      "html_url": "https://github.com/niallrobinson",
      "followers_url": "https://api.github.com/users/niallrobinson/followers",
      "following_url": "https://api.github.com/users/niallrobinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/niallrobinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niallrobinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niallrobinson/subscriptions",
      "organizations_url": "https://api.github.com/users/niallrobinson/orgs",
      "repos_url": "https://api.github.com/users/niallrobinson/repos",
      "events_url": "https://api.github.com/users/niallrobinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niallrobinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T17:08:56Z",
    "updated_at": "2014-12-16T17:08:56Z",
    "author_association": "NONE",
    "body": "Thanks - I need to have a careful read and a think - this is quite advanced for an amature such as me!\n\nI'll let you know if I make any progress.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67199587",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67199587",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67199587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTk5NTg3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T17:42:03Z",
    "updated_at": "2014-12-16T17:42:03Z",
    "author_association": "MEMBER",
    "body": "You can customise attribute completion `obj.<TAB>` by defining a `__dir__(self)` method on the object. I don't think there's currently a good way to extend completions with things like email addresses, but I do want to rebuild the completion code when I get a chance, so I'll try to keep extensibility in mind then.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67299578",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67299578",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67299578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjk5NTc4",
    "user": {
      "login": "niallrobinson",
      "id": 2979205,
      "node_id": "MDQ6VXNlcjI5NzkyMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2979205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niallrobinson",
      "html_url": "https://github.com/niallrobinson",
      "followers_url": "https://api.github.com/users/niallrobinson/followers",
      "following_url": "https://api.github.com/users/niallrobinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/niallrobinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niallrobinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niallrobinson/subscriptions",
      "organizations_url": "https://api.github.com/users/niallrobinson/orgs",
      "repos_url": "https://api.github.com/users/niallrobinson/repos",
      "events_url": "https://api.github.com/users/niallrobinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niallrobinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T09:52:14Z",
    "updated_at": "2014-12-17T09:52:14Z",
    "author_association": "NONE",
    "body": "Thanks @takluyver, that looks like a nice way of doing things.\n\nTo be clear, the email  addresses things was from someone elses toy example on the internet that I was playing with. What I'm trying to acheive is this: The Iris module has an obejct that encapsulates other objects. The way you access those encapsulated objects is by passing a string (the \"name\") to a method of the encapsulating object. These names are often long and complicated - so this is specifically where I would like the autocompete to work.\n\nIdeally you would get different suggestions for different instances! I guess I would need to overwrite the `__dir__` in each instance as things are encasulated/removed...not done that before but it sounds do-able.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67299884",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67299884",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67299884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjk5ODg0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T09:54:47Z",
    "updated_at": "2014-12-17T09:54:47Z",
    "author_association": "MEMBER",
    "body": "You might want to do `%config IPCompleter.greedy=True`  the completer will inspect object more agressively but might trigger side-effect. Typically with greedy you can do : \n\n```\n\"FooBarr\".lower().<tab>\n```\n\nand it will work. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67304750",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67304750",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67304750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzA0NzUw",
    "user": {
      "login": "niallrobinson",
      "id": 2979205,
      "node_id": "MDQ6VXNlcjI5NzkyMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2979205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niallrobinson",
      "html_url": "https://github.com/niallrobinson",
      "followers_url": "https://api.github.com/users/niallrobinson/followers",
      "following_url": "https://api.github.com/users/niallrobinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/niallrobinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niallrobinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niallrobinson/subscriptions",
      "organizations_url": "https://api.github.com/users/niallrobinson/orgs",
      "repos_url": "https://api.github.com/users/niallrobinson/repos",
      "events_url": "https://api.github.com/users/niallrobinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niallrobinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T10:38:29Z",
    "updated_at": "2014-12-17T10:38:29Z",
    "author_association": "NONE",
    "body": "Also, maybe I'm being naive, but I thought there might be a way to introduce functionality that would also work with the Python 2.7 autocomplete - I take it the above is only a solution to IPython...(obviously that does seem appropriate, given where I'm posting!)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67327903",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67327903",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67327903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzI3OTAz",
    "user": {
      "login": "niallrobinson",
      "id": 2979205,
      "node_id": "MDQ6VXNlcjI5NzkyMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2979205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niallrobinson",
      "html_url": "https://github.com/niallrobinson",
      "followers_url": "https://api.github.com/users/niallrobinson/followers",
      "following_url": "https://api.github.com/users/niallrobinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/niallrobinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niallrobinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niallrobinson/subscriptions",
      "organizations_url": "https://api.github.com/users/niallrobinson/orgs",
      "repos_url": "https://api.github.com/users/niallrobinson/repos",
      "events_url": "https://api.github.com/users/niallrobinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niallrobinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T14:19:53Z",
    "updated_at": "2014-12-17T14:20:51Z",
    "author_association": "NONE",
    "body": "@takluyver I've got the `__dir__` approach to work for a class - nice and simple. I'm trying to get it to make suggestions for class method though. Is there anyway to do that? Or does this only work for suggestions for a class, rather than a method? Or to make the methods inherit suggestions from its classes `__dir__` perhaps?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67364229",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67364229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67364229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzY0MjI5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T18:01:04Z",
    "updated_at": "2014-12-17T18:01:04Z",
    "author_association": "MEMBER",
    "body": "The completion you enable with rlcomplete in the plain Python shell is fairly basic, and I'm not sure how much you can customise it.\n\n`__dir__` works for _attributes_, i.e. completing on `name.<TAB>`. It won't be used for calls `name(<TAB>` or item access `name[<TAB>`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67459914",
    "html_url": "https://github.com/ipython/ipython/issues/7245#issuecomment-67459914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7245",
    "id": 67459914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDU5OTE0",
    "user": {
      "login": "niallrobinson",
      "id": 2979205,
      "node_id": "MDQ6VXNlcjI5NzkyMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2979205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niallrobinson",
      "html_url": "https://github.com/niallrobinson",
      "followers_url": "https://api.github.com/users/niallrobinson/followers",
      "following_url": "https://api.github.com/users/niallrobinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/niallrobinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niallrobinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niallrobinson/subscriptions",
      "organizations_url": "https://api.github.com/users/niallrobinson/orgs",
      "repos_url": "https://api.github.com/users/niallrobinson/repos",
      "events_url": "https://api.github.com/users/niallrobinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niallrobinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T09:16:45Z",
    "updated_at": "2014-12-18T09:16:45Z",
    "author_association": "NONE",
    "body": "OK - thanks for you help guys. It looks like it might be a little difficult to do precicely what I was trying, but I'll keep hacking about and let you know if I get anywhere.\n\nClosing for now\n"
  }
]
