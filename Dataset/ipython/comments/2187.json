[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7163899",
    "html_url": "https://github.com/ipython/ipython/issues/2187#issuecomment-7163899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2187",
    "id": 7163899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjM4OTk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-22T17:51:42Z",
    "updated_at": "2012-07-22T17:53:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well that's awkward.\n\nThe error, of course, comes in writing out the call specification for `pandas.core.frame.DataFrame.reindex` which is:\n\n```\n    def reindex(self, index=None, columns=None, method=None, level=None,\n                fill_value=np.nan, limit=None, copy=True):\n```\n\nApparently there is no NaN or +/-Inf in the JSON spec.  There some stack overflow questions about this, like [Python: sending NaN in JSON](http://stackoverflow.com/questions/6601812/sending-nan-in-json).\n\nI'm not sure what an appropriate resolution for this issue is yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7164117",
    "html_url": "https://github.com/ipython/ipython/issues/2187#issuecomment-7164117",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2187",
    "id": 7164117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjQxMTc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-22T18:19:45Z",
    "updated_at": "2012-07-22T18:19:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, reading the stackoverflow it looks like browsers support it so maybe it is fine.\nBut I guess sending `repr()` should do the job, as it is only used for UI (not used for something like remote procedure call).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7189782",
    "html_url": "https://github.com/ipython/ipython/issues/2187#issuecomment-7189782",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2187",
    "id": 7189782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODk3ODI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-23T20:17:54Z",
    "updated_at": "2012-07-23T20:17:54Z",
    "author_association": "MEMBER",
    "body": "stdlib json has an `allow_nan` flag, so we can set allow_nan=False to catch this (but not fix it).\n\nWe already have a json_clean method (IPython.utils.jsonutil), which is where we handle non-jsonable objects, so that's where the fix should be.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7297693",
    "html_url": "https://github.com/ipython/ipython/issues/2187#issuecomment-7297693",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2187",
    "id": 7297693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTc2OTM=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-27T05:08:25Z",
    "updated_at": "2012-07-27T05:08:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed by #2194.\n"
  }
]
