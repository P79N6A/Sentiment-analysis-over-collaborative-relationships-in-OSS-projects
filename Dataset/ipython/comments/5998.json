[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46274265",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46274265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46274265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjc0MjY1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T07:10:45Z",
    "updated_at": "2014-06-17T07:10:45Z",
    "author_association": "MEMBER",
    "body": "Sounds like a dill bug to me. Ping @mmckerns for any insight on any relevant changes in Python 3.4. What dill version?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46613671",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46613671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46613671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjEzNjcx",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T20:39:56Z",
    "updated_at": "2014-06-19T20:42:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk: thanks for thinking of me for obscure pickling errors.\n\nThere are no changes that I've seen that impact python 3.4 vs 3.3.\nHowever, I can tell by the line numbers above that it's not the bleeding edge version,\nbut it might be the most current stable version released 6/4, or it might be the version prior to that.  \n\nOnly recent bugs/fixes were a fix of stdin/stdout handling on 5/28 and one other bug I introduced to the version prior (0.2), released 5/17… that was patched 5/19.  Note both of the bugs (5/28) might be relevant… pipe --> StringIO, and the other (5/17) caused a conflict when import dill happened iff pickle was imported first.  Both are fixed in the most recent version of dill (0.2.1) released 6/4.\n\nAside from that, I could test most recent dill and ipython.parallel to see if it works, but I expect that you can also try that.\n\nI'm not seeing an error for that function using my async_map ('Pool.amap') functions with most recent dill and python3.4.  I just ran it from a file, not the interpreter.  Pickling works different for different ways the thing get run… so any help on how it was run would be good too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46618969",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46618969",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46618969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjE4OTY5",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T21:26:35Z",
    "updated_at": "2014-06-19T21:27:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "My not working dill version is 0.2.1, as installed from pip three days ago.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46622631",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46622631",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46622631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjIyNjMx",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T22:00:38Z",
    "updated_at": "2014-06-19T22:00:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not having issues with my own map functions and with `dill` in 3.4.   So can you send:\n1) the version of `ipython` you are using,\n2) and also exactly what you do to generate the error? \n\nIt seems it might be a `dill` working in `ipython` issue… so since I'm a bit of an `ipython` novice, can you post the code you ran exactly so I can repeat your code and see if I get the error?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46625835",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46625835",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46625835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjI1ODM1",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T22:36:16Z",
    "updated_at": "2014-06-19T22:36:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "From zero:\n\n```\nconda create -n py34 python=3.4\nsource activate py34\n#Version 2.1\nconda install ipython-notebook\nconda install pip\n#Version 0.2.1\npip install dill\nipcluster start -n4\n```\n\nAnd then I get the error above.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46634118",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46634118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46634118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM0MTE4",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T00:42:12Z",
    "updated_at": "2014-06-20T00:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Aha… so `ipcluster start -n4` that's what I was missing.  I see the error now, after `apply_sync` is called. I can confirm that it if I type what you did in the first entry, that I get the same error in 3.4, even if I'm using the bleeding edge version of `dill`.  However not when using python 3.3.  In both cases I'm using the latest macports `ipython`\n\n```\nIn [1]: from IPython import parallel\nIn [2]: p = parallel.Client()\nIn [3]: p[:].use_dill()\nOut[3]: <AsyncResult: use_dill>\nIn [4]: def g(a,c):\n   ...:     return a*c\n   ...: \nIn [5]: p[:].apply_sync(g,2,4)\n[0:apply]: \n---------------------------------------------------------------------------\nUnpicklingError\n```\n\nI'll look into this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46635449",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46635449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46635449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM1NDQ5",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T01:08:40Z",
    "updated_at": "2014-06-20T01:08:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, this is a new function in `pickle` in python3.4.\n\n```\ndef readline(self):\n    if self.current_frame:\n        data = self.current_frame.readline()\n        if not data:\n            self.current_frame = None\n            return self.file_readline()\n        if data[-1] != b'\\n':\n            raise UnpicklingError(\n                \"pickle exhausted before end of frame\")\n        return data\n    else:\n        return self.file_readline()\n```\n\nSince it's new in 3.4, and I haven't seen it throw an error before -- I don't know what it does yet. But I don't like it.\n\n`__init__` in `pickle._Unpickler` looked like this in `3.3`...\n\n```\nself.readline = file.readline\n```\n\nbut in 3.4 it's like this…\n\n```\n    self._unframer = _Unframer(self._file_read, self._file_readline)\n    self.read = self._unframer.read\n    self.readline = self._unframer.readline\n```\n\nwhere the `readline` method above is on the `_Unframer`.  and eventually it gets hooked up elsewhere:\n\n```\nself._file_readline = file.readline\n```\n\nOk, so yuck.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46635870",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46635870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46635870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM1ODcw",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T01:16:39Z",
    "updated_at": "2014-06-20T01:18:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk: does `IPython` deep down do any selection of the pickling protocol?\n\npython3.4 does some weird stuff, and `pickle` is still unstable… I found that it actually can pickle much much less stuff if you are using `HIGHEST_PROTOCOL`, which is `4`.   They added `DEFAULT_PROTOCOL`, which is new and is set to `3`… because  `4` is unstable.  So, `dill` uses `DEFAULT_PROTOCOL` unless you specify you want `HIGHEST_PROTOCOL`.  I don't ever do that, because  like I said `4` is unstable.\n\nFrom `dill`:\n\n```\ndef dump(obj, file, protocol=None, byref=False):\n    \"\"\"pickle an object to a file\"\"\"\n    if protocol is None: protocol = DEFAULT_PROTOCOL\n    pik = Pickler(file, protocol)\n```\n\nThen, magically, a lot of errors went away with pickling and python 3.4\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46636488",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46636488",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46636488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM2NDg4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T01:28:57Z",
    "updated_at": "2014-06-20T01:28:57Z",
    "author_association": "MEMBER",
    "body": "I think IPython does hardcode HIGHEST_PROTOCOL. We should probably change this to DEFAULT_PROTOCOL, when defined. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46638250",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46638250",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46638250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjM4MjUw",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T02:06:22Z",
    "updated_at": "2014-06-20T02:06:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, and I finally learned how to use `IPython.parallel`.  Yay me.  :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46713842",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46713842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46713842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzEzODQy",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T18:53:45Z",
    "updated_at": "2014-06-20T18:53:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk: I just looked into this to see if it'd be easy to generate a pull request for you, and I can confirm that's definitely the root cause.  Everywhere you have `dumps(obj, -1)`, you should replace with `dumps(obj)`, and anywhere `dumps(obj, protocol)` is used, make sure `protocol=DEFAULT_PROTOCOL` (see below).  Surprisingly, it's all throughout the code, so I punted.  There's hardly ever a reason to use the \"-1\" since it's the default everywhere save for python 3.4.  Gotta love the new python.  \n\n```\ntry:\n    from pickle import DEFAULT_PROTOCOL\nexcept ImportError:\n    DEFAULT_PROTOCOL = pickle.HIGHEST_PROTOCOL\n```\n\nYou'll probably have to do that too, since `DEFAULT_PROTOCOL` is \"new\" in 3.4.\nThis issue should be tedious, but easy to fix.  I'll pick it up it it's lingering too long.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46716340",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46716340",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46716340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzE2MzQw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T19:17:20Z",
    "updated_at": "2014-06-20T19:17:20Z",
    "author_association": "MEMBER",
    "body": "The default in Python 2 is protocol 0. Only in Python 3 is the default version 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46718379",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46718379",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46718379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzE4Mzc5",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T19:39:19Z",
    "updated_at": "2014-06-20T19:40:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver: Ah… that's riiiiiight.  It's `dill` that always uses `HIGHEST_PROTOCOL` by default, save for python 3.4.  Still, it's the same fix as above… but with also replacing `-1` by `DEFAULT_PROTOCOL`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46759317",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46759317",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46759317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU5MzE3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T17:15:09Z",
    "updated_at": "2014-06-21T17:15:09Z",
    "author_association": "MEMBER",
    "body": "Yeah, I think it should be DEFAULT_PROTOCOL if defined, and either 2 or 3 if it isn't.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46759332",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46759332",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46759332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU5MzMy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T17:15:40Z",
    "updated_at": "2014-06-21T17:15:40Z",
    "author_association": "MEMBER",
    "body": "or HIGHEST\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46761792",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46761792",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46761792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzYxNzky",
    "user": {
      "login": "mmckerns",
      "id": 321534,
      "node_id": "MDQ6VXNlcjMyMTUzNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/321534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmckerns",
      "html_url": "https://github.com/mmckerns",
      "followers_url": "https://api.github.com/users/mmckerns/followers",
      "following_url": "https://api.github.com/users/mmckerns/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmckerns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmckerns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmckerns/subscriptions",
      "organizations_url": "https://api.github.com/users/mmckerns/orgs",
      "repos_url": "https://api.github.com/users/mmckerns/repos",
      "events_url": "https://api.github.com/users/mmckerns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmckerns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T18:58:13Z",
    "updated_at": "2014-06-21T18:58:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk: `dill` uses DEFAULT_PROTOCOL if defined, and HIGHEST_PROTOCOL if not defined.  It's not the standard `pickle` choice, but it is the most common choice and a safe one to make -- unless one of the other applications specifically needs/uses a lower protocol.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46762364",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-46762364",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 46762364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzYyMzY0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-21T19:22:15Z",
    "updated_at": "2014-06-21T19:22:15Z",
    "author_association": "MEMBER",
    "body": "Makes sense. That should be what I've done in #6029.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/292015398",
    "html_url": "https://github.com/ipython/ipython/issues/5998#issuecomment-292015398",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5998",
    "id": 292015398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjAxNTM5OA==",
    "user": {
      "login": "demmfb",
      "id": 26942487,
      "node_id": "MDQ6VXNlcjI2OTQyNDg3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26942487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/demmfb",
      "html_url": "https://github.com/demmfb",
      "followers_url": "https://api.github.com/users/demmfb/followers",
      "following_url": "https://api.github.com/users/demmfb/following{/other_user}",
      "gists_url": "https://api.github.com/users/demmfb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/demmfb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/demmfb/subscriptions",
      "organizations_url": "https://api.github.com/users/demmfb/orgs",
      "repos_url": "https://api.github.com/users/demmfb/repos",
      "events_url": "https://api.github.com/users/demmfb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/demmfb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T22:26:45Z",
    "updated_at": "2017-04-05T22:27:24Z",
    "author_association": "NONE",
    "body": "Hey guys, I had been using dill for several months in python 2.7.6 and we recently switched to 3.5.2. dill.dump is working just fine but dill.load gives an error similar to what was discussed here. Nothing has changed in the data or the code and this is basically what I am doing: \r\n\r\ndataset_rand = [train_set,valid_set,test_set] \r\nwith open('dill_test.pkl', 'wb') as f:\r\n        dill.dump(dataset_rand, f)  \r\n...everything works fine until this point \r\ndataset='dill_test.pkl'\r\ndatasets = dill.load(open(dataset))\r\n\r\n...the error:\r\nTraceback (most recent call last):\r\n  File \"dill_test.py\", line 96, in <module>\r\n    test_load()\r\n  File \"dill_test.py\", line 90, in test_load\r\n    datasets = dill.load(open(dataset))\r\n  File \"/share/apps/Python-3.5.2/lib/python3.5/site-packages/dill/dill.py\", line 250, in load\r\n    obj = pik.load()\r\n  File \"/share/apps/Python-3.5.2/lib/python3.5/pickle.py\", line 1038, in load\r\n    assert isinstance(key, bytes_types)\r\nAssertionError\r\n\r\nAny ideas how to solve this? Thanks in advance!"
  }
]
