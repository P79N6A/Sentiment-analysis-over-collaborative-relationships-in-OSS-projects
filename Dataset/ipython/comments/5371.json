[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37887146",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-37887146",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 37887146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODg3MTQ2",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-18T00:18:39Z",
    "updated_at": "2014-03-18T00:18:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmnn, I believe the `.onload` hack was in there to prevent MathJax from trying to render cells before the page was loaded.  If the notebook cells are constructed dynamically after MathJax loads, they won't be rendered unless they fire MathJax render calls after they're constructed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37925342",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-37925342",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 37925342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTI1MzQy",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-18T12:08:14Z",
    "updated_at": "2014-03-18T12:08:14Z",
    "author_association": "MEMBER",
    "body": "The onload hack it is necessary... if you don't load MathJax at the end, and try to load some other js libraries too (ie. reveal.js), some math is not rendered OK.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37971694",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-37971694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 37971694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTcxNjk0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-18T18:41:07Z",
    "updated_at": "2014-03-18T18:41:07Z",
    "author_association": "MEMBER",
    "body": "It's not relevant to this PR, so I have removed the mathjax patch here. We can continue the discussion of that in #5375.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37973541",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-37973541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 37973541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTczNTQx",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-18T18:56:22Z",
    "updated_at": "2014-03-18T18:56:22Z",
    "author_association": "MEMBER",
    "body": "OK, for this one I am :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38220188",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38220188",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38220188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjIwMTg4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T20:57:39Z",
    "updated_at": "2014-03-20T20:57:39Z",
    "author_association": "MEMBER",
    "body": "Do we need to make s similar change to nbviewer and nbconvert to make sure equations there are handled the same way?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38220565",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38220565",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38220565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjIwNTY1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T21:01:08Z",
    "updated_at": "2014-03-20T21:01:08Z",
    "author_association": "MEMBER",
    "body": "I just did a test and nbconvert/nbviewer latex output will be centered by this PR. We will have to update the MathJax config/calling there as well to get this behavior with no CSS. We keep running into this issue: because we config/call MathJax in multiple places, it is easy for them to fall out of sync. Can we consolidate this logic into one place?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38221176",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38221176",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38221176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjIxMTc2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T21:07:07Z",
    "updated_at": "2014-03-20T21:07:07Z",
    "author_association": "MEMBER",
    "body": "Rather than having this call to typesetting save and reset state, what if we simply had each call to typesetting in our code base first make a call to `Hub.Config` to set its options. That would allow each call to not worry about managing state.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38223082",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38223082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38223082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjIzMDgy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T21:26:52Z",
    "updated_at": "2014-03-20T21:26:52Z",
    "author_association": "MEMBER",
    "body": "I don't know how expensive calling config is for ever render. It makes more sense to me to only call it when deviating from the norm, but we can do it every time if you prefer.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38226379",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38226379",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38226379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjI2Mzc5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T22:00:40Z",
    "updated_at": "2014-03-20T22:00:40Z",
    "author_association": "MEMBER",
    "body": "Here are the three places that we using MathJax to typeset:\n\n```\n./IPython/html/static/notebook/js/cell.js:\n  189 :             MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, cell_math]);\n./IPython/html/static/notebook/js/outputarea.js:\n  208 :             MathJax.Hub.Queue([\"Typeset\",MathJax.Hub]);\n./IPython/html/static/widgets/js/widget_string.js:\n   49 :             MathJax.Hub.Queue([\"Typeset\",MathJax.Hub,this.$el.get(0)]);\n```\n\nIt is not at all obvious to me which of these is the \"normal\" case.\n\nWith this PR, the one in `OutputArea` has to call `Hub.Config` twice for each output. If someone has a notebook with lots of LaTeX output, but none in MD cells, this approach is more expensive. Given that we won't know in advance how often a user would use the different typesetting code paths, I think putting a call to `Hub.Config` on each of them will provide better performance averaged over all usage cases.\n\nDo you think this analysis is right? Trying to convince myself...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38226866",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38226866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38226866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjI2ODY2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T22:05:14Z",
    "updated_at": "2014-03-20T22:05:14Z",
    "author_association": "MEMBER",
    "body": "By 'normal', I just mean based on the following statements: In notebooks, equations and images are centered. The exception to this is when those things are outputs, in which case they are left-aligned.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38227124",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38227124",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38227124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjI3MTI0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T22:07:59Z",
    "updated_at": "2014-03-20T22:07:59Z",
    "author_association": "MEMBER",
    "body": "I don't have a strong feeling about it, so if attaching a `mathjax_config` to each class, used to update every time we typeset, that might be appropriate.\n\nThis stuff is weird and fragile enough that I think maybe we should hold it until after 2.0.  The only (known) adversely affected case in master is very long lines that auto-line-break won't break (e.g. long tuples or lists in sympy).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38228030",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-38228030",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 38228030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjI4MDMw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-20T22:18:30Z",
    "updated_at": "2014-03-20T22:18:30Z",
    "author_association": "MEMBER",
    "body": "I am fine holding this until after 2.0. Expecially because we still have to\nfigure out how to apply this logic to nbconvert/nbviewer.\n\nOn Thu, Mar 20, 2014 at 3:07 PM, Min RK notifications@github.com wrote:\n\n> I don't have a strong feeling about it, so if attaching a mathjax_configto each class, used to update every time we typeset, that might be\n> appropriate.\n> \n> This stuff is weird and fragile enough that I think maybe we should hold\n> it until after 2.0. The only (known) adversely affected case in master is\n> very long lines that auto-line-break won't break (e.g. long tuples or lists\n> in sympy).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5371#issuecomment-38227124\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45289324",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-45289324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 45289324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg5MzI0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T23:52:52Z",
    "updated_at": "2014-06-05T23:52:52Z",
    "author_association": "MEMBER",
    "body": "Recent work on master has added a number of new calls to MathJax in the widgets. All of these additional calls to MathJax should be left aligned. Because of this I think the approach that is in this PR is fine.\n\nHowever, we do need to make sure that nbconvert output and nbviewer will still center output equations after this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45289962",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-45289962",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 45289962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg5OTYy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-06T00:03:28Z",
    "updated_at": "2014-06-06T00:03:28Z",
    "author_association": "MEMBER",
    "body": "OK, my last comment was pure craziness. I forgot, the global config for MathJax is centering and this PR gets left alignment in output areas by calling MathJax's config logic (rather than the older CSS approach). Right now if this PR is merged, it will mean that all LaTeX in widget descriptions will be center aligned. I am not sure that makes sense.\n\n@minrk why don't you rebase on master so we can test the widget LaTeX stuff with this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45290187",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-45290187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 45290187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjkwMTg3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-06T00:07:46Z",
    "updated_at": "2014-06-06T00:07:46Z",
    "author_association": "MEMBER",
    "body": "Looking at how MathJax is configured on nbconvert/nbviewer and run _globally_ there, I don't see how we can make this approach work there. I think we should reconsider possibly just using centered equations everywhere. Adding to the next dev meeting agenda.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50185361",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-50185361",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 50185361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTg1MzYx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T18:18:03Z",
    "updated_at": "2014-07-25T18:18:03Z",
    "author_association": "MEMBER",
    "body": "We discussed this one at the dev meeting on June 12, but didn't put a note here. I just looked back and we said that \"Min will investigate how to get this working in nbconvert by setting the MathJax config separately for output LaTeX\". I think the issue with the current approach is that it won't give the same result on nbviewer/nbconvert.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50246911",
    "html_url": "https://github.com/ipython/ipython/pull/5371#issuecomment-50246911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5371",
    "id": 50246911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ2OTEx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T20:02:43Z",
    "updated_at": "2014-07-26T20:02:43Z",
    "author_association": "MEMBER",
    "body": "Closing here, I might come back to it later.\n"
  }
]
