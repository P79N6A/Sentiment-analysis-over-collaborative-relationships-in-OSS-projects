[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59895741",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59895741",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59895741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODk1NzQx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T08:36:37Z",
    "updated_at": "2014-10-21T08:36:37Z",
    "author_association": "MEMBER",
    "body": "I think we should think a bit more if we want that, or an tuple of citation, especially for big projects with many article. Also I'm not sure if the `dunder` is necessary.\n\nI also think that the data of the `__bibtex__` shoudl be a method, and that the data should be store in a more structured format. \n\nWe should probably discuss of a format before jumping into this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59898713",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59898713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59898713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODk4NzEz",
    "user": {
      "login": "Tafkas",
      "id": 34058,
      "node_id": "MDQ6VXNlcjM0MDU4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tafkas",
      "html_url": "https://github.com/Tafkas",
      "followers_url": "https://api.github.com/users/Tafkas/followers",
      "following_url": "https://api.github.com/users/Tafkas/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tafkas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tafkas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tafkas/subscriptions",
      "organizations_url": "https://api.github.com/users/Tafkas/orgs",
      "repos_url": "https://api.github.com/users/Tafkas/repos",
      "events_url": "https://api.github.com/users/Tafkas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tafkas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T09:02:35Z",
    "updated_at": "2014-10-21T09:02:35Z",
    "author_association": "NONE",
    "body": "I like the idea. So far I just found this info: http://ipython.org/citing.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59902533",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59902533",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59902533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTAyNTMz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T09:38:20Z",
    "updated_at": "2014-10-21T09:38:20Z",
    "author_association": "MEMBER",
    "body": "Yes, but if ever we add things we need (at least) a list. And we should absolutely be coherent across packages. I saw that you opened similar PR on other packages. If we do that across scipy, we shoudl absolutely have the same structure everywhere, which require a bit of thinking about : \n\n1 - is it a attribute or a function ? (function give os more flexibility, not sure if you can do properties module wide), and does it takes params ? \n2 - Which format ? List, tuple, dict...\n\nBibtex is nice, but hard to parse, should we have a `pybtex` data embeded that can be converted to non-bitex, and to bibtex ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59902703",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59902703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59902703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTAyNzAz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T09:39:43Z",
    "updated_at": "2014-10-21T09:39:43Z",
    "author_association": "MEMBER",
    "body": "Note, that I have seen the subject on Julia IIRC, where they wonder wether you like this even on a per-function basis, to know that a specific function implement an algorithm for a particular paper. I can see lots of project needing that too. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59913207",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59913207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59913207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTEzMjA3",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T11:23:10Z",
    "updated_at": "2014-10-21T11:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a great idea! But does require some discussion.\n- Needs to work for variety of objects\n- Should be language-agnostic\n- How will these be discovered? Iterating through all objects?\n\nThis would be a great topic for discussion for a board of advisors for Scientific Computing... not to get bogged down in a \"standards process\" but for a group of people to quickly, efficiently make recommendations for broad use and adoption.\n\nI do think that Bibtex is the right format to choose, but maybe there should be a way for these to register themselves. Use case:\n- use a bunch of code, libraries\n- Ok, now I want to cite what I have used\n- \"Code, please tell me the citations to all of the ideas that I am using.\" Response: list of citations.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59915085",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59915085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59915085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE1MDg1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T11:43:23Z",
    "updated_at": "2014-10-21T11:43:23Z",
    "author_association": "MEMBER",
    "body": "Lets not jump to far forward, and think at module level.\n\nAlso here are the 3 other issues linked to that : \n\nhttps://github.com/scikit-learn/scikit-learn/pull/3789\nhttps://github.com/networkx/networkx/pull/1271\nhttps://github.com/matplotlib/matplotlib/pull/3688\n\nIMHO if should be stored as something more friendly and robust (eg, json), and `__bibtex__` should be a function that returns the bibtex string.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59915574",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59915574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59915574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE1NTc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T11:48:38Z",
    "updated_at": "2014-10-21T11:48:38Z",
    "author_association": "MEMBER",
    "body": "i did cross post the following in the 3 other issues to try to regroup the discussion:\n\n> Cross posted from https://github.com/ipython/ipython/pull/6755 , I don't think it should be a string, but a tuple of string, (cf discussion there) and a method, not attribute (to be able to do some dynamic fetching like in submodules and equivalent. If we do that, it should really be uniform among scipy packages. \n> \n> Also let's find a unique place to discuss that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59915790",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59915790",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59915790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE1Nzkw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T11:51:04Z",
    "updated_at": "2014-10-21T11:51:04Z",
    "author_association": "MEMBER",
    "body": "@jakevdp already did that on astroML : https://github.com/astroML/astroML/commit/57fba48de8e21103e52d9b359032f1508ec69b38\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59916029",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59916029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59916029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE2MDI5",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T11:53:40Z",
    "updated_at": "2014-10-21T11:53:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't believe Bibtex would be the ideal format. It is from a pre-Internet age, so specifying links or other online resources is always kind of akward. Also, there is more than scientific literature. Technical reports often are referenced very differently (i.e. the author might be irrelevant).\n\nSo I would pledge for a more flexible format, and as @Carreau suggested, an easier to parse one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59916582",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59916582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59916582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTE2NTgy",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T11:59:22Z",
    "updated_at": "2014-10-21T11:59:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps a citation could be in any one of a number of styles. That would suggest using `__cite__` and allow Bibtex to be one of the styles that the citation format is in.\n\nJSON doesn't help all that much for Bibtex. For example, the title value could be \"This is the title\", or \"{T}his is the {T}itle\"... it will still need to be parsed. \n\nPerhaps Bibtex-string or Bibtex-JSON are possible formats.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59942367",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59942367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59942367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTQyMzY3",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T15:06:35Z",
    "updated_at": "2014-10-21T15:06:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am deeply skeptical of any format for citations which is not bibtex.  It is a stable, well understood, non-proprietary, pure-text format.  It has entry types for tech reports as will as articles, books, etc.  It should also be injestable by any citation manager worth it's salt (yes, no true Scottsman but come on).\n\nAt least the APS styles do a decent job of formatting links/eprints.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59947044",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59947044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59947044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTQ3MDQ0",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T15:33:50Z",
    "updated_at": "2014-10-21T15:33:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think the suggestion is to reinvent the bib format. It is no doubt a good format for scientific citations. I use it regularly. That said, it is not such a good format for internet and non-scientific resources citations.\n\nIf some of the projects with the highest visibility in the scientific/engineering Python community implement a citation standard that is based on bibtex **only**, others will follow.\n\nI believe we should allow different formats. Say e.g. `__citation__['bibtex'] = ...` and add a bibtex format citation, but do not enforce it to be the only format.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59948709",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59948709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59948709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTQ4NzA5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T15:43:26Z",
    "updated_at": "2014-10-21T15:43:26Z",
    "author_association": "MEMBER",
    "body": "There is a json format for citations which at least zotero can export, and\nis the native format for citeproc-js. I am looking into this for a citation\nextension in the live notebook (more soon). This seems a better option to\nme than storing bibtex in a string.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59967309",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-59967309",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 59967309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTY3MzA5",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T17:43:16Z",
    "updated_at": "2014-10-21T17:43:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I would also think that a language kernel would have citation information too. \n\nAnother way to go about all of this might be to have a centralized repository (such as a github repo) of associated project names to citation entries. Combined with some server-side code, one could then get citation data for a named project (library, language kernel, etc).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63492623",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-63492623",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 63492623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDkyNjIz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T15:55:27Z",
    "updated_at": "2014-11-18T15:55:27Z",
    "author_association": "MEMBER",
    "body": "I'm going to close as every project is basically waiting for other project to decide what to do. \n\nFeel free to start a discussion on what format how should be done in a central place and reopen later if there is a concensus.\n\nThanks !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71374445",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-71374445",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 71374445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzc0NDQ1",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T14:07:22Z",
    "updated_at": "2015-01-25T14:07:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just putting a reference to code DOI here:\n\nhttps://guides.github.com/activities/citable-code/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/200492048",
    "html_url": "https://github.com/ipython/ipython/pull/6755#issuecomment-200492048",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6755",
    "id": 200492048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ5MjA0OA==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T18:49:01Z",
    "updated_at": "2016-03-23T18:49:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/matplotlib/matplotlib/pull/6204\n\nmpl has (finally) merged our version.\n"
  }
]
