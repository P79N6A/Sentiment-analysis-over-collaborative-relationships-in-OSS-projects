[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17045359",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17045359",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17045359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDQ1MzU5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-25T22:44:51Z",
    "updated_at": "2013-04-25T22:44:51Z",
    "author_association": "MEMBER",
    "body": "Previously the display publisher had the ability to publish a metadata dict, but we never used it. As I understand this PR, this does a couple of things:\n- It starts to use that metadata dict.\n- It standardizes the top-level keys of the metadata dict (mime types).\n- It allows formatters to pass in data to that metadata dict by returning a `(format, md)` tuple.\n\nIf this is correct we could use this to allow JS code to declare the name of a browser side handler in the metadata?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17045933",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17045933",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17045933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDQ1OTMz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-25T22:57:15Z",
    "updated_at": "2013-04-25T22:57:15Z",
    "author_association": "MEMBER",
    "body": "That seems correct.  The metadata dict is currently a black box.  This simply defines that mime-type keys are themselves black boxes that will be passed to the append_mimetype handlers.  So you can still add any further arbitrary interpretations of the metadata dict.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17054684",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17054684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17054684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU0Njg0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:09:13Z",
    "updated_at": "2013-04-26T04:09:13Z",
    "author_association": "MEMBER",
    "body": "Let's update the docstrings of the various classes/methods this PR touches to reflect that many return values are now a tuple of data, metadata, etc.  Things like `DisplayFormatter.format` and friends.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17054722",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17054722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17054722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU0NzIy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:10:38Z",
    "updated_at": "2013-04-26T04:10:38Z",
    "author_association": "MEMBER",
    "body": "`DisplayPublisher.publish` docstring should describe how the metadata dict now has top level keys that are the format types.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17054730",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17054730",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17054730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU0NzMw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:11:04Z",
    "updated_at": "2013-04-26T04:11:04Z",
    "author_association": "MEMBER",
    "body": "Same with docstring of `publish_display_data`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17054820",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17054820",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17054820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU0ODIw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:14:58Z",
    "updated_at": "2013-04-26T04:14:58Z",
    "author_association": "MEMBER",
    "body": "I am wondering if we should change how the `metadata` arg to functions like `publish_html` and friends should be interpreted.  Right now, that metadata arg is just passed through to the underlying publish function.  Another option would be to assume that the metadata passed is for that particular format type and automatically add it to the global metadata dict with the right top-level mime-type key.  I think that makes more sense.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17054892",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17054892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17054892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU0ODky",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:18:20Z",
    "updated_at": "2013-04-26T04:18:20Z",
    "author_association": "MEMBER",
    "body": "The docstring and code of `DisplayHook.compute_format_data` is confusing.  It looks and sounds like it will just return the raw data, but the method it calls returns the data, metadata tuple.  The `__call__` method that calls this one does the right thing, but it is still confusing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17054906",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17054906",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17054906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU0OTA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:18:48Z",
    "updated_at": "2013-04-26T04:18:48Z",
    "author_association": "MEMBER",
    "body": "`DisplayHook.write_format_data` needs an updated docstring.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055033",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1MDMz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:24:15Z",
    "updated_at": "2013-04-26T04:24:15Z",
    "author_association": "MEMBER",
    "body": "Right now we use `OutputArea.prototype._dblclick_to_reset_size` to reset a resized image to its original size.  Do we instead want to use the metadata provided sizes if they were passed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055300",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1MzAw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:37:03Z",
    "updated_at": "2013-04-26T04:37:03Z",
    "author_association": "MEMBER",
    "body": "I'm not fond of the `publish_mime` methods - they don't actually do what they describe, since they also publish plaintext for everything.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055318",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055318",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1MzE4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:37:49Z",
    "updated_at": "2013-04-26T04:37:49Z",
    "author_association": "MEMBER",
    "body": "docstrings updated\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055384",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1Mzg0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:40:56Z",
    "updated_at": "2013-04-26T04:40:56Z",
    "author_association": "MEMBER",
    "body": "> Right now we use OutputArea.prototype._dblclick_to_reset_size to reset a resized image to its original size. Do we instead want to use the metadata provided sizes if they were passed?\n\nWe could, though the way we have it now will work, since it just uses the _measured_ initial size, which will always be the specified size given with metadata, so it would be a bit redundant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055426",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055426",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1NDI2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:43:07Z",
    "updated_at": "2013-04-26T04:43:07Z",
    "author_association": "MEMBER",
    "body": "Are you sure? From looking at the code, I think the `publish_foo` methods only publish their own mine type.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055508",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1NTA4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:47:13Z",
    "updated_at": "2013-04-26T04:47:13Z",
    "author_association": "MEMBER",
    "body": "Oh, that's even worse - I was thinking of _display_, which always includes plaintext.  publish doesn't for some reason.  Why do the publish_foo methods exist?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055606",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1NjA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:51:59Z",
    "updated_at": "2013-04-26T04:51:59Z",
    "author_association": "MEMBER",
    "body": "Originally, you couldn't publish metadata by calling display for using the\nreal formatters, so if you wanted to publish with metadata you had to use\nthese `publish_foo` methods.  But now that we can publish data with\nmetadata, I think we don't need these.  But we should add a metadata arg to\nthe main display classes (Image, HTML, Javascript, etc.), to make it easy\nto publish data with metadata.  Let's add that to this PR as it is a simple\nchange that will make the API more uniform.  Then, I am fine removing the\npublish methods if you want as well.  Simplify, simplify, simplify...\n\nOn Thu, Apr 25, 2013 at 9:47 PM, Min RK notifications@github.com wrote:\n\n> Oh, that's even worse - I was thinking of _display_, which always\n> includes plaintext. publish doesn't for some reason. Why do the publish_foo\n> methods exist?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/3190#issuecomment-17055508\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055619",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055619",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1NjE5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:52:46Z",
    "updated_at": "2013-04-26T04:52:46Z",
    "author_association": "MEMBER",
    "body": "IOW, display and the top level display objects should be our official\npublic display protocol API, not these low-level publish ones...\n\nOn Thu, Apr 25, 2013 at 9:51 PM, Brian Granger ellisonbg@gmail.com wrote:\n\n> Originally, you couldn't publish metadata by calling display for using the\n> real formatters, so if you wanted to publish with metadata you had to use\n> these `publish_foo` methods.  But now that we can publish data with\n> metadata, I think we don't need these.  But we should add a metadata arg to\n> the main display classes (Image, HTML, Javascript, etc.), to make it easy\n> to publish data with metadata.  Let's add that to this PR as it is a simple\n> change that will make the API more uniform.  Then, I am fine removing the\n> publish methods if you want as well.  Simplify, simplify, simplify...\n> \n> On Thu, Apr 25, 2013 at 9:47 PM, Min RK notifications@github.com wrote:\n> \n> > Oh, that's even worse - I was thinking of _display_, which always\n> > includes plaintext. publish doesn't for some reason. Why do the publish_foo\n> > methods exist?\n> > \n> > —\n> > Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/3190#issuecomment-17055508\n> > .\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055696",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055696",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1Njk2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:56:10Z",
    "updated_at": "2013-04-26T04:56:10Z",
    "author_association": "MEMBER",
    "body": "we want a metadata dict kwarg on all display types?  What should happen if someone specifies width/height as kwargs _and_ via metadata?  Or do we want to pass any **kwargs through as metadata?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055756",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055756",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1NzU2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T04:59:44Z",
    "updated_at": "2013-04-26T04:59:44Z",
    "author_association": "MEMBER",
    "body": "Because we need to tightly monitor all metadata attributes, lets set the\nmetadata via specific keywords args like width/height.  That way we can do\na better job checking their formats.  For example, if we introduce a\nhandler metadata attr for the JSON mime-type, users would pass that in as a\nhandler kwargs to the display object.\n\nOn Thu, Apr 25, 2013 at 9:56 PM, Min RK notifications@github.com wrote:\n\n> we want a metadata dict kwarg on all display types? What should happen if\n> someone specifies width/height as kwargs _and_ via metadata? Or do we\n> want to pass any **kwargs through as metadata?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/3190#issuecomment-17055696\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055875",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1ODc1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T05:06:14Z",
    "updated_at": "2013-04-26T05:06:14Z",
    "author_association": "MEMBER",
    "body": "Important question: is this metadata saved in the notebook format?  Seems like it should be otherwise when a notebook is reloaded, the metadata will be lost.  If it is part of the notebook format, is that not a notebook format change?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17055901",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17055901",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17055901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1OTAx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T05:08:18Z",
    "updated_at": "2013-04-26T05:08:18Z",
    "author_association": "MEMBER",
    "body": "yes, the metadata is saved in the notebook\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17197179",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17197179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17197179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTk3MTc5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-29T21:55:48Z",
    "updated_at": "2013-04-29T21:55:48Z",
    "author_association": "MEMBER",
    "body": "So I think this code is ready to merge.  The only thing we talked about was updating the message spec/nbformat documentation with information about the metadata.  Do you want to do that in a separate PR, or include it here?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17197235",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17197235",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17197235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTk3MjM1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-29T21:56:51Z",
    "updated_at": "2013-04-29T21:56:51Z",
    "author_association": "MEMBER",
    "body": "Ah, I updated the IPEP, but forgot to update the actual docs.  I'll do that now.  I will also add an example or two to the example notebooks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17197255",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17197255",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17197255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTk3MjU1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-29T21:57:15Z",
    "updated_at": "2013-04-29T21:57:15Z",
    "author_association": "MEMBER",
    "body": "OK great!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17197874",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17197874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17197874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTk3ODc0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-29T22:09:02Z",
    "updated_at": "2013-04-29T22:09:02Z",
    "author_association": "MEMBER",
    "body": "docs should be updated\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17198074",
    "html_url": "https://github.com/ipython/ipython/pull/3190#issuecomment-17198074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3190",
    "id": 17198074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTk4MDc0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-29T22:12:59Z",
    "updated_at": "2013-04-29T22:12:59Z",
    "author_association": "MEMBER",
    "body": "Merging, great work!\n"
  }
]
