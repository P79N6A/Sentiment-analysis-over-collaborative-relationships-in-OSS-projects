[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15020268",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15020268",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15020268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDIwMjY4",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-17T10:14:06Z",
    "updated_at": "2013-03-17T10:14:06Z",
    "author_association": "MEMBER",
    "body": "Hi there,\n\nTo find out which version of IPython you are running, just run this code:\n\n```\nimport IPython\nIPython.__version__\n```\n\nNote, though, that we do store the _notebook_ fileformat version in the .ipynb notebook file currently, but if/when that format changes, we will be able to read the older formats and upgrade them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15109115",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15109115",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15109115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTA5MTE1",
    "user": {
      "login": "techtonik",
      "id": 515889,
      "node_id": "MDQ6VXNlcjUxNTg4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techtonik",
      "html_url": "https://github.com/techtonik",
      "followers_url": "https://api.github.com/users/techtonik/followers",
      "following_url": "https://api.github.com/users/techtonik/following{/other_user}",
      "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions",
      "organizations_url": "https://api.github.com/users/techtonik/orgs",
      "repos_url": "https://api.github.com/users/techtonik/repos",
      "events_url": "https://api.github.com/users/techtonik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techtonik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T11:25:13Z",
    "updated_at": "2013-03-19T11:25:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see. But the reason is to expose this to the interface. I want to know the server and client versions as well. It should be easy to add this to <meta generator=\"\">, isn't it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15145536",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15145536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15145536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ1NTM2",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T21:49:28Z",
    "updated_at": "2013-03-19T21:49:28Z",
    "author_association": "MEMBER",
    "body": "It is indeed easy to do this, just a question of is it necessary to do this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15145788",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15145788",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15145788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ1Nzg4",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T21:54:09Z",
    "updated_at": "2013-03-19T21:54:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be much better if it is provided as JSON because it is easy to parse for client programs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15146419",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15146419",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15146419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ2NDE5",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T22:05:38Z",
    "updated_at": "2013-03-19T22:06:07Z",
    "author_association": "MEMBER",
    "body": "@techtonik - welcome to IPython, we're really glad to have you participating, so I hope you don't discouraged by this bit of pushback on a feature. Part of the reason I'm questioning the need for this comes from what @ellisonbg wrote in hist [posts about feature creep](http://brianegranger.com/?p=249).\n\nIf printing `__version__` is enough for you, this is something you can bake into your startup directory. Run this code to figure out how to get started: \n\n```\nIn [2]: import os                                                                                                   |\n\nIn [3]: readme = os.path.join(get_ipython().profile_dir.location, 'startup', 'README')                              |\n\nIn [4]: !cat $readme                                                                                                |\nThis is the IPython startup directory\n\n.py and .ipy files in this directory will be run *prior* to any code or files specified\nvia the exec_lines or exec_files configurables whenever you load this profile.\n\nFiles will be run in lexicographical order, so you can control the execution order of files\nwith a prefix, e.g.::\n\n    00-first.py\n    50-middle.py\n    99-last.ipy\n\nIn [5]: readme\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15147709",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15147709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15147709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ3NzA5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T22:31:42Z",
    "updated_at": "2013-03-19T22:31:42Z",
    "author_association": "MEMBER",
    "body": "It might make sense to include the Python version (at least Py2/Py3) - the\nnotebook server could one day be extended to start different kernels\ndepending on the file contents. That mechanism could support other\nlanguages as well.\n\nI can't immediately see a rationale for including the IPython version,\nthough I'm willing to be convinced.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15157821",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15157821",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15157821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTU3ODIx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T04:28:23Z",
    "updated_at": "2013-03-20T04:28:23Z",
    "author_association": "MEMBER",
    "body": "There are two things here:\n1. the notebook server's version (used by clients to determine the URL API, etc.)\n2. the Kernel(s) that the notebook server can start. This would be something like a dict mapping short names to something like the content of the kernel's version_reply message.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15160759",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15160759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15160759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTYwNzU5",
    "user": {
      "login": "techtonik",
      "id": 515889,
      "node_id": "MDQ6VXNlcjUxNTg4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techtonik",
      "html_url": "https://github.com/techtonik",
      "followers_url": "https://api.github.com/users/techtonik/followers",
      "following_url": "https://api.github.com/users/techtonik/following{/other_user}",
      "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions",
      "organizations_url": "https://api.github.com/users/techtonik/orgs",
      "repos_url": "https://api.github.com/users/techtonik/repos",
      "events_url": "https://api.github.com/users/techtonik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techtonik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T06:49:08Z",
    "updated_at": "2013-03-20T06:49:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to make sure that my notebook software is running the latest and greatest version. I am not sure that `import IPython` inside working frontend conjures the same version of Python that used to start it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15168830",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15168830",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15168830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTY4ODMw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T11:03:52Z",
    "updated_at": "2013-03-20T11:03:52Z",
    "author_association": "MEMBER",
    "body": "'import IPython' will find the IPython version of the kernel. It's\ntechnically possible for the notebook server to start a kernel from another\nversion of IPython, but I don't think we've yet got any situation where\nthat's likely.\n\nOn 20 March 2013 06:49, anatoly techtonik notifications@github.com wrote:\n\n> I want to make sure that my notebook software is running the latest and\n> greatest version. I am not sure that import IPython inside working\n> frontend conjures the same version of Python that used to start it.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3025#issuecomment-15160759\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15170818",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15170818",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15170818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTcwODE4",
    "user": {
      "login": "techtonik",
      "id": 515889,
      "node_id": "MDQ6VXNlcjUxNTg4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techtonik",
      "html_url": "https://github.com/techtonik",
      "followers_url": "https://api.github.com/users/techtonik/followers",
      "following_url": "https://api.github.com/users/techtonik/following{/other_user}",
      "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions",
      "organizations_url": "https://api.github.com/users/techtonik/orgs",
      "repos_url": "https://api.github.com/users/techtonik/repos",
      "events_url": "https://api.github.com/users/techtonik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techtonik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T11:49:06Z",
    "updated_at": "2013-03-20T11:49:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, basically I need to know two versions to ensure that I am using the latest and greatest (and tag bugs accordingly).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15171045",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15171045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15171045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTcxMDQ1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T11:55:11Z",
    "updated_at": "2013-03-20T11:55:11Z",
    "author_association": "MEMBER",
    "body": "In theory, yes, but in practise it's very unlikely that you'll be using\ndifferent versions of those components, so you needn't normally think about\nit.\n\nPerhaps we should display the IPython version from the notebook server at\nthe bottom of the dashboard page.\n\nOn 20 March 2013 11:49, anatoly techtonik notifications@github.com wrote:\n\n> So, basically I need to know two versions to ensure that I am using the\n> latest and greatest (and tag bugs accordingly).\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3025#issuecomment-15170818\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15172305",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15172305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15172305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTcyMzA1",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T12:20:12Z",
    "updated_at": "2013-03-20T12:20:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Many softwares have \"About\" page which shows version numbers etc.  I think it is not bad to have this page in notebook.  Also, if you print out versions of all relevant components and modules (e.g., tornado) you can simply ask user to copy & paste that page when you got a bug report or question.  Probably it would be better than asking user to execute a command line program if you consider situation where someone other than actual user setups and hosts notebook server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15172665",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15172665",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15172665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTcyNjY1",
    "user": {
      "login": "techtonik",
      "id": 515889,
      "node_id": "MDQ6VXNlcjUxNTg4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techtonik",
      "html_url": "https://github.com/techtonik",
      "followers_url": "https://api.github.com/users/techtonik/followers",
      "following_url": "https://api.github.com/users/techtonik/following{/other_user}",
      "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions",
      "organizations_url": "https://api.github.com/users/techtonik/orgs",
      "repos_url": "https://api.github.com/users/techtonik/repos",
      "events_url": "https://api.github.com/users/techtonik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techtonik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T12:26:49Z",
    "updated_at": "2013-03-20T12:26:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "In very critical cases this information can be used to analyze exceptions, but for that it needs to be available from somewhere. In-process dictionary and out-of-process JSON message sound like a good idea to me, because these are reusable data formats. User level page representation on About page can be different, of course.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15186886",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-15186886",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 15186886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTg2ODg2",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T16:32:28Z",
    "updated_at": "2013-03-26T00:52:40Z",
    "author_association": "MEMBER",
    "body": "Thomas said: `'import IPython' will find the IPython version of the kernel.` Yeap, and just 'ipython --version' before starting the notebook server (or '!ipython version' in a notebook cell) will get you the server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16154093",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-16154093",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 16154093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU0MDkz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T03:58:11Z",
    "updated_at": "2013-04-10T03:58:11Z",
    "author_association": "MEMBER",
    "body": "PR #3037 had one implementation of a solution, but it has been closed until we figure out where exactly we want to go with this one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16154691",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-16154691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 16154691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU0Njkx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T04:20:52Z",
    "updated_at": "2013-04-10T04:20:52Z",
    "author_association": "MEMBER",
    "body": "It would be very difficult to run the notebook server and kernel with different versions of ipython.  You would basically have to write custom kernel manager code - you would be forking ipython.  So I am not worried about that issue.\n\nThe main question is whether or not we need something more sophisticated than `!ipython --version`.  I probably agree with @ivanov that it is not worth the added complexity to do something else.  It is always important to ask \"can we get 80% of the feature with 20% of the complexity and code?\".  I think the answer is yes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16161911",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-16161911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 16161911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTYxOTEx",
    "user": {
      "login": "techtonik",
      "id": 515889,
      "node_id": "MDQ6VXNlcjUxNTg4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techtonik",
      "html_url": "https://github.com/techtonik",
      "followers_url": "https://api.github.com/users/techtonik/followers",
      "following_url": "https://api.github.com/users/techtonik/following{/other_user}",
      "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions",
      "organizations_url": "https://api.github.com/users/techtonik/orgs",
      "repos_url": "https://api.github.com/users/techtonik/repos",
      "events_url": "https://api.github.com/users/techtonik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techtonik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T08:38:29Z",
    "updated_at": "2013-04-10T08:38:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "If simple version string addition appears to be complicated, then reducing the code complexity is also an option.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56854380",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-56854380",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 56854380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODU0Mzgw",
    "user": {
      "login": "jason-s",
      "id": 738893,
      "node_id": "MDQ6VXNlcjczODg5Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/738893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jason-s",
      "html_url": "https://github.com/jason-s",
      "followers_url": "https://api.github.com/users/jason-s/followers",
      "following_url": "https://api.github.com/users/jason-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/jason-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jason-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jason-s/subscriptions",
      "organizations_url": "https://api.github.com/users/jason-s/orgs",
      "repos_url": "https://api.github.com/users/jason-s/repos",
      "events_url": "https://api.github.com/users/jason-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jason-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-25T17:33:28Z",
    "updated_at": "2014-09-25T17:37:09Z",
    "author_association": "NONE",
    "body": "> The main question is whether or not we need something more sophisticated than !ipython --version. I probably agree with @ivanov that it is not worth the added complexity to do something else. It is always important to ask \"can we get 80% of the feature with 20% of the complexity and code?\". I think the answer is yes.\n\nI think you need to re-examine your audience. A bunch of us are experienced Python users, and we know how to get the version of IPython through the shell or via the techniques mentioned here.\n\nBut some of the IPython users are not. I am working with a number of coworkers who are smart engineers but have very little Python experience. I give them a copy of my IPython notebooks to run, and they can do this, but they are not confident at all in making changes or running things that to them seem very sophisticated but to us seem very simple.\n\nYes, I can tell them to do this:\n\n```\nimport IPython\nIPython.__version__\n```\n\nBut then I have to remember where to find it, and then I have to tell my colleagues to run that and send me the result, and I have to emphasize that they need to type in two underscores and not one. It's not a huge amount of time, but the time we have to do things is precious and it would be a lot easier if I could just tell them during a phone call to look at the IPython notebook page and tell me the version number shown at the top of the screen, so I can see if they are using the correct version. So many other programs have the version number displayed as a matter of good practice. Just a quick survey of programs with HTML browser interfaces: JIRA has it. CouchDB has it.\n\nPlease add it to the HTML header; it's a really little thing but it can make a big difference in quickly and reliably troubleshooting IPython setups among users who are beginners.\n\n---\n\nedit: more succinctly said by tkf:\n\n> Many softwares have \"About\" page which shows version numbers etc. I think it is not bad to have this page in notebook. Also, if you print out versions of all relevant components and modules (e.g., tornado) you can simply ask user to copy & paste that page when you got a bug report or question. **Probably it would be better than asking user to execute a command line program if you consider situation where someone other than actual user setups and hosts notebook server.**\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56949452",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-56949452",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 56949452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTQ5NDUy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-26T11:24:29Z",
    "updated_at": "2014-09-26T11:24:29Z",
    "author_association": "MEMBER",
    "body": "> import IPython\n> IPython.**version**\n\n`print(IPython.sys_info())` or `IPython.version_info` might be less scary.\n\n> look at the IPython notebook page and tell me the version number shown at the top of the screen\n\nIf you are following IPython, then you know that IPython is present in several component, printing at top of the screen will not be of much help as kernel could be a different version than frontend. I don't see many reason why you should manually check the version of IPython to run code, but lets assume we have one.\n\nDo you intend the kernel version or the frontend version ? Showing kernel info would be doable\nas in master you have the kernel indicator:\n\n![capture d ecran 2014-09-26 a 13 17 38](https://cloud.githubusercontent.com/assets/335567/4419720/fd4b5b9e-456e-11e4-8f68-3cd7d0286883.png)\n\nBut this is different from embeding the kernel exact version info in notebook, and have it checked.\n\nFor the frontend info I suppose this can be doable but might not represent what you actually want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56950516",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-56950516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 56950516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTUwNTE2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-26T11:38:17Z",
    "updated_at": "2014-09-26T11:38:17Z",
    "author_association": "MEMBER",
    "body": "Here is a proposition : \nAdd a `long_desc` to kernelspec that can hold whatever string the kernel want, and is purely for information: like `3.4.1 (default, May 19 2014, 13:09:54) \\n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)]` and completely optional.\n\nA way to show it in our UI: a (i) button near kernel ? \nIt might not actually reflect the current kernel though, as this is set at kernel spec install time.\nAn about dialog page in the notebook. That give IPython Server version (not Kernel).\nMaybe a small '(powererd by) IPython notebook vX.Y.Z' at end of page. \n\nBut hat won't give you any hard requirement on the notebook having to be runned by such a kernel and would be purely informative without being certain. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57306929",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-57306929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 57306929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzA2OTI5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-30T12:40:51Z",
    "updated_at": "2014-09-30T12:41:01Z",
    "author_association": "MEMBER",
    "body": "To add into the discussion... I have a setup where this could be interesting to have and I think other could encounter that situation... it is probably not a normal workflow, just throwing here to show there could be some use cases...\n\nOK, in my case, I work in Bokeh and IPython for my daily job and I need to provide feedback for stable versions and also test development versions. So I have made kernels pointing to conda environments where the `stable` kernel have IPython 2.2.0 and Bokeh 0.6.1 and another env `py34devel` where I have IPython master and Bokeh master (and others envs too, but let get the description short)... so, I can easily test stable and devel situations just switching the kernel. So, something like having the notebook server version and the kernel version, would be very useful, because in the middle of so many envs, you can quickly lost idea about your current server version and kernel version...\nIn such case and in others situation where I point to specific \"hacks\" over the notebook, it would be useful to have some indication about the server/kernel versions I am running...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59003595",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-59003595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 59003595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDAzNTk1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T08:02:08Z",
    "updated_at": "2014-10-14T08:02:08Z",
    "author_association": "MEMBER",
    "body": "From #3037 should we reconsider also  printing the IPython version in the console that started the notebook ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59029186",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-59029186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 59029186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDI5MTg2",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T11:39:23Z",
    "updated_at": "2014-10-14T11:39:23Z",
    "author_association": "MEMBER",
    "body": "Probably...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59333045",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-59333045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 59333045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzMzMDQ1",
    "user": {
      "login": "techtonik",
      "id": 515889,
      "node_id": "MDQ6VXNlcjUxNTg4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techtonik",
      "html_url": "https://github.com/techtonik",
      "followers_url": "https://api.github.com/users/techtonik/followers",
      "following_url": "https://api.github.com/users/techtonik/following{/other_user}",
      "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions",
      "organizations_url": "https://api.github.com/users/techtonik/orgs",
      "repos_url": "https://api.github.com/users/techtonik/repos",
      "events_url": "https://api.github.com/users/techtonik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techtonik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T09:00:30Z",
    "updated_at": "2014-10-16T09:00:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also miss info on IP and port from the console.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63005681",
    "html_url": "https://github.com/ipython/ipython/issues/3025#issuecomment-63005681",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3025",
    "id": 63005681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDA1Njgx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T03:27:03Z",
    "updated_at": "2014-11-14T03:27:03Z",
    "author_association": "MEMBER",
    "body": "closed by #6554\n"
  }
]
