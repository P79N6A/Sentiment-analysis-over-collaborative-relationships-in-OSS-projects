[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50374466",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-50374466",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 50374466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc0NDY2",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T18:01:10Z",
    "updated_at": "2014-07-28T18:01:10Z",
    "author_association": "MEMBER",
    "body": "@cancan101 thanks for the suggestion, it makes sense, but I can't imagine what a reasonable UI for that would be... it seems like we'd be creeping further and further into the territory of writing a full-on file manager...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/73778168",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-73778168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 73778168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzc4MTY4",
    "user": {
      "login": "CarlCochran",
      "id": 1620070,
      "node_id": "MDQ6VXNlcjE2MjAwNzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1620070?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarlCochran",
      "html_url": "https://github.com/CarlCochran",
      "followers_url": "https://api.github.com/users/CarlCochran/followers",
      "following_url": "https://api.github.com/users/CarlCochran/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarlCochran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarlCochran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarlCochran/subscriptions",
      "organizations_url": "https://api.github.com/users/CarlCochran/orgs",
      "repos_url": "https://api.github.com/users/CarlCochran/repos",
      "events_url": "https://api.github.com/users/CarlCochran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarlCochran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-10T20:33:52Z",
    "updated_at": "2015-02-10T20:33:52Z",
    "author_association": "NONE",
    "body": "I have been trying to implement this using jQuery draggable and droppable, but have not been able to figure out how to get the path and name properties of individual notebooks in what I think is the correct place to do it.  The reason I want this capability is that I would run Jupyter on an Amazon ec2 instance, and would want to limit access only to the Jupyter interface.  Moving files around would obviously help stay organized.\n\nipython/IPython/html/static/tree/js/notebooklist.js : NotebookList.prototype.new_item = function (index, selectable) appears to be the place to add draggable and droppable.  And it can easily be implemented by calling NotebookList.prototype.rename_selected = function() .  I have already tested that rename (the existing rename button) moves a file into a folder when typing the folder name in front of the notebook name, and you can go up one level by erasing the folder name.\n\nI just can't figure out how to access the path and name from within that new_item function, as well as whether a draggable or droppable item is a folder or non-folder.  Any help?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/158174947",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-158174947",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 158174947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE3NDk0Nw==",
    "user": {
      "login": "monkpit",
      "id": 5297293,
      "node_id": "MDQ6VXNlcjUyOTcyOTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5297293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/monkpit",
      "html_url": "https://github.com/monkpit",
      "followers_url": "https://api.github.com/users/monkpit/followers",
      "following_url": "https://api.github.com/users/monkpit/following{/other_user}",
      "gists_url": "https://api.github.com/users/monkpit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/monkpit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/monkpit/subscriptions",
      "organizations_url": "https://api.github.com/users/monkpit/orgs",
      "repos_url": "https://api.github.com/users/monkpit/repos",
      "events_url": "https://api.github.com/users/monkpit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/monkpit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T19:51:45Z",
    "updated_at": "2015-11-19T19:51:45Z",
    "author_association": "NONE",
    "body": "@CarlCochran Did you ever make any headway with this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/158781295",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-158781295",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 158781295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODc4MTI5NQ==",
    "user": {
      "login": "dirkdevriendt",
      "id": 1027400,
      "node_id": "MDQ6VXNlcjEwMjc0MDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1027400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkdevriendt",
      "html_url": "https://github.com/dirkdevriendt",
      "followers_url": "https://api.github.com/users/dirkdevriendt/followers",
      "following_url": "https://api.github.com/users/dirkdevriendt/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkdevriendt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkdevriendt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkdevriendt/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkdevriendt/orgs",
      "repos_url": "https://api.github.com/users/dirkdevriendt/repos",
      "events_url": "https://api.github.com/users/dirkdevriendt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkdevriendt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-22T17:54:17Z",
    "updated_at": "2015-11-22T17:54:17Z",
    "author_association": "NONE",
    "body": "A useful workaround would be to include a Save As... menu or allow including subdirectory slashes in the rename functionality (copy/rename/save as \"../sibling_folder/file.ipynb\").\nWe thought about providing a readonly folder with notebook templates on a Notebook server, but now it is not possible to move your own updated version to another writeable folder.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/158933923",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-158933923",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 158933923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODkzMzkyMw==",
    "user": {
      "login": "monkpit",
      "id": 5297293,
      "node_id": "MDQ6VXNlcjUyOTcyOTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5297293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/monkpit",
      "html_url": "https://github.com/monkpit",
      "followers_url": "https://api.github.com/users/monkpit/followers",
      "following_url": "https://api.github.com/users/monkpit/following{/other_user}",
      "gists_url": "https://api.github.com/users/monkpit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/monkpit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/monkpit/subscriptions",
      "organizations_url": "https://api.github.com/users/monkpit/orgs",
      "repos_url": "https://api.github.com/users/monkpit/repos",
      "events_url": "https://api.github.com/users/monkpit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/monkpit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T13:31:44Z",
    "updated_at": "2015-11-23T13:31:44Z",
    "author_association": "NONE",
    "body": "@dirkdevriendt That is pretty much my exact use-case - I am running JupyterHub and each individual user has a symlink in their personal notebooks to a public notebook folder. My thinking was that if a user wants to make a notebook shareable, they move it to the public folder and all users that have logins can see the notebook.\n\n\"Save As...\" would work perfectly...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/158936759",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-158936759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 158936759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODkzNjc1OQ==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T13:47:34Z",
    "updated_at": "2015-11-23T13:47:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is an extension that adds a \"Publish\" button that does exactly that.\nIt needs to be cleaned up some... public_html is hardcoded and JS calls\nkernel via magic to copy, for examples:\n\nhttps://github.com/Calysto/notebook-extensions/blob/master/calico-publish.js\n\nOn Mon, Nov 23, 2015 at 8:31 AM, Kyle Pittman notifications@github.com\nwrote:\n\n> @dirkdevriendt https://github.com/dirkdevriendt That is pretty much my\n> exact use-case - I am running JupyterHub and each individual user has a\n> symlink in their personal notebooks to a public notebook folder. My\n> thinking was that if a user wants to make a notebook shareable, they move\n> it to the public folder and all users that have logins can see the notebook.\n> \n> \"Save As...\" would work perfectly...\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6156#issuecomment-158933923.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/170360151",
    "html_url": "https://github.com/ipython/ipython/issues/6156#issuecomment-170360151",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6156",
    "id": 170360151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDM2MDE1MQ==",
    "user": {
      "login": "dirkdevriendt",
      "id": 1027400,
      "node_id": "MDQ6VXNlcjEwMjc0MDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1027400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkdevriendt",
      "html_url": "https://github.com/dirkdevriendt",
      "followers_url": "https://api.github.com/users/dirkdevriendt/followers",
      "following_url": "https://api.github.com/users/dirkdevriendt/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkdevriendt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkdevriendt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkdevriendt/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkdevriendt/orgs",
      "repos_url": "https://api.github.com/users/dirkdevriendt/repos",
      "events_url": "https://api.github.com/users/dirkdevriendt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkdevriendt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-10T15:30:14Z",
    "updated_at": "2016-01-10T15:30:14Z",
    "author_association": "NONE",
    "body": "FYI: Seems to work in Jupyter Notebook 4.1 (on Linux at least)\n"
  }
]
