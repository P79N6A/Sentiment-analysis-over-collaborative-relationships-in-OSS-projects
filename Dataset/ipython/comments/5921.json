[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44513569",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-44513569",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 44513569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTEzNTY5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T09:16:20Z",
    "updated_at": "2014-05-29T09:16:20Z",
    "author_association": "MEMBER",
    "body": "I think the issues has been raised a few times on the mailing list and we are aware of that. \nIt is not a hard problem to solve, unfortunately it is relatively low priority, as it will generally add\na little bit of overhead for development as you need to be sure we do not break any themes.\n\nThough if someone is ready to tackle it, (even partly) write the spec on how to install a theme, refer to it in the metadata, use it on nbviewer and the rest, we would gladly review the proposal and a Pull Request that implement the changes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44837061",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-44837061",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 44837061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODM3MDYx",
    "user": {
      "login": "ahmadia",
      "id": 512293,
      "node_id": "MDQ6VXNlcjUxMjI5Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/512293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmadia",
      "html_url": "https://github.com/ahmadia",
      "followers_url": "https://api.github.com/users/ahmadia/followers",
      "following_url": "https://api.github.com/users/ahmadia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmadia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmadia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmadia/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmadia/orgs",
      "repos_url": "https://api.github.com/users/ahmadia/repos",
      "events_url": "https://api.github.com/users/ahmadia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmadia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-02T13:33:55Z",
    "updated_at": "2014-06-02T13:33:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm discussing this offline with @ketch.\n\nIt sounds like we should write a small IPEP for this, to ensure we've got the ideas right, and potentially accompany with a proof-of-concept.  Any objections?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44837460",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-44837460",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 44837460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODM3NDYw",
    "user": {
      "login": "ketch",
      "id": 697763,
      "node_id": "MDQ6VXNlcjY5Nzc2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/697763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ketch",
      "html_url": "https://github.com/ketch",
      "followers_url": "https://api.github.com/users/ketch/followers",
      "following_url": "https://api.github.com/users/ketch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ketch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ketch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ketch/subscriptions",
      "organizations_url": "https://api.github.com/users/ketch/orgs",
      "repos_url": "https://api.github.com/users/ketch/repos",
      "events_url": "https://api.github.com/users/ketch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ketch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-02T13:37:57Z",
    "updated_at": "2014-06-02T13:38:58Z",
    "author_association": "NONE",
    "body": "Okay, @ahmadia suggested that I should specify the kind of behavior I'd like to see, so it can be discussed.  I will stick to just CSS to keep things as simple as possible.\n\nThe author of a notebook would add a field to the notebook metadata:\n\n```\n\"css_file\": \"relative/path/to/file.css\"\n```\n\nThe path could instead be a URL.  When the notebook is opened, a link to this CSS file would be added to the HTML header.  This CSS file would override notebook defaults, but would be overridden by the user's custom.css (if they have one).\n\nIf the notebook metadata has no \"css_file\" key, then things would function just as they do now.\n\nClearly, the CSS would only be modified when the notebook is loaded, so this would not be a mechanism for changing it on the fly (unless you reload after editing the metadata and saving).\n\nMultiple CSS files could also be supported.  My preference would be to implement this for a single file for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47765713",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-47765713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 47765713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzY1NzEz",
    "user": {
      "login": "FRidh",
      "id": 2129135,
      "node_id": "MDQ6VXNlcjIxMjkxMzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FRidh",
      "html_url": "https://github.com/FRidh",
      "followers_url": "https://api.github.com/users/FRidh/followers",
      "following_url": "https://api.github.com/users/FRidh/following{/other_user}",
      "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions",
      "organizations_url": "https://api.github.com/users/FRidh/orgs",
      "repos_url": "https://api.github.com/users/FRidh/repos",
      "events_url": "https://api.github.com/users/FRidh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FRidh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T11:41:24Z",
    "updated_at": "2014-07-02T11:41:24Z",
    "author_association": "NONE",
    "body": "Would you override as in append/modify the default value, or override as in ignore the default value and only load the specified CSS file? I think we should ignore the default CSS when custom CSS is specified instead of appending/modifying that CSS for clarity reasons, so\n\n```\nif custom:\n    load(custom)\nelif metadata['css_file']:\n    load(metadata['css_file'])\nelse:\n    load(default)\n```\n\nNow, this would only be about the CSS for the Notebook and nbviewer. For the different exporters I think we should specify separately which CSS/style to use, so something like:\n\n```\n{\n\"celltoolbar\": \"Slideshow\",\n\"signature\": \"sha256:b01826fe48973cffb8307654e0cb5e48b963c0e44cb0013e9d5c5a5ebc13c321\",\n\n\"css\" : [\"/path/to/style.css\",\n    ],\n\n\"exporter\": {\n    \"html\"  : {\n        \"css\" : [\"/css/for/html/presentation/style.css\",\n        ],\n    },\n    \"reveal\": {\n        \"theme\": \"moon\",\n        \"transition\": \"cube\",\n        \"controls\" : true,\n        \"slideNumber\" : true,\n        \"css\" : [\"/css/for/reveal/presentation/reveal.css\",\n        ],\n        \"css_pdf\" : [/css/for/when/printing/reveal/presentation/print.css\"\",\n        ],\n    },\n    \"latex\": {\n    },\n},\n}\n```\n\nThe order of items in a JSON array is maintained, so we could make the CSS fields arrays. The CSS would then also be loaded in that order.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47840503",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-47840503",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 47840503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODQwNTAz",
    "user": {
      "login": "ketch",
      "id": 697763,
      "node_id": "MDQ6VXNlcjY5Nzc2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/697763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ketch",
      "html_url": "https://github.com/ketch",
      "followers_url": "https://api.github.com/users/ketch/followers",
      "following_url": "https://api.github.com/users/ketch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ketch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ketch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ketch/subscriptions",
      "organizations_url": "https://api.github.com/users/ketch/orgs",
      "repos_url": "https://api.github.com/users/ketch/repos",
      "events_url": "https://api.github.com/users/ketch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ketch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T21:39:23Z",
    "updated_at": "2014-07-02T21:39:23Z",
    "author_association": "NONE",
    "body": "@FRidh That all sounds reasonable to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65684307",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-65684307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 65684307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njg0MzA3",
    "user": {
      "login": "jonnojohnson",
      "id": 2466134,
      "node_id": "MDQ6VXNlcjI0NjYxMzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2466134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonnojohnson",
      "html_url": "https://github.com/jonnojohnson",
      "followers_url": "https://api.github.com/users/jonnojohnson/followers",
      "following_url": "https://api.github.com/users/jonnojohnson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonnojohnson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonnojohnson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonnojohnson/subscriptions",
      "organizations_url": "https://api.github.com/users/jonnojohnson/orgs",
      "repos_url": "https://api.github.com/users/jonnojohnson/repos",
      "events_url": "https://api.github.com/users/jonnojohnson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonnojohnson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T19:05:11Z",
    "updated_at": "2014-12-04T19:05:11Z",
    "author_association": "NONE",
    "body": "I just came across this and would love to have this capability especially via nbviewer. It looks like there are some hooks in nbviewer https://github.com/jupyter/nbviewer/blob/master/nbviewer/render.py#L39-L66 but I guess it's not supported in the notebook yet. Is that correct or do I just not know how to implement it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/65685625",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-65685625",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 65685625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njg1NjI1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T19:13:38Z",
    "updated_at": "2014-12-04T19:13:38Z",
    "author_association": "MEMBER",
    "body": "It's not supported. It's arcanes from when nbviewer was still at its beginning.\n\nYou can load a custom css file and display it in the last cell of a notebook if you really want. \nOnce we have more manpower on the team, and people that like doing design and css we can reconsider adding this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69083640",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-69083640",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 69083640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDgzNjQw",
    "user": {
      "login": "anthonylouisburns",
      "id": 3733797,
      "node_id": "MDQ6VXNlcjM3MzM3OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3733797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonylouisburns",
      "html_url": "https://github.com/anthonylouisburns",
      "followers_url": "https://api.github.com/users/anthonylouisburns/followers",
      "following_url": "https://api.github.com/users/anthonylouisburns/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonylouisburns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonylouisburns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonylouisburns/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonylouisburns/orgs",
      "repos_url": "https://api.github.com/users/anthonylouisburns/repos",
      "events_url": "https://api.github.com/users/anthonylouisburns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonylouisburns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-07T20:09:42Z",
    "updated_at": "2015-01-07T20:09:42Z",
    "author_association": "NONE",
    "body": "is this still active\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69155287",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-69155287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 69155287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTU1Mjg3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T09:30:04Z",
    "updated_at": "2015-01-08T09:30:04Z",
    "author_association": "MEMBER",
    "body": "We are still thinking about it. But we need a few motivated people to at least work and maintain css. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69233496",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-69233496",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 69233496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjMzNDk2",
    "user": {
      "login": "anthonylouisburns",
      "id": 3733797,
      "node_id": "MDQ6VXNlcjM3MzM3OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3733797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonylouisburns",
      "html_url": "https://github.com/anthonylouisburns",
      "followers_url": "https://api.github.com/users/anthonylouisburns/followers",
      "following_url": "https://api.github.com/users/anthonylouisburns/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonylouisburns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonylouisburns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonylouisburns/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonylouisburns/orgs",
      "repos_url": "https://api.github.com/users/anthonylouisburns/repos",
      "events_url": "https://api.github.com/users/anthonylouisburns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonylouisburns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T19:24:00Z",
    "updated_at": "2015-01-08T19:24:00Z",
    "author_association": "NONE",
    "body": "I have been working on a project for developing static websites using nbconvert - here is what I came up with http://www.anthonylouisburns.com/icontent/IContent.html and here is the github https://github.com/anthonylouisburns/icontent I would love any feedback anyone has - anthonylouisburns@gmail.com\n\\\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69239372",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-69239372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 69239372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjM5Mzcy",
    "user": {
      "login": "anthonylouisburns",
      "id": 3733797,
      "node_id": "MDQ6VXNlcjM3MzM3OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3733797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonylouisburns",
      "html_url": "https://github.com/anthonylouisburns",
      "followers_url": "https://api.github.com/users/anthonylouisburns/followers",
      "following_url": "https://api.github.com/users/anthonylouisburns/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonylouisburns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonylouisburns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonylouisburns/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonylouisburns/orgs",
      "repos_url": "https://api.github.com/users/anthonylouisburns/repos",
      "events_url": "https://api.github.com/users/anthonylouisburns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonylouisburns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T20:00:28Z",
    "updated_at": "2015-01-08T20:00:28Z",
    "author_association": "NONE",
    "body": "I am unclear what function would apply the custom css - If I knew I might\nbe able to work on it\n\nOn Thu Jan 08 2015 at 4:30:19 AM Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> We are still thinking about it. But we need a few motivated people to at\n> least work and maintain css.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5921#issuecomment-69155287.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69306847",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-69306847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 69306847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzA2ODQ3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T08:36:03Z",
    "updated_at": "2015-01-09T08:36:03Z",
    "author_association": "MEMBER",
    "body": "> I am unclear what function would apply the custom css - If I knew I might\n> be able to work on it\n\nI think the question is first what will we support ?\nDo we allow a list of predefined themes ? and where do we support it ?\n\nInstead of comment in the first MD cell, notebook support metadata, and we should store these MD there. Then there are question of do we allow a theme switcher ? Does the switch happend on nbconvert? and How?\n\nOn nbviewer in particular, do we allow externally hosted themes and css files ?\n\nHow do we handle backward/forward compatibility if we do ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69741745",
    "html_url": "https://github.com/ipython/ipython/issues/5921#issuecomment-69741745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5921",
    "id": 69741745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzQxNzQ1",
    "user": {
      "login": "anthonylouisburns",
      "id": 3733797,
      "node_id": "MDQ6VXNlcjM3MzM3OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3733797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anthonylouisburns",
      "html_url": "https://github.com/anthonylouisburns",
      "followers_url": "https://api.github.com/users/anthonylouisburns/followers",
      "following_url": "https://api.github.com/users/anthonylouisburns/following{/other_user}",
      "gists_url": "https://api.github.com/users/anthonylouisburns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anthonylouisburns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anthonylouisburns/subscriptions",
      "organizations_url": "https://api.github.com/users/anthonylouisburns/orgs",
      "repos_url": "https://api.github.com/users/anthonylouisburns/repos",
      "events_url": "https://api.github.com/users/anthonylouisburns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anthonylouisburns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T13:11:56Z",
    "updated_at": "2015-01-13T13:11:56Z",
    "author_association": "NONE",
    "body": "I think the source code for nbconvert, nbviewer and notebook should all if\npossible support maximal configurability whenever possible.\n\nHowever that does not mean that the default behaviour need support all this\n\nFor example the nbviewer website would probably not allow custom js and\nmight or might not allow custom css, but for a user running their own\nnbviewer server it should be trivial to enable custom css by metadata\n\nI think a them switcher would be really nice.\n\nOn Fri Jan 09 2015 at 3:36:20 AM Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> I am unclear what function would apply the custom css - If I knew I might\n> be able to work on it\n> \n> I think the question is first what will we support ?\n> Do we allow a list of predefined themes ? and where do we support it ?\n> \n> Instead of comment in the first MD cell, notebook support metadata, and we\n> should store these MD there. Then there are question of do we allow a theme\n> switcher ? Does the switch happend on nbconvert? and How?\n> \n> On nbviewer in particular, do we allow externally hosted themes and css\n> files ?\n> \n> How do we handle backward/forward compatibility if we do ?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/5921#issuecomment-69306847.\n"
  }
]
