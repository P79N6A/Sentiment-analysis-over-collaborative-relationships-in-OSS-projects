[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/476047795",
    "html_url": "https://github.com/ipython/ipython/issues/11664#issuecomment-476047795",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11664",
    "id": 476047795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjA0Nzc5NQ==",
    "user": {
      "login": "travigd",
      "id": 773453,
      "node_id": "MDQ6VXNlcjc3MzQ1Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/773453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travigd",
      "html_url": "https://github.com/travigd",
      "followers_url": "https://api.github.com/users/travigd/followers",
      "following_url": "https://api.github.com/users/travigd/following{/other_user}",
      "gists_url": "https://api.github.com/users/travigd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travigd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travigd/subscriptions",
      "organizations_url": "https://api.github.com/users/travigd/orgs",
      "repos_url": "https://api.github.com/users/travigd/repos",
      "events_url": "https://api.github.com/users/travigd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travigd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T04:04:11Z",
    "updated_at": "2019-03-25T04:04:11Z",
    "author_association": "NONE",
    "body": "The offending code is this function. It is called whenever there is an `await` statement at the top level.\r\nhttps://github.com/ipython/ipython/blob/f0f6cd8b8c9f74ea8b2c5e37b6132212ce661c28/IPython/core/async_helpers.py#L77-L91\r\n\r\nIt wraps a block in an async function and naively indents it by eight. I'm not super familiar with AST parsing (especially using the builtin `ast` module), but there isn't (or at the very least I don't see) a way to check if a given string is a triple-quote string via the `ast` module.\r\n\r\nIt'd be a shame if this were just silently broken. At the very least, we could warn if we detect the use of triple-quotes together with await (even a simple heuristic along the lines of `if '\"\"\"' in code: ...`, as well as only warning once to avoid spamming the user)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/476048104",
    "html_url": "https://github.com/ipython/ipython/issues/11664#issuecomment-476048104",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11664",
    "id": 476048104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjA0ODEwNA==",
    "user": {
      "login": "travigd",
      "id": 773453,
      "node_id": "MDQ6VXNlcjc3MzQ1Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/773453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travigd",
      "html_url": "https://github.com/travigd",
      "followers_url": "https://api.github.com/users/travigd/followers",
      "following_url": "https://api.github.com/users/travigd/following{/other_user}",
      "gists_url": "https://api.github.com/users/travigd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travigd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travigd/subscriptions",
      "organizations_url": "https://api.github.com/users/travigd/orgs",
      "repos_url": "https://api.github.com/users/travigd/repos",
      "events_url": "https://api.github.com/users/travigd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travigd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T04:06:39Z",
    "updated_at": "2019-03-25T04:06:39Z",
    "author_association": "NONE",
    "body": "(tag @Carreau since they seem to be the one most involved with asyncio in the REPL)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/476232359",
    "html_url": "https://github.com/ipython/ipython/issues/11664#issuecomment-476232359",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11664",
    "id": 476232359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjIzMjM1OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T14:53:33Z",
    "updated_at": "2019-03-25T14:53:33Z",
    "author_association": "MEMBER",
    "body": "Thanks for the ping. \r\n\r\nI'm hopping to get some of this natively handled by CPython at some point. I'll see if I can do something when I have some time. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/476248487",
    "html_url": "https://github.com/ipython/ipython/issues/11664#issuecomment-476248487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11664",
    "id": 476248487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjI0ODQ4Nw==",
    "user": {
      "login": "travigd",
      "id": 773453,
      "node_id": "MDQ6VXNlcjc3MzQ1Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/773453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travigd",
      "html_url": "https://github.com/travigd",
      "followers_url": "https://api.github.com/users/travigd/followers",
      "following_url": "https://api.github.com/users/travigd/following{/other_user}",
      "gists_url": "https://api.github.com/users/travigd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travigd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travigd/subscriptions",
      "organizations_url": "https://api.github.com/users/travigd/orgs",
      "repos_url": "https://api.github.com/users/travigd/repos",
      "events_url": "https://api.github.com/users/travigd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travigd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T15:28:54Z",
    "updated_at": "2019-03-25T15:28:54Z",
    "author_association": "NONE",
    "body": "Great! If there's anything I (or anyone else) can do, feel free to suggest next steps."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/476250250",
    "html_url": "https://github.com/ipython/ipython/issues/11664#issuecomment-476250250",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11664",
    "id": 476250250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjI1MDI1MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T15:33:04Z",
    "updated_at": "2019-03-25T15:33:04Z",
    "author_association": "MEMBER",
    "body": "Well if you figure out even a prototype of how we can do this... that would help. Or even just how to access or detect the strings that would need fixing. I'm going to assume we want to wrap those in some kind of `texwrap.dedent()` that only affect multiple lines strings?  And do not touch the first line? \r\n"
  }
]
