[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22558092",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22558092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22558092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU4MDky",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T11:19:57Z",
    "updated_at": "2013-08-13T11:19:57Z",
    "author_association": "MEMBER",
    "body": "This would require to read and parse all the notebook file. Which is not something we want to do.\nWhat would/could be done is a backend that store extra-information along the notebook that can be passed around.\n\nKeep in mind that dashbord is refreshed every few seconds and my notebook directory is ~ 300 Mb for example.\nthat would need to load and parse ~1GB of json per minute. Which is not realistic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22558665",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22558665",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22558665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU4NjY1",
    "user": {
      "login": "timmie",
      "id": 11860,
      "node_id": "MDQ6VXNlcjExODYw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timmie",
      "html_url": "https://github.com/timmie",
      "followers_url": "https://api.github.com/users/timmie/followers",
      "following_url": "https://api.github.com/users/timmie/following{/other_user}",
      "gists_url": "https://api.github.com/users/timmie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timmie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timmie/subscriptions",
      "organizations_url": "https://api.github.com/users/timmie/orgs",
      "repos_url": "https://api.github.com/users/timmie/repos",
      "events_url": "https://api.github.com/users/timmie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timmie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T11:32:39Z",
    "updated_at": "2013-08-13T11:32:39Z",
    "author_association": "NONE",
    "body": "> This would require to read and parse all the notebook file.\n\nMaybe. But just once after the notebook is closed. and only the first cell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22558892",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22558892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22558892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU4ODky",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T11:38:06Z",
    "updated_at": "2013-08-13T11:38:06Z",
    "author_association": "MEMBER",
    "body": "> But just once after the notebook is closed. \n\nAnd where do you store the result between server restart ?\n\n> and only the first cell.\n\nNo, when you read a json file you read it all. You are not even guaranteed that the first cell is at the beginning of the file.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22560508",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22560508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22560508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYwNTA4",
    "user": {
      "login": "timmie",
      "id": 11860,
      "node_id": "MDQ6VXNlcjExODYw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timmie",
      "html_url": "https://github.com/timmie",
      "followers_url": "https://api.github.com/users/timmie/followers",
      "following_url": "https://api.github.com/users/timmie/following{/other_user}",
      "gists_url": "https://api.github.com/users/timmie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timmie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timmie/subscriptions",
      "organizations_url": "https://api.github.com/users/timmie/orgs",
      "repos_url": "https://api.github.com/users/timmie/repos",
      "events_url": "https://api.github.com/users/timmie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timmie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:14:35Z",
    "updated_at": "2013-08-13T12:14:35Z",
    "author_association": "NONE",
    "body": "> And where do you store the result between server restart\n> maybe there could be a internal inventory file?\n> \n> No, when you read a json file you read it all. You are not even guaranteed that the first cell is at the beginning of the file.\n\nYou would just need to read:\n- existing notebooks after close\n- new notebooks after detection of the file\n\nDo you actually like the general idea?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22561118",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22561118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22561118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYxMTE4",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:28:11Z",
    "updated_at": "2013-08-13T12:28:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do you actually like the general idea?\n\nI do like the idea. Indeed, the current dashboard interface gets difficult to work with when there are more than a few notebooks. (Though this idea will not help that much, but rather will clutter up the interface even more! There could be a button to turn on and off the annotations.)\n\n> And where do you store the result between server restart ?\n\nIn some kind of `.ipython-db` file in the working directory? Is that possible / allowed / desirable?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22561131",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22561131",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22561131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYxMTMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:28:30Z",
    "updated_at": "2013-08-13T12:28:30Z",
    "author_association": "MEMBER",
    "body": "What about external program modifying notebook files ? How is the conserved after server restart ?\n\nI don't say that I don't like the idea, I just say that it is not reasonable to do.\n\nAlready notebook 'names' were stored in notebook document format and it was a mistake we are trying to get rid of.\nFurthermore notebook support metadata, so you could eventually have a description field. Which would be more relevant that \"guessing\" the description of the notebook based on the first cell.\n\nPeeking into the file to guess the description is technically not something we want to do. I've tried that on nbviewer to have a list of \"most popular\" notebook but it was much too complicated.\n\nWe even have a discussion between core dev on detecting the **language** of a notebook (nothing assume the notebook file stores Python) and the conclusion was that even if in some case this could be done, we will probably not implement it, and even though it will only return a probable answer. \n\nSo a full description is definitively not something which is technically reasonable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22561237",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22561237",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22561237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYxMjM3",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:31:07Z",
    "updated_at": "2013-08-13T12:31:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "A different solution: Have an editable field in the dashboard which associates the description to the notebook, and store this in a separate database (as I suggested above).\n\nThe problem with this is what to do when notebook filename changes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22561415",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22561415",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22561415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYxNDE1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:34:28Z",
    "updated_at": "2013-08-13T12:34:28Z",
    "author_association": "MEMBER",
    "body": "> In some kind of .ipython-db file in the working directory? Is that possible / allowed / desirable?\n\nNo it is not , if you followed the Multi-directory/Project discussion in berkley a few weeks ago we spoke about it.\nBackend that store file could do such a thing, but it will **not** be in the core.\n\nFor 2.0 we will much probably have a backend have the ability to send (notebook-content+metada) , and you could stuff anything in metadata like \"file-modification date\", \"description\", \"icon-color\"... etc. but storing anything related to how stuff should be displayed in the dashboard inside the notebook file format is out of question.\n\nThe backend can do whatever it wishes with the data, store it in sqlite/XML/multiple file, or add a description field in metadata if you wish, but that will not be in the core.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22562105",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22562105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22562105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYyMTA1",
    "user": {
      "login": "timmie",
      "id": 11860,
      "node_id": "MDQ6VXNlcjExODYw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timmie",
      "html_url": "https://github.com/timmie",
      "followers_url": "https://api.github.com/users/timmie/followers",
      "following_url": "https://api.github.com/users/timmie/following{/other_user}",
      "gists_url": "https://api.github.com/users/timmie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timmie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timmie/subscriptions",
      "organizations_url": "https://api.github.com/users/timmie/orgs",
      "repos_url": "https://api.github.com/users/timmie/repos",
      "events_url": "https://api.github.com/users/timmie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timmie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:48:08Z",
    "updated_at": "2013-08-13T12:48:08Z",
    "author_association": "NONE",
    "body": "Ok, concluding:\n\nI could only use a lengthy name.\n\nIf so, then we coudl close here...and wait how the metadata thing develops.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22563060",
    "html_url": "https://github.com/ipython/ipython/issues/4007#issuecomment-22563060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4007",
    "id": 22563060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYzMDYw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T13:04:49Z",
    "updated_at": "2013-08-13T13:04:49Z",
    "author_association": "MEMBER",
    "body": "> and wait how the metadata thing develops.\n\nHave a look at https://github.com/ipython/ipython/pull/3619\n"
  }
]
