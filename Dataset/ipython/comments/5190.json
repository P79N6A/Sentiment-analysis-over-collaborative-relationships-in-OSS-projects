[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36091655",
    "html_url": "https://github.com/ipython/ipython/pull/5190#issuecomment-36091655",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5190",
    "id": 36091655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDkxNjU1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T05:13:49Z",
    "updated_at": "2014-02-26T05:13:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Example:\n\n```\nc.NotebookApp.webapp_settings = {}\nc.NotebookApp.webapp_settings['custom_handlers'] = ['nbx.handlers']\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36408999",
    "html_url": "https://github.com/ipython/ipython/pull/5190#issuecomment-36408999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5190",
    "id": 36408999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDA4OTk5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T00:29:23Z",
    "updated_at": "2014-03-01T00:29:23Z",
    "author_association": "MEMBER",
    "body": "I have very mixed feelings about adding this capability. The problem is that it is a slippery slope - by allowing custom handlers, we will have to add a flurry of other extension points to allow these custom handlers to do whatever they want. In the end, `notebookapp.py` would end up being a fully customizable web app framework. I am -1 on that trajectory.\n\nThe simple answer is to just say: if you want other logic/handlers you are writing a custom web app. Just make a copy of `notebookapp.py` and customize it to your hearts content. You can even import that classes defined in it, subclass methods, etc. I would be +1 on refactoring the classes/methods in `notebookapp.py` to make this type of customization easier.\n\nCan you explore this alternate route?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36414235",
    "html_url": "https://github.com/ipython/ipython/pull/5190#issuecomment-36414235",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5190",
    "id": 36414235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDE0MjM1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T02:57:59Z",
    "updated_at": "2014-03-01T02:57:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "That is the path I went down already. https://github.com/dalejung/ipycli. I'm not apprehensive of going off the reservation. However, it's easier to test and share feature enhancements via plugins. \n\nI could firewall the custom handler behind a `/custom` if you're worried about clashing with future api changes. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36414668",
    "html_url": "https://github.com/ipython/ipython/pull/5190#issuecomment-36414668",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5190",
    "id": 36414668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDE0NjY4",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T03:17:59Z",
    "updated_at": "2014-03-01T03:17:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "As for a usecase. `ipycli` has a standalone handler that allows objects within a kernel to essentially serve a webpage. The uri was `/standalone/{notebook_id}/{object_name}/{object_attr}`. I used to do analysis in a notebook and then link out to a full page interactive chart using `d3.js`. \n\nhttp://nbviewer.ipython.org/gist/dalejung/8674170 \n\nI think this PR, alongside #5169, is all I need to port over. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36945172",
    "html_url": "https://github.com/ipython/ipython/pull/5190#issuecomment-36945172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5190",
    "id": 36945172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQ1MTcy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-06T22:23:45Z",
    "updated_at": "2014-03-06T22:23:45Z",
    "author_association": "MEMBER",
    "body": "We talked today at the dev meeting about this idea. We feel that it is better to encourage subclassing of the notebookapp in cases like this. This will provide much more flexibility for you and will allow to to keep our core code more simple and maintainable. Because of this, I am going to close this PR.\n\nHowever, we also decided that we want to improve the design of the notebookapp to make the API more stable and easier to subclass. We encourage you to look at your code in this light. Are there things we can do to make it easier for you to subclass? If so, maybe open an issue describing what needs to be done. We can move to implementation from there.\n"
  }
]
