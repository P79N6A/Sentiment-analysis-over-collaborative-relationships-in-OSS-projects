[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7414079",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7414079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7414079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTQwNzk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-31T23:17:11Z",
    "updated_at": "2012-07-31T23:22:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver What's the best way to alert the user if the annotated HTML file cannot be opened?  Do we have some display class for that? Or do I print to stderr?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7414314",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7414314",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7414314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTQzMTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-31T23:31:00Z",
    "updated_at": "2012-07-31T23:31:00Z",
    "author_association": "MEMBER",
    "body": "Print to stderr, I think. Or maybe just let the exception raise. Is there any obvious reason it wouldn't be able to open the file?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7414353",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7414353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7414353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTQzNTM=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-31T23:33:46Z",
    "updated_at": "2012-07-31T23:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, with Cython < 0.15.1, if the user compiles the same bit of Cython code first without and then with `--annotate`, `cythonize` doesn't successfully rebuild the file (and hence doesn't produce the annotated html).\n\nI might be able to work around it, haven't looked into it yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7414427",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7414427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7414427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTQ0Mjc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-31T23:38:56Z",
    "updated_at": "2012-07-31T23:38:56Z",
    "author_association": "MEMBER",
    "body": "OK, then I guess a message to stderr is in order.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7415121",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7415121",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7415121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTUxMjE=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T00:24:59Z",
    "updated_at": "2012-08-01T00:24:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg Since you wrote the original %cython magic functions, do you want to look this one over too?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7418780",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7418780",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7418780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTg3ODA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T05:38:56Z",
    "updated_at": "2012-08-01T05:38:56Z",
    "author_association": "MEMBER",
    "body": "I will try to have a look soon, thanks!\n\nOn Tue, Jul 31, 2012 at 5:25 PM, Bradley M. Froehle\nreply@reply.github.com\nwrote:\n\n> @ellisonbg Since you wrote the original %cython magic functions, do you want to look this one over too?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/2225#issuecomment-7415121\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7433731",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7433731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7433731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzM3MzE=",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T17:24:12Z",
    "updated_at": "2012-08-01T17:24:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Without the module name twiddling I did in #2147 the `--force` flag doesn't work - I get LinkErrors after the source has been compiled the first time which means you can't annotate an already compiled cell.\n\nThis issue is present in master, but means that to recompile the source you either need to restart the kernel or alter the source in some way so its hash is different.\n\nAlso the `link-args` are missing from this version, but perhaps it's good practice to keep that a separate issue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7433923",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7433923",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7433923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzM5MjM=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T17:31:10Z",
    "updated_at": "2012-08-01T17:31:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you share a copy of the traceback?  I don't have that same problem in Ubuntu 12.04.  I assume you are in Windows?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7434312",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7434312",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7434312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzQzMTI=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T17:42:55Z",
    "updated_at": "2012-08-01T17:42:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also I cherry-picked your link-args option into this branch for your ease.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7451504",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7451504",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7451504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTE1MDQ=",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T10:07:16Z",
    "updated_at": "2012-08-02T10:07:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep, I'm using win32 Python 2.7.3 on an x64 box.\n\nI put a copy of the traceback at https://gist.github.com/3235999/.\n\nI think the pertinent information however is what is printed out in the console where I started the notebook (cython example) I used for testing:\n\n```\nc:/dev/bin/mingw32/bin/../lib/gcc/mingw32/4.6.1/../../../../mingw32/bin/ld.exe: cannot open output file C:\\Users\\dhirschfeld\\.ipython\\cython\\_cython_magic_6eb34c8621696ead6242b637e2311da9.pyd: Permission denied\ncollect2: ld returned 1 exit status\n```\n\nUsing process explorer I can see that python.exe is holding a reference to that pyd file so I think it can't be overwritten when you try to recompile the code with the same filename.\n\nJust to be clear, to recreate the problem I run the cell magic once which works fine, then I run again with the `--force` flag and I get the permission denied error on the pyd.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7458029",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7458029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7458029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTgwMjk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T15:11:41Z",
    "updated_at": "2012-08-02T15:12:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay.  Well the solution of adding a `-force` suffix to the filename isn't necessarily correct either, as that will then break on the third time around.\n\nPerhaps we should `os.remove` the current `.so` (i.e., `.dll` ?) file first?  Or will that be impossible, too?  Or should we just not allow `--force` anyway?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7460586",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7460586",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7460586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjA1ODY=",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T16:31:35Z",
    "updated_at": "2012-08-02T16:31:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd come to the same conclusion that it would only postpone the link error, but I was sure I had tested it and it worked. It turns out that was only because the `args.force` wasn't being respected when passed in as part of the context and I was picking up an old .html file from my .ipython/cython directory.\n\n`os.remove` unfortunately gives the same access denied error:\n\n```\nimport os\nos.remove(r'C:\\Users\\dhirschfeld\\.ipython\\cython\\_cython_magic_6eb34c8621696ead6242b637e2311da9.pyd')\n---------------------------------------------------------------------------\nWindowsError                              Traceback (most recent call last)\n<ipython-input-4-5ab4fa3a02de> in <module>()\n      1 import os\n----> 2 os.remove(r'C:\\Users\\dhirschfeld\\.ipython\\cython\\_cython_magic_6eb34c8621696ead6242b637e2311da9.pyd')\n\nWindowsError: [Error 5] Access is denied: 'C:\\\\Users\\\\dhirschfeld\\\\.ipython\\\\cython\\\\_cython_magic_6eb34c8621696ead6242b637e2311da9.pyd'\n```\n\nA more robust solution which works well for me is:\n\n``` python\nif force or not os.path.isfile(module_path):\n    if os.path.isfile(module_path):\n        module_name += datetime.now().strftime('_%Y%m%dT%H%M%S')\n        module_path = os.path.join(lib_dir, module_name+so_ext)\n```\n\n...with the appropriate `from datetime import datetime` at the top of the file.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7461456",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7461456",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7461456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjE0NTY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T17:00:56Z",
    "updated_at": "2012-08-02T17:28:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, timestamping is robust, but interferes with the desired caching properties.  Perhaps only with `--force` as you suggest.\n\nLet's think about this for a bit so we can settle on a good solution.\n\nCertainly we could separate the cythonize and compile steps, which would remove some interference.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7461750",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7461750",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7461750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjE3NTA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T17:12:28Z",
    "updated_at": "2012-08-02T17:12:28Z",
    "author_association": "MEMBER",
    "body": "Is there any way to force Python to let go of the pyd file so it can be overwritten? If we drop any references to the module, would it unload it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7462554",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7462554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7462554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI1NTQ=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T17:40:53Z",
    "updated_at": "2012-08-02T17:40:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver There isn't any sane way to unload modules in Python.  In this case we could delete the module, hope that we've dropped all references, and then use cytpes to call `FreeLibrary` to unload the module.  Too complicated to make robust.\n\nWhat I'll suggest is the following:\n\n```\nif args.force:\n    {add time.time() or similar to the key we hash to get the module name}\n\nif args.annotate and not exists(html_source):\n    {run cythonize with force=True, annotate=True}\nelif not exists(compiled_module):\n    {run cythonize}\n\nif not exists(compiled_module):\n    {run build_ext}\n\n{load module, import all of its names}\n\nif args.annotate:\n    {return annotated HTML source}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7462760",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7462760",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7462760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI3NjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T17:48:18Z",
    "updated_at": "2012-08-02T17:48:18Z",
    "author_association": "MEMBER",
    "body": "I had a feeling that might be the case. Never mind, carry on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7462837",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7462837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7462837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI4Mzc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T17:50:29Z",
    "updated_at": "2012-08-02T17:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, for another issue, our code to determine the extension of the compiled file is [not robust](http://mail.python.org/pipermail/cython-devel/2012-July/002934.html).\n\nWe should probably use something similar to [Cython](https://github.com/cython/cython/commit/0db6c7090c519c818a51b8dc8af3ad139be8d9ea) to figure it out instead.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7485999",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7485999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7485999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODU5OTk=",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-03T15:20:08Z",
    "updated_at": "2012-08-03T15:20:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your proposal sounds good to me - I don't think there's any good way around having to recompile a forced compile. Given that it's a cell magic the time to (re-)compile shouldn't be to onerous.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7490389",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7490389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7490389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTAzODk=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-03T18:26:14Z",
    "updated_at": "2012-08-03T18:26:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pinging @dhirschfeld and @ellisonbg.  I think this revised version of `%%cython` is nearly complete and ready to go.  Please test it at your convenience.\n\nI've implemented `--force` by adding `time.time()` to the hashed key used to determine the module name, and the overall logic is similar to my proposal a few comments ago.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7513020",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7513020",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7513020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTMwMjA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T20:51:11Z",
    "updated_at": "2012-08-05T20:51:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, of course.  Fixed by setting `force = True` as you suggest.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7630127",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7630127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7630127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzAxMjc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-09T23:26:12Z",
    "updated_at": "2012-08-09T23:26:12Z",
    "author_association": "MEMBER",
    "body": "I tested this and looked over the code.  My only comment is that the .c files linked to in the annotation HTML has a URL that is unreachable.  For it to work it would need to have a URL that begins with `files`.  But maybe that is outside the scope of this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7630135",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7630135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7630135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzAxMzU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-09T23:26:37Z",
    "updated_at": "2012-08-09T23:26:37Z",
    "author_association": "MEMBER",
    "body": "Also, what is the status of the other comments on the PR.  Is everything else ready?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7630847",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7630847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7630847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzA4NDc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T00:09:53Z",
    "updated_at": "2012-08-10T00:09:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I think everything else here is ready.  I just pushed a little commit to address the link to the `.c` file.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7630872",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7630872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7630872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzA4NzI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T00:11:22Z",
    "updated_at": "2012-08-10T00:11:22Z",
    "author_association": "MEMBER",
    "body": "I would go ahead with the merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7633355",
    "html_url": "https://github.com/ipython/ipython/pull/2225#issuecomment-7633355",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2225",
    "id": 7633355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzMzNTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T03:22:19Z",
    "updated_at": "2012-08-10T03:22:19Z",
    "author_association": "MEMBER",
    "body": "Sorry I didn't pitch in during review, and this is something that can easily be done now... I think this is an _awesome_ improvement, but it would be good to update the example notebook we have, showing these features to the users.  I hope very soon we'll have things clean enough to start building our example notebooks as part of our documentation, and even in their current form they serve as great mini-tutorials of our various magics and extensions.  So it would be great to update the cython one with a brief demo of these new capabilities.\n\nThanks again for the great improvement, I think the cython magic is now pretty much feature-complete, at least in the key functionality.\n"
  }
]
