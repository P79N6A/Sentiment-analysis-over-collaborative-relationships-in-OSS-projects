[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48831731",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-48831731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 48831731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODMxNzMx",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-13T04:47:16Z",
    "updated_at": "2014-07-13T04:47:16Z",
    "author_association": "MEMBER",
    "body": "@jdfreder, @ChakriCherukuri: can you take a look at this and tell me what you think?  I still need to write some tests; I'll figure out how to do that next week.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48832364",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-48832364",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 48832364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODMyMzY0",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-13T05:31:59Z",
    "updated_at": "2014-07-13T05:31:59Z",
    "author_association": "MEMBER",
    "body": "Here's a more complete test:\n\n``` javascript\n%%javascript\n    var DisplayView = IPython.DOMWidgetView.extend({\n        update: function(renderer) {\n            this.$el.find('pre').text(JSON.stringify(this.model.toJSON(), null, 2));\n        },\n        render: function(renderer) {\n            this.$el.append('<pre>');\n            this.update();\n        }\n    });\nIPython.WidgetManager.register_widget_view('DisplayView', DisplayView);\n```\n\n``` python\ndef np_to_list(a):\n    if a is not None:\n        return a.tolist()\ndef np_from_list(a):\n    if a is not None:\n        return np.array(a)\n\nclass NP(Instance):\n    klass = np.ndarray\n    metadata = {'to_json': np_to_list,\n                'from_json': np_from_list}\nclass a(Widget):\n    _view_name = Unicode('DisplayView', sync=True)\n    arr = Instance(np.ndarray, sync=True, to_json=np_to_list, from_json = np_from_list)\n    np = NP(allow_none=False, args=(0,),sync=True)\nb=a()\nb.arr = np.array([[1,0],[0,1]])\ndisplay(b)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49072157",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49072157",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49072157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDcyMTU3",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-15T18:22:04Z",
    "updated_at": "2014-07-15T18:22:04Z",
    "author_association": "MEMBER",
    "body": "Thinking more generically, an extension of this is to give the user power to control both endpoints of the communication.  This pull request only allows control over the python end.  There will certainly be situations where it would be useful to control both ends of the communication, for example to implement smart syncing of an attribute's values by transferring only differences.  We can give the user ability to control this on a per-field basis if some metadata for each field is transferred when the model is initially set up.  The widget manager on the javascript side can have a registry of model field json handlers.  This is probably out of scope for this PR.\n\nAnother issue is that maybe we want to transfer the field contents using binary messages, using #6110.  We'd have to extend widget messages to support #6110, then, so that also is probably not in the scope of this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49082023",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49082023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49082023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDgyMDIz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-15T19:39:41Z",
    "updated_at": "2014-07-15T19:39:41Z",
    "author_association": "MEMBER",
    "body": "Strong -1 on that. It would make the widget attributes non stateful.\n\nSent from my iPhone\n\n> On Jul 15, 2014, at 11:22 AM, Jason Grout notifications@github.com wrote:\n> \n> Thinking more generically, an extension of this is to give the user power to control both endpoints of the communication. This pull request only allows control over the python end. There will certainly be situations where it would be useful to control both ends of the communication, for example to implement smart syncing of an attribute's values by transferring only differences. We can give the user ability to control this on a per-field basis if some metadata for each field is transferred when the model is initially set up. The widget manager on the javascript side can have a registry of model field json handlers. This is probably out of scope for this PR.\n> \n> Another issue is that maybe we want to transfer the field contents using binary messages, using #6110. We'd have to extend widget messages to support #6110, then, so that also is probably not in the scope of this PR.\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49117969",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49117969",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49117969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTE3OTY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T02:49:19Z",
    "updated_at": "2014-07-16T02:49:19Z",
    "author_association": "MEMBER",
    "body": "> Strong -1 on that. It would make the widget attributes non stateful.\n\nI'm not convinced that either of his suggestions would make widgets not stateful.  In the first he is proposing a a more generic solution to the same problem here, by sending a map of traits and types to the JavaScript side it would just make the JS aware of the types (am I right @jasongrout ?).  In the other, he is just suggesting replacing the text JSON messages, or relevant parts of them, with binary equivalents.  \n\nCan you explain your reasoning for why this would make the widgets any less stateful than they are now?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49118774",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49118774",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49118774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTE4Nzc0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T03:05:21Z",
    "updated_at": "2014-07-16T03:05:21Z",
    "author_association": "MEMBER",
    "body": "The red flag for me was this statement: \"for example to implement smart\nsyncing of an attribute's values by transferring only differences.\" That\nbasically allows each attribute to set up a custom message oriented\nprotocol. There is no way to enforce those to be stateful.\n\nOn Tue, Jul 15, 2014 at 7:49 PM, Jonathan Frederic <notifications@github.com\n\n> wrote:\n> \n> Strong -1 on that. It would make the widget attributes non stateful.\n> \n> I'm not convinced that either of his suggestions would make widgets not\n> stateful. In the first he is proposing a a more generic solution to the\n> same problem here, by sending a map of traits and types to the JavaScript\n> side it would just make the JS aware of the types (am I right @jasongrout\n> https://github.com/jasongrout ?). In the other, he is just suggesting\n> replacing the text JSON messages, or relevant parts of them, with binary\n> equivalents.\n> \n> Can you explain your reasoning for why this would make the widgets any\n> less stateful than they are now?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6128#issuecomment-49117969.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49124968",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49124968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49124968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTI0OTY4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T05:27:35Z",
    "updated_at": "2014-07-16T05:27:35Z",
    "author_association": "MEMBER",
    "body": "At some point, on some level, I think we are going to have to address the issue that we don't need to transfer large amounts of data to sync small changes if we are going to scale the amount of data a widget can handle.  We could require that the attributes themselves be stateful, even if the syncing protocol is smart about syncing.  (\"require\" as in we say in the spec that they \"must\" be so).  I agree that this needs to be thought through carefully.\n\nBut regardless, the other issue of transferring binary data would also be good to look into; at least doing some benchmarks to see if it makes sense.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49125321",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49125321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49125321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTI1MzIx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T05:34:38Z",
    "updated_at": "2014-07-16T05:34:38Z",
    "author_association": "MEMBER",
    "body": "I completely agree that some widgets will need to do smart syncing. The way\nI have envisioned that is that there will be done through the custom\nmessage API on a per widget basis. This type of logic is very special case.\nBut I think it is important to keep the regular `sync=True` traits fully\nstateful and not incremental. Thus, if you want to build a full blown\nspreadsheet widget, the spreadsheet data would probably not be handled\nthrough `sync=True` attributes. The only sane way of doing that in a fully\nstateful way is to make each piece of state a separate attribute or\nsubwidget. But that is crazy compared to just passing messages when the\nnumber of states gets high. This is why I am still a bit hesitant about\nallowing custom JSON handling for container types like numpy arrays, etc. I\ndon't think things like that should _ever_ be treated as a big state blob\nsent in one shot using the automatic synching.\n\nOn Tue, Jul 15, 2014 at 10:27 PM, Jason Grout notifications@github.com\nwrote:\n\n> At some point, on some level, I think we are going to have to address the\n> issue that we don't need to transfer large amounts of data to sync small\n> changes if we are going to scale the amount of data a widget can handle. We\n> could require that the attributes themselves be stateful, even if the\n> syncing protocol is smart about syncing. (\"require\" as in we say in the\n> spec that they \"must\" be so). I agree that this needs to be thought through\n> carefully.\n> \n> But regardless, the other issue of transferring binary data would also be\n> good to look into; at least doing some benchmarks to see if it makes sense.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6128#issuecomment-49124968.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49173950",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49173950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49173950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTczOTUw",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T14:32:37Z",
    "updated_at": "2014-07-16T14:32:37Z",
    "author_association": "MEMBER",
    "body": "I think I understand the difference in our positions.  If I understand correctly, you are saying that custom communication/syncing should happen at the widget level, whereas I was proposing that it happen at the trait level.  I don't know which is better.\n\nRegardless, this PR should be unaffected, I think.  This PR is merely providing convenient serialization for objects that IPython doesn't know how to serialize to json.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49187822",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49187822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49187822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTg3ODIy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T16:04:30Z",
    "updated_at": "2014-07-16T16:04:30Z",
    "author_association": "MEMBER",
    "body": "I think that is a good summary of the two approaches and agree this PR is\nnot affected.\n\nOn Wed, Jul 16, 2014 at 7:32 AM, Jason Grout notifications@github.com\nwrote:\n\n> I think I understand the difference in our positions. If I understand\n> correctly, you are saying that custom communication/syncing should happen\n> at the widget level, whereas I was proposing that it happen at the trait\n> level. I don't know which is better.\n> \n> Regardless, this PR should be unaffected, I think. This PR is merely\n> providing convenient serialization for objects that IPython doesn't know\n> how to serialize to json.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6128#issuecomment-49173950.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49365200",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49365200",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49365200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzY1MjAw",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-17T21:02:29Z",
    "updated_at": "2014-07-17T21:02:29Z",
    "author_association": "MEMBER",
    "body": "I incorporated the changes from #6152 into this PR\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49887389",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49887389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49887389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODg3Mzg5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T15:10:35Z",
    "updated_at": "2014-07-23T15:12:16Z",
    "author_association": "MEMBER",
    "body": "ping @jdfreder on this---any more comments, or does it look good?\n\nEdit: ah, I need to write some tests.  I'll try to figure that out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49916803",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49916803",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49916803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTE2ODAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T18:42:55Z",
    "updated_at": "2014-07-23T18:42:55Z",
    "author_association": "MEMBER",
    "body": "Some comments:\n- I think that for now we should really focus on JSON serialization. Keep in mind that all widgets need to work across kernels in different languages. That makes binary-based widget messages very difficult to support other than for language independent binary data (such as images). Trying to send a numpy array to JavaScript in binary form, in my mind, is a massive abstraction breakage. Based on this, the names of the methods should be `from/to_json`.\n- As mentioned above, tests are needed.\n- Overall, I am fine with the API though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49922131",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49922131",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49922131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTIyMTMx",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T19:23:07Z",
    "updated_at": "2014-07-23T19:29:01Z",
    "author_association": "MEMBER",
    "body": "It looks like there are no tests for widgets (other than the interactive/interact functions).  That's a big enough project to be a separate pull request.  So I think this is actually ready to merge, if it looks good to you guys.  It apparently looks good to Travis (thanks again, @jdfreder)\n\nEdit: I see @ellisonbg has been reviewing this; thanks!\n\nEdit: As @ellisonbg points out, there are tests for traitlets, so I'll add some tests there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49923821",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49923821",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49923821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTIzODIx",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T19:36:17Z",
    "updated_at": "2014-07-23T19:36:17Z",
    "author_association": "MEMBER",
    "body": "> That makes binary-based widget messages very difficult to support other than for language independent binary data (such as images). Trying to send a numpy array to JavaScript in binary form, in my mind, is a massive abstraction breakage.\n\nWhat is the difference between sending an image and sending an buffer representing a list of floats?  If anything, the buffer of floats is more language independent than the image data.\n\nRegardless, the names of the methods are not so important to me.  `serialize` and `deserialize` were more elegant to me, but I'm willing to change them back to the from/to_json names we had before.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49930057",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49930057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49930057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMwMDU3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T20:25:50Z",
    "updated_at": "2014-07-23T20:25:50Z",
    "author_association": "MEMBER",
    "body": "The big different is that browsers have builtin capabilitiy to handle\nbinary image data (base64 encoded at least). For other binary data, less\nso. Also, different languages/kernels don't agree on the binary format of\nnumerical arrays.\n\nI think there are two issue: should we support binary comm/widget message.\nI just posted on @minrk PR about the binary comm message about that. Let's\nfigure that our first and then name these methods.\n\nOn Wed, Jul 23, 2014 at 12:36 PM, Jason Grout notifications@github.com\nwrote:\n\n> That makes binary-based widget messages very difficult to support other\n> than for language independent binary data (such as images). Trying to send\n> a numpy array to JavaScript in binary form, in my mind, is a massive\n> abstraction breakage.\n> \n> What is the difference between sending an image and sending an buffer\n> representing a list of floats? If anything, the buffer of floats is more\n> language independent than the image data.\n> \n> Regardless, the names of the methods are not so important to me. serialize\n> and deserialize were more elegant to me, but I'm willing to change them\n> back to the from/to_json names we had before.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6128#issuecomment-49923821.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49930576",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49930576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49930576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMwNTc2",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T20:29:58Z",
    "updated_at": "2014-07-23T20:29:58Z",
    "author_association": "MEMBER",
    "body": "> I just posted on @minrk PR about the binary comm message about that. Let's\n> figure that our first and then name these methods.\n\nI think I'd rather change these trait names back, merge this PR, and address the binary issue later.  After thinking about it, I think handling the binary issue should be dealt with at a lower level than this; at the level where we are calling dumps on a json dict.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49931103",
    "html_url": "https://github.com/ipython/ipython/pull/6128#issuecomment-49931103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6128",
    "id": 49931103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMxMTAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T20:34:12Z",
    "updated_at": "2014-07-23T20:34:12Z",
    "author_association": "MEMBER",
    "body": "Going to let Travis finish and then merge if all OK.\n"
  }
]
