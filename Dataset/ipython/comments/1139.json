[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3105508",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3105508",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3105508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDU1MDg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-12T12:45:32Z",
    "updated_at": "2011-12-12T12:45:32Z",
    "author_association": "MEMBER",
    "body": "Cut his it 2 PR.\nThis part implement the hooking mechanisme and show that it works by using it to bind `kernel_status_wiget` and the `(busy)` indicator in the window title bar as 2 separate things without any reference into he kernel core.\n\nThe \"webkit notification\" part will come in a separate PR as a plugin binding o the hooking mecanisme\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3109248",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3109248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3109248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDkyNDg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-12T17:28:58Z",
    "updated_at": "2011-12-12T17:28:58Z",
    "author_association": "MEMBER",
    "body": "Can you describe what this does exactly?  I ran the notebook with this branch and didn't see anything different...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3112538",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3112538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3112538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTI1Mzg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-12T20:53:32Z",
    "updated_at": "2011-12-12T20:53:32Z",
    "author_association": "MEMBER",
    "body": "Yes,of course. I've cut it in half a few hour ago (internal vs visible) and haven't re-push yet the visible part, which is here :\n\nhttps://github.com/Carreau/ipython/tree/nonly\nStill buggy on edge cases. Even with this branch, if not on chome you won't see any difference, and with chrome you have to check the checkbox `enable notification` in the config pannel on the left, then run something which last longer than 15 sec,  like `time.sleep(20)`\n\nI wanted to  add notification ( like growl on os x, or the semi translucent thing on ubuntu) you've got for native app.\nApparently it's possible for some browser (chrome at least) through the webkit notification API.\nI wanted something non-intrusive (for the code) so I've reworked the kernel internal to allow custom hook to trigger action\n\nNow instead of explicitely calling `IPython.kernel_status_widget.set_status_busy()`,  `kernel.js` emits `status_busy`  which  `kernel_status_widget` listen on, and do its own interface changing...etc.\n\nMoreover `kernel_status_widget`can now be instanciated anywhere; it can even (what it does now) instanciate itself in in own file and connect to the signal. remove the file name from `template/notebook.html` it will not load and the rest of js will not complain.\n\nThe other half (not in this PR) is just another `kernel_status_widget` with a more complex logic to pop up notification on the desktop when the kernel has been busy for long. It doesn't require more integration into the kernel and is activated/desactivated just by loading/not loading the file. That might be user configurable with one PR which timo (I think) is working on (kind of overlay to 'merge' two or more templates folder ) this might allow custom user js to be integrated without having to mess up with the actual code.\n\nIf you want to see the difference with just this PR, in a js console, you can do smth like\n\n`IPython.hook.connect('kernel_idle',function(){console.log('my message telling me the kernel is idle')})`\nand after every cell execusion, `my message telling me the kernel is idle` will appear in a console.\n\nActually that what is done now in this PR for `(busy)` in windows title, and could be later deported in a conf file.\n\nUltimate goal should be to have more 'signal' like `websoket_connexion_closed` `heartbeat_lost` to allow developpement of custom js-extension that for example save after each cell execusion, or reload notebook if kernel connexion drop, that user can customize in a `user.js` for example.\n\nhope this enlighten the goal of this PR, sorry not to have been clear at first.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3168789",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3168789",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3168789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg3ODk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-15T20:51:50Z",
    "updated_at": "2011-12-15T20:51:50Z",
    "author_association": "MEMBER",
    "body": "Rather than create our own hook system, we should use jQuery's event system.  I like the idea of cleaning up the kernel status code to use more of an event based model though.\n\nOn the usage of notifications, I am not particularly fond of notifications that appear outside the browsers main content window, especially if those notifications are not cross browser.  I would much rather have us spend time improving the in page notifications, which definitely needs to be done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3174164",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3174164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3174164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQxNjQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-16T07:05:59Z",
    "updated_at": "2011-12-16T07:05:59Z",
    "author_association": "MEMBER",
    "body": "I might have missread, but I thought jQuery's event system could not be attached to any function. I'll try to re-take a look at it and try. There is also some other Libs on the net which allow signal/slot but are overkill with their functionality.\n\nI know that you (and some other) don't like notification/busy in status bar, and that's why I have split this PR. I never thought of having the notification part in the core, but maybe in `docs/example/notebook/js/`, and still having an easy customization.\n\nI can assure you that those notification are of great help when I've notebook running on background for long, but I totally understand that they could be annoying.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3174261",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3174261",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3174261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQyNjE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-16T07:19:33Z",
    "updated_at": "2011-12-16T07:19:33Z",
    "author_association": "MEMBER",
    "body": "On Thu, Dec 15, 2011 at 11:06 PM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> I might have missread, but I thought jQuery's event system could not be attached to any function. I'll try to re-take a look at it and try. There is also some other Libs on the net which allow signal/slot but are overkill with their functionality.\n\nI am pretty sure it is completely general.  Have a look and let us\nknow what you find.\n\n> I know that you (and some other) don't like notification/busy in status bar, and that's why I have split this PR. I never thought of having the notification part in the core, but maybe in `docs/example/notebook/js/`, and still having an easy customization.\n\nOK, I think that makes sense.  And using events can allow this type of\nthing to be loosely coupled to the rest of the code base.\n\n> I can assure you that those notification are of great help when I've notebook running on background for long, but I totally understand that they could be annoying.\n\nYep.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1139#issuecomment-3174164\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3180761",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3180761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3180761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA3NjE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-16T18:25:10Z",
    "updated_at": "2011-12-16T18:25:10Z",
    "author_association": "MEMBER",
    "body": "So, I'll looked at jQuery event. \npositive part:\n- You can bind almost anything to anything\n- Code is already written\n- emission and binding should be made on/by the same object\n  \n  => more readable, each object send signal so you know better to what you are binding. You can have object with many instance like cell and bind to general signal of a particular cell.\n\nnegative part, of using it \"as is\" \n- you can't listen for a signal that might be send by a non-yet existing object  \n- Signal are **blocking** until all listener execution is done, in order they where bind.\n- If one listener has an exception raising, rest of code won't be executed\n\nI may Have missed some option in jQuery, but I think we need at least a wrapper to have non-blocking signal and catch any exception raised by custom listener that may crash, eventually un-binding them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3344407",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3344407",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3344407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ0MDc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-03T19:02:46Z",
    "updated_at": "2012-01-03T19:02:46Z",
    "author_association": "MEMBER",
    "body": "I am not sure what you mean by a non-blocking signal.  Can you clarify this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3345479",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3345479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3345479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDU0Nzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-03T20:21:05Z",
    "updated_at": "2012-01-03T20:21:05Z",
    "author_association": "MEMBER",
    "body": "With jquerry event, all 'connected' function are executed sequencially in order, and then execution of the code after `trigger()` is resumed. (like inserting the connected function at the point where triggerd is called, instead of executing them in a  parallel thread)\n\n``` javascript\nsomecorefunction = function(){\n    ...\n    execution_request.trigger()  //signal emited\n    ...[do send json to kernel]\n    }\n\nsome_plugin_function = function(){\n    connect(firstthing,kernel.execution.request);   //first connexion\n    connect(otherthing,kernel.execution.request); //second connexion\n    }\n\nsome_plugin_function();\nsomecorefunction();\n```\n\nWith blocking signal like jquerry event, `firstthing` will execute , **then if it does not fail**  `otherthing` will execute (ok, order of plugin we might not really care) but `[do send json to kernel]` will **only** be executed **after** `firstthing` **and**  `otherthing` have returned.\n\nWith non blocking signal `[do send json to kernel]` would continue executing in whatever state are `first` and `secondthing`.\n\nHope this make more sens. I often don't find the right term in english.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3359327",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3359327",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3359327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTkzMjc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T19:08:14Z",
    "updated_at": "2012-01-04T19:08:14Z",
    "author_association": "MEMBER",
    "body": "OK, thanks for the description.  I think I am following now.  I would not call this blocking/non-blocking as it more has to do with the error handling model that is used.  Can't you catch the exceptions raised by trigger so that [do send to kernel] ends up running?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3360613",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3360613",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3360613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA2MTM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T20:32:35Z",
    "updated_at": "2012-01-04T20:32:35Z",
    "author_association": "MEMBER",
    "body": "Yes, it should be feasible, I'm more concerned about connexion with long (potentially infinite) running code, for example if I plug :\n\n``` js\nconnect( function{alert('press ok to continue')} , kernel.execution.request);\n```\n\nThen `[do send to kernel]` will only run after user have pressed ok.\nThat's why I've called it blocking/non blocking.  Maybe we can find a better name with `parrallel-execution/sequential-execution`  and `exception-safe/non-exeception-safe`.\n\nWhat can be done is catching both error and add a timeout that unplug a listener if it raise or does not return after xxx s. But I don't see any way to wrap jQuery event which is simpler than recreating signals ourself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3361164",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3361164",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3361164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjExNjQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-04T21:09:02Z",
    "updated_at": "2012-01-04T21:09:02Z",
    "author_association": "MEMBER",
    "body": "I think for now we should try to use jQuery's signals/events.  We can\ndefinitely do better error handling when trigger is called to make\nsure that code after tigger is run.  I actually think that the way\njQuery handles errors makes sense.  Once things go bad in the callback\nsequence, it makes as much sense to abort as not.  I also don't think\nit makes sense to unregister signals when the fail as that could be a\ntemporary condition.\n\nOn Wed, Jan 4, 2012 at 12:32 PM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> Yes, it should be feasible, I'm more concerned about connexion with long (potentially infinite) running code, for example if I plug :\n> \n> ``` js\n> connect( function{alert('press ok to continue')} , kernel.execution.request);\n> ```\n> \n> Then `[do send to kernel]` will only run after user have pressed ok.\n> That's why I've called it blocking/non blocking.  Maybe we can find a better name with `parrallel-execution/sequential-execution`  and `exception-safe/non-exeception-safe`.\n> \n> What can be done is catching both error and add a timeout that unplug a listener if it raise or does not return after xxx s. But I don't see any way to wrap jQuery event which is simpler than recreating signals ourself.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1139#issuecomment-3360613\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3386585",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3386585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3386585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODY1ODU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T16:16:56Z",
    "updated_at": "2012-01-06T16:16:56Z",
    "author_association": "MEMBER",
    "body": "Use Jquery event instead of custom class\nRebased on master (and squashed), fix conflict due to new static file handler. \n\n@ellisonbg, I agree, but in our case, if we expose those signal for external extension we might make the notebook internals crash/freeze/slowdown just because of a plugin that hasn't been fully tested in all condition. And I would prefer (as an example)that the webkit notification systeme (that I should update and post btw) stop working or be unregisterd than to have the notebook unusable or frozen.\n\nAnd for now, it works with jQuery, I don't see (yet?) any way with the current jQuery event to determine which event listener have made a signal crash, but crash are handeld and logged on the console, and `kernel_status_widget` is fully loosely bind to the notebook.\n\nQuestion, I saw that html5 support `async=\"async\"` in script loading. Does it make sens to use it in some places to speed up notebook loading ? [(what async does)](http://www.w3schools.com/html5/tag_script.asp)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3404044",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3404044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3404044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQwNDQ=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-08T19:54:12Z",
    "updated_at": "2012-01-08T19:54:12Z",
    "author_association": "MEMBER",
    "body": "On Fri, Jan 6, 2012 at 8:16 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> Use Jquery event instead of custom class\n> Rebased on master (and squashed), fix conflict due to new static file handler.\n> \n> @ellisonbg, I agree, but in our case, if we expose those signal for external extension we might make the notebook internals crash/freeze/slowdown just because of a plugin that hasn't been fully tested in all condition. And I would prefer (as an example)that the webkit notification systeme (that I should update and post btw) stop working or be unregisterd than to have the notebook unusable or frozen.\n\nBut to deploy the notebook with such an extension would require\nsomeone to develop their own server.  In that case it is up to them to\nmake sure it all functions properly.  It is not like there plugin\nwould mess up anyone elses notebook server.  Being open source anyone\ncan build a custom notebook server based on IPython.  The stability of\nthat will be their responsibility, not ours.\n\n> And for now, it works with jQuery, I don't see (yet?) any way with the current jQuery event to determine which event listener have made a signal crash, but crash are handeld and logged on the console, and `kernel_status_widget` is fully loosely bind to the notebook.\n> \n> Question, I saw that html5 support `async=\"async\"` in script loading. Does it make sens to use it in some places to speed up notebook loading ? [(what async does)](http://www.w3schools.com/html5/tag_script.asp)\n\nMaybe in the long run, but for now there are too many low level\nchanges going on to worry about this.  Eventually we will also want to\nminimize to Javascript source as well.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1139#issuecomment-3386585\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3545639",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3545639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3545639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU2Mzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-18T13:34:51Z",
    "updated_at": "2012-01-18T13:34:51Z",
    "author_association": "MEMBER",
    "body": "So, i've rebased it to work with the current version of the notebook and the menu bar.\n\nI've added some notification if the kernel is busy for more than 10 sec as an option.\n\nIf your browser is compatible with webkit notification, you should see a checkbox on the right of the menu bar to activate/desactivate it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3577963",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3577963",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3577963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzc5NjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-20T01:57:45Z",
    "updated_at": "2012-01-20T01:57:45Z",
    "author_association": "MEMBER",
    "body": "@Carreau, unfortunately this one needs a rebase too.  We should try to finish up a decision on this one soon so that you don't have to keep on rebasing all the time, sorry about that.  I'll be happy to test once it's rebased and will do my best to help with the review.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3579896",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3579896",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3579896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzk4OTY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-20T07:00:32Z",
    "updated_at": "2012-01-20T07:00:32Z",
    "author_association": "MEMBER",
    "body": "@fperez I keep rebasing just to stay up to date and don't have too much conflict later. \n\nI didn't had time to extensively re-test this PR and some modification are just hacks to work with the new menubar. The notification pop-up logic can totally be improved with more type of signal in the kernel. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3691208",
    "html_url": "https://github.com/ipython/ipython/pull/1139#issuecomment-3691208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1139",
    "id": 3691208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTEyMDg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-27T18:05:24Z",
    "updated_at": "2012-01-27T18:05:24Z",
    "author_association": "MEMBER",
    "body": "We are starting to plan a completely different API for notification and monitoring that will span not only the kernel, but all of the code base.  The approach in this PR will not be applicable in that new approach, so I am going to close it.  One thing I would recommend: if there are parts of the notebook people want to work on, please contact the dev list - things are moving very quickly right now and there is much planning being done off list (in my head).\n"
  }
]
