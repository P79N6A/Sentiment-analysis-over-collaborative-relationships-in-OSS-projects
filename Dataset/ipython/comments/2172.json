[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7129266",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-7129266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 7129266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjkyNjY=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T12:47:42Z",
    "updated_at": "2012-07-20T12:47:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Continuing the discussion from #2154.\nI didn't have \"multi-thousand line cells\" in mind and what you said makes sense.  I think the problem is two-fold: one is that every has different threshold as you said; the other is that the threshold for editing and viewing is different.  Please consider having two different configurable variable to set the threshold.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14684350",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14684350",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14684350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njg0MzUw",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T16:46:14Z",
    "updated_at": "2013-03-10T16:46:14Z",
    "author_association": "NONE",
    "body": "Hey all, sorry to bother, but what is the status on this? \n\nIt would be great if this functionality (ability to turn on or off auto-scrolling of cell output) could also be attached to a toggle parameter unique for each cell. Sometimes there are things that I want to be printed out in their entirety (such as a list of plots generated in a loop), while other times, auto-scrolling for a long printed output is preferable.\n\nIs this much work to implement?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14685420",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14685420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14685420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njg1NDIw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T17:47:45Z",
    "updated_at": "2013-03-10T17:47:45Z",
    "author_association": "MEMBER",
    "body": "Hi, \n\nI see that this is marked as `wishlist`, this mostly mean that there are no date planned for this feature.\nBut would someone implement it correctly, it would have chances to be merged. \n\nconfigure it globally shouldn't be hard : \n\n```\nOutputArea.prototype._should_scroll = function(){return false}\n```\n\nPlus write the UI. On a per/cell basis slightly more difficult as this lives in `OutputArea`, and `Cell` does have the metadata. \n\nSo difficulty, I would say medium, because it is long to do, and involve a lot of cases where you desactivate while it is collapsed... and so on on so forth. \n\nI think we should be able to have enough hooks to allow the configurability on a per cell basis through extensions. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14685684",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14685684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14685684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njg1Njg0",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T18:00:39Z",
    "updated_at": "2013-03-10T18:00:39Z",
    "author_association": "NONE",
    "body": "Thanks @Carreau for the reply! I will use the tip suggested and if I get time, I will dig in more and see how I can contribute!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14685690",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14685690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14685690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njg1Njkw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T18:01:04Z",
    "updated_at": "2013-03-10T18:01:04Z",
    "author_association": "MEMBER",
    "body": "I think the right answer is to add 'scroll' state to the output area, with three states: true / false / auto.  Should be easy enough.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14692103",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14692103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14692103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjkyMTAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T23:35:29Z",
    "updated_at": "2013-03-10T23:35:29Z",
    "author_association": "MEMBER",
    "body": "I am a hesitant to add more complexity to how output is handled without\nhaving some very careful design discussions about this stuff.  I think what\nwe have now is pretty good, but there are still ways I find it awkward -\nbut I am not at all convinced that adding the proposed configurability\nwills solve anything.  If there really is a usability problem, let's fix it\n- not just punt and make it configurable.\n\nOn Sun, Mar 10, 2013 at 10:47 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Hi,\n> \n> I see that this is marked as wishlist, this mostly mean that there are no\n> date planned for this feature.\n> But would someone implement it correctly, it would have chances to be\n> merged.\n> \n> configure it globally shouldn't be hard :\n> \n> OutputArea.prototype._should_scroll = function(){return false}\n> \n> Plus write the UI. On a per/cell basis slightly more difficult as this\n> lives in OutputArea, and Cell does have the metadata.\n> \n> So difficulty, I would say medium, because it is long to do, and involve a\n> lot of cases where you desactivate while it is collapsed... and so on on so\n> forth.\n> \n> I think we should be able to have enough hooks to allow the\n> configurability on a per cell basis through extensions.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/2172#issuecomment-14685420\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14692235",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14692235",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14692235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjkyMjM1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T23:43:38Z",
    "updated_at": "2013-03-10T23:43:38Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg I'm not talking about making it configurable, I'm just talking about recording state - right now there is no information about whether the user has told a cell to stay uncollapsed, so if more output comes it is automatically collapsed again, which is _super_ annoying.  Recording the autoscroll state, just like we already do with the collapsed state, solves that issue.  No configuration is added.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14692329",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14692329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14692329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjkyMzI5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T23:49:17Z",
    "updated_at": "2013-03-10T23:49:17Z",
    "author_association": "MEMBER",
    "body": "Ahh, sorry I was reading the title of this issue.  I fully agree the state\nshould be saved in the cell metadata.\n\nOn Sun, Mar 10, 2013 at 4:43 PM, Min RK notifications@github.com wrote:\n\n> @ellisonbg https://github.com/ellisonbg I'm not talking about making it\n> configurable, I'm just talking about recording state - right now there is\n> no information about whether the user has told a cell to stay uncollapsed,\n> so if more output comes it is automatically collapsed again, which is *\n> super\\* annoying. Recording the autoscroll state, just like we already do\n> with the collapsed state, solves that issue. No configuration is added.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/2172#issuecomment-14692235\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14724564",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-14724564",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 14724564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzI0NTY0",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-11T16:44:35Z",
    "updated_at": "2013-03-11T16:44:35Z",
    "author_association": "NONE",
    "body": "@minrk, if this could be implemented, that would be awesome. I am just starting to dig into IPython development (a wonderful tool btw, thank you for all the work), so I will have to dedicate some time looking into this, when I am able. Not much time now, but will try hopefully soon. :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53129742",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-53129742",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 53129742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTI5NzQy",
    "user": {
      "login": "ngoldbaum",
      "id": 3126246,
      "node_id": "MDQ6VXNlcjMxMjYyNDY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3126246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ngoldbaum",
      "html_url": "https://github.com/ngoldbaum",
      "followers_url": "https://api.github.com/users/ngoldbaum/followers",
      "following_url": "https://api.github.com/users/ngoldbaum/following{/other_user}",
      "gists_url": "https://api.github.com/users/ngoldbaum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ngoldbaum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ngoldbaum/subscriptions",
      "organizations_url": "https://api.github.com/users/ngoldbaum/orgs",
      "repos_url": "https://api.github.com/users/ngoldbaum/repos",
      "events_url": "https://api.github.com/users/ngoldbaum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ngoldbaum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-22T22:33:43Z",
    "updated_at": "2014-08-22T22:33:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk did this ever get implemented?  I'm still seeing auto-scrolling getting reset after re-evaluating cells in IPython 2.2.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53141336",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-53141336",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 53141336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTQxMzM2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-23T03:26:18Z",
    "updated_at": "2014-08-23T03:26:18Z",
    "author_association": "MEMBER",
    "body": "Nope, not yet. The metadata for the state is added in nbformat 4, but the code hasn't been written.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53708976",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-53708976",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 53708976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzA4OTc2",
    "user": {
      "login": "flxb",
      "id": 527094,
      "node_id": "MDQ6VXNlcjUyNzA5NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/527094?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flxb",
      "html_url": "https://github.com/flxb",
      "followers_url": "https://api.github.com/users/flxb/followers",
      "following_url": "https://api.github.com/users/flxb/following{/other_user}",
      "gists_url": "https://api.github.com/users/flxb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flxb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flxb/subscriptions",
      "organizations_url": "https://api.github.com/users/flxb/orgs",
      "repos_url": "https://api.github.com/users/flxb/repos",
      "events_url": "https://api.github.com/users/flxb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flxb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-28T11:46:40Z",
    "updated_at": "2014-08-28T11:46:40Z",
    "author_association": "NONE",
    "body": "To fix the annoyances temporarily, create a code block with:\n\n```\n%%javascript\nIPython.OutputArea.auto_scroll_threshold = 9999;\n```\n\nand execute.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58870950",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-58870950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 58870950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODcwOTUw",
    "user": {
      "login": "axsk",
      "id": 5798790,
      "node_id": "MDQ6VXNlcjU3OTg3OTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5798790?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axsk",
      "html_url": "https://github.com/axsk",
      "followers_url": "https://api.github.com/users/axsk/followers",
      "following_url": "https://api.github.com/users/axsk/following{/other_user}",
      "gists_url": "https://api.github.com/users/axsk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axsk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axsk/subscriptions",
      "organizations_url": "https://api.github.com/users/axsk/orgs",
      "repos_url": "https://api.github.com/users/axsk/repos",
      "events_url": "https://api.github.com/users/axsk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axsk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T09:59:08Z",
    "updated_at": "2014-10-13T09:59:20Z",
    "author_association": "NONE",
    "body": "this died :(\ni would appreciate the feature :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71184246",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-71184246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 71184246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTg0MjQ2",
    "user": {
      "login": "uriva",
      "id": 2490655,
      "node_id": "MDQ6VXNlcjI0OTA2NTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2490655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uriva",
      "html_url": "https://github.com/uriva",
      "followers_url": "https://api.github.com/users/uriva/followers",
      "following_url": "https://api.github.com/users/uriva/following{/other_user}",
      "gists_url": "https://api.github.com/users/uriva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uriva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uriva/subscriptions",
      "organizations_url": "https://api.github.com/users/uriva/orgs",
      "repos_url": "https://api.github.com/users/uriva/repos",
      "events_url": "https://api.github.com/users/uriva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uriva/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T12:01:27Z",
    "updated_at": "2015-01-23T12:01:27Z",
    "author_association": "NONE",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/89376306",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-89376306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 89376306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5Mzc2MzA2",
    "user": {
      "login": "dwt",
      "id": 57199,
      "node_id": "MDQ6VXNlcjU3MTk5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwt",
      "html_url": "https://github.com/dwt",
      "followers_url": "https://api.github.com/users/dwt/followers",
      "following_url": "https://api.github.com/users/dwt/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwt/subscriptions",
      "organizations_url": "https://api.github.com/users/dwt/orgs",
      "repos_url": "https://api.github.com/users/dwt/repos",
      "events_url": "https://api.github.com/users/dwt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T17:59:47Z",
    "updated_at": "2015-04-03T17:59:47Z",
    "author_association": "NONE",
    "body": "I'd like to add another use case here, I would often like to use graphs that are slightly larger than the default scroll region size, which makes them very awkward to use (bokeh user here). So please allow setting the threshold some way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/120634682",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-120634682",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 120634682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDYzNDY4Mg==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-11T15:42:49Z",
    "updated_at": "2015-07-11T15:42:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just because I found this earlier than the right solution (and the above didn't work anymore to disable the scolling): \n\nhttps://github.com/minrk/ipython_extensions/blob/master/extensions/disable_autoscroll.py\n\n-> just execute the JS in a `%%javascript` does the trick...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/140475649",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-140475649",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 140475649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ3NTY0OQ==",
    "user": {
      "login": "birdmw",
      "id": 2925772,
      "node_id": "MDQ6VXNlcjI5MjU3NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2925772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/birdmw",
      "html_url": "https://github.com/birdmw",
      "followers_url": "https://api.github.com/users/birdmw/followers",
      "following_url": "https://api.github.com/users/birdmw/following{/other_user}",
      "gists_url": "https://api.github.com/users/birdmw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/birdmw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/birdmw/subscriptions",
      "organizations_url": "https://api.github.com/users/birdmw/orgs",
      "repos_url": "https://api.github.com/users/birdmw/repos",
      "events_url": "https://api.github.com/users/birdmw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/birdmw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-15T17:36:09Z",
    "updated_at": "2015-09-15T17:36:09Z",
    "author_association": "NONE",
    "body": "wish it was a thing\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210847346",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-210847346",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 210847346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDg0NzM0Ng==",
    "user": {
      "login": "matthewmacleod",
      "id": 2094725,
      "node_id": "MDQ6VXNlcjIwOTQ3MjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2094725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewmacleod",
      "html_url": "https://github.com/matthewmacleod",
      "followers_url": "https://api.github.com/users/matthewmacleod/followers",
      "following_url": "https://api.github.com/users/matthewmacleod/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewmacleod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewmacleod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewmacleod/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewmacleod/orgs",
      "repos_url": "https://api.github.com/users/matthewmacleod/repos",
      "events_url": "https://api.github.com/users/matthewmacleod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewmacleod/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-16T16:09:00Z",
    "updated_at": "2016-04-16T16:09:00Z",
    "author_association": "NONE",
    "body": "I just found this issue since I was googling to figure out how to turn off auto scrolling. It would be useful and appreciated if someone had time to fix this. I mean the ability to turn auto-scrolling on and off. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210923428",
    "html_url": "https://github.com/ipython/ipython/issues/2172#issuecomment-210923428",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2172",
    "id": 210923428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDkyMzQyOA==",
    "user": {
      "login": "matthewmacleod",
      "id": 2094725,
      "node_id": "MDQ6VXNlcjIwOTQ3MjU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2094725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewmacleod",
      "html_url": "https://github.com/matthewmacleod",
      "followers_url": "https://api.github.com/users/matthewmacleod/followers",
      "following_url": "https://api.github.com/users/matthewmacleod/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewmacleod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewmacleod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewmacleod/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewmacleod/orgs",
      "repos_url": "https://api.github.com/users/matthewmacleod/repos",
      "events_url": "https://api.github.com/users/matthewmacleod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewmacleod/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-16T23:31:43Z",
    "updated_at": "2016-04-16T23:31:43Z",
    "author_association": "NONE",
    "body": "I had trouble getting the above javascript to work on my computer, but I was able to get the ipython notebook extensions here to work:\n\nhttps://github.com/ipython-contrib/IPython-notebook-extensions\n"
  }
]
