[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6826722",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6826722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6826722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjY3MjI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-07T21:31:26Z",
    "updated_at": "2012-07-07T21:31:26Z",
    "author_association": "MEMBER",
    "body": "It's just a bug in how our inputsplitter handles backslash-terminated code.  I'm afraid it won't be an easy one to fix, as that code is rather subtle, so don't hold your breath.  But it's a valid bug, marking as such.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6827956",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6827956",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6827956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc5NTY=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T00:54:47Z",
    "updated_at": "2012-07-08T00:54:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found the source of the error.  The input splitter is checking for `source.rstrip().endswith('\\\\')` instead of just `source.endswith('\\\\')`.  Note that this also causes it to treat `1 \\` with an extra space at the end the same as just `1\\`, which also differs from regular Python (it treats that as a SyntaxError). \n\nSo my question now is, how well is that code tested?  Can I trust that the fix is OK if tests pass?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6827972",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6827972",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6827972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc5NzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T00:57:46Z",
    "updated_at": "2012-07-08T00:57:46Z",
    "author_association": "MEMBER",
    "body": "The tests for that code are fairly robust, actually.  Though obviously, if you've found a problem here, I would like any PR fixing it to also include a test that fails with the current code, so that we ensure it doesn't return afterwards.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6827982",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6827982",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6827982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc5ODI=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T00:59:04Z",
    "updated_at": "2012-07-08T00:59:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I'll send one, as soon as I figure out how to add a test for this (and also as soon as I figure out how to actually run the tests :-)\n\nBy the way, as I go through the code, I'm also noticing random other things that need fixing.  Should I submit these as separate PRs or are you guys OK with one grab-bag PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828013",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjgwMTM=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T01:04:46Z",
    "updated_at": "2012-07-08T01:04:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, it should actually be `endswith('\\\\\\n')`. I didn't realize that the source included the newline (which explains why the rstrip() was there in the first place).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828033",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjgwMzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T01:07:54Z",
    "updated_at": "2012-07-08T01:07:54Z",
    "author_association": "MEMBER",
    "body": "On Sat, Jul 7, 2012 at 5:59 PM, Aaron Meurer\nreply@reply.github.com\nwrote:\n\n> OK, I'll send one, as soon as I figure out how to add a test for this (and also as soon as I figure out how to actually run the tests :-)\n\nIn short, use `iptest`, ideally with ipython setup with `setup.py\ndevelop` or similar so you're running from your source tree.  Details:\n\nipython.org/ipython-doc/rel-0.13/development/testing.html\n\n> By the way, as I go through the code, I'm also noticing random other things that need fixing.  Should I submit these as separate PRs or are you guys OK with one grab-bag PR?\n\nIf they are really tiny, go ahead and lump them in, but anything\nreasonably complex should ideally have its own PR.  We're pretty good\nabout having quick turnaround for easy things.\n\nBonus points if you run\n\ncd tools\n./test_pr -p NNNN\n\nwith your PR number, which will run the test suite and post the\nresults; this is our implementation of the ideas you gave us from your\nsympy workflow to have easy testing of a PR.\n\nHaving the test_pr results up and ready to see will make the review\nprocess even quicker.  You can omit the -p if you want to see the\nlocal results and post them separately later on (I typically do that).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828056",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828056",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjgwNTY=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T01:15:34Z",
    "updated_at": "2012-07-08T01:15:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. I figured that out just as you posted it. \n\nOne last question: what's the way to make GitHub automatically close an issue? I think it's something like `closes #2108` at the bottom of the commit message, but I always forget the exact format and it doesn't always work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828070",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjgwNzA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T01:19:18Z",
    "updated_at": "2012-07-08T01:19:18Z",
    "author_association": "MEMBER",
    "body": "That works, 'fixes' also works, and you can use either `#` or `gh-` as the prefix.  \n\nStill, it's good practice to add which issues are fixed in the description of the PR, so that the summary messages (which are the ones that really get read when scanning development history) have direct links to the relevant bugs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828705",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg3MDU=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T03:56:11Z",
    "updated_at": "2012-07-08T03:56:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, a question.  What's the correct way to test that `1 \\` (with a space at the end) produces a SyntaxError?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828742",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828742",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg3NDI=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:06:17Z",
    "updated_at": "2012-07-08T04:08:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "For now I'm just going to test that it doesn't accept any more input.  Let me know if I should test something more.  I don't know how the exececution works in IPython, so I don't know we should actually test that it gives the SyntaxError or if that is the job of Python itself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828757",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828757",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg3NTc=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:10:28Z",
    "updated_at": "2012-07-08T04:10:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, I forgot about the semicolon thing.  Is that actually a bug?  It seems that the semicolon always suppresses output in IPython.  I could easily see that being intended behavior anyway.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828765",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828765",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg3NjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:12:59Z",
    "updated_at": "2012-07-08T04:12:59Z",
    "author_association": "MEMBER",
    "body": "On Sat, Jul 7, 2012 at 9:10 PM, Aaron Meurer\nreply@reply.github.com\nwrote:\n\n> Oh, I forgot about the semicolon thing.  Is that actually a bug?  It seems that the semicolon always suppresses output in IPython.  I could easily see that being intended behavior anyway.\n\nYes, semicolon-suppresses-output is an 'ipython extension' to the\ndefault behavior of the language, which is widely used and has been in\nipython since forever.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828778",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828778",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg3Nzg=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:17:02Z",
    "updated_at": "2012-07-08T04:17:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I remember this now.  I actually thought it was part of regular Python until now.\n\nSo what about the space after the line continuation SyntaxError thing?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828814",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828814",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg4MTQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:24:01Z",
    "updated_at": "2012-07-08T04:24:01Z",
    "author_association": "MEMBER",
    "body": "For space after `\\`, we should conform to whatever python does.  If we don't, it's a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828819",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg4MTk=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:25:34Z",
    "updated_at": "2012-07-08T04:25:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, I figured that.   I meant, how should we test it?  The input splitter tests just test that the input doesn't accept any new lines, not that it gives the SyntaxError.  I don't know if that's something that should be tested beyond that (and if so, where and how), or if that would just be testing Python itself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6828909",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6828909",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6828909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjg5MDk=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T04:55:47Z",
    "updated_at": "2012-07-08T04:55:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, PR #2110 submitted.  \n\nBy the way, if anyone ever comes around looking for an easy to fix issue, your docs have a ton of build errors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6829084",
    "html_url": "https://github.com/ipython/ipython/issues/2108#issuecomment-6829084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2108",
    "id": 6829084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjkwODQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T05:44:36Z",
    "updated_at": "2012-07-08T05:44:36Z",
    "author_association": "MEMBER",
    "body": "Great, thanks.  Yup, our docs are in serious need of a solid maintenance pass.  Good topic for a scipy 2012 sprint, actually...\n"
  }
]
