[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/402725961",
    "html_url": "https://github.com/ipython/ipython/issues/11216#issuecomment-402725961",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11216",
    "id": 402725961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjcyNTk2MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T13:42:56Z",
    "updated_at": "2018-07-05T13:42:56Z",
    "author_association": "MEMBER",
    "body": "The CORS error that you get is because we set a sandboxing header to treat HTML files as a separate origin, so that a malicious HTML file you view can't talk to your Jupyter server and take over your computer. Here's the relevant code:\r\n\r\nhttps://github.com/jupyter/notebook/blob/9d0ea1a4278dc9bf63df9f556744206bee0dd997/notebook/files/handlers.py#L30-L34\r\n\r\nIt's annoying that that's causing a redirect to the login page, though. I'm not sure how we should deal with that."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/402734082",
    "html_url": "https://github.com/ipython/ipython/issues/11216#issuecomment-402734082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11216",
    "id": 402734082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjczNDA4Mg==",
    "user": {
      "login": "ericmandel",
      "id": 3028875,
      "node_id": "MDQ6VXNlcjMwMjg4NzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3028875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericmandel",
      "html_url": "https://github.com/ericmandel",
      "followers_url": "https://api.github.com/users/ericmandel/followers",
      "following_url": "https://api.github.com/users/ericmandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericmandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericmandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericmandel/subscriptions",
      "organizations_url": "https://api.github.com/users/ericmandel/orgs",
      "repos_url": "https://api.github.com/users/ericmandel/repos",
      "events_url": "https://api.github.com/users/ericmandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericmandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T14:07:49Z",
    "updated_at": "2018-07-05T14:07:49Z",
    "author_association": "NONE",
    "body": "Thanks, we can live with that security check, as our specific application fires up the Jupyter notebook and thus can add the ````--NotebookApp.allow_origin='*'```` switch. More painful is the apparent mangling of the wasm file. This file is  (possibly) loaded during the web page's runtime initialization: once the page is loaded, a javascript routine figures out if wasm is supported by the browser and if so, loads the wasm file via xhr. Is it possible that Jupyter is \"sanitizing\" this file somehow? I'm not sure how else its bytes would get changed ..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/403025254",
    "html_url": "https://github.com/ipython/ipython/issues/11216#issuecomment-403025254",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11216",
    "id": 403025254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzAyNTI1NA==",
    "user": {
      "login": "o-smirnov",
      "id": 6470079,
      "node_id": "MDQ6VXNlcjY0NzAwNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6470079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/o-smirnov",
      "html_url": "https://github.com/o-smirnov",
      "followers_url": "https://api.github.com/users/o-smirnov/followers",
      "following_url": "https://api.github.com/users/o-smirnov/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-smirnov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/o-smirnov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-smirnov/subscriptions",
      "organizations_url": "https://api.github.com/users/o-smirnov/orgs",
      "repos_url": "https://api.github.com/users/o-smirnov/repos",
      "events_url": "https://api.github.com/users/o-smirnov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/o-smirnov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T12:52:37Z",
    "updated_at": "2018-07-06T12:52:37Z",
    "author_association": "NONE",
    "body": "@takluyver, so how do we work around this? How can a cell's output embed or invoke an HTML file without sandboxing?\r\n\r\nI'm trying to integrate @ericmandel's Javascript application into a notebook. In this scenario, my python code is invoked by a notebook cell. This code generates an HTML file in the working directory (which invokes @ericmandel's application), and outputs ``HTML(\"<iframe src=\"/files/dynamically-generated-file.html></iframe>\")`` into the cell.\r\n\r\nAnd then of course it gets sandboxed and everything falls over.\r\n\r\nI understand the rationale for sandboxing random unknown HTML files. But in this case, the HTML file is generated by code inside the cell, so can therefore be considered as trusted as the code is. So how do we fit this into the security model?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/403038777",
    "html_url": "https://github.com/ipython/ipython/issues/11216#issuecomment-403038777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11216",
    "id": 403038777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzAzODc3Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T13:45:15Z",
    "updated_at": "2018-07-06T13:45:15Z",
    "author_association": "MEMBER",
    "body": "I think there's a way for JS code to create an iframe and then write into it, rather than having the browser load its contents with a separate request.\r\n\r\nWe don't do any sanitisation on serving files, and we don't do anything around wasm at all. The only sanitisation we do is for content in notebooks so you don't get arbitrary code executing as soon as you open a notebook file."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/403041404",
    "html_url": "https://github.com/ipython/ipython/issues/11216#issuecomment-403041404",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11216",
    "id": 403041404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA0MTQwNA==",
    "user": {
      "login": "o-smirnov",
      "id": 6470079,
      "node_id": "MDQ6VXNlcjY0NzAwNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6470079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/o-smirnov",
      "html_url": "https://github.com/o-smirnov",
      "followers_url": "https://api.github.com/users/o-smirnov/followers",
      "following_url": "https://api.github.com/users/o-smirnov/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-smirnov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/o-smirnov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-smirnov/subscriptions",
      "organizations_url": "https://api.github.com/users/o-smirnov/orgs",
      "repos_url": "https://api.github.com/users/o-smirnov/repos",
      "events_url": "https://api.github.com/users/o-smirnov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/o-smirnov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T13:54:54Z",
    "updated_at": "2018-07-06T13:54:54Z",
    "author_association": "NONE",
    "body": "> I think there's a way for JS code to create an iframe and then write into it, rather than having the browser load its contents with a separate request.\r\n\r\nI'll have to look into that. I'd also like to be able to open new browser tabs -- can JS write code into a new tab?\r\n\r\n> We don't do any sanitisation on serving files, and we don't do anything around wasm at all.\r\n\r\nI think we figured out what happens there. My sandboxed HTML invokes @ericmandel's JS, which tries to load some of its components (such as the wasm stuff) from ``/files/``. But because the document is sandboxed, every request to ``/files`` comes back with the login page instead. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/403064485",
    "html_url": "https://github.com/ipython/ipython/issues/11216#issuecomment-403064485",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11216",
    "id": 403064485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA2NDQ4NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T15:18:02Z",
    "updated_at": "2018-07-06T15:18:02Z",
    "author_association": "MEMBER",
    "body": "> can JS write code into a new tab?\r\n\r\nI think so, though I think there are also some limitations on it."
  }
]
