[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52421908",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-52421908",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 52421908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDIxOTA4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T13:30:11Z",
    "updated_at": "2014-08-17T13:30:11Z",
    "author_association": "MEMBER",
    "body": "Should we ping Julia/Haskell/ and other kernel guys ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52423006",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-52423006",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 52423006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDIzMDA2",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T14:14:09Z",
    "updated_at": "2014-08-17T14:14:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, is_complete is a function that we needed in the Calico IDE, which handles many languages. Here is a list of the things that we have found useful; not all will apply to Jupyter:\n1. character(s) for marking here-to-end as a comment (eg, \";;\" for Scheme, \"##' for Python). This is useful for generic code that might want to comment/uncomment a block of code. Will be useful for an editor in the browser.\n2. is_complete - as you indicate. \n3. file extension(s) - for saving the file, opening files, making new ones, associating kernels with code, etc.\n4. mime-type for program\n5. path to a set of examples\n6. method to set trace on/off\n7. set variable - interface for letting IDE or another language set a value; useful, for example, to give the language the history of results from frontend (eg, results of magics back to language)\n8. tab completion\n9. get variable value\n10. get help on - eg, \"(define a lambda?\"\n11. highlight a line of code in the IDE - useful for tracing\n\nThat about does it, from these \"guys\" :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54389629",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54389629",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54389629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg5NjI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:42:26Z",
    "updated_at": "2014-09-04T00:42:26Z",
    "author_association": "MEMBER",
    "body": "What about a `\"I don't know\"` value ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54390477",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54390477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54390477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkwNDc3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:55:08Z",
    "updated_at": "2014-09-04T00:55:08Z",
    "author_association": "MEMBER",
    "body": "Should 'this code is invalid' be a separate response from 'I don't know how to analyse this'? Then we'd have four states. It's a bit annoying not to be able to use a boolean, but I guess that's life. Possible names for the different responses?\n\ne.g.\n- 'complete'\n- 'incomplete'\n- 'invalid'\n- 'unknown'\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54391233",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54391233",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54391233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkxMjMz",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T01:07:01Z",
    "updated_at": "2014-09-04T01:07:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are you sure you really need something more than a boolean? It seems like\nactually sending an invalid expression to be evaluated (and getting the\nerror message) will give more details than just getting an \"invalid\" value\nback from is_complete.\n\nWe have this same issue in our Calico IDE for many languages. The default\nimplementation for our is_complete is whether the last line is blank. That\nway, one can even force the system to evaluate the expression, even though\na more exact is_complete function may give a different answer.\n\nSaid another way, what are you going to do if is_complete is not complete?\nShow the unhelpful one word message? I would keep it simple: either the\nsystem thinks it is ready, or it doesn't. Eval messages will provide more\ndetails on what is wrong.\n\nOn Wed, Sep 3, 2014 at 8:55 PM, Thomas Kluyver notifications@github.com\nwrote:\n\n> Should 'this code is invalid' be a separate response from 'I don't know\n> how to analyse this'? Then we'd have four states. It's a bit annoying not\n> to be able to use a boolean, but I guess that's life. Possible names for\n> the different responses?\n> \n> e.g.\n> - 'complete'\n> - 'incomplete'\n> - 'invalid'\n> - 'unknown'\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6297#issuecomment-54390477.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54393435",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54393435",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54393435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkzNDM1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T01:41:44Z",
    "updated_at": "2014-09-04T01:41:44Z",
    "author_association": "MEMBER",
    "body": "I think the main question is whether we want an explicit way for the backend to say it hasn't tried to analyse it, to save the frontend having to wait for a timeout to decide that the kernel doesn't know. Frontends may want to handle that differently to 'yes' or 'no'.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54514215",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54514215",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54514215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTE0MjE1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T17:30:14Z",
    "updated_at": "2014-09-04T17:30:14Z",
    "author_association": "MEMBER",
    "body": "> I think the main question is whether we want an explicit way for the backend to say it hasn't tried to analyse it, to save the frontend having to wait for a timeout to decide that the kernel doesn't know. Frontends may want to handle that differently to 'yes' or 'no'.\n\nI agree with thomas, if we don't have an undefined, then in a terminal-like UI, you might have to identical input that either evaluate or create a new line. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54700108",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54700108",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54700108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzAwMTA4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-06T02:37:41Z",
    "updated_at": "2014-09-06T02:37:41Z",
    "author_association": "MEMBER",
    "body": "Decision from the dev meeting: all four categories and the indentation hint.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54901412",
    "html_url": "https://github.com/ipython/ipython/pull/6297#issuecomment-54901412",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6297",
    "id": 54901412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTAxNDEy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-08T23:13:29Z",
    "updated_at": "2014-09-08T23:13:29Z",
    "author_association": "MEMBER",
    "body": "As we decided, I've added reply statuses 'complete', 'incomplete', 'invalid' and 'unknown', and an indentation hint if the status is 'incomplete'. The indentation hint is mandatory for the kernel to provide, but the frontend may ignore it in favour of its own autoindenting logic.\n\nI've also returned the version number to 5.0, as @minrk asked.\n"
  }
]
