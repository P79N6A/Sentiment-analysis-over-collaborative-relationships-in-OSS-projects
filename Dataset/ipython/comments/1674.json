[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5421256",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5421256",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5421256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjEyNTY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-30T16:28:56Z",
    "updated_at": "2012-04-30T16:28:56Z",
    "author_association": "MEMBER",
    "body": "Sorry, but @minrk has reverted #1659 (e9216222df5e2a40ce528151f559e7699444da7a) so this does not apply cleanly on master... could you rebased it ? \n\nThanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5425567",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5425567",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5425567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjU1Njc=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-30T19:32:16Z",
    "updated_at": "2012-04-30T19:32:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this should apply cleanly (the web interface doesn't tell me as a non-ipython developer).  Let me know if it's still messed up.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5425599",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5425599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5425599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjU1OTk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-30T19:34:14Z",
    "updated_at": "2012-04-30T19:34:14Z",
    "author_association": "MEMBER",
    "body": "Yes, this applies cleanly now.  I will test again this evening.  Thanks for your patience!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5445427",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5445427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5445427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDU0Mjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-01T19:01:25Z",
    "updated_at": "2012-05-01T19:01:25Z",
    "author_association": "MEMBER",
    "body": "It looks like fixConsole is being called twice on stream output, because I am now seeing color escapes as raw HTML:\n\n``` python\nprint '\\033[31m red'\n```\n\nwhich should print 'red' in red.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5494503",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5494503",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5494503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ1MDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-03T18:25:23Z",
    "updated_at": "2012-05-03T18:25:23Z",
    "author_association": "MEMBER",
    "body": "This is performance acceptably well, in my tests, so I think it can be merged.  I don't think we should be in the business of a terminal emulator in the browser, but as we add pseudo-support for terminal features like this, I think people may start expecting it.\n\nFor instance, here is a test case that highlights just how different the notebook and a terminal will behave:\n\n``` python\ndef test():\n  print '\\033[31m red',\n  sys.stdout.flush()\n  print 'who\\rda'\ntest()\n```\n\nIn the terminal, this produces a red `daed who`, and in the notebook it produces a black `da`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5496819",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5496819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5496819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY4MTk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-03T19:57:42Z",
    "updated_at": "2012-05-03T19:57:42Z",
    "author_association": "MEMBER",
    "body": "From discussion on #1659:\n\nI feel that we should remove overwritten content at some point before saving. Even if we'd rather they didn't, people are going to use `\\r` for progress counters, because it works and library authors shouldn't have to detect and handle the notebook. If it's left in, it's extra noise for version control. Also, if one day another application can load ipynb files, but can't handle `\\r`, its users won't appreciate seeing a load of messy progress information.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5691524",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5691524",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5691524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTE1MjQ=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T14:32:00Z",
    "updated_at": "2012-05-14T14:32:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry to drop this for a while.\n\nI think given all of the various issues with this, and the fact that, for good reason, IPython notebook output sections will never be real terminals, I wonder if the better solution isn't to just have a set of standard widgets for this (such as what's in the animation examples) and not try to make this work.  Ideally, there would be some sort of library that didn't depend on IPython directly, that would work for displaying progress at both a regular console, the standard python interactive prompt, the IPython console, IPython notebook etc...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5693021",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5693021",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5693021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTMwMjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T15:26:24Z",
    "updated_at": "2012-05-14T15:26:24Z",
    "author_association": "MEMBER",
    "body": "I'm not sure that such a library is any easier, though. By design, the\nkernel doesn't know that a request has come from the notebook, so I\ndon't think a library can reliably determine to use the notebook\nmethods to display a progress bar.\n\nIt could simply have an option that the user set to use a notebook\nprogress bar, but that's not very user friendly, and doesn't work well\nif you're using the same kernel between a notebook and a qtconsole,\nfor example.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5693079",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5693079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5693079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTMwNzk=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-14T15:28:34Z",
    "updated_at": "2012-05-14T15:28:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5864867",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5864867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5864867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ4Njc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T04:20:27Z",
    "updated_at": "2012-05-23T04:20:27Z",
    "author_association": "MEMBER",
    "body": "I am trying to move notebook related PRs forward.  What is the status of this one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5864932",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5864932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5864932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQ5MzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T04:28:07Z",
    "updated_at": "2012-05-23T04:28:07Z",
    "author_association": "MEMBER",
    "body": "I think it's working well (it requires #1663 in order to behave properly on load from file), but @takluyver is inclined to require that the `\\r` blanking should affect the saved ipynb.\n\nWith this as-is `\\r` behavior in the notebook at least makes some sense, but has disadvantages relative to a non-terminal-centric approach.  I think it's mainly a question of how much we want to discourage/encourage terminal tricks in the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5868216",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5868216",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5868216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgyMTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T09:05:05Z",
    "updated_at": "2012-05-23T09:05:05Z",
    "author_association": "MEMBER",
    "body": "To explain my case, consider a progress counter, a common use of `\\r`. It's writing `1\\r2\\r3\\r...`. If we store all of that output, it's extra noise for keeping the notebook in version control, and any other application opening the ipynb file has to be aware of `\\r` to display it properly.\n\nThe alternative is to encourage people to use a notebook-specific API to display progress information. But library authors presumably want to have one set of code that displays progress. And if they do include an option to use the notebook-specific API, I don't see any good way to automatically select that, because our design is that the kernel doesn't know about frontends. I'm trying to think if it can be done with the display protocol, but it would be awkward at best.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5876793",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5876793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5876793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzY3OTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T15:58:19Z",
    "updated_at": "2012-05-23T15:58:19Z",
    "author_association": "MEMBER",
    "body": "I should clarify: I don't disagree that saving the transformed output is probably _better_, I just think disagree that it should be a criterion for this PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5919486",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5919486",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5919486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk0ODY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T22:37:26Z",
    "updated_at": "2012-05-24T22:37:26Z",
    "author_association": "MEMBER",
    "body": "When people are developing custom display code that they want to work in the notebook, it is very reasonable that they need to use notebook specific constructs such as `clear_output`.  I agree with @minrk that we should strongly discourage the usage of `\\r`.  If a user uses it, the only promise we should make is that the notebook doesn't break.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5919561",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5919561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5919561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk1NjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T22:42:10Z",
    "updated_at": "2012-05-24T22:42:10Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg: Both before/after this PR there are significant disadvantages to using `\\r`:\n- before: `\\r` does nothing, and your output will simply grow, and make no sense.\n- after: `\\r` behaves sanely for simple cases, but your notebook file stores a complete record of the erased output.\n\nAlso note that #1663 is required for `\\r` to make sense across saves.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5919631",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5919631",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5919631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk2MzE=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T22:45:54Z",
    "updated_at": "2012-05-24T22:45:54Z",
    "author_association": "MEMBER",
    "body": "On Thu, May 24, 2012 at 3:42 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> @ellisonbg: Both before/after this PR there are significant disadvantages to using `\\r`:\n> - before: `\\r` does nothing, and your output will simply grow, and make no sense.\n> - after: `\\r` behaves sanely for simple cases, but your notebook file stores a complete record of the erased output.\n> \n> Also note that #1663 is required for `\\r` to make sense across saves.\n\nIn general, dynamic output should only \"run\" after direct code\nexecution.  For example, dynamic Javascirpt is never run on notebook\nload.  Are you saying that after this PR, when a notebook is loaded,\nthe `\\r` logic gets replayed?  What is the most conservative thing we\ncould do?  I am a little weary of heading down the road to making the\nnotebook notebook behave like a terminal.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1674#issuecomment-5919561\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5920065",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5920065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5920065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjAwNjU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T23:13:23Z",
    "updated_at": "2012-05-24T23:13:23Z",
    "author_association": "MEMBER",
    "body": "Yes, `\\r` is 'replayed'.  That javascript behavior is also a problem we need to address.  For instance, let's say you have a progress bar which was advanced with 100 `display(Javascript...)` calls.  When you reload the notebook, you will get 100 text reprs of `Javascript...`. It's okay (if unpleasant) if that javascript must not be replayed, but it's not okay that it gets displayed as its text repr.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5920114",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5920114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5920114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjAxMTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T23:16:36Z",
    "updated_at": "2012-05-24T23:16:36Z",
    "author_association": "MEMBER",
    "body": "On 24 May 2012 23:37, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> When people are developing custom display code that they want to work in the notebook, it is very reasonable that they need to use notebook specific constructs such as `clear_output`.\n\nI don't see how this is practical. Say I'm writing some long-running\nfunction which I want to display progress while it runs. The users\nmight be using the notebook, but they may well be using Python in a\nterminal. (And there may not be a stdout at all, but there are already\nways to detect and handle that).\n\nI could make the function:\n- Always use the notebook display API - completely breaks running in\n  other environments, so no.\n- Try to detect when output is going to a notebook - by design there's\n  no way to do this.\n- Switch between notebook & terminal APIs manually - this just pushes\n  the decision to the user and gives them one more thing to think about.\n  If the terminal API vaguely appears to work, users aren't likely to go\n  looking for the notebook_display_api flag just because we think it's\n  better.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5920163",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5920163",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5920163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjAxNjM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T23:20:43Z",
    "updated_at": "2012-05-24T23:20:43Z",
    "author_association": "MEMBER",
    "body": "@takluyver You can already do simultaneous text/html/javascript display, which get used selectively by the frontends (including terminal).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5920443",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5920443",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5920443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA0NDM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T23:39:38Z",
    "updated_at": "2012-05-24T23:39:38Z",
    "author_association": "MEMBER",
    "body": "On 25 May 2012 00:21, Min RK\nreply@reply.github.com\nwrote:\n\n> @takluyver You can already do simultaneous text/html/javascript display, which get used selectively by the frontends (including terminal).\n\nI know, but I've spent a while trying to work out the implementation\nyou'd need for this in the terminal, and as far as I can see it's very\nugly at best. Using `print` doesn't go through the display interface,\nso you'd need to manually invoke sys.displayhook to display an object\nwhose repr is the current state. But the default sys.displayhook adds\na newline after printing your object, which will stop you from using\n\\r to erase it. So you need to set a custom displayhook while you're\ndoing this. But you don't want that to replace the IPython displayhook\nif that's in use...and we're back to detecting the environment. Am I\nmissing something obvious?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5944392",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5944392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5944392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDQzOTI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-26T04:53:58Z",
    "updated_at": "2012-05-26T04:53:58Z",
    "author_association": "MEMBER",
    "body": "@minrk I was very deliberate to have the text repr of the Javascript output displayed when the Javascript is not run.  Running JavaScript code does have a security risk associated with it and when people load a notebook from someone else, I want them to see that if they run that cell, JavaScript code will run that could do harmful things.  I realize the text repr doesn't communicate that explicitely, but at least it indicates that JavaScript code would be run by that cell.  I don't think we should change that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5944418",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5944418",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5944418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDQ0MTg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-26T04:58:34Z",
    "updated_at": "2012-05-26T04:58:34Z",
    "author_association": "MEMBER",
    "body": "@takluyver Having notebook specific code is inevitable.  We already have this in `IPython.parallel` with the `wait_interactive` method that uses `clear_output` to display a status of tasks that are being completed.  The reality is that the notebook is much more powerful that the other frontends.  To leverage that power, people are going to have to write code that _can't_ work in the other frontends or in regular Python.  This gap between the different frontends is only going to get larger over time as we and others build more widgety things for the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5944824",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5944824",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5944824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDQ4MjQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-26T05:58:47Z",
    "updated_at": "2012-05-26T05:58:47Z",
    "author_association": "MEMBER",
    "body": "I take your point about security, so maybe we shouldn't change it.  Though I can say from my experience writing various js notebooks that the current behavior is terrifically unpleasant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5945561",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-5945561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 5945561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDU1NjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-26T08:49:16Z",
    "updated_at": "2012-05-26T08:49:16Z",
    "author_association": "MEMBER",
    "body": "On 26 May 2012 05:58, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n>  To leverage that power, people are going to have to write code that _can't_ work in the other frontends or in regular Python.\n\nI don't see this view flying, especially because people _can_ write a\nprogress bar that works in regular Python at a terminal. It's one\nthing for our own code to be notebook-specific, but third party\nlibraries like PyMC are unlikely to use progress bars that will only\nwork in the notebook. And of course non-Python tools like wget, which\nI can easily and usefully invoke from the notebook, are not going to\nuse the notebook's API.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6184295",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-6184295",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 6184295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODQyOTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T18:48:40Z",
    "updated_at": "2012-06-07T18:48:40Z",
    "author_association": "MEMBER",
    "body": "I think we should go ahead and merge this one.  But I just saw that it needs to be rebased.  @mdboom can you do that?  I will merge it then.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6190641",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-6190641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 6190641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA2NDE=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T23:11:31Z",
    "updated_at": "2012-06-07T23:11:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6202907",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-6202907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 6202907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDI5MDc=",
    "user": {
      "login": "mdboom",
      "id": 38294,
      "node_id": "MDQ6VXNlcjM4Mjk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdboom",
      "html_url": "https://github.com/mdboom",
      "followers_url": "https://api.github.com/users/mdboom/followers",
      "following_url": "https://api.github.com/users/mdboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdboom/subscriptions",
      "organizations_url": "https://api.github.com/users/mdboom/orgs",
      "repos_url": "https://api.github.com/users/mdboom/repos",
      "events_url": "https://api.github.com/users/mdboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-08T13:37:50Z",
    "updated_at": "2012-06-08T13:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is fixed now.  Sorry -- it was kind of a hairy rebase...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6208813",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-6208813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 6208813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDg4MTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-08T17:43:35Z",
    "updated_at": "2012-06-08T17:43:35Z",
    "author_association": "MEMBER",
    "body": "So can we merge this now?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6209092",
    "html_url": "https://github.com/ipython/ipython/pull/1674#issuecomment-6209092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1674",
    "id": 6209092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDkwOTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-08T17:56:06Z",
    "updated_at": "2012-06-08T17:56:06Z",
    "author_association": "MEMBER",
    "body": "Yes, merging now.  Thanks @mdboom!\n"
  }
]
