[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6052741",
    "html_url": "https://github.com/ipython/ipython/issues/1823#issuecomment-6052741",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1823",
    "id": 6052741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTI3NDE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-01T03:15:16Z",
    "updated_at": "2012-06-01T03:15:16Z",
    "author_association": "MEMBER",
    "body": "The roundtrip guarantee is that `import(export(notebook))` returns the _same_ notebook, perfectly lossless.  The python-script export/import works, but it's lossy (in metadata, not code), and will never not be.\n\n> Any .py file with this format is guaranteed to be importable.\n\nEven this is too much of a caveat.  There are no Python scripts that are not importable as notebooks, and this will likely always be true.  The worst-case scenario is that you get one big code cell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6057174",
    "html_url": "https://github.com/ipython/ipython/issues/1823#issuecomment-6057174",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1823",
    "id": 6057174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTcxNzQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-01T09:58:23Z",
    "updated_at": "2012-06-01T09:58:23Z",
    "author_association": "MEMBER",
    "body": "Why would you type the markers manually? I'd import a Python script as is, and then split the cells up inside the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6059979",
    "html_url": "https://github.com/ipython/ipython/issues/1823#issuecomment-6059979",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1823",
    "id": 6059979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTk5Nzk=",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-01T13:09:52Z",
    "updated_at": "2012-06-01T13:23:15Z",
    "author_association": "NONE",
    "body": "> The roundtrip guarantee is that import(export(notebook)) returns the same notebook, perfectly lossless\n\nThe current documentation says otherwise:\n\n> Warning\n> While in simple cases you can roundtrip a notebook to Python, edit the python file and import it back without loss of main content, this is in general not guaranteed to work at all. First, there is extra metadata saved in the notebook that may not be saved to the .py format. \n> And as the notebook format evolves in complexity, there will be attributes of the notebook that will not survive a roundtrip through the Python form. You should think of the Python format as a way to output a script version of a notebook and the import capabilities as a way to load existing code to get a notebook started. But the Python version is not an alternate notebook format.\n\nSee here: http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html\n\n> Even this is too much of a caveat. There are no Python scripts that are not importable as notebooks\n\nI'm not just suggesting to guarantee that it's importable, I'm suggesting that it guarantee that the specified cell structure will actually be respected.  Of course, if you want to guarantee even more (what?), that's fine with me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6060140",
    "html_url": "https://github.com/ipython/ipython/issues/1823#issuecomment-6060140",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1823",
    "id": 6060140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjAxNDA=",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-01T13:19:22Z",
    "updated_at": "2012-06-01T13:19:22Z",
    "author_association": "NONE",
    "body": "> Why would you type the markers manually? I'd import a Python script as is, and then split the cells up inside the notebook\n\nThere are a lot more use cases than that simple case.  For example, I have a lot of Python code with structured comments that can be converted mostly automatically (using some find/replace), but requires some manual cleanup, and may also require groups of cells to be moved around.  A lot of those things are easy to do in a text editor and hard inside the notebook interface.\n\nIn any case, .py export/import is currently there.  I'm just suggesting that the documentation is clearer about what does and doesn't work and that the markers be made consistent with common syntactic conventions.  And if you're going to change the markers anyway, you might as well change them to something that's easy to type.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56284764",
    "html_url": "https://github.com/ipython/ipython/issues/1823#issuecomment-56284764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1823",
    "id": 56284764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjg0NzY0",
    "user": {
      "login": "mforbes",
      "id": 1028433,
      "node_id": "MDQ6VXNlcjEwMjg0MzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1028433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mforbes",
      "html_url": "https://github.com/mforbes",
      "followers_url": "https://api.github.com/users/mforbes/followers",
      "following_url": "https://api.github.com/users/mforbes/following{/other_user}",
      "gists_url": "https://api.github.com/users/mforbes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mforbes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mforbes/subscriptions",
      "organizations_url": "https://api.github.com/users/mforbes/orgs",
      "repos_url": "https://api.github.com/users/mforbes/repos",
      "events_url": "https://api.github.com/users/mforbes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mforbes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-21T00:34:13Z",
    "updated_at": "2014-09-21T00:34:13Z",
    "author_association": "NONE",
    "body": "I would also really appreciate some sort of explicit guarantee on the input side of things as this would provide a nice solution to the issue of [version controlling notebooks without including the output](http://stackoverflow.com/questions/18734739/using-ipython-notebooks-under-version-control) (which is really a \"build product\").  [Several](http://stackoverflow.com/a/25765194/1088938) [people](http://stackoverflow.com/a/24888877/1088938) report success with this approach, but the warning in the documentation and lack of formal guarantee makes [other nervous](http://stackoverflow.com/questions/18734739/using-ipython-notebooks-under-version-control#comment39457951_24888877).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56285019",
    "html_url": "https://github.com/ipython/ipython/issues/1823#issuecomment-56285019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1823",
    "id": 56285019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjg1MDE5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-21T00:49:35Z",
    "updated_at": "2014-09-21T00:49:35Z",
    "author_association": "MEMBER",
    "body": "guaranteed lossless roundtrip to other formats will not be supported by IPython. There are a variety of export formats via nbconvert, and it makes sense to have some input formats. But it will likely never be in scope for the project for any of those exports and related imports to be idempotent. That doesn't mean that what's lost is problematic - preserving all input, for instance, isn't difficult, and getting rid of outputs and metadata seem to be exactly what you are after for reducing churn under version control.\n"
  }
]
