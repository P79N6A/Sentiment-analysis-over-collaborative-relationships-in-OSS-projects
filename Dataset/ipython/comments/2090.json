[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6769545",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-6769545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 6769545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Njk1NDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-04T23:56:39Z",
    "updated_at": "2012-07-04T23:56:39Z",
    "author_association": "MEMBER",
    "body": "Can't look at the code right now, but I think this is super useful functionality. I keep myself wanting it all the time.  Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6986149",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-6986149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 6986149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODYxNDk=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-14T20:00:25Z",
    "updated_at": "2012-07-14T20:00:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau You are right in your reasoning, and one of my reasons for implementing the feature in this particular way was that I didn't want to create untested code, it seemed so much safer to use proven and working code. As for the end of the notebook, you are right that this is going to create newer and newer cells, and perhaps, I could check for that. That should not be too hard, for there is code for that, too:)\n\nI also wanted to point out earlier that I hadn't updated the user manual pages either. I will do that in the next iteration. But I would have a very dumb question here. There is a pending pull request here. What happens, if I implement what you suggest (checking of the last code cell), update the manual, and extend one of the notebooks? How will the PR be handled? Do I have to issue a new PR then, or I could still work on the code that I uploaded to my branch?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6987809",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-6987809",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 6987809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODc4MDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T00:02:02Z",
    "updated_at": "2012-07-15T00:02:02Z",
    "author_association": "MEMBER",
    "body": "@v923z any changes you make to this branch will be reflected in the PR.  For this reason, it is appropriate to create a PR when you have enough code to start a discussion about it (e.g. if you have a question about part of the implementation), and just continue to commit to the branch until it is done.  You can also rebase on master and force push, in case you want to clean up a PR or squash commits.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7112916",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7112916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7112916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTI5MTY=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T19:45:25Z",
    "updated_at": "2012-07-19T19:45:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Thanks for the suggestions, I have a new implementation now. First, the code contains a couple of comment lines, second, I also check whether we really have to insert a new code cell. That would cover the case, when cell execution happens at a place where there is already an empty cell below. In such a case, the cursor simply jumps to the next (and empty) cell, but no new cell is created. This should prevent pollution of the notebook by lots of empty cells. \n\nI am not sure whether the method that I used for checking for the emptiness of the cell is the best one. Brian could perhaps comment on this?\n\nI have also added a section to the doc source file. In order to accommodate the explanation of the Alt-Enter combination, I had to change the section on 'Ctrl-Enter' a bit. I hope it is OK. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7122331",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7122331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7122331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjIzMzE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T04:53:16Z",
    "updated_at": "2012-07-20T04:53:16Z",
    "author_association": "MEMBER",
    "body": "And I'm far from beeing the best to review english in doc...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7122590",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7122590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7122590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjI1OTA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T05:22:55Z",
    "updated_at": "2012-07-20T05:22:55Z",
    "author_association": "MEMBER",
    "body": "English looks good, and I'm +1 on the feature.  Haven't reviewed the implementation though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7128630",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7128630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7128630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjg2MzA=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T12:05:58Z",
    "updated_at": "2012-07-20T12:05:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau You are absolutely right, so I added checking for this. A new cell will be inserted only if the cell below contains non-whitespace characters (tabs, spaces, and linefeeds will be regarded as empty cell.) I think this should address the issue you raised.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7130033",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7130033",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7130033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzAwMzM=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T13:25:28Z",
    "updated_at": "2012-07-20T13:25:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't want to throw this discussion off track, but I was wondering whether, along the lines that Matthias brought up, we should prevent \"execution\" of a cell, if it is empty, i.e., it contains only whitespaces. This could be done by adding \nthe single line \n\n```\n    if(/\\S/.test(cell.get_text()) == false) return;\n```\n\nto the prototype function \n\n```\nNotebook.prototype.execute_selected_cell = function (options)\n```\n\nThis would simply return, if there is nothing in the current code cell. Should I add this to the present pull request? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7131191",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7131191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7131191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzExOTE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T14:17:17Z",
    "updated_at": "2012-07-20T14:17:17Z",
    "author_association": "MEMBER",
    "body": "I would say no, as it is a convenient way to execute an empty cell to remove output.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7131315",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7131315",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7131315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzEzMTU=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T14:22:25Z",
    "updated_at": "2012-07-20T14:22:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "On one hand, I see your point, but on the other hand, one could simply delete the cell, couldn't they? If you are executing an empty cell in order to remove the output, you have to remove the input, too, so nothing is left, really...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7131832",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7131832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7131832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzE4MzI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T14:41:02Z",
    "updated_at": "2012-07-20T14:41:02Z",
    "author_association": "MEMBER",
    "body": "No, what I mean, if that  if you want to start a cell from scratch, you will `Ctrl-A, Ctrl-Enter`, type. \nEven `Ctrl-A,Ctrl-C, Ctrl-Enter,Ctrl-V` is faster than go for the menu to clear output.\n\nAnyway, this shouldn't be added to the same pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7141340",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-7141340",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 7141340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDEzNDA=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-20T20:51:27Z",
    "updated_at": "2012-07-20T20:51:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Matthias, thanks for pulling this in! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12228287",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-12228287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 12228287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjI4Mjg3",
    "user": {
      "login": "wltrimbl",
      "id": 1740520,
      "node_id": "MDQ6VXNlcjE3NDA1MjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1740520?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wltrimbl",
      "html_url": "https://github.com/wltrimbl",
      "followers_url": "https://api.github.com/users/wltrimbl/followers",
      "following_url": "https://api.github.com/users/wltrimbl/following{/other_user}",
      "gists_url": "https://api.github.com/users/wltrimbl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wltrimbl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wltrimbl/subscriptions",
      "organizations_url": "https://api.github.com/users/wltrimbl/orgs",
      "repos_url": "https://api.github.com/users/wltrimbl/repos",
      "events_url": "https://api.github.com/users/wltrimbl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wltrimbl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T17:06:47Z",
    "updated_at": "2013-01-14T17:07:22Z",
    "author_association": "NONE",
    "body": "According to this discussion thread: \nhttp://grokbase.com/t/scipy.org/ipython-user/12bxs04f8f/notebook-alt-enter-on-the-mac \nand my experience with ipython 0.13.1 on OSX 10.8 / Firefox 18\nthe Alt-enter keybinding has been implemented in a way that simply does not work on some Mac OS systems.  These mac users must use the mouse to create insert new cells in the middle of a notebook.\n\nAccording to this article, capturing alt- and such are involved:\nhttp://unixpapa.com/js/key.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12232995",
    "html_url": "https://github.com/ipython/ipython/pull/2090#issuecomment-12232995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2090",
    "id": 12232995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjMyOTk1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-14T18:43:37Z",
    "updated_at": "2013-01-14T18:43:37Z",
    "author_association": "MEMBER",
    "body": "This will probably be fixable once we have properly configurable keybindings in notebook.\nThere are a lot of gotchas with all os/browser/layout and we can't please everyone right now. \n\nBut thanks for the link that might help when we work on that later. \n"
  }
]
