[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12552703",
    "html_url": "https://github.com/ipython/ipython/issues/2745#issuecomment-12552703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2745",
    "id": 12552703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTUyNzAz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-22T16:32:34Z",
    "updated_at": "2013-01-22T16:32:34Z",
    "author_association": "MEMBER",
    "body": "Here's what appears to be the current state of this:\n- prun still does not use the input splitter transformations; that part of PR #2403 still applies.\n- In e2d12d2c181f1e1f25609bbdcc8366c211888795, @takluyver made %time work with ast transformations, but did not make %time work with other types of transformations.\n\nNote that the %timeit magic also uses the input_splitter transform_cell function.\n\n@takluyver, does the transform_cell method invoke ast transformations?  If not, what is the current way to get all transformations applied?  Is it this?\n- `input_splitter.transform_cell`\n- parse to an ast\n- run the `transform_ast` method on the ast\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20232783",
    "html_url": "https://github.com/ipython/ipython/issues/2745#issuecomment-20232783",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2745",
    "id": 20232783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjMyNzgz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-29T16:29:49Z",
    "updated_at": "2013-06-29T16:29:49Z",
    "author_association": "MEMBER",
    "body": "%time now calls `transform_cell` as well. %prun and %timeit don't, although I guess most of the time if you're precisely timing something, you don't want the overhead of things like IPython magics.\n\nThe steps we take to transform input code are:\n- input_splitter transformations (transform_cell applies them all)\n- For single line cells, call prefilter to do pick up unescaped magics etc. (e.g. `lsmagic`). Note that this can cause very confusing bugs if you try to do it on a multiline cell.\n- Parse to an ast\n- `transform_ast` (which by default does nothing in IPython, but can be used by projects like Sympy & Sage)\n\nNote that if you use `run_cell`, the main API method to run code, it should apply all of these transformations before running it. \n"
  }
]
