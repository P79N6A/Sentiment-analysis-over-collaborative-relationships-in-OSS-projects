[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84091596",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-84091596",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 84091596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDkxNTk2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T18:11:56Z",
    "updated_at": "2015-03-20T18:11:56Z",
    "author_association": "MEMBER",
    "body": "If your application has an event loop, the kernel can be integrated with it so that both the kernel and your application are responding. This is generally more reliable than running the kernel in a separate thread. See e.g. here for an example with a Qt application:\n\nhttps://github.com/ipython/ipython/blob/master/examples/Embedding/ipkernel_qtapp.py\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84092531",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-84092531",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 84092531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDkyNTMx",
    "user": {
      "login": "albertz",
      "id": 59132,
      "node_id": "MDQ6VXNlcjU5MTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertz",
      "html_url": "https://github.com/albertz",
      "followers_url": "https://api.github.com/users/albertz/followers",
      "following_url": "https://api.github.com/users/albertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertz/subscriptions",
      "organizations_url": "https://api.github.com/users/albertz/orgs",
      "repos_url": "https://api.github.com/users/albertz/repos",
      "events_url": "https://api.github.com/users/albertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T18:16:36Z",
    "updated_at": "2015-03-20T18:16:36Z",
    "author_association": "NONE",
    "body": "No, it does not have an event loop.\n\nAlso, I like a general solution which works just in any case.\n\nWhy is the threaded version not reliable? And why is not possible to fix that?\n\nThe provided code snippet, does it have any flaws?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84096236",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-84096236",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 84096236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDk2MjM2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-20T18:35:34Z",
    "updated_at": "2015-03-20T18:35:34Z",
    "author_association": "MEMBER",
    "body": "Broadly, because the model of concurrency with threads and shared memory makes it easy to inadvertantly introduce bugs. You have to write all the code in your application carefully to take into account that another thread might change things at any time. With an event loop, other things don't change while one callback is running.\n\nI don't see any flaws in your code at a glance (besides the general issue of involving threads), though of course that doesn't mean there aren't any.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108437074",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-108437074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 108437074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODQzNzA3NA==",
    "user": {
      "login": "vanem",
      "id": 5991324,
      "node_id": "MDQ6VXNlcjU5OTEzMjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5991324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vanem",
      "html_url": "https://github.com/vanem",
      "followers_url": "https://api.github.com/users/vanem/followers",
      "following_url": "https://api.github.com/users/vanem/following{/other_user}",
      "gists_url": "https://api.github.com/users/vanem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vanem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vanem/subscriptions",
      "organizations_url": "https://api.github.com/users/vanem/orgs",
      "repos_url": "https://api.github.com/users/vanem/repos",
      "events_url": "https://api.github.com/users/vanem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vanem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T14:02:26Z",
    "updated_at": "2015-06-03T14:02:26Z",
    "author_association": "NONE",
    "body": "I'm also very interested in the topic of remote debugging, for the same reasons as the OP. The situation is especially bad on Windows, where the console remote debuggers mentioned by the OP don't work at all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144372762",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-144372762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 144372762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDM3Mjc2Mg==",
    "user": {
      "login": "ereOn",
      "id": 585131,
      "node_id": "MDQ6VXNlcjU4NTEzMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/585131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ereOn",
      "html_url": "https://github.com/ereOn",
      "followers_url": "https://api.github.com/users/ereOn/followers",
      "following_url": "https://api.github.com/users/ereOn/following{/other_user}",
      "gists_url": "https://api.github.com/users/ereOn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ereOn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ereOn/subscriptions",
      "organizations_url": "https://api.github.com/users/ereOn/orgs",
      "repos_url": "https://api.github.com/users/ereOn/repos",
      "events_url": "https://api.github.com/users/ereOn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ereOn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T11:47:07Z",
    "updated_at": "2015-09-30T11:47:07Z",
    "author_association": "NONE",
    "body": "@takluyver The link you provided doesn't point to an existing resource anymore. I'm really interested in it. Any chance you could fix it ?\n\nI can't find that file anymore by browsing the repository.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144388187",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-144388187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 144388187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDM4ODE4Nw==",
    "user": {
      "login": "gbaty",
      "id": 2297918,
      "node_id": "MDQ6VXNlcjIyOTc5MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2297918?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbaty",
      "html_url": "https://github.com/gbaty",
      "followers_url": "https://api.github.com/users/gbaty/followers",
      "following_url": "https://api.github.com/users/gbaty/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbaty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbaty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbaty/subscriptions",
      "organizations_url": "https://api.github.com/users/gbaty/orgs",
      "repos_url": "https://api.github.com/users/gbaty/repos",
      "events_url": "https://api.github.com/users/gbaty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbaty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T12:57:51Z",
    "updated_at": "2015-09-30T12:57:51Z",
    "author_association": "NONE",
    "body": "I think this example is now here:\nhttps://github.com/ipython/ipykernel/blob/master/examples/embedding/ipkernel_qtapp.py\n\nIt seems that examples have been separated in two groups:\n- https://github.com/ipython/ipython/tree/master/examples/Embedding\n- https://github.com/ipython/ipykernel/tree/master/examples/embedding/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144393762",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-144393762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 144393762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDM5Mzc2Mg==",
    "user": {
      "login": "ereOn",
      "id": 585131,
      "node_id": "MDQ6VXNlcjU4NTEzMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/585131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ereOn",
      "html_url": "https://github.com/ereOn",
      "followers_url": "https://api.github.com/users/ereOn/followers",
      "following_url": "https://api.github.com/users/ereOn/following{/other_user}",
      "gists_url": "https://api.github.com/users/ereOn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ereOn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ereOn/subscriptions",
      "organizations_url": "https://api.github.com/users/ereOn/orgs",
      "repos_url": "https://api.github.com/users/ereOn/repos",
      "events_url": "https://api.github.com/users/ereOn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ereOn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T13:24:03Z",
    "updated_at": "2015-09-30T13:24:03Z",
    "author_association": "NONE",
    "body": "@gbaty Great. Thanks !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459003582",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459003582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459003582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTAwMzU4Mg==",
    "user": {
      "login": "albertz",
      "id": 59132,
      "node_id": "MDQ6VXNlcjU5MTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertz",
      "html_url": "https://github.com/albertz",
      "followers_url": "https://api.github.com/users/albertz/followers",
      "following_url": "https://api.github.com/users/albertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertz/subscriptions",
      "organizations_url": "https://api.github.com/users/albertz/orgs",
      "repos_url": "https://api.github.com/users/albertz/repos",
      "events_url": "https://api.github.com/users/albertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T16:12:03Z",
    "updated_at": "2019-01-30T16:12:03Z",
    "author_association": "NONE",
    "body": "I was wondering, is there an update here? It would be nice to have an easy way to run an embedded IPython kernel in my app which I can access remotely."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459027592",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459027592",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459027592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTAyNzU5Mg==",
    "user": {
      "login": "ihnorton",
      "id": 327706,
      "node_id": "MDQ6VXNlcjMyNzcwNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/327706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ihnorton",
      "html_url": "https://github.com/ihnorton",
      "followers_url": "https://api.github.com/users/ihnorton/followers",
      "following_url": "https://api.github.com/users/ihnorton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ihnorton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ihnorton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ihnorton/subscriptions",
      "organizations_url": "https://api.github.com/users/ihnorton/orgs",
      "repos_url": "https://api.github.com/users/ihnorton/repos",
      "events_url": "https://api.github.com/users/ihnorton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ihnorton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T17:12:34Z",
    "updated_at": "2019-01-30T17:12:53Z",
    "author_association": "NONE",
    "body": "@albertz you may want to have a look at https://github.com/QuantStack/xeus-python, which implements the protocol in C++ and is designed in part for embedding use-cases (e.g. https://github.com/Slicer/SlicerJupyter), and in particular to enable remote debugging. cc @SylvainCorlay "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459747211",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459747211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459747211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTc0NzIxMQ==",
    "user": {
      "login": "albertz",
      "id": 59132,
      "node_id": "MDQ6VXNlcjU5MTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertz",
      "html_url": "https://github.com/albertz",
      "followers_url": "https://api.github.com/users/albertz/followers",
      "following_url": "https://api.github.com/users/albertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertz/subscriptions",
      "organizations_url": "https://api.github.com/users/albertz/orgs",
      "repos_url": "https://api.github.com/users/albertz/repos",
      "events_url": "https://api.github.com/users/albertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T14:50:18Z",
    "updated_at": "2019-02-01T14:50:18Z",
    "author_association": "NONE",
    "body": "I implemented this as a small package myself now, here: https://github.com/albertz/background-zmq-ipython"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459752910",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459752910",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459752910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTc1MjkxMA==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T15:06:31Z",
    "updated_at": "2019-02-01T15:06:31Z",
    "author_association": "MEMBER",
    "body": "@albertz you may be interested in the following: https://blog.jupyter.org/a-new-python-kernel-for-jupyter-fcdf211e30a8"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459963147",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459963147",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459963147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk2MzE0Nw==",
    "user": {
      "login": "albertz",
      "id": 59132,
      "node_id": "MDQ6VXNlcjU5MTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertz",
      "html_url": "https://github.com/albertz",
      "followers_url": "https://api.github.com/users/albertz/followers",
      "following_url": "https://api.github.com/users/albertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertz/subscriptions",
      "organizations_url": "https://api.github.com/users/albertz/orgs",
      "repos_url": "https://api.github.com/users/albertz/repos",
      "events_url": "https://api.github.com/users/albertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T12:56:53Z",
    "updated_at": "2019-02-02T12:56:53Z",
    "author_association": "NONE",
    "body": " @SylvainCorlay @ihnorton That sounds very interesting. From the homepage (xeus-python or SlicerJupyter), I don't exactly understand how I can do what I want, though. The usage of my package is as follows now:\r\n\r\n    import background_zmq_ipython\r\n    background_zmq_ipython.init_ipython_kernel()\r\n\r\nThe kernel will then run in the background in its own thread.\r\nThe init will print some message similar to this on stdout:\r\n\r\n    To connect another client to this IPython kernel, use:\r\n    jupyter console --existing kernel-1111.json\r\n\r\nThis is exactly want I want. How could I get the same with xeus-python?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459963892",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459963892",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459963892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk2Mzg5Mg==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T13:08:55Z",
    "updated_at": "2019-02-02T13:08:55Z",
    "author_association": "MEMBER",
    "body": "@albertz xeus and xeus-based kernels allow the user to override the concurrency model of the kernel, and use another one.\r\n\r\nThis is mostly useful in a situation of e.g. a desktop app that would be running an event loop. You don't want to start another event loop for your kernel. Instead, you probably want your python kernel to hook into the event loop of your application. This is how the SlicerJupyter made use of xeus."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459976350",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-459976350",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 459976350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk3NjM1MA==",
    "user": {
      "login": "albertz",
      "id": 59132,
      "node_id": "MDQ6VXNlcjU5MTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertz",
      "html_url": "https://github.com/albertz",
      "followers_url": "https://api.github.com/users/albertz/followers",
      "following_url": "https://api.github.com/users/albertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertz/subscriptions",
      "organizations_url": "https://api.github.com/users/albertz/orgs",
      "repos_url": "https://api.github.com/users/albertz/repos",
      "events_url": "https://api.github.com/users/albertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T16:02:17Z",
    "updated_at": "2019-02-02T16:02:17Z",
    "author_association": "NONE",
    "body": "In my case (and how I did it in background_zmq_ipython), this is really what I want, i.e. I want that the kernel runs its own event loop (for applications which don't really have a (normal) event loop in the main thread, such as most console utilities)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/460047123",
    "html_url": "https://github.com/ipython/ipython/issues/8097#issuecomment-460047123",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8097",
    "id": 460047123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDA0NzEyMw==",
    "user": {
      "login": "albertz",
      "id": 59132,
      "node_id": "MDQ6VXNlcjU5MTMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertz",
      "html_url": "https://github.com/albertz",
      "followers_url": "https://api.github.com/users/albertz/followers",
      "following_url": "https://api.github.com/users/albertz/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertz/subscriptions",
      "organizations_url": "https://api.github.com/users/albertz/orgs",
      "repos_url": "https://api.github.com/users/albertz/repos",
      "events_url": "https://api.github.com/users/albertz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-03T12:26:13Z",
    "updated_at": "2019-02-03T12:26:37Z",
    "author_association": "NONE",
    "body": "Also, I'm curious: Why would you not want an own event loop for the kernel? What is the advantage of sharing the same event loop with the main application?\r\n\r\nI can see some advantages of having a separate event loop & thread for the kernel:\r\n\r\n* It always works, and it is independent from whatever you do in the main thread.\r\n* It's much simpler to maintain (you don't have to deal with any custom event loop which runs in the main thread, because you will just have your own).\r\n* The code is probably much simpler. Also the number of dependencies. (Only IPython/Jupyter.)\r\n\r\nI cannot really see much advantage of sharing the event loop with the main application, except maybe:\r\n\r\n* The code of the application is not multi-threading safe, so it must all run in a single thread.\r\n"
  }
]
