[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2096413",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2096413",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2096413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTY0MTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T18:31:37Z",
    "updated_at": "2011-09-14T18:31:37Z",
    "author_association": "MEMBER",
    "body": "We certainly need to improve the ways in which we load code, but you should note that there are at least two mechanisms right now via which you _can_ import code into a notebook:\n- if you drag and drop a .py file into the 'dashboard' page (the initial opening page of the notebook server), it will get opened as a notebook.  You can prepare a .py file for import with separated code blocks by simply adding cell markers, you can see how they are written by simply exporting an existing notebook to a .py file with the Download button.\n- within an existing notebook, the `%loadpy` magic loads any local or remote .py file into a single cell.\n\nNow, I don't think we'll want to add support for the kind of markup that you describe, because the parsing is more complex than what we're using at the moment and we're trying to really keep that code as simple as possible.  Our markup right now for import is simply based on explicit cell markers, and text cells are all comments.  That means the parsing is almost stateless, and state transitions are based on simple and explicit text markers.  \n\nI know that means that pymvpa-style examples won't work immediately, sorry...  But it would be easy for you to have a local script that translates from pymvpa-style to notebook-in-py for import, without adding that parsing complexity to our codebase.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2097105",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2097105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2097105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTcxMDU=",
    "user": {
      "login": "yarikoptic",
      "id": 39889,
      "node_id": "MDQ6VXNlcjM5ODg5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarikoptic",
      "html_url": "https://github.com/yarikoptic",
      "followers_url": "https://api.github.com/users/yarikoptic/followers",
      "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions",
      "organizations_url": "https://api.github.com/users/yarikoptic/orgs",
      "repos_url": "https://api.github.com/users/yarikoptic/repos",
      "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarikoptic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T19:34:12Z",
    "updated_at": "2011-09-14T19:34:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Wed, 14 Sep 2011, Fernando Perez wrote:\n\n> - if you drag and drop a .py file into the 'dashboard' page (the initial opening page of the notebook server), it will get opened as a notebook.\n\nAh!  I just didn't realize that one was available...  still -- why not\nto add a button \"Import\"?   funny or not, but some times\ndrag-and-drop is kinda N/A ;)\n\n> Now, I don't think we'll want to add support for the kind of markup that you describe\n\nFair enough BUT -- basic import from sphinx's .rst should be quite\nsimple - pretty much everything than code lines starting with >> could\nbe treated as text blocks separated by empty lines.  It would be really\nof great utility (saw an example on someone's page, pointed notebook,\ntook from there)\n\n> I know that means that pymvpa-style examples won't work immediately, sorry...\n\neh -- how only could you guess what I am leading to? ;)\n\n## \n\nYaroslav O. Halchenko\nPostdoctoral Fellow,   Department of Psychological and Brain Sciences\nDartmouth College, 419 Moore Hall, Hinman Box 6207, Hanover, NH 03755\nPhone: +1 (603) 646-9834                       Fax: +1 (603) 646-1419\nWWW:   http://www.linkedin.com/in/yarik\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2097212",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2097212",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2097212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTcyMTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T19:42:56Z",
    "updated_at": "2011-09-14T19:42:56Z",
    "author_association": "MEMBER",
    "body": "On Wed, Sep 14, 2011 at 12:34 PM, Yaroslav Halchenko\nreply@reply.github.com\nwrote:\n\n> Ah!  I just didn't realize that one was available...  still -- why not\n> to add a button \"Import\"?   funny or not, but some times\n> drag-and-drop is kinda N/A ;)\n\nAh, odd as this may sound, the reason is that drag and drop works very\nwell and reliably in javascript in all browsers, but 'upload' buttons\nthat open a file dialog have all kinds of problems.  @ellisonbg looked\ninto it, so he may have more details.  I know that things like gmail\nand imgur do have an upload button in addition to the drag and drop,\nso there must be a way to make it work, I just don't know what it\nentails and Brian mentioned having problems with it.\n\nIf anyone can pitch in and help with this, I would definitely love to\nhave a proper upload button.  The drag and drop option is actually\nvery annoying to use on a small screen, since it requires that you see\nboth the browser and your file manager/desktop.  If you have a\nmaximized browser due to a small screen, the usability of the drag and\ndrop option is actually a disaster.\n\nSo we're all for an upload button, as long as it's done in a way that\nis reliable across browsers.\n\n> > Now, I don't think we'll want to add support for the kind of markup that you describe\n> \n> Fair enough BUT -- basic import from sphinx's .rst should be quite\n> simple - pretty much everything than code lines starting with >> could\n> be treated as text blocks separated by empty lines.  It would be really\n> of great utility (saw an example on someone's page, pointed notebook,\n> took from there)\n\nOh, this one we most certainly would love to have: rst import.  I\nmeant we wouldn't go for the mvpa-style parsing, but rst import would\nbe awesome to have.  Feel free to send in a pull request, we'd love to\nreview it :)\n\n> > I know that means that pymvpa-style examples won't work immediately, sorry...\n> \n> eh -- how only could you guess what I am leading to? ;)\n\nI know your evil ways :)\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2097420",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2097420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2097420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTc0MjA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T20:00:53Z",
    "updated_at": "2011-09-14T20:00:53Z",
    "author_association": "MEMBER",
    "body": "On Wed, Sep 14, 2011 at 12:42 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> On Wed, Sep 14, 2011 at 12:34 PM, Yaroslav Halchenko\n> reply@reply.github.com\n> wrote:\n> \n> > Ah!  I just didn't realize that one was available...  still -- why not\n> > to add a button \"Import\"?   funny or not, but some times\n> > drag-and-drop is kinda N/A ;)\n> \n> Ah, odd as this may sound, the reason is that drag and drop works very\n> well and reliably in javascript in all browsers, but 'upload' buttons\n> that open a file dialog have all kinds of problems.  @ellisonbg looked\n> into it, so he may have more details.  I know that things like gmail\n> and imgur do have an upload button in addition to the drag and drop,\n> so there must be a way to make it work, I just don't know what it\n> entails and Brian mentioned having problems with it.\n\nThe problem is the following:\n- You can't style the browser's default upload dialog, so you end up\n  with a butt ugly UI.\n- The only way of getting around this in a robust, cross platform\n  manner and support things like multiple uploads is to use flash.\n\nI am not excited at all about flash and have zero expertise in it\n(furthermore no $ to pay for licenses).  That leaves us with drag and\ndrop, which is fully functional and has a nice UI.  I agree it is not\nas nice of a UI in some ways as an upload button, but I think it is\nthe best solution for now.\n\n> If anyone can pitch in and help with this, I would definitely love to\n> have a proper upload button.  The drag and drop option is actually\n> very annoying to use on a small screen, since it requires that you see\n> both the browser and your file manager/desktop.  If you have a\n> maximized browser due to a small screen, the usability of the drag and\n> drop option is actually a disaster.\n> \n> So we're all for an upload button, as long as it's done in a way that\n> is reliable across browsers.\n\nWe are willing to pay for and use flash for this?\n\n> > > Now, I don't think we'll want to add support for the kind of markup that you describe\n> > \n> > Fair enough BUT -- basic import from sphinx's .rst should be quite\n> > simple - pretty much everything than code lines starting with >> could\n> > be treated as text blocks separated by empty lines.  It would be really\n> > of great utility (saw an example on someone's page, pointed notebook,\n> > took from there)\n> \n> Oh, this one we most certainly would love to have: rst import.  I\n> meant we wouldn't go for the mvpa-style parsing, but rst import would\n> be awesome to have.  Feel free to send in a pull request, we'd love to\n> review it :)\n> \n> > > I know that means that pymvpa-style examples won't work immediately, sorry...\n> > \n> > eh -- how only could you guess what I am leading to? ;)\n> \n> I know your evil ways :)\n> \n> Cheers,\n> \n> f\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/792#issuecomment-2097212\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2099282",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2099282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2099282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTkyODI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T23:12:04Z",
    "updated_at": "2011-09-14T23:12:04Z",
    "author_association": "MEMBER",
    "body": "On Wed, Sep 14, 2011 at 1:00 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> The problem is the following:\n> - You can't style the browser's default upload dialog, so you end up\n>   with a butt ugly UI.\n> - The only way of getting around this in a robust, cross platform\n>   manner and support things like multiple uploads is to use flash.\n\nIf the only limitation is the dialog UI style, then I'd vote for\nadding a button.  The usability of drag and drop on small screens is\nreally abysmal, you have to fiddle for a few minutes resizing various\nwindows so you can see both, then navigate over, then drag and drop.\nGmail's file dialog is just the standard OS dialog, not pretty but\nit's a normal dialog that people are already used to seeing.  And it\nat least is _usable_.\n\nNow, if there are stability problems with the file dialog, then it's\nobviously a different story.  But people already use their OS file\ndialogs dozens of times a day, so I wouldn't be too concerned about it\nin this context, if it does solve the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2100916",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2100916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2100916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA5MTY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T04:20:07Z",
    "updated_at": "2011-09-15T04:20:07Z",
    "author_association": "MEMBER",
    "body": "On Wed, Sep 14, 2011 at 4:12 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> On Wed, Sep 14, 2011 at 1:00 PM, Brian E. Granger\n> reply@reply.github.com\n> wrote:\n> \n> > The problem is the following:\n> > - You can't style the browser's default upload dialog, so you end up\n> >   with a butt ugly UI.\n> > - The only way of getting around this in a robust, cross platform\n> >   manner and support things like multiple uploads is to use flash.\n> \n> If the only limitation is the dialog UI style, then I'd vote for\n> adding a button.  The usability of drag and drop on small screens is\n> really abysmal, you have to fiddle for a few minutes resizing various\n> windows so you can see both, then navigate over, then drag and drop.\n> Gmail's file dialog is just the standard OS dialog, not pretty but\n> it's a normal dialog that people are already used to seeing.  And it\n> at least is _usable_.\n\nI am sorry I misspoke here.  The actual file _dialog_ is the one that\nis provided by the OS and it looks fine.  What you can't style is the\nUpload button and associated text that appears in the browser.  It is\nhorribly ugly and sticks out like a soar thumb.  The little button on\nGmail that says \"Attach a file\"...that is flash because of this exact\nissue.\n\n> Now, if there are stability problems with the file dialog, then it's\n> obviously a different story.  But people already use their OS file\n> dialogs dozens of times a day, so I wouldn't be too concerned about it\n> in this context, if it does solve the problem.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/792#issuecomment-2099282\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2110087",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2110087",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2110087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTAwODc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T22:50:38Z",
    "updated_at": "2011-09-15T22:50:38Z",
    "author_association": "MEMBER",
    "body": "On Wed, Sep 14, 2011 at 9:20 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> I am sorry I misspoke here.  The actual file _dialog_ is the one that\n> is provided by the OS and it looks fine.  What you can't style is the\n> Upload button and associated text that appears in the browser.  It is\n> horribly ugly and sticks out like a soar thumb.  The little button on\n> Gmail that says \"Attach a file\"...that is flash because of this exact\n> issue.\n\nAh, I understand your concern now.  But I have flashblock on, and on\nmy gmail client, the 'attach a file' is just a text hyperlink, not a\nbutton.  That seems like a pretty good compromise, as text is a lot\ncleaner than a button anyways...\n\nIt shouldn't be too hard to find how to use text instead of a button;\ninspecting gmail with firebug shows this:\n\n```\n<span id=\":sr\" class=\"el\" tabindex=\"2\" role=\"link\">Attach a file</span>\n```\n\nDoes that sound like a reasonable avenue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2110126",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2110126",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2110126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTAxMjY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T22:57:15Z",
    "updated_at": "2011-09-15T22:57:15Z",
    "author_association": "MEMBER",
    "body": "On Thu, Sep 15, 2011 at 3:50 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> On Wed, Sep 14, 2011 at 9:20 PM, Brian E. Granger\n> reply@reply.github.com\n> wrote:\n> \n> > I am sorry I misspoke here.  The actual file _dialog_ is the one that\n> > is provided by the OS and it looks fine.  What you can't style is the\n> > Upload button and associated text that appears in the browser.  It is\n> > horribly ugly and sticks out like a soar thumb.  The little button on\n> > Gmail that says \"Attach a file\"...that is flash because of this exact\n> > issue.\n> \n> Ah, I understand your concern now.  But I have flashblock on, and on\n> my gmail client, the 'attach a file' is just a text hyperlink, not a\n> button.  That seems like a pretty good compromise, as text is a lot\n> cleaner than a button anyways...\n> \n> It shouldn't be too hard to find how to use text instead of a button;\n> inspecting gmail with firebug shows this:\n> \n>    <span id=\":sr\" class=\"el\" tabindex=\"2\" role=\"link\">Attach a file</span>\n> \n> Does that sound like a reasonable avenue?\n\nI honestly don't know how they handle it, but can look into it.\n\nCheers,\n\nBrian\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/792#issuecomment-2110087\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2110327",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2110327",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2110327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTAzMjc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T23:22:11Z",
    "updated_at": "2011-09-15T23:22:11Z",
    "author_association": "MEMBER",
    "body": "On Thu, Sep 15, 2011 at 3:57 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> I honestly don't know how they handle it, but can look into it.\n\nA quick search led me to this guy:\n\nhttps://developer.mozilla.org/en/DOM/FileReader\n\nwhich supposedly is available on FF, chroem and safari.  I don't know\nif it's possible to have a text hyperlink whose target is one of this\nobjects...\n\nBut at least if you think that's a reasonable solution, we can leave\nthis issue open until one of us, or a nice and enterprising user, has\na chance to figure out how to do the text link -> upload trick work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2116822",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2116822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2116822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY4MjI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T17:27:17Z",
    "updated_at": "2011-09-16T17:27:17Z",
    "author_association": "MEMBER",
    "body": "This is the API that you use in JS _after_ the user has selected the\nfile to upload with the upload input type and file dialog.  I use this\nalready to grab the contents of files that are uploaded using\ndrag-and-drop.\n\nCheers,\n\nBrian\n\nOn Thu, Sep 15, 2011 at 4:22 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> On Thu, Sep 15, 2011 at 3:57 PM, Brian E. Granger\n> reply@reply.github.com\n> wrote:\n> \n> > I honestly don't know how they handle it, but can look into it.\n> \n> A quick search led me to this guy:\n> \n> https://developer.mozilla.org/en/DOM/FileReader\n> \n> which supposedly is available on FF, chroem and safari.  I don't know\n> if it's possible to have a text hyperlink whose target is one of this\n> objects...\n> \n> But at least if you think that's a reasonable solution, we can leave\n> this issue open until one of us, or a nice and enterprising user, has\n> a chance to figure out how to do the text link -> upload trick work.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/792#issuecomment-2110327\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2116907",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2116907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2116907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY5MDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-16T17:35:57Z",
    "updated_at": "2011-09-16T17:35:57Z",
    "author_association": "MEMBER",
    "body": "On Fri, Sep 16, 2011 at 10:27 AM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> This is the API that you use in JS _after_ the user has selected the\n> file to upload with the upload input type and file dialog.  I use this\n> already to grab the contents of files that are uploaded using\n> drag-and-drop.\n\nGot it.  So the question is how to trigger the upload _dialog_ from a\nsimple text hyperlink instead of an uggly,\nsticks-out-like-a-sore-thumb button...  I read some more and found the\nlengthy discussions you mentioned about ugly tricks to try and change\nthe style of that button; I agree we don't want to go there :)\n\nWell, eventually we'll figure out how google manages to trigger that\ndialog from a normal text hyperlink...\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2145197",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2145197",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2145197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDUxOTc=",
    "user": {
      "login": "Midnighter",
      "id": 135653,
      "node_id": "MDQ6VXNlcjEzNTY1Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/135653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Midnighter",
      "html_url": "https://github.com/Midnighter",
      "followers_url": "https://api.github.com/users/Midnighter/followers",
      "following_url": "https://api.github.com/users/Midnighter/following{/other_user}",
      "gists_url": "https://api.github.com/users/Midnighter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Midnighter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Midnighter/subscriptions",
      "organizations_url": "https://api.github.com/users/Midnighter/orgs",
      "repos_url": "https://api.github.com/users/Midnighter/repos",
      "events_url": "https://api.github.com/users/Midnighter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Midnighter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-20T13:55:15Z",
    "updated_at": "2011-09-20T13:55:15Z",
    "author_association": "NONE",
    "body": "One question about the upload feature, would it be a lot of work to allow uploading of any file format? Sometimes simply dragging&dropping a data file into the same directory as a notebook can be really handy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2147983",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2147983",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2147983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDc5ODM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-20T18:06:20Z",
    "updated_at": "2011-09-20T18:06:20Z",
    "author_association": "MEMBER",
    "body": "@Midnighter: no, it would be easy and I think it's a perfectly reasonable request... For situations when the notebook isn't running locally, it will be very useful especially for people who aren't terribly comfortable with ssh/scp.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2151338",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2151338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2151338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTEzMzg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T00:12:34Z",
    "updated_at": "2011-09-21T00:12:34Z",
    "author_association": "MEMBER",
    "body": "It is a little more complicated for two reasons:\n- Files that are uploaded will be put where the notebooks are, not\n  where the kernels are are running.\n- Special handling will be required for .py files as we currently\n  convert those to notebook upon uploading.  Because of this, I think we\n  will need two different UIs for notebook import and general file\n  upload.\n\nOn Tue, Sep 20, 2011 at 11:06 AM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> @Midnighter: no, it would be easy and I think it's a perfectly reasonable request... For situations when the notebook isn't running locally, it will be very useful especially for people who aren't terribly comfortable with ssh/scp.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/792#issuecomment-2147983\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2151369",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2151369",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2151369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTEzNjk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T00:18:50Z",
    "updated_at": "2011-09-21T00:18:50Z",
    "author_association": "MEMBER",
    "body": "On Tue, Sep 20, 2011 at 5:12 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> - Files that are uploaded will be put where the notebooks are, not\n>   where the kernels are are running.\n\nBut in the current system, the kernels do get started where the notebooks are...\n\n> - Special handling will be required for .py files as we currently\n>   convert those to notebook upon uploading.  Because of this, I think we\n>   will need two different UIs for notebook import and general file\n>   upload.\n\nYup, good point, hand't thought of that one.  Perhaps 'upload file' vs\n'import as notebook' or somesuch.  We'll need to figure out that\nupload-as-text-hyperlink question first though... :)\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2151399",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2151399",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2151399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTEzOTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T00:22:54Z",
    "updated_at": "2011-09-21T00:22:54Z",
    "author_association": "MEMBER",
    "body": "On Tue, Sep 20, 2011 at 5:18 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> On Tue, Sep 20, 2011 at 5:12 PM, Brian E. Granger\n> reply@reply.github.com\n> wrote:\n> \n> > - Files that are uploaded will be put where the notebooks are, not\n> >   where the kernels are are running.\n> \n> But in the current system, the kernels do get started where the notebooks are...\n\nTrue, but there is no promise they will remain in the same directory\nas the user walks around using %cd.  In situations like this, the\nnotebook server does not (and should not) keep track of the cwd of the\nmany kernels it has started.\n\n> > - Special handling will be required for .py files as we currently\n> >   convert those to notebook upon uploading.  Because of this, I think we\n> >   will need two different UIs for notebook import and general file\n> >   upload.\n> \n> Yup, good point, hand't thought of that one.  Perhaps 'upload file' vs\n> 'import as notebook' or somesuch.  We'll need to figure out that\n> upload-as-text-hyperlink question first though... :)\n> \n> Cheers,\n> \n> f\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/792#issuecomment-2151369\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2151829",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-2151829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 2151829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTE4Mjk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T01:44:22Z",
    "updated_at": "2011-09-21T01:44:22Z",
    "author_association": "MEMBER",
    "body": "On Tue, Sep 20, 2011 at 5:22 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> True, but there is no promise they will remain in the same directory\n> as the user walks around using %cd.  In situations like this, the\n> notebook server does not (and should not) keep track of the cwd of the\n> many kernels it has started.\n\nAh, certainly!  I was just thinking that the \"upload to where the\nserver's cwd lives and where it _starts_ the kernels\" constraint would\nbe enough for users.  If they cd their way away later on, that's their\nproblem :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/267892297",
    "html_url": "https://github.com/ipython/ipython/issues/792#issuecomment-267892297",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/792",
    "id": 267892297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzg5MjI5Nw==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T06:36:34Z",
    "updated_at": "2016-12-19T06:36:34Z",
    "author_association": "MEMBER",
    "body": "Hey there, I'm going through old issues and it seems to me that it makes sense to close this one. For a while now we've had both `Upload` button in the Notebook Dashboard, as well as `%load` magic inside a notebook, both of which are now able to handle arbitrary files. \r\n\r\nThanks everyone and happy hacking! :bowtie:"
  }
]
