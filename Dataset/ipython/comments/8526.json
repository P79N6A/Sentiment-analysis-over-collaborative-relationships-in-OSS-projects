[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/110917652",
    "html_url": "https://github.com/ipython/ipython/issues/8526#issuecomment-110917652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8526",
    "id": 110917652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDkxNzY1Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T21:19:06Z",
    "updated_at": "2015-06-10T21:19:06Z",
    "author_association": "MEMBER",
    "body": "See https://github.com/ipython/ipython/issues/8492 among other, agree difficult to find for background. \n\nThe observed behavior is due to a more complex mechanisme. 1) is not possible, or relatively difficult to do as we already use the fact that a NameError will be raised to decide wether or not to expand to shell variable. 2) is not possible because people rely on current behavior. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/110921857",
    "html_url": "https://github.com/ipython/ipython/issues/8526#issuecomment-110921857",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8526",
    "id": 110921857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDkyMTg1Nw==",
    "user": {
      "login": "audy",
      "id": 115904,
      "node_id": "MDQ6VXNlcjExNTkwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/115904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/audy",
      "html_url": "https://github.com/audy",
      "followers_url": "https://api.github.com/users/audy/followers",
      "following_url": "https://api.github.com/users/audy/following{/other_user}",
      "gists_url": "https://api.github.com/users/audy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/audy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/audy/subscriptions",
      "organizations_url": "https://api.github.com/users/audy/orgs",
      "repos_url": "https://api.github.com/users/audy/repos",
      "events_url": "https://api.github.com/users/audy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/audy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T21:36:33Z",
    "updated_at": "2015-06-10T21:36:33Z",
    "author_association": "NONE",
    "body": "> 1) is not possible, or relatively difficult to do as we already use the fact that a NameError\n\nWhy not raise some other error then?\n\n> 2) is not possible because people rely on current behavior.\n\nWhy not keep this open and fix it in a major release? Also, adding a warning shouldn't break anyone else's code.\n\nI feel like you were a bit quick to close this issue. Would it help if I came back with a PR to raise a warning?\n\n--austin\n\n> On Jun 10, 2015, at 17:19, Matthias Bussonnier notifications@github.com wrote:\n> \n> See #8492 among other, agree difficult to find for background.\n> \n> The observed behavior is due to a more complex mechanisme. 1) is not possible, or relatively difficult to do as we already use the fact that a NameError will be raised to decide wether or not to expand to shell variable. 2) is not possible because people rely on current behavior.\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/110923159",
    "html_url": "https://github.com/ipython/ipython/issues/8526#issuecomment-110923159",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8526",
    "id": 110923159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDkyMzE1OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T21:43:51Z",
    "updated_at": "2015-06-10T21:43:51Z",
    "author_association": "MEMBER",
    "body": "I'm not convinced that warnings are appropriate - I use `$VAR` to mean environment variables more often than Python variables, so I don't want to see warnings whenever it can't find a Python variable.\n\nWe recently looked into making the variables independent, so that if it failed to interpolate one, it could still interpolate others in the same command. But it turns out that that's hard because of the API that formatters expose, so I don't think it's worth the extra complexity.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/110925226",
    "html_url": "https://github.com/ipython/ipython/issues/8526#issuecomment-110925226",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8526",
    "id": 110925226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDkyNTIyNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T21:49:30Z",
    "updated_at": "2015-06-10T21:49:30Z",
    "author_association": "MEMBER",
    "body": "1) well because raising an error is not what people expect. `%cd $HOME` should'nt raise anything even if HOME is undefined. \n\nFollowing the above link would have brought you to https://github.com/ipython/ipython/pull/8494, which is in progress, but is much more hairy than expected. You can try to get things right, but I would expect the code to be a significant refactor of IPython. And there si another issue opened somewhere where the proposal is to make the Python variable expansion optional on a per magic basis (which is a even larger refactor).\n\nThe changing the behavior of such a fundamental syntax on IPython, even just changing it in a major release will piss of a lot of people. \n\nThough if you can comme up with a sensible fix we can consider it.\n"
  }
]
