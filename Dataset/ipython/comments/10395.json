[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286467407",
    "html_url": "https://github.com/ipython/ipython/issues/10395#issuecomment-286467407",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10395",
    "id": 286467407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ2NzQwNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T15:57:35Z",
    "updated_at": "2017-03-14T15:57:35Z",
    "author_association": "MEMBER",
    "body": "Hi !\r\n\r\nThanks for your report. I'm digging into it. \r\n\r\nBug 1. \r\n\r\nThis is actually not a bug. You `%aimport` only `src`, you need to `%aimport src.neato` to also mark it as having to be reloaded. I understand your POV, and actually it is a strange feature of Python. \r\n\r\nThe fact that when you `import src` the value `src.neato` is set is a side-effect of the Python import machinery. Technically you should alway also import submodules if you are going to use them explicitly. I don't know a lot of modules like that, but there is an (in)famous one. \r\n\r\n```\r\n$ ipython\r\nimport Python 3.6.0 | packaged by conda-forge | (default, Feb 10 2017, 07:08:35)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.0.0.dev -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import matplotlib\r\n\r\nIn [2]: matplotlib.finance\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-2-f3835d0d6a64> in <module>()\r\n----> 1 matplotlib.finance\r\n\r\nAttributeError: module 'matplotlib' has no attribute 'finance'\r\n\r\nIn [3]: import matplotlib.finance\r\n\r\nIn [4]: matplotlib.finance\r\nOut[4]: <module 'matplotlib.finance' from '/Users\r\n```\r\n\r\nWhich technically is one of the only one doing the supposedly right thing. \r\n\r\nOne of the reasoning being that if two submodules depends on each other (even indirectly) then you have to make a placeholder value for some amount of time, but anyway...\r\n\r\nAlso let say I add the following in your `__init__.py`:\r\n\r\n```\r\nfrom .neato import *\r\nfrom matplotlib import pyplot # added this.\r\n```\r\n\r\nThen `src.pyplot.things` is reasonable. Do you though expect `matplotlib` to be reloaded ? Well even if you might, `%aimport` have to draw the boundary and when autoreload is set to 1 we use the `Module` definition that Python give us. It it tells us that `src` and `src.neato` are different. They just happened to have nested names.\r\n\r\nI think I understand the behavior you expect, I'm unsure we can get it to work reliably. Maybe using modules `__name__`, but I can see a few way this could fails. So this will likely be a nothing to fix. \r\n\r\nWill look more  into the second bug later, but it seem you are not excluding anything from reload. \r\nShould it be `%aimport -src.neato` ?  (note the `-` ). \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287651794",
    "html_url": "https://github.com/ipython/ipython/issues/10395#issuecomment-287651794",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10395",
    "id": 287651794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY1MTc5NA==",
    "user": {
      "login": "jbwhit",
      "id": 105829,
      "node_id": "MDQ6VXNlcjEwNTgyOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/105829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbwhit",
      "html_url": "https://github.com/jbwhit",
      "followers_url": "https://api.github.com/users/jbwhit/followers",
      "following_url": "https://api.github.com/users/jbwhit/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbwhit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbwhit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbwhit/subscriptions",
      "organizations_url": "https://api.github.com/users/jbwhit/orgs",
      "repos_url": "https://api.github.com/users/jbwhit/repos",
      "events_url": "https://api.github.com/users/jbwhit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbwhit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T22:07:33Z",
    "updated_at": "2017-03-19T22:07:33Z",
    "author_association": "NONE",
    "body": "Ok, I think I got it. I wrote up a summary of my understand and some examples here: \r\n\r\nhttps://gist.github.com/jbwhit/38c1035c48cdb1714fc8d47fa163bfae\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287657744",
    "html_url": "https://github.com/ipython/ipython/issues/10395#issuecomment-287657744",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10395",
    "id": 287657744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY1Nzc0NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T23:40:33Z",
    "updated_at": "2017-03-19T23:40:33Z",
    "author_association": "MEMBER",
    "body": "> Ok, I think I got it. I wrote up a summary of my understand and some examples here:\r\n> \r\n> https://gist.github.com/jbwhit/38c1035c48cdb1714fc8d47fa163bfae\r\n\r\nYes, that seem more correct. I agree that the documentation is not perfect, and that code has likely not been in use in a long time. \r\n\r\nDo you want to attempt sending a patch that clarifies it ?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287658224",
    "html_url": "https://github.com/ipython/ipython/issues/10395#issuecomment-287658224",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10395",
    "id": 287658224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY1ODIyNA==",
    "user": {
      "login": "jbwhit",
      "id": 105829,
      "node_id": "MDQ6VXNlcjEwNTgyOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/105829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbwhit",
      "html_url": "https://github.com/jbwhit",
      "followers_url": "https://api.github.com/users/jbwhit/followers",
      "following_url": "https://api.github.com/users/jbwhit/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbwhit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbwhit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbwhit/subscriptions",
      "organizations_url": "https://api.github.com/users/jbwhit/orgs",
      "repos_url": "https://api.github.com/users/jbwhit/repos",
      "events_url": "https://api.github.com/users/jbwhit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbwhit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T23:49:29Z",
    "updated_at": "2017-03-19T23:49:29Z",
    "author_association": "NONE",
    "body": "Sure, that sounds good. I'll make an attempt this week. First, should I report somewhere else that the link on the [autoreload docs page](http://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html) saying [Edit on GitHub](https://github.com/ipython/ipython/blob/feb880d80ee6e1d72f11cbef35a907ebf2d390c6/docs/source/config/extensions/autoreload.rst) is broken?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287658564",
    "html_url": "https://github.com/ipython/ipython/issues/10395#issuecomment-287658564",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10395",
    "id": 287658564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY1ODU2NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T23:55:21Z",
    "updated_at": "2017-03-19T23:55:25Z",
    "author_association": "MEMBER",
    "body": "That's a known issue of readthedocs, because we auto generate the `.rst` files from the source files. SO the test is actually [directly in `autoreload.py`](https://github.com/ipython/ipython/blob/master/IPython/extensions/autoreload.py), that allow to get the docs interactively as well."
  }
]
