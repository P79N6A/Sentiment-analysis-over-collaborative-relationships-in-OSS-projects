[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2352945",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2352945",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2352945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTI5NDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T22:06:09Z",
    "updated_at": "2011-10-10T22:06:09Z",
    "author_association": "MEMBER",
    "body": "HMAC signatures are now on by default in all situations, including notebook, kernel, and qtconsole.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2353072",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2353072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2353072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMwNzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T22:19:00Z",
    "updated_at": "2011-10-10T22:19:00Z",
    "author_association": "MEMBER",
    "body": "Also add `%connect_info` magic, to make it easy to connect secondary clients.\n\nFor reference, this function may be useful to folks like @fperez, who like to connect a qtconsole to their current notebook:\n\n``` python\ndef connect_qtconsole():\n    from subprocess import Popen, PIPE\n    from IPython.zmq.kernelapp import KernelApp\n    app = KernelApp.instance()\n    return Popen(['ipython', 'qtconsole', '--existing', app.connection_file])\n```\n\nWhich, when called, will launch a qtconsole connected to the kernel that called it.  This applies to kernels started with a notebook, other qtconsole, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2353725",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2353725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2353725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM3MjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T23:30:34Z",
    "updated_at": "2011-10-10T23:30:34Z",
    "author_association": "MEMBER",
    "body": "@minrk, that's great, and I'd actually vote for wrapping it in a magic also, that we expose interactively for all kernels.  Havig the function api is useful for scripted control, but users would simply type `%qtconsole`.  I _love_ the usability this would provide!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2353955",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2353955",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2353955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM5NTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T23:59:59Z",
    "updated_at": "2011-10-10T23:59:59Z",
    "author_association": "MEMBER",
    "body": "`%qtconsole` magic added\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2353984",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2353984",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2353984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM5ODQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T00:04:51Z",
    "updated_at": "2011-10-11T00:04:51Z",
    "author_association": "MEMBER",
    "body": "@ivanov can you check if any of the changes here cause problems for you with vim-ipython? That's the only third party client I know of.  The change of ip/port pairs to just ports might mean you have to make an adjustment, but in the long run it should be simpler, because you shouldn't have to keep track of ports at all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2353996",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2353996",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2353996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM5OTY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T00:06:28Z",
    "updated_at": "2011-10-11T00:06:28Z",
    "author_association": "MEMBER",
    "body": "@minrk, thanks a lot for the magic!  I think this is a major usability improvement, awesome work. Will wait for @ivanov's feedback before moving further.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2354863",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2354863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2354863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQ4NjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T02:50:57Z",
    "updated_at": "2011-10-11T02:50:57Z",
    "author_association": "MEMBER",
    "body": "Just to say, `%qtconsole` is awesome. Using it now in production work, it rocks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2355338",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2355338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2355338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTUzMzg=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T04:36:01Z",
    "updated_at": "2011-10-11T04:36:01Z",
    "author_association": "MEMBER",
    "body": "looking into it now...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2355415",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2355415",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2355415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU0MTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T04:52:05Z",
    "updated_at": "2011-10-11T04:52:05Z",
    "author_association": "MEMBER",
    "body": "I peeked into vim-ipython a bit, and it shouldn't be a big deal.  You just need to specify one argument: `BlockingKM(connection_file=/path/to/kernel-12345.json)` instead of trying to parse the argv.  The check for whether this is available will be:\n\n``` python\nif 'connection_file' in BlockingKernelManager.class_trait_names():\n    # 0.12\n    km = BlockingKernelManager(connection_file=s)\nelse:\n    # parse line as before for 0.11\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2355852",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2355852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2355852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU4NTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T06:34:39Z",
    "updated_at": "2011-10-11T06:34:39Z",
    "author_association": "MEMBER",
    "body": "It did require a small change to be convenient, but I think it should be working now: https://github.com/ivanov/vim-ipython/pull/13\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2355872",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2355872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2355872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU4NzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T06:38:04Z",
    "updated_at": "2011-10-11T06:38:04Z",
    "author_association": "MEMBER",
    "body": "Just a note: this will certainly conflict with #813 in qtconsoleapp.py, so let's pick merge order carefully, as that one has already been rebased at least once.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2357366",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2357366",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2357366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTczNjY=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T07:48:48Z",
    "updated_at": "2011-10-11T07:48:48Z",
    "author_association": "MEMBER",
    "body": "as usual, Min fixed the issues i was going to complain about, even before I had the chance to verbalize the complaint :)\n\nMy only concern is related to profiles, since, as I understand it - clients aren't apps, but the connection_file get stored in the active profile's security/ folder. I suppose it's not a big issue, since the connection_info magic prints the files contents\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2358343",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2358343",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2358343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTgzNDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T08:06:11Z",
    "updated_at": "2011-10-11T08:06:11Z",
    "author_association": "MEMBER",
    "body": "> as usual, Min fixed the issues i was going to complain about, even before I had the chance to verbalize the complaint :)\n\nWe do aim to please.\n\n> My only concern is related to profiles, since, as I understand it - clients aren't apps, but the connection_file get stored in the active profile's security/ folder. I suppose it's not a big issue, since the connection_info magic prints the files contents\n\nNote that you can always specify the full path of the connection file, regardless of profiles, etc.  The profile\nsecurity dir is just the default, and used if only a filename is given.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2358842",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2358842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2358842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTg4NDI=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T08:18:04Z",
    "updated_at": "2011-10-11T08:18:04Z",
    "author_association": "MEMBER",
    "body": "> Note that you can always specify the full path of the connection file, regardless of profiles, etc. \n\nyes, true, but you have to work a bit to get that full path, since it isn't what's printed, but that's ok. \n\n> The profile security dir is just the default, and used if only a filename is given.\n\nright - so i guess that's the trade off - before, i didn't have to know anything about profiles, just hookup to the right ports and go. Now it seems I have to look in the profile directory in order to get to the file (though, i suppose, there's nothing stopping me from using the contents of the file as printed by the connection_info magic in the same manner as i used to in 0.11)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2359063",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2359063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2359063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTkwNjM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T08:49:13Z",
    "updated_at": "2011-10-11T08:49:13Z",
    "author_association": "MEMBER",
    "body": "> > Note that you can always specify the full path of the connection file, regardless of profiles, etc.\n> \n> yes, true, but you have to work a bit to get that full path, since it isn't what's printed, but that's ok.>> The profile security dir is just the default, and used if only a filename is given.\n\nThe full path is only not printed if it's in the default location, so if the output is just `--existing kernel-12345.json`, that unambiguously means `IPYTHONDIR/profile_default/security/kernel-12345.json`.  It will also print the profile name if it is anything other than default (`--existing kernel-12345.json --profile foo`), and it will print the full path in all other cases.\n\n> right - so i guess that's the trade off - before, i didn't have to know anything about profiles, just hookup to the right ports and go. Now it seems I have to look in the profile directory in order to get to the file (though, i suppose, there's nothing stopping me from using the contents of the file as printed by the connection_info magic in the same manner as i used to in 0.11)\n\nYes, it's a tradeoff.  An alternate approach would be if I made the KernelManager itself profile-aware (it's not currently), which would mean that clients using the KernelManager would generally not need to be.  An example of the KernelManager not being profile aware - if you create a KernelManager unconfigured and use it to start a Kernel, the connection file will go in a temp dir:\n\n``` python\n>>> from IPython.zmq.blockingkernelmanager import BlockingKernelManager\n>>> km = BlockingKernelManager()\n>>> km.start_kernel()\n[IPKernelApp] To connect another client to this kernel, use:\n[IPKernelApp] --existing /var/folders/zz/v3fz17cd2nz0bqvpd2s7btq00000gn/T/tmpMBJMP6.json\n>>> km.start_channels()\n```\n\nSo it's only non-IPython apps that want to start clients connected to IPython-started kernels under default config that are at any disadvantage.\n\nWe could also add an API like:\n\n``` python\nget_security_file(fname, profile='default'):\n    \"\"\"returns security file from IPython profile directory\"\"\"\n    return os.path.join(get_ipython_dir(), 'profile_%s' % profile, 'security', fname)\n```\n\nSo that apps would not need to know about our directory structure, only the more abstract idea of profiles.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2369019",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2369019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2369019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjkwMTk=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T18:05:19Z",
    "updated_at": "2011-10-11T18:11:44Z",
    "author_association": "MEMBER",
    "body": "> The full path is only not printed if it's in the default location, so if the output is just `--existing kernel-12345.json`, that unambiguously means `IPYTHONDIR/profile_default/security/kernel-12345.json`.  It will also print the profile name if it is anything other than default (`--existing kernel-12345.json --profile foo`), and it will print the full path in all other cases.\n\nOh, I didn't realize this - that's actually very good!\n\n> Yes, it's a tradeoff.  An alternate approach would be if I made the KernelManager itself profile-aware (it's not currently), which would mean that clients using the KernelManager would generally not need to be.\n\nI think it's great as is right now - I can't think of a reason why the\nKernelManager would need to be profile aware, and with your suggestion\nbelow, I think it'll be great to keep the profile-agnostic KMs.\n\n> We could also add an API like:\n> \n> ``` python\n> get_security_file(fname, profile='default'):\n>    \"\"\"returns security file from IPython profile directory\"\"\"\n>    return os.path.join(get_ipython_dir(), 'profile_%s' % profile, 'security', fname)\n> ```\n> \n> So that apps would not need to know about our directory structure, only the more abstract idea of profiles.\n\nThis would be great - it was exactly the kind of thing I couldn't\nfigure out quickly enough last night when I started looking at this PR\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2369528",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2369528",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2369528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjk1Mjg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T18:46:44Z",
    "updated_at": "2011-10-11T18:46:44Z",
    "author_association": "MEMBER",
    "body": "get_security_file() added to utils.path\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2390127",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2390127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2390127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAxMjc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T00:58:25Z",
    "updated_at": "2011-10-13T00:58:25Z",
    "author_association": "MEMBER",
    "body": "I only have some trivial cosmetic comments on most of it (made inline), and one of substance on the magics:  let's make both magics be trivial wrappers around regular Python library functions.  Testing magics is kind of annoying, and using them from other code also awkward, b/c you have to call them via the magic system.  And for example, the `%connect_info` should be split into a function that just builds that info string --but doesn't print it, simply returns it--, and the actual magic to simply do `print connection_info()`.  That makes it easy for other clients who may want to show this same info to collect it as a string from a single location.\n\nSame thing for the `%qtconsole`, even though it's easy code, it should just be a wrapper around a library function.  The point of the magics, as I see them now, is just to isolate a namespace of convenient things, but they should _not_ have much implementation code in them.  Historically that  hasn't been true (`%run` is a _monster_), but we should move towards that model.  Ultimately, I'd like the magics to be all more or less trivial wrappers around regular library calls.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2390133",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2390133",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2390133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAxMzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T00:59:13Z",
    "updated_at": "2011-10-13T00:59:21Z",
    "author_association": "MEMBER",
    "body": "Other than the above trivial cosmetic fixes and the slightly more substantial (but easy) fixing of the magics, I'm +100 on merging this ASAP.  Unless anyone objects, let's merge it once it's fixed up; the improvements it brings are really major.  Fantastic work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2391021",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2391021",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2391021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEwMjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T04:00:29Z",
    "updated_at": "2011-10-13T04:00:29Z",
    "author_association": "MEMBER",
    "body": "I did the cleanup on qtconsoleapp.\n\nThe library functions make perfect sense.  What would you call them, and where would you put them? `IPython.lib.kernel`? They are general utilities for connecting to a kernel. Should the `get_connection_info()` function return the unpacked JSON dict, the filename, or the string contents of the file?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2391155",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2391155",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2391155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTExNTU=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T04:30:23Z",
    "updated_at": "2011-10-13T04:30:23Z",
    "author_association": "MEMBER",
    "body": "not sure if i'm OT, but I'd like to also see init_ssh functionality grafted out of qtconsoleapp and placed wherever other general utilities go\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2391196",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2391196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2391196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTExOTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T04:39:11Z",
    "updated_at": "2011-10-13T04:39:11Z",
    "author_association": "MEMBER",
    "body": "@ivanov argh! That's a good idea.  I will never be done with this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2391383",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2391383",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2391383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEzODM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T05:23:17Z",
    "updated_at": "2011-10-13T05:23:17Z",
    "author_association": "MEMBER",
    "body": "@ivanov, tunnel_to_kernel should now be a generic function for tunneling connections to a kernel, given a connection file or its unpacked contents.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2391427",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2391427",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2391427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTE0Mjc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T05:34:43Z",
    "updated_at": "2011-10-13T05:34:43Z",
    "author_association": "MEMBER",
    "body": "On Wed, Oct 12, 2011 at 9:00 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> The library functions make perfect sense.  What would you call them, and where would you put them? `IPython.lib.kernel`? They are general utilities for connecting to a kernel. Should the `get_connection_info()` function return the unpacked JSON dict, the filename, or the string contents of the file?\n- `IPython.lib.kernel` sounds good for a location...\n- Maybe call it `get_connection_file` and have it return the path is\n  the best one.  From the path a simple open(path).read() gets the data,\n  where as given the data one can't reconstruct the path. How does that\n  sound?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2398084",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2398084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2398084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTgwODQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T18:18:05Z",
    "updated_at": "2011-10-13T18:18:05Z",
    "author_association": "MEMBER",
    "body": "I also split the connection file search into a library function, so that will be easier to reuse as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2398441",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2398441",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2398441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTg0NDE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T18:43:59Z",
    "updated_at": "2011-10-13T18:43:59Z",
    "author_association": "MEMBER",
    "body": "@minrk, this is looking pretty solid, and big enough we shouldn't let it linger much further.  I can't think of much more to do on it at this point, can you?  Otherwise, let's push it through.  Awesome job!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2398576",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2398576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2398576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTg1NzY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T18:54:19Z",
    "updated_at": "2011-10-13T18:54:19Z",
    "author_association": "MEMBER",
    "body": "I'm just playing with various use cases to make sure it works, then I'll go ahead  and merge.\n\n@ivanov, I also updated the vim-ipython PR, to use the new glob-based file search\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2398745",
    "html_url": "https://github.com/ipython/ipython/pull/847#issuecomment-2398745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/847",
    "id": 2398745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTg3NDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T19:06:24Z",
    "updated_at": "2011-10-13T19:06:24Z",
    "author_association": "MEMBER",
    "body": "merged\n"
  }
]
