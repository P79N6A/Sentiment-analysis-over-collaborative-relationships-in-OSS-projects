[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/364788536",
    "html_url": "https://github.com/ipython/ipython/issues/11004#issuecomment-364788536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11004",
    "id": 364788536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc4ODUzNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-11T21:06:04Z",
    "updated_at": "2018-02-11T21:06:04Z",
    "author_association": "MEMBER",
    "body": "IPython doesn't do anything with bytecode directly - all your code is passed through to Python to be executed, so it's still Python considering that environment variable.\r\n\r\nOne possibility is that Python on Windows checks for the environment variable when it starts, so setting it in the process doesn't affect anything. I guess you'd have to read the source code to be certain whether that's what's going on, though."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/366816081",
    "html_url": "https://github.com/ipython/ipython/issues/11004#issuecomment-366816081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11004",
    "id": 366816081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgxNjA4MQ==",
    "user": {
      "login": "alphaCTzo7G",
      "id": 29691914,
      "node_id": "MDQ6VXNlcjI5NjkxOTE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29691914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alphaCTzo7G",
      "html_url": "https://github.com/alphaCTzo7G",
      "followers_url": "https://api.github.com/users/alphaCTzo7G/followers",
      "following_url": "https://api.github.com/users/alphaCTzo7G/following{/other_user}",
      "gists_url": "https://api.github.com/users/alphaCTzo7G/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alphaCTzo7G/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alphaCTzo7G/subscriptions",
      "organizations_url": "https://api.github.com/users/alphaCTzo7G/orgs",
      "repos_url": "https://api.github.com/users/alphaCTzo7G/repos",
      "events_url": "https://api.github.com/users/alphaCTzo7G/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alphaCTzo7G/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T22:19:49Z",
    "updated_at": "2018-02-19T22:30:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the points. I will try to figure out a solution and post it here so it may help others. \r\n\r\nI wrote down my test plan below.. and also had some questions. Would you know the answers to the highlight questions below?\r\n\r\nI understand that `.pyc` files get generated only when I do `_imports_`, not when I do a `%run` in `ipython` (http://effbot.org/pyfaq/how-do-i-create-a-pyc-file.htm). Is this correct?\r\n\r\nHowever, regardless of whether `PYTHONDONWRITEBYTECODE` is set to `TRUE` or not, it seems to be intermittent, in `Windows 10`\r\n\r\nSo my first plan is to get a repeatable test case first, where I can atleast generate the `bytecode` in `Windows10` repeatably. Rightnow, I cant even generate the `Bytecode` repeatably, even if I dont have `PYTHONDONTWRITEBYTECODE` set.\r\n\r\nThese are the tests I am thinking of\r\n 1)\tSet the environment variable ‘PYTHONDONTWRITEBYTECODE=1” in windows environmental parameters directly\r\n  a)\tunder `Control Panel>System>User variables`\r\n  b)\tunder `Control Panel>System>Systemvariables`\r\n 2)\t`import sys; sys.dont_write_bytecode=True`\r\n  a)\tIn `ipython` (**Q: what directory should I place this `.py` file in?**)\r\n  b)\tIn `python`. (**Q: you mentioned that `ipython` calls `python`. Does it pass any specific `.py` to `python` before loading `python`, so I can put the above import statements in there? If not, should I just put it in the `~/.ipython/startup/` directory as a `01-startup.**py**` file?**)\r\n 3)\tSet the value `PYTHONDONTWRITEBYTECODE=1` in the first file (in the starteup folder in ipython) that `ipython`. (**Q: Is it correct that `ipython` loads the files in the `~/.ipython/startup/00-startup.ipy` first during startup?**)\r\n 4)\tFigure out how to sent the -B flag to `python` when `ipython` starts https://docs.python.org/3/using/cmdline.html#id1 (**Q: I check the `%run` magic in `ipython`, but didn’t see an option to set the `-B` flag. When `ipython` calls `python3` is there a way to send the `-B` flag to `python3`?**)\r\n\r\nIf these don’t, work my plan is to pretty much trigger a `pyclean` to clean up any `.pyc` files in the code directory, on each write, for a short term solution, and start looking into the source code.\r\n\r\n**Q: As for digging into the `ipython` source code do you have an entry where I should start looking as to where the `PYTHONDONTWRITEBYTECODE` is set?** I can debug from there.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/366837854",
    "html_url": "https://github.com/ipython/ipython/issues/11004#issuecomment-366837854",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11004",
    "id": 366837854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgzNzg1NA==",
    "user": {
      "login": "alphaCTzo7G",
      "id": 29691914,
      "node_id": "MDQ6VXNlcjI5NjkxOTE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29691914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alphaCTzo7G",
      "html_url": "https://github.com/alphaCTzo7G",
      "followers_url": "https://api.github.com/users/alphaCTzo7G/followers",
      "following_url": "https://api.github.com/users/alphaCTzo7G/following{/other_user}",
      "gists_url": "https://api.github.com/users/alphaCTzo7G/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alphaCTzo7G/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alphaCTzo7G/subscriptions",
      "organizations_url": "https://api.github.com/users/alphaCTzo7G/orgs",
      "repos_url": "https://api.github.com/users/alphaCTzo7G/repos",
      "events_url": "https://api.github.com/users/alphaCTzo7G/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alphaCTzo7G/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T00:58:47Z",
    "updated_at": "2018-02-20T01:03:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just wanted to update with my findings so far:\r\n\r\n1.\t`%env PYTHONDONTWRITEBYTECODE =True` if loaded by `ipython` during startup does get set in the environment variables. I can see it using `%env`. However `ipython` still will generate bytecode. If you load `ipython` and then try to set `%env PYTHONDONTWRITEBYTECODE=1`, `ipython/python` doesnt respect it either.\r\n2.\tThere is no difference in the bytecode generation between `linux` and `windows 10`. \r\n3.\tIf I use `import sys; sys.dont_write_bytecode=True` in `00-startup.py` under `ipython\\startup`, it does work in both `Linux` and `Windows 10`\r\nI wanted to use the same configuration files for both `linux` and `windows` so I added `import sys; sys.dont_write_bytecode=True` in `00-startup.py` under `.ipython\\startup`.\r\n\r\nIf there is a demand, I will check why `%env PYTHONDONTWRITEBYTECODE = True` is not respected in the `ipython`\r\n\r\nHere are some experiments (folders) I ran. Each folder is a single experiment and has a README.txt with the experiment and the results details. These are primarily run on `Windows 10`, however, I did check the conclusions on my `Ubuntu 16.04` machine as well: https://github.com/alphaCTzo7G/stackexchange/tree/master/python/ipython_windows_bytecode02192018"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/368527799",
    "html_url": "https://github.com/ipython/ipython/issues/11004#issuecomment-368527799",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11004",
    "id": 368527799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODUyNzc5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-26T14:51:43Z",
    "updated_at": "2018-02-26T14:51:43Z",
    "author_association": "MEMBER",
    "body": ">  As for digging into the ipython source code do you have an entry where I should start looking as to where the PYTHONDONTWRITEBYTECODE is set? I can debug from there.\r\n\r\nWe don't set or read it at all, as far as I know. It's used by Python itself (which IPython runs on top of)."
  }
]
