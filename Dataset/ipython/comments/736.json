[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1943643",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1943643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1943643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDM2NDM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T16:07:04Z",
    "updated_at": "2011-08-30T16:07:04Z",
    "author_association": "MEMBER",
    "body": "What about using standard Basic or Digest HTTP Auth instead of rolling our own?  I know that Basic sends credentials in plain text, so that may not be a good idea if https is not enabled though.  I did see that there are Basic and Digest auth mixin classes available for tornado, but I don't know how solid they are.  What do others think? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1946149",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1946149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1946149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDYxNDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T17:58:23Z",
    "updated_at": "2011-08-30T17:58:23Z",
    "author_association": "MEMBER",
    "body": "I think the form+cookie is fine, with the changes suggested (keyword->password, remove alias, new cookie sig each Server instance).  We probably also want to add the `@web.authenticated` to the notebook pages, in addition to the frontpage.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1946485",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1946485",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1946485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDY0ODU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T18:11:13Z",
    "updated_at": "2011-08-30T18:11:13Z",
    "author_association": "MEMBER",
    "body": "Also, we need to look into seeing if the WebSocket handlers support\n`@web.authenticated`.  Otherwise, the actual kernel will be wide open\nas well.\n\nOn Tue, Aug 30, 2011 at 10:58 AM, minrk\nreply@reply.github.com\nwrote:\n\n> I think the form+cookie is fine, with the changes suggested (keyword->password, remove alias, new cookie sig each Server instance).  We probably also want to add the `@web.authenticated` to the notebook pages, in addition to the frontpage.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/736#issuecomment-1946149\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1947286",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1947286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1947286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDcyODY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T19:16:42Z",
    "updated_at": "2011-08-30T19:16:42Z",
    "author_association": "MEMBER",
    "body": "The kernel is protected by our own HMAC auth (once we turn that on by default), so I'm less concerned about them.  I also don't know how the websocket machinery works, but a quick check showed 'method not supported on websockets' when I tried to authenticate in the same way as other connections.\n\nI've updated this code in my own [enh/httpauth branch](https://github.com/minrk/ipython/tree/enh/httpauth), to reflect the changes we have discussed so far.  All page requests are now authenticated, and the cookie secret is generated with `os.urandom()`.  @satra, either you can merge my branch into yours, or we can issue a new PR from mine.\n\nNew diff: https://github.com/minrk/ipython/compare/enh/httpauth\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1947425",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1947425",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1947425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDc0MjU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T19:27:28Z",
    "updated_at": "2011-08-30T19:27:28Z",
    "author_association": "MEMBER",
    "body": "> The kernel is protected by our own HMAC auth (once we turn that on by default), so I'm less concerned about them.  I also don't know how the websocket machinery works, but a quick check showed 'method not supported on websockets' when I tried to authenticate in the same way as other connections.\n\nBut the HMAC auth will only protect the notebook server to kernel\nconnection.  The WebSocket handlers in handlers.py will simply forward\nany WS traffic to the kernel, so if the WS connections are not\nauthenticated, the HMAC won't protect.  Here is a rough idea of how I\nimagine this working.'\n- We need to make sure that the WebSocket connection in the browser\n  sends the cookies along with the connection request.\n- We need to define the get_current_user method on the WebScoket\n  handlers we have.\n- The open method of the WebSocket handlers need to check the cookies\n  to make sure they match.\n- If the cookies don't match or are empty, then the handler should\n  close the websocket connection.\n\n> I've updated this code in my own [enh/httpauth branch](https://github.com/minrk/ipython/tree/enh/httpauth), to reflect the changes we have discussed so far.  All page requests are now authenticated, and the cookie secret is generated with `os.urandom()`.  @satra, either you can merge my branch into yours, or we can issue a new PR from mine.\n> \n> New diff: https://github.com/minrk/ipython/compare/enh/httpauth\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/736#issuecomment-1947286\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1948548",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1948548",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1948548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg1NDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T20:36:57Z",
    "updated_at": "2011-08-30T20:36:57Z",
    "author_association": "MEMBER",
    "body": "Ah, good point.  I forgot that the websocket connection is _not_ passthrough.  Then we do indeed need to authorize the websocket requests.\n\nIs it possible (and if so, how?) to establish the websocket connections without ever being able to make a successful page request?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1950820",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1950820",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1950820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA4MjA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T23:32:01Z",
    "updated_at": "2011-08-30T23:32:01Z",
    "author_association": "MEMBER",
    "body": "Websockets are now authenticated with the same cookie in my branch, so now _all_ requests are authenticated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1950838",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1950838",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1950838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA4Mzg=",
    "user": {
      "login": "satra",
      "id": 184063,
      "node_id": "MDQ6VXNlcjE4NDA2Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/184063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satra",
      "html_url": "https://github.com/satra",
      "followers_url": "https://api.github.com/users/satra/followers",
      "following_url": "https://api.github.com/users/satra/following{/other_user}",
      "gists_url": "https://api.github.com/users/satra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satra/subscriptions",
      "organizations_url": "https://api.github.com/users/satra/orgs",
      "repos_url": "https://api.github.com/users/satra/repos",
      "events_url": "https://api.github.com/users/satra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-30T23:35:04Z",
    "updated_at": "2011-08-30T23:35:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@min: i'm going to discard this request, please do create your own request. i did try a branch with a random cookie secret, but that did not seem to work well. i'll download your branch and hopefully test it on my flight back.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1953196",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1953196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1953196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTMxOTY=",
    "user": {
      "login": "satra",
      "id": 184063,
      "node_id": "MDQ6VXNlcjE4NDA2Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/184063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/satra",
      "html_url": "https://github.com/satra",
      "followers_url": "https://api.github.com/users/satra/followers",
      "following_url": "https://api.github.com/users/satra/following{/other_user}",
      "gists_url": "https://api.github.com/users/satra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/satra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/satra/subscriptions",
      "organizations_url": "https://api.github.com/users/satra/orgs",
      "repos_url": "https://api.github.com/users/satra/repos",
      "events_url": "https://api.github.com/users/satra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/satra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-31T06:15:05Z",
    "updated_at": "2011-08-31T06:15:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "i reopened this and merged min's code and ran it. looks good. i don't know enough about web-authentication.\n\n@min: do you think we should use \"xsrf_cookies\": True?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1961323",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1961323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1961323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEzMjM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-31T20:04:25Z",
    "updated_at": "2011-08-31T20:04:25Z",
    "author_association": "MEMBER",
    "body": "@satra, I honestly have no idea on the xsrf cookie flag.  I'm not familiar with its use case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1961627",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-1961627",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 1961627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE2Mjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-31T20:30:11Z",
    "updated_at": "2011-08-31T20:30:11Z",
    "author_association": "MEMBER",
    "body": "I should note that the one thing I don't like about changing the cookie secret at each launch is that there will be warning about 'Invalid cookie signature' on the first connection from a browser, since the browser will still offer its old cookies to check if they are valid.  It's not a big deal, except that if you run a logged in session followed by a passwordless one, you can continue to see the warnings, as fresh cookies are not created to replace the stale ones.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33952360",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-33952360",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 33952360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTUyMzYw",
    "user": {
      "login": "robbyki",
      "id": 1027357,
      "node_id": "MDQ6VXNlcjEwMjczNTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1027357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robbyki",
      "html_url": "https://github.com/robbyki",
      "followers_url": "https://api.github.com/users/robbyki/followers",
      "following_url": "https://api.github.com/users/robbyki/following{/other_user}",
      "gists_url": "https://api.github.com/users/robbyki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robbyki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robbyki/subscriptions",
      "organizations_url": "https://api.github.com/users/robbyki/orgs",
      "repos_url": "https://api.github.com/users/robbyki/repos",
      "events_url": "https://api.github.com/users/robbyki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robbyki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T13:05:10Z",
    "updated_at": "2014-02-03T13:05:10Z",
    "author_association": "NONE",
    "body": "Just setup the notebook at work on AWS EC2 and it works as expected except for the [tornado.general] WARNING | Invalid cookie signature with subsequent browser launches. Just want to confirm that this is still expected behavior and there is no way to resolve the message. --thank you\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33994699",
    "html_url": "https://github.com/ipython/ipython/pull/736#issuecomment-33994699",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/736",
    "id": 33994699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk0Njk5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T20:11:54Z",
    "updated_at": "2014-02-03T20:11:54Z",
    "author_association": "MEMBER",
    "body": "We may revisit this in the next few months but for now it is the expected behavior.\n"
  }
]
