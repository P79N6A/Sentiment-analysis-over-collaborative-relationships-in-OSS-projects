[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7197553",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7197553",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7197553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTc1NTM=",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T02:55:48Z",
    "updated_at": "2012-07-24T03:03:15Z",
    "author_association": "MEMBER",
    "body": "Can we add datetime objects to the list of things to clean?  I believe json not handling python datetime objects is the sole reason for these lines that cut out some datetime objects from messages: https://github.com/ipython/ipython/blob/master/IPython/frontend/html/notebook/handlers.py#L381\n\n@ellisonbg: am I correct in assuming that the reason for popping those dates is because of JSONing limitations?\n\nUpdate: never mind; I guess I didn't see the rest of the file.  There already are functions there to clean dates.\n\nI'm curious why we don't just embed these sorts of things in our own json dumps/loads functions, so you can just call the custom dumps function and it will automatically take care of things like encoding for inf, encoding dates, etc.  Python lets you define custom encoders and decoders: http://docs.python.org/library/json.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7197635",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7197635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7197635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTc2MzU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T03:05:33Z",
    "updated_at": "2012-07-24T03:05:33Z",
    "author_association": "MEMBER",
    "body": "Yes.\n\nOn Mon, Jul 23, 2012 at 7:55 PM, Jason Grout\nreply@reply.github.com\nwrote:\n\n> Can we add datetime objects to the list of things to clean?  I believe json not handling python datetime objects is the sole reason for these lines that cut out some datetime objects from messages: https://github.com/ipython/ipython/blob/master/IPython/frontend/html/notebook/handlers.py#L381\n> \n> @ellisonbg: am I correct in assuming that the reason for popping those dates is because of JSONing limitations?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/2194#issuecomment-7197553\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7197994",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7197994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7197994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTc5OTQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T03:40:48Z",
    "updated_at": "2012-07-24T03:40:48Z",
    "author_association": "MEMBER",
    "body": "Why would we ever pop date time objects? We already handle them just fine by using default=date_default (all messages have timestamps in headers).  Handling them in json_clean would be redundant.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7198030",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7198030",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7198030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTgwMzA=",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T03:44:15Z",
    "updated_at": "2012-07-24T03:44:15Z",
    "author_association": "MEMBER",
    "body": "So can we just make a custom JSON encoding class that does both the effects of json_clean and default=date_default automatically?  Then it's as easy as calling our JSON encoding function with no arguments.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7198468",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7198468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7198468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTg0Njg=",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T04:29:14Z",
    "updated_at": "2012-07-24T04:29:14Z",
    "author_association": "MEMBER",
    "body": "(see http://stackoverflow.com/questions/455580/json-datetime-between-python-and-javascript for some more ideas how to do datetimes.  Especially the suggestion there to use `.isoformat()` instead of doing your own iso formatting.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7198678",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7198678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7198678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTg2Nzg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-24T04:49:32Z",
    "updated_at": "2012-07-24T04:49:32Z",
    "author_association": "MEMBER",
    "body": "Hm, I wonder how I missed `.isoformat()`.  Other than that, I don't see anything preferable in the SO question.\n\nOne advantage of decoupling cleaning / datetime-formatting: If a message gets to the Session object that is not JSON-serializable, that is a bug and should raise.  Most datetime objects are actually created inside the Session object as the timestamp in every header.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7295890",
    "html_url": "https://github.com/ipython/ipython/pull/2194#issuecomment-7295890",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2194",
    "id": 7295890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTU4OTA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-27T02:06:39Z",
    "updated_at": "2012-07-27T02:06:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just committed this NaN/Inf JSON fix.  If we want to pursue a custom JSON encoding class that can be done in another issue.  (I have NOT opened another issue to track that idea.  Perhaps @jasongrout can do it?)\n"
  }
]
